// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const INSTANT = 57422
const ALGORITHM = 57423
const NONE = 57424
const SHARED = 57425
const EXCLUSIVE = 57426
const SUBQUERY_AS_EXPR = 57427
const ID = 57428
const AT_ID = 57429
const AT_AT_ID = 57430
const HEX = 57431
const STRING = 57432
const NCHAR_STRING = 57433
const INTEGRAL = 57434
const FLOAT = 57435
const DECIMAL = 57436
const HEXNUM = 57437
const VALUE_ARG = 57438
const LIST_ARG = 57439
const COMMENT = 57440
const COMMENT_KEYWORD = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const JSON_PRETTY = 57444
const JSON_STORAGE_SIZE = 57445
const JSON_STORAGE_FREE = 57446
const JSON_CONTAINS = 57447
const JSON_CONTAINS_PATH = 57448
const JSON_EXTRACT = 57449
const JSON_KEYS = 57450
const JSON_OVERLAPS = 57451
const JSON_SEARCH = 57452
const JSON_VALUE = 57453
const EXTRACT = 57454
const NULL = 57455
const TRUE = 57456
const FALSE = 57457
const OFF = 57458
const DISCARD = 57459
const IMPORT = 57460
const ENABLE = 57461
const DISABLE = 57462
const TABLESPACE = 57463
const VIRTUAL = 57464
const STORED = 57465
const BOTH = 57466
const LEADING = 57467
const TRAILING = 57468
const EMPTY_FROM_CLAUSE = 57469
const LOWER_THAN_CHARSET = 57470
const CHARSET = 57471
const UNIQUE = 57472
const KEY = 57473
const EXPRESSION_PREC_SETTER = 57474
const OR = 57475
const XOR = 57476
const AND = 57477
const NOT = 57478
const BETWEEN = 57479
const CASE = 57480
const WHEN = 57481
const THEN = 57482
const ELSE = 57483
const END = 57484
const LE = 57485
const GE = 57486
const NE = 57487
const NULL_SAFE_EQUAL = 57488
const IS = 57489
const LIKE = 57490
const REGEXP = 57491
const RLIKE = 57492
const IN = 57493
const SHIFT_LEFT = 57494
const SHIFT_RIGHT = 57495
const DIV = 57496
const MOD = 57497
const UNARY = 57498
const COLLATE = 57499
const BINARY = 57500
const UNDERSCORE_ARMSCII8 = 57501
const UNDERSCORE_ASCII = 57502
const UNDERSCORE_BIG5 = 57503
const UNDERSCORE_BINARY = 57504
const UNDERSCORE_CP1250 = 57505
const UNDERSCORE_CP1251 = 57506
const UNDERSCORE_CP1256 = 57507
const UNDERSCORE_CP1257 = 57508
const UNDERSCORE_CP850 = 57509
const UNDERSCORE_CP852 = 57510
const UNDERSCORE_CP866 = 57511
const UNDERSCORE_CP932 = 57512
const UNDERSCORE_DEC8 = 57513
const UNDERSCORE_EUCJPMS = 57514
const UNDERSCORE_EUCKR = 57515
const UNDERSCORE_GB18030 = 57516
const UNDERSCORE_GB2312 = 57517
const UNDERSCORE_GBK = 57518
const UNDERSCORE_GEOSTD8 = 57519
const UNDERSCORE_GREEK = 57520
const UNDERSCORE_HEBREW = 57521
const UNDERSCORE_HP8 = 57522
const UNDERSCORE_KEYBCS2 = 57523
const UNDERSCORE_KOI8R = 57524
const UNDERSCORE_KOI8U = 57525
const UNDERSCORE_LATIN1 = 57526
const UNDERSCORE_LATIN2 = 57527
const UNDERSCORE_LATIN5 = 57528
const UNDERSCORE_LATIN7 = 57529
const UNDERSCORE_MACCE = 57530
const UNDERSCORE_MACROMAN = 57531
const UNDERSCORE_SJIS = 57532
const UNDERSCORE_SWE7 = 57533
const UNDERSCORE_TIS620 = 57534
const UNDERSCORE_UCS2 = 57535
const UNDERSCORE_UJIS = 57536
const UNDERSCORE_UTF16 = 57537
const UNDERSCORE_UTF16LE = 57538
const UNDERSCORE_UTF32 = 57539
const UNDERSCORE_UTF8 = 57540
const UNDERSCORE_UTF8MB4 = 57541
const UNDERSCORE_UTF8MB3 = 57542
const INTERVAL = 57543
const WINDOW_EXPR = 57544
const JSON_EXTRACT_OP = 57545
const JSON_UNQUOTE_EXTRACT_OP = 57546
const CREATE = 57547
const ALTER = 57548
const DROP = 57549
const RENAME = 57550
const ANALYZE = 57551
const ADD = 57552
const FLUSH = 57553
const CHANGE = 57554
const MODIFY = 57555
const DEALLOCATE = 57556
const REVERT = 57557
const SCHEMA = 57558
const TABLE = 57559
const INDEX = 57560
const VIEW = 57561
const TO = 57562
const IGNORE = 57563
const IF = 57564
const PRIMARY = 57565
const COLUMN = 57566
const SPATIAL = 57567
const FULLTEXT = 57568
const KEY_BLOCK_SIZE = 57569
const CHECK = 57570
const INDEXES = 57571
const ACTION = 57572
const CASCADE = 57573
const CONSTRAINT = 57574
const FOREIGN = 57575
const NO = 57576
const REFERENCES = 57577
const RESTRICT = 57578
const SHOW = 57579
const DESCRIBE = 57580
const EXPLAIN = 57581
const DATE = 57582
const ESCAPE = 57583
const REPAIR = 57584
const OPTIMIZE = 57585
const TRUNCATE = 57586
const COALESCE = 57587
const EXCHANGE = 57588
const REBUILD = 57589
const PARTITIONING = 57590
const REMOVE = 57591
const PREPARE = 57592
const EXECUTE = 57593
const MAXVALUE = 57594
const PARTITION = 57595
const REORGANIZE = 57596
const LESS = 57597
const THAN = 57598
const PROCEDURE = 57599
const TRIGGER = 57600
const VINDEX = 57601
const VINDEXES = 57602
const DIRECTORY = 57603
const NAME = 57604
const UPGRADE = 57605
const STATUS = 57606
const VARIABLES = 57607
const WARNINGS = 57608
const CASCADED = 57609
const DEFINER = 57610
const OPTION = 57611
const SQL = 57612
const UNDEFINED = 57613
const SEQUENCE = 57614
const MERGE = 57615
const TEMPORARY = 57616
const TEMPTABLE = 57617
const INVOKER = 57618
const SECURITY = 57619
const FIRST = 57620
const AFTER = 57621
const LAST = 57622
const VITESS_MIGRATION = 57623
const CANCEL = 57624
const RETRY = 57625
const COMPLETE = 57626
const CLEANUP = 57627
const THROTTLE = 57628
const UNTHROTTLE = 57629
const EXPIRE = 57630
const RATIO = 57631
const BEGIN = 57632
const START = 57633
const TRANSACTION = 57634
const COMMIT = 57635
const ROLLBACK = 57636
const SAVEPOINT = 57637
const RELEASE = 57638
const WORK = 57639
const BIT = 57640
const TINYINT = 57641
const SMALLINT = 57642
const MEDIUMINT = 57643
const INT = 57644
const INTEGER = 57645
const BIGINT = 57646
const INTNUM = 57647
const REAL = 57648
const DOUBLE = 57649
const FLOAT_TYPE = 57650
const DECIMAL_TYPE = 57651
const NUMERIC = 57652
const TIME = 57653
const TIMESTAMP = 57654
const DATETIME = 57655
const YEAR = 57656
const CHAR = 57657
const VARCHAR = 57658
const BOOL = 57659
const CHARACTER = 57660
const VARBINARY = 57661
const NCHAR = 57662
const TEXT = 57663
const TINYTEXT = 57664
const MEDIUMTEXT = 57665
const LONGTEXT = 57666
const BLOB = 57667
const TINYBLOB = 57668
const MEDIUMBLOB = 57669
const LONGBLOB = 57670
const JSON = 57671
const JSON_SCHEMA_VALID = 57672
const JSON_SCHEMA_VALIDATION_REPORT = 57673
const ENUM = 57674
const GEOMETRY = 57675
const POINT = 57676
const LINESTRING = 57677
const POLYGON = 57678
const GEOMETRYCOLLECTION = 57679
const MULTIPOINT = 57680
const MULTILINESTRING = 57681
const MULTIPOLYGON = 57682
const ASCII = 57683
const UNICODE = 57684
const NULLX = 57685
const AUTO_INCREMENT = 57686
const APPROXNUM = 57687
const SIGNED = 57688
const UNSIGNED = 57689
const ZEROFILL = 57690
const CODE = 57691
const COLLATION = 57692
const COLUMNS = 57693
const DATABASES = 57694
const ENGINES = 57695
const EVENT = 57696
const EXTENDED = 57697
const FIELDS = 57698
const FULL = 57699
const FUNCTION = 57700
const GTID_EXECUTED = 57701
const KEYSPACES = 57702
const OPEN = 57703
const PLUGINS = 57704
const PRIVILEGES = 57705
const PROCESSLIST = 57706
const SCHEMAS = 57707
const TABLES = 57708
const TRIGGERS = 57709
const USER = 57710
const VGTID_EXECUTED = 57711
const VITESS_KEYSPACES = 57712
const VITESS_METADATA = 57713
const VITESS_MIGRATIONS = 57714
const VITESS_REPLICATION_STATUS = 57715
const VITESS_SHARDS = 57716
const VITESS_TABLETS = 57717
const VITESS_TARGET = 57718
const VSCHEMA = 57719
const VITESS_THROTTLED_APPS = 57720
const NAMES = 57721
const GLOBAL = 57722
const SESSION = 57723
const ISOLATION = 57724
const LEVEL = 57725
const READ = 57726
const WRITE = 57727
const ONLY = 57728
const REPEATABLE = 57729
const COMMITTED = 57730
const UNCOMMITTED = 57731
const SERIALIZABLE = 57732
const CURRENT_TIMESTAMP = 57733
const DATABASE = 57734
const CURRENT_DATE = 57735
const NOW = 57736
const CURRENT_TIME = 57737
const LOCALTIME = 57738
const LOCALTIMESTAMP = 57739
const CURRENT_USER = 57740
const UTC_DATE = 57741
const UTC_TIME = 57742
const UTC_TIMESTAMP = 57743
const DAY = 57744
const DAY_HOUR = 57745
const DAY_MICROSECOND = 57746
const DAY_MINUTE = 57747
const DAY_SECOND = 57748
const HOUR = 57749
const HOUR_MICROSECOND = 57750
const HOUR_MINUTE = 57751
const HOUR_SECOND = 57752
const MICROSECOND = 57753
const MINUTE = 57754
const MINUTE_MICROSECOND = 57755
const MINUTE_SECOND = 57756
const MONTH = 57757
const QUARTER = 57758
const SECOND = 57759
const SECOND_MICROSECOND = 57760
const YEAR_MONTH = 57761
const WEEK = 57762
const REPLACE = 57763
const CONVERT = 57764
const CAST = 57765
const SUBSTR = 57766
const SUBSTRING = 57767
const SEPARATOR = 57768
const TIMESTAMPADD = 57769
const TIMESTAMPDIFF = 57770
const WEIGHT_STRING = 57771
const LTRIM = 57772
const RTRIM = 57773
const TRIM = 57774
const JSON_ARRAY = 57775
const JSON_OBJECT = 57776
const JSON_QUOTE = 57777
const JSON_DEPTH = 57778
const JSON_TYPE = 57779
const JSON_LENGTH = 57780
const JSON_VALID = 57781
const JSON_ARRAY_APPEND = 57782
const JSON_ARRAY_INSERT = 57783
const JSON_INSERT = 57784
const JSON_MERGE = 57785
const JSON_MERGE_PATCH = 57786
const JSON_MERGE_PRESERVE = 57787
const JSON_REMOVE = 57788
const JSON_REPLACE = 57789
const JSON_SET = 57790
const JSON_UNQUOTE = 57791
const COUNT = 57792
const AVG = 57793
const MAX = 57794
const MIN = 57795
const SUM = 57796
const GROUP_CONCAT = 57797
const BIT_AND = 57798
const BIT_OR = 57799
const BIT_XOR = 57800
const STD = 57801
const STDDEV = 57802
const STDDEV_POP = 57803
const STDDEV_SAMP = 57804
const VAR_POP = 57805
const VAR_SAMP = 57806
const VARIANCE = 57807
const REGEXP_INSTR = 57808
const REGEXP_LIKE = 57809
const REGEXP_REPLACE = 57810
const REGEXP_SUBSTR = 57811
const ExtractValue = 57812
const UpdateXML = 57813
const GET_LOCK = 57814
const RELEASE_LOCK = 57815
const RELEASE_ALL_LOCKS = 57816
const IS_FREE_LOCK = 57817
const IS_USED_LOCK = 57818
const LOCATE = 57819
const POSITION = 57820
const MATCH = 57821
const AGAINST = 57822
const BOOLEAN = 57823
const LANGUAGE = 57824
const WITH = 57825
const QUERY = 57826
const EXPANSION = 57827
const WITHOUT = 57828
const VALIDATION = 57829
const UNUSED = 57830
const ARRAY = 57831
const BYTE = 57832
const CUME_DIST = 57833
const DESCRIPTION = 57834
const DENSE_RANK = 57835
const EMPTY = 57836
const EXCEPT = 57837
const FIRST_VALUE = 57838
const GROUPING = 57839
const GROUPS = 57840
const JSON_TABLE = 57841
const LAG = 57842
const LAST_VALUE = 57843
const LATERAL = 57844
const LEAD = 57845
const NTH_VALUE = 57846
const NTILE = 57847
const OF = 57848
const OVER = 57849
const PERCENT_RANK = 57850
const RANK = 57851
const RECURSIVE = 57852
const ROW_NUMBER = 57853
const SYSTEM = 57854
const WINDOW = 57855
const ACTIVE = 57856
const ADMIN = 57857
const AUTOEXTEND_SIZE = 57858
const BUCKETS = 57859
const CLONE = 57860
const COLUMN_FORMAT = 57861
const COMPONENT = 57862
const DEFINITION = 57863
const ENFORCED = 57864
const ENGINE_ATTRIBUTE = 57865
const EXCLUDE = 57866
const FOLLOWING = 57867
const GEOMCOLLECTION = 57868
const GET_MASTER_PUBLIC_KEY = 57869
const HISTOGRAM = 57870
const HISTORY = 57871
const INACTIVE = 57872
const INVISIBLE = 57873
const LOCKED = 57874
const MASTER_COMPRESSION_ALGORITHMS = 57875
const MASTER_PUBLIC_KEY_PATH = 57876
const MASTER_TLS_CIPHERSUITES = 57877
const MASTER_ZSTD_COMPRESSION_LEVEL = 57878
const NESTED = 57879
const NETWORK_NAMESPACE = 57880
const NOWAIT = 57881
const NULLS = 57882
const OJ = 57883
const OLD = 57884
const OPTIONAL = 57885
const ORDINALITY = 57886
const ORGANIZATION = 57887
const OTHERS = 57888
const PARTIAL = 57889
const PATH = 57890
const PERSIST = 57891
const PERSIST_ONLY = 57892
const PRECEDING = 57893
const PRIVILEGE_CHECKS_USER = 57894
const PROCESS = 57895
const RANDOM = 57896
const REFERENCE = 57897
const REQUIRE_ROW_FORMAT = 57898
const RESOURCE = 57899
const RESPECT = 57900
const RESTART = 57901
const RETAIN = 57902
const REUSE = 57903
const ROLE = 57904
const SECONDARY = 57905
const SECONDARY_ENGINE = 57906
const SECONDARY_ENGINE_ATTRIBUTE = 57907
const SECONDARY_LOAD = 57908
const SECONDARY_UNLOAD = 57909
const SIMPLE = 57910
const SKIP = 57911
const SRID = 57912
const THREAD_PRIORITY = 57913
const TIES = 57914
const UNBOUNDED = 57915
const VCPU = 57916
const VISIBLE = 57917
const RETURNING = 57918
const FORMAT_BYTES = 57919
const FORMAT_PICO_TIME = 57920
const PS_CURRENT_THREAD_ID = 57921
const PS_THREAD_ID = 57922
const FORMAT = 57923
const TREE = 57924
const VITESS = 57925
const TRADITIONAL = 57926
const LOCAL = 57927
const LOW_PRIORITY = 57928
const NO_WRITE_TO_BINLOG = 57929
const LOGS = 57930
const ERROR = 57931
const GENERAL = 57932
const HOSTS = 57933
const OPTIMIZER_COSTS = 57934
const USER_RESOURCES = 57935
const SLOW = 57936
const CHANNEL = 57937
const RELAY = 57938
const EXPORT = 57939
const CURRENT = 57940
const ROW = 57941
const ROWS = 57942
const AVG_ROW_LENGTH = 57943
const CONNECTION = 57944
const CHECKSUM = 57945
const DELAY_KEY_WRITE = 57946
const ENCRYPTION = 57947
const ENGINE = 57948
const INSERT_METHOD = 57949
const MAX_ROWS = 57950
const MIN_ROWS = 57951
const PACK_KEYS = 57952
const PASSWORD = 57953
const FIXED = 57954
const DYNAMIC = 57955
const COMPRESSED = 57956
const REDUNDANT = 57957
const COMPACT = 57958
const ROW_FORMAT = 57959
const STATS_AUTO_RECALC = 57960
const STATS_PERSISTENT = 57961
const STATS_SAMPLE_PAGES = 57962
const STORAGE = 57963
const MEMORY = 57964
const DISK = 57965
const PARTITIONS = 57966
const LINEAR = 57967
const RANGE = 57968
const LIST = 57969
const SUBPARTITION = 57970
const SUBPARTITIONS = 57971
const HASH = 57972

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 48,
	13, 48,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 147,
	648, 147,
	-2, 155,
	-1, 48,
	132, 155,
	173, 155,
	335, 155,
	-2, 500,
	-1, 55,
	35, 742,
	235, 742,
	246, 742,
	281, 756,
	282, 756,
	-2, 744,
	-1, 60,
	237, 773,
	-2, 771,
	-1, 114,
	234, 1416,
	-2, 121,
	-1, 116,
	1, 148,
	648, 148,
	-2, 155,
	-1, 127,
	133, 386,
	240, 386,
	-2, 489,
	-1, 146,
	132, 155,
	173, 155,
	335, 155,
	-2, 509,
	-1, 759,
	86, 1433,
	-2, 1280,
	-1, 760,
	86, 1434,
	218, 1438,
	-2, 1281,
	-1, 789,
	218, 1437,
	-2, 39,
	-1, 865,
	59, 841,
	-2, 856,
	-1, 951,
	245, 40,
	250, 40,
	-2, 397,
	-1, 1036,
	1, 557,
	648, 557,
	-2, 155,
	-1, 1330,
	218, 1438,
	-2, 1281,
	-1, 1470,
	59, 842,
	-2, 861,
	-1, 1471,
	59, 843,
	-2, 862,
	-1, 1523,
	132, 155,
	173, 155,
	335, 155,
	-2, 436,
	-1, 1602,
	133, 386,
	240, 386,
	-2, 489,
	-1, 1611,
	245, 41,
	250, 41,
	-2, 398,
	-1, 1958,
	218, 1442,
	-2, 1436,
	-1, 1959,
	218, 1438,
	-2, 1434,
	-1, 2054,
	132, 155,
	173, 155,
	335, 155,
	-2, 437,
	-1, 2061,
	25, 176,
	-2, 178,
	-1, 2410,
	77, 95,
	87, 95,
	-2, 918,
	-1, 2478,
	623, 669,
	-2, 643,
	-1, 2640,
	49, 1375,
	-2, 1369,
	-1, 2929,
	7, 54,
	18, 54,
	20, 54,
	88, 54,
	-2, 890,
	-1, 3281,
	623, 669,
	-2, 657,
	-1, 3369,
	22, 1791,
	32, 1791,
	174, 1791,
	257, 1791,
	315, 1791,
	316, 1791,
	317, 1791,
	318, 1791,
	319, 1791,
	320, 1791,
	321, 1791,
	323, 1791,
	324, 1791,
	325, 1791,
	326, 1791,
	327, 1791,
	328, 1791,
	329, 1791,
	330, 1791,
	331, 1791,
	332, 1791,
	333, 1791,
	334, 1791,
	336, 1791,
	338, 1791,
	339, 1791,
	340, 1791,
	341, 1791,
	342, 1791,
	343, 1791,
	344, 1791,
	345, 1791,
	346, 1791,
	349, 1791,
	350, 1791,
	351, 1791,
	352, 1791,
	353, 1791,
	354, 1791,
	355, 1791,
	356, 1791,
	357, 1791,
	498, 1791,
	-2, 601,
}

const yyPrivate = 57344

const yyLast = 46735

var yyAct = [...]int{
	760, 3036, 797, 3037, 790, 3035, 3440, 1825, 3451, 3262,
	668, 3346, 3409, 3367, 3410, 791, 2866, 3006, 2051, 1526,
	3312, 3335, 2789, 648, 2695, 2702, 3246, 2003, 2752, 3195,
	1983, 2743, 2757, 1099, 2754, 3, 2653, 2753, 3244, 2993,
	763, 37, 2751, 2314, 1985, 2756, 2755, 654, 2656, 3064,
	3234, 187, 2342, 2772, 187, 858, 2710, 625, 2771, 764,
	2603, 1485, 631, 2121, 187, 2900, 1448, 650, 880, 2657,
	2654, 3069, 187, 2894, 2538, 2404, 2920, 758, 757, 678,
	2774, 2381, 2651, 2007, 2641, 2023, 2368, 187, 1949, 2084,
	646, 2443, 2475, 2886, 1580, 2522, 2794, 2109, 2089, 2444,
	2152, 2445, 2393, 155, 2039, 2027, 38, 1101, 2374, 36,
	2360, 1472, 631, 187, 631, 2028, 913, 1954, 862, 1048,
	866, 881, 860, 2344, 2514, 1946, 1920, 647, 1077, 1779,
	1840, 1821, 2130, 2108, 642, 1609, 2169, 1627, 883, 2437,
	1515, 2091, 946, 141, 941, 2412, 1919, 2015, 1494, 660,
	91, 2030, 1452, 1342, 1728, 1844, 1798, 1270, 1724, 95,
	96, 1616, 983, 917, 952, 959, 920, 2106, 921, 1708,
	2080, 947, 948, 1514, 1499, 655, 899, 901, 1916, 872,
	1302, 1733, 1091, 159, 119, 1326, 868, 117, 98, 867,
	118, 1097, 1575, 1853, 1601, 124, 125, 1032, 949, 870,
	1975, 2008, 894, 76, 85, 97, 637, 1346, 89, 3271,
	2468, 3441, 1955, 2762, 2123, 2124, 2125, 2123, 2994, 2740,
	3297, 2498, 2497, 2167, 620, 2466, 2759, 1693, 869, 77,
	8, 120, 1350, 888, 7, 893, 6, 90, 2762, 2949,
	2986, 874, 614, 126, 87, 87, 3298, 87, 3393, 2530,
	988, 2531, 3293, 1786, 914, 87, 620, 581, 1785, 1801,
	803, 804, 805, 3292, 3040, 1980, 1981, 614, 1784, 1783,
	1782, 2760, 638, 1781, 1764, 640, 3388, 641, 2340, 2637,
	2488, 861, 859, 939, 908, 1773, 3413, 930, 2607, 925,
	2370, 3461, 875, 2766, 963, 3408, 2760, 3431, 2871, 2870,
	120, 937, 882, 2491, 936, 3247, 985, 935, 2156, 611,
	909, 2154, 102, 2315, 1271, 1791, 996, 3040, 2766, 1002,
	1003, 1004, 938, 1007, 1008, 1009, 1010, 962, 2813, 1013,
	1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	1024, 1025, 1026, 1027, 1028, 1029, 989, 992, 993, 3039,
	1287, 1271, 2155, 104, 105, 3397, 108, 597, 3293, 114,
	3191, 1005, 183, 3395, 3190, 576, 78, 987, 120, 595,
	907, 761, 762, 2999, 1479, 986, 3000, 3422, 803, 804,
	805, 3396, 3353, 78, 3201, 854, 855, 856, 857, 3394,
	2384, 865, 907, 761, 762, 3391, 3018, 3007, 3336, 2211,
	3343, 2149, 3039, 3200, 2763, 3017, 1830, 3372, 2833, 592,
	78, 1590, 2341, 614, 614, 2385, 3377, 2691, 606, 896,
	897, 1281, 2692, 2693, 2529, 3347, 2100, 3276, 2208, 2763,
	3375, 2045, 3082, 602, 2506, 614, 2046, 2047, 2505, 3381,
	3382, 1516, 1067, 1517, 87, 615, 852, 2712, 2713, 929,
	1094, 2094, 931, 851, 3376, 1055, 2011, 2469, 1281, 2421,
	1056, 87, 2420, 78, 2209, 2422, 80, 1982, 3263, 2433,
	615, 1031, 1072, 1073, 2064, 2063, 3414, 2791, 1035, 1068,
	1061, 1055, 1284, 614, 1285, 1286, 1056, 934, 87, 1041,
	1042, 2377, 2378, 614, 1054, 614, 1053, 3415, 2821, 2819,
	3353, 628, 582, 1714, 584, 598, 1513, 617, 2572, 616,
	588, 626, 586, 590, 599, 591, 1454, 585, 1772, 596,
	1277, 1044, 587, 600, 601, 604, 607, 608, 609, 605,
	603, 2897, 594, 618, 632, 2011, 1006, 2795, 1774, 1775,
	1776, 87, 2515, 1683, 1456, 932, 3223, 2131, 3224, 934,
	2170, 926, 2476, 2784, 2711, 1894, 1093, 1277, 928, 927,
	1269, 2785, 2792, 2501, 1069, 1062, 2714, 1074, 1037, 2175,
	578, 3443, 1709, 1303, 1070, 1071, 187, 1075, 187, 1088,
	633, 187, 2187, 1076, 2188, 2517, 2189, 1684, 853, 1685,
	900, 2988, 2134, 2093, 3389, 2810, 1304, 1305, 1306, 1307,
	1308, 1309, 1310, 1312, 1311, 1313, 1314, 932, 2987, 2190,
	972, 631, 2793, 631, 631, 1012, 615, 615, 2181, 2178,
	2180, 2179, 2182, 2183, 2176, 2606, 1011, 2174, 2172, 919,
	934, 1030, 3175, 631, 631, 942, 3044, 2024, 615, 943,
	2009, 2010, 943, 1886, 1875, 1876, 1877, 1878, 1888, 1879,
	1880, 1881, 1893, 1889, 1882, 1883, 1890, 1891, 1892, 1884,
	1885, 1887, 970, 933, 1330, 2984, 2573, 2698, 981, 2173,
	1263, 980, 1459, 979, 978, 37, 977, 910, 904, 902,
	1320, 1321, 1322, 1323, 182, 976, 615, 1594, 975, 974,
	1334, 969, 982, 1338, 2209, 1034, 615, 2714, 615, 910,
	904, 902, 1051, 3462, 1057, 1058, 1059, 1060, 121, 1715,
	2153, 1328, 2699, 1716, 1717, 1065, 3420, 1317, 1317, 2009,
	2010, 164, 3270, 2467, 3455, 933, 1512, 1095, 1096, 918,
	1089, 1725, 940, 2521, 955, 918, 918, 619, 2701, 2470,
	916, 1615, 954, 2107, 998, 1276, 1273, 1274, 1275, 1280,
	1282, 1279, 2696, 1278, 895, 3349, 973, 2518, 612, 2160,
	2503, 991, 2159, 1272, 2426, 2345, 2347, 954, 1721, 2712,
	2713, 990, 1252, 613, 800, 800, 2697, 800, 2983, 161,
	3348, 162, 1276, 1273, 1274, 1275, 1280, 1282, 1279, 2435,
	1278, 1033, 1257, 999, 2764, 2765, 2733, 2490, 1330, 2500,
	1272, 181, 2534, 2223, 1253, 1254, 933, 2768, 971, 2703,
	1588, 1587, 1324, 1586, 2486, 961, 1722, 1584, 2898, 2764,
	2765, 580, 575, 2151, 3259, 1695, 1694, 1696, 1697, 1698,
	3016, 961, 2768, 2513, 1318, 1319, 2512, 2947, 2948, 3038,
	1446, 2489, 2936, 2916, 2417, 1443, 2380, 2323, 1614, 2097,
	961, 1833, 187, 961, 116, 2524, 631, 631, 86, 1503,
	2523, 1419, 3380, 77, 1043, 1266, 1040, 1046, 2375, 1264,
	1314, 1265, 187, 3349, 1052, 86, 2711, 2210, 2052, 1317,
	2690, 877, 1713, 903, 1084, 1348, 1086, 1349, 2714, 2098,
	1092, 631, 3038, 81, 2524, 187, 1078, 2096, 3348, 2523,
	1462, 1734, 86, 1050, 1466, 903, 3379, 631, 3284, 1447,
	862, 961, 165, 187, 1352, 1064, 960, 1463, 984, 2979,
	1478, 171, 111, 2910, 1083, 1085, 1066, 1460, 2171, 2346,
	1718, 2099, 960, 1518, 1854, 1267, 2811, 964, 954, 2855,
	3453, 2095, 966, 3454, 2558, 3452, 967, 965, 1855, 1845,
	631, 960, 2459, 3423, 960, 86, 997, 954, 957, 958,
	994, 918, 1845, 1330, 2240, 951, 955, 968, 1286, 631,
	631, 3078, 631, 1447, 631, 631, 2954, 631, 631, 631,
	631, 631, 631, 2953, 1464, 1465, 950, 2138, 95, 96,
	1330, 1624, 112, 1330, 631, 1330, 187, 2700, 1425, 1426,
	1427, 1428, 1429, 1453, 1309, 1310, 1312, 1311, 1313, 1314,
	1621, 1623, 960, 1613, 1287, 2150, 187, 98, 954, 957,
	958, 1081, 918, 2148, 2146, 1082, 951, 955, 1710, 631,
	1711, 187, 2828, 1712, 3314, 1087, 961, 1656, 156, 1036,
	1659, 1079, 1661, 972, 1049, 631, 1735, 187, 1307, 1308,
	1309, 1310, 1312, 1311, 1313, 1314, 2143, 1450, 970, 1080,
	1678, 1285, 1286, 187, 1461, 3252, 1607, 859, 1481, 2143,
	187, 1484, 3416, 861, 1504, 1852, 2937, 3315, 3457, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 631, 1600,
	3417, 3183, 1039, 2147, 1045, 1619, 3182, 1047, 1479, 1509,
	1510, 1591, 1592, 1593, 3463, 3279, 2145, 1629, 3253, 1630,
	1660, 1632, 1634, 1803, 1287, 1638, 1640, 1642, 1644, 1646,
	1618, 3173, 1583, 1617, 1617, 3029, 3028, 1804, 1315, 1316,
	1802, 3013, 1303, 3014, 2533, 2961, 2960, 960, 2950, 1597,
	1598, 1596, 964, 954, 1610, 2741, 1284, 966, 1285, 1286,
	2729, 967, 965, 2441, 1730, 1304, 1305, 1306, 1307, 1308,
	1309, 1310, 1312, 1311, 1313, 1314, 2440, 2103, 1668, 1669,
	1704, 1688, 2704, 1687, 1674, 1675, 2708, 1467, 2215, 2216,
	2217, 1738, 1736, 1737, 2707, 1287, 1686, 1703, 1742, 3464,
	1744, 1745, 1746, 1747, 1676, 2275, 1741, 1751, 1793, 1795,
	1796, 1664, 1726, 1748, 1749, 1750, 1670, 1303, 1287, 1763,
	157, 2539, 803, 804, 805, 1667, 3278, 169, 2709, 1666,
	120, 937, 1794, 2705, 936, 1665, 1636, 935, 2706, 2279,
	1304, 1305, 1306, 1307, 1308, 1309, 1310, 1312, 1311, 1313,
	1314, 3256, 1701, 1589, 1690, 1740, 1284, 3255, 1285, 1286,
	1287, 1702, 631, 631, 3254, 2560, 1287, 1488, 1303, 177,
	2222, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1289, 1479,
	187, 1762, 620, 2016, 2017, 1287, 2944, 2267, 3178, 1761,
	1287, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1312, 1311,
	1313, 1314, 1479, 3163, 2541, 158, 163, 160, 166, 167,
	168, 170, 172, 173, 174, 175, 1700, 1489, 1689, 3162,
	3077, 176, 178, 179, 180, 3075, 3025, 1284, 631, 1285,
	1286, 1828, 1828, 1826, 1826, 1807, 2958, 1829, 1330, 1305,
	1306, 1307, 1308, 1309, 1310, 1312, 1311, 1313, 1314, 631,
	1284, 2943, 1285, 1286, 2796, 1330, 1304, 1305, 1306, 1307,
	1308, 1309, 1310, 1312, 1311, 1313, 1314, 1287, 1799, 3418,
	2551, 2550, 2549, 2543, 3267, 2547, 1479, 2542, 1287, 2540,
	631, 631, 620, 1850, 2545, 1328, 2424, 1851, 1446, 2732,
	2731, 1797, 1284, 2544, 1285, 1286, 2450, 2438, 1284, 1445,
	1285, 1286, 1846, 1951, 2165, 2118, 1287, 2164, 1948, 2119,
	2546, 2548, 1950, 2006, 2116, 1988, 2237, 1284, 2117, 1285,
	1286, 1508, 1284, 2114, 1285, 1286, 1765, 2115, 1731, 798,
	1959, 1699, 1287, 1691, 1681, 1677, 1673, 1672, 1806, 1525,
	1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817,
	1818, 1819, 1820, 1769, 1770, 1303, 1906, 1447, 1800, 1671,
	1490, 3427, 1479, 1956, 1090, 187, 1917, 1951, 1287, 2788,
	631, 1256, 2366, 3442, 3404, 1479, 1283, 1479, 1304, 1305,
	1306, 1307, 1308, 1309, 1310, 1312, 1311, 1313, 1314, 2236,
	1805, 1479, 1287, 101, 187, 2366, 3342, 631, 2277, 1284,
	620, 1285, 1286, 1947, 100, 2230, 99, 187, 1283, 1479,
	1284, 631, 1285, 1286, 1959, 2229, 187, 92, 187, 1908,
	187, 187, 1662, 1832, 94, 92, 1977, 1513, 93, 2366,
	3322, 3209, 1917, 2366, 3318, 631, 93, 1958, 1284, 3208,
	1285, 1286, 1993, 3167, 1994, 3305, 1479, 1956, 3166, 1961,
	1962, 3425, 1479, 2366, 3272, 2061, 3005, 1707, 1856, 1857,
	1858, 1859, 1839, 1841, 1284, 2477, 1285, 1286, 2455, 1287,
	2997, 3269, 1870, 2060, 1479, 3359, 1479, 1287, 95, 96,
	2389, 1287, 87, 1479, 1957, 3186, 1479, 2366, 3174, 1739,
	631, 1479, 2997, 1479, 1999, 2026, 1743, 2909, 95, 96,
	1284, 2144, 1285, 1286, 3405, 2366, 2995, 1754, 1755, 1756,
	1757, 1758, 1759, 1760, 1547, 2143, 1479, 631, 2914, 1479,
	2685, 1958, 100, 631, 1284, 1283, 1285, 1286, 2288, 1479,
	2209, 2070, 2071, 2072, 2073, 2390, 2065, 2055, 2066, 2067,
	2068, 2069, 874, 1960, 1987, 2413, 1963, 1964, 2722, 2721,
	2037, 2056, 3357, 1479, 2076, 2077, 2078, 2079, 1287, 2143,
	3355, 1479, 2718, 2719, 3232, 1479, 2718, 2717, 2021, 94,
	631, 2382, 2132, 2001, 2086, 631, 2382, 2059, 2911, 631,
	631, 2390, 1479, 2209, 2499, 2019, 2092, 1579, 2480, 2473,
	2474, 1283, 1998, 2366, 2365, 2362, 2043, 908, 2042, 2041,
	3310, 1284, 2413, 1285, 1286, 3283, 2058, 2057, 2414, 1284,
	94, 1285, 1286, 1284, 2366, 1285, 1286, 187, 2416, 2233,
	1479, 1287, 2390, 909, 187, 1287, 1831, 1479, 1479, 1287,
	2875, 187, 187, 2129, 2720, 187, 2625, 187, 2102, 1579,
	1578, 3230, 1479, 2390, 187, 1524, 1523, 2744, 2909, 2087,
	1287, 187, 2082, 2083, 2044, 2652, 1535, 2233, 2101, 2137,
	2288, 1287, 2140, 2105, 2141, 2414, 2909, 2113, 2233, 2264,
	2263, 2143, 2126, 2014, 1483, 2209, 1978, 187, 1831, 1777,
	1720, 963, 631, 1511, 2087, 2135, 2157, 2139, 945, 2136,
	1284, 1617, 1285, 1286, 944, 864, 1780, 1303, 1480, 1482,
	1299, 3385, 1300, 2158, 3227, 1479, 2161, 2447, 3213, 1479,
	2162, 2163, 2883, 1479, 962, 3325, 1301, 1315, 1316, 1298,
	1304, 1305, 1306, 1307, 1308, 1309, 1310, 1312, 1311, 1313,
	1314, 3197, 3437, 2880, 1479, 1486, 1287, 3164, 2220, 1548,
	3089, 2978, 1330, 3435, 1959, 3171, 2168, 1287, 2975, 2956,
	2838, 2837, 1581, 1284, 2085, 1285, 1286, 1284, 1287, 1285,
	1286, 1284, 2786, 1285, 1286, 101, 2200, 2201, 2228, 2746,
	2742, 2203, 1799, 87, 2481, 2081, 100, 2227, 99, 2075,
	2204, 1287, 1284, 2074, 1285, 1286, 1706, 94, 1612, 2225,
	1287, 2193, 1608, 1284, 1287, 1285, 1286, 1561, 1564, 1565,
	1566, 1567, 1568, 1569, 1287, 1570, 1571, 1572, 1573, 1574,
	1549, 1550, 1551, 1552, 1533, 1534, 1562, 1287, 1536, 3204,
	1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1035,
	2247, 1546, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560,
	3411, 2219, 2980, 2221, 1287, 2207, 1479, 2262, 1577, 113,
	2790, 1958, 1287, 3198, 3291, 2446, 2100, 1287, 1991, 2962,
	3218, 1287, 1800, 2924, 2878, 1479, 3287, 1287, 1284, 2218,
	1285, 1286, 1287, 2843, 1479, 2921, 2922, 2826, 1479, 1284,
	1287, 1285, 1286, 2738, 1492, 2737, 1767, 2320, 1479, 187,
	1284, 1287, 1285, 1286, 2736, 2652, 2460, 187, 1957, 1287,
	2303, 1479, 1828, 2447, 1826, 1652, 2194, 2351, 631, 2239,
	2963, 2964, 2965, 1284, 1287, 1285, 1286, 2927, 2676, 631,
	2399, 2400, 1284, 2018, 1285, 1286, 1284, 2931, 1285, 1286,
	2926, 2671, 2022, 2670, 2025, 2885, 1284, 1780, 1285, 1286,
	2881, 2349, 3199, 187, 2295, 1479, 2005, 187, 1768, 1284,
	1491, 1285, 1286, 1487, 2674, 2853, 1653, 1654, 1655, 2675,
	3059, 182, 3058, 2849, 1997, 2273, 2915, 1287, 2672, 2386,
	2630, 2966, 2629, 2673, 37, 2442, 1284, 3251, 1285, 1286,
	1563, 1287, 2835, 2406, 1284, 121, 1285, 1286, 2352, 1284,
	2354, 1285, 1286, 1284, 1287, 1285, 1286, 2834, 164, 1284,
	2367, 1285, 1286, 3068, 1284, 2902, 1285, 1286, 3070, 2905,
	3057, 631, 1284, 2901, 1285, 1286, 2639, 187, 2967, 2968,
	2969, 2363, 1719, 1284, 187, 1285, 1286, 2642, 2644, 2376,
	850, 1284, 1648, 1285, 1286, 878, 2645, 2716, 631, 2431,
	1453, 2339, 2451, 879, 1001, 631, 1284, 1000, 1285, 1286,
	2831, 2804, 2405, 2446, 631, 1854, 161, 2527, 162, 2359,
	2434, 2436, 2364, 92, 2334, 2472, 1255, 1287, 2427, 1855,
	1330, 2487, 2907, 2379, 93, 121, 2411, 2333, 181, 1649,
	1650, 1651, 92, 187, 187, 187, 187, 187, 94, 94,
	2496, 2016, 2017, 93, 2415, 2418, 3449, 2734, 2092, 1284,
	2197, 1285, 1286, 3364, 187, 187, 3268, 3193, 2425, 2428,
	2715, 1287, 2403, 1284, 2002, 1285, 1286, 2494, 886, 887,
	187, 1287, 2628, 101, 2186, 2439, 1284, 2185, 1285, 1286,
	2627, 99, 2184, 1780, 100, 2887, 99, 2213, 3239, 3238,
	2177, 631, 2448, 3221, 3076, 94, 3074, 2191, 2192, 1287,
	2332, 2196, 2457, 3073, 2461, 2462, 2463, 2536, 3066, 2976,
	2199, 2493, 2456, 101, 3065, 2906, 2449, 2202, 2904, 2747,
	2127, 2452, 2453, 1595, 100, 1287, 99, 885, 1848, 100,
	1600, 101, 1849, 2895, 2482, 2483, 103, 3048, 631, 165,
	2382, 2362, 100, 2205, 2331, 1477, 1473, 1287, 171, 1284,
	2492, 1285, 1286, 2574, 2330, 2265, 1989, 1477, 1473, 2554,
	1474, 1287, 3439, 3438, 2552, 1505, 1912, 1496, 106, 107,
	2516, 3438, 1474, 2535, 3439, 3257, 631, 2942, 2567, 876,
	88, 1, 2329, 2519, 631, 1995, 1996, 1476, 2525, 1475,
	2946, 2526, 3374, 1284, 1944, 1285, 1286, 1470, 1471, 1476,
	593, 1475, 1979, 1284, 1287, 1285, 1286, 1451, 2318, 631,
	3412, 3370, 2537, 3371, 1692, 1682, 3008, 2613, 2584, 1973,
	2586, 2608, 2553, 187, 2555, 1918, 3194, 631, 1480, 1976,
	2312, 1284, 2750, 1285, 1286, 2133, 2597, 2598, 2599, 2600,
	2610, 631, 2974, 2090, 2311, 1330, 953, 146, 631, 631,
	1330, 187, 187, 187, 187, 187, 1947, 1284, 1947, 1285,
	1286, 1287, 2000, 187, 2053, 156, 1287, 2054, 187, 2576,
	3338, 187, 110, 187, 2613, 2582, 187, 187, 187, 1284,
	911, 1285, 1286, 109, 956, 1063, 2664, 2310, 866, 2128,
	2998, 2432, 2655, 1284, 2062, 1285, 1286, 2655, 2633, 1530,
	2612, 2684, 2632, 1528, 2609, 2658, 2611, 1529, 1466, 2406,
	2649, 2592, 2593, 2594, 2595, 2596, 1527, 1532, 1531, 1287,
	2812, 187, 2266, 2854, 1287, 1771, 627, 2620, 2402, 1287,
	2631, 643, 621, 1287, 631, 2634, 1284, 1330, 1285, 1286,
	2646, 2647, 631, 184, 2309, 1287, 2624, 187, 2686, 2308,
	1519, 2687, 1497, 2867, 868, 995, 2665, 867, 583, 2668,
	2723, 187, 2166, 2104, 2677, 589, 1335, 2666, 2667, 2770,
	2669, 2621, 2622, 2623, 1766, 2626, 2419, 2681, 2682, 187,
	906, 2688, 187, 1287, 2749, 1730, 2663, 898, 95, 96,
	2694, 1990, 2353, 1284, 905, 1285, 1286, 2660, 1284, 2899,
	1285, 1286, 2307, 2724, 2638, 2726, 2725, 2306, 2640, 2369,
	2643, 2636, 2305, 2410, 3250, 3067, 2304, 3323, 2808, 2429,
	1493, 2874, 2238, 1843, 1325, 1287, 2777, 2778, 2298, 1287,
	2031, 884, 3043, 1287, 890, 1792, 890, 157, 2092, 2769,
	652, 651, 649, 2355, 169, 2781, 2383, 1290, 792, 2343,
	2748, 1284, 1506, 1285, 1286, 2394, 1284, 2392, 1285, 1286,
	2391, 1284, 631, 1285, 1286, 1284, 2297, 1285, 1286, 2727,
	2728, 2195, 2800, 2797, 2038, 2799, 2923, 1284, 2919, 1285,
	1286, 3366, 2033, 2458, 2807, 2029, 177, 187, 2361, 749,
	661, 653, 645, 2817, 2814, 2815, 748, 2816, 747, 2939,
	2818, 2776, 2820, 3350, 2822, 2802, 2803, 2869, 2296, 2502,
	2787, 2504, 2293, 2430, 2873, 1284, 2292, 1285, 1286, 2783,
	1268, 1469, 158, 163, 160, 166, 167, 168, 170, 172,
	173, 174, 175, 1287, 639, 924, 2809, 3274, 176, 178,
	179, 180, 2212, 2832, 1468, 1873, 187, 1874, 3281, 2507,
	2508, 2509, 2510, 2511, 2758, 2992, 2739, 1284, 2478, 1285,
	1286, 1284, 2120, 1285, 1286, 1284, 63, 1285, 1286, 41,
	1780, 2520, 3245, 2893, 2891, 187, 2888, 2889, 3311, 746,
	743, 3045, 3046, 2896, 3047, 2903, 2528, 1287, 2604, 2605,
	3294, 3295, 742, 3296, 187, 1901, 2908, 187, 187, 187,
	2928, 634, 3387, 1259, 892, 2925, 2918, 631, 631, 32,
	31, 30, 29, 2226, 28, 1287, 2291, 2231, 23, 22,
	2234, 2933, 2235, 21, 20, 19, 25, 2242, 2934, 2935,
	2932, 2244, 2245, 2246, 2981, 2982, 2777, 2778, 2940, 2941,
	18, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260,
	2261, 631, 631, 631, 631, 3002, 3003, 17, 16, 2761,
	3407, 2957, 3448, 2959, 115, 1284, 50, 1285, 1286, 47,
	2289, 1287, 45, 123, 122, 48, 44, 2268, 2269, 2270,
	2271, 2272, 1038, 2274, 1287, 42, 27, 2276, 1287, 26,
	15, 2281, 2282, 14, 2283, 13, 12, 2286, 2285, 2287,
	11, 10, 9, 2290, 3004, 5, 4, 2294, 35, 34,
	1287, 2299, 2300, 2301, 2302, 1287, 33, 1262, 24, 1284,
	2, 1285, 1286, 2465, 2313, 2122, 2316, 2317, 0, 0,
	0, 2951, 2952, 0, 2319, 2321, 0, 0, 0, 0,
	0, 2324, 2325, 2326, 2327, 2328, 0, 1284, 0, 1285,
	1286, 187, 2335, 2336, 2284, 2337, 2000, 0, 2338, 3020,
	0, 3024, 0, 0, 0, 0, 0, 2280, 2350, 0,
	1330, 2278, 0, 0, 0, 631, 3032, 631, 0, 0,
	0, 3062, 0, 2985, 0, 0, 0, 2989, 2990, 2991,
	3041, 0, 0, 2243, 1828, 0, 1826, 0, 2232, 3091,
	0, 0, 0, 1284, 0, 1285, 1286, 0, 0, 3083,
	0, 0, 0, 0, 37, 0, 1284, 2655, 1285, 1286,
	1284, 0, 1285, 1286, 3085, 3072, 0, 3063, 0, 0,
	3071, 2658, 0, 0, 3087, 2658, 0, 2735, 0, 631,
	3079, 3081, 1284, 0, 1285, 1286, 0, 1284, 0, 1285,
	1286, 0, 187, 0, 0, 631, 0, 0, 2395, 2398,
	2399, 2400, 2396, 2773, 2397, 2401, 3172, 0, 631, 0,
	3095, 0, 0, 0, 3092, 3093, 0, 2782, 2395, 2398,
	2399, 2400, 2396, 0, 2397, 2401, 0, 0, 2921, 2922,
	0, 0, 3168, 0, 3169, 2798, 3184, 3215, 2801, 3216,
	3170, 3196, 0, 1828, 3176, 1826, 0, 0, 3219, 0,
	0, 3189, 3188, 0, 0, 0, 0, 631, 0, 0,
	0, 631, 631, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	631, 0, 0, 0, 0, 0, 0, 0, 0, 3220,
	0, 0, 0, 0, 0, 0, 3222, 0, 0, 0,
	3225, 3240, 3241, 3243, 0, 3242, 1288, 3261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3258, 0, 3249, 0, 0, 0, 0, 0, 0,
	0, 0, 2658, 2892, 0, 1343, 0, 0, 3264, 3179,
	3180, 3181, 0, 0, 0, 0, 3260, 0, 0, 0,
	0, 0, 0, 0, 0, 631, 0, 0, 2562, 2563,
	2564, 2565, 2566, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 2571, 0, 0,
	0, 0, 3266, 0, 0, 0, 0, 0, 631, 187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3277, 3285, 3280, 0, 0, 3282,
	0, 2955, 0, 0, 37, 3273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 631, 0,
	2970, 0, 0, 2971, 2972, 2973, 0, 0, 1330, 0,
	631, 0, 0, 0, 0, 0, 3300, 0, 0, 3301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3289, 0, 3309, 0, 631, 631, 0, 0, 3299, 0,
	0, 0, 0, 0, 3316, 0, 0, 0, 0, 0,
	0, 0, 0, 3326, 3324, 2655, 631, 3352, 2661, 37,
	3329, 0, 3351, 3337, 3334, 0, 3331, 3196, 3339, 3330,
	187, 631, 0, 1547, 3328, 2679, 2680, 3333, 3332, 0,
	0, 0, 0, 3321, 0, 0, 0, 3362, 0, 0,
	0, 0, 0, 0, 0, 0, 3383, 0, 3373, 3378,
	3365, 0, 0, 0, 0, 0, 0, 1495, 3352, 3392,
	0, 0, 0, 3351, 631, 3390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1338, 0, 0,
	0, 0, 0, 0, 3401, 0, 631, 0, 3406, 0,
	0, 0, 0, 0, 0, 1582, 0, 0, 0, 0,
	0, 0, 0, 631, 0, 631, 0, 0, 3421, 0,
	1828, 0, 1826, 3419, 0, 3433, 0, 0, 3430, 3429,
	0, 0, 0, 3436, 3434, 3432, 0, 0, 0, 0,
	0, 0, 0, 0, 3352, 3444, 0, 0, 0, 3351,
	0, 0, 0, 3450, 0, 0, 0, 0, 3456, 3458,
	0, 0, 0, 2806, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1828, 1535, 1826, 3467, 3468, 3465,
	3216, 3466, 0, 2823, 2824, 2825, 0, 2827, 2829, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2836, 0, 0, 0, 0, 2840, 2841, 2842, 2844,
	2845, 2846, 2847, 0, 0, 2848, 0, 2850, 2851, 2852,
	0, 0, 2856, 2857, 2858, 2859, 2860, 2861, 2862, 2863,
	2864, 2865, 1732, 0, 0, 0, 0, 0, 0, 0,
	2872, 0, 0, 2876, 0, 2877, 2879, 0, 2882, 2884,
	0, 0, 0, 0, 0, 2890, 0, 0, 1548, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 87, 0, 0, 0, 0, 0, 793, 801, 802,
	803, 804, 805, 794, 796, 0, 0, 0, 795, 0,
	2912, 2913, 0, 0, 2917, 0, 0, 0, 0, 0,
	0, 798, 806, 807, 0, 0, 0, 0, 0, 0,
	0, 0, 2929, 2930, 0, 0, 1561, 1564, 1565, 1566,
	1567, 1568, 1569, 0, 1570, 1571, 1572, 1573, 1574, 1549,
	1550, 1551, 1552, 1533, 1534, 1562, 0, 1536, 0, 1537,
	1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 2779, 2780,
	1546, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 0,
	808, 809, 810, 811, 812, 813, 814, 815, 816, 817,
	818, 819, 820, 821, 822, 823, 824, 825, 826, 827,
	828, 829, 830, 831, 832, 833, 834, 835, 836, 837,
	838, 839, 840, 841, 842, 843, 844, 845, 846, 847,
	848, 849, 2996, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 799, 79,
	3015, 0, 0, 3019, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1787, 1788, 1789, 1790, 0,
	3030, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3034, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3042, 0, 1563,
	0, 0, 0, 0, 0, 3049, 0, 0, 0, 0,
	0, 0, 0, 0, 1834, 1835, 863, 0, 79, 1837,
	0, 890, 890, 1842, 0, 0, 0, 1847, 0, 0,
	0, 0, 0, 0, 0, 0, 863, 0, 0, 0,
	1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869,
	0, 0, 923, 0, 1895, 1896, 1897, 1898, 1899, 1900,
	1902, 0, 1907, 0, 1909, 1910, 1911, 0, 1913, 1914,
	1915, 0, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928,
	1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938,
	1939, 1940, 1941, 1942, 1943, 0, 1945, 0, 1952, 1953,
	890, 0, 890, 890, 890, 890, 890, 0, 0, 0,
	0, 0, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972,
	0, 1974, 0, 3185, 0, 0, 0, 0, 0, 0,
	0, 0, 3192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 890, 3202, 3203, 0, 3205, 0, 3206, 3207, 0,
	0, 0, 3210, 3211, 3212, 0, 3214, 3217, 0, 0,
	0, 0, 0, 2012, 2013, 0, 0, 0, 0, 0,
	0, 0, 3226, 3228, 3229, 3231, 3233, 3235, 1951, 0,
	0, 801, 802, 0, 0, 0, 0, 1827, 0, 0,
	2050, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2088,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 808, 809, 810, 811, 812, 813, 814,
	815, 816, 817, 818, 819, 820, 821, 822, 823, 824,
	825, 826, 827, 828, 829, 830, 831, 832, 833, 834,
	835, 836, 837, 838, 839, 840, 841, 842, 843, 844,
	845, 846, 847, 848, 849, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3290, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3306, 0, 0, 0, 0,
	0, 3307, 3308, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 759, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3344,
	3345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3354, 3356, 3358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3386, 0,
	0, 0, 0, 610, 0, 0, 0, 0, 0, 630,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 630,
	0, 630, 0, 0, 0, 0, 0, 2241, 0, 3424,
	3426, 3428, 0, 0, 0, 0, 0, 0, 2248, 2249,
	2250, 2251, 0, 0, 0, 0, 0, 0, 0, 1098,
	0, 1098, 1098, 0, 0, 0, 0, 0, 0, 0,
	3447, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 0, 3459, 3460, 0, 0,
	0, 0, 0, 1343, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 863, 1327, 1332, 1333, 0, 1336, 0, 1337, 1339,
	1340, 1341, 0, 1344, 1345, 1347, 1347, 0, 1347, 1351,
	1351, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361,
	1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371,
	1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381,
	1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391,
	1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401,
	1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411,
	1412, 1413, 1414, 1415, 1416, 1417, 0, 0, 0, 1418,
	0, 1420, 1421, 1422, 1423, 1424, 1495, 0, 0, 0,
	0, 0, 0, 0, 1351, 1351, 1351, 1351, 1351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1430, 1431,
	1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 801, 802,
	0, 0, 0, 0, 1827, 0, 0, 0, 0, 1449,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1455, 0, 0, 0, 0, 0, 863, 0,
	0, 0, 863, 0, 0, 0, 0, 0, 863, 0,
	808, 809, 810, 811, 812, 813, 814, 815, 816, 817,
	818, 819, 820, 821, 822, 823, 824, 825, 826, 827,
	828, 829, 830, 831, 832, 833, 834, 835, 836, 837,
	838, 839, 840, 841, 842, 843, 844, 845, 846, 847,
	848, 849, 0, 0, 0, 0, 0, 0, 78, 39,
	40, 80, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 84, 0,
	0, 0, 43, 69, 70, 0, 67, 71, 0, 0,
	0, 0, 0, 0, 0, 68, 2532, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 890, 0, 0, 2556, 2557,
	0, 0, 2559, 0, 56, 2561, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 87, 0, 0, 0,
	0, 0, 0, 0, 0, 2568, 2569, 2570, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2575, 0, 0,
	2577, 2578, 2579, 0, 0, 0, 2580, 2581, 0, 0,
	1921, 2583, 0, 0, 2585, 0, 0, 2587, 2588, 2589,
	2590, 0, 0, 0, 0, 2591, 1921, 1921, 1921, 1921,
	1921, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 890, 0, 0, 0, 0, 0,
	0, 2614, 2615, 2616, 2617, 2618, 2619, 0, 630, 1251,
	630, 630, 0, 0, 0, 0, 1098, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	630, 630, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2650, 0, 0, 0, 0, 0,
	0, 1329, 46, 49, 52, 51, 54, 121, 66, 143,
	0, 75, 72, 0, 0, 0, 0, 0, 0, 0,
	164, 2683, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 55, 83, 82, 0, 0, 64,
	65, 53, 0, 0, 0, 0, 0, 73, 74, 0,
	0, 154, 0, 0, 0, 0, 0, 142, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 161, 0,
	162, 2745, 0, 0, 750, 0, 0, 57, 58, 0,
	59, 60, 61, 62, 0, 0, 130, 131, 153, 152,
	181, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1098, 1098, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1329, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2830, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2839, 0, 0, 0,
	0, 0, 0, 630, 630, 0, 915, 0, 922, 147,
	128, 150, 135, 127, 0, 148, 149, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 0, 0, 81, 0,
	171, 136, 0, 0, 0, 0, 0, 0, 630, 0,
	0, 0, 0, 0, 0, 139, 137, 132, 133, 134,
	138, 0, 0, 0, 630, 0, 0, 129, 0, 0,
	0, 0, 0, 0, 1576, 0, 140, 0, 0, 0,
	0, 0, 0, 0, 1585, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	86, 0, 0, 0, 0, 0, 0, 630, 0, 1611,
	0, 0, 0, 0, 0, 0, 0, 1620, 0, 0,
	1329, 1622, 0, 0, 1625, 1626, 630, 630, 0, 630,
	0, 630, 630, 0, 630, 630, 630, 630, 630, 630,
	0, 0, 0, 0, 0, 0, 0, 1329, 1657, 1658,
	1329, 630, 1329, 0, 1663, 0, 0, 156, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2977, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 630, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2032, 1723,
	0, 0, 630, 0, 0, 0, 0, 3001, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 151, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3021, 0,
	3022, 0, 0, 3023, 0, 0, 3026, 3027, 923, 0,
	0, 0, 0, 0, 0, 3031, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3033, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 144, 0, 0, 145,
	0, 923, 0, 0, 0, 0, 0, 3050, 0, 0,
	3051, 0, 3052, 3053, 0, 3054, 0, 3055, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 3080, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3088, 0, 0, 3090, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3094, 0, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3165, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 630,
	630, 0, 0, 0, 158, 163, 160, 166, 167, 168,
	170, 172, 173, 174, 175, 0, 0, 0, 0, 0,
	176, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 630, 0, 0, 0, 0,
	2214, 0, 0, 0, 0, 1329, 0, 0, 0, 0,
	0, 0, 0, 0, 1836, 0, 630, 3248, 0, 0,
	0, 0, 1329, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 1100, 0, 1100, 1100, 2224,
	0, 2471, 0, 0, 0, 0, 0, 630, 630, 0,
	0, 0, 0, 0, 121, 0, 143, 1258, 1260, 0,
	0, 0, 0, 0, 0, 0, 0, 164, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 630, 154, 0,
	0, 0, 0, 0, 142, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 161, 0, 162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 630, 0, 0,
	0, 0, 0, 1603, 1604, 153, 152, 181, 0, 0,
	0, 0, 0, 0, 0, 0, 3288, 0, 0, 0,
	0, 0, 0, 0, 630, 2322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 630, 3302,
	0, 630, 3303, 0, 3304, 0, 0, 0, 0, 0,
	0, 0, 0, 2348, 0, 0, 0, 0, 0, 0,
	0, 0, 630, 0, 0, 0, 0, 0, 0, 0,
	0, 863, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2387, 2388, 0, 0, 0, 0, 0, 0,
	0, 2407, 0, 2408, 2409, 0, 147, 1605, 150, 0,
	1602, 0, 148, 149, 0, 0, 0, 630, 165, 0,
	0, 0, 0, 0, 2110, 2111, 2112, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3384, 0, 0,
	1457, 1458, 0, 0, 630, 0, 0, 0, 0, 0,
	630, 1620, 0, 0, 1620, 0, 1620, 0, 0, 0,
	0, 0, 2142, 0, 0, 0, 0, 3398, 0, 3399,
	0, 3400, 0, 0, 0, 1501, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1520, 0, 0, 0, 0, 0, 630, 0, 0,
	0, 0, 630, 0, 0, 0, 630, 630, 0, 0,
	0, 0, 0, 2485, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 915, 0, 0, 3445, 0, 3446,
	0, 0, 0, 0, 156, 0, 0, 0, 0, 0,
	0, 0, 0, 1628, 1628, 0, 1628, 0, 1628, 1628,
	0, 1637, 1628, 1628, 1628, 1628, 1628, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 915, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 630,
	0, 0, 0, 1705, 0, 0, 0, 0, 0, 0,
	0, 0, 151, 0, 0, 0, 0, 0, 0, 1727,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1329,
	0, 630, 1100, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 144, 2601, 0, 145, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 2032, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2659, 0, 79, 0, 0, 2032,
	2032, 2032, 2032, 2032, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2407, 863, 0, 0,
	0, 2032, 0, 0, 2032, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 163, 160, 166, 167, 168, 170, 172, 173,
	174, 175, 0, 0, 182, 0, 0, 176, 178, 179,
	180, 0, 0, 0, 0, 1599, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 630, 1100, 1100, 121, 0,
	143, 0, 0, 0, 0, 0, 630, 2767, 0, 0,
	0, 164, 0, 0, 0, 0, 0, 2775, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 154, 0, 0, 0, 0, 0, 142, 0,
	2423, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1822, 0, 0, 0, 0, 0, 0, 161,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1838, 0, 0, 0, 1603, 1604, 153,
	152, 181, 0, 0, 0, 0, 0, 0, 630, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1871, 1872, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 630, 0, 0, 0, 0,
	0, 0, 630, 0, 0, 0, 1620, 1620, 0, 0,
	0, 630, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 751, 0, 0, 1329, 2495, 0,
	0, 0, 0, 0, 1100, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	147, 1605, 150, 0, 1602, 0, 148, 149, 0, 0,
	0, 0, 165, 0, 1992, 185, 0, 0, 579, 0,
	0, 171, 0, 0, 2032, 0, 0, 0, 579, 0,
	0, 0, 0, 0, 0, 0, 579, 2938, 630, 0,
	0, 2004, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 873, 0, 0, 0, 1501, 0, 0, 1100, 0,
	0, 0, 0, 0, 0, 0, 0, 891, 0, 891,
	0, 0, 0, 0, 0, 0, 0, 579, 0, 915,
	0, 0, 0, 0, 0, 630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 630, 0, 0, 0, 0, 0, 0,
	0, 630, 0, 0, 922, 0, 0, 0, 156, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 630, 0, 0, 0,
	0, 915, 0, 0, 0, 0, 0, 922, 0, 0,
	0, 0, 0, 0, 630, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 630, 0,
	0, 0, 1329, 0, 0, 630, 630, 1329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 915, 0, 151, 0, 0, 1822,
	0, 0, 0, 1822, 1822, 3056, 0, 3060, 3061, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2659, 0, 79, 0, 2659, 0, 0, 0, 0, 2730,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 144, 0, 0,
	145, 630, 0, 0, 1329, 0, 0, 0, 0, 630,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 3177, 0, 0, 2206, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2805,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1100, 0,
	0, 0, 0, 0, 0, 158, 163, 160, 166, 167,
	168, 170, 172, 173, 174, 175, 0, 0, 0, 630,
	0, 176, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 2659, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1353, 1354, 1355, 1356, 1357,
	1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367,
	1368, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380,
	1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390,
	1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400,
	1401, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411,
	1412, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438,
	1439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2945, 0, 0, 3275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	579, 0, 579, 0, 0, 579, 0, 0, 0, 0,
	0, 0, 2356, 0, 630, 630, 0, 0, 0, 0,
	0, 0, 0, 2371, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 630, 630,
	630, 630, 3320, 0, 0, 0, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2454, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2004, 0, 0, 0, 0, 0, 0, 2479,
	0, 0, 0, 0, 0, 0, 0, 0, 2484, 0,
	0, 0, 0, 3402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1329, 0, 0,
	0, 0, 630, 0, 630, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1822, 630, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 630, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 630, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1822, 0, 0, 0, 873, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 579,
	0, 0, 0, 0, 630, 0, 0, 0, 630, 630,
	2602, 0, 0, 0, 0, 0, 0, 579, 1100, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 630, 0, 0,
	0, 0, 0, 1628, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2635, 0, 0, 0, 0, 0, 1331, 0, 0,
	0, 0, 0, 0, 0, 1100, 0, 0, 0, 0,
	0, 0, 2662, 1628, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1331, 0, 0, 1331, 0, 1331,
	579, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 630, 0, 0, 0, 0, 0, 0, 0,
	1679, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 579, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 630, 0, 0, 0, 0,
	0, 1729, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 579, 915, 0,
	0, 0, 0, 0, 579, 0, 2004, 0, 0, 0,
	0, 0, 0, 1752, 1753, 579, 579, 579, 579, 579,
	579, 579, 0, 0, 0, 630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1329, 0, 630, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 630, 630, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 630, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 630, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3113, 3115,
	3114, 3132, 3133, 3134, 3135, 3136, 3137, 3138, 700, 0,
	0, 0, 0, 0, 0, 0, 2868, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 630, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 630, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	630, 0, 630, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 579, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1331, 0, 0, 0, 0, 0, 0, 0,
	0, 2004, 2004, 0, 891, 891, 0, 0, 0, 1331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3009, 3010, 3011, 3012, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3119, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3127, 3128, 0, 891, 1729, 891, 891, 891, 891, 891,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1679,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 891, 0, 0, 0, 0, 0,
	0, 765, 0, 679, 769, 681, 766, 767, 873, 677,
	680, 768, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 579, 0, 0, 0, 0, 0, 0, 1729, 3084,
	579, 3086, 579, 0, 579, 2040, 0, 698, 699, 3112,
	3116, 3117, 3118, 3129, 3130, 3131, 3139, 3141, 731, 3140,
	3142, 3143, 3144, 3147, 3148, 3149, 3150, 3145, 3146, 3151,
	3096, 3100, 3097, 3098, 3099, 3111, 3101, 3102, 3103, 3104,
	3105, 3106, 3107, 3108, 3109, 3110, 3152, 3153, 3154, 3155,
	3156, 3157, 3122, 3126, 3125, 3123, 3124, 3120, 3121, 0,
	0, 0, 0, 2004, 0, 0, 0, 0, 0, 0,
	0, 770, 0, 771, 0, 0, 775, 0, 0, 3187,
	777, 776, 0, 778, 745, 744, 0, 0, 772, 773,
	0, 774, 1100, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3236, 0, 0, 0, 3236, 3236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3158, 3159, 3160,
	3161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2004, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 579, 0, 0, 0, 0, 0, 0, 579, 0,
	0, 0, 0, 0, 0, 579, 579, 0, 0, 579,
	0, 2198, 0, 0, 0, 0, 0, 0, 579, 0,
	0, 0, 0, 0, 0, 579, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2004,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2004, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1331, 0, 1729, 0,
	0, 0, 3313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1100, 1100,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 87, 0, 0, 0, 3313, 0,
	793, 801, 802, 803, 804, 805, 794, 796, 0, 0,
	0, 795, 0, 0, 0, 0, 0, 0, 0, 0,
	2004, 0, 0, 579, 798, 806, 807, 0, 0, 0,
	0, 1679, 0, 0, 0, 0, 0, 2868, 0, 3368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2779, 2780, 0, 0, 0, 0, 579, 0, 0,
	0, 579, 0, 808, 809, 810, 811, 812, 813, 814,
	815, 816, 817, 818, 819, 820, 821, 822, 823, 824,
	825, 826, 827, 828, 829, 830, 831, 832, 833, 834,
	835, 836, 837, 838, 839, 840, 841, 842, 843, 844,
	845, 846, 847, 848, 849, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 579, 0, 0, 0, 0, 0, 0, 2464, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 579, 579, 579,
	579, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 579, 579,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 579, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 891, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 765, 0, 0, 769,
	0, 766, 767, 0, 0, 0, 768, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 891, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 579, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1331,
	0, 0, 0, 0, 1331, 579, 579, 579, 579, 579,
	0, 0, 0, 0, 0, 0, 0, 2678, 0, 0,
	0, 0, 579, 0, 0, 1679, 0, 579, 0, 0,
	579, 2689, 1729, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 579, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1331, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 579, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 579, 0, 0, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	579, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 579,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 579, 0,
	0, 579, 579, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1679, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1679, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1679, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1331, 375, 0, 0, 1234, 1219, 491, 0,
	1162, 1237, 1131, 1150, 1247, 1153, 1156, 1198, 1110, 1176,
	394, 1147, 1103, 1135, 1105, 1142, 1106, 1133, 1164, 255,
	1130, 1221, 1180, 1236, 346, 252, 1112, 1136, 408, 1152,
	194, 1200, 461, 239, 356, 353, 499, 267, 258, 254,
	237, 299, 364, 406, 481, 400, 1243, 350, 1186, 0,
	471, 379, 0, 0, 1679, 1166, 1225, 1174, 1212, 1161,
	1199, 1120, 1185, 1238, 1148, 1195, 1239, 305, 235, 307,
	193, 391, 472, 271, 0, 0, 0, 0, 620, 0,
	0, 0, 3340, 0, 3341, 0, 0, 0, 0, 0,
	0, 226, 0, 233, 331, 340, 339, 320, 321, 323,
	325, 330, 337, 343, 1144, 1192, 1233, 1145, 1194, 250,
	303, 257, 249, 496, 1244, 1224, 1109, 1173, 1232, 0,
	0, 217, 1235, 1168, 0, 1197, 0, 1250, 1104, 1188,
	0, 1107, 1111, 1246, 1228, 1139, 260, 0, 0, 0,
	0, 0, 0, 0, 1165, 1175, 1209, 1213, 1159, 0,
	0, 0, 0, 0, 0, 0, 1137, 0, 1184, 0,
	0, 0, 1116, 1108, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1163, 0, 0, 0,
	0, 1119, 0, 1138, 1210, 0, 1102, 282, 1113, 380,
	242, 0, 1217, 1227, 1160, 536, 1231, 1158, 1157, 1204,
	1117, 1223, 1151, 345, 1115, 312, 189, 213, 0, 1149,
	390, 436, 448, 1222, 1134, 1143, 240, 1141, 446, 404,
	515, 221, 269, 433, 410, 444, 417, 272, 1183, 1202,
	445, 351, 501, 427, 512, 537, 538, 248, 384, 524,
	485, 532, 551, 214, 245, 398, 478, 518, 468, 376,
	497, 498, 311, 467, 280, 192, 349, 543, 212, 454,
	230, 219, 503, 521, 274, 431, 201, 480, 510, 227,
	458, 0, 0, 553, 203, 508, 477, 372, 308, 309,
	202, 0, 432, 253, 278, 243, 393, 505, 506, 241,
	554, 216, 531, 208, 1114, 530, 386, 500, 509, 373,
	362, 207, 507, 371, 361, 316, 335, 336, 265, 291,
	424, 354, 425, 292, 382, 381, 383, 196, 519, 0,
	197, 0, 473, 520, 555, 222, 223, 225, 1129, 264,
	268, 276, 279, 287, 288, 297, 347, 397, 423, 419,
	428, 1218, 495, 513, 525, 535, 541, 542, 544, 545,
	546, 547, 548, 550, 549, 385, 295, 469, 315, 352,
	1207, 1249, 403, 447, 228, 517, 470, 1124, 1128, 1122,
	1189, 1123, 1178, 1179, 1125, 1240, 1241, 1242, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 0, 1211, 1118, 0,
	1126, 1127, 1220, 1229, 1230, 574, 363, 460, 514, 317,
	329, 332, 322, 341, 0, 342, 318, 319, 324, 326,
	327, 328, 333, 334, 338, 344, 236, 199, 369, 377,
	494, 296, 204, 205, 206, 487, 488, 489, 490, 528,
	529, 533, 437, 438, 439, 440, 277, 523, 293, 443,
	442, 313, 314, 358, 426, 1182, 188, 209, 348, 1245,
	429, 273, 552, 527, 522, 195, 211, 1121, 247, 1132,
	1140, 0, 1146, 1154, 1155, 1167, 1169, 1170, 1171, 1172,
	1190, 1191, 1193, 1201, 1203, 1206, 1208, 1215, 1226, 1248,
	190, 191, 198, 210, 220, 224, 231, 246, 261, 263,
	270, 283, 290, 294, 300, 301, 304, 310, 359, 365,
	366, 367, 368, 387, 388, 389, 392, 395, 396, 399,
	401, 402, 405, 409, 413, 414, 415, 416, 418, 420,
	430, 435, 449, 450, 451, 452, 453, 456, 457, 462,
	463, 464, 465, 466, 474, 475, 479, 502, 504, 516,
	534, 539, 455, 285, 286, 421, 422, 284, 511, 540,
	0, 357, 1181, 1187, 360, 266, 289, 302, 1196, 526,
	476, 215, 441, 275, 238, 1214, 1216, 200, 234, 218,
	244, 259, 262, 306, 370, 378, 407, 412, 281, 256,
	232, 434, 229, 459, 482, 483, 484, 486, 374, 251,
	411, 1177, 1205, 355, 492, 493, 298, 375, 0, 0,
	1234, 1219, 491, 0, 1162, 1237, 1131, 1150, 1247, 1153,
	1156, 1198, 1110, 1176, 394, 1147, 1103, 1135, 1105, 1142,
	1106, 1133, 1164, 255, 1130, 1221, 1180, 1236, 346, 252,
	1112, 1136, 408, 1152, 194, 1200, 461, 239, 356, 353,
	499, 267, 258, 254, 237, 299, 364, 406, 481, 400,
	1243, 350, 1186, 0, 471, 379, 0, 0, 0, 1166,
	1225, 1174, 1212, 1161, 1199, 1120, 1185, 1238, 1148, 1195,
	1239, 305, 235, 307, 193, 391, 472, 271, 0, 0,
	0, 0, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 233, 331, 340,
	339, 320, 321, 323, 325, 330, 337, 343, 1144, 1192,
	1233, 1145, 1194, 250, 303, 257, 249, 496, 1244, 1224,
	1109, 1173, 1232, 0, 0, 217, 1235, 1168, 0, 1197,
	0, 1250, 1104, 1188, 0, 1107, 1111, 1246, 1228, 1139,
	260, 0, 0, 0, 0, 0, 0, 0, 1165, 1175,
	1209, 1213, 1159, 0, 0, 0, 0, 0, 2690, 0,
	1137, 0, 1184, 0, 0, 0, 1116, 1108, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1163, 0, 0, 0, 0, 1119, 0, 1138, 1210, 0,
	1102, 282, 1113, 380, 242, 0, 1217, 1227, 1160, 536,
	1231, 1158, 1157, 1204, 1117, 1223, 1151, 345, 1115, 312,
	189, 213, 0, 1149, 390, 436, 448, 1222, 1134, 1143,
	240, 1141, 446, 404, 515, 221, 269, 433, 410, 444,
	417, 272, 1183, 1202, 445, 351, 501, 427, 512, 537,
	538, 248, 384, 524, 485, 532, 551, 214, 245, 398,
	478, 518, 468, 376, 497, 498, 311, 467, 280, 192,
	349, 543, 212, 454, 230, 219, 503, 521, 274, 431,
	201, 480, 510, 227, 458, 0, 0, 553, 203, 508,
	477, 372, 308, 309, 202, 0, 432, 253, 278, 243,
	393, 505, 506, 241, 554, 216, 531, 208, 1114, 530,
	386, 500, 509, 373, 362, 207, 507, 371, 361, 316,
	335, 336, 265, 291, 424, 354, 425, 292, 382, 381,
	383, 196, 519, 0, 197, 0, 473, 520, 555, 222,
	223, 225, 1129, 264, 268, 276, 279, 287, 288, 297,
	347, 397, 423, 419, 428, 1218, 495, 513, 525, 535,
	541, 542, 544, 545, 546, 547, 548, 550, 549, 385,
	295, 469, 315, 352, 1207, 1249, 403, 447, 228, 517,
	470, 1124, 1128, 1122, 1189, 1123, 1178, 1179, 1125, 1240,
	1241, 1242, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	0, 1211, 1118, 0, 1126, 1127, 1220, 1229, 1230, 574,
	363, 460, 514, 317, 329, 332, 322, 341, 0, 342,
	318, 319, 324, 326, 327, 328, 333, 334, 338, 344,
	236, 199, 369, 377, 494, 296, 204, 205, 206, 487,
	488, 489, 490, 528, 529, 533, 437, 438, 439, 440,
	277, 523, 293, 443, 442, 313, 314, 358, 426, 1182,
	188, 209, 348, 1245, 429, 273, 552, 527, 522, 195,
	211, 1121, 247, 1132, 1140, 0, 1146, 1154, 1155, 1167,
	1169, 1170, 1171, 1172, 1190, 1191, 1193, 1201, 1203, 1206,
	1208, 1215, 1226, 1248, 190, 191, 198, 210, 220, 224,
	231, 246, 261, 263, 270, 283, 290, 294, 300, 301,
	304, 310, 359, 365, 366, 367, 368, 387, 388, 389,
	392, 395, 396, 399, 401, 402, 405, 409, 413, 414,
	415, 416, 418, 420, 430, 435, 449, 450, 451, 452,
	453, 456, 457, 462, 463, 464, 465, 466, 474, 475,
	479, 502, 504, 516, 534, 539, 455, 285, 286, 421,
	422, 284, 511, 540, 0, 357, 1181, 1187, 360, 266,
	289, 302, 1196, 526, 476, 215, 441, 275, 238, 1214,
	1216, 200, 234, 218, 244, 259, 262, 306, 370, 378,
	407, 412, 281, 256, 232, 434, 229, 459, 482, 483,
	484, 486, 374, 251, 411, 1177, 1205, 355, 492, 493,
	298, 375, 0, 0, 1234, 1219, 491, 0, 1162, 1237,
	1131, 1150, 1247, 1153, 1156, 1198, 1110, 1176, 394, 1147,
	1103, 1135, 1105, 1142, 1106, 1133, 1164, 255, 1130, 1221,
	1180, 1236, 346, 252, 1112, 1136, 408, 1152, 194, 1200,
	461, 239, 356, 353, 499, 267, 258, 254, 237, 299,
	364, 406, 481, 400, 1243, 350, 1186, 0, 471, 379,
	0, 0, 0, 1166, 1225, 1174, 1212, 1161, 1199, 1120,
	1185, 1238, 1148, 1195, 1239, 305, 235, 307, 193, 391,
	472, 271, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 233, 331, 340, 339, 320, 321, 323, 325, 330,
	337, 343, 1144, 1192, 1233, 1145, 1194, 250, 303, 257,
	249, 496, 1244, 1224, 1109, 1173, 1232, 0, 0, 217,
	1235, 1168, 0, 1197, 0, 1250, 1104, 1188, 0, 1107,
	1111, 1246, 1228, 1139, 260, 0, 0, 0, 0, 0,
	0, 0, 1165, 1175, 1209, 1213, 1159, 0, 0, 0,
	0, 0, 2648, 0, 1137, 0, 1184, 0, 0, 0,
	1116, 1108, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1163, 0, 0, 0, 0, 1119,
	0, 1138, 1210, 0, 1102, 282, 1113, 380, 242, 0,
	1217, 1227, 1160, 536, 1231, 1158, 1157, 1204, 1117, 1223,
	1151, 345, 1115, 312, 189, 213, 0, 1149, 390, 436,
	448, 1222, 1134, 1143, 240, 1141, 446, 404, 515, 221,
	269, 433, 410, 444, 417, 272, 1183, 1202, 445, 351,
	501, 427, 512, 537, 538, 248, 384, 524, 485, 532,
	551, 214, 245, 398, 478, 518, 468, 376, 497, 498,
	311, 467, 280, 192, 349, 543, 212, 454, 230, 219,
	503, 521, 274, 431, 201, 480, 510, 227, 458, 0,
	0, 553, 203, 508, 477, 372, 308, 309, 202, 0,
	432, 253, 278, 243, 393, 505, 506, 241, 554, 216,
	531, 208, 1114, 530, 386, 500, 509, 373, 362, 207,
	507, 371, 361, 316, 335, 336, 265, 291, 424, 354,
	425, 292, 382, 381, 383, 196, 519, 0, 197, 0,
	473, 520, 555, 222, 223, 225, 1129, 264, 268, 276,
	279, 287, 288, 297, 347, 397, 423, 419, 428, 1218,
	495, 513, 525, 535, 541, 542, 544, 545, 546, 547,
	548, 550, 549, 385, 295, 469, 315, 352, 1207, 1249,
	403, 447, 228, 517, 470, 1124, 1128, 1122, 1189, 1123,
	1178, 1179, 1125, 1240, 1241, 1242, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 0, 1211, 1118, 0, 1126, 1127,
	1220, 1229, 1230, 574, 363, 460, 514, 317, 329, 332,
	322, 341, 0, 342, 318, 319, 324, 326, 327, 328,
	333, 334, 338, 344, 236, 199, 369, 377, 494, 296,
	204, 205, 206, 487, 488, 489, 490, 528, 529, 533,
	437, 438, 439, 440, 277, 523, 293, 443, 442, 313,
	314, 358, 426, 1182, 188, 209, 348, 1245, 429, 273,
	552, 527, 522, 195, 211, 1121, 247, 1132, 1140, 0,
	1146, 1154, 1155, 1167, 1169, 1170, 1171, 1172, 1190, 1191,
	1193, 1201, 1203, 1206, 1208, 1215, 1226, 1248, 190, 191,
	198, 210, 220, 224, 231, 246, 261, 263, 270, 283,
	290, 294, 300, 301, 304, 310, 359, 365, 366, 367,
	368, 387, 388, 389, 392, 395, 396, 399, 401, 402,
	405, 409, 413, 414, 415, 416, 418, 420, 430, 435,
	449, 450, 451, 452, 453, 456, 457, 462, 463, 464,
	465, 466, 474, 475, 479, 502, 504, 516, 534, 539,
	455, 285, 286, 421, 422, 284, 511, 540, 0, 357,
	1181, 1187, 360, 266, 289, 302, 1196, 526, 476, 215,
	441, 275, 238, 1214, 1216, 200, 234, 218, 244, 259,
	262, 306, 370, 378, 407, 412, 281, 256, 232, 434,
	229, 459, 482, 483, 484, 486, 374, 251, 411, 1177,
	1205, 355, 492, 493, 298, 375, 0, 0, 1234, 1219,
	491, 0, 1162, 1237, 1131, 1150, 1247, 1153, 1156, 1198,
	1110, 1176, 394, 1147, 1103, 1135, 1105, 1142, 1106, 1133,
	1164, 255, 1130, 1221, 1180, 1236, 346, 252, 1112, 1136,
	408, 1152, 194, 1200, 461, 239, 356, 353, 499, 267,
	258, 254, 237, 299, 364, 406, 481, 400, 1243, 350,
	1186, 0, 471, 379, 0, 0, 0, 1166, 1225, 1174,
	1212, 1161, 1199, 1120, 1185, 1238, 1148, 1195, 1239, 305,
	235, 307, 193, 391, 472, 271, 0, 0, 0, 0,
	789, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 233, 331, 340, 339, 320,
	321, 323, 325, 330, 337, 343, 1144, 1192, 1233, 1145,
	1194, 250, 303, 257, 249, 496, 1244, 1224, 1109, 1173,
	1232, 0, 0, 217, 1235, 1168, 0, 1197, 0, 1250,
	1104, 1188, 0, 1107, 1111, 1246, 1228, 1139, 260, 0,
	0, 0, 0, 0, 0, 0, 1165, 1175, 1209, 1213,
	1159, 0, 0, 0, 0, 0, 2020, 0, 1137, 0,
	1184, 0, 0, 0, 1116, 1108, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1163, 0,
	0, 0, 0, 1119, 0, 1138, 1210, 0, 1102, 282,
	1113, 380, 242, 0, 1217, 1227, 1160, 536, 1231, 1158,
	1157, 1204, 1117, 1223, 1151, 345, 1115, 312, 189, 213,
	0, 1149, 390, 436, 448, 1222, 1134, 1143, 240, 1141,
	446, 404, 515, 221, 269, 433, 410, 444, 417, 272,
	1183, 1202, 445, 351, 501, 427, 512, 537, 538, 248,
	384, 524, 485, 532, 551, 214, 245, 398, 478, 518,
	468, 376, 497, 498, 311, 467, 280, 192, 349, 543,
	212, 454, 230, 219, 503, 521, 274, 431, 201, 480,
	510, 227, 458, 0, 0, 553, 203, 508, 477, 372,
	308, 309, 202, 0, 432, 253, 278, 243, 393, 505,
	506, 241, 554, 216, 531, 208, 1114, 530, 386, 500,
	509, 373, 362, 207, 507, 371, 361, 316, 335, 336,
	265, 291, 424, 354, 425, 292, 382, 381, 383, 196,
	519, 0, 197, 0, 473, 520, 555, 222, 223, 225,
	1129, 264, 268, 276, 279, 287, 288, 297, 347, 397,
	423, 419, 428, 1218, 495, 513, 525, 535, 541, 542,
	544, 545, 546, 547, 548, 550, 549, 385, 295, 469,
	315, 352, 1207, 1249, 403, 447, 228, 517, 470, 1124,
	1128, 1122, 1189, 1123, 1178, 1179, 1125, 1240, 1241, 1242,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 0, 1211,
	1118, 0, 1126, 1127, 1220, 1229, 1230, 574, 363, 460,
	514, 317, 329, 332, 322, 341, 0, 342, 318, 319,
	324, 326, 327, 328, 333, 334, 338, 344, 236, 199,
	369, 377, 494, 296, 204, 205, 206, 487, 488, 489,
	490, 528, 529, 533, 437, 438, 439, 440, 277, 523,
	293, 443, 442, 313, 314, 358, 426, 1182, 188, 209,
	348, 1245, 429, 273, 552, 527, 522, 195, 211, 1121,
	247, 1132, 1140, 0, 1146, 1154, 1155, 1167, 1169, 1170,
	1171, 1172, 1190, 1191, 1193, 1201, 1203, 1206, 1208, 1215,
	1226, 1248, 190, 191, 198, 210, 220, 224, 231, 246,
	261, 263, 270, 283, 290, 294, 300, 301, 304, 310,
	359, 365, 366, 367, 368, 387, 388, 389, 392, 395,
	396, 399, 401, 402, 405, 409, 413, 414, 415, 416,
	418, 420, 430, 435, 449, 450, 451, 452, 453, 456,
	457, 462, 463, 464, 465, 466, 474, 475, 479, 502,
	504, 516, 534, 539, 455, 285, 286, 421, 422, 284,
	511, 540, 0, 357, 1181, 1187, 360, 266, 289, 302,
	1196, 526, 476, 215, 441, 275, 238, 1214, 1216, 200,
	234, 218, 244, 259, 262, 306, 370, 378, 407, 412,
	281, 256, 232, 434, 229, 459, 482, 483, 484, 486,
	374, 251, 411, 1177, 1205, 355, 492, 493, 298, 375,
	0, 0, 1234, 1219, 491, 0, 1162, 1237, 1131, 1150,
	1247, 1153, 1156, 1198, 1110, 1176, 394, 1147, 1103, 1135,
	1105, 1142, 1106, 1133, 1164, 255, 1130, 1221, 1180, 1236,
	346, 252, 1112, 1136, 408, 1152, 194, 1200, 461, 239,
	356, 353, 499, 267, 258, 254, 237, 299, 364, 406,
	481, 400, 1243, 350, 1186, 0, 471, 379, 0, 0,
	0, 1166, 1225, 1174, 1212, 1161, 1199, 1120, 1185, 1238,
	1148, 1195, 1239, 305, 235, 307, 193, 391, 472, 271,
	0, 87, 0, 0, 620, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 233,
	331, 340, 339, 320, 321, 323, 325, 330, 337, 343,
	1144, 1192, 1233, 1145, 1194, 250, 303, 257, 249, 496,
	1244, 1224, 1109, 1173, 1232, 0, 0, 217, 1235, 1168,
	0, 1197, 0, 1250, 1104, 1188, 0, 1107, 1111, 1246,
	1228, 1139, 260, 0, 0, 0, 0, 0, 0, 0,
	1165, 1175, 1209, 1213, 1159, 0, 0, 0, 0, 0,
	0, 0, 1137, 0, 1184, 0, 0, 0, 1116, 1108,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1163, 0, 0, 0, 0, 1119, 0, 1138,
	1210, 0, 1102, 282, 1113, 380, 242, 0, 1217, 1227,
	1160, 536, 1231, 1158, 1157, 1204, 1117, 1223, 1151, 345,
	1115, 312, 189, 213, 0, 1149, 390, 436, 448, 1222,
	1134, 1143, 240, 1141, 446, 404, 515, 221, 269, 433,
	410, 444, 417, 272, 1183, 1202, 445, 351, 501, 427,
	512, 537, 538, 248, 384, 524, 485, 532, 551, 214,
	245, 398, 478, 518, 468, 376, 497, 498, 311, 467,
	280, 192, 349, 543, 212, 454, 230, 219, 503, 521,
	274, 431, 201, 480, 510, 227, 458, 0, 0, 553,
	203, 508, 477, 372, 308, 309, 202, 0, 432, 253,
	278, 243, 393, 505, 506, 241, 554, 216, 531, 208,
	1114, 530, 386, 500, 509, 373, 362, 207, 507, 371,
	361, 316, 335, 336, 265, 291, 424, 354, 425, 292,
	382, 381, 383, 196, 519, 0, 197, 0, 473, 520,
	555, 222, 223, 225, 1129, 264, 268, 276, 279, 287,
	288, 297, 347, 397, 423, 419, 428, 1218, 495, 513,
	525, 535, 541, 542, 544, 545, 546, 547, 548, 550,
	549, 385, 295, 469, 315, 352, 1207, 1249, 403, 447,
	228, 517, 470, 1124, 1128, 1122, 1189, 1123, 1178, 1179,
	1125, 1240, 1241, 1242, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 0, 1211, 1118, 0, 1126, 1127, 1220, 1229,
	1230, 574, 363, 460, 514, 317, 329, 332, 322, 341,
	0, 342, 318, 319, 324, 326, 327, 328, 333, 334,
	338, 344, 236, 199, 369, 377, 494, 296, 204, 205,
	206, 487, 488, 489, 490, 528, 529, 533, 437, 438,
	439, 440, 277, 523, 293, 443, 442, 313, 314, 358,
	426, 1182, 188, 209, 348, 1245, 429, 273, 552, 527,
	522, 195, 211, 1121, 247, 1132, 1140, 0, 1146, 1154,
	1155, 1167, 1169, 1170, 1171, 1172, 1190, 1191, 1193, 1201,
	1203, 1206, 1208, 1215, 1226, 1248, 190, 191, 198, 210,
	220, 224, 231, 246, 261, 263, 270, 283, 290, 294,
	300, 301, 304, 310, 359, 365, 366, 367, 368, 387,
	388, 389, 392, 395, 396, 399, 401, 402, 405, 409,
	413, 414, 415, 416, 418, 420, 430, 435, 449, 450,
	451, 452, 453, 456, 457, 462, 463, 464, 465, 466,
	474, 475, 479, 502, 504, 516, 534, 539, 455, 285,
	286, 421, 422, 284, 511, 540, 0, 357, 1181, 1187,
	360, 266, 289, 302, 1196, 526, 476, 215, 441, 275,
	238, 1214, 1216, 200, 234, 218, 244, 259, 262, 306,
	370, 378, 407, 412, 281, 256, 232, 434, 229, 459,
	482, 483, 484, 486, 374, 251, 411, 1177, 1205, 355,
	492, 493, 298, 375, 0, 0, 1234, 1219, 491, 0,
	1162, 1237, 1131, 1150, 1247, 1153, 1156, 1198, 1110, 1176,
	394, 1147, 1103, 1135, 1105, 1142, 1106, 1133, 1164, 255,
	1130, 1221, 1180, 1236, 346, 252, 1112, 1136, 408, 1152,
	194, 1200, 461, 239, 356, 353, 499, 267, 258, 254,
	237, 299, 364, 406, 481, 400, 1243, 350, 1186, 0,
	471, 379, 0, 0, 0, 1166, 1225, 1174, 1212, 1161,
	1199, 1120, 1185, 1238, 1148, 1195, 1239, 305, 235, 307,
	193, 391, 472, 271, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 233, 331, 340, 339, 320, 321, 323,
	325, 330, 337, 343, 1144, 1192, 1233, 1145, 1194, 250,
	303, 257, 249, 496, 1244, 1224, 1109, 1173, 1232, 0,
	0, 217, 1235, 1168, 0, 1197, 0, 1250, 1104, 1188,
	0, 1107, 1111, 1246, 1228, 1139, 260, 0, 0, 0,
	0, 0, 0, 0, 1165, 1175, 1209, 1213, 1159, 0,
	0, 0, 0, 0, 0, 0, 1137, 0, 1184, 0,
	0, 0, 1116, 1108, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1163, 0, 0, 0,
	0, 1119, 0, 1138, 1210, 0, 1102, 282, 1113, 380,
	242, 0, 1217, 1227, 1160, 536, 1231, 1158, 1157, 1204,
	1117, 1223, 1151, 345, 1115, 312, 189, 213, 0, 1149,
	390, 436, 448, 1222, 1134, 1143, 240, 1141, 446, 404,
	515, 221, 269, 433, 410, 444, 417, 272, 1183, 1202,
	445, 351, 501, 427, 512, 537, 538, 248, 384, 524,
	485, 532, 551, 214, 245, 398, 478, 518, 468, 376,
	497, 498, 311, 467, 280, 192, 349, 543, 212, 454,
	230, 219, 503, 521, 274, 431, 201, 480, 510, 227,
	458, 0, 0, 553, 203, 508, 477, 372, 308, 309,
	202, 0, 432, 253, 278, 243, 393, 505, 506, 241,
	554, 216, 531, 208, 1114, 530, 386, 500, 509, 373,
	362, 207, 507, 371, 361, 316, 335, 336, 265, 291,
	424, 354, 425, 292, 382, 381, 383, 196, 519, 0,
	197, 0, 473, 520, 555, 222, 223, 225, 1129, 264,
	268, 276, 279, 287, 288, 297, 347, 397, 423, 419,
	428, 1218, 495, 513, 525, 535, 541, 542, 544, 545,
	546, 547, 548, 550, 549, 385, 295, 469, 315, 352,
	1207, 1249, 403, 447, 228, 517, 470, 1124, 1128, 1122,
	1189, 1123, 1178, 1179, 1125, 1240, 1241, 1242, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 0, 1211, 1118, 0,
	1126, 1127, 1220, 1229, 1230, 574, 363, 460, 514, 317,
	329, 332, 322, 341, 0, 342, 318, 319, 324, 326,
	327, 328, 333, 334, 338, 344, 236, 199, 369, 377,
	494, 296, 204, 205, 206, 487, 488, 489, 490, 528,
	529, 533, 437, 438, 439, 440, 277, 523, 293, 443,
	442, 313, 314, 358, 426, 1182, 188, 209, 348, 1245,
	429, 273, 552, 527, 522, 195, 211, 1121, 247, 1132,
	1140, 0, 1146, 1154, 1155, 1167, 1169, 1170, 1171, 1172,
	1190, 1191, 1193, 1201, 1203, 1206, 1208, 1215, 1226, 1248,
	190, 191, 198, 210, 220, 224, 231, 246, 261, 263,
	270, 283, 290, 294, 300, 301, 304, 310, 359, 365,
	366, 367, 368, 387, 388, 389, 392, 395, 396, 399,
	401, 402, 405, 409, 413, 414, 415, 416, 418, 420,
	430, 435, 449, 450, 451, 452, 453, 456, 457, 462,
	463, 464, 465, 466, 474, 475, 479, 502, 504, 516,
	534, 539, 455, 285, 286, 421, 422, 284, 511, 540,
	0, 357, 1181, 1187, 360, 266, 289, 302, 1196, 526,
	476, 215, 441, 275, 238, 1214, 1216, 200, 234, 218,
	244, 259, 262, 306, 370, 378, 407, 412, 281, 256,
	232, 434, 229, 459, 482, 483, 484, 486, 374, 251,
	411, 1177, 1205, 355, 492, 493, 298, 375, 0, 0,
	1234, 1219, 491, 0, 1162, 1237, 1131, 1150, 1247, 1153,
	1156, 1198, 1110, 1176, 394, 1147, 1103, 1135, 1105, 1142,
	1106, 1133, 1164, 255, 1130, 1221, 1180, 1236, 346, 252,
	1112, 1136, 408, 1152, 194, 1200, 461, 239, 356, 353,
	499, 267, 258, 254, 237, 299, 364, 406, 481, 400,
	1243, 350, 1186, 0, 471, 379, 0, 0, 0, 1166,
	1225, 1174, 1212, 1161, 1199, 1120, 1185, 1238, 1148, 1195,
	1239, 305, 235, 307, 193, 391, 472, 271, 0, 0,
	0, 0, 789, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 233, 331, 340,
	339, 320, 321, 323, 325, 330, 337, 343, 1144, 1192,
	1233, 1145, 1194, 250, 303, 257, 249, 496, 1244, 1224,
	1109, 1173, 1232, 0, 0, 217, 1235, 1168, 0, 1197,
	0, 1250, 1104, 1188, 0, 1107, 1111, 1246, 1228, 1139,
	260, 0, 0, 0, 0, 0, 0, 0, 1165, 1175,
	1209, 1213, 1159, 0, 0, 0, 0, 0, 0, 0,
	1137, 0, 1184, 0, 0, 0, 1116, 1108, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1163, 0, 0, 0, 0, 1119, 0, 1138, 1210, 0,
	1102, 282, 1113, 380, 242, 0, 1217, 1227, 1160, 536,
	1231, 1158, 1157, 1204, 1117, 1223, 1151, 345, 1115, 312,
	189, 213, 0, 1149, 390, 436, 448, 1222, 1134, 1143,
	240, 1141, 446, 404, 515, 221, 269, 433, 410, 444,
	417, 272, 1183, 1202, 445, 351, 501, 427, 512, 537,
	538, 248, 384, 524, 485, 532, 551, 214, 245, 398,
	478, 518, 468, 376, 497, 498, 311, 467, 280, 192,
	349, 543, 212, 454, 230, 219, 503, 521, 274, 431,
	201, 480, 510, 227, 458, 0, 0, 553, 203, 508,
	477, 372, 308, 309, 202, 0, 432, 253, 278, 243,
	393, 505, 506, 241, 554, 216, 531, 208, 1114, 530,
	386, 500, 509, 373, 362, 207, 507, 371, 361, 316,
	335, 336, 265, 291, 424, 354, 425, 292, 382, 381,
	383, 196, 519, 0, 197, 0, 473, 520, 555, 222,
	223, 225, 1129, 264, 268, 276, 279, 287, 288, 297,
	347, 397, 423, 419, 428, 1218, 495, 513, 525, 535,
	541, 542, 544, 545, 546, 547, 548, 550, 549, 385,
	295, 469, 315, 352, 1207, 1249, 403, 447, 228, 517,
	470, 1124, 1128, 1122, 1189, 1123, 1178, 1179, 1125, 1240,
	1241, 1242, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	0, 1211, 1118, 0, 1126, 1127, 1220, 1229, 1230, 574,
	363, 460, 514, 317, 329, 332, 322, 341, 0, 342,
	318, 319, 324, 326, 327, 328, 333, 334, 338, 344,
	236, 199, 369, 377, 494, 296, 204, 205, 206, 487,
	488, 489, 490, 528, 529, 533, 437, 438, 439, 440,
	277, 523, 293, 443, 442, 313, 314, 358, 426, 1182,
	188, 209, 348, 1245, 429, 273, 552, 527, 522, 195,
	211, 1121, 247, 1132, 1140, 0, 1146, 1154, 1155, 1167,
	1169, 1170, 1171, 1172, 1190, 1191, 1193, 1201, 1203, 1206,
	1208, 1215, 1226, 1248, 190, 191, 198, 210, 220, 224,
	231, 246, 261, 263, 270, 283, 290, 294, 300, 301,
	304, 310, 359, 365, 366, 367, 368, 387, 388, 389,
	392, 395, 396, 399, 401, 402, 405, 409, 413, 414,
	415, 416, 418, 420, 430, 435, 449, 450, 451, 452,
	453, 456, 457, 462, 463, 464, 465, 466, 474, 475,
	479, 502, 504, 516, 534, 539, 455, 285, 286, 421,
	422, 284, 511, 540, 0, 357, 1181, 1187, 360, 266,
	289, 302, 1196, 526, 476, 215, 441, 275, 238, 1214,
	1216, 200, 234, 218, 244, 259, 262, 306, 370, 378,
	407, 412, 281, 256, 232, 434, 229, 459, 482, 483,
	484, 486, 374, 251, 411, 1177, 1205, 355, 492, 493,
	298, 375, 0, 0, 1234, 1219, 491, 0, 1162, 1237,
	1131, 1150, 1247, 1153, 1156, 1198, 1110, 1176, 394, 1147,
	1103, 1135, 1105, 1142, 1106, 1133, 1164, 255, 1130, 1221,
	1180, 1236, 346, 252, 1112, 1136, 408, 1152, 194, 1200,
	461, 239, 356, 353, 499, 267, 258, 254, 237, 299,
	364, 406, 481, 400, 1243, 350, 1186, 0, 471, 379,
	0, 0, 0, 1166, 1225, 1174, 1212, 1161, 1199, 1120,
	1185, 1238, 1148, 1195, 1239, 305, 235, 307, 193, 391,
	472, 271, 0, 0, 0, 0, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 233, 331, 340, 339, 320, 321, 323, 325, 330,
	337, 343, 1144, 1192, 1233, 1145, 1194, 250, 303, 257,
	249, 496, 1244, 1224, 1109, 1173, 1232, 0, 0, 217,
	1235, 1168, 0, 1197, 0, 1250, 1104, 1188, 0, 1107,
	1111, 1246, 1228, 1139, 260, 0, 0, 0, 0, 0,
	0, 0, 1165, 1175, 1209, 1213, 1159, 0, 0, 0,
	0, 0, 0, 0, 1137, 0, 1184, 0, 0, 0,
	1116, 1108, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1163, 0, 0, 0, 0, 1119,
	0, 1138, 1210, 0, 1102, 282, 1113, 380, 242, 0,
	1217, 1227, 1160, 536, 1231, 1158, 1157, 1204, 1117, 1223,
	1151, 345, 1115, 312, 189, 213, 0, 1149, 390, 436,
	448, 1222, 1134, 1143, 240, 1141, 446, 404, 515, 221,
	269, 433, 410, 444, 417, 272, 1183, 1202, 445, 351,
	501, 427, 512, 537, 538, 248, 384, 524, 485, 532,
	551, 214, 245, 398, 478, 518, 468, 376, 497, 498,
	311, 467, 280, 192, 349, 543, 212, 454, 230, 219,
	503, 521, 274, 431, 201, 480, 510, 227, 458, 0,
	0, 553, 203, 508, 477, 372, 308, 309, 202, 0,
	432, 253, 278, 243, 393, 505, 506, 241, 554, 216,
	531, 208, 1114, 530, 386, 500, 509, 373, 362, 207,
	507, 371, 361, 316, 335, 336, 265, 291, 424, 354,
	425, 292, 382, 381, 383, 196, 519, 0, 197, 0,
	473, 520, 555, 222, 223, 225, 1129, 264, 268, 276,
	279, 287, 288, 297, 347, 397, 423, 419, 428, 1218,
	495, 513, 525, 535, 541, 542, 544, 545, 546, 547,
	548, 550, 549, 385, 295, 469, 315, 352, 1207, 1249,
	403, 447, 228, 517, 470, 1124, 1128, 1122, 1189, 1123,
	1178, 1179, 1125, 1240, 1241, 1242, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 0, 1211, 1118, 0, 1126, 1127,
	1220, 1229, 1230, 574, 363, 460, 514, 317, 329, 332,
	322, 341, 0, 342, 318, 319, 324, 326, 327, 328,
	333, 334, 338, 344, 236, 199, 369, 377, 494, 296,
	204, 205, 206, 487, 488, 489, 490, 528, 529, 533,
	437, 438, 439, 440, 277, 523, 293, 443, 442, 313,
	314, 358, 426, 1182, 188, 209, 348, 1245, 429, 273,
	552, 527, 522, 195, 211, 1121, 247, 1132, 1140, 0,
	1146, 1154, 1155, 1167, 1169, 1170, 1171, 1172, 1190, 1191,
	1193, 1201, 1203, 1206, 1208, 1215, 1226, 1248, 190, 191,
	198, 210, 220, 224, 231, 246, 261, 263, 270, 283,
	290, 294, 300, 301, 304, 310, 359, 365, 366, 367,
	368, 387, 388, 389, 392, 395, 396, 399, 401, 402,
	405, 409, 413, 414, 415, 416, 418, 420, 430, 435,
	449, 450, 451, 452, 453, 456, 457, 462, 463, 464,
	465, 466, 474, 475, 479, 502, 504, 516, 534, 539,
	455, 285, 286, 421, 422, 284, 511, 540, 0, 357,
	1181, 1187, 360, 266, 289, 302, 1196, 526, 476, 215,
	441, 275, 238, 1214, 1216, 200, 234, 218, 244, 259,
	262, 306, 370, 378, 407, 412, 281, 256, 232, 434,
	229, 459, 482, 483, 484, 486, 374, 251, 411, 1177,
	1205, 355, 492, 493, 298, 375, 0, 0, 0, 0,
	491, 0, 675, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 0, 0, 0, 0, 662, 0, 0,
	0, 255, 667, 0, 0, 0, 346, 252, 0, 0,
	408, 0, 194, 0, 461, 239, 356, 353, 499, 267,
	258, 254, 237, 299, 364, 406, 481, 400, 674, 350,
	0, 0, 471, 379, 0, 0, 0, 0, 0, 670,
	671, 0, 0, 0, 0, 0, 0, 0, 0, 305,
	235, 307, 193, 391, 472, 271, 0, 87, 0, 0,
	789, 761, 762, 793, 801, 802, 803, 804, 805, 794,
	796, 0, 0, 226, 795, 233, 702, 704, 703, 721,
	722, 723, 724, 725, 726, 727, 700, 798, 806, 807,
	0, 250, 303, 257, 249, 496, 0, 0, 1903, 1904,
	1905, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 644, 659, 0, 673, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 656, 657, 0, 0, 0, 0,
	755, 0, 658, 0, 0, 666, 808, 809, 810, 811,
	812, 813, 814, 815, 816, 817, 818, 819, 820, 821,
	822, 823, 824, 825, 826, 827, 828, 829, 830, 831,
	832, 833, 834, 835, 836, 837, 838, 839, 840, 841,
	842, 843, 844, 845, 846, 847, 848, 849, 669, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 380, 242, 0, 754, 0, 0, 536, 0, 0,
	752, 0, 0, 0, 0, 345, 0, 312, 189, 213,
	0, 0, 390, 436, 448, 0, 0, 0, 240, 0,
	446, 404, 515, 221, 269, 433, 410, 444, 417, 272,
	0, 0, 445, 351, 501, 427, 512, 537, 538, 248,
	384, 524, 485, 532, 551, 214, 245, 398, 478, 518,
	468, 376, 497, 498, 311, 467, 280, 192, 349, 543,
	212, 454, 230, 219, 503, 521, 274, 431, 201, 480,
	510, 227, 458, 0, 0, 553, 203, 508, 477, 372,
	308, 309, 202, 0, 432, 253, 278, 243, 393, 505,
	506, 241, 554, 708, 531, 208, 0, 530, 386, 500,
	509, 373, 362, 207, 507, 371, 361, 316, 716, 717,
	265, 291, 424, 354, 425, 292, 382, 381, 383, 196,
	519, 0, 197, 0, 473, 520, 555, 222, 223, 225,
	0, 264, 268, 276, 279, 287, 288, 297, 347, 397,
	423, 419, 428, 0, 495, 513, 525, 535, 541, 542,
	544, 545, 546, 547, 548, 550, 549, 385, 295, 469,
	315, 352, 0, 0, 403, 447, 228, 517, 470, 765,
	753, 679, 769, 681, 766, 767, 676, 677, 680, 768,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 0, 756,
	665, 664, 0, 672, 0, 698, 699, 701, 705, 706,
	707, 718, 719, 720, 728, 730, 731, 729, 732, 733,
	734, 737, 738, 739, 740, 735, 736, 741, 682, 686,
	683, 684, 685, 697, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 779, 780, 781, 782, 783, 784,
	711, 715, 714, 712, 713, 709, 710, 663, 188, 209,
	348, 0, 429, 273, 552, 527, 522, 195, 211, 770,
	247, 771, 0, 0, 775, 0, 0, 0, 777, 776,
	0, 778, 745, 744, 0, 0, 772, 773, 0, 774,
	0, 0, 190, 191, 198, 210, 220, 224, 231, 246,
	261, 263, 270, 283, 290, 294, 300, 301, 304, 310,
	359, 365, 366, 367, 368, 387, 388, 389, 392, 395,
	396, 399, 401, 402, 405, 409, 413, 414, 415, 416,
	418, 420, 430, 435, 449, 450, 451, 452, 453, 456,
	457, 462, 463, 464, 465, 466, 474, 475, 479, 502,
	504, 516, 534, 539, 455, 785, 786, 787, 788, 284,
	511, 540, 0, 357, 0, 0, 360, 266, 289, 302,
	0, 526, 476, 215, 441, 275, 238, 800, 0, 200,
	234, 218, 244, 259, 262, 306, 370, 378, 407, 412,
	281, 256, 232, 434, 229, 459, 482, 483, 484, 486,
	374, 251, 411, 0, 375, 355, 492, 493, 298, 491,
	0, 675, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 0, 0, 0, 0, 662, 0, 0, 0,
	255, 667, 0, 0, 0, 346, 252, 0, 0, 408,
	0, 194, 0, 461, 239, 356, 353, 499, 267, 258,
	254, 237, 299, 364, 406, 481, 400, 674, 350, 0,
	0, 471, 379, 0, 0, 0, 0, 0, 670, 671,
	0, 0, 0, 0, 0, 0, 2048, 0, 305, 235,
	307, 193, 391, 472, 271, 0, 87, 0, 0, 789,
	761, 762, 793, 801, 802, 803, 804, 805, 794, 796,
	0, 0, 226, 795, 233, 702, 704, 703, 721, 722,
	723, 724, 725, 726, 727, 700, 798, 806, 807, 2049,
	250, 303, 257, 249, 496, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	644, 659, 0, 673, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 656, 657, 0, 0, 0, 0, 755,
	0, 658, 0, 0, 666, 808, 809, 810, 811, 812,
	813, 814, 815, 816, 817, 818, 819, 820, 821, 822,
	823, 824, 825, 826, 827, 828, 829, 830, 831, 832,
	833, 834, 835, 836, 837, 838, 839, 840, 841, 842,
	843, 844, 845, 846, 847, 848, 849, 669, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	380, 242, 0, 754, 0, 0, 536, 0, 0, 752,
	0, 0, 0, 0, 345, 0, 312, 189, 213, 0,
	0, 390, 436, 448, 0, 0, 0, 240, 0, 446,
	404, 515, 221, 269, 433, 410, 444, 417, 272, 0,
	0, 445, 351, 501, 427, 512, 537, 538, 248, 384,
	524, 485, 532, 551, 214, 245, 398, 478, 518, 468,
	376, 497, 498, 311, 467, 280, 192, 349, 543, 212,
	454, 230, 219, 503, 521, 274, 431, 201, 480, 510,
	227, 458, 0, 0, 553, 203, 508, 477, 372, 308,
	309, 202, 0, 432, 253, 278, 243, 393, 505, 506,
	241, 554, 708, 531, 208, 0, 530, 386, 500, 509,
	373, 362, 207, 507, 371, 361, 316, 716, 717, 265,
	291, 424, 354, 425, 292, 382, 381, 383, 196, 519,
	0, 197, 0, 473, 520, 555, 222, 223, 225, 0,
	264, 268, 276, 279, 287, 288, 297, 347, 397, 423,
	419, 428, 0, 495, 513, 525, 535, 541, 542, 544,
	545, 546, 547, 548, 550, 549, 385, 295, 469, 315,
	352, 0, 0, 403, 447, 228, 517, 470, 765, 753,
	679, 769, 681, 766, 767, 676, 677, 680, 768, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 0, 756, 665,
	664, 0, 672, 0, 698, 699, 701, 705, 706, 707,
	718, 719, 720, 728, 730, 731, 729, 732, 733, 734,
	737, 738, 739, 740, 735, 736, 741, 682, 686, 683,
	684, 685, 697, 687, 688, 689, 690, 691, 692, 693,
	694, 695, 696, 779, 780, 781, 782, 783, 784, 711,
	715, 714, 712, 713, 709, 710, 663, 188, 209, 348,
	0, 429, 273, 552, 527, 522, 195, 211, 770, 247,
	771, 0, 0, 775, 0, 0, 0, 777, 776, 0,
	778, 745, 744, 0, 0, 772, 773, 0, 774, 0,
	0, 190, 191, 198, 210, 220, 224, 231, 246, 261,
	263, 270, 283, 290, 294, 300, 301, 304, 310, 359,
	365, 366, 367, 368, 387, 388, 389, 392, 395, 396,
	399, 401, 402, 405, 409, 413, 414, 415, 416, 418,
	420, 430, 435, 449, 450, 451, 452, 453, 456, 457,
	462, 463, 464, 465, 466, 474, 475, 479, 502, 504,
	516, 534, 539, 455, 785, 786, 787, 788, 284, 511,
	540, 0, 357, 0, 0, 360, 266, 289, 302, 0,
	526, 476, 215, 441, 275, 238, 800, 0, 200, 234,
	218, 244, 259, 262, 306, 370, 378, 407, 412, 281,
	256, 232, 434, 229, 459, 482, 483, 484, 486, 374,
	251, 411, 0, 0, 355, 492, 493, 298, 375, 0,
	0, 0, 78, 491, 0, 675, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 0, 0, 0, 0,
	662, 0, 0, 0, 255, 667, 0, 0, 0, 346,
	252, 0, 0, 408, 0, 194, 0, 461, 239, 356,
	353, 499, 267, 258, 254, 237, 299, 364, 406, 481,
	400, 674, 350, 0, 0, 471, 379, 0, 0, 0,
	0, 0, 670, 671, 0, 0, 0, 0, 0, 0,
	0, 0, 305, 235, 307, 193, 391, 472, 271, 0,
	87, 0, 0, 789, 761, 762, 793, 801, 802, 803,
	804, 805, 794, 796, 0, 0, 226, 795, 233, 702,
	704, 703, 721, 722, 723, 724, 725, 726, 727, 700,
	798, 806, 807, 0, 250, 303, 257, 249, 496, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 644, 659, 0, 673, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 656, 657, 0,
	0, 0, 0, 755, 0, 658, 0, 0, 666, 808,
	809, 810, 811, 812, 813, 814, 815, 816, 817, 818,
	819, 820, 821, 822, 823, 824, 825, 826, 827, 828,
	829, 830, 831, 832, 833, 834, 835, 836, 837, 838,
	839, 840, 841, 842, 843, 844, 845, 846, 847, 848,
	849, 669, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 380, 242, 0, 754, 0, 0,
	536, 0, 0, 752, 0, 0, 0, 0, 345, 0,
	312, 189, 213, 0, 0, 390, 436, 448, 0, 0,
	0, 240, 0, 446, 404, 515, 221, 269, 433, 410,
	444, 417, 272, 0, 0, 445, 351, 501, 427, 512,
	537, 538, 248, 384, 524, 485, 532, 551, 214, 245,
	398, 478, 518, 468, 376, 497, 498, 311, 467, 280,
	192, 349, 543, 212, 454, 230, 219, 503, 521, 274,
	431, 201, 480, 510, 227, 458, 0, 0, 553, 203,
	508, 477, 372, 308, 309, 202, 0, 432, 253, 278,
	243, 393, 505, 506, 241, 554, 708, 531, 208, 0,
	530, 386, 500, 509, 373, 362, 207, 507, 371, 361,
	316, 716, 717, 265, 291, 424, 354, 425, 292, 382,
	381, 383, 196, 519, 0, 197, 0, 473, 520, 555,
	222, 223, 225, 0, 264, 268, 276, 279, 287, 288,
	297, 347, 397, 423, 419, 428, 0, 495, 513, 525,
	535, 541, 542, 544, 545, 546, 547, 548, 550, 549,
	385, 295, 469, 315, 352, 0, 0, 403, 447, 228,
	517, 470, 765, 753, 679, 769, 681, 766, 767, 676,
	677, 680, 768, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 0, 756, 665, 664, 0, 672, 0, 698, 699,
	701, 705, 706, 707, 718, 719, 720, 728, 730, 731,
	729, 732, 733, 734, 737, 738, 739, 740, 735, 736,
	741, 682, 686, 683, 684, 685, 697, 687, 688, 689,
	690, 691, 692, 693, 694, 695, 696, 779, 780, 781,
	782, 783, 784, 711, 715, 714, 712, 713, 709, 710,
	663, 188, 209, 348, 86, 429, 273, 552, 527, 522,
	195, 211, 770, 247, 771, 0, 0, 775, 0, 0,
	0, 777, 776, 0, 778, 745, 744, 0, 0, 772,
	773, 0, 774, 0, 0, 190, 191, 198, 210, 220,
	224, 231, 246, 261, 263, 270, 283, 290, 294, 300,
	301, 304, 310, 359, 365, 366, 367, 368, 387, 388,
	389, 392, 395, 396, 399, 401, 402, 405, 409, 413,
	414, 415, 416, 418, 420, 430, 435, 449, 450, 451,
	452, 453, 456, 457, 462, 463, 464, 465, 466, 474,
	475, 479, 502, 504, 516, 534, 539, 455, 785, 786,
	787, 788, 284, 511, 540, 0, 357, 0, 0, 360,
	266, 289, 302, 0, 526, 476, 215, 441, 275, 238,
	800, 0, 200, 234, 218, 244, 259, 262, 306, 370,
	378, 407, 412, 281, 256, 232, 434, 229, 459, 482,
	483, 484, 486, 374, 251, 411, 0, 375, 355, 492,
	493, 298, 491, 0, 675, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 0, 0, 0, 0, 662,
	0, 0, 0, 255, 667, 0, 0, 0, 346, 252,
	0, 0, 408, 0, 194, 0, 461, 239, 356, 353,
	499, 267, 258, 254, 237, 299, 364, 406, 481, 400,
	674, 350, 0, 0, 471, 379, 0, 0, 0, 0,
	0, 670, 671, 0, 0, 0, 0, 0, 0, 0,
	0, 305, 235, 307, 193, 391, 472, 271, 0, 87,
	0, 0, 789, 761, 762, 793, 801, 802, 803, 804,
	805, 794, 796, 0, 0, 226, 795, 233, 702, 704,
	703, 721, 722, 723, 724, 725, 726, 727, 700, 798,
	806, 807, 0, 250, 303, 257, 249, 496, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 644, 659, 0, 673, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 656, 657, 0, 0,
	0, 0, 755, 0, 658, 0, 0, 666, 808, 809,
	810, 811, 812, 813, 814, 815, 816, 817, 818, 819,
	820, 821, 822, 823, 824, 825, 826, 827, 828, 829,
	830, 831, 832, 833, 834, 835, 836, 837, 838, 839,
	840, 841, 842, 843, 844, 845, 846, 847, 848, 849,
	669, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 380, 242, 0, 754, 0, 0, 536,
	0, 0, 752, 0, 0, 0, 0, 345, 0, 312,
	189, 213, 0, 0, 390, 436, 448, 0, 0, 0,
	240, 0, 446, 404, 515, 221, 269, 433, 410, 444,
	417, 272, 3327, 0, 445, 351, 501, 427, 512, 537,
	538, 248, 384, 524, 485, 532, 551, 214, 245, 398,
	478, 518, 468, 376, 497, 498, 311, 467, 280, 192,
	349, 543, 212, 454, 230, 219, 503, 521, 274, 431,
	201, 480, 510, 227, 458, 0, 0, 553, 203, 508,
	477, 372, 308, 309, 202, 0, 432, 253, 278, 243,
	393, 505, 506, 241, 554, 708, 531, 208, 0, 530,
	386, 500, 509, 373, 362, 207, 507, 371, 361, 316,
	716, 717, 265, 291, 424, 354, 425, 292, 382, 381,
	383, 196, 519, 0, 197, 0, 473, 520, 555, 222,
	223, 225, 0, 264, 268, 276, 279, 287, 288, 297,
	347, 397, 423, 419, 428, 0, 495, 513, 525, 535,
	541, 542, 544, 545, 546, 547, 548, 550, 549, 385,
	295, 469, 315, 352, 0, 0, 403, 447, 228, 517,
	470, 765, 753, 679, 769, 681, 766, 767, 676, 677,
	680, 768, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	0, 756, 665, 664, 0, 672, 0, 698, 699, 701,
	705, 706, 707, 718, 719, 720, 728, 730, 731, 729,
	732, 733, 734, 737, 738, 739, 740, 735, 736, 741,
	682, 686, 683, 684, 685, 697, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 779, 780, 781, 782,
	783, 784, 711, 715, 714, 712, 713, 709, 710, 663,
	188, 209, 348, 0, 429, 273, 552, 527, 522, 195,
	211, 770, 247, 771, 0, 0, 775, 0, 0, 0,
	777, 776, 0, 778, 745, 744, 0, 0, 772, 773,
	0, 774, 0, 0, 190, 191, 198, 210, 220, 224,
	231, 246, 261, 263, 270, 283, 290, 294, 300, 301,
	304, 310, 359, 365, 366, 367, 368, 387, 388, 389,
	392, 395, 396, 399, 401, 402, 405, 409, 413, 414,
	415, 416, 418, 420, 430, 435, 449, 450, 451, 452,
	453, 456, 457, 462, 463, 464, 465, 466, 474, 475,
	479, 502, 504, 516, 534, 539, 455, 785, 786, 787,
	788, 284, 511, 540, 0, 357, 0, 0, 360, 266,
	289, 302, 0, 526, 476, 215, 441, 275, 238, 800,
	0, 200, 234, 218, 244, 259, 262, 306, 370, 378,
	407, 412, 281, 256, 232, 434, 229, 459, 482, 483,
	484, 486, 374, 251, 411, 0, 375, 355, 492, 493,
	298, 491, 0, 675, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 0, 0, 0, 0, 662, 0,
	0, 0, 255, 667, 0, 0, 0, 346, 252, 0,
	0, 408, 0, 194, 0, 461, 239, 356, 353, 499,
	267, 258, 254, 237, 299, 364, 406, 481, 400, 674,
	350, 0, 0, 471, 379, 0, 0, 0, 0, 0,
	670, 671, 0, 0, 0, 0, 0, 0, 0, 0,
	305, 235, 307, 193, 391, 472, 271, 0, 87, 0,
	1479, 789, 761, 762, 793, 801, 802, 803, 804, 805,
	794, 796, 0, 0, 226, 795, 233, 702, 704, 703,
	721, 722, 723, 724, 725, 726, 727, 700, 798, 806,
	807, 0, 250, 303, 257, 249, 496, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 644, 659, 0, 673, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 656, 657, 0, 0, 0,
	0, 755, 0, 658, 0, 0, 666, 808, 809, 810,
	811, 812, 813, 814, 815, 816, 817, 818, 819, 820,
	821, 822, 823, 824, 825, 826, 827, 828, 829, 830,
	831, 832, 833, 834, 835, 836, 837, 838, 839, 840,
	841, 842, 843, 844, 845, 846, 847, 848, 849, 669,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 380, 242, 0, 754, 0, 0, 536, 0,
	0, 752, 0, 0, 0, 0, 345, 0, 312, 189,
	213, 0, 0, 390, 436, 448, 0, 0, 0, 240,
	0, 446, 404, 515, 221, 269, 433, 410, 444, 417,
	272, 0, 0, 445, 351, 501, 427, 512, 537, 538,
	248, 384, 524, 485, 532, 551, 214, 245, 398, 478,
	518, 468, 376, 497, 498, 311, 467, 280, 192, 349,
	543, 212, 454, 230, 219, 503, 521, 274, 431, 201,
	480, 510, 227, 458, 0, 0, 553, 203, 508, 477,
	372, 308, 309, 202, 0, 432, 253, 278, 243, 393,
	505, 506, 241, 554, 708, 531, 208, 0, 530, 386,
	500, 509, 373, 362, 207, 507, 371, 361, 316, 716,
	717, 265, 291, 424, 354, 425, 292, 382, 381, 383,
	196, 519, 0, 197, 0, 473, 520, 555, 222, 223,
	225, 0, 264, 268, 276, 279, 287, 288, 297, 347,
	397, 423, 419, 428, 0, 495, 513, 525, 535, 541,
	542, 544, 545, 546, 547, 548, 550, 549, 385, 295,
	469, 315, 352, 0, 0, 403, 447, 228, 517, 470,
	765, 753, 679, 769, 681, 766, 767, 676, 677, 680,
	768, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 0,
	756, 665, 664, 0, 672, 0, 698, 699, 701, 705,
	706, 707, 718, 719, 720, 728, 730, 731, 729, 732,
	733, 734, 737, 738, 739, 740, 735, 736, 741, 682,
	686, 683, 684, 685, 697, 687, 688, 689, 690, 691,
	692, 693, 694, 695, 696, 779, 780, 781, 782, 783,
	784, 711, 715, 714, 712, 713, 709, 710, 663, 188,
	209, 348, 0, 429, 273, 552, 527, 522, 195, 211,
	770, 247, 771, 0, 0, 775, 0, 0, 0, 777,
	776, 0, 778, 745, 744, 0, 0, 772, 773, 0,
	774, 0, 0, 190, 191, 198, 210, 220, 224, 231,
	246, 261, 263, 270, 283, 290, 294, 300, 301, 304,
	310, 359, 365, 366, 367, 368, 387, 388, 389, 392,
	395, 396, 399, 401, 402, 405, 409, 413, 414, 415,
	416, 418, 420, 430, 435, 449, 450, 451, 452, 453,
	456, 457, 462, 463, 464, 465, 466, 474, 475, 479,
	502, 504, 516, 534, 539, 455, 785, 786, 787, 788,
	284, 511, 540, 0, 357, 0, 0, 360, 266, 289,
	302, 0, 526, 476, 215, 441, 275, 238, 800, 0,
	200, 234, 218, 244, 259, 262, 306, 370, 378, 407,
	412, 281, 256, 232, 434, 229, 459, 482, 483, 484,
	486, 374, 251, 411, 0, 375, 355, 492, 493, 298,
	491, 0, 675, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 0, 0, 0, 0, 662, 0, 0,
	0, 255, 667, 0, 0, 0, 346, 252, 0, 0,
	408, 0, 194, 0, 461, 239, 356, 353, 499, 267,
	258, 254, 237, 299, 364, 406, 481, 400, 674, 350,
	0, 0, 471, 379, 0, 0, 0, 0, 0, 670,
	671, 0, 0, 0, 0, 0, 0, 0, 0, 305,
	235, 307, 193, 391, 472, 271, 0, 87, 0, 0,
	789, 761, 762, 793, 801, 802, 803, 804, 805, 794,
	796, 0, 0, 226, 795, 233, 702, 704, 703, 721,
	722, 723, 724, 725, 726, 727, 700, 798, 806, 807,
	0, 250, 303, 257, 249, 496, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 644, 659, 0, 673, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 656, 657, 889, 0, 0, 0,
	755, 0, 658, 0, 0, 666, 808, 809, 810, 811,
	812, 813, 814, 815, 816, 817, 818, 819, 820, 821,
	822, 823, 824, 825, 826, 827, 828, 829, 830, 831,
	832, 833, 834, 835, 836, 837, 838, 839, 840, 841,
	842, 843, 844, 845, 846, 847, 848, 849, 669, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 380, 242, 0, 754, 0, 0, 536, 0, 0,
	752, 0, 0, 0, 0, 345, 0, 312, 189, 213,
	0, 0, 390, 436, 448, 0, 0, 0, 240, 0,
	446, 404, 515, 221, 269, 433, 410, 444, 417, 272,
	0, 0, 445, 351, 501, 427, 512, 537, 538, 248,
	384, 524, 485, 532, 551, 214, 245, 398, 478, 518,
	468, 376, 497, 498, 311, 467, 280, 192, 349, 543,
	212, 454, 230, 219, 503, 521, 274, 431, 201, 480,
	510, 227, 458, 0, 0, 553, 203, 508, 477, 372,
	308, 309, 202, 0, 432, 253, 278, 243, 393, 505,
	506, 241, 554, 708, 531, 208, 0, 530, 386, 500,
	509, 373, 362, 207, 507, 371, 361, 316, 716, 717,
	265, 291, 424, 354, 425, 292, 382, 381, 383, 196,
	519, 0, 197, 0, 473, 520, 555, 222, 223, 225,
	0, 264, 268, 276, 279, 287, 288, 297, 347, 397,
	423, 419, 428, 0, 495, 513, 525, 535, 541, 542,
	544, 545, 546, 547, 548, 550, 549, 385, 295, 469,
	315, 352, 0, 0, 403, 447, 228, 517, 470, 765,
	753, 679, 769, 681, 766, 767, 676, 677, 680, 768,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 0, 756,
	665, 664, 0, 672, 0, 698, 699, 701, 705, 706,
	707, 718, 719, 720, 728, 730, 731, 729, 732, 733,
	734, 737, 738, 739, 740, 735, 736, 741, 682, 686,
	683, 684, 685, 697, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 779, 780, 781, 782, 783, 784,
	711, 715, 714, 712, 713, 709, 710, 663, 188, 209,
	348, 0, 429, 273, 552, 527, 522, 195, 211, 770,
	247, 771, 0, 0, 775, 0, 0, 0, 777, 776,
	0, 778, 745, 744, 0, 0, 772, 773, 0, 774,
	0, 0, 190, 191, 198, 210, 220, 224, 231, 246,
	261, 263, 270, 283, 290, 294, 300, 301, 304, 310,
	359, 365, 366, 367, 368, 387, 388, 389, 392, 395,
	396, 399, 401, 402, 405, 409, 413, 414, 415, 416,
	418, 420, 430, 435, 449, 450, 451, 452, 453, 456,
	457, 462, 463, 464, 465, 466, 474, 475, 479, 502,
	504, 516, 534, 539, 455, 785, 786, 787, 788, 284,
	511, 540, 0, 357, 0, 0, 360, 266, 289, 302,
	0, 526, 476, 215, 441, 275, 238, 800, 0, 200,
	234, 218, 244, 259, 262, 306, 370, 378, 407, 412,
	281, 256, 232, 434, 229, 459, 482, 483, 484, 486,
	374, 251, 411, 0, 375, 355, 492, 493, 298, 491,
	0, 675, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 0, 0, 0, 0, 662, 0, 0, 0,
	255, 667, 0, 0, 0, 346, 252, 0, 0, 408,
	0, 194, 0, 461, 239, 356, 353, 499, 267, 258,
	254, 237, 299, 364, 406, 481, 400, 674, 350, 0,
	0, 471, 379, 0, 0, 0, 0, 0, 670, 671,
	0, 0, 0, 0, 0, 0, 0, 0, 305, 235,
	307, 193, 391, 472, 271, 0, 87, 0, 0, 789,
	761, 762, 793, 801, 802, 803, 804, 805, 794, 796,
	0, 0, 226, 795, 233, 702, 704, 703, 721, 722,
	723, 724, 725, 726, 727, 700, 798, 806, 807, 0,
	250, 303, 257, 249, 496, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	644, 659, 0, 673, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 656, 657, 0, 0, 0, 0, 755,
	0, 658, 0, 0, 666, 808, 809, 810, 811, 812,
	813, 814, 815, 816, 817, 818, 819, 820, 821, 822,
	823, 824, 825, 826, 827, 828, 829, 830, 831, 832,
	833, 834, 835, 836, 837, 838, 839, 840, 841, 842,
	843, 844, 845, 846, 847, 848, 849, 669, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	380, 242, 0, 754, 0, 0, 536, 0, 0, 752,
	0, 0, 0, 0, 345, 0, 312, 189, 213, 0,
	0, 390, 436, 448, 0, 0, 0, 240, 0, 446,
	404, 515, 221, 269, 433, 410, 444, 417, 272, 0,
	0, 445, 351, 501, 427, 512, 537, 538, 248, 384,
	524, 485, 532, 551, 214, 245, 398, 478, 518, 468,
	376, 497, 498, 311, 467, 280, 192, 349, 543, 212,
	454, 230, 219, 503, 521, 274, 431, 201, 480, 510,
	227, 458, 0, 0, 553, 203, 508, 477, 372, 308,
	309, 202, 0, 432, 253, 278, 243, 393, 505, 506,
	241, 554, 708, 531, 208, 0, 530, 386, 500, 509,
	373, 362, 207, 507, 371, 361, 316, 716, 717, 265,
	291, 424, 354, 425, 292, 382, 381, 383, 196, 519,
	0, 197, 0, 473, 520, 555, 222, 223, 225, 0,
	264, 268, 276, 279, 287, 288, 297, 347, 397, 423,
	419, 428, 0, 495, 513, 525, 535, 541, 542, 544,
	545, 546, 547, 548, 550, 549, 385, 295, 469, 315,
	352, 0, 0, 403, 447, 228, 517, 470, 765, 753,
	679, 769, 681, 766, 767, 676, 677, 680, 768, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 0, 756, 665,
	664, 0, 672, 0, 698, 699, 701, 705, 706, 707,
	718, 719, 720, 728, 730, 731, 729, 732, 733, 734,
	737, 738, 739, 740, 735, 736, 741, 682, 686, 683,
	684, 685, 697, 687, 688, 689, 690, 691, 692, 693,
	694, 695, 696, 779, 780, 781, 782, 783, 784, 711,
	715, 714, 712, 713, 709, 710, 663, 188, 209, 348,
	0, 429, 273, 552, 527, 522, 195, 211, 770, 247,
	771, 0, 0, 775, 0, 0, 0, 777, 776, 0,
	778, 745, 744, 0, 0, 772, 773, 0, 774, 0,
	0, 190, 191, 198, 210, 220, 224, 231, 246, 261,
	263, 270, 283, 290, 294, 300, 301, 304, 310, 359,
	365, 366, 367, 368, 387, 388, 389, 392, 395, 396,
	399, 401, 402, 405, 409, 413, 414, 415, 416, 418,
	420, 430, 435, 449, 450, 451, 452, 453, 456, 457,
	462, 463, 464, 465, 466, 474, 475, 479, 502, 504,
	516, 534, 539, 455, 785, 786, 787, 788, 284, 511,
	540, 0, 357, 0, 0, 360, 266, 289, 302, 0,
	526, 476, 215, 441, 275, 238, 800, 0, 200, 234,
	218, 244, 259, 262, 306, 370, 378, 407, 412, 281,
	256, 232, 434, 229, 459, 482, 483, 484, 486, 374,
	251, 411, 0, 375, 355, 492, 493, 298, 491, 0,
	675, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 0, 0, 0, 0, 662, 0, 0, 0, 255,
	667, 0, 0, 0, 346, 252, 0, 0, 408, 0,
	194, 0, 461, 239, 356, 353, 499, 267, 258, 254,
	237, 299, 364, 406, 481, 400, 674, 350, 0, 0,
	471, 379, 0, 0, 0, 0, 0, 670, 671, 0,
	0, 0, 0, 0, 0, 0, 0, 305, 235, 307,
	193, 391, 472, 271, 0, 87, 0, 0, 789, 761,
	762, 793, 801, 802, 803, 804, 805, 794, 796, 0,
	0, 226, 795, 233, 702, 704, 703, 721, 722, 723,
	724, 725, 726, 727, 700, 798, 806, 807, 0, 250,
	303, 257, 249, 496, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	659, 0, 673, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 656, 657, 0, 0, 0, 0, 755, 0,
	658, 0, 0, 666, 808, 809, 810, 811, 812, 813,
	814, 815, 816, 817, 818, 819, 820, 821, 822, 823,
	824, 825, 826, 827, 828, 829, 830, 831, 832, 833,
	834, 835, 836, 837, 838, 839, 840, 841, 842, 843,
	844, 845, 846, 847, 848, 849, 669, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 380,
	242, 0, 754, 0, 0, 536, 0, 0, 752, 0,
	0, 0, 0, 345, 0, 312, 189, 213, 0, 0,
	390, 436, 448, 0, 0, 0, 240, 0, 446, 404,
	515, 221, 269, 433, 410, 444, 417, 272, 0, 0,
	445, 351, 501, 427, 512, 537, 538, 248, 384, 524,
	485, 532, 551, 214, 245, 398, 478, 518, 468, 376,
	497, 498, 311, 467, 280, 192, 349, 543, 212, 454,
	230, 219, 503, 521, 274, 431, 201, 480, 510, 227,
	458, 0, 0, 553, 203, 508, 477, 372, 308, 309,
	202, 0, 432, 253, 278, 243, 393, 505, 506, 241,
	554, 708, 531, 208, 0, 530, 386, 500, 509, 373,
	362, 207, 507, 371, 361, 316, 716, 717, 265, 291,
	424, 354, 425, 292, 382, 381, 383, 196, 519, 0,
	197, 0, 473, 520, 555, 222, 223, 225, 0, 264,
	268, 276, 279, 287, 288, 297, 347, 397, 423, 419,
	428, 0, 495, 513, 525, 535, 541, 542, 544, 545,
	546, 547, 548, 550, 549, 385, 295, 469, 315, 352,
	0, 0, 403, 447, 228, 517, 470, 765, 753, 679,
	769, 681, 766, 767, 676, 677, 680, 768, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 0, 756, 665, 664,
	0, 672, 0, 698, 699, 701, 705, 706, 707, 718,
	719, 720, 728, 730, 731, 729, 732, 733, 734, 737,
	738, 739, 740, 735, 736, 741, 682, 686, 683, 684,
	685, 697, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 779, 780, 781, 782, 783, 784, 711, 715,
	714, 712, 713, 709, 710, 663, 188, 209, 348, 0,
	429, 273, 552, 527, 522, 195, 211, 770, 247, 771,
	0, 0, 775, 0, 0, 0, 777, 776, 0, 778,
	745, 744, 0, 0, 772, 773, 0, 774, 0, 0,
	190, 191, 198, 210, 220, 224, 231, 246, 261, 263,
	270, 283, 290, 294, 300, 301, 304, 310, 359, 365,
	366, 367, 368, 387, 388, 389, 392, 395, 396, 399,
	401, 402, 405, 409, 413, 414, 415, 416, 418, 420,
	430, 435, 449, 450, 451, 452, 453, 456, 457, 462,
	463, 464, 465, 466, 474, 475, 479, 502, 504, 516,
	534, 539, 455, 785, 786, 787, 788, 284, 511, 540,
	0, 357, 0, 0, 360, 266, 289, 302, 0, 526,
	476, 215, 441, 275, 238, 800, 0, 200, 234, 218,
	244, 259, 262, 306, 370, 378, 407, 412, 281, 256,
	232, 434, 229, 459, 482, 483, 484, 486, 374, 251,
	411, 0, 375, 355, 492, 493, 298, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 346, 252, 0, 0, 408, 0, 194,
	0, 461, 239, 356, 353, 499, 267, 258, 254, 237,
	299, 364, 406, 481, 400, 0, 350, 0, 0, 471,
	379, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 305, 235, 307, 193,
	391, 472, 271, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 233, 331, 340, 339, 320, 321, 323, 325,
	330, 337, 343, 0, 0, 0, 0, 0, 250, 303,
	257, 249, 496, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 961, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 380, 242,
	0, 0, 0, 960, 536, 0, 0, 0, 0, 0,
	957, 958, 345, 918, 312, 189, 213, 951, 955, 390,
	436, 448, 0, 0, 0, 240, 0, 446, 404, 515,
	221, 269, 433, 410, 444, 417, 272, 0, 0, 445,
	351, 501, 427, 512, 537, 538, 248, 384, 524, 485,
	532, 551, 214, 245, 398, 478, 518, 468, 376, 497,
	498, 311, 467, 280, 192, 349, 543, 212, 454, 230,
	219, 503, 521, 274, 431, 201, 480, 510, 227, 458,
	0, 0, 553, 203, 508, 477, 372, 308, 309, 202,
	0, 432, 253, 278, 243, 393, 505, 506, 241, 554,
	216, 531, 208, 0, 530, 386, 500, 509, 373, 362,
	207, 507, 371, 361, 316, 335, 336, 265, 291, 424,
	354, 425, 292, 382, 381, 383, 196, 519, 0, 197,
	0, 473, 520, 555, 222, 223, 225, 0, 264, 268,
	276, 279, 287, 288, 297, 347, 397, 423, 419, 428,
	0, 495, 513, 525, 535, 541, 542, 544, 545, 546,
	547, 548, 550, 549, 385, 295, 469, 315, 352, 0,
	0, 403, 447, 228, 517, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 574, 363, 460, 514, 317, 329,
	332, 322, 341, 0, 342, 318, 319, 324, 326, 327,
	328, 333, 334, 338, 344, 236, 199, 369, 377, 494,
	296, 204, 205, 206, 487, 488, 489, 490, 528, 529,
	533, 437, 438, 439, 440, 277, 523, 293, 443, 442,
	313, 314, 358, 426, 0, 188, 209, 348, 0, 429,
	273, 552, 527, 522, 195, 211, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	191, 198, 210, 220, 224, 231, 246, 261, 263, 270,
	283, 290, 294, 300, 301, 304, 310, 359, 365, 366,
	367, 368, 387, 388, 389, 392, 395, 396, 399, 401,
	402, 405, 409, 413, 414, 415, 416, 418, 420, 430,
	435, 449, 450, 451, 452, 453, 456, 457, 462, 463,
	464, 465, 466, 474, 475, 479, 502, 504, 516, 534,
	539, 455, 285, 286, 421, 422, 284, 511, 540, 0,
	357, 0, 0, 360, 266, 289, 302, 0, 526, 476,
	215, 441, 275, 238, 0, 0, 200, 234, 218, 244,
	259, 262, 306, 370, 378, 407, 412, 281, 256, 232,
	434, 229, 459, 482, 483, 484, 486, 374, 251, 411,
	0, 0, 355, 492, 493, 298, 375, 0, 0, 0,
	78, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 346, 252, 0,
	0, 408, 0, 194, 0, 461, 239, 356, 353, 499,
	267, 258, 254, 237, 299, 364, 406, 481, 400, 0,
	350, 0, 0, 471, 379, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	305, 235, 307, 193, 391, 472, 271, 0, 87, 0,
	0, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 233, 331, 340, 339,
	320, 321, 323, 325, 330, 337, 343, 0, 0, 0,
	0, 0, 250, 303, 257, 249, 496, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 380, 242, 0, 0, 0, 0, 536, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 312, 189,
	213, 0, 0, 390, 436, 448, 0, 0, 0, 240,
	0, 446, 404, 515, 221, 269, 433, 410, 444, 417,
	272, 0, 0, 445, 351, 501, 427, 512, 537, 538,
	248, 384, 524, 485, 532, 551, 214, 245, 398, 478,
	518, 468, 376, 497, 498, 311, 467, 280, 192, 349,
	543, 212, 454, 230, 219, 503, 521, 274, 431, 201,
	480, 510, 227, 458, 0, 0, 553, 203, 508, 477,
	372, 308, 309, 202, 0, 432, 253, 278, 243, 393,
	505, 506, 241, 554, 216, 531, 208, 0, 530, 386,
	500, 509, 373, 362, 207, 507, 371, 361, 316, 335,
	336, 265, 291, 424, 354, 425, 292, 382, 381, 383,
	196, 519, 0, 197, 0, 473, 520, 555, 222, 223,
	225, 0, 264, 268, 276, 279, 287, 288, 297, 347,
	397, 423, 419, 428, 0, 495, 513, 525, 535, 541,
	542, 544, 545, 546, 547, 548, 550, 549, 385, 295,
	469, 315, 352, 0, 0, 403, 447, 228, 517, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 574, 363,
	460, 514, 317, 329, 332, 322, 341, 0, 342, 318,
	319, 324, 326, 327, 328, 333, 334, 338, 344, 236,
	199, 369, 377, 494, 296, 204, 205, 206, 487, 488,
	489, 490, 528, 529, 533, 437, 438, 439, 440, 277,
	523, 293, 443, 442, 313, 314, 358, 426, 0, 188,
	209, 348, 86, 429, 273, 552, 527, 522, 195, 211,
	0, 247, 0, 0, 0, 0, 0, 0, 2035, 0,
	0, 2034, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 190, 191, 198, 210, 220, 224, 231,
	246, 261, 263, 270, 283, 290, 294, 300, 301, 304,
	310, 359, 365, 366, 367, 368, 387, 388, 389, 392,
	395, 396, 399, 401, 402, 405, 409, 413, 414, 415,
	416, 418, 420, 430, 435, 449, 450, 451, 452, 453,
	456, 457, 462, 463, 464, 465, 466, 474, 475, 479,
	502, 504, 516, 534, 539, 455, 285, 286, 421, 422,
	284, 511, 540, 0, 357, 0, 0, 360, 266, 289,
	302, 0, 526, 476, 215, 441, 275, 238, 0, 0,
	200, 234, 218, 244, 259, 262, 306, 370, 378, 407,
	412, 281, 256, 232, 434, 229, 459, 482, 483, 484,
	486, 374, 251, 411, 0, 1498, 355, 492, 493, 298,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 0, 0, 0, 1500, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 346, 252, 0, 0,
	408, 0, 194, 0, 461, 239, 356, 353, 499, 267,
	258, 254, 237, 299, 364, 406, 481, 400, 0, 350,
	0, 0, 471, 379, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 305,
	235, 307, 193, 391, 472, 271, 0, 0, 0, 0,
	620, 0, 0, 0, 1502, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 233, 331, 340, 339, 320,
	321, 323, 325, 330, 337, 343, 0, 0, 0, 0,
	0, 250, 303, 257, 249, 496, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 0, 1284, 0, 1285,
	1286, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 380, 242, 0, 0, 0, 0, 536, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 312, 189, 213,
	0, 0, 390, 436, 448, 0, 0, 0, 240, 0,
	446, 404, 515, 221, 269, 433, 410, 444, 417, 272,
	0, 0, 445, 351, 501, 427, 512, 537, 538, 248,
	384, 524, 485, 532, 551, 214, 245, 398, 478, 518,
	468, 376, 497, 498, 311, 467, 280, 192, 349, 543,
	212, 454, 230, 219, 503, 521, 274, 431, 201, 480,
	510, 227, 458, 0, 0, 553, 203, 508, 477, 372,
	308, 309, 202, 0, 432, 253, 278, 243, 393, 505,
	506, 241, 554, 216, 531, 208, 0, 530, 386, 500,
	509, 373, 362, 207, 507, 371, 361, 316, 335, 336,
	265, 291, 424, 354, 425, 292, 382, 381, 383, 196,
	519, 0, 197, 0, 473, 520, 555, 222, 223, 225,
	0, 264, 268, 276, 279, 287, 288, 297, 347, 397,
	423, 419, 428, 0, 495, 513, 525, 535, 541, 542,
	544, 545, 546, 547, 548, 550, 549, 385, 295, 469,
	315, 352, 0, 0, 403, 447, 228, 517, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 574, 363, 460,
	514, 317, 329, 332, 322, 341, 0, 342, 318, 319,
	324, 326, 327, 328, 333, 334, 338, 344, 236, 199,
	369, 377, 494, 296, 204, 205, 206, 487, 488, 489,
	490, 528, 529, 533, 437, 438, 439, 440, 277, 523,
	293, 443, 442, 313, 314, 358, 426, 0, 188, 209,
	348, 0, 429, 273, 552, 527, 522, 195, 211, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 191, 198, 210, 220, 224, 231, 246,
	261, 263, 270, 283, 290, 294, 300, 301, 304, 310,
	359, 365, 366, 367, 368, 387, 388, 389, 392, 395,
	396, 399, 401, 402, 405, 409, 413, 414, 415, 416,
	418, 420, 430, 435, 449, 450, 451, 452, 453, 456,
	457, 462, 463, 464, 465, 466, 474, 475, 479, 502,
	504, 516, 534, 539, 455, 285, 286, 421, 422, 284,
	511, 540, 0, 357, 0, 0, 360, 266, 289, 302,
	0, 526, 476, 215, 441, 275, 238, 0, 0, 200,
	234, 218, 244, 259, 262, 306, 370, 378, 407, 412,
	281, 256, 232, 434, 229, 459, 482, 483, 484, 486,
	374, 251, 411, 0, 375, 355, 492, 493, 298, 491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 346, 252, 0, 0, 408,
	0, 194, 0, 461, 239, 356, 353, 499, 267, 258,
	254, 237, 299, 364, 406, 481, 400, 0, 350, 0,
	0, 471, 379, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 305, 235,
	307, 193, 391, 472, 271, 0, 0, 0, 0, 789,
	0, 0, 1442, 1445, 0, 0, 0, 0, 1441, 1444,
	0, 0, 226, 1440, 233, 331, 340, 339, 320, 321,
	323, 325, 330, 337, 343, 0, 0, 0, 0, 0,
	250, 303, 257, 249, 496, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	380, 242, 0, 0, 0, 0, 536, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 312, 189, 213, 0,
	0, 390, 436, 448, 0, 0, 0, 240, 0, 446,
	404, 515, 221, 269, 433, 410, 444, 417, 272, 0,
	0, 445, 351, 501, 427, 512, 537, 538, 248, 384,
	524, 485, 532, 551, 214, 245, 398, 478, 518, 468,
	376, 497, 498, 311, 467, 280, 192, 349, 543, 212,
	454, 230, 219, 503, 521, 274, 431, 201, 480, 510,
	227, 458, 0, 0, 553, 203, 508, 477, 372, 308,
	309, 202, 0, 432, 253, 278, 243, 393, 505, 506,
	241, 554, 216, 531, 208, 0, 530, 386, 500, 509,
	373, 362, 207, 507, 371, 361, 316, 335, 336, 265,
	291, 424, 354, 425, 292, 382, 381, 383, 196, 519,
	0, 197, 0, 473, 520, 555, 222, 223, 225, 0,
	264, 268, 276, 279, 287, 288, 297, 347, 397, 423,
	419, 428, 0, 495, 513, 525, 535, 541, 542, 544,
	545, 546, 547, 548, 550, 549, 385, 295, 469, 315,
	352, 0, 0, 403, 447, 228, 517, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 574, 363, 460, 514,
	317, 329, 332, 322, 341, 0, 342, 318, 319, 324,
	326, 327, 328, 333, 334, 338, 344, 236, 199, 369,
	377, 494, 296, 204, 205, 206, 487, 488, 489, 490,
	528, 529, 533, 437, 438, 439, 440, 277, 523, 293,
	443, 442, 313, 314, 358, 426, 0, 188, 209, 348,
	0, 429, 273, 552, 527, 522, 195, 211, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 191, 198, 210, 220, 224, 231, 246, 261,
	263, 270, 283, 290, 294, 300, 301, 304, 310, 359,
	365, 366, 367, 368, 387, 388, 389, 392, 395, 396,
	399, 401, 402, 405, 409, 413, 414, 415, 416, 418,
	420, 430, 435, 449, 450, 451, 452, 453, 456, 457,
	462, 463, 464, 465, 466, 474, 475, 479, 502, 504,
	516, 534, 539, 455, 285, 286, 421, 422, 284, 511,
	540, 0, 357, 0, 0, 360, 266, 289, 302, 0,
	526, 476, 215, 441, 275, 238, 0, 0, 200, 234,
	218, 244, 259, 262, 306, 370, 378, 407, 412, 281,
	256, 232, 434, 229, 459, 482, 483, 484, 486, 374,
	251, 411, 0, 0, 355, 492, 493, 298, 375, 0,
	0, 0, 78, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 346,
	252, 0, 0, 408, 0, 194, 0, 461, 239, 356,
	353, 499, 267, 258, 254, 237, 299, 364, 406, 481,
	400, 0, 350, 0, 0, 471, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 305, 235, 307, 193, 391, 472, 271, 0,
	87, 0, 1479, 620, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 233, 331,
	340, 339, 320, 321, 323, 325, 330, 337, 343, 0,
	0, 0, 0, 0, 250, 303, 257, 249, 496, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 380, 242, 0, 0, 0, 0,
	536, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	312, 189, 213, 0, 0, 390, 436, 448, 0, 0,
	0, 240, 0, 446, 404, 515, 221, 269, 433, 410,
	444, 417, 272, 0, 0, 445, 351, 501, 427, 512,
	537, 538, 248, 384, 524, 485, 532, 551, 214, 245,
	398, 478, 518, 468, 376, 497, 498, 311, 467, 280,
	192, 349, 543, 212, 454, 230, 219, 503, 521, 274,
	431, 201, 480, 510, 227, 458, 0, 0, 553, 203,
	508, 477, 372, 308, 309, 202, 0, 432, 253, 278,
	243, 393, 505, 506, 241, 554, 216, 531, 208, 0,
	530, 386, 500, 509, 373, 362, 207, 507, 371, 361,
	316, 335, 336, 265, 291, 424, 354, 425, 292, 382,
	381, 383, 196, 519, 0, 197, 0, 473, 520, 555,
	222, 223, 225, 0, 264, 268, 276, 279, 287, 288,
	297, 347, 397, 423, 419, 428, 0, 495, 513, 525,
	535, 541, 542, 544, 545, 546, 547, 548, 550, 549,
	385, 295, 469, 315, 352, 0, 0, 403, 447, 228,
	517, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	574, 363, 460, 514, 317, 329, 332, 322, 341, 0,
	342, 318, 319, 324, 326, 327, 328, 333, 334, 338,
	344, 236, 199, 369, 377, 494, 296, 204, 205, 206,
	487, 488, 489, 490, 528, 529, 533, 437, 438, 439,
	440, 277, 523, 293, 443, 442, 313, 314, 358, 426,
	0, 188, 209, 348, 86, 429, 273, 552, 527, 522,
	195, 211, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 191, 198, 210, 220,
	224, 231, 246, 261, 263, 270, 283, 290, 294, 300,
	301, 304, 310, 359, 365, 366, 367, 368, 387, 388,
	389, 392, 395, 396, 399, 401, 402, 405, 409, 413,
	414, 415, 416, 418, 420, 430, 435, 449, 450, 451,
	452, 453, 456, 457, 462, 463, 464, 465, 466, 474,
	475, 479, 502, 504, 516, 534, 539, 455, 285, 286,
	421, 422, 284, 511, 540, 0, 357, 0, 0, 360,
	266, 289, 302, 0, 526, 476, 215, 441, 275, 238,
	0, 0, 200, 234, 218, 244, 259, 262, 306, 370,
	378, 407, 412, 281, 256, 232, 434, 229, 459, 482,
	483, 484, 486, 374, 251, 411, 0, 375, 355, 492,
	493, 298, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 346, 252,
	0, 0, 408, 0, 194, 0, 461, 239, 356, 353,
	499, 267, 258, 254, 237, 299, 364, 406, 481, 400,
	0, 350, 0, 0, 471, 379, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 305, 235, 307, 193, 391, 472, 271, 0, 87,
	0, 0, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 233, 331, 340,
	339, 320, 321, 323, 325, 330, 337, 343, 0, 0,
	0, 0, 0, 250, 303, 257, 249, 496, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 380, 242, 0, 0, 0, 0, 536,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 312,
	189, 213, 0, 0, 390, 436, 448, 0, 0, 0,
	240, 0, 446, 404, 515, 221, 269, 433, 410, 444,
	417, 272, 0, 0, 445, 351, 501, 427, 512, 537,
	538, 248, 384, 524, 485, 532, 551, 214, 245, 398,
	478, 518, 468, 376, 497, 498, 311, 467, 280, 192,
	349, 543, 212, 454, 230, 219, 503, 521, 274, 431,
	201, 480, 510, 227, 458, 0, 0, 553, 203, 508,
	477, 372, 308, 309, 202, 0, 432, 253, 278, 243,
	393, 505, 506, 241, 554, 216, 531, 208, 0, 530,
	386, 500, 509, 373, 362, 207, 507, 371, 361, 316,
	335, 336, 265, 291, 424, 354, 425, 292, 382, 381,
	383, 196, 519, 0, 197, 0, 473, 520, 555, 222,
	223, 225, 0, 264, 268, 276, 279, 287, 288, 297,
	347, 397, 423, 419, 428, 0, 495, 513, 525, 535,
	541, 542, 544, 545, 546, 547, 548, 550, 549, 385,
	295, 469, 315, 352, 0, 0, 403, 447, 228, 517,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 574,
	363, 460, 514, 317, 329, 332, 322, 341, 0, 342,
	318, 319, 324, 326, 327, 328, 333, 334, 338, 344,
	236, 199, 369, 377, 494, 296, 204, 205, 206, 487,
	488, 489, 490, 528, 529, 533, 437, 438, 439, 440,
	277, 523, 293, 443, 442, 313, 314, 358, 426, 0,
	188, 209, 348, 0, 429, 273, 552, 527, 522, 195,
	211, 0, 247, 0, 0, 0, 0, 0, 0, 2035,
	0, 0, 2034, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 191, 198, 210, 220, 224,
	231, 246, 261, 263, 270, 283, 290, 294, 300, 301,
	304, 310, 359, 365, 366, 367, 368, 387, 388, 389,
	392, 395, 396, 399, 401, 402, 405, 409, 413, 414,
	415, 416, 418, 420, 430, 435, 449, 450, 451, 452,
	453, 456, 457, 462, 463, 464, 465, 466, 474, 475,
	479, 502, 504, 516, 534, 539, 455, 285, 286, 421,
	422, 284, 511, 540, 0, 357, 0, 0, 360, 266,
	289, 302, 0, 526, 476, 215, 441, 275, 238, 0,
	0, 200, 234, 218, 244, 259, 262, 306, 370, 378,
	407, 412, 281, 256, 232, 434, 229, 459, 482, 483,
	484, 486, 374, 251, 411, 0, 375, 355, 492, 493,
	298, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 0, 0, 0, 1986, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 346, 252, 0,
	0, 408, 0, 194, 0, 461, 239, 356, 353, 499,
	267, 258, 254, 237, 299, 364, 406, 481, 400, 0,
	350, 0, 0, 471, 379, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	305, 235, 307, 193, 391, 472, 271, 0, 0, 0,
	0, 186, 0, 0, 0, 1680, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 233, 331, 340, 339,
	320, 321, 323, 325, 330, 337, 343, 0, 0, 0,
	0, 0, 250, 303, 257, 249, 496, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 380, 242, 0, 0, 0, 0, 536, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 312, 189,
	213, 0, 0, 390, 436, 448, 0, 0, 0, 240,
	0, 446, 404, 515, 221, 269, 433, 410, 444, 417,
	272, 0, 1984, 445, 351, 501, 427, 512, 537, 538,
	248, 384, 524, 485, 532, 551, 214, 245, 398, 478,
	518, 468, 376, 497, 498, 311, 467, 280, 192, 349,
	543, 212, 454, 230, 219, 503, 521, 274, 431, 201,
	480, 510, 227, 458, 0, 0, 553, 203, 508, 477,
	372, 308, 309, 202, 0, 432, 253, 278, 243, 393,
	505, 506, 241, 554, 216, 531, 208, 0, 530, 386,
	500, 509, 373, 362, 207, 507, 371, 361, 316, 335,
	336, 265, 291, 424, 354, 425, 292, 382, 381, 383,
	196, 519, 0, 197, 0, 473, 520, 555, 222, 223,
	225, 0, 264, 268, 276, 279, 287, 288, 297, 347,
	397, 423, 419, 428, 0, 495, 513, 525, 535, 541,
	542, 544, 545, 546, 547, 548, 550, 549, 385, 295,
	469, 315, 352, 0, 0, 403, 447, 228, 517, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 574, 363,
	460, 514, 317, 329, 332, 322, 341, 0, 342, 318,
	319, 324, 326, 327, 328, 333, 334, 338, 344, 236,
	199, 369, 377, 494, 296, 204, 205, 206, 487, 488,
	489, 490, 528, 529, 533, 437, 438, 439, 440, 277,
	523, 293, 443, 442, 313, 314, 358, 426, 0, 188,
	209, 348, 0, 429, 273, 552, 527, 522, 195, 211,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 190, 191, 198, 210, 220, 224, 231,
	246, 261, 263, 270, 283, 290, 294, 300, 301, 304,
	310, 359, 365, 366, 367, 368, 387, 388, 389, 392,
	395, 396, 399, 401, 402, 405, 409, 413, 414, 415,
	416, 418, 420, 430, 435, 449, 450, 451, 452, 453,
	456, 457, 462, 463, 464, 465, 466, 474, 475, 479,
	502, 504, 516, 534, 539, 455, 285, 286, 421, 422,
	284, 511, 540, 0, 357, 0, 0, 360, 266, 289,
	302, 0, 526, 476, 215, 441, 275, 238, 0, 0,
	200, 234, 218, 244, 259, 262, 306, 370, 378, 407,
	412, 281, 256, 232, 434, 229, 459, 482, 483, 484,
	486, 374, 251, 411, 0, 375, 355, 492, 493, 298,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 346, 252, 0, 0,
	408, 0, 194, 0, 461, 239, 356, 353, 499, 267,
	258, 254, 237, 299, 364, 406, 481, 400, 0, 350,
	0, 0, 471, 379, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 305,
	235, 307, 193, 391, 472, 271, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 233, 331, 340, 339, 320,
	321, 323, 325, 330, 337, 343, 0, 0, 0, 0,
	0, 250, 303, 257, 249, 496, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 912, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 380, 242, 0, 0, 0, 0, 536, 0, 0,
	0, 0, 0, 0, 0, 345, 918, 312, 189, 213,
	916, 0, 390, 436, 448, 0, 0, 0, 240, 0,
	446, 404, 515, 221, 269, 433, 410, 444, 417, 272,
	0, 0, 445, 351, 501, 427, 512, 537, 538, 248,
	384, 524, 485, 532, 551, 214, 245, 398, 478, 518,
	468, 376, 497, 498, 311, 467, 280, 192, 349, 543,
	212, 454, 230, 219, 503, 521, 274, 431, 201, 480,
	510, 227, 458, 0, 0, 553, 203, 508, 477, 372,
	308, 309, 202, 0, 432, 253, 278, 243, 393, 505,
	506, 241, 554, 216, 531, 208, 0, 530, 386, 500,
	509, 373, 362, 207, 507, 371, 361, 316, 335, 336,
	265, 291, 424, 354, 425, 292, 382, 381, 383, 196,
	519, 0, 197, 0, 473, 520, 555, 222, 223, 225,
	0, 264, 268, 276, 279, 287, 288, 297, 347, 397,
	423, 419, 428, 0, 495, 513, 525, 535, 541, 542,
	544, 545, 546, 547, 548, 550, 549, 385, 295, 469,
	315, 352, 0, 0, 403, 447, 228, 517, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 574, 363, 460,
	514, 317, 329, 332, 322, 341, 0, 342, 318, 319,
	324, 326, 327, 328, 333, 334, 338, 344, 236, 199,
	369, 377, 494, 296, 204, 205, 206, 487, 488, 489,
	490, 528, 529, 533, 437, 438, 439, 440, 277, 523,
	293, 443, 442, 313, 314, 358, 426, 0, 188, 209,
	348, 0, 429, 273, 552, 527, 522, 195, 211, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 191, 198, 210, 220, 224, 231, 246,
	261, 263, 270, 283, 290, 294, 300, 301, 304, 310,
	359, 365, 366, 367, 368, 387, 388, 389, 392, 395,
	396, 399, 401, 402, 405, 409, 413, 414, 415, 416,
	418, 420, 430, 435, 449, 450, 451, 452, 453, 456,
	457, 462, 463, 464, 465, 466, 474, 475, 479, 502,
	504, 516, 534, 539, 455, 285, 286, 421, 422, 284,
	511, 540, 0, 357, 0, 0, 360, 266, 289, 302,
	0, 526, 476, 215, 441, 275, 238, 0, 0, 200,
	234, 218, 244, 259, 262, 306, 370, 378, 407, 412,
	281, 256, 232, 434, 229, 459, 482, 483, 484, 486,
	374, 251, 411, 0, 375, 355, 492, 493, 298, 491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 0, 0, 0, 1986, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 346, 252, 0, 0, 408,
	0, 194, 0, 461, 239, 356, 353, 499, 267, 258,
	254, 237, 299, 364, 406, 481, 400, 0, 350, 0,
	0, 471, 379, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 305, 235,
	307, 193, 391, 472, 271, 0, 0, 0, 0, 186,
	0, 0, 0, 1680, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 233, 331, 340, 339, 320, 321,
	323, 325, 330, 337, 343, 0, 0, 0, 0, 0,
	250, 303, 257, 249, 496, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	380, 242, 0, 0, 0, 0, 536, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 312, 189, 213, 0,
	0, 390, 436, 448, 0, 0, 0, 240, 0, 446,
	404, 515, 221, 269, 433, 410, 444, 417, 272, 0,
	0, 445, 351, 501, 427, 512, 537, 538, 248, 384,
	524, 485, 532, 551, 214, 245, 398, 478, 518, 468,
	376, 497, 498, 311, 467, 280, 192, 349, 543, 212,
	454, 230, 219, 503, 521, 274, 431, 201, 480, 510,
	227, 458, 0, 0, 553, 203, 508, 477, 372, 308,
	309, 202, 0, 432, 253, 278, 243, 393, 505, 506,
	241, 554, 216, 531, 208, 0, 530, 386, 500, 509,
	373, 362, 207, 507, 371, 361, 316, 335, 336, 265,
	291, 424, 354, 425, 292, 382, 381, 383, 196, 519,
	0, 197, 0, 473, 520, 555, 222, 223, 225, 0,
	264, 268, 276, 279, 287, 288, 297, 347, 397, 423,
	419, 428, 0, 495, 513, 525, 535, 541, 542, 544,
	545, 546, 547, 548, 550, 549, 385, 295, 469, 315,
	352, 0, 0, 403, 447, 228, 517, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 574, 363, 460, 514,
	317, 329, 332, 322, 341, 0, 342, 318, 319, 324,
	326, 327, 328, 333, 334, 338, 344, 236, 199, 369,
	377, 494, 296, 204, 205, 206, 487, 488, 489, 490,
	528, 529, 533, 437, 438, 439, 440, 277, 523, 293,
	443, 442, 313, 314, 358, 426, 0, 188, 209, 348,
	0, 429, 273, 552, 527, 522, 195, 211, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 191, 198, 210, 220, 224, 231, 246, 261,
	263, 270, 283, 290, 294, 300, 301, 304, 310, 359,
	365, 366, 367, 368, 387, 388, 389, 392, 395, 396,
	399, 401, 402, 405, 409, 413, 414, 415, 416, 418,
	420, 430, 435, 449, 450, 451, 452, 453, 456, 457,
	462, 463, 464, 465, 466, 474, 475, 479, 502, 504,
	516, 534, 539, 455, 285, 286, 421, 422, 284, 511,
	540, 0, 357, 0, 0, 360, 266, 289, 302, 0,
	526, 476, 215, 441, 275, 238, 0, 0, 200, 234,
	218, 244, 259, 262, 306, 370, 378, 407, 412, 281,
	256, 232, 434, 229, 459, 482, 483, 484, 486, 374,
	251, 411, 0, 375, 355, 492, 493, 298, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 346, 252, 0, 0, 408, 0,
	194, 0, 461, 239, 356, 353, 499, 267, 258, 254,
	237, 299, 364, 406, 481, 400, 0, 350, 0, 0,
	471, 379, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 305, 235, 307,
	193, 391, 472, 271, 0, 0, 0, 1479, 620, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 233, 331, 340, 339, 320, 321, 323,
	325, 330, 337, 343, 0, 0, 0, 0, 0, 250,
	303, 257, 249, 496, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 380,
	242, 0, 0, 0, 0, 536, 0, 0, 0, 3237,
	0, 0, 0, 345, 0, 312, 189, 213, 0, 0,
	390, 436, 448, 0, 0, 0, 240, 0, 446, 404,
	515, 221, 269, 433, 410, 444, 417, 272, 0, 0,
	445, 351, 501, 427, 512, 537, 538, 248, 384, 524,
	485, 532, 551, 214, 245, 398, 478, 518, 468, 376,
	497, 498, 311, 467, 280, 192, 349, 543, 212, 454,
	230, 219, 503, 521, 274, 431, 201, 480, 510, 227,
	458, 0, 0, 553, 203, 508, 477, 372, 308, 309,
	202, 0, 432, 253, 278, 243, 393, 505, 506, 241,
	554, 216, 531, 208, 0, 530, 386, 500, 509, 373,
	362, 207, 507, 371, 361, 316, 335, 336, 265, 291,
	424, 354, 425, 292, 382, 381, 383, 196, 519, 0,
	197, 0, 473, 520, 555, 222, 223, 225, 0, 264,
	268, 276, 279, 287, 288, 297, 347, 397, 423, 419,
	428, 0, 495, 513, 525, 535, 541, 542, 544, 545,
	546, 547, 548, 550, 549, 385, 295, 469, 315, 352,
	0, 0, 403, 447, 228, 517, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 574, 363, 460, 514, 317,
	329, 332, 322, 341, 0, 342, 318, 319, 324, 326,
	327, 328, 333, 334, 338, 344, 236, 199, 369, 377,
	494, 296, 204, 205, 206, 487, 488, 489, 490, 528,
	529, 533, 437, 438, 439, 440, 277, 523, 293, 443,
	442, 313, 314, 358, 426, 0, 188, 209, 348, 0,
	429, 273, 552, 527, 522, 195, 211, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 191, 198, 210, 220, 224, 231, 246, 261, 263,
	270, 283, 290, 294, 300, 301, 304, 310, 359, 365,
	366, 367, 368, 387, 388, 389, 392, 395, 396, 399,
	401, 402, 405, 409, 413, 414, 415, 416, 418, 420,
	430, 435, 449, 450, 451, 452, 453, 456, 457, 462,
	463, 464, 465, 466, 474, 475, 479, 502, 504, 516,
	534, 539, 455, 285, 286, 421, 422, 284, 511, 540,
	0, 357, 0, 0, 360, 266, 289, 302, 0, 526,
	476, 215, 441, 275, 238, 0, 0, 200, 234, 218,
	244, 259, 262, 306, 370, 378, 407, 412, 281, 256,
	232, 434, 229, 459, 482, 483, 484, 486, 374, 251,
	411, 0, 375, 355, 492, 493, 298, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 346, 252, 0, 0, 408, 0, 194,
	0, 461, 239, 356, 353, 499, 267, 258, 254, 237,
	299, 364, 406, 481, 400, 0, 350, 0, 0, 471,
	379, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 305, 235, 307, 193,
	391, 472, 271, 0, 0, 0, 0, 620, 0, 0,
	0, 1823, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 233, 331, 340, 339, 320, 321, 323, 325,
	330, 337, 343, 0, 0, 0, 0, 0, 250, 303,
	257, 249, 496, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1824, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 380, 242,
	0, 0, 0, 0, 536, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 312, 189, 213, 0, 0, 390,
	436, 448, 0, 0, 0, 240, 0, 446, 404, 515,
	221, 269, 433, 410, 444, 417, 272, 0, 0, 445,
	351, 501, 427, 512, 537, 538, 248, 384, 524, 485,
	532, 551, 214, 245, 398, 478, 518, 468, 376, 497,
	498, 311, 467, 280, 192, 349, 543, 212, 454, 230,
	219, 503, 521, 274, 431, 201, 480, 510, 227, 458,
	0, 0, 553, 203, 508, 477, 372, 308, 309, 202,
	0, 432, 253, 278, 243, 393, 505, 506, 241, 554,
	216, 531, 208, 0, 530, 386, 500, 509, 373, 362,
	207, 507, 371, 361, 316, 335, 336, 265, 291, 424,
	354, 425, 292, 382, 381, 383, 196, 519, 0, 197,
	0, 473, 520, 555, 222, 223, 225, 0, 264, 268,
	276, 279, 287, 288, 297, 347, 397, 423, 419, 428,
	0, 495, 513, 525, 535, 541, 542, 544, 545, 546,
	547, 548, 550, 549, 385, 295, 469, 315, 352, 0,
	0, 403, 447, 228, 517, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 574, 363, 460, 514, 317, 329,
	332, 322, 341, 0, 342, 318, 319, 324, 326, 327,
	328, 333, 334, 338, 344, 236, 199, 369, 377, 494,
	296, 204, 205, 206, 487, 488, 489, 490, 528, 529,
	533, 437, 438, 439, 440, 277, 523, 293, 443, 442,
	313, 314, 358, 426, 0, 188, 209, 348, 0, 429,
	273, 552, 527, 522, 195, 211, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	191, 198, 210, 220, 224, 231, 246, 261, 263, 270,
	283, 290, 294, 300, 301, 304, 310, 359, 365, 366,
	367, 368, 387, 388, 389, 392, 395, 396, 399, 401,
	402, 405, 409, 413, 414, 415, 416, 418, 420, 430,
	435, 449, 450, 451, 452, 453, 456, 457, 462, 463,
	464, 465, 466, 474, 475, 479, 502, 504, 516, 534,
	539, 455, 285, 286, 421, 422, 284, 511, 540, 0,
	357, 0, 0, 360, 266, 289, 302, 0, 526, 476,
	215, 441, 275, 238, 0, 0, 200, 234, 218, 244,
	259, 262, 306, 370, 378, 407, 412, 281, 256, 232,
	434, 229, 459, 482, 483, 484, 486, 374, 251, 411,
	0, 375, 355, 492, 493, 298, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 346, 252, 0, 0, 408, 0, 194, 0,
	461, 239, 356, 353, 499, 267, 258, 254, 237, 299,
	364, 406, 481, 400, 0, 350, 0, 0, 471, 379,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 305, 235, 307, 193, 391,
	472, 271, 0, 0, 0, 0, 620, 0, 0, 0,
	2372, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 233, 331, 340, 339, 320, 321, 323, 325, 330,
	337, 343, 0, 0, 0, 0, 0, 250, 303, 257,
	249, 496, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2373, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 380, 242, 0,
	0, 0, 0, 536, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 312, 189, 213, 0, 0, 390, 436,
	448, 0, 0, 0, 240, 0, 446, 404, 515, 221,
	269, 433, 410, 444, 417, 272, 0, 0, 445, 351,
	501, 427, 512, 537, 538, 248, 384, 524, 485, 532,
	551, 214, 245, 398, 478, 518, 468, 376, 497, 498,
	311, 467, 280, 192, 349, 543, 212, 454, 230, 219,
	503, 521, 274, 431, 201, 480, 510, 227, 458, 0,
	0, 553, 203, 508, 477, 372, 308, 309, 202, 0,
	432, 253, 278, 243, 393, 505, 506, 241, 554, 216,
	531, 208, 0, 530, 386, 500, 509, 373, 362, 207,
	507, 371, 361, 316, 335, 336, 265, 291, 424, 354,
	425, 292, 382, 381, 383, 196, 519, 0, 197, 0,
	473, 520, 555, 222, 223, 225, 0, 264, 268, 276,
	279, 287, 288, 297, 347, 397, 423, 419, 428, 0,
	495, 513, 525, 535, 541, 542, 544, 545, 546, 547,
	548, 550, 549, 385, 295, 469, 315, 352, 0, 0,
	403, 447, 228, 517, 470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 574, 363, 460, 514, 317, 329, 332,
	322, 341, 0, 342, 318, 319, 324, 326, 327, 328,
	333, 334, 338, 344, 236, 199, 369, 377, 494, 296,
	204, 205, 206, 487, 488, 489, 490, 528, 529, 533,
	437, 438, 439, 440, 277, 523, 293, 443, 442, 313,
	314, 358, 426, 0, 188, 209, 348, 0, 429, 273,
	552, 527, 522, 195, 211, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 190, 191,
	198, 210, 220, 224, 231, 246, 261, 263, 270, 283,
	290, 294, 300, 301, 304, 310, 359, 365, 366, 367,
	368, 387, 388, 389, 392, 395, 396, 399, 401, 402,
	405, 409, 413, 414, 415, 416, 418, 420, 430, 435,
	449, 450, 451, 452, 453, 456, 457, 462, 463, 464,
	465, 466, 474, 475, 479, 502, 504, 516, 534, 539,
	455, 285, 286, 421, 422, 284, 511, 540, 0, 357,
	0, 0, 360, 266, 289, 302, 0, 526, 476, 215,
	441, 275, 238, 0, 0, 200, 234, 218, 244, 259,
	262, 306, 370, 378, 407, 412, 281, 256, 232, 434,
	229, 459, 482, 483, 484, 486, 374, 251, 411, 0,
	375, 355, 492, 493, 298, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 346, 252, 0, 0, 408, 0, 194, 0, 461,
	239, 356, 353, 499, 267, 258, 254, 237, 299, 364,
	406, 481, 400, 0, 350, 0, 0, 471, 379, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 305, 235, 307, 193, 391, 472,
	271, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	0, 2357, 0, 0, 0, 2358, 0, 0, 226, 0,
	233, 331, 340, 339, 320, 321, 323, 325, 330, 337,
	343, 0, 0, 0, 0, 0, 250, 303, 257, 249,
	496, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 380, 242, 0, 0,
	0, 0, 536, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 312, 189, 213, 0, 0, 390, 436, 448,
	0, 0, 0, 240, 0, 446, 404, 515, 221, 269,
	433, 410, 444, 417, 272, 0, 0, 445, 351, 501,
	427, 512, 537, 538, 248, 384, 524, 485, 532, 551,
	214, 245, 398, 478, 518, 468, 376, 497, 498, 311,
	467, 280, 192, 349, 543, 212, 454, 230, 219, 503,
	521, 274, 431, 201, 480, 510, 227, 458, 0, 0,
	553, 203, 508, 477, 372, 308, 309, 202, 0, 432,
	253, 278, 243, 393, 505, 506, 241, 554, 216, 531,
	208, 0, 530, 386, 500, 509, 373, 362, 207, 507,
	371, 361, 316, 335, 336, 265, 291, 424, 354, 425,
	292, 382, 381, 383, 196, 519, 0, 197, 0, 473,
	520, 555, 222, 223, 225, 0, 264, 268, 276, 279,
	287, 288, 297, 347, 397, 423, 419, 428, 0, 495,
	513, 525, 535, 541, 542, 544, 545, 546, 547, 548,
	550, 549, 385, 295, 469, 315, 352, 0, 0, 403,
	447, 228, 517, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 574, 363, 460, 514, 317, 329, 332, 322,
	341, 0, 342, 318, 319, 324, 326, 327, 328, 333,
	334, 338, 344, 236, 199, 369, 377, 494, 296, 204,
	205, 206, 487, 488, 489, 490, 528, 529, 533, 437,
	438, 439, 440, 277, 523, 293, 443, 442, 313, 314,
	358, 426, 0, 188, 209, 348, 0, 429, 273, 552,
	527, 522, 195, 211, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 191, 198,
	210, 220, 224, 231, 246, 261, 263, 270, 283, 290,
	294, 300, 301, 304, 310, 359, 365, 366, 367, 368,
	387, 388, 389, 392, 395, 396, 399, 401, 402, 405,
	409, 413, 414, 415, 416, 418, 420, 430, 435, 449,
	450, 451, 452, 453, 456, 457, 462, 463, 464, 465,
	466, 474, 475, 479, 502, 504, 516, 534, 539, 455,
	285, 286, 421, 422, 284, 511, 540, 0, 357, 0,
	0, 360, 266, 289, 302, 0, 526, 476, 215, 441,
	275, 238, 0, 0, 200, 234, 218, 244, 259, 262,
	306, 370, 378, 407, 412, 281, 256, 232, 434, 229,
	459, 482, 483, 484, 486, 374, 251, 411, 0, 375,
	355, 492, 493, 298, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 1522, 0, 0, 0,
	346, 252, 0, 0, 408, 0, 194, 0, 461, 239,
	356, 353, 499, 267, 258, 254, 237, 299, 364, 406,
	481, 400, 0, 350, 0, 0, 471, 379, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 305, 235, 307, 193, 391, 472, 271,
	0, 0, 0, 0, 620, 0, 0, 0, 1521, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 233,
	331, 340, 339, 320, 321, 323, 325, 330, 337, 343,
	0, 0, 0, 0, 0, 250, 303, 257, 249, 496,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 380, 242, 0, 0, 0,
	0, 536, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 312, 189, 213, 0, 0, 390, 436, 448, 0,
	0, 0, 240, 0, 446, 404, 515, 221, 269, 433,
	410, 444, 417, 272, 0, 0, 445, 351, 501, 427,
	512, 537, 538, 248, 384, 524, 485, 532, 551, 214,
	245, 398, 478, 518, 468, 376, 497, 498, 311, 467,
	280, 192, 349, 543, 212, 454, 230, 219, 503, 521,
	274, 431, 201, 480, 510, 227, 458, 0, 0, 553,
	203, 508, 477, 372, 308, 309, 202, 0, 432, 253,
	278, 243, 393, 505, 506, 241, 554, 216, 531, 208,
	0, 530, 386, 500, 509, 373, 362, 207, 507, 371,
	361, 316, 335, 336, 265, 291, 424, 354, 425, 292,
	382, 381, 383, 196, 519, 0, 197, 0, 473, 520,
	555, 222, 223, 225, 0, 264, 268, 276, 279, 287,
	288, 297, 347, 397, 423, 419, 428, 0, 495, 513,
	525, 535, 541, 542, 544, 545, 546, 547, 548, 550,
	549, 385, 295, 469, 315, 352, 0, 0, 403, 447,
	228, 517, 470, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 574, 363, 460, 514, 317, 329, 332, 322, 341,
	0, 342, 318, 319, 324, 326, 327, 328, 333, 334,
	338, 344, 236, 199, 369, 377, 494, 296, 204, 205,
	206, 487, 488, 489, 490, 528, 529, 533, 437, 438,
	439, 440, 277, 523, 293, 443, 442, 313, 314, 358,
	426, 0, 188, 209, 348, 0, 429, 273, 552, 527,
	522, 195, 211, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 190, 191, 198, 210,
	220, 224, 231, 246, 261, 263, 270, 283, 290, 294,
	300, 301, 304, 310, 359, 365, 366, 367, 368, 387,
	388, 389, 392, 395, 396, 399, 401, 402, 405, 409,
	413, 414, 415, 416, 418, 420, 430, 435, 449, 450,
	451, 452, 453, 456, 457, 462, 463, 464, 465, 466,
	474, 475, 479, 502, 504, 516, 534, 539, 455, 285,
	286, 421, 422, 284, 511, 540, 0, 357, 0, 0,
	360, 266, 289, 302, 0, 526, 476, 215, 441, 275,
	238, 0, 0, 200, 234, 218, 244, 259, 262, 306,
	370, 378, 407, 412, 281, 256, 232, 434, 229, 459,
	482, 483, 484, 486, 374, 251, 411, 0, 375, 355,
	492, 493, 298, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 346,
	252, 0, 0, 408, 0, 194, 0, 461, 239, 356,
	353, 499, 267, 258, 254, 237, 299, 364, 406, 481,
	400, 0, 350, 0, 0, 471, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 305, 235, 307, 193, 391, 472, 271, 0,
	0, 0, 0, 622, 623, 624, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 233, 331,
	340, 339, 320, 321, 323, 325, 330, 337, 343, 0,
	0, 0, 0, 0, 250, 303, 257, 249, 496, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 380, 242, 0, 0, 0, 0,
	536, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	312, 189, 213, 0, 0, 390, 436, 448, 0, 0,
	0, 240, 0, 446, 404, 515, 221, 269, 433, 410,
	444, 417, 272, 0, 0, 445, 351, 501, 427, 512,
	537, 538, 248, 384, 524, 485, 532, 551, 214, 245,
	398, 478, 518, 468, 376, 497, 498, 311, 467, 280,
	192, 349, 543, 212, 454, 230, 219, 503, 521, 274,
	431, 201, 480, 510, 227, 458, 0, 0, 553, 203,
	508, 477, 372, 308, 309, 202, 0, 432, 253, 278,
	243, 393, 505, 506, 241, 554, 216, 531, 208, 0,
	530, 386, 500, 509, 373, 362, 207, 507, 371, 361,
	316, 335, 336, 265, 291, 424, 354, 425, 292, 382,
	381, 383, 196, 519, 0, 197, 0, 473, 520, 555,
	222, 223, 225, 0, 264, 268, 276, 279, 287, 288,
	297, 347, 397, 423, 419, 428, 0, 495, 513, 525,
	535, 541, 542, 544, 545, 546, 547, 548, 550, 549,
	385, 295, 469, 315, 352, 0, 0, 403, 447, 228,
	517, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	574, 363, 460, 514, 317, 329, 332, 322, 341, 0,
	342, 318, 319, 324, 326, 327, 328, 333, 334, 338,
	344, 236, 199, 369, 377, 494, 296, 204, 205, 206,
	487, 488, 489, 490, 528, 529, 533, 437, 438, 439,
	440, 277, 523, 293, 443, 442, 313, 314, 358, 426,
	0, 188, 209, 348, 0, 429, 273, 552, 527, 522,
	195, 211, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 191, 198, 210, 220,
	224, 231, 246, 261, 263, 270, 283, 290, 294, 300,
	301, 304, 310, 359, 365, 366, 367, 368, 387, 388,
	389, 392, 395, 396, 399, 401, 402, 405, 409, 413,
	414, 415, 416, 418, 420, 430, 435, 449, 450, 451,
	452, 453, 456, 457, 462, 463, 464, 465, 466, 474,
	475, 479, 502, 504, 516, 534, 539, 455, 285, 286,
	421, 422, 284, 511, 540, 0, 357, 0, 0, 360,
	266, 289, 302, 0, 526, 476, 215, 441, 275, 238,
	0, 0, 200, 234, 218, 244, 259, 262, 306, 370,
	378, 407, 412, 281, 256, 232, 434, 229, 459, 482,
	483, 484, 486, 374, 251, 411, 0, 375, 355, 492,
	493, 298, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 346, 252,
	0, 0, 408, 0, 194, 0, 461, 239, 356, 353,
	499, 267, 258, 254, 237, 299, 364, 406, 481, 400,
	0, 350, 0, 0, 471, 379, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 305, 235, 307, 193, 391, 472, 271, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 233, 331, 340,
	339, 320, 321, 323, 325, 330, 337, 343, 0, 0,
	0, 0, 0, 250, 303, 257, 249, 496, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 380, 242, 0, 0, 0, 0, 536,
	0, 0, 0, 3361, 0, 0, 0, 345, 0, 312,
	189, 213, 0, 0, 390, 436, 448, 0, 0, 0,
	240, 0, 446, 404, 515, 221, 269, 433, 410, 444,
	417, 272, 0, 0, 445, 351, 501, 427, 512, 537,
	538, 248, 384, 524, 485, 532, 551, 214, 245, 398,
	478, 518, 468, 376, 497, 498, 311, 467, 280, 192,
	349, 543, 212, 454, 230, 219, 503, 521, 274, 431,
	201, 480, 510, 227, 458, 0, 0, 553, 203, 508,
	477, 372, 308, 309, 202, 0, 432, 253, 278, 243,
	393, 505, 506, 241, 554, 216, 531, 208, 0, 530,
	386, 500, 509, 373, 362, 207, 507, 371, 361, 316,
	335, 336, 265, 291, 424, 354, 425, 292, 382, 381,
	383, 196, 519, 0, 197, 0, 473, 520, 555, 222,
	223, 225, 0, 264, 268, 276, 279, 287, 288, 297,
	347, 397, 423, 419, 428, 0, 495, 513, 525, 535,
	541, 542, 544, 545, 546, 547, 548, 550, 549, 385,
	295, 469, 315, 352, 0, 0, 403, 447, 228, 517,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 574,
	363, 460, 514, 317, 329, 332, 322, 341, 0, 342,
	318, 319, 324, 326, 327, 328, 333, 334, 338, 344,
	236, 199, 369, 377, 494, 296, 204, 205, 206, 487,
	488, 489, 490, 528, 529, 533, 437, 438, 439, 440,
	277, 523, 293, 443, 442, 313, 314, 358, 426, 0,
	188, 209, 348, 0, 429, 273, 552, 527, 522, 195,
	211, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 191, 198, 210, 220, 224,
	231, 246, 261, 263, 270, 283, 290, 294, 300, 301,
	304, 310, 359, 365, 366, 367, 368, 387, 388, 389,
	392, 395, 396, 399, 401, 402, 405, 409, 413, 414,
	415, 416, 418, 420, 430, 435, 449, 450, 451, 452,
	453, 456, 457, 462, 463, 464, 465, 466, 474, 475,
	479, 502, 504, 516, 534, 539, 455, 285, 286, 421,
	422, 284, 511, 540, 0, 357, 0, 0, 360, 266,
	289, 302, 0, 526, 476, 215, 441, 275, 238, 0,
	0, 200, 234, 218, 244, 259, 262, 306, 370, 378,
	407, 412, 281, 256, 232, 434, 229, 459, 482, 483,
	484, 486, 374, 251, 411, 0, 375, 355, 492, 493,
	298, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 346, 252, 0,
	0, 408, 0, 194, 0, 461, 239, 356, 353, 499,
	267, 258, 254, 237, 299, 364, 406, 481, 400, 0,
	350, 0, 0, 471, 379, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	305, 235, 307, 193, 391, 472, 271, 0, 0, 0,
	0, 186, 0, 0, 0, 1680, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 233, 331, 340, 339,
	320, 321, 323, 325, 330, 337, 343, 0, 0, 0,
	0, 0, 250, 303, 257, 249, 496, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 380, 242, 0, 0, 0, 0, 536, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 312, 189,
	213, 0, 0, 390, 436, 448, 0, 0, 0, 240,
	0, 446, 404, 515, 221, 269, 433, 410, 444, 417,
	272, 0, 0, 445, 351, 501, 427, 512, 537, 538,
	248, 384, 524, 485, 532, 551, 214, 245, 398, 478,
	518, 468, 376, 497, 498, 311, 467, 280, 192, 349,
	543, 212, 454, 230, 219, 503, 521, 274, 431, 201,
	480, 510, 227, 458, 0, 0, 553, 203, 508, 477,
	372, 308, 309, 202, 0, 432, 253, 278, 243, 393,
	505, 506, 241, 554, 216, 531, 208, 0, 530, 386,
	500, 509, 373, 362, 207, 507, 371, 361, 316, 335,
	336, 265, 291, 424, 354, 425, 292, 382, 381, 383,
	196, 519, 0, 197, 0, 473, 520, 555, 222, 223,
	225, 0, 264, 268, 276, 279, 287, 288, 297, 347,
	397, 423, 419, 428, 0, 495, 513, 525, 535, 541,
	542, 544, 545, 546, 547, 548, 550, 549, 385, 295,
	469, 315, 352, 0, 0, 403, 447, 228, 517, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 574, 363,
	460, 514, 317, 329, 332, 322, 341, 0, 342, 318,
	319, 324, 326, 327, 328, 333, 334, 338, 344, 236,
	199, 369, 377, 494, 296, 204, 205, 206, 487, 488,
	489, 490, 528, 529, 533, 437, 438, 439, 440, 277,
	523, 293, 443, 442, 313, 314, 358, 426, 0, 188,
	209, 348, 0, 429, 273, 552, 527, 522, 195, 211,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 190, 191, 198, 210, 220, 224, 231,
	246, 261, 263, 270, 283, 290, 294, 300, 301, 304,
	310, 359, 365, 366, 367, 368, 387, 388, 389, 392,
	395, 396, 399, 401, 402, 405, 409, 413, 414, 415,
	416, 418, 420, 430, 435, 449, 450, 451, 452, 453,
	456, 457, 462, 463, 464, 465, 466, 474, 475, 479,
	502, 504, 516, 534, 539, 455, 285, 286, 421, 422,
	284, 511, 540, 0, 357, 0, 0, 360, 266, 289,
	302, 0, 526, 476, 215, 441, 275, 238, 0, 0,
	200, 234, 218, 244, 259, 262, 306, 370, 378, 407,
	412, 281, 256, 232, 434, 229, 459, 482, 483, 484,
	486, 374, 251, 411, 0, 375, 355, 492, 493, 298,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 346, 252, 0, 0,
	408, 0, 194, 0, 461, 239, 356, 353, 499, 267,
	258, 254, 237, 299, 364, 406, 481, 400, 0, 350,
	0, 0, 471, 379, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 305,
	235, 307, 193, 391, 472, 271, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 233, 331, 340, 339, 320,
	321, 323, 325, 330, 337, 343, 0, 0, 0, 0,
	0, 250, 303, 257, 249, 496, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 380, 242, 0, 0, 0, 0, 536, 0, 0,
	0, 3237, 0, 0, 0, 345, 0, 312, 189, 213,
	0, 0, 390, 436, 448, 0, 0, 0, 240, 0,
	446, 404, 515, 221, 269, 433, 410, 444, 417, 272,
	0, 0, 445, 351, 501, 427, 512, 537, 538, 248,
	384, 524, 485, 532, 551, 214, 245, 398, 478, 518,
	468, 376, 497, 498, 311, 467, 280, 192, 349, 543,
	212, 454, 230, 219, 503, 521, 274, 431, 201, 480,
	510, 227, 458, 0, 0, 553, 203, 508, 477, 372,
	308, 309, 202, 0, 432, 253, 278, 243, 393, 505,
	506, 241, 554, 216, 531, 208, 0, 530, 386, 500,
	509, 373, 362, 207, 507, 371, 361, 316, 335, 336,
	265, 291, 424, 354, 425, 292, 382, 381, 383, 196,
	519, 0, 197, 0, 473, 520, 555, 222, 223, 225,
	0, 264, 268, 276, 279, 287, 288, 297, 347, 397,
	423, 419, 428, 0, 495, 513, 525, 535, 541, 542,
	544, 545, 546, 547, 548, 550, 549, 385, 295, 469,
	315, 352, 0, 0, 403, 447, 228, 517, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 574, 363, 460,
	514, 317, 329, 332, 322, 341, 0, 342, 318, 319,
	324, 326, 327, 328, 333, 334, 338, 344, 236, 199,
	369, 377, 494, 296, 204, 205, 206, 487, 488, 489,
	490, 528, 529, 533, 437, 438, 439, 440, 277, 523,
	293, 443, 442, 313, 314, 358, 426, 0, 188, 209,
	348, 0, 429, 273, 552, 527, 522, 195, 211, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 191, 198, 210, 220, 224, 231, 246,
	261, 263, 270, 283, 290, 294, 300, 301, 304, 310,
	359, 365, 366, 367, 368, 387, 388, 389, 392, 395,
	396, 399, 401, 402, 405, 409, 413, 414, 415, 416,
	418, 420, 430, 435, 449, 450, 451, 452, 453, 456,
	457, 462, 463, 464, 465, 466, 474, 475, 479, 502,
	504, 516, 534, 539, 455, 285, 286, 421, 422, 284,
	511, 540, 0, 357, 0, 0, 360, 266, 289, 302,
	0, 526, 476, 215, 441, 275, 238, 0, 0, 200,
	234, 218, 244, 259, 262, 306, 370, 378, 407, 412,
	281, 256, 232, 434, 229, 459, 482, 483, 484, 486,
	374, 251, 411, 0, 375, 355, 492, 493, 298, 491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 346, 252, 0, 0, 408,
	0, 194, 0, 461, 239, 356, 353, 499, 267, 258,
	254, 237, 299, 364, 406, 481, 400, 0, 350, 0,
	0, 471, 379, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 305, 235,
	307, 193, 391, 472, 271, 0, 87, 0, 0, 620,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 233, 331, 340, 339, 320, 321,
	323, 325, 330, 337, 343, 0, 0, 0, 0, 0,
	250, 303, 257, 249, 496, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	380, 242, 0, 0, 0, 0, 536, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 312, 189, 213, 0,
	0, 390, 436, 448, 0, 0, 0, 240, 0, 446,
	404, 515, 221, 269, 433, 410, 444, 417, 272, 0,
	0, 445, 351, 501, 427, 512, 537, 538, 248, 384,
	524, 485, 532, 551, 214, 245, 398, 478, 518, 468,
	376, 497, 498, 311, 467, 280, 192, 349, 543, 212,
	454, 230, 219, 503, 521, 274, 431, 201, 480, 510,
	227, 458, 0, 0, 553, 203, 508, 477, 372, 308,
	309, 202, 0, 432, 253, 278, 243, 393, 505, 506,
	241, 554, 216, 531, 208, 0, 530, 386, 500, 509,
	373, 362, 207, 507, 371, 361, 316, 335, 336, 265,
	291, 424, 354, 425, 292, 382, 381, 383, 196, 519,
	0, 197, 0, 473, 520, 555, 222, 223, 225, 0,
	264, 268, 276, 279, 287, 288, 297, 347, 397, 423,
	419, 428, 0, 495, 513, 525, 535, 541, 542, 544,
	545, 546, 547, 548, 550, 549, 385, 295, 469, 315,
	352, 0, 0, 403, 447, 228, 517, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 574, 363, 460, 514,
	317, 329, 332, 322, 341, 0, 342, 318, 319, 324,
	326, 327, 328, 333, 334, 338, 344, 236, 199, 369,
	377, 494, 296, 204, 205, 206, 487, 488, 489, 490,
	528, 529, 533, 437, 438, 439, 440, 277, 523, 293,
	443, 442, 313, 314, 358, 426, 0, 188, 209, 348,
	0, 429, 273, 552, 527, 522, 195, 211, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 191, 198, 210, 220, 224, 231, 246, 261,
	263, 270, 283, 290, 294, 300, 301, 304, 310, 359,
	365, 366, 367, 368, 387, 388, 389, 392, 395, 396,
	399, 401, 402, 405, 409, 413, 414, 415, 416, 418,
	420, 430, 435, 449, 450, 451, 452, 453, 456, 457,
	462, 463, 464, 465, 466, 474, 475, 479, 502, 504,
	516, 534, 539, 455, 285, 286, 421, 422, 284, 511,
	540, 0, 357, 0, 0, 360, 266, 289, 302, 0,
	526, 476, 215, 441, 275, 238, 0, 0, 200, 234,
	218, 244, 259, 262, 306, 370, 378, 407, 412, 281,
	256, 232, 434, 229, 459, 482, 483, 484, 486, 374,
	251, 411, 0, 375, 355, 492, 493, 298, 491, 0,
	0, 0, 0, 2036, 0, 0, 0, 0, 0, 0,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 346, 252, 0, 0, 408, 0,
	194, 0, 461, 239, 356, 353, 499, 267, 258, 254,
	237, 299, 364, 406, 481, 400, 0, 350, 0, 0,
	471, 379, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 305, 235, 307,
	193, 391, 472, 271, 0, 0, 0, 0, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 233, 331, 340, 339, 320, 321, 323,
	325, 330, 337, 343, 0, 0, 0, 0, 0, 250,
	303, 257, 249, 496, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 380,
	242, 0, 0, 0, 0, 536, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 312, 189, 213, 0, 0,
	390, 436, 448, 0, 0, 0, 240, 0, 446, 404,
	515, 221, 269, 433, 410, 444, 417, 272, 0, 0,
	445, 351, 501, 427, 512, 537, 538, 248, 384, 524,
	485, 532, 551, 214, 245, 398, 478, 518, 468, 376,
	497, 498, 311, 467, 280, 192, 349, 543, 212, 454,
	230, 219, 503, 521, 274, 431, 201, 480, 510, 227,
	458, 0, 0, 553, 203, 508, 477, 372, 308, 309,
	202, 0, 432, 253, 278, 243, 393, 505, 506, 241,
	554, 216, 531, 208, 0, 530, 386, 500, 509, 373,
	362, 207, 507, 371, 361, 316, 335, 336, 265, 291,
	424, 354, 425, 292, 382, 381, 383, 196, 519, 0,
	197, 0, 473, 520, 555, 222, 223, 225, 0, 264,
	268, 276, 279, 287, 288, 297, 347, 397, 423, 419,
	428, 0, 495, 513, 525, 535, 541, 542, 544, 545,
	546, 547, 548, 550, 549, 385, 295, 469, 315, 352,
	0, 0, 403, 447, 228, 517, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 574, 363, 460, 514, 317,
	329, 332, 322, 341, 0, 342, 318, 319, 324, 326,
	327, 328, 333, 334, 338, 344, 236, 199, 369, 377,
	494, 296, 204, 205, 206, 487, 488, 489, 490, 528,
	529, 533, 437, 438, 439, 440, 277, 523, 293, 443,
	442, 313, 314, 358, 426, 0, 188, 209, 348, 0,
	429, 273, 552, 527, 522, 195, 211, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 191, 198, 210, 220, 224, 231, 246, 261, 263,
	270, 283, 290, 294, 300, 301, 304, 310, 359, 365,
	366, 367, 368, 387, 388, 389, 392, 395, 396, 399,
	401, 402, 405, 409, 413, 414, 415, 416, 418, 420,
	430, 435, 449, 450, 451, 452, 453, 456, 457, 462,
	463, 464, 465, 466, 474, 475, 479, 502, 504, 516,
	534, 539, 455, 285, 286, 421, 422, 284, 511, 540,
	0, 357, 0, 0, 360, 266, 289, 302, 0, 526,
	476, 215, 441, 275, 238, 0, 0, 200, 234, 218,
	244, 259, 262, 306, 370, 378, 407, 412, 281, 256,
	232, 434, 229, 459, 482, 483, 484, 486, 374, 251,
	411, 0, 375, 355, 492, 493, 298, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 346, 252, 0, 0, 408, 0, 194,
	0, 461, 239, 356, 353, 499, 267, 258, 254, 237,
	299, 364, 406, 481, 400, 0, 350, 0, 0, 471,
	379, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 305, 235, 307, 193,
	391, 472, 271, 0, 0, 0, 0, 620, 0, 0,
	0, 1502, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 233, 331, 340, 339, 320, 321, 323, 325,
	330, 337, 343, 0, 0, 0, 0, 0, 250, 303,
	257, 249, 496, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 380, 242,
	0, 0, 0, 0, 536, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 312, 189, 213, 0, 0, 390,
	436, 448, 0, 0, 0, 240, 0, 446, 404, 515,
	221, 269, 433, 410, 444, 417, 272, 0, 0, 445,
	351, 501, 427, 512, 537, 538, 248, 384, 524, 485,
	532, 551, 214, 245, 398, 478, 518, 468, 376, 497,
	498, 311, 467, 280, 192, 349, 543, 212, 454, 230,
	219, 503, 521, 274, 431, 201, 480, 510, 227, 458,
	0, 0, 553, 203, 508, 477, 372, 308, 309, 202,
	0, 432, 253, 278, 243, 393, 505, 506, 241, 554,
	216, 531, 208, 0, 530, 386, 500, 509, 373, 362,
	207, 507, 371, 361, 316, 335, 336, 265, 291, 424,
	354, 425, 292, 382, 381, 383, 196, 519, 0, 197,
	0, 473, 520, 555, 222, 223, 225, 0, 264, 268,
	276, 279, 287, 288, 297, 347, 397, 423, 419, 428,
	0, 495, 513, 525, 535, 541, 542, 544, 545, 546,
	547, 548, 550, 549, 385, 295, 469, 315, 352, 0,
	0, 403, 447, 228, 517, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 574, 363, 460, 514, 317, 329,
	332, 322, 341, 0, 342, 318, 319, 324, 326, 327,
	328, 333, 334, 338, 344, 236, 199, 369, 377, 494,
	296, 204, 205, 206, 487, 488, 489, 490, 528, 529,
	533, 437, 438, 439, 440, 277, 523, 293, 443, 442,
	313, 314, 358, 426, 0, 188, 209, 348, 0, 429,
	273, 552, 527, 522, 195, 211, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	191, 198, 210, 220, 224, 231, 246, 261, 263, 270,
	283, 290, 294, 300, 301, 304, 310, 359, 365, 366,
	367, 368, 387, 388, 389, 392, 395, 396, 399, 401,
	402, 405, 409, 413, 414, 415, 416, 418, 420, 430,
	435, 449, 450, 451, 452, 453, 456, 457, 462, 463,
	464, 465, 466, 474, 475, 479, 502, 504, 516, 534,
	539, 455, 285, 286, 421, 422, 284, 511, 540, 0,
	357, 0, 0, 360, 266, 289, 302, 0, 526, 476,
	215, 441, 275, 238, 0, 0, 200, 234, 218, 244,
	259, 262, 306, 370, 378, 407, 412, 281, 256, 232,
	434, 229, 459, 482, 483, 484, 486, 374, 251, 411,
	0, 375, 355, 492, 493, 298, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 346, 252, 0, 0, 408, 0, 194, 0,
	461, 239, 356, 353, 499, 267, 258, 254, 237, 299,
	364, 406, 481, 400, 0, 350, 0, 0, 471, 379,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 305, 235, 307, 193, 391,
	472, 271, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 233, 331, 340, 339, 320, 321, 323, 325, 330,
	337, 343, 0, 0, 0, 0, 0, 250, 303, 257,
	249, 496, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 380, 242, 0,
	0, 0, 0, 536, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 312, 189, 213, 0, 0, 390, 436,
	448, 0, 0, 0, 240, 0, 446, 404, 515, 221,
	269, 433, 410, 444, 417, 272, 0, 0, 445, 351,
	501, 427, 512, 537, 538, 248, 384, 524, 485, 532,
	551, 214, 245, 398, 478, 518, 468, 376, 497, 498,
	311, 467, 280, 192, 349, 543, 212, 454, 230, 219,
	503, 521, 274, 431, 201, 480, 510, 227, 458, 0,
	0, 553, 203, 508, 477, 372, 308, 309, 202, 0,
	432, 253, 278, 243, 393, 505, 506, 241, 554, 216,
	531, 208, 0, 530, 386, 500, 509, 373, 362, 207,
	507, 371, 361, 316, 335, 336, 265, 291, 424, 354,
	425, 292, 382, 381, 383, 196, 519, 0, 197, 0,
	473, 520, 555, 222, 223, 225, 0, 264, 268, 276,
	279, 287, 288, 297, 347, 397, 423, 419, 428, 0,
	495, 513, 525, 535, 541, 542, 544, 545, 546, 547,
	548, 550, 549, 385, 295, 469, 315, 352, 0, 0,
	403, 447, 228, 517, 470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 574, 363, 460, 514, 317, 329, 332,
	322, 341, 0, 342, 318, 319, 324, 326, 327, 328,
	333, 334, 338, 344, 236, 199, 369, 377, 494, 296,
	204, 205, 206, 487, 488, 489, 490, 528, 529, 533,
	437, 438, 439, 440, 277, 523, 293, 443, 442, 313,
	314, 358, 426, 0, 188, 209, 348, 0, 429, 273,
	552, 527, 522, 195, 211, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 190, 191,
	198, 210, 220, 224, 231, 246, 261, 263, 270, 283,
	290, 294, 300, 301, 304, 310, 359, 365, 366, 367,
	368, 387, 388, 389, 392, 395, 396, 399, 401, 402,
	405, 409, 413, 414, 415, 416, 418, 420, 430, 435,
	449, 450, 451, 452, 453, 456, 457, 462, 463, 464,
	465, 466, 474, 475, 479, 502, 504, 516, 534, 539,
	455, 285, 286, 421, 422, 284, 511, 540, 0, 357,
	0, 0, 360, 266, 289, 302, 0, 526, 476, 215,
	441, 275, 238, 0, 0, 200, 234, 218, 244, 259,
	262, 306, 370, 378, 407, 412, 281, 256, 232, 434,
	229, 459, 482, 483, 484, 486, 374, 251, 411, 0,
	375, 355, 492, 493, 298, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 346, 252, 0, 0, 408, 0, 194, 0, 461,
	239, 356, 353, 499, 267, 258, 254, 237, 299, 364,
	406, 481, 400, 0, 350, 0, 0, 471, 379, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 305, 235, 307, 193, 391, 472,
	271, 0, 0, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	233, 331, 340, 339, 320, 321, 323, 325, 330, 337,
	343, 0, 0, 0, 0, 0, 250, 303, 257, 249,
	496, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 380, 242, 0, 0,
	0, 0, 536, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 312, 189, 213, 0, 0, 390, 436, 448,
	0, 0, 0, 240, 0, 446, 404, 515, 221, 269,
	433, 410, 444, 417, 272, 0, 0, 445, 351, 501,
	427, 512, 537, 538, 248, 384, 524, 485, 532, 551,
	214, 245, 398, 478, 518, 468, 376, 497, 498, 311,
	467, 280, 192, 349, 543, 212, 454, 230, 219, 503,
	521, 274, 431, 201, 480, 510, 227, 458, 0, 0,
	553, 203, 508, 477, 372, 308, 309, 202, 0, 432,
	253, 278, 243, 393, 505, 506, 241, 554, 216, 531,
	208, 0, 530, 386, 500, 509, 373, 362, 207, 507,
	371, 361, 316, 335, 336, 265, 291, 424, 354, 425,
	292, 382, 381, 383, 196, 519, 0, 197, 0, 473,
	520, 555, 222, 223, 225, 0, 264, 268, 276, 279,
	287, 288, 297, 347, 397, 423, 419, 428, 0, 495,
	513, 525, 535, 541, 542, 544, 545, 546, 547, 548,
	550, 549, 385, 295, 469, 315, 352, 0, 0, 403,
	447, 228, 517, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 574, 363, 460, 514, 317, 329, 332, 322,
	341, 0, 342, 318, 319, 324, 326, 327, 328, 333,
	334, 338, 344, 236, 199, 369, 377, 494, 296, 204,
	205, 206, 487, 488, 489, 490, 528, 529, 533, 437,
	438, 439, 440, 277, 523, 293, 443, 442, 313, 314,
	358, 426, 0, 188, 209, 348, 1778, 429, 273, 552,
	527, 522, 195, 211, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 191, 198,
	210, 220, 224, 231, 246, 261, 263, 270, 283, 290,
	294, 300, 301, 304, 310, 359, 365, 366, 367, 368,
	387, 388, 389, 392, 395, 396, 399, 401, 402, 405,
	409, 413, 414, 415, 416, 418, 420, 430, 435, 449,
	450, 451, 452, 453, 456, 457, 462, 463, 464, 465,
	466, 474, 475, 479, 502, 504, 516, 534, 539, 455,
	285, 286, 421, 422, 284, 511, 540, 0, 357, 0,
	0, 360, 266, 289, 302, 0, 526, 476, 215, 441,
	275, 238, 0, 0, 200, 234, 218, 244, 259, 262,
	306, 370, 378, 407, 412, 281, 256, 232, 434, 229,
	459, 482, 483, 484, 486, 374, 251, 411, 0, 375,
	355, 492, 493, 298, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 0, 1647, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	346, 252, 0, 0, 408, 0, 194, 0, 461, 239,
	356, 353, 499, 267, 258, 254, 237, 299, 364, 406,
	481, 400, 0, 350, 0, 0, 471, 379, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 305, 235, 307, 193, 391, 472, 271,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 233,
	331, 340, 339, 320, 321, 323, 325, 330, 337, 343,
	0, 0, 0, 0, 0, 250, 303, 257, 249, 496,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 380, 242, 0, 0, 0,
	0, 536, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 312, 189, 213, 0, 0, 390, 436, 448, 0,
	0, 0, 240, 0, 446, 404, 515, 221, 269, 433,
	410, 444, 417, 272, 0, 0, 445, 351, 501, 427,
	512, 537, 538, 248, 384, 524, 485, 532, 551, 214,
	245, 398, 478, 518, 468, 376, 497, 498, 311, 467,
	280, 192, 349, 543, 212, 454, 230, 219, 503, 521,
	274, 431, 201, 480, 510, 227, 458, 0, 0, 553,
	203, 508, 477, 372, 308, 309, 202, 0, 432, 253,
	278, 243, 393, 505, 506, 241, 554, 216, 531, 208,
	0, 530, 386, 500, 509, 373, 362, 207, 507, 371,
	361, 316, 335, 336, 265, 291, 424, 354, 425, 292,
	382, 381, 383, 196, 519, 0, 197, 0, 473, 520,
	555, 222, 223, 225, 0, 264, 268, 276, 279, 287,
	288, 297, 347, 397, 423, 419, 428, 0, 495, 513,
	525, 535, 541, 542, 544, 545, 546, 547, 548, 550,
	549, 385, 295, 469, 315, 352, 0, 0, 403, 447,
	228, 517, 470, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 574, 363, 460, 514, 317, 329, 332, 322, 341,
	0, 342, 318, 319, 324, 326, 327, 328, 333, 334,
	338, 344, 236, 199, 369, 377, 494, 296, 204, 205,
	206, 487, 488, 489, 490, 528, 529, 533, 437, 438,
	439, 440, 277, 523, 293, 443, 442, 313, 314, 358,
	426, 0, 188, 209, 348, 0, 429, 273, 552, 527,
	522, 195, 211, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 190, 191, 198, 210,
	220, 224, 231, 246, 261, 263, 270, 283, 290, 294,
	300, 301, 304, 310, 359, 365, 366, 367, 368, 387,
	388, 389, 392, 395, 396, 399, 401, 402, 405, 409,
	413, 414, 415, 416, 418, 420, 430, 435, 449, 450,
	451, 452, 453, 456, 457, 462, 463, 464, 465, 466,
	474, 475, 479, 502, 504, 516, 534, 539, 455, 285,
	286, 421, 422, 284, 511, 540, 0, 357, 0, 0,
	360, 266, 289, 302, 0, 526, 476, 215, 441, 275,
	238, 0, 0, 200, 234, 218, 244, 259, 262, 306,
	370, 378, 407, 412, 281, 256, 232, 434, 229, 459,
	482, 483, 484, 486, 374, 251, 411, 0, 375, 355,
	492, 493, 298, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 0, 1645, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 346,
	252, 0, 0, 408, 0, 194, 0, 461, 239, 356,
	353, 499, 267, 258, 254, 237, 299, 364, 406, 481,
	400, 0, 350, 0, 0, 471, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 305, 235, 307, 193, 391, 472, 271, 0,
	0, 0, 0, 620, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 233, 331,
	340, 339, 320, 321, 323, 325, 330, 337, 343, 0,
	0, 0, 0, 0, 250, 303, 257, 249, 496, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 380, 242, 0, 0, 0, 0,
	536, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	312, 189, 213, 0, 0, 390, 436, 448, 0, 0,
	0, 240, 0, 446, 404, 515, 221, 269, 433, 410,
	444, 417, 272, 0, 0, 445, 351, 501, 427, 512,
	537, 538, 248, 384, 524, 485, 532, 551, 214, 245,
	398, 478, 518, 468, 376, 497, 498, 311, 467, 280,
	192, 349, 543, 212, 454, 230, 219, 503, 521, 274,
	431, 201, 480, 510, 227, 458, 0, 0, 553, 203,
	508, 477, 372, 308, 309, 202, 0, 432, 253, 278,
	243, 393, 505, 506, 241, 554, 216, 531, 208, 0,
	530, 386, 500, 509, 373, 362, 207, 507, 371, 361,
	316, 335, 336, 265, 291, 424, 354, 425, 292, 382,
	381, 383, 196, 519, 0, 197, 0, 473, 520, 555,
	222, 223, 225, 0, 264, 268, 276, 279, 287, 288,
	297, 347, 397, 423, 419, 428, 0, 495, 513, 525,
	535, 541, 542, 544, 545, 546, 547, 548, 550, 549,
	385, 295, 469, 315, 352, 0, 0, 403, 447, 228,
	517, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	574, 363, 460, 514, 317, 329, 332, 322, 341, 0,
	342, 318, 319, 324, 326, 327, 328, 333, 334, 338,
	344, 236, 199, 369, 377, 494, 296, 204, 205, 206,
	487, 488, 489, 490, 528, 529, 533, 437, 438, 439,
	440, 277, 523, 293, 443, 442, 313, 314, 358, 426,
	0, 188, 209, 348, 0, 429, 273, 552, 527, 522,
	195, 211, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 191, 198, 210, 220,
	224, 231, 246, 261, 263, 270, 283, 290, 294, 300,
	301, 304, 310, 359, 365, 366, 367, 368, 387, 388,
	389, 392, 395, 396, 399, 401, 402, 405, 409, 413,
	414, 415, 416, 418, 420, 430, 435, 449, 450, 451,
	452, 453, 456, 457, 462, 463, 464, 465, 466, 474,
	475, 479, 502, 504, 516, 534, 539, 455, 285, 286,
	421, 422, 284, 511, 540, 0, 357, 0, 0, 360,
	266, 289, 302, 0, 526, 476, 215, 441, 275, 238,
	0, 0, 200, 234, 218, 244, 259, 262, 306, 370,
	378, 407, 412, 281, 256, 232, 434, 229, 459, 482,
	483, 484, 486, 374, 251, 411, 0, 375, 355, 492,
	493, 298, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 0, 1643, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 346, 252,
	0, 0, 408, 0, 194, 0, 461, 239, 356, 353,
	499, 267, 258, 254, 237, 299, 364, 406, 481, 400,
	0, 350, 0, 0, 471, 379, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 305, 235, 307, 193, 391, 472, 271, 0, 0,
	0, 0, 620, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 233, 331, 340,
	339, 320, 321, 323, 325, 330, 337, 343, 0, 0,
	0, 0, 0, 250, 303, 257, 249, 496, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 380, 242, 0, 0, 0, 0, 536,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 312,
	189, 213, 0, 0, 390, 436, 448, 0, 0, 0,
	240, 0, 446, 404, 515, 221, 269, 433, 410, 444,
	417, 272, 0, 0, 445, 351, 501, 427, 512, 537,
	538, 248, 384, 524, 485, 532, 551, 214, 245, 398,
	478, 518, 468, 376, 497, 498, 311, 467, 280, 192,
	349, 543, 212, 454, 230, 219, 503, 521, 274, 431,
	201, 480, 510, 227, 458, 0, 0, 553, 203, 508,
	477, 372, 308, 309, 202, 0, 432, 253, 278, 243,
	393, 505, 506, 241, 554, 216, 531, 208, 0, 530,
	386, 500, 509, 373, 362, 207, 507, 371, 361, 316,
	335, 336, 265, 291, 424, 354, 425, 292, 382, 381,
	383, 196, 519, 0, 197, 0, 473, 520, 555, 222,
	223, 225, 0, 264, 268, 276, 279, 287, 288, 297,
	347, 397, 423, 419, 428, 0, 495, 513, 525, 535,
	541, 542, 544, 545, 546, 547, 548, 550, 549, 385,
	295, 469, 315, 352, 0, 0, 403, 447, 228, 517,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 574,
	363, 460, 514, 317, 329, 332, 322, 341, 0, 342,
	318, 319, 324, 326, 327, 328, 333, 334, 338, 344,
	236, 199, 369, 377, 494, 296, 204, 205, 206, 487,
	488, 489, 490, 528, 529, 533, 437, 438, 439, 440,
	277, 523, 293, 443, 442, 313, 314, 358, 426, 0,
	188, 209, 348, 0, 429, 273, 552, 527, 522, 195,
	211, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 191, 198, 210, 220, 224,
	231, 246, 261, 263, 270, 283, 290, 294, 300, 301,
	304, 310, 359, 365, 366, 367, 368, 387, 388, 389,
	392, 395, 396, 399, 401, 402, 405, 409, 413, 414,
	415, 416, 418, 420, 430, 435, 449, 450, 451, 452,
	453, 456, 457, 462, 463, 464, 465, 466, 474, 475,
	479, 502, 504, 516, 534, 539, 455, 285, 286, 421,
	422, 284, 511, 540, 0, 357, 0, 0, 360, 266,
	289, 302, 0, 526, 476, 215, 441, 275, 238, 0,
	0, 200, 234, 218, 244, 259, 262, 306, 370, 378,
	407, 412, 281, 256, 232, 434, 229, 459, 482, 483,
	484, 486, 374, 251, 411, 0, 375, 355, 492, 493,
	298, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 0, 1641, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 346, 252, 0,
	0, 408, 0, 194, 0, 461, 239, 356, 353, 499,
	267, 258, 254, 237, 299, 364, 406, 481, 400, 0,
	350, 0, 0, 471, 379, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	305, 235, 307, 193, 391, 472, 271, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 233, 331, 340, 339,
	320, 321, 323, 325, 330, 337, 343, 0, 0, 0,
	0, 0, 250, 303, 257, 249, 496, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 380, 242, 0, 0, 0, 0, 536, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 312, 189,
	213, 0, 0, 390, 436, 448, 0, 0, 0, 240,
	0, 446, 404, 515, 221, 269, 433, 410, 444, 417,
	272, 0, 0, 445, 351, 501, 427, 512, 537, 538,
	248, 384, 524, 485, 532, 551, 214, 245, 398, 478,
	518, 468, 376, 497, 498, 311, 467, 280, 192, 349,
	543, 212, 454, 230, 219, 503, 521, 274, 431, 201,
	480, 510, 227, 458, 0, 0, 553, 203, 508, 477,
	372, 308, 309, 202, 0, 432, 253, 278, 243, 393,
	505, 506, 241, 554, 216, 531, 208, 0, 530, 386,
	500, 509, 373, 362, 207, 507, 371, 361, 316, 335,
	336, 265, 291, 424, 354, 425, 292, 382, 381, 383,
	196, 519, 0, 197, 0, 473, 520, 555, 222, 223,
	225, 0, 264, 268, 276, 279, 287, 288, 297, 347,
	397, 423, 419, 428, 0, 495, 513, 525, 535, 541,
	542, 544, 545, 546, 547, 548, 550, 549, 385, 295,
	469, 315, 352, 0, 0, 403, 447, 228, 517, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 574, 363,
	460, 514, 317, 329, 332, 322, 341, 0, 342, 318,
	319, 324, 326, 327, 328, 333, 334, 338, 344, 236,
	199, 369, 377, 494, 296, 204, 205, 206, 487, 488,
	489, 490, 528, 529, 533, 437, 438, 439, 440, 277,
	523, 293, 443, 442, 313, 314, 358, 426, 0, 188,
	209, 348, 0, 429, 273, 552, 527, 522, 195, 211,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 190, 191, 198, 210, 220, 224, 231,
	246, 261, 263, 270, 283, 290, 294, 300, 301, 304,
	310, 359, 365, 366, 367, 368, 387, 388, 389, 392,
	395, 396, 399, 401, 402, 405, 409, 413, 414, 415,
	416, 418, 420, 430, 435, 449, 450, 451, 452, 453,
	456, 457, 462, 463, 464, 465, 466, 474, 475, 479,
	502, 504, 516, 534, 539, 455, 285, 286, 421, 422,
	284, 511, 540, 0, 357, 0, 0, 360, 266, 289,
	302, 0, 526, 476, 215, 441, 275, 238, 0, 0,
	200, 234, 218, 244, 259, 262, 306, 370, 378, 407,
	412, 281, 256, 232, 434, 229, 459, 482, 483, 484,
	486, 374, 251, 411, 0, 375, 355, 492, 493, 298,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 0, 1639, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 346, 252, 0, 0,
	408, 0, 194, 0, 461, 239, 356, 353, 499, 267,
	258, 254, 237, 299, 364, 406, 481, 400, 0, 350,
	0, 0, 471, 379, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 305,
	235, 307, 193, 391, 472, 271, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 233, 331, 340, 339, 320,
	321, 323, 325, 330, 337, 343, 0, 0, 0, 0,
	0, 250, 303, 257, 249, 496, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 380, 242, 0, 0, 0, 0, 536, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 312, 189, 213,
	0, 0, 390, 436, 448, 0, 0, 0, 240, 0,
	446, 404, 515, 221, 269, 433, 410, 444, 417, 272,
	0, 0, 445, 351, 501, 427, 512, 537, 538, 248,
	384, 524, 485, 532, 551, 214, 245, 398, 478, 518,
	468, 376, 497, 498, 311, 467, 280, 192, 349, 543,
	212, 454, 230, 219, 503, 521, 274, 431, 201, 480,
	510, 227, 458, 0, 0, 553, 203, 508, 477, 372,
	308, 309, 202, 0, 432, 253, 278, 243, 393, 505,
	506, 241, 554, 216, 531, 208, 0, 530, 386, 500,
	509, 373, 362, 207, 507, 371, 361, 316, 335, 336,
	265, 291, 424, 354, 425, 292, 382, 381, 383, 196,
	519, 0, 197, 0, 473, 520, 555, 222, 223, 225,
	0, 264, 268, 276, 279, 287, 288, 297, 347, 397,
	423, 419, 428, 0, 495, 513, 525, 535, 541, 542,
	544, 545, 546, 547, 548, 550, 549, 385, 295, 469,
	315, 352, 0, 0, 403, 447, 228, 517, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 574, 363, 460,
	514, 317, 329, 332, 322, 341, 0, 342, 318, 319,
	324, 326, 327, 328, 333, 334, 338, 344, 236, 199,
	369, 377, 494, 296, 204, 205, 206, 487, 488, 489,
	490, 528, 529, 533, 437, 438, 439, 440, 277, 523,
	293, 443, 442, 313, 314, 358, 426, 0, 188, 209,
	348, 0, 429, 273, 552, 527, 522, 195, 211, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 191, 198, 210, 220, 224, 231, 246,
	261, 263, 270, 283, 290, 294, 300, 301, 304, 310,
	359, 365, 366, 367, 368, 387, 388, 389, 392, 395,
	396, 399, 401, 402, 405, 409, 413, 414, 415, 416,
	418, 420, 430, 435, 449, 450, 451, 452, 453, 456,
	457, 462, 463, 464, 465, 466, 474, 475, 479, 502,
	504, 516, 534, 539, 455, 285, 286, 421, 422, 284,
	511, 540, 0, 357, 0, 0, 360, 266, 289, 302,
	0, 526, 476, 215, 441, 275, 238, 0, 0, 200,
	234, 218, 244, 259, 262, 306, 370, 378, 407, 412,
	281, 256, 232, 434, 229, 459, 482, 483, 484, 486,
	374, 251, 411, 0, 375, 355, 492, 493, 298, 491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 0, 1635, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 346, 252, 0, 0, 408,
	0, 194, 0, 461, 239, 356, 353, 499, 267, 258,
	254, 237, 299, 364, 406, 481, 400, 0, 350, 0,
	0, 471, 379, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 305, 235,
	307, 193, 391, 472, 271, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 233, 331, 340, 339, 320, 321,
	323, 325, 330, 337, 343, 0, 0, 0, 0, 0,
	250, 303, 257, 249, 496, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	380, 242, 0, 0, 0, 0, 536, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 312, 189, 213, 0,
	0, 390, 436, 448, 0, 0, 0, 240, 0, 446,
	404, 515, 221, 269, 433, 410, 444, 417, 272, 0,
	0, 445, 351, 501, 427, 512, 537, 538, 248, 384,
	524, 485, 532, 551, 214, 245, 398, 478, 518, 468,
	376, 497, 498, 311, 467, 280, 192, 349, 543, 212,
	454, 230, 219, 503, 521, 274, 431, 201, 480, 510,
	227, 458, 0, 0, 553, 203, 508, 477, 372, 308,
	309, 202, 0, 432, 253, 278, 243, 393, 505, 506,
	241, 554, 216, 531, 208, 0, 530, 386, 500, 509,
	373, 362, 207, 507, 371, 361, 316, 335, 336, 265,
	291, 424, 354, 425, 292, 382, 381, 383, 196, 519,
	0, 197, 0, 473, 520, 555, 222, 223, 225, 0,
	264, 268, 276, 279, 287, 288, 297, 347, 397, 423,
	419, 428, 0, 495, 513, 525, 535, 541, 542, 544,
	545, 546, 547, 548, 550, 549, 385, 295, 469, 315,
	352, 0, 0, 403, 447, 228, 517, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 574, 363, 460, 514,
	317, 329, 332, 322, 341, 0, 342, 318, 319, 324,
	326, 327, 328, 333, 334, 338, 344, 236, 199, 369,
	377, 494, 296, 204, 205, 206, 487, 488, 489, 490,
	528, 529, 533, 437, 438, 439, 440, 277, 523, 293,
	443, 442, 313, 314, 358, 426, 0, 188, 209, 348,
	0, 429, 273, 552, 527, 522, 195, 211, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 191, 198, 210, 220, 224, 231, 246, 261,
	263, 270, 283, 290, 294, 300, 301, 304, 310, 359,
	365, 366, 367, 368, 387, 388, 389, 392, 395, 396,
	399, 401, 402, 405, 409, 413, 414, 415, 416, 418,
	420, 430, 435, 449, 450, 451, 452, 453, 456, 457,
	462, 463, 464, 465, 466, 474, 475, 479, 502, 504,
	516, 534, 539, 455, 285, 286, 421, 422, 284, 511,
	540, 0, 357, 0, 0, 360, 266, 289, 302, 0,
	526, 476, 215, 441, 275, 238, 0, 0, 200, 234,
	218, 244, 259, 262, 306, 370, 378, 407, 412, 281,
	256, 232, 434, 229, 459, 482, 483, 484, 486, 374,
	251, 411, 0, 375, 355, 492, 493, 298, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 0, 1633, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 346, 252, 0, 0, 408, 0,
	194, 0, 461, 239, 356, 353, 499, 267, 258, 254,
	237, 299, 364, 406, 481, 400, 0, 350, 0, 0,
	471, 379, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 305, 235, 307,
	193, 391, 472, 271, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 233, 331, 340, 339, 320, 321, 323,
	325, 330, 337, 343, 0, 0, 0, 0, 0, 250,
	303, 257, 249, 496, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 380,
	242, 0, 0, 0, 0, 536, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 312, 189, 213, 0, 0,
	390, 436, 448, 0, 0, 0, 240, 0, 446, 404,
	515, 221, 269, 433, 410, 444, 417, 272, 0, 0,
	445, 351, 501, 427, 512, 537, 538, 248, 384, 524,
	485, 532, 551, 214, 245, 398, 478, 518, 468, 376,
	497, 498, 311, 467, 280, 192, 349, 543, 212, 454,
	230, 219, 503, 521, 274, 431, 201, 480, 510, 227,
	458, 0, 0, 553, 203, 508, 477, 372, 308, 309,
	202, 0, 432, 253, 278, 243, 393, 505, 506, 241,
	554, 216, 531, 208, 0, 530, 386, 500, 509, 373,
	362, 207, 507, 371, 361, 316, 335, 336, 265, 291,
	424, 354, 425, 292, 382, 381, 383, 196, 519, 0,
	197, 0, 473, 520, 555, 222, 223, 225, 0, 264,
	268, 276, 279, 287, 288, 297, 347, 397, 423, 419,
	428, 0, 495, 513, 525, 535, 541, 542, 544, 545,
	546, 547, 548, 550, 549, 385, 295, 469, 315, 352,
	0, 0, 403, 447, 228, 517, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 574, 363, 460, 514, 317,
	329, 332, 322, 341, 0, 342, 318, 319, 324, 326,
	327, 328, 333, 334, 338, 344, 236, 199, 369, 377,
	494, 296, 204, 205, 206, 487, 488, 489, 490, 528,
	529, 533, 437, 438, 439, 440, 277, 523, 293, 443,
	442, 313, 314, 358, 426, 0, 188, 209, 348, 0,
	429, 273, 552, 527, 522, 195, 211, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 191, 198, 210, 220, 224, 231, 246, 261, 263,
	270, 283, 290, 294, 300, 301, 304, 310, 359, 365,
	366, 367, 368, 387, 388, 389, 392, 395, 396, 399,
	401, 402, 405, 409, 413, 414, 415, 416, 418, 420,
	430, 435, 449, 450, 451, 452, 453, 456, 457, 462,
	463, 464, 465, 466, 474, 475, 479, 502, 504, 516,
	534, 539, 455, 285, 286, 421, 422, 284, 511, 540,
	0, 357, 0, 0, 360, 266, 289, 302, 0, 526,
	476, 215, 441, 275, 238, 0, 0, 200, 234, 218,
	244, 259, 262, 306, 370, 378, 407, 412, 281, 256,
	232, 434, 229, 459, 482, 483, 484, 486, 374, 251,
	411, 0, 375, 355, 492, 493, 298, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	0, 1631, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 346, 252, 0, 0, 408, 0, 194,
	0, 461, 239, 356, 353, 499, 267, 258, 254, 237,
	299, 364, 406, 481, 400, 0, 350, 0, 0, 471,
	379, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 305, 235, 307, 193,
	391, 472, 271, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 233, 331, 340, 339, 320, 321, 323, 325,
	330, 337, 343, 0, 0, 0, 0, 0, 250, 303,
	257, 249, 496, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 380, 242,
	0, 0, 0, 0, 536, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 312, 189, 213, 0, 0, 390,
	436, 448, 0, 0, 0, 240, 0, 446, 404, 515,
	221, 269, 433, 410, 444, 417, 272, 0, 0, 445,
	351, 501, 427, 512, 537, 538, 248, 384, 524, 485,
	532, 551, 214, 245, 398, 478, 518, 468, 376, 497,
	498, 311, 467, 280, 192, 349, 543, 212, 454, 230,
	219, 503, 521, 274, 431, 201, 480, 510, 227, 458,
	0, 0, 553, 203, 508, 477, 372, 308, 309, 202,
	0, 432, 253, 278, 243, 393, 505, 506, 241, 554,
	216, 531, 208, 0, 530, 386, 500, 509, 373, 362,
	207, 507, 371, 361, 316, 335, 336, 265, 291, 424,
	354, 425, 292, 382, 381, 383, 196, 519, 0, 197,
	0, 473, 520, 555, 222, 223, 225, 0, 264, 268,
	276, 279, 287, 288, 297, 347, 397, 423, 419, 428,
	0, 495, 513, 525, 535, 541, 542, 544, 545, 546,
	547, 548, 550, 549, 385, 295, 469, 315, 352, 0,
	0, 403, 447, 228, 517, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 574, 363, 460, 514, 317, 329,
	332, 322, 341, 0, 342, 318, 319, 324, 326, 327,
	328, 333, 334, 338, 344, 236, 199, 369, 377, 494,
	296, 204, 205, 206, 487, 488, 489, 490, 528, 529,
	533, 437, 438, 439, 440, 277, 523, 293, 443, 442,
	313, 314, 358, 426, 0, 188, 209, 348, 0, 429,
	273, 552, 527, 522, 195, 211, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	191, 198, 210, 220, 224, 231, 246, 261, 263, 270,
	283, 290, 294, 300, 301, 304, 310, 359, 365, 366,
	367, 368, 387, 388, 389, 392, 395, 396, 399, 401,
	402, 405, 409, 413, 414, 415, 416, 418, 420, 430,
	435, 449, 450, 451, 452, 453, 456, 457, 462, 463,
	464, 465, 466, 474, 475, 479, 502, 504, 516, 534,
	539, 455, 285, 286, 421, 422, 284, 511, 540, 0,
	357, 0, 0, 360, 266, 289, 302, 0, 526, 476,
	215, 441, 275, 238, 0, 0, 200, 234, 218, 244,
	259, 262, 306, 370, 378, 407, 412, 281, 256, 232,
	434, 229, 459, 482, 483, 484, 486, 374, 251, 411,
	0, 375, 355, 492, 493, 298, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 346, 252, 0, 0, 408, 0, 194, 0,
	461, 239, 356, 353, 499, 267, 258, 254, 237, 299,
	364, 406, 481, 400, 0, 350, 0, 0, 471, 379,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 305, 235, 307, 193, 391,
	472, 271, 0, 1606, 0, 0, 620, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 233, 331, 340, 339, 320, 321, 323, 325, 330,
	337, 343, 0, 0, 0, 0, 0, 250, 303, 257,
	249, 496, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 380, 242, 0,
	0, 0, 0, 536, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 312, 189, 213, 0, 0, 390, 436,
	448, 0, 0, 0, 240, 0, 446, 404, 515, 221,
	269, 433, 410, 444, 417, 272, 0, 0, 445, 351,
	501, 427, 512, 537, 538, 248, 384, 524, 485, 532,
	551, 214, 245, 398, 478, 518, 468, 376, 497, 498,
	311, 467, 280, 192, 349, 543, 212, 454, 230, 219,
	503, 521, 274, 431, 201, 480, 510, 227, 458, 0,
	0, 553, 203, 508, 477, 372, 308, 309, 202, 0,
	432, 253, 278, 243, 393, 505, 506, 241, 554, 216,
	531, 208, 0, 530, 386, 500, 509, 373, 362, 207,
	507, 371, 361, 316, 335, 336, 265, 291, 424, 354,
	425, 292, 382, 381, 383, 196, 519, 0, 197, 0,
	473, 520, 555, 222, 223, 225, 0, 264, 268, 276,
	279, 287, 288, 297, 347, 397, 423, 419, 428, 0,
	495, 513, 525, 535, 541, 542, 544, 545, 546, 547,
	548, 550, 549, 385, 295, 469, 315, 352, 0, 0,
	403, 447, 228, 517, 470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 574, 363, 460, 514, 317, 329, 332,
	322, 341, 0, 342, 318, 319, 324, 326, 327, 328,
	333, 334, 338, 344, 236, 199, 369, 377, 494, 296,
	204, 205, 206, 487, 488, 489, 490, 528, 529, 533,
	437, 438, 439, 440, 277, 523, 293, 443, 442, 313,
	314, 358, 426, 0, 188, 209, 348, 0, 429, 273,
	552, 527, 522, 195, 211, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 190, 191,
	198, 210, 220, 224, 231, 246, 261, 263, 270, 283,
	290, 294, 300, 301, 304, 310, 359, 365, 366, 367,
	368, 387, 388, 389, 392, 395, 396, 399, 401, 402,
	405, 409, 413, 414, 415, 416, 418, 420, 430, 435,
	449, 450, 451, 452, 453, 456, 457, 462, 463, 464,
	465, 466, 474, 475, 479, 502, 504, 516, 534, 539,
	455, 285, 286, 421, 422, 284, 511, 540, 0, 357,
	0, 0, 360, 266, 289, 302, 0, 526, 476, 215,
	441, 275, 238, 0, 0, 200, 234, 218, 244, 259,
	262, 306, 370, 378, 407, 412, 281, 256, 232, 434,
	229, 459, 482, 483, 484, 486, 374, 251, 411, 0,
	375, 355, 492, 493, 298, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 0, 0,
	0, 0, 0, 0, 0, 1507, 255, 0, 0, 0,
	0, 346, 252, 0, 0, 408, 0, 194, 0, 461,
	239, 356, 353, 499, 267, 258, 254, 237, 299, 364,
	406, 481, 400, 0, 350, 0, 0, 471, 379, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 305, 235, 307, 193, 391, 472,
	271, 0, 0, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	233, 331, 340, 339, 320, 321, 323, 325, 330, 337,
	343, 0, 0, 0, 0, 0, 250, 303, 257, 249,
	496, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 380, 242, 0, 0,
	0, 0, 536, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 312, 189, 213, 0, 0, 390, 436, 448,
	0, 0, 0, 240, 0, 446, 404, 515, 221, 269,
	433, 410, 444, 417, 272, 0, 0, 445, 351, 501,
	427, 512, 537, 538, 248, 384, 524, 485, 532, 551,
	214, 245, 398, 478, 518, 468, 376, 497, 498, 311,
	467, 280, 192, 349, 543, 212, 454, 230, 219, 503,
	521, 274, 431, 201, 480, 510, 227, 458, 0, 0,
	553, 203, 508, 477, 372, 308, 309, 202, 0, 432,
	253, 278, 243, 393, 505, 506, 241, 554, 216, 531,
	208, 0, 530, 386, 500, 509, 373, 362, 207, 507,
	371, 361, 316, 335, 336, 265, 291, 424, 354, 425,
	292, 382, 381, 383, 196, 519, 0, 197, 0, 473,
	520, 555, 222, 223, 225, 0, 264, 268, 276, 279,
	287, 288, 297, 347, 397, 423, 419, 428, 0, 495,
	513, 525, 535, 541, 542, 544, 545, 546, 547, 548,
	550, 549, 385, 295, 469, 315, 352, 0, 0, 403,
	447, 228, 517, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 574, 363, 460, 514, 317, 329, 332, 322,
	341, 0, 342, 318, 319, 324, 326, 327, 328, 333,
	334, 338, 344, 236, 199, 369, 377, 494, 296, 204,
	205, 206, 487, 488, 489, 490, 528, 529, 533, 437,
	438, 439, 440, 277, 523, 293, 443, 442, 313, 314,
	358, 426, 0, 188, 209, 348, 0, 429, 273, 552,
	527, 522, 195, 211, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 191, 198,
	210, 220, 224, 231, 246, 261, 263, 270, 283, 290,
	294, 300, 301, 304, 310, 359, 365, 366, 367, 368,
	387, 388, 389, 392, 395, 396, 399, 401, 402, 405,
	409, 413, 414, 415, 416, 418, 420, 430, 435, 449,
	450, 451, 452, 453, 456, 457, 462, 463, 464, 465,
	466, 474, 475, 479, 502, 504, 516, 534, 539, 455,
	285, 286, 421, 422, 284, 511, 540, 0, 357, 0,
	0, 360, 266, 289, 302, 0, 526, 476, 215, 441,
	275, 238, 0, 0, 200, 234, 218, 244, 259, 262,
	306, 370, 378, 407, 412, 281, 256, 232, 434, 229,
	459, 482, 483, 484, 486, 374, 251, 411, 0, 375,
	355, 492, 493, 298, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	346, 252, 0, 0, 408, 0, 194, 0, 461, 239,
	356, 353, 499, 267, 258, 254, 237, 299, 364, 406,
	481, 400, 0, 350, 0, 0, 471, 379, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 305, 235, 307, 193, 391, 472, 271,
	0, 87, 0, 0, 789, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 233,
	331, 340, 339, 320, 321, 323, 325, 330, 337, 343,
	0, 0, 0, 0, 0, 250, 303, 257, 249, 496,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 380, 242, 0, 0, 0,
	0, 536, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 312, 189, 213, 0, 0, 390, 436, 448, 0,
	0, 0, 240, 0, 446, 404, 515, 221, 269, 433,
	410, 444, 417, 272, 0, 0, 445, 351, 501, 427,
	512, 537, 538, 248, 384, 524, 485, 532, 551, 214,
	245, 398, 478, 518, 468, 376, 497, 498, 311, 467,
	280, 192, 349, 543, 212, 454, 230, 219, 503, 521,
	274, 431, 201, 480, 510, 227, 458, 0, 0, 553,
	203, 508, 477, 372, 308, 309, 202, 0, 432, 253,
	278, 243, 393, 505, 506, 241, 554, 216, 531, 208,
	0, 530, 386, 500, 509, 373, 362, 207, 507, 371,
	361, 316, 335, 336, 265, 291, 424, 354, 425, 292,
	382, 381, 383, 196, 519, 0, 197, 0, 473, 520,
	555, 222, 223, 225, 0, 264, 268, 276, 279, 287,
	288, 297, 347, 397, 423, 419, 428, 0, 495, 513,
	525, 535, 541, 542, 544, 545, 546, 547, 548, 550,
	549, 385, 295, 469, 315, 352, 0, 0, 403, 447,
	228, 517, 470, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 574, 363, 460, 514, 317, 329, 332, 322, 341,
	0, 342, 318, 319, 324, 326, 327, 328, 333, 334,
	338, 344, 236, 199, 369, 377, 494, 296, 204, 205,
	206, 487, 488, 489, 490, 528, 529, 533, 437, 438,
	439, 440, 277, 523, 293, 443, 442, 313, 314, 358,
	426, 0, 188, 209, 348, 0, 429, 273, 552, 527,
	522, 195, 211, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 190, 191, 198, 210,
	220, 224, 231, 246, 261, 263, 270, 283, 290, 294,
	300, 301, 304, 310, 359, 365, 366, 367, 368, 387,
	388, 389, 392, 395, 396, 399, 401, 402, 405, 409,
	413, 414, 415, 416, 418, 420, 430, 435, 449, 450,
	451, 452, 453, 456, 457, 462, 463, 464, 465, 466,
	474, 475, 479, 502, 504, 516, 534, 539, 455, 285,
	286, 421, 422, 284, 511, 540, 0, 357, 0, 0,
	360, 266, 289, 302, 0, 526, 476, 215, 441, 275,
	238, 0, 0, 200, 234, 218, 244, 259, 262, 306,
	370, 378, 407, 412, 281, 256, 232, 434, 229, 459,
	482, 483, 484, 486, 374, 251, 411, 0, 375, 355,
	492, 493, 298, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 346,
	252, 0, 0, 408, 0, 194, 0, 461, 239, 356,
	353, 499, 267, 258, 254, 237, 299, 364, 406, 481,
	400, 0, 350, 0, 0, 471, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 305, 235, 307, 193, 391, 472, 271, 0,
	0, 0, 0, 620, 0, 0, 0, 1261, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 233, 331,
	340, 339, 320, 321, 323, 325, 330, 337, 343, 0,
	0, 0, 0, 0, 250, 303, 257, 249, 496, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 380, 242, 0, 0, 0, 0,
	536, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	312, 189, 213, 0, 0, 390, 436, 448, 0, 0,
	0, 240, 0, 446, 404, 515, 221, 269, 433, 410,
	444, 417, 272, 0, 0, 445, 351, 501, 427, 512,
	537, 538, 248, 384, 524, 485, 532, 551, 214, 245,
	398, 478, 518, 468, 376, 497, 498, 311, 467, 280,
	192, 349, 543, 212, 454, 230, 219, 503, 521, 274,
	431, 201, 480, 510, 227, 458, 0, 0, 553, 203,
	508, 477, 372, 308, 309, 202, 0, 432, 253, 278,
	243, 393, 505, 506, 241, 554, 216, 531, 208, 0,
	530, 386, 500, 509, 373, 362, 207, 507, 371, 361,
	316, 335, 336, 265, 291, 424, 354, 425, 292, 382,
	381, 383, 196, 519, 0, 197, 0, 473, 520, 555,
	222, 223, 225, 0, 264, 268, 276, 279, 287, 288,
	297, 347, 397, 423, 419, 428, 0, 495, 513, 525,
	535, 541, 542, 544, 545, 546, 547, 548, 550, 549,
	385, 295, 469, 315, 352, 0, 0, 403, 447, 228,
	517, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	574, 363, 460, 514, 317, 329, 332, 322, 341, 0,
	342, 318, 319, 324, 326, 327, 328, 333, 334, 338,
	344, 236, 199, 369, 377, 494, 296, 204, 205, 206,
	487, 488, 489, 490, 528, 529, 533, 437, 438, 439,
	440, 277, 523, 293, 443, 442, 313, 314, 358, 426,
	0, 188, 209, 348, 0, 429, 273, 552, 527, 522,
	195, 211, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 191, 198, 210, 220,
	224, 231, 246, 261, 263, 270, 283, 290, 294, 300,
	301, 304, 310, 359, 365, 366, 367, 368, 387, 388,
	389, 392, 395, 396, 399, 401, 402, 405, 409, 413,
	414, 415, 416, 418, 420, 430, 435, 449, 450, 451,
	452, 453, 456, 457, 462, 463, 464, 465, 466, 474,
	475, 479, 502, 504, 516, 534, 539, 455, 285, 286,
	421, 422, 284, 511, 540, 0, 357, 0, 0, 360,
	266, 289, 302, 0, 526, 476, 215, 441, 275, 238,
	0, 0, 200, 234, 218, 244, 259, 262, 306, 370,
	378, 407, 412, 281, 256, 232, 434, 229, 459, 482,
	483, 484, 486, 374, 251, 411, 0, 375, 355, 492,
	493, 298, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 346, 252,
	0, 0, 408, 0, 194, 0, 461, 239, 356, 353,
	499, 267, 258, 254, 237, 299, 364, 406, 481, 400,
	0, 350, 0, 0, 471, 379, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 305, 235, 307, 193, 391, 472, 271, 0, 0,
	0, 0, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 233, 331, 340,
	339, 320, 321, 323, 325, 330, 337, 343, 0, 0,
	0, 0, 0, 250, 303, 257, 249, 496, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 380, 242, 0, 0, 0, 0, 536,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 312,
	189, 213, 0, 0, 390, 436, 448, 0, 0, 0,
	240, 0, 446, 404, 515, 221, 269, 433, 410, 444,
	417, 272, 0, 0, 445, 351, 501, 427, 512, 537,
	538, 248, 384, 524, 485, 532, 551, 214, 245, 398,
	478, 518, 468, 376, 497, 498, 311, 467, 280, 192,
	349, 543, 212, 454, 230, 219, 503, 521, 274, 431,
	201, 480, 510, 227, 458, 0, 0, 553, 203, 508,
	477, 372, 308, 309, 202, 0, 432, 253, 278, 243,
	393, 505, 506, 241, 554, 216, 531, 208, 0, 530,
	386, 500, 509, 373, 362, 207, 507, 371, 361, 316,
	335, 336, 265, 291, 424, 354, 425, 292, 382, 381,
	383, 196, 519, 0, 197, 0, 473, 520, 555, 222,
	223, 225, 0, 264, 268, 276, 279, 287, 288, 297,
	347, 397, 423, 419, 428, 0, 495, 513, 525, 535,
	541, 542, 544, 545, 546, 547, 548, 550, 549, 385,
	295, 469, 315, 352, 0, 0, 403, 447, 228, 517,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 574,
	363, 460, 514, 317, 329, 332, 322, 341, 0, 342,
	318, 319, 324, 326, 327, 328, 333, 334, 338, 344,
	236, 199, 369, 377, 494, 296, 204, 205, 206, 487,
	488, 489, 490, 528, 529, 533, 437, 438, 439, 440,
	277, 523, 293, 443, 442, 313, 314, 358, 426, 0,
	188, 209, 348, 0, 429, 273, 552, 527, 522, 195,
	211, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	871, 0, 0, 0, 190, 191, 198, 210, 220, 224,
	231, 246, 261, 263, 270, 283, 290, 294, 300, 301,
	304, 310, 359, 365, 366, 367, 368, 387, 388, 389,
	392, 395, 396, 399, 401, 402, 405, 409, 413, 414,
	415, 416, 418, 420, 430, 435, 449, 450, 451, 452,
	453, 456, 457, 462, 463, 464, 465, 466, 474, 475,
	479, 502, 504, 516, 534, 539, 455, 285, 286, 421,
	422, 284, 511, 540, 0, 357, 0, 0, 360, 266,
	289, 302, 0, 526, 476, 215, 441, 275, 238, 0,
	0, 200, 234, 218, 244, 259, 262, 306, 370, 378,
	407, 412, 281, 256, 232, 434, 229, 459, 482, 483,
	484, 486, 374, 251, 411, 0, 375, 355, 492, 493,
	298, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 346, 252, 0,
	0, 408, 0, 194, 0, 461, 239, 356, 353, 499,
	267, 258, 254, 237, 299, 364, 406, 481, 400, 0,
	350, 0, 0, 471, 379, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	305, 235, 307, 193, 391, 472, 271, 0, 0, 0,
	0, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 233, 331, 340, 339,
	320, 321, 323, 325, 330, 337, 343, 0, 0, 0,
	0, 0, 250, 303, 257, 249, 496, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 636, 0,
	282, 0, 380, 242, 0, 0, 0, 0, 536, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 312, 189,
	213, 0, 0, 390, 436, 448, 0, 0, 0, 240,
	0, 446, 404, 515, 221, 269, 433, 410, 444, 417,
	272, 0, 0, 445, 351, 501, 427, 512, 537, 538,
	248, 384, 524, 485, 532, 551, 214, 245, 398, 478,
	518, 468, 376, 497, 498, 311, 467, 280, 192, 349,
	543, 212, 454, 230, 219, 503, 521, 274, 431, 201,
	480, 510, 227, 458, 0, 0, 553, 203, 508, 477,
	372, 308, 309, 202, 0, 432, 253, 278, 243, 393,
	505, 506, 241, 554, 216, 531, 208, 0, 530, 386,
	500, 509, 373, 362, 207, 507, 371, 361, 316, 335,
	336, 265, 291, 424, 354, 425, 292, 382, 381, 383,
	196, 519, 0, 197, 0, 473, 520, 555, 222, 223,
	225, 0, 264, 268, 276, 279, 287, 288, 297, 347,
	397, 423, 419, 428, 0, 495, 513, 525, 535, 541,
	542, 544, 545, 546, 547, 548, 550, 549, 385, 295,
	469, 315, 352, 0, 0, 403, 447, 228, 517, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 574, 363,
	460, 514, 317, 329, 332, 322, 341, 0, 342, 318,
	319, 324, 326, 327, 328, 333, 334, 338, 344, 236,
	199, 369, 377, 494, 296, 204, 205, 206, 487, 488,
	489, 490, 528, 529, 533, 437, 438, 439, 440, 277,
	523, 293, 443, 442, 313, 314, 358, 426, 0, 188,
	209, 348, 0, 429, 273, 552, 527, 522, 195, 211,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 190, 191, 198, 210, 220, 224, 231,
	246, 261, 263, 270, 283, 290, 294, 300, 301, 304,
	310, 359, 365, 366, 367, 368, 387, 388, 389, 392,
	395, 396, 399, 401, 402, 405, 409, 413, 414, 415,
	416, 418, 420, 430, 435, 449, 450, 451, 452, 453,
	456, 457, 462, 463, 464, 465, 466, 474, 475, 479,
	502, 504, 516, 534, 539, 455, 285, 286, 421, 422,
	635, 511, 540, 0, 357, 0, 0, 360, 266, 289,
	302, 0, 526, 476, 215, 441, 275, 238, 0, 0,
	200, 234, 218, 244, 259, 262, 306, 370, 378, 407,
	412, 281, 256, 232, 434, 229, 459, 482, 483, 484,
	486, 374, 251, 411, 0, 375, 355, 492, 493, 298,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 346, 252, 0, 0,
	408, 0, 194, 0, 461, 239, 356, 353, 499, 267,
	258, 254, 237, 299, 364, 406, 481, 400, 0, 350,
	0, 0, 471, 379, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 305,
	235, 307, 193, 391, 472, 271, 0, 0, 0, 0,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 233, 331, 340, 339, 320,
	321, 323, 325, 330, 337, 343, 0, 0, 0, 0,
	0, 250, 303, 257, 249, 496, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 380, 242, 0, 0, 577, 0, 536, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 312, 189, 213,
	0, 0, 390, 436, 448, 0, 0, 0, 240, 0,
	446, 404, 515, 221, 269, 433, 410, 444, 417, 272,
	0, 0, 445, 351, 501, 427, 512, 537, 538, 248,
	384, 524, 485, 532, 551, 214, 245, 398, 478, 518,
	468, 376, 497, 498, 311, 467, 280, 192, 349, 543,
	212, 454, 230, 219, 503, 521, 274, 431, 201, 480,
	510, 227, 458, 0, 0, 553, 203, 508, 477, 372,
	308, 309, 202, 0, 432, 253, 278, 243, 393, 505,
	506, 241, 554, 216, 531, 208, 0, 530, 386, 500,
	509, 373, 362, 207, 507, 371, 361, 316, 335, 336,
	265, 291, 424, 354, 425, 292, 382, 381, 383, 196,
	519, 0, 197, 0, 473, 520, 555, 222, 223, 225,
	0, 264, 268, 276, 279, 287, 288, 297, 347, 397,
	423, 419, 428, 0, 495, 513, 525, 535, 541, 542,
	544, 545, 546, 547, 548, 550, 549, 385, 295, 469,
	315, 352, 0, 0, 403, 447, 228, 517, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 574, 363, 460,
	514, 317, 329, 332, 322, 341, 0, 342, 318, 319,
	324, 326, 327, 328, 333, 334, 338, 344, 236, 199,
	369, 377, 494, 296, 204, 205, 206, 487, 488, 489,
	490, 528, 529, 533, 437, 438, 439, 440, 277, 523,
	293, 443, 442, 313, 314, 358, 426, 0, 188, 209,
	348, 0, 429, 273, 552, 527, 522, 195, 211, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 191, 198, 210, 220, 224, 231, 246,
	261, 263, 270, 283, 290, 294, 300, 301, 304, 310,
	359, 365, 366, 367, 368, 387, 388, 389, 392, 395,
	396, 399, 401, 402, 405, 409, 413, 414, 415, 416,
	418, 420, 430, 435, 449, 450, 451, 452, 453, 456,
	457, 462, 463, 464, 465, 466, 474, 475, 479, 502,
	504, 516, 534, 539, 455, 285, 286, 421, 422, 284,
	511, 540, 0, 357, 0, 0, 360, 266, 289, 302,
	0, 526, 476, 215, 441, 275, 238, 0, 0, 200,
	234, 218, 244, 259, 262, 306, 370, 378, 407, 412,
	281, 256, 232, 434, 229, 459, 482, 483, 484, 486,
	374, 251, 411, 0, 375, 355, 492, 493, 298, 491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 346, 252, 0, 0, 408,
	0, 194, 0, 461, 239, 356, 353, 499, 267, 258,
	254, 237, 299, 364, 406, 481, 400, 0, 350, 0,
	0, 471, 379, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 305, 235,
	307, 193, 391, 472, 271, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 233, 331, 340, 339, 320, 321,
	323, 325, 330, 337, 343, 0, 0, 0, 0, 0,
	250, 303, 257, 249, 496, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	380, 242, 0, 0, 0, 0, 536, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 312, 189, 213, 0,
	0, 390, 436, 448, 0, 0, 0, 240, 0, 446,
	404, 515, 221, 269, 433, 410, 444, 417, 272, 0,
	0, 445, 351, 501, 427, 512, 537, 538, 248, 384,
	524, 485, 532, 551, 214, 245, 398, 478, 518, 468,
	376, 497, 498, 311, 467, 280, 192, 349, 543, 212,
	454, 230, 219, 503, 521, 274, 431, 201, 480, 510,
	227, 458, 0, 0, 553, 203, 508, 477, 372, 308,
	309, 202, 0, 432, 253, 278, 243, 393, 505, 506,
	241, 554, 216, 531, 208, 0, 530, 386, 500, 509,
	373, 362, 207, 507, 371, 361, 316, 335, 336, 265,
	291, 424, 354, 425, 292, 382, 381, 383, 196, 519,
	0, 197, 0, 473, 520, 555, 222, 223, 225, 0,
	264, 268, 276, 279, 287, 288, 297, 347, 397, 423,
	419, 428, 0, 495, 513, 525, 535, 541, 542, 544,
	545, 546, 547, 548, 550, 549, 385, 295, 469, 315,
	352, 0, 0, 403, 447, 228, 517, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 574, 363, 460, 514,
	317, 329, 332, 322, 341, 0, 342, 318, 319, 324,
	326, 327, 328, 333, 334, 338, 344, 236, 199, 369,
	377, 494, 296, 204, 205, 206, 487, 488, 489, 490,
	528, 529, 533, 437, 438, 439, 440, 277, 523, 293,
	443, 442, 313, 314, 358, 426, 0, 188, 209, 348,
	0, 429, 273, 552, 527, 522, 195, 211, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 191, 198, 210, 220, 224, 231, 246, 261,
	263, 270, 283, 290, 294, 300, 301, 304, 310, 359,
	365, 366, 367, 368, 3369, 388, 389, 392, 395, 396,
	399, 401, 402, 405, 409, 413, 414, 415, 416, 418,
	420, 430, 435, 449, 450, 451, 452, 453, 456, 457,
	462, 463, 464, 465, 466, 474, 475, 479, 502, 504,
	516, 534, 539, 455, 285, 286, 421, 422, 284, 511,
	540, 0, 357, 0, 0, 360, 266, 289, 302, 0,
	526, 476, 215, 441, 275, 238, 0, 0, 200, 234,
	218, 244, 259, 262, 306, 370, 378, 407, 412, 281,
	256, 232, 434, 229, 459, 482, 483, 484, 486, 374,
	251, 411, 0, 375, 355, 492, 493, 298, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 346, 252, 0, 0, 408, 0,
	194, 0, 461, 239, 356, 353, 499, 267, 258, 254,
	237, 299, 364, 406, 481, 400, 0, 350, 0, 0,
	471, 379, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 305, 235, 307,
	193, 391, 472, 271, 0, 0, 0, 0, 620, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 233, 331, 340, 339, 320, 321, 323,
	325, 330, 337, 343, 0, 0, 0, 0, 0, 250,
	303, 257, 249, 496, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 380,
	242, 0, 0, 0, 0, 536, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 312, 189, 213, 0, 0,
	390, 436, 448, 0, 0, 0, 240, 0, 446, 404,
	515, 221, 269, 433, 410, 444, 417, 272, 0, 0,
	445, 351, 501, 427, 512, 537, 538, 248, 384, 524,
	485, 532, 551, 214, 245, 398, 478, 518, 468, 376,
	497, 498, 311, 467, 280, 192, 349, 543, 212, 454,
	230, 219, 503, 521, 274, 431, 201, 480, 510, 227,
	458, 0, 0, 553, 203, 508, 477, 372, 308, 309,
	202, 0, 432, 253, 278, 243, 393, 505, 506, 241,
	554, 216, 531, 208, 0, 530, 386, 500, 509, 373,
	362, 207, 507, 371, 361, 316, 335, 336, 265, 291,
	424, 354, 425, 292, 382, 381, 383, 196, 519, 0,
	197, 0, 473, 520, 555, 222, 223, 225, 0, 264,
	268, 276, 279, 287, 288, 297, 347, 397, 423, 419,
	428, 0, 495, 513, 525, 535, 541, 542, 544, 545,
	546, 547, 548, 550, 549, 385, 295, 469, 315, 352,
	0, 0, 403, 447, 228, 517, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 574, 363, 460, 514, 317,
	329, 332, 322, 341, 0, 342, 318, 319, 324, 326,
	327, 328, 333, 334, 338, 344, 236, 199, 369, 377,
	494, 296, 204, 205, 206, 487, 488, 489, 490, 528,
	529, 533, 437, 438, 439, 440, 277, 523, 293, 443,
	442, 313, 314, 358, 426, 0, 188, 209, 348, 0,
	429, 273, 552, 527, 522, 195, 211, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 191, 198, 210, 220, 224, 231, 246, 261, 263,
	270, 283, 290, 294, 300, 301, 304, 310, 359, 365,
	366, 367, 368, 387, 388, 389, 392, 395, 396, 399,
	401, 402, 405, 409, 413, 414, 415, 416, 418, 420,
	430, 435, 449, 450, 451, 452, 453, 456, 457, 462,
	463, 464, 465, 466, 474, 475, 479, 502, 504, 516,
	534, 539, 455, 285, 286, 421, 422, 284, 511, 540,
	0, 357, 0, 0, 360, 266, 289, 302, 0, 526,
	476, 215, 441, 275, 238, 0, 0, 200, 234, 218,
	244, 259, 262, 306, 370, 378, 407, 412, 281, 256,
	232, 434, 229, 459, 482, 483, 484, 486, 374, 251,
	411, 0, 375, 355, 492, 493, 298, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 346, 252, 0, 0, 408, 0, 194,
	0, 461, 239, 356, 353, 499, 267, 258, 254, 237,
	299, 364, 406, 481, 400, 0, 350, 0, 0, 471,
	379, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 305, 235, 307, 193,
	391, 472, 271, 0, 0, 0, 0, 789, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 233, 331, 340, 339, 320, 321, 323, 325,
	330, 337, 343, 0, 0, 0, 0, 0, 250, 303,
	257, 249, 496, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 380, 242,
	0, 0, 0, 0, 536, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 312, 189, 213, 0, 0, 390,
	436, 448, 0, 0, 0, 240, 0, 446, 404, 515,
	221, 269, 433, 410, 444, 417, 272, 0, 0, 445,
	351, 501, 427, 512, 537, 538, 248, 384, 524, 485,
	532, 551, 214, 245, 398, 478, 518, 468, 376, 497,
	498, 311, 467, 280, 192, 349, 543, 212, 454, 230,
	219, 503, 521, 274, 431, 201, 480, 510, 227, 458,
	0, 0, 553, 203, 508, 477, 372, 308, 309, 202,
	0, 432, 253, 278, 243, 393, 505, 506, 241, 554,
	216, 531, 208, 0, 530, 386, 500, 509, 373, 362,
	207, 507, 371, 361, 316, 335, 336, 265, 291, 424,
	354, 425, 292, 382, 381, 383, 196, 519, 0, 197,
	0, 473, 520, 555, 222, 223, 225, 0, 264, 268,
	276, 279, 287, 288, 297, 347, 397, 423, 419, 428,
	0, 495, 513, 525, 535, 541, 542, 544, 545, 546,
	547, 548, 550, 549, 385, 295, 469, 315, 352, 0,
	0, 403, 447, 228, 517, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 574, 363, 460, 514, 317, 329,
	332, 322, 341, 0, 342, 318, 319, 324, 326, 327,
	328, 333, 334, 338, 344, 236, 199, 369, 377, 494,
	296, 204, 205, 206, 487, 488, 489, 490, 528, 529,
	533, 437, 438, 439, 440, 277, 523, 293, 443, 442,
	313, 314, 358, 426, 0, 188, 209, 348, 0, 429,
	273, 552, 527, 522, 195, 211, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	191, 198, 210, 220, 224, 231, 246, 261, 263, 270,
	283, 290, 294, 300, 301, 304, 310, 359, 365, 366,
	367, 368, 387, 388, 389, 392, 395, 396, 399, 401,
	402, 405, 409, 413, 414, 415, 416, 418, 420, 430,
	435, 449, 450, 451, 452, 453, 456, 457, 462, 463,
	464, 465, 466, 474, 475, 479, 502, 504, 516, 534,
	539, 455, 285, 286, 421, 422, 284, 511, 540, 0,
	357, 0, 0, 360, 266, 289, 302, 0, 526, 476,
	215, 441, 275, 238, 0, 0, 200, 234, 218, 244,
	259, 262, 306, 370, 378, 407, 412, 281, 256, 232,
	434, 229, 459, 482, 483, 484, 486, 374, 251, 411,
	0, 375, 355, 492, 493, 298, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 346, 252, 0, 0, 408, 0, 194, 0,
	461, 239, 356, 353, 499, 267, 258, 254, 237, 299,
	364, 406, 481, 400, 0, 350, 0, 0, 471, 379,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 305, 235, 307, 193, 391,
	472, 271, 0, 0, 0, 0, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 233, 331, 340, 339, 320, 321, 323, 325, 330,
	337, 343, 0, 0, 0, 0, 0, 250, 303, 257,
	249, 496, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 380, 242, 0,
	0, 0, 0, 536, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 312, 189, 213, 0, 0, 390, 436,
	448, 0, 0, 0, 240, 0, 446, 404, 515, 221,
	269, 433, 410, 444, 417, 272, 0, 0, 445, 351,
	501, 427, 512, 537, 538, 248, 384, 524, 485, 532,
	551, 214, 245, 398, 478, 518, 468, 376, 497, 498,
	311, 467, 280, 192, 349, 543, 212, 454, 230, 219,
	503, 521, 274, 431, 201, 480, 510, 227, 458, 0,
	0, 553, 203, 508, 477, 372, 308, 309, 202, 0,
	432, 253, 278, 243, 393, 505, 506, 241, 554, 216,
	531, 208, 0, 530, 386, 500, 509, 373, 362, 207,
	507, 371, 361, 316, 335, 336, 265, 291, 424, 354,
	425, 292, 382, 381, 383, 196, 519, 0, 197, 0,
	473, 520, 555, 222, 223, 225, 0, 264, 268, 276,
	279, 287, 288, 297, 347, 397, 423, 419, 428, 0,
	495, 513, 525, 535, 541, 542, 544, 545, 546, 547,
	548, 550, 549, 385, 295, 469, 315, 352, 0, 0,
	403, 447, 228, 517, 470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 574, 363, 460, 514, 317, 329, 332,
	322, 341, 0, 342, 318, 319, 324, 326, 327, 328,
	333, 334, 338, 344, 236, 199, 369, 377, 494, 296,
	204, 205, 206, 487, 488, 489, 490, 528, 529, 533,
	437, 438, 439, 440, 277, 523, 293, 443, 442, 313,
	314, 358, 426, 0, 188, 209, 348, 0, 429, 273,
	552, 527, 522, 195, 211, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 190, 191,
	198, 210, 220, 224, 231, 246, 261, 263, 270, 283,
	290, 294, 300, 301, 304, 310, 359, 365, 366, 367,
	368, 387, 388, 389, 392, 395, 396, 399, 401, 402,
	405, 409, 413, 414, 415, 416, 418, 420, 430, 435,
	449, 450, 451, 452, 453, 456, 457, 462, 463, 464,
	465, 466, 474, 475, 479, 502, 504, 516, 534, 539,
	455, 285, 286, 421, 422, 284, 511, 540, 0, 357,
	0, 0, 360, 266, 289, 302, 0, 526, 476, 215,
	441, 275, 238, 0, 0, 200, 234, 218, 244, 259,
	262, 306, 370, 378, 407, 412, 281, 256, 232, 434,
	229, 459, 482, 483, 484, 486, 374, 251, 411, 0,
	0, 355, 492, 493, 298,
}

var yyPact = [...]int{
	4640, -1000, -440, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2150, 2206, -1000, -1000,
	-1000, -1000, 2296, -1000, 836, 1853, -1000, 2134, 4836, -1000,
	46087, 588, -1000, 43531, 587, 135, 28834, -1000, 202, -1000,
	187, 44809, 222, 42892, -1000, -1000, -327, 18600, 2076, 70,
	63, 46087, -1000, -1000, -1000, -1000, 2264, 1777, -1000, 402,
	-1000, -1000, -1000, -1000, -1000, -1000, 42253, -1000, -1000, -1000,
	2149, 2131, 2307, 722, 2083, -1000, 2201, 1777, -1000, 18600,
	2248, 2185, 17961, -1000, 17961, 516, -1000, -1000, 281, -1000,
	-1000, 24361, 46087, 31390, 316, -1000, 2134, -1000, -1000, -1000,
	110, -1000, 369, 1697, -1000, 1691, -1000, 716, 697, 421,
	538, 486, 419, 418, 415, 406, 404, 403, 401, 398,
	427, -1000, 770, 770, -129, -137, 2044, 526, 501, 501,
	719, 556, 2102, 2099, -1000, -1000, 770, 770, 770, 363,
	770, 770, 770, 770, 348, 337, 770, 770, 770, 770,
	770, 770, 770, 770, 770, 770, 770, 770, 770, 770,
	770, 770, 770, 397, 2134, 288, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 46087, 254, 46087, -1000, 649,
	46087, 888, 888, 113, 888, 888, 888, 888, 199, 680,
	59, -1000, 198, 293, 191, 302, 882, 650, -1000, -1000,
	297, 882, 1361, -1000, 734, 173, -1000, 888, 888, -1000,
	12185, 167, 12185, 12185, -1000, 2124, -1000, -1000, -1000, -1000,
	-1000, 1371, -1000, -1000, -1000, -1000, -1000, 555, -1000, -1000,
	-1000, -1000, 44809, 41614, 455, 787, -1000, -1000, -1000, 177,
	-1000, -1000, 1528, 1353, 18600, 1113, -1000, 1650, 706, -1000,
	-1000, -1000, -1000, -1000, 614, -1000, 19239, 19239, 19239, 19239,
	-1000, -1000, 1486, 40975, 1486, 1486, 19239, 1486, -1000, 19239,
	1486, 1486, 1486, 18600, 1486, 1486, 1486, 1486, -1000, 1486,
	1486, 1486, 1486, 1486, 1486, 1486, 1486, 1486, 1486, 1486,
	1486, 1486, 1486, 1486, 1486, 1486, 1486, 1486, 1486, 1486,
	1486, 1486, 1486, 1486, 1486, 1486, 1486, 1486, 1486, 1486,
	1486, 1486, 1486, 1486, 1486, 1486, 1486, 1486, 1486, 1486,
	1486, 1486, 1486, 1486, 1486, 1486, 1486, 1486, 1486, 1486,
	1486, 1486, 1486, 1486, 1486, 1486, 1486, 1486, 1486, 1486,
	1486, 1486, 1486, 1486, 1486, 1486, 1486, -1000, -1000, -1000,
	1486, 643, 1486, 1486, 1486, 1486, 1486, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1486, 1486, 1486, 1486, 1486,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1486,
	1486, 1486, 1486, 1486, 1486, 1486, 1486, 1486, 1486, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 21800, -1000, 16044,
	1486, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 46087, -1000, 1486, 246, 44809, 44809, 405, 2201, 1777,
	-1000, 2264, 2246, 402, -1000, 2274, 1848, 1485, 1393, 1777,
	1677, 46087, -1000, 1739, -1000, -1000, -1000, 1982, 1214, 1357,
	-1000, -1000, -1000, -1000, 1953, 18600, -1000, -1000, 2293, -1000,
	21161, 641, 973, 2291, 40336, -1000, 516, 516, 1686, 417,
	42, -1000, -1000, -1000, -1000, 785, 28195, -1000, -1000, -1000,
	-1000, 1648, 46087, -1000, -1000, 3291, 1401, -1000, 1852, -1000,
	1642, -1000, 1756, 18600, 1838, 583, 1401, 578, 576, 575,
	-1000, -27, -1000, -1000, -1000, -1000, -1000, -1000, 770, 770,
	770, -1000, 422, 2244, 4836, 6167, -1000, -1000, -1000, 39697,
	1796, 1401, -1000, 1792, -1000, 879, 608, 681, 681, 1401,
	-1000, -1000, 45448, 1401, 877, 857, 1401, 1401, 44809, 44809,
	-1000, 39058, -1000, 38419, 37780, 1131, 44809, 37141, 36502, 35863,
	35224, 34585, -1000, 2091, -1000, 1964, -1000, -1000, -1000, 45448,
	1401, 1401, 45448, 44809, 45448, 46087, 1401, -1000, -1000, 351,
	-1000, -1000, 1130, 1124, 1120, 770, 770, 1111, 1356, 1334,
	1333, 770, 770, 1099, 1332, 30112, 1331, 292, 1091, 1078,
	1076, 1213, 1330, 196, 1328, 1211, 1156, 1075, 44809, 1790,
	46087, -1000, 287, 806, 410, 782, 2134, 2068, 1683, 531,
	582, 1401, 492, 492, 44809, -1000, 14117, -1000, -1000, 1325,
	18600, -1000, 887, 882, 882, -1000, -1000, -1000, -1000, -1000,
	-1000, 888, 46087, 887, -1000, -1000, -1000, 882, 888, 46087,
	888, 888, 888, 888, 882, 882, 882, 888, 46087, 46087,
	46087, 46087, 46087, 46087, 46087, 46087, 46087, 12185, 734, 888,
	-331, -1000, 1323, -1000, 1962, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 12185, 12185, -1000, -1000, -1000, -1000, 206, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -61, 1682, 33946,
	-1000, -332, -335, -336, -337, -1000, -1000, -1000, -347, -352,
	-1000, -1000, -1000, 18600, 18600, 18600, 18600, -208, -1000, 1082,
	19239, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 159, 971,
	19239, 19239, 19239, 19239, 19239, 19239, 19239, 19239, 19239, 19239,
	19239, 19239, 19239, 19239, 19239, -1000, -1000, 26278, 4425, 4425,
	706, 706, 706, 706, -1000, -91, 1681, 45448, -1000, -1000,
	-1000, 633, 18600, 18600, 706, -1000, 1401, 16044, 33307, 17961,
	17961, 18600, 805, 1353, 45448, 18600, -1000, 1393, -1000, -1000,
	-1000, 1278, -1000, 910, 2121, 2121, 2121, 2121, 18600, 18600,
	18600, 18600, 18600, 18600, 18600, 18600, 18600, 18600, 2121, 44809,
	44809, 224, 18600, 18600, 18600, 18600, 18600, 18600, 14761, 18600,
	18600, 19239, 18600, 18600, 18600, 1393, 18600, 18600, 18600, 18600,
	18600, 18600, 18600, 18600, 18600, 18600, 18600, 18600, 18600, 18600,
	18600, 18600, 18600, 18600, 18600, 18600, 18600, 18600, 18600, 18600,
	18600, 18600, 18600, 1393, 18600, 1303, 18600, 18600, 17961, 13473,
	17961, 17961, 17961, 17961, 17961, -1000, -1000, -1000, -1000, -1000,
	18600, 18600, 18600, 18600, 18600, 18600, 18600, 18600, 1393, 18600,
	-1000, -1000, -1000, -1000, -1000, -1000, 1476, 1493, 1379, 18600,
	-1000, 1679, -1000, -136, 23722, 18600, 1312, 2282, 1871, 44809,
	-1000, -1000, -1000, 2201, -1000, 2201, 1476, 2262, 1995, 17961,
	-1000, -1000, 2262, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1630, -1000, 46087, 1677, 2179, 44809, 1974, 1310, 361,
	-1000, 18600, 18600, 1676, -1000, 1246, 46087, -1000, -208, -1000,
	32668, -1000, -1000, 11541, -1000, 46087, 367, 46087, -1000, 23083,
	32029, 303, 42, -1000, 1657, -1000, 31, 34, 15400, 705,
	-1000, -1000, -1000, 2044, 19878, 1475, 705, 111, -1000, -1000,
	-1000, 1756, -1000, 1756, 1756, 1756, 1756, 361, 361, 361,
	361, -1000, -1000, -1000, -1000, -1000, 1787, 1783, -1000, 1756,
	1756, 1756, 1756, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1779, 1779, 1779, 1758, 1758, 490, -1000, 18600, 349, 31390,
	2154, 1072, 1204, 287, 504, 1869, 1401, 1401, 1401, 504,
	-1000, 1324, 1315, 1306, -1000, -428, 1675, -1000, -1000, 2241,
	-1000, -1000, 777, 934, 919, 902, 44809, 252, 322, -1000,
	484, -1000, 31390, 1401, 853, 681, 1401, -1000, 1401, -1000,
	-1000, -1000, -1000, -1000, 1401, -1000, -1000, 1674, -1000, 1562,
	982, 900, 969, 899, 1674, -1000, -1000, -99, 1674, -1000,
	1674, -1000, 1674, -1000, 1674, -1000, 1674, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 791, 171, -240, 44809,
	252, 525, -1000, 522, 26278, -1000, -1000, -1000, 26278, 26278,
	-1000, -1000, -1000, -1000, 1304, 1301, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -415, 46087, -1000, 263, 780,
	352, 393, 335, 46087, 319, 2199, 2194, 2191, 294, 331,
	46087, 46087, 492, 1920, 46087, 2164, 46087, -1000, -1000, -1000,
	-1000, -1000, 1353, 46087, -1000, -1000, 888, 888, -1000, -1000,
	46087, 888, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	888, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 46087, -1000, -1000, -1000,
	-1000, 44809, -1000, -1000, -1000, -1000, -1000, 140, 27, 377,
	-1000, -1000, -1000, -1000, -1000, 2205, -1000, 1353, 923, 829,
	-1000, 1486, -1000, -1000, 1062, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 159, 19239, 19239, 19239, 1121, 545, 1308, 1186,
	1168, 885, 885, 839, 839, 700, 700, 700, 700, 700,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1296, -1000,
	1486, 45448, 1629, 13473, 1833, 1418, 1393, 2851, -1000, 1622,
	-1000, 1622, 1392, 818, -1000, 18600, 1393, 2846, -1000, -1000,
	1393, 1393, 1393, 18600, -1000, -1000, 18600, 18600, 18600, 18600,
	1204, 1204, 1204, 1204, 1204, 1204, 1204, 1204, 1204, 1204,
	18600, 1673, 1672, 2281, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1252, 1204, 1204, 1204, 1204,
	1204, 18600, 1181, -1000, -1000, -1000, 1411, 2824, 1070, 2820,
	1204, 1204, -1000, 1204, 2807, 2751, 1393, 1528, 1393, 1663,
	-1000, 2723, 1204, 2669, 2569, 2565, 1947, 2561, 2519, 2481,
	1204, 1204, 1204, 1903, 2469, 2465, 2460, 2455, 2402, 2397,
	2340, 2297, 2283, 1204, -211, 1204, 1393, -1000, -1000, -1000,
	-1000, -1000, 2261, 1890, 1393, 1660, 1486, 629, -1000, -1000,
	1622, 1393, 1393, 1622, 1622, 2235, 2207, 2197, 2153, 2080,
	2067, 1204, 1204, -1000, 1204, 1393, -1000, 1379, 46087, -1000,
	-324, -1000, 10, 691, 1486, -1000, 30112, 1393, -1000, 3888,
	-1000, 1367, -1000, -1000, -1000, -1000, -1000, 27556, 1671, 2262,
	-1000, -1000, 1486, 1596, -1000, -1000, 361, 87, 26917, 694,
	694, 133, 1353, 1353, 18600, -1000, -1000, -1000, -1000, -1000,
	-1000, 628, 2265, 358, 1486, -1000, 1538, 2932, -1000, -1000,
	-1000, 2177, 20522, -1000, 1486, 1486, 46087, 1678, 1621, -1000,
	626, -1000, 1428, 1657, 42, 58, -1000, -1000, -1000, -1000,
	1353, -1000, 1283, 372, 677, -1000, 491, -1000, -1000, -1000,
	-1000, 2089, 104, -1000, -1000, -1000, 282, 361, -1000, -1000,
	-1000, -1000, -1000, -1000, 1294, 1294, -1000, -1000, -1000, -1000,
	-1000, 1071, -1000, -1000, -1000, 1058, -1000, -1000, 1977, 1912,
	349, -1000, -1000, 770, 1293, -1000, -1000, 2093, 770, 770,
	44809, -1000, -1000, 1470, 2154, 263, 46087, 812, 1910, -1000,
	1869, 1869, 1869, 46087, -1000, -1000, -1000, -1000, -1000, -1000,
	-416, 76, 371, -1000, -1000, -1000, 5543, 44809, 1592, -1000,
	256, -1000, 1467, -1000, 44809, -1000, 1590, 1778, 1401, 1401,
	-1000, -1000, -1000, 44809, 1486, -1000, -1000, -1000, -1000, 580,
	2130, 249, -1000, -1000, -236, -1000, -1000, 252, 256, 45448,
	1401, 705, -1000, -1000, -1000, -1000, -1000, -418, 1586, 563,
	269, 345, 46087, 46087, 46087, 46087, 46087, 609, -1000, -1000,
	-1000, -1000, 237, -1000, -1000, 237, -1000, -1000, -1000, -1000,
	306, 520, -1000, 46087, 46087, 646, -1000, -1000, -1000, 882,
	-1000, -1000, 882, -1000, -1000, -1000, -1000, -1000, 2114, 46087,
	23, -365, -1000, -361, 18600, -1000, -1000, -1000, -1000, 995,
	544, 1308, 19239, 19239, 19239, -1000, -1000, -1000, 1037, 1037,
	26278, -1000, 18600, 17961, -1000, -1000, 18600, 18600, 797, -1000,
	18600, 1110, -1000, 18600, -1000, -1000, -1000, 1379, 1204, 1204,
	1204, 1204, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1594, 18600, 18600, 18600, 1393, 334, -1000, -1000,
	-1000, -1000, -1000, 2279, -1000, 18600, -1000, 26278, 18600, 18600,
	18600, -1000, -1000, -1000, 18600, 18600, -1000, -1000, 18600, 18600,
	-1000, 18600, 18600, 18600, -1000, 18600, 18600, 18600, 18600, -1000,
	-1000, -1000, -1000, 18600, 18600, 18600, 18600, 18600, 18600, 18600,
	18600, 18600, 18600, -1000, -1000, 31390, 50, -211, 1303, 50,
	1303, -1000, 17961, 12829, -1000, -1000, -1000, -1000, -1000, 18600,
	18600, 18600, 18600, 18600, 18600, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 691, -1000, 681, 681, 681, 44809, -1000,
	-1000, -1000, -1000, 1639, -1000, 2198, -1000, 2005, 2003, 2267,
	2265, -1000, 23083, 2262, -1000, -1000, 44809, -319, -1000, 2060,
	2070, 694, 694, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	10897, 2201, 18600, 1909, 45448, 161, -1000, 22444, 44809, 45448,
	23083, 23083, 23083, 23083, 23083, -1000, 1957, 1955, -1000, 1992,
	1978, 1942, 46087, -1000, 1584, 1393, 2246, 20522, 402, 18600,
	25000, 1533, 23083, -1000, -1000, 23083, 46087, 10253, -1000, -1000,
	16, 17, -1000, -1000, -1000, -1000, 2044, -1000, -1000, 636,
	2175, 2086, -1000, -1000, -1000, -1000, -1000, 1569, -1000, 1565,
	1637, 1551, 171, -1000, 1716, 2110, 770, 770, -1000, 1055,
	-1000, 1401, 1287, 1286, -1000, -1000, -1000, 560, -1000, 2161,
	46087, 1908, 1899, 1897, -1000, -426, 1050, 1774, 1656, 18600,
	1773, 2240, 1617, 44809, -1000, -1000, 45448, -1000, 169, -1000,
	349, 44809, -1000, -1000, -1000, 322, 46087, -1000, 3475, -1000,
	-1000, -1000, 256, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	46087, 268, -1000, 1766, 1369, -1000, -1000, 1863, -1000, -1000,
	-1000, -1000, 201, 336, 231, 1251, 231, -1000, 46087, 607,
	1912, 46087, -1000, -1000, -1000, 888, 888, -1000, -1000, 2108,
	-1000, 1401, 1204, 19239, 19239, -1000, 706, 436, -178, 1756,
	1756, -1000, 1756, 1758, -1000, 1756, 179, 1756, 178, 1756,
	-1000, -1000, 1393, 1393, 1379, -1000, 1880, 1010, -1000, 1353,
	18600, 2053, -1000, -1000, -1000, -1000, -1000, -35, 2000, 1985,
	1204, -1000, 1755, 1754, 18600, 1204, 1393, 1876, 1204, 1204,
	1204, 1204, -1000, 1353, 1379, 1966, 1379, 1204, 1204, 1958,
	346, 1204, 1531, 1531, 1531, 1531, 1531, 1379, 1379, 1379,
	1379, 44809, -1000, -211, -1000, -1000, -258, -259, -1000, 1393,
	-211, 1633, 1393, -1000, 1867, 1736, 1943, 1715, 1204, 1938,
	-1000, 2203, 2203, 2203, 1518, 1367, 46087, -1000, -1000, -1000,
	-1000, 2265, 2257, 1625, -1000, -1000, 87, 480, -1000, 2048,
	2070, -1000, 2239, 2050, 2236, -1000, -1000, -1000, -1000, -1000,
	1353, -1000, 2132, 1669, -1000, 775, 1581, -1000, -1000, 17322,
	1521, 1999, 625, 1518, 1651, 2932, 1889, 1877, 2952, -1000,
	-1000, -1000, -1000, 1954, -1000, 1941, -1000, -1000, 1739, -1000,
	-1000, 1493, 1393, 1930, 367, 23083, 1646, 1646, -1000, 624,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 960, 8218, 2305,
	-1000, 1248, -1000, 1183, 208, 1043, -1000, -1000, 770, 770,
	-1000, 849, 842, -1000, 46087, 1753, -1000, 361, 1233, 361,
	1041, -1000, 1040, -1000, -1000, -1000, -1000, 1918, 2030, -1000,
	-1000, -1000, -1000, 46087, -1000, -1000, 46087, 46087, 46087, 1752,
	2230, -1000, 18600, 1745, 771, 1844, 44809, 44809, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 506,
	770, -383, 330, 313, 770, 770, 770, -427, -1000, -1000,
	1508, 1495, -1000, -127, -1000, 18600, -1000, -1000, -1000, 1117,
	1117, -1000, 1739, -1000, -1000, -1000, 1458, -1000, -1000, -103,
	44809, 44809, 44809, 44809, -1000, 1036, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 706, 1393,
	332, -105, 1393, -1000, -1000, 361, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 18600, -1000, 18600, -1000,
	1353, 18600, 2201, 1223, 18600, 18600, -1000, 1031, 1030, 1204,
	-1000, -1000, -1000, 18600, -1000, -1000, -1000, -1000, -1000, 18600,
	-1000, -1000, -1000, 18600, 286, 1037, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1393, 366, -1000, -1000,
	-1000, -1000, 2263, -1000, 1393, 18600, -1000, -1000, 18600, -1000,
	18600, 18600, -1000, 18600, -1000, 18600, 1486, 2034, 1486, 1486,
	25000, -1000, -1000, 2257, 2237, 2229, 2040, 2046, 2046, 2048,
	-1000, 2224, 2217, -1000, 1222, 2215, 1217, 837, -1000, 45448,
	18600, 161, -1000, 375, 44809, 161, 44809, -1000, 2251, -1000,
	-1000, 18600, 1744, -1000, 18600, -1000, -1000, -1000, -1000, -1000,
	-1000, 4425, 2265, 1646, -1000, -1000, 715, -1000, 18600, -1000,
	-1000, -1000, 7423, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1216, 1200, -1000, -1000, 1741, 18600, -1000, -1000, -1000,
	1450, 1445, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1739, -1000, -1000, -1000, -1000, 322, -425, 1747, 44809, 1026,
	-1000, 1490, 1617, 359, 161, 1185, 770, 770, 770, 1001,
	996, 30112, 1488, -1000, 44809, 445, -1000, 322, -1000, -140,
	-144, 1204, -1000, -1000, 2172, -1000, -1000, 12829, -1000, -1000,
	1735, 1866, -1000, -1000, -1000, -1000, 1970, -96, -118, -1000,
	-1000, 1204, 1204, 1822, 1393, -1000, 1204, 1204, 1441, 1433,
	-1000, 1204, 1379, 1711, -1000, 286, 1393, 1874, -1000, -1000,
	4425, -1000, -1000, 2251, 2214, 50, -1000, -1000, 251, 50,
	1353, 1707, 1204, 1644, 1567, 1204, 25639, -1000, 2210, 2209,
	30751, 30751, 691, 2237, -225, 18600, 18600, 2013, 989, -1000,
	-1000, -1000, -1000, 1161, 1154, -1000, 1148, -1000, 2303, -1000,
	1353, -1000, 161, -1000, 606, 1581, -1000, 2201, 1353, 44809,
	1353, 100, 2251, -1000, 1204, -1000, 1486, 1486, 1486, 1486,
	1486, 1486, 1486, 1486, 1486, 1486, 1486, 1486, 1486, 1486,
	1486, 1486, 1486, 1486, 1486, 1486, 1486, 1486, 1486, 1486,
	1486, 1486, 1486, 1486, 1486, 1486, 1486, 1486, 1486, 1486,
	1486, 1486, 1486, 1486, 1486, 1486, 1486, 1486, 1486, 1486,
	1486, 1486, 1486, 1486, 1486, 1486, 1486, 1486, 1486, 1486,
	1486, 1486, 1486, 1486, 1486, 1486, 1486, 1486, 1486, 1486,
	1486, 1486, -1000, -1000, 44809, 1276, -1000, -1000, 2171, 1473,
	75, -1000, 1456, -1000, -1000, 158, -1000, 18600, -1000, 30112,
	1123, 1012, -1000, -1000, -1000, -1000, -427, -1000, -1000, -1000,
	-1000, -1000, -1000, 402, 1608, -1000, 760, 44809, 46087, -1000,
	1894, -1000, -1000, -1000, 18600, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 18600, -1000, 1393, 1868, -1000, -248, -1000,
	-397, 18600, -211, -1000, -1000, -211, -1000, 18600, -1000, -1000,
	18600, -1000, 18600, -1000, 1448, -1000, -1000, -1000, -1000, -1000,
	1448, 1448, -1000, -225, -1000, 1603, -1000, 44809, 1353, 1528,
	-1000, 958, -1000, -1000, -1000, -1000, -1000, 45448, 1581, 44809,
	-1000, 1436, 1393, 1486, 2201, -1000, 1432, -1000, 402, -1000,
	1719, 1656, -1000, -1000, -1000, 16683, -1000, -1000, -1000, -1000,
	-1000, 194, -102, 12829, 9609, 1398, -1000, -100, 1204, 1379,
	-1000, -354, -1000, -1000, -1000, -1000, 283, -1000, -1000, 1528,
	-1000, -1000, 1563, 1555, 1478, 29473, -1000, -1000, -1000, -1000,
	-225, -1000, -1000, 2168, -1000, -1000, 1500, -1000, -1000, 25000,
	44170, -1000, -89, 314, -102, 18600, 1705, 1393, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -8, -1000, -1000, -1000,
	-1000, -1000, 1863, -106, -1000, -1000, -1000, 165, -368, -179,
	-187, -1000, -1000, 19239, -1000, 18600, -1000, 18600, -1000, 18600,
	-1000, -1000, -1000, 44809, 1486, -1000, 1377, -1000, 1572, -270,
	1854, -1000, -88, -1000, -1000, -1000, 956, 997, -1000, -1000,
	-1000, -1000, -1000, -1000, 1271, 44809, -1000, 471, -1000, -1000,
	-103, -125, 814, -1000, -1000, -1000, -1000, -1000, 1454, 1364,
	1204, -1000, 44809, -1000, 44170, -264, 705, 4425, -1000, 1757,
	1746, 2290, -1000, -1000, -1000, -1000, -1000, -1000, -435, 1375,
	285, -1000, -1000, 165, -1000, 18600, -1000, 18600, -1000, 1393,
	-1000, -1000, 2160, 100, -1000, 2302, -1000, 2298, 692, 692,
	-1000, 983, -435, -1000, -1000, 1204, 1204, -1000, -274, -1000,
	-1000, -1000, -1000, -1000, 456, 1073, -1000, -1000, -1000, -1000,
	-1000, 4425, -1000, -1000, -1000, 233, 233, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2865, 2863, 31, 6, 46, 45, 2860, 40, 109,
	203, 35, 204, 106, 2858, 2857, 2856, 2849, 2848, 2846,
	2845, 236, 234, 230, 2842, 2841, 2840, 2836, 2835, 2833,
	2830, 2829, 2826, 2825, 228, 179, 199, 2822, 2816, 2815,
	143, 194, 99, 101, 196, 2814, 2813, 91, 2812, 2809,
	2806, 190, 187, 184, 854, 2804, 183, 132, 63, 2802,
	2800, 2799, 2798, 2797, 2780, 2766, 2765, 2764, 2763, 2759,
	2758, 2754, 2752, 2751, 2750, 2749, 312, 2744, 2743, 21,
	2742, 95, 2741, 2735, 2733, 2732, 11, 2731, 2730, 16,
	43, 2729, 2728, 60, 2724, 2722, 2721, 2720, 2719, 20,
	2718, 26, 2712, 38, 2709, 2706, 144, 2702, 2698, 2696,
	39, 2695, 2694, 2688, 2687, 2685, 2684, 2683, 157, 2682,
	2677, 2676, 193, 205, 2675, 2674, 212, 117, 130, 2661,
	2660, 111, 197, 2659, 136, 2653, 2651, 2650, 169, 2649,
	2471, 2643, 2641, 80, 77, 2639, 127, 2638, 2636, 10,
	23, 78, 15, 4, 7, 2632, 2631, 79, 90, 2630,
	125, 2629, 110, 75, 2628, 105, 115, 2625, 2622, 13,
	9, 2621, 1, 5, 3, 76, 2618, 2616, 129, 2614,
	2611, 2600, 102, 2597, 2595, 516, 2592, 104, 151, 123,
	93, 2589, 52, 81, 2588, 2587, 2586, 2583, 2582, 67,
	2581, 2580, 2575, 156, 66, 178, 2572, 48, 59, 69,
	149, 2570, 47, 92, 185, 2564, 2563, 155, 153, 2562,
	2561, 73, 49, 55, 2560, 122, 148, 147, 68, 121,
	150, 2559, 2557, 71, 86, 2555, 2554, 2551, 2550, 180,
	2549, 2548, 84, 2544, 65, 2539, 200, 2537, 27, 61,
	50, 175, 2534, 88, 2532, 2531, 85, 137, 82, 36,
	2527, 201, 2520, 70, 177, 140, 173, 2516, 2515, 2514,
	2506, 202, 290, 2505, 2502, 119, 182, 158, 167, 100,
	2500, 289, 2498, 2495, 107, 0, 4944, 2493, 33, 174,
	2492, 2490, 6354, 154, 44, 30, 2483, 128, 2472, 2468,
	2466, 2465, 206, 191, 131, 176, 74, 2463, 2462, 2460,
	19, 2458, 2457, 2456, 2447, 2443, 2439, 94, 42, 37,
	34, 232, 83, 18, 108, 170, 89, 2434, 2431, 2430,
	139, 116, 2429, 172, 171, 142, 165, 2425, 181, 161,
	135, 2424, 162, 32, 2423, 2420, 2412, 2410, 103, 2407,
	2404, 2387, 2386, 168, 166, 141, 97, 2383, 98, 133,
	164, 163, 58, 2382, 53, 2375, 2372, 28, 195, 29,
	2366, 17, 126, 146, 2365, 4197, 192, 2356, 22, 287,
	198, 2355, 2354, 8, 12, 14, 2353, 2351, 2350, 2347,
	152, 2342, 2340, 2332, 2330, 25, 56, 24, 2, 124,
	96, 2321, 2320, 3728, 920, 145, 2276, 207,
}

//line sql.y:7754
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 401, 402, 402, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 253, 375,
	376, 376, 251, 251, 32, 71, 34, 34, 33, 33,
	36, 36, 35, 8, 8, 8, 9, 9, 9, 9,
	9, 9, 9, 9, 10, 10, 10, 10, 10, 11,
	11, 11, 11, 13, 13, 13, 13, 13, 19, 20,
	12, 12, 21, 21, 104, 104, 22, 23, 23, 23,
	23, 405, 405, 180, 180, 178, 178, 179, 179, 256,
	256, 24, 25, 25, 266, 266, 265, 265, 265, 267,
	267, 267, 267, 305, 305, 305, 26, 26, 26, 26,
	26, 124, 124, 378, 378, 377, 371, 371, 370, 370,
	369, 374, 374, 373, 373, 372, 38, 39, 48, 48,
	48, 48, 49, 50, 379, 379, 344, 55, 55, 54,
	54, 54, 54, 54, 54, 56, 56, 52, 52, 51,
	51, 53, 53, 346, 346, 332, 332, 345, 345, 345,
	345, 345, 345, 345, 331, 331, 135, 135, 231, 231,
	231, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 231, 231, 394, 394, 394, 393, 393,
	232, 232, 232, 232, 232, 232, 232, 232, 145, 145,
	157, 157, 157, 157, 157, 143, 143, 144, 142, 142,
	142, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 398, 398, 398, 398, 398, 398, 398,
	398, 398, 398, 398, 398, 398, 398, 398, 398, 398,
	398, 398, 398, 398, 398, 398, 398, 398, 398, 398,
	398, 398, 398, 398, 398, 398, 398, 398, 398, 398,
	398, 398, 398, 398, 398, 156, 156, 152, 152, 152,
	153, 153, 153, 154, 154, 395, 395, 395, 395, 310,
	310, 310, 310, 313, 313, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 312, 312, 312, 312, 312, 314,
	314, 314, 314, 314, 315, 315, 315, 315, 315, 315,
	315, 315, 315, 315, 315, 315, 315, 315, 315, 315,
	316, 316, 316, 316, 316, 316, 316, 316, 330, 330,
	317, 317, 325, 325, 326, 326, 326, 327, 327, 327,
	328, 328, 322, 322, 322, 322, 322, 322, 322, 322,
	322, 324, 324, 323, 323, 323, 333, 358, 358, 357,
	357, 355, 355, 355, 355, 355, 355, 355, 355, 342,
	342, 352, 352, 352, 352, 352, 341, 341, 337, 337,
	337, 338, 338, 339, 339, 336, 336, 340, 340, 354,
	354, 353, 353, 334, 334, 335, 335, 360, 396, 396,
	396, 396, 396, 397, 397, 361, 386, 388, 388, 388,
	387, 387, 384, 385, 383, 383, 383, 383, 383, 81,
	81, 81, 279, 279, 280, 280, 350, 350, 349, 349,
	349, 351, 351, 348, 348, 348, 348, 348, 348, 348,
	348, 348, 348, 348, 348, 348, 348, 348, 348, 348,
	348, 348, 348, 348, 348, 348, 348, 348, 348, 348,
	348, 348, 348, 348, 274, 274, 274, 382, 382, 382,
	382, 382, 382, 381, 381, 381, 347, 347, 347, 380,
	380, 57, 57, 213, 213, 399, 399, 400, 400, 400,
	45, 45, 45, 45, 45, 45, 44, 44, 44, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	46, 46, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 106, 106, 107, 107,
	107, 107, 109, 109, 109, 363, 363, 58, 58, 3,
	3, 168, 170, 171, 171, 169, 169, 169, 169, 169,
	169, 60, 60, 59, 59, 173, 172, 174, 174, 174,
	1, 1, 2, 2, 4, 4, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 329, 329,
	329, 362, 362, 364, 108, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 112, 111, 111, 110, 113, 113,
	113, 113, 113, 113, 113, 113, 366, 366, 366, 61,
	61, 367, 318, 319, 320, 5, 6, 343, 365, 120,
	120, 28, 37, 37, 29, 29, 29, 29, 30, 30,
	62, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 273, 273, 282, 282, 272, 272, 297, 297,
	297, 275, 275, 275, 276, 276, 392, 392, 392, 269,
	269, 64, 64, 64, 298, 298, 298, 298, 66, 66,
	67, 68, 68, 300, 300, 301, 301, 69, 70, 82,
	82, 82, 82, 82, 82, 105, 105, 105, 15, 15,
	15, 15, 78, 78, 78, 14, 14, 65, 65, 72,
	389, 389, 390, 391, 391, 391, 391, 73, 75, 31,
	31, 31, 31, 31, 31, 130, 130, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 125,
	125, 125, 119, 119, 406, 76, 77, 77, 123, 123,
	123, 116, 116, 116, 122, 122, 122, 16, 16, 17,
	255, 255, 18, 18, 127, 127, 129, 129, 129, 129,
	129, 131, 131, 131, 131, 131, 131, 131, 126, 126,
	128, 128, 128, 128, 290, 290, 290, 289, 289, 162,
	162, 164, 163, 163, 165, 165, 166, 166, 166, 166,
	211, 211, 188, 188, 249, 249, 248, 248, 254, 254,
	250, 250, 250, 250, 257, 257, 167, 167, 167, 167,
	175, 175, 176, 176, 177, 177, 299, 299, 295, 295,
	295, 294, 294, 181, 181, 181, 183, 182, 182, 182,
	182, 184, 184, 186, 186, 185, 185, 187, 192, 192,
	191, 191, 189, 189, 189, 189, 190, 190, 190, 190,
	193, 193, 140, 140, 140, 140, 140, 140, 140, 155,
	155, 155, 155, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 239, 239, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 149, 215, 215, 214, 214, 83,
	83, 83, 84, 84, 85, 85, 85, 85, 85, 86,
	86, 86, 86, 86, 141, 141, 88, 88, 87, 87,
	206, 206, 287, 287, 89, 90, 90, 93, 93, 92,
	91, 91, 97, 97, 94, 94, 96, 96, 95, 98,
	98, 99, 100, 100, 270, 270, 194, 194, 202, 202,
	202, 202, 195, 195, 195, 195, 195, 195, 195, 203,
	203, 203, 210, 204, 204, 200, 200, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 160, 160, 160, 160, 220, 220, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 148, 148, 161, 161, 161, 161, 307,
	307, 115, 115, 115, 115, 115, 115, 115, 115, 115,
	115, 115, 115, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 407, 407, 321, 321, 321, 321, 201, 201,
	201, 201, 201, 121, 121, 121, 121, 121, 304, 304,
	304, 308, 308, 308, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 309,
	309, 218, 218, 117, 117, 216, 216, 217, 219, 219,
	212, 212, 212, 212, 197, 197, 197, 221, 221, 222,
	222, 101, 102, 102, 103, 103, 223, 223, 225, 224,
	224, 226, 227, 227, 227, 228, 228, 229, 229, 229,
	47, 47, 47, 47, 47, 42, 42, 42, 42, 43,
	43, 43, 43, 132, 132, 132, 132, 134, 134, 133,
	133, 79, 79, 80, 80, 80, 138, 138, 139, 139,
	139, 136, 136, 137, 137, 246, 246, 230, 230, 230,
	237, 237, 237, 233, 233, 235, 235, 235, 236, 236,
	236, 234, 243, 243, 245, 245, 244, 244, 240, 240,
	241, 241, 242, 242, 242, 238, 238, 196, 196, 196,
	196, 196, 247, 247, 247, 247, 258, 258, 207, 207,
	209, 209, 208, 208, 159, 259, 259, 263, 260, 260,
	264, 264, 264, 264, 252, 252, 252, 261, 261, 262,
	262, 291, 291, 291, 268, 268, 281, 281, 277, 277,
	278, 278, 271, 271, 283, 283, 283, 74, 205, 205,
	359, 359, 356, 286, 286, 288, 288, 292, 292, 296,
	296, 293, 293, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 403,
	404, 302, 303, 303, 303,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	0, 1, 1, 1, 2, 3, 2, 3, 0, 1,
	3, 1, 4, 3, 3, 4, 3, 2, 3, 4,
	3, 4, 2, 7, 1, 3, 3, 3, 3, 1,
	2, 1, 1, 3, 2, 3, 3, 2, 5, 7,
	10, 9, 7, 8, 1, 1, 10, 11, 9, 8,
	8, 1, 1, 1, 3, 1, 3, 1, 3, 0,
	4, 3, 5, 4, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 2, 2, 6, 12,
	2, 0, 2, 0, 2, 1, 0, 2, 1, 3,
	3, 0, 1, 1, 3, 3, 6, 4, 7, 8,
	8, 8, 6, 3, 1, 1, 5, 0, 1, 1,
	1, 1, 2, 2, 2, 0, 1, 4, 4, 4,
	4, 4, 4, 2, 4, 1, 3, 1, 1, 3,
	4, 3, 3, 3, 5, 10, 0, 2, 0, 2,
	3, 5, 3, 4, 2, 3, 2, 3, 3, 3,
	3, 2, 2, 4, 4, 1, 1, 1, 1, 1,
	0, 2, 2, 3, 3, 2, 2, 2, 1, 1,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 5, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 5, 0, 3, 5, 0, 1, 1,
	0, 1, 0, 3, 3, 2, 2, 2, 1, 2,
	2, 0, 1, 0, 2, 2, 5, 0, 1, 1,
	2, 1, 3, 2, 1, 1, 3, 3, 3, 0,
	1, 4, 3, 3, 4, 2, 0, 2, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 0, 1, 1,
	3, 3, 4, 3, 1, 3, 1, 7, 6, 7,
	7, 8, 8, 0, 1, 5, 2, 1, 1, 1,
	0, 1, 3, 3, 1, 1, 2, 2, 2, 0,
	1, 1, 1, 2, 0, 1, 0, 1, 1, 3,
	2, 1, 2, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 4, 4, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 4, 5, 0, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 1, 0, 2, 0, 2, 0, 2, 2,
	0, 1, 5, 1, 3, 7, 1, 3, 3, 1,
	2, 2, 2, 5, 5, 5, 6, 8, 5, 5,
	4, 4, 4, 6, 5, 5, 5, 2, 2, 2,
	2, 3, 3, 3, 4, 3, 3, 1, 3, 5,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 3, 4, 4, 2, 11, 3, 6, 8,
	6, 6, 6, 13, 8, 6, 10, 5, 5, 5,
	5, 5, 7, 7, 5, 5, 0, 6, 5, 6,
	4, 5, 0, 8, 9, 0, 3, 0, 1, 0,
	3, 8, 4, 1, 3, 3, 6, 7, 7, 8,
	4, 0, 1, 0, 1, 3, 3, 1, 1, 2,
	1, 1, 0, 2, 0, 2, 5, 3, 7, 4,
	4, 4, 4, 3, 3, 3, 7, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 0, 2,
	2, 1, 3, 2, 0, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 3, 1, 3, 3, 0, 2,
	2, 2, 2, 2, 2, 2, 4, 4, 3, 0,
	1, 4, 3, 4, 4, 3, 3, 3, 2, 1,
	3, 3, 3, 5, 7, 7, 6, 5, 3, 2,
	3, 3, 3, 7, 3, 3, 3, 3, 4, 7,
	5, 2, 4, 4, 4, 4, 4, 5, 5, 4,
	4, 4, 4, 4, 4, 4, 4, 2, 2, 4,
	4, 4, 4, 4, 2, 3, 3, 3, 5, 2,
	3, 3, 2, 3, 4, 4, 4, 3, 4, 4,
	5, 3, 0, 1, 0, 1, 1, 1, 0, 2,
	2, 0, 2, 2, 0, 2, 0, 1, 1, 1,
	1, 2, 1, 3, 1, 1, 1, 1, 1, 2,
	1, 1, 5, 0, 1, 0, 1, 2, 3, 0,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 3, 3, 2, 2, 3,
	1, 3, 2, 1, 2, 1, 2, 2, 4, 3,
	3, 6, 4, 7, 6, 1, 3, 2, 2, 2,
	2, 1, 1, 1, 3, 2, 1, 1, 1, 0,
	1, 1, 0, 3, 0, 2, 0, 2, 1, 2,
	2, 0, 1, 1, 0, 1, 1, 5, 5, 4,
	0, 2, 4, 4, 0, 1, 0, 1, 2, 3,
	4, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 2, 3, 5, 0, 1, 2, 1, 1, 0,
	1, 2, 1, 3, 1, 1, 1, 4, 3, 1,
	3, 4, 3, 7, 0, 3, 1, 3, 1, 3,
	1, 1, 3, 3, 1, 3, 4, 4, 4, 3,
	2, 4, 0, 1, 0, 2, 0, 1, 0, 1,
	2, 1, 1, 1, 2, 2, 1, 2, 3, 2,
	3, 2, 2, 2, 1, 1, 3, 3, 0, 1,
	1, 2, 6, 5, 6, 6, 0, 2, 3, 3,
	0, 2, 3, 3, 3, 2, 3, 1, 6, 3,
	4, 3, 1, 3, 4, 5, 6, 3, 4, 5,
	6, 3, 4, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 3, 1, 1, 1, 2, 2, 2,
	2, 1, 1, 2, 7, 7, 6, 6, 2, 2,
	1, 6, 3, 3, 3, 1, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 1, 0, 1, 2, 5,
	0, 3, 0, 1, 4, 4, 2, 0, 1, 1,
	2, 2, 1, 1, 2, 2, 0, 1, 1, 1,
	1, 5, 1, 3, 0, 3, 1, 1, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 6, 4, 4, 8,
	6, 8, 6, 5, 4, 10, 2, 2, 1, 2,
	2, 2, 4, 5, 5, 5, 5, 5, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 8, 8,
	8, 6, 5, 4, 4, 4, 4, 4, 7, 4,
	4, 6, 6, 6, 8, 6, 6, 4, 4, 3,
	4, 6, 6, 4, 4, 4, 6, 8, 6, 4,
	6, 6, 8, 10, 7, 8, 8, 9, 4, 4,
	4, 4, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 4, 4, 6, 5, 9, 6, 9, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 6, 8,
	10, 12, 14, 6, 8, 8, 10, 12, 14, 6,
	8, 10, 12, 6, 8, 4, 4, 3, 4, 0,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 0, 2, 3, 3, 4, 4,
	4, 4, 4, 0, 3, 4, 7, 3, 1, 1,
	1, 0, 5, 5, 2, 3, 1, 2, 2, 1,
	2, 1, 2, 2, 1, 2, 2, 1, 1, 0,
	1, 0, 1, 0, 2, 1, 2, 4, 0, 2,
	1, 1, 3, 5, 1, 2, 2, 0, 3, 0,
	2, 2, 1, 3, 0, 1, 0, 1, 3, 1,
	3, 2, 0, 1, 1, 0, 1, 2, 4, 4,
	0, 2, 2, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 0, 3, 3, 3, 0, 3, 1,
	1, 0, 4, 0, 1, 1, 0, 3, 1, 3,
	2, 1, 1, 0, 1, 2, 4, 9, 3, 5,
	0, 3, 3, 0, 1, 0, 2, 2, 0, 2,
	2, 2, 0, 2, 1, 2, 3, 3, 0, 2,
	1, 2, 3, 4, 3, 0, 1, 2, 1, 5,
	4, 4, 1, 3, 3, 5, 0, 5, 1, 3,
	1, 2, 3, 4, 1, 1, 3, 3, 1, 3,
	3, 3, 3, 3, 1, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	0, 3, 0, 1, 0, 1, 1, 5, 0, 1,
	0, 1, 2, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -401, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -62, -63, -64, -66,
	-67, -68, -69, -70, -14, -65, -31, -32, -71, -72,
	-73, -74, -75, -16, -17, -18, -9, -8, -13, 9,
	10, -104, -33, 32, -38, -48, 222, -49, -39, 223,
	-50, 225, 224, 261, 226, 254, 74, 307, 308, 310,
	311, 312, 313, -105, 259, 260, 228, 36, 45, 33,
	34, 37, 232, 267, 268, 231, -10, -34, 8, -403,
	11, 438, 256, 255, 28, -12, 500, 86, -402, 648,
	-246, -230, 22, 33, 29, -229, -225, -123, -230, 20,
	18, 7, -76, -406, -76, -76, 12, 13, -76, -344,
	-346, 86, 156, 86, -76, -55, -54, -52, -51, -53,
	-56, 31, -45, -46, -368, -44, -41, 227, 224, 271,
	120, 121, 261, 262, 263, 226, 245, 260, 264, 259,
	280, -40, 81, 33, 500, 503, -351, 223, 229, 230,
	225, 439, 123, 122, 75, -348, 361, 533, 618, -56,
	620, 102, 104, 619, 44, 235, 621, 622, 623, 540,
	624, 244, 625, 626, 627, 628, 634, 582, 635, 636,
	637, 124, 7, -76, -296, -292, 89, -285, 497, 247,
	531, 532, 296, 81, 41, 506, 358, 361, 533, 468,
	618, 307, 321, 315, 473, 474, 475, 342, 334, 498,
	534, 507, 299, 248, 284, 612, 332, 132, 620, 302,
	535, 262, 366, 367, 536, 368, 102, 310, 405, 633,
	301, 537, 631, 104, 619, 79, 467, 51, 615, 44,
	257, 330, 231, 326, 621, 285, 538, 509, 278, 123,
	120, 640, 36, 324, 50, 30, 630, 122, 49, 622,
	147, 539, 623, 540, 370, 349, 606, 48, 371, 263,
	541, 84, 268, 502, 305, 614, 372, 487, 325, 373,
	295, 629, 228, 542, 598, 594, 595, 374, 375, 607,
	543, 350, 354, 489, 544, 397, 472, 376, 647, 52,
	545, 546, 608, 121, 547, 78, 624, 80, 319, 320,
	548, 293, 246, 492, 493, 399, 346, 450, 457, 458,
	108, 109, 453, 110, 459, 111, 460, 461, 462, 451,
	112, 105, 452, 463, 464, 347, 348, 113, 465, 107,
	106, 454, 456, 114, 466, 244, 35, 377, 499, 297,
	58, 272, 400, 46, 352, 644, 45, 602, 494, 549,
	605, 345, 341, 447, 53, 550, 551, 552, 553, 469,
	625, 344, 318, 340, 639, 4, 290, 470, 626, 62,
	230, 356, 355, 357, 279, 396, 337, 554, 555, 556,
	251, 82, 557, 327, 21, 558, 559, 378, 286, 560,
	56, 561, 562, 403, 260, 563, 54, 627, 39, 564,
	265, 641, 628, 565, 566, 567, 568, 267, 569, 380,
	570, 596, 597, 379, 351, 353, 495, 274, 381, 501,
	571, 306, 323, 264, 632, 572, 252, 483, 484, 485,
	486, 613, 491, 490, 266, 271, 259, 404, 253, 573,
	574, 575, 576, 577, 300, 593, 578, 579, 311, 634,
	448, 43, 580, 581, 582, 583, 584, 294, 289, 398,
	407, 61, 83, 363, 585, 586, 611, 317, 287, 587,
	308, 55, 635, 636, 637, 281, 638, 476, 477, 478,
	479, 9, 645, 646, 471, 383, 124, 291, 292, 47,
	338, 273, 588, 303, 589, 328, 329, 343, 316, 339,
	309, 599, 275, 384, 449, 261, 590, 406, 288, 359,
	364, 304, 505, 488, 280, 385, 610, 504, 480, 481,
	336, 333, 282, 482, 591, 386, 236, 276, 277, 592,
	600, 387, 388, 298, 389, 390, 391, 392, 393, 395,
	394, 283, 503, 314, 331, 365, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 446, 234, -76, 234, -185, -292,
	234, -261, 367, -282, 369, 382, 377, 387, 375, -273,
	378, 380, 274, -392, 397, 234, 384, 222, 370, 379,
	388, 389, 298, 395, 390, 394, 283, 391, 392, 393,
	-375, 174, 623, 638, 132, 335, 374, 372, 398, 602,
	89, -298, 89, 90, 91, -285, 309, -300, 314, -286,
	-375, -285, 312, -185, -82, 598, 226, -302, -302, -125,
	602, 604, -204, -140, 140, -155, -158, -146, -150, -198,
	-199, -200, -201, -156, -212, -251, 163, 164, 171, 141,
	-210, -159, 26, 496, 440, 439, 174, 31, -149, 217,
	68, 69, 442, 143, 57, 11, 415, 416, -157, 410,
	417, 412, 467, 469, 470, 471, 468, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 472, 444, 445,
	115, 446, 105, 107, 106, 447, 448, 449, 332, 494,
	495, 489, 492, 493, 491, 490, 347, 348, 450, 451,
	452, 108, 109, 110, 111, 112, 113, 114, 453, 456,
	454, 455, 457, 458, 459, 464, 465, 460, 461, 462,
	463, 466, -85, -97, 522, 521, -98, -147, -148, -161,
	-286, -292, 239, 409, 233, 169, 438, -151, -144, -375,
	-285, 90, 91, -8, -208, 408, 413, 414, 418, 411,
	508, 510, 525, 526, 528, 513, 518, 517, 520, 483,
	484, 485, 486, 487, 488, 594, 595, 596, 597, 89,
	-153, -152, -194, 92, 98, 103, 99, -398, 116, -403,
	616, 93, 94, 95, 96, 97, 117, 118, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	44, 383, 383, -185, -76, -76, -76, -76, -223, -123,
	-225, -10, -8, -403, 8, -76, -8, -9, -13, -34,
	-36, 527, -35, -292, -230, -246, 12, 159, 42, 50,
	-228, -229, -12, -8, -140, 19, 23, 24, -128, 165,
	-140, -292, -77, -128, -271, 238, -76, -76, -260, -305,
	309, -264, 398, 602, 397, -252, -262, 89, -251, -261,
	396, -345, 156, -331, -335, -286, 249, -361, 245, -185,
	-354, -353, -286, -403, -124, -281, 235, 243, 242, 133,
	-379, 136, 291, 409, 233, -51, -52, -53, -261, 173,
	622, -106, 266, 270, 87, 87, -335, -334, -333, -380,
	270, 249, -360, -352, 241, 250, -341, 242, 243, -336,
	235, 134, -380, -336, 240, 250, 245, 249, 270, 270,
	124, 270, 124, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 265, -342, 148, -342, 504, 504, -348, -380,
	245, 235, -380, -380, 241, -283, -336, 237, 25, 237,
	35, 35, -342, -342, -342, -261, 173, -342, -342, -342,
	-342, 278, 278, -342, -342, -342, -342, -342, -342, -342,
	-342, -342, -342, -342, -342, -342, -342, -342, -342, -342,
	234, -379, -132, 394, 298, 81, -54, 280, -37, -185,
	-281, 235, 236, -379, 267, -185, 218, -185, -275, 156,
	15, -275, -272, 383, 381, 368, 373, -275, -275, -275,
	-275, 281, 366, -337, 235, 35, 246, 383, 281, 366,
	281, 282, 281, 282, 376, 386, 281, -297, 14, 159,
	409, 371, 375, 274, 234, 275, 236, 385, 282, -297,
	93, -276, 156, 383, 277, -275, -275, -303, -403, -288,
	-286, -284, 227, 23, 139, 25, 27, 142, 174, 127,
	19, 143, 37, 229, 335, 245, 173, 241, 439, 222,
	72, 508, 410, 412, 408, 415, 441, 442, 409, 369,
	31, 13, 510, 28, 255, 24, 38, 167, 224, 146,
	511, 258, 26, 256, 115, 118, 513, 22, 75, 250,
	14, 243, 40, 16, 514, 515, 17, 239, 238, 159,
	235, 70, 11, 217, 29, 155, 66, 516, 134, 517,
	518, 519, 520, 128, 68, 156, 20, 642, 413, 414,
	33, 603, 496, 269, 169, 73, 59, 604, 140, 411,
	521, 522, 116, 523, 119, 76, 609, 136, 18, 71,
	42, 524, 270, 525, 240, 643, 526, 401, 527, 157,
	225, 438, 69, 158, 616, 528, 617, 233, 382, 8,
	443, 32, 254, 242, 126, 67, 529, 234, 145, 444,
	445, 237, 129, 117, 7, 133, 34, 12, 74, 77,
	416, 417, 418, 57, 125, 500, 144, 15, 530, 402,
	138, -375, 605, -303, -303, 32, 90, 237, -286, -78,
	-286, 93, -15, -11, -22, -21, -23, 148, -130, 383,
	-118, 174, 623, 606, 607, 608, 605, 380, 613, 611,
	609, 281, 610, 87, 136, 138, 139, 4, -140, 155,
	-195, 148, 149, 150, 151, 152, 153, 154, 159, 140,
	142, 156, -239, 137, 160, 161, 162, 163, 164, 165,
	166, 168, 167, 169, 170, 157, 158, 173, 220, 221,
	-150, -150, -150, -150, -210, -215, -214, -403, -212, -375,
	-285, -292, -403, -403, -150, -270, -403, -403, -150, -403,
	-403, -403, -218, -140, -403, -403, -407, -403, -407, -407,
	-321, -403, -321, -403, -403, -403, -403, -403, -403, -403,
	-403, -403, -403, -403, -403, -403, -403, -403, -403, -403,
	-403, -403, -403, -403, -403, -403, -403, -403, -403, -403,
	-403, -403, -403, -403, -403, -403, -403, -403, -403, -403,
	-403, -403, -403, -403, -403, -403, -403, -403, -403, -403,
	-403, -403, -403, -403, -403, -403, -403, -403, -403, -403,
	-403, -403, -403, -403, -403, -403, -403, -403, -403, 218,
	-403, -403, -403, -403, -403, -321, -321, -321, -321, -321,
	-403, -403, -403, -403, -403, -403, -403, -403, -403, -403,
	103, 98, 92, -212, 99, 93, -8, -9, -204, -403,
	-302, -389, -390, -188, -185, -403, 298, -286, -286, 267,
	-228, -12, -8, -223, -229, -225, -8, -76, -116, -129,
	63, 64, -131, 24, 38, 67, 65, 23, -404, 88,
	-404, -246, -404, 87, -36, -249, 86, 61, 43, 93,
	93, 87, 21, -224, -226, -140, 14, -290, 4, -289,
	25, -286, 93, 218, 101, 14, -186, 29, -185, -271,
	-271, 87, 309, 89, -266, -265, 399, 401, 148, -291,
	-286, 93, 31, 88, 87, -185, -310, -313, -315, -314,
	-316, -311, -312, 332, 333, 174, 336, 338, 339, 340,
	341, 342, 343, 344, 345, 346, 349, 32, 257, 328,
	329, 330, 331, 350, 351, 352, 353, 354, 355, 356,
	357, 315, 334, 498, 316, 317, 318, 319, 320, 321,
	323, 324, 325, 326, 327, -376, -375, 86, 88, 87,
	-317, 86, -140, -132, 234, -375, 235, 235, 235, -76,
	438, -342, -342, -342, 265, 19, -44, -41, -368, 18,
	-40, -41, 227, 120, 121, 224, 86, -331, 86, -340,
	-376, -375, 86, 134, 240, 133, -339, -336, -339, -340,
	-375, -212, -375, 134, 134, -375, -375, -257, -286, -257,
	-257, 23, -257, 23, -257, 23, 95, -286, -257, 23,
	-257, 23, -257, 23, -257, 23, -257, 23, 31, 78,
	79, 80, 31, 82, 83, 84, -212, -375, -375, -212,
	-331, -212, -185, -375, -261, 95, 95, 95, -342, -342,
	95, 93, 93, 93, -342, -342, 95, 93, -294, -292,
	93, 93, -381, 251, 295, 297, 95, 95, 95, 95,
	31, 93, -382, 31, 630, 629, 631, 632, 633, 93,
	95, 31, 95, 31, 95, -286, 86, -185, -138, 285,
	222, 224, 227, 76, 93, 299, 303, 304, 148, 44,
	87, 237, 234, -375, -277, 239, -277, -286, -293, -292,
	-284, 93, -140, -338, 14, 159, -297, -297, -275, -185,
	-338, -297, -275, -185, -275, -275, -275, -275, -297, -297,
	-297, -275, -292, -292, -185, -185, -185, -185, -185, -185,
	-185, -303, -276, -275, 605, 93, -269, 14, 76, -303,
	-303, -301, 312, 346, 599, 600, 601, 87, 500, -178,
	-185, 605, 605, 605, 605, 605, 605, -140, -140, -140,
	-140, 523, -202, 116, 140, 117, 118, -158, -203, -208,
	-210, 100, 159, 142, 156, -239, -146, -150, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -304, -286, 93, 174, -154, -153, 99, -398, -154,
	497, 87, -214, 218, -140, -140, -375, -140, -286, -126,
	-128, -126, -140, -216, -217, 144, -212, -140, -404, -404,
	95, 99, 165, -122, 24, 38, -122, -122, -122, -122,
	-140, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-122, -286, -286, -115, -114, 420, 421, 422, 423, 425,
	426, 427, 430, 431, 435, 436, 419, 437, 424, 429,
	432, 433, 434, 428, 331, -140, -140, -140, -140, -140,
	-140, -83, -140, 127, 128, 129, -204, -140, -146, -140,
	-140, -140, -404, -140, -140, -140, -205, -204, -374, -373,
	-372, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -404, -140, -160, -144, 95, -253,
	99, 90, -140, -140, -127, -126, -288, -293, -284, -285,
	-126, -127, -127, -126, -126, -140, -140, -140, -140, -140,
	-140, -140, -140, -404, -140, -246, -404, -204, 87, -391,
	401, 402, 603, -295, 270, -294, 25, -205, 93, 14,
	-255, 77, -286, -228, -228, 63, 64, 59, -126, -131,
	-404, -35, 25, -248, -286, 62, 93, -322, -261, 358,
	359, 174, -140, -140, 87, -227, 27, 28, -185, -289,
	165, -293, -185, -256, 270, -185, -163, -165, -166, -167,
	-188, -211, -403, -168, 519, 516, 14, -178, -179, -187,
	-292, -264, -305, -266, 87, 400, 402, 403, 76, 119,
	-140, -323, 173, -350, -349, -348, -331, -333, -334, -335,
	88, -323, -327, 364, 363, -317, -317, -317, -317, -317,
	-322, -322, -322, -322, 86, 86, -317, -317, -317, -317,
	-325, 86, -325, -325, -326, 86, -326, -361, -140, -358,
	-357, -355, -356, 244, 102, 592, 548, 500, 540, 582,
	77, -353, -227, 95, -404, -138, -278, 239, -359, -356,
	-375, -375, -375, -278, 89, 93, 89, 93, 89, 93,
	-107, -58, -1, 642, 643, 644, 87, 19, -332, -331,
	-57, 295, -364, -365, 270, -360, -354, -340, 134, -339,
	-340, -340, -375, 87, 29, 124, 124, 124, 124, 500,
	224, 32, -279, 539, 140, 592, 548, -331, -57, 237,
	237, -304, -304, -304, 93, 93, -274, 638, -178, -134,
	287, 148, 276, 276, 234, 234, 289, -185, 300, 302,
	301, 299, 303, 304, 23, 23, 23, 288, 290, 292,
	278, -185, -185, -277, 76, -180, -185, 26, -292, -185,
	-275, -275, -185, -275, -275, -185, -286, -118, 401, 87,
	500, 22, -119, 22, -403, 116, 117, 118, -203, -146,
	-150, -146, 139, 258, -403, -212, -404, -288, 25, 87,
	77, -404, 87, 87, -404, -404, 87, 14, -219, -217,
	146, -140, -404, 87, -404, -404, -404, -204, -140, -140,
	-140, -140, -404, -404, -404, -404, -404, -404, -404, -404,
	-404, -404, -204, 87, 87, 14, -308, 25, -404, -404,
	-404, -404, -404, -218, -404, 14, -404, 77, 87, 159,
	87, -404, -404, -404, 87, 87, -404, -404, 87, 87,
	-404, 87, 87, 87, -404, 87, 87, 87, 87, -404,
	-404, -404, -404, 87, 87, 87, 87, 87, 87, 87,
	87, 87, 87, -404, -90, 524, -404, -404, 87, -404,
	87, -404, -403, 218, -404, -404, -404, -404, -404, 87,
	87, 87, 87, 87, 87, -404, -404, -404, -404, -390,
	602, 402, -192, -191, -189, 74, 238, 75, -403, -294,
	-404, -154, -253, -254, -253, -197, -286, 95, 99, -230,
	-162, -164, 14, -131, -210, 88, 87, -322, -234, -240,
	-272, -286, 93, 174, -324, 174, -324, 358, 359, -226,
	218, -193, 15, -196, 32, 57, -11, -403, -403, 32,
	87, -181, -183, -182, -184, 66, 70, 72, 67, 68,
	69, 73, -299, 25, -163, -9, -8, -403, -403, -403,
	-185, -178, -405, 14, 77, -405, 87, 218, -265, -267,
	404, 401, 407, -375, 93, -106, 87, -348, -335, -231,
	-135, 40, -328, 365, -322, 507, -322, -330, 93, -330,
	95, 95, 88, -47, -42, -43, 33, 81, -355, -342,
	93, 39, -342, -342, -286, 88, -227, -134, -185, 140,
	76, -359, -359, -359, -292, -2, 641, 647, 134, 86,
	368, 18, -248, 87, 88, -213, 296, 88, -108, -286,
	88, 86, -340, -340, -286, -403, 234, 31, 31, 592,
	548, 539, -57, -213, -212, -375, -323, 640, 639, 88,
	236, 294, -139, 415, -136, 93, 89, -185, -185, -185,
	-185, -185, 227, 224, -399, 305, -399, 279, 237, -178,
	-185, 87, -81, 253, 248, -297, -297, 33, -185, 401,
	614, 612, -140, 139, 258, -158, -150, -146, -306, 174,
	332, 257, 330, 326, 346, 337, 363, 328, 364, 325,
	324, 323, -306, -304, -204, -128, -140, -140, 147, -140,
	145, -140, -404, -404, -404, -404, -404, -223, -140, -140,
	-140, -404, 174, 332, 14, -140, -304, -140, -140, -140,
	-140, -140, -372, -140, -204, -140, -204, -140, -140, -140,
	-140, -140, -373, -373, -373, -373, -373, -204, -204, -204,
	-204, -403, -286, -93, -92, -91, 575, 238, -90, -160,
	-93, -160, -127, -288, -140, -140, -140, -140, -140, -140,
	-189, -336, -336, -336, -257, 87, -268, 22, 14, 57,
	57, -162, -193, -163, -131, -286, -237, 598, -243, 46,
	-241, -242, 47, -238, 48, 56, -324, -324, 165, -228,
	-140, -258, 76, -259, -263, -212, -207, -209, -208, -403,
	-247, -404, -286, -257, -259, -165, -166, -166, -165, -166,
	66, 66, 66, 71, 66, 71, 66, -182, -292, -404,
	-404, -9, -9, -140, -295, 77, -163, -163, -187, -292,
	165, 401, 405, 406, -348, -397, 116, 140, 31, 76,
	361, 102, -395, 173, 536, 587, 592, 548, 540, 582,
	-396, 240, 133, 134, 252, 25, 41, 88, 87, 88,
	87, 88, 87, -280, -279, -43, -42, -342, -342, 95,
	-375, 93, 93, 236, 26, -185, 76, 76, 76, -109,
	645, 95, 86, -3, 81, -140, 86, 19, -331, -212,
	-366, -318, -367, -319, -320, -5, -6, -343, -112, 57,
	102, -61, 44, 235, 625, 626, 124, -403, 638, -358,
	-248, -362, -364, -185, -143, -403, -142, -144, -151, 163,
	164, -213, -185, -133, 285, 293, 86, -137, 90, -378,
	77, 276, 361, 276, -400, 306, 93, -400, -185, -81,
	-47, -185, -275, -275, 33, -375, -404, -158, -150, -121,
	159, 500, -309, 506, -317, -317, -317, -326, -317, 320,
	-317, 320, -317, -404, -404, -404, 87, -404, 22, -404,
	-140, 87, -117, 443, 87, 87, -404, 86, 86, -140,
	-404, -404, -404, 87, -404, -404, -404, -404, -404, 87,
	-404, -404, -404, 87, -307, 593, -404, -404, -404, -404,
	-404, -404, -404, -404, -404, -404, -89, -287, -286, -90,
	557, 557, -404, -90, -220, 87, -404, -404, 87, -404,
	87, 87, -404, 87, -404, 87, -190, 22, -190, -190,
	-404, -253, -185, -193, -221, 16, -234, 51, 338, -245,
	-244, 55, 47, -242, 19, 49, 19, 30, -258, 87,
	148, 87, -404, -404, 87, 57, 218, -404, -193, -176,
	-175, 76, 77, -177, 76, -175, 66, 66, -249, -404,
	-404, 87, -256, -163, -193, -193, 218, 116, -403, -145,
	-157, -143, 12, 93, 93, -375, -394, 629, 630, 31,
	95, -342, -342, 134, 134, -185, 86, -322, 93, -322,
	95, 95, 31, 82, 83, 84, 31, 78, 79, 80,
	-185, -185, -185, -185, -363, 86, 19, -140, 86, 148,
	88, -248, -248, 272, 159, -342, 623, 278, 278, -342,
	-342, -342, -111, -110, 645, 88, -404, 87, -329, 500,
	503, -140, -152, -152, -249, 88, -371, 500, -377, -286,
	-286, -286, -286, 95, 97, -404, 498, 73, 501, -404,
	-322, -140, -140, -140, -228, 93, -140, -140, 95, 95,
	-404, -140, -204, -140, -404, -173, -172, -174, 606, 116,
	31, -306, -404, -206, 270, -96, -95, -94, 14, -404,
	-140, -140, -140, -140, -140, -140, -403, 66, 18, 16,
	-403, -403, -295, -221, -222, 17, 19, -235, 53, -233,
	52, -233, -244, 19, 19, 93, 19, 93, 134, -263,
	-140, -209, 57, -11, -286, -207, -286, -223, -140, 86,
	-140, -154, -193, -193, -140, -199, 467, 469, 470, 471,
	468, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 472, 446, 105, 107, 106, 447, 448, 449, 332,
	494, 495, 489, 492, 493, 491, 490, 347, 348, 450,
	451, 452, 108, 109, 110, 111, 112, 113, 114, 453,
	456, 454, 457, 458, 459, 464, 465, 460, 461, 462,
	463, 466, 483, 484, 485, 486, 487, 488, 594, 595,
	596, 597, 93, 93, 86, -140, 88, 88, -249, -362,
	-58, 88, -248, 95, 88, 273, -208, -403, 93, -342,
	-342, -342, 95, 95, -294, -404, 87, -286, -396, -364,
	504, 504, -404, 25, -370, -369, -288, 86, 77, 62,
	499, 502, -404, -404, 87, -404, -404, -404, 88, 88,
	-404, -404, -404, 87, -404, -172, -174, -404, 76, -154,
	-223, 19, -93, 295, 297, -93, -404, 87, -404, -404,
	87, -404, 87, -404, -250, -404, -286, 240, 19, 19,
	-250, -250, -192, -222, -103, -102, -101, 530, -140, -204,
	-236, 54, 76, 119, 93, 93, 93, 12, -207, 218,
	-228, -248, -170, 368, -223, -404, -248, 88, 25, 88,
	647, 134, 88, -208, -120, -403, 269, -294, 93, 93,
	-110, -113, -11, 87, 148, -248, -185, 62, -140, -204,
	-404, 76, 511, 606, -88, -87, -84, 617, 643, -204,
	-90, -90, -140, -140, -140, 87, -404, -404, -404, -103,
	87, -100, -99, -286, 76, 119, -259, -286, 88, -404,
	-403, -228, 88, -232, -11, 86, -3, 269, -318, -367,
	-319, -320, -5, -6, -343, -79, 500, -369, -347, -288,
	93, 95, 88, 500, -404, -404, -86, 142, 615, 590,
	-141, -152, -149, 217, -404, 87, -404, 87, -404, 87,
	-286, 240, -101, 87, 25, -295, -171, -169, -286, 554,
	-387, -386, 496, -397, -393, 116, 140, 102, -395, 592,
	548, 125, 126, -79, -140, 86, -404, -80, 284, 602,
	-378, 501, -86, 616, 568, 542, 568, 542, -140, -140,
	-140, -99, -403, -404, 87, 22, -310, -60, 565, -384,
	-385, 76, -388, 374, 564, 585, 116, 93, 88, -248,
	245, -371, 502, 139, -404, 87, -404, 87, -404, -89,
	-169, 561, -323, -154, -385, 76, -384, 76, 13, 12,
	-4, 646, 88, 286, -86, -140, -140, -404, -59, 26,
	-170, -383, 253, 248, 251, 32, -383, 95, -4, -404,
	-404, 565, 247, 31, 116, -154, -173, -172, -172,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 69, 71, 72, 834,
	834, 834, 0, 834, 0, 0, 834, -2, -2, 834,
	1439, 0, 834, 0, 0, -2, 762, 768, 0, 770,
	-2, 0, 0, 779, 1981, 1981, 829, 0, 0, 0,
	0, 0, 834, 834, 834, 834, 1296, 49, 834, 0,
	84, 85, 785, 786, 787, 64, 0, 1979, 1, 3,
	70, 74, 0, 0, 0, 57, 1305, 0, 77, 0,
	0, 838, 0, 836, 0, 1422, 834, 834, 0, 116,
	117, 0, 0, 0, -2, 120, -2, 149, 150, 151,
	0, 156, 576, 503, 555, 501, 540, -2, 489, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 506, 379, 379, 0, 0, -2, 489, 489, 489,
	1424, 0, 0, 0, 537, 441, 379, 379, 379, 0,
	379, 379, 379, 379, 0, 0, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 1323, 155, 1440, 1437, 1438, 1592, 1593,
	1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603,
	1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613,
	1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623,
	1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633,
	1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643,
	1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653,
	1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663,
	1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673,
	1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683,
	1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693,
	1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703,
	1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713,
	1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723,
	1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733,
	1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743,
	1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753,
	1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763,
	1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773,
	1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783,
	1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793,
	1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803,
	1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813,
	1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823,
	1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833,
	1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843,
	1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853,
	1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863,
	1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873,
	1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883,
	1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893,
	1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903,
	1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913,
	1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923,
	1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933,
	1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943,
	1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953,
	1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963,
	1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973,
	1974, 1975, 1976, 1977, 1978, 0, 1416, 0, 689, 935,
	0, 751, 751, 0, 751, 751, 751, 751, 0, 0,
	0, 701, 0, 0, 0, 0, 748, 0, 717, 718,
	0, 748, 0, 724, 754, 0, 729, 751, 751, 732,
	1982, 0, 1982, 1982, 1407, 0, 745, 743, 757, 758,
	39, 761, 764, 765, 766, 767, 769, 0, 774, 777,
	1433, 1434, 0, 792, 48, 1688, 784, 797, 798, 0,
	830, 831, 44, 1083, 0, 957, 962, 973, 988, 989,
	990, 991, 992, 994, 995, 996, 0, 0, 0, 0,
	1001, 1002, 0, 0, 0, 0, 0, 1064, 1010, 0,
	0, 0, 0, 1271, 0, 0, 1232, 1232, 1098, 1232,
	1234, 1234, 1640, 1773, 1781, 1898, 1603, 1608, 1609, 1610,
	1891, 1892, 1893, 1894, 1932, 1933, 1937, 1700, 0, 0,
	0, 1978, 1735, 1743, 1744, 1767, 1864, 1918, 1620, 1762,
	1830, 1697, 1717, 1718, 1846, 1847, 1739, 1740, 1721, 1733,
	1736, 1724, 1725, 1727, 1729, 1734, 1741, 1747, 1726, 1746,
	1745, 0, 1722, 1723, 1728, 1738, 1742, 1730, 1731, 1732,
	1737, 1748, 0, 0, 0, 0, 0, 1179, 1180, 1181,
	0, 0, 0, 0, 0, 0, 0, 275, 276, -2,
	-2, 42, 43, 1082, 1394, 1234, 1234, 1234, 1234, 1234,
	1024, 1025, 1026, 1027, 1028, 1052, 1053, 1059, 1060, 1841,
	1842, 1843, 1844, 1681, 1927, 1689, 1690, 1825, 1826, -2,
	221, 222, 223, 224, 225, 226, 227, 0, 217, 0,
	0, 280, 281, 277, 278, 279, 1066, 1067, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 243, 244,
	245, 246, 247, 248, 249, 250, 251, 252, 253, 254,
	255, 256, 257, 258, 259, 260, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 271, 272, 273, 274,
	1981, 0, 807, 0, 0, 0, 0, 0, 1305, 0,
	1297, 1296, 62, 0, 834, -2, 0, 0, 0, 0,
	46, 0, 51, 894, 76, 75, 1345, 0, 0, 0,
	58, 1306, 66, 68, 1307, 0, 839, 840, 0, 870,
	874, 0, 835, 0, 0, 1423, 1422, 1422, 101, 0,
	0, 1398, 113, 114, 115, 0, 0, 1404, 1405, 1409,
	1410, 0, 0, 167, 168, 0, 40, 406, 0, 163,
	0, 399, 340, 0, 1323, 0, 0, 0, 0, 0,
	834, 0, 1417, 144, 145, 152, 153, 154, 379, 379,
	379, 552, 0, 0, 155, 155, 510, 511, 512, 0,
	0, -2, 404, 0, 490, 0, 0, 393, 393, 397,
	395, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 0, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 637, 0, 380, 0, 550, 551, 442, 0,
	0, 0, 0, 0, 0, 0, 0, 1425, 1426, 0,
	527, 528, 0, 0, 0, 379, 379, 0, 0, 0,
	0, 379, 379, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 143, 1336, 0, 0, 0, -2, 0, 681, 0,
	0, 0, 1418, 1418, 0, 688, 0, 690, 691, 0,
	0, 692, 0, 748, 748, 746, 747, 694, 695, 696,
	697, 751, 0, 0, 388, 389, 390, 748, 751, 0,
	751, 751, 751, 751, 748, 748, 748, 751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1982, 754, 751,
	0, 725, 0, 726, 727, 730, 731, 733, 1983, 1984,
	1435, 1436, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450,
	1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460,
	1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470,
	1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480,
	1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490,
	1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500,
	1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510,
	1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520,
	1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530,
	1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540,
	1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550,
	1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560,
	1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570,
	1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580,
	1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590,
	1591, 1982, 1982, 737, 741, 1408, 763, 775, 778, 795,
	793, 794, 796, 788, 789, 790, 791, 0, 809, 810,
	815, 0, 0, 0, 0, 821, 822, 823, 0, 0,
	826, 827, 828, 0, 0, 0, 0, 0, 955, 0,
	0, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 974, 975, 0, 0, 0,
	997, 998, 999, 1000, 1003, 0, 1015, 0, 1017, 1280,
	-2, 0, 0, 0, 1008, 1009, 0, 0, 0, 0,
	0, 0, 0, 1272, 0, 0, 1096, 0, 1097, 1099,
	1100, 0, 1101, 844, 844, 844, 844, 844, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 844, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1428,
	131, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 854, 0,
	0, 854, 854, 0, 0, 210, 211, 212, 213, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 229, 230, 231, 232, 282, 1082, 0, 0, 0,
	45, 799, 800, 0, 918, 1428, 0, 0, 850, 0,
	56, 65, 67, 1305, 60, 1305, 0, 856, 0, 0,
	-2, -2, 857, 863, 864, 865, 866, 867, 53, 1980,
	54, 0, 73, 0, 47, 0, 0, 0, 0, 352,
	1348, 0, 0, 1298, 1299, 1302, 0, 871, 1779, 875,
	0, 877, 878, 0, 837, 0, 99, 0, 934, 0,
	0, 0, 0, 1406, 103, 104, 0, 0, 0, 363,
	1411, 1412, 1413, -2, 386, 0, 363, 347, 290, 291,
	292, 340, 294, 340, 340, 340, 340, 352, 352, 352,
	352, 323, 324, 325, 326, 327, 0, 0, 309, 340,
	340, 340, 340, 330, 331, 332, 333, 334, 335, 336,
	337, 295, 296, 297, 298, 299, 300, 301, 302, 303,
	342, 342, 342, 344, 344, 0, 41, 0, 367, 0,
	1302, 0, 0, 1336, 1420, 1430, 0, 0, 0, 1420,
	122, 0, 0, 0, 553, 587, 504, 541, 554, 0,
	507, 508, -2, 0, 0, 489, 0, 491, 0, 387,
	0, -2, 0, 397, 0, 393, 397, 394, 397, 385,
	398, 531, 532, 533, 0, 535, 536, 617, 904, 0,
	0, 0, 0, 0, 623, 624, 625, 0, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 542, 543,
	544, 545, 546, 547, 548, 549, 0, 0, 0, 0,
	491, 0, 538, 0, 0, 443, 444, 445, 0, 0,
	448, 449, 450, 451, 0, 0, 454, 455, 456, 921,
	922, 457, 458, 483, 484, 485, 459, 460, 461, 462,
	463, 464, 465, 477, 478, 479, 480, 481, 482, 466,
	467, 468, 469, 470, 471, 474, 0, 137, 1327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1418, 0, 0, 0, 0, 853, 936, 1441,
	1442, 752, 753, 0, 391, 392, 751, 751, 698, 738,
	0, 751, 702, 739, 703, 705, 704, 706, 719, 720,
	751, 709, 749, 750, 710, 711, 712, 713, 714, 715,
	716, 734, 721, 722, 723, 755, 0, 759, 760, 735,
	736, 0, 776, 780, 781, 782, 783, 0, 0, 812,
	95, 817, 818, 819, 820, 832, 825, 1084, 952, 953,
	954, 0, 956, 959, 0, 1068, 1070, 961, 963, 1079,
	1080, 1081, 0, 0, 0, 0, 0, 967, 971, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 993, 1248, 1249, 1250, 1012, 283, 284, 0, 1013,
	0, 0, 0, 0, 0, 0, 0, 1083, 1014, 0,
	868, 0, 0, 1278, 1275, 0, 0, 0, 1233, 1235,
	0, 0, 0, 0, 845, 846, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1211, 1212, 1213, 1214, 1215, 1216,
	1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226,
	1227, 1228, 1229, 1230, 1231, 1251, 0, 0, 0, 0,
	0, 1271, 0, 1019, 1020, 1021, 0, 0, 0, 0,
	0, 0, 1139, 0, 0, 0, 0, 1429, 0, 132,
	133, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1182, 1183, 1184,
	1185, 38, 0, 0, 0, 855, 1282, 0, -2, -2,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1207, 0, 0, 1392, 0, 0, 802,
	803, 805, 0, 938, 0, 919, 0, 0, 808, 0,
	849, 0, 852, 59, 61, 861, 862, 0, 879, 858,
	55, 50, 0, 0, 896, 1346, 352, 1368, 0, 361,
	361, 358, 1308, 1309, 0, 1301, 1303, 1304, 78, 876,
	872, 0, 950, 0, 0, 933, 0, 882, 884, 885,
	886, 916, 0, 889, 0, 0, 0, 0, 0, 97,
	935, 1399, 0, 102, 0, 0, 107, 108, 1400, 1401,
	1402, 1403, 0, 576, -2, 438, 169, 171, 172, 173,
	164, -2, 350, 348, 349, 293, 352, 352, 317, 318,
	319, 320, 321, 322, 0, 0, 310, 311, 312, 313,
	304, 0, 305, 306, 307, 0, 308, 405, 0, 1310,
	368, 369, 371, 379, 0, 374, 375, 0, 379, 379,
	0, 400, 401, 0, 1302, 1327, 0, 0, 0, 1431,
	1430, 1430, 1430, 0, 157, 158, 159, 160, 161, 162,
	612, 0, 0, 588, 610, 611, 155, 0, 0, 165,
	493, 492, 0, 644, 0, 403, 0, 0, 397, 397,
	382, 383, 534, 0, 0, 619, 620, 621, 622, 0,
	0, 0, 520, 432, 0, 521, 522, 491, 493, 0,
	0, 363, 446, 447, 452, 453, 472, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 567, 568,
	569, 570, 495, 574, 571, 495, 575, 1324, 1325, 1326,
	0, 0, 682, 0, 0, 429, 93, 1419, 687, 748,
	708, 740, 748, 700, 707, 728, 772, 816, 0, 0,
	0, 0, 824, 0, 0, 960, 1069, 1071, 964, 0,
	968, 972, 0, 0, 0, 1018, 1016, 1282, 0, 0,
	0, 1065, 0, 0, 1087, 1088, 0, 0, 0, 1276,
	0, 0, 1094, 0, 1236, 1237, 1102, 0, 0, 0,
	0, 0, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115,
	1116, 1117, 1296, 0, 0, 0, 0, 0, 1123, 1124,
	1125, 1126, 1127, 0, 1129, 0, 1130, 0, 0, 0,
	0, 1137, 1138, 1140, 0, 0, 1143, 1144, 0, 0,
	1145, 0, 0, 0, 1149, 0, 0, 0, 0, 1158,
	1159, 1160, 1161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1172, 1173, 0, 1047, 0, 0, 1047,
	0, 1085, 854, 0, 1238, 1239, 1240, 1241, 1242, 0,
	0, 0, 0, 0, 0, 1205, 1206, 1208, 1393, 801,
	804, 806, 892, 939, 940, 0, 0, 0, 0, 920,
	1427, 847, 848, 851, 898, 0, 1284, 0, 0, 879,
	950, 880, 0, 859, 52, 895, 0, 1350, 1349, 1362,
	1375, 361, 361, 355, 356, 362, 357, 359, 360, 1300,
	0, 1305, 0, 1386, 0, 0, 1378, 0, 0, 0,
	0, 0, 0, 0, 0, 923, 0, 0, 926, 0,
	0, 0, 0, 917, 0, 0, 0, 0, 0, 0,
	-2, 0, 0, 91, 92, 0, 0, 0, 105, 106,
	0, 0, 112, 364, 365, 146, 155, 440, 170, 413,
	0, 0, 289, 351, 314, 315, 316, 0, 338, 0,
	0, 0, 434, 118, 1314, 1313, 379, 379, 370, 0,
	373, 0, 0, 0, 1432, 341, 402, 0, 136, 0,
	0, 0, 0, 0, 142, 582, 0, 0, 589, 0,
	0, 0, 502, 0, 513, 514, 0, 616, -2, 678,
	367, 0, 381, 384, 905, 0, 0, 515, 0, 518,
	519, 433, 493, 524, 525, 539, 526, 475, 476, 473,
	0, 0, 1337, 1338, 1343, 1341, 1342, 123, 560, 562,
	561, 565, 0, 0, 497, 0, 497, 558, 0, 429,
	1310, 0, 686, 430, 431, 751, 751, 811, 96, 0,
	814, 0, 0, 0, 0, 965, 969, 1243, 1269, 340,
	340, 1256, 340, 344, 1259, 340, 1261, 340, 1264, 340,
	1267, 1268, 0, 0, 0, 869, 0, 0, 1093, 1279,
	0, 0, 1103, 1104, 1105, 1106, 1107, 1273, 0, 0,
	0, 1122, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 134, 135, 0, 0, 0, 0, 0, 0,
	1209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1042, 1046, 0, 1048, 1049, 0, 0, 1175, 0,
	0, 1186, 0, 1283, 0, 0, 0, 0, 0, 0,
	941, 946, 946, 946, 0, 0, 0, 1414, 1415, 1285,
	1286, 950, 1287, 881, 860, 897, 1368, 0, 1361, 0,
	-2, 1370, 0, 0, 0, 1376, 353, 354, 873, 79,
	951, 82, 0, 1386, 1395, 0, 1377, 1388, 1390, 0,
	0, 0, 1382, 0, 950, 883, 912, 914, 0, 909,
	924, 925, 927, 0, 929, 0, 931, 932, 894, 888,
	890, 0, 0, 0, 99, 0, 950, 950, 98, 0,
	937, 109, 110, 111, 439, 174, 179, 0, 0, 0,
	184, 0, 186, 0, 0, 0, 191, 192, 379, 379,
	414, 0, 286, 288, 0, 0, 177, 352, 0, 352,
	0, 345, 0, 415, 435, 1311, 1312, 0, 0, 372,
	376, 377, 378, 0, 1421, 138, 0, 0, 0, 585,
	0, 613, 0, 0, 0, 0, 0, 0, 166, 494,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 0,
	379, 0, 0, 0, 379, 379, 379, 0, 670, 366,
	0, 0, 641, 638, 516, 0, 215, 216, 218, 0,
	0, 523, 894, 1328, 1329, 1330, 0, 1340, 1344, 126,
	0, 0, 0, 0, 572, 0, 496, 573, 683, 684,
	685, 94, 693, 699, 813, 833, 958, 966, 970, 0,
	0, 0, 0, 1270, 1254, 352, 1257, 1258, 1260, 1262,
	1263, 1265, 1266, 1006, 1007, 1011, 0, 1090, 0, 1092,
	1277, 0, 1305, 0, 0, 0, 1121, 0, 0, 0,
	1132, 1131, 1133, 0, 1135, 1136, 1141, 1142, 1146, 0,
	1148, 1150, 1151, 0, 0, 0, 1162, 1163, 1164, 1165,
	1166, 1167, 1168, 1169, 1170, 1171, 0, 1040, 1043, 1174,
	1050, 1051, 1056, 1177, 0, 0, 1086, 1188, 0, 1193,
	0, 0, 1199, 0, 1203, 0, 0, 0, 0, 0,
	918, 899, 63, 1287, 1289, 0, 1355, 1353, 1353, 1363,
	1364, 0, 0, 1371, 0, 0, 0, 0, 83, 0,
	0, 0, 1391, 0, 0, 0, 0, 100, 1296, 906,
	913, 0, 0, 907, 0, 908, 928, 930, 887, -2,
	891, 0, 950, 950, 89, 90, 0, 180, 0, 182,
	208, 209, 0, 185, 187, 188, 189, 195, 196, 197,
	190, 0, 0, 285, 287, 0, 0, 328, 339, 329,
	0, 0, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322,
	894, 139, 140, 141, 577, 0, 587, 0, 0, 0,
	580, 0, 505, 0, 0, 0, 379, 379, 379, 0,
	0, 0, 0, 655, 0, 0, 618, 0, 626, 0,
	0, 0, 219, 220, 0, 1339, 559, 0, 124, 125,
	0, 0, 564, 498, 499, 1004, 0, 0, 0, 1005,
	1255, 0, 0, 0, 0, 1274, 0, 0, 0, 0,
	1128, 0, 0, 0, 1154, 0, 0, 0, 607, 608,
	0, 1210, 1045, 1296, 0, 1047, 1057, 1058, 0, 1047,
	1187, 0, 0, 0, 0, 0, 0, 947, 0, 0,
	0, 0, 938, 1289, 1294, 0, 0, 1358, 0, 1351,
	1354, 1352, 1365, 0, 0, 1372, 0, 1374, 0, 1396,
	1397, 1389, 0, 1381, 1384, 1380, 1383, 1305, 910, 0,
	915, 0, 1296, 88, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 0, 0, 343, 346, 0, 0,
	0, 578, 0, 590, 581, 0, 668, 0, 672, 0,
	0, 0, 675, 676, 677, 654, 0, 658, 407, 642,
	639, 640, 517, 0, 127, 128, 0, 0, 0, 1244,
	0, 1247, 1089, 1091, 0, 1118, 1119, 1120, 1252, 1253,
	1134, 1147, 1152, 0, 1155, 0, 0, 1156, 0, 609,
	1036, 0, 0, 1054, 1055, 0, 1189, 0, 1194, 1195,
	0, 1200, 0, 1204, 0, 943, 900, 901, 948, 949,
	0, 0, 893, 1294, 81, 1295, 1292, 0, 1290, 1288,
	1347, 0, 1356, 1357, 1366, 1367, 1373, 0, 1379, 0,
	86, 0, 0, 0, 1305, 181, 0, 200, 0, 586,
	0, 589, 579, 666, 667, 0, 679, 671, 673, 674,
	656, -2, 1331, 0, 0, 0, 566, 1245, 0, 0,
	1157, 0, 605, 606, 1044, 1037, 0, 1022, 1023, 1041,
	1176, 1178, 0, 0, 0, 0, 942, 944, 945, 80,
	0, 1291, 1062, 0, 1359, 1360, 1387, 1385, 911, 918,
	0, 87, 420, 413, 1331, 0, 0, 0, 659, 660,
	661, 662, 663, 664, 665, 556, 1333, 129, 130, 486,
	487, 488, 123, 0, 1095, 1153, 1038, 0, 0, 0,
	0, 1034, 1035, 0, 1190, 0, 1196, 0, 1201, 0,
	902, 903, 1293, 0, 0, 591, 0, 593, 0, -2,
	408, 421, 0, 175, 201, 202, 0, 0, 205, 206,
	207, 198, 199, 119, 0, 0, 680, 0, 1334, 1335,
	126, 0, 0, 1029, 1030, 1031, 1032, 1033, 0, 0,
	0, 1063, 1042, 592, 0, 0, 363, 0, 602, 409,
	410, 0, 416, 417, 418, 419, 203, 204, 614, 0,
	0, 563, 1246, 0, 1191, 0, 1197, 0, 1202, 0,
	594, 595, 603, 0, 411, 0, 412, 0, 0, 0,
	583, 0, 614, 1332, 1039, 0, 0, 1061, 0, 604,
	600, 422, 424, 425, 0, 0, 423, 615, 584, 1192,
	1198, 0, 426, 427, 428, 596, 597, 598, 599,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 141, 3, 3, 3, 168, 160, 3,
	86, 88, 165, 163, 87, 164, 218, 166, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 648,
	149, 148, 150, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 170, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 137, 3, 171,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 138, 139, 140, 142, 143, 144, 145, 146,
	147, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	161, 162, 167, 169, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:582
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:587
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:588
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:592
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:628
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:634
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:640
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:645
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:649
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:655
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:659
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:665
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:671
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:677
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:681
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:686
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:690
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:696
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:700
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:706
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:712
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:716
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:720
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:743
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:749
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:754
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:760
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:767
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:773
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:780
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 63:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:784
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:790
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:794
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:798
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:802
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:806
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:812
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:816
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:821
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:825
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:831
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:835
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:840
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:846
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:852
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:859
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:865
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:873
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:877
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:883
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:895
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:907
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:911
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:917
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:923
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:927
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:931
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:935
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:940
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:941
		{
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:945
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:949
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:955
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:959
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:965
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:969
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 99:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:974
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:978
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:984
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:990
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:994
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: NoScope}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:1000
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1004
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1010
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1014
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1018
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1024
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1028
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1032
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1036
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1042
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1046
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1050
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1056
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1062
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1069
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1078
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1082
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1089
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1093
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1098
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1102
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1108
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 126:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1113
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1118
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1124
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1129
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1135
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 131:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1140
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1144
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1150
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1154
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1160
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 136:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1166
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1173
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1180
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1185
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1190
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1195
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1202
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1209
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1220
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1227
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1231
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1237
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1241
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1245
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1249
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1253
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1257
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 155:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1263
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1267
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1273
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1277
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1283
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1287
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1293
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1297
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1303
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1307
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1313
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1317
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1323
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1328
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1333
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1337
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1342
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1346
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1350
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 174:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1361
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1370
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1379
		{
			yyVAL.str = ""
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1383
		{
			yyVAL.str = ""
		}
	case 178:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1392
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1396
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1402
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1408
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1413
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1418
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1423
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1428
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1433
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1438
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1442
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1447
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1451
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1456
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1462
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1468
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 194:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1472
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1478
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1482
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1486
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1492
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1496
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1501
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1505
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1510
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1516
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1522
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1527
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1532
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1538
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1546
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1553
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1557
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1561
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1565
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1569
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1579
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1586
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1590
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1596
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1600
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1604
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1608
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1612
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1616
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1620
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1625
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1629
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1633
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1637
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1641
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1648
		{
			yyVAL.str = Armscii8Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1652
		{
			yyVAL.str = ASCIIStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1656
		{
			yyVAL.str = Big5Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1660
		{
			yyVAL.str = UBinaryStr
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1664
		{
			yyVAL.str = Cp1250Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1668
		{
			yyVAL.str = Cp1251Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1672
		{
			yyVAL.str = Cp1256Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1676
		{
			yyVAL.str = Cp1257Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1680
		{
			yyVAL.str = Cp850Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1684
		{
			yyVAL.str = Cp852Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1688
		{
			yyVAL.str = Cp866Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1692
		{
			yyVAL.str = Cp932Str
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1696
		{
			yyVAL.str = Dec8Str
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1700
		{
			yyVAL.str = EucjpmsStr
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1704
		{
			yyVAL.str = EuckrStr
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1708
		{
			yyVAL.str = Gb18030Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1712
		{
			yyVAL.str = Gb2312Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1716
		{
			yyVAL.str = GbkStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1720
		{
			yyVAL.str = Geostd8Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1724
		{
			yyVAL.str = GreekStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1728
		{
			yyVAL.str = HebrewStr
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1732
		{
			yyVAL.str = Hp8Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1736
		{
			yyVAL.str = Keybcs2Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1740
		{
			yyVAL.str = Koi8rStr
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1744
		{
			yyVAL.str = Koi8uStr
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1748
		{
			yyVAL.str = Latin1Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1752
		{
			yyVAL.str = Latin2Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1756
		{
			yyVAL.str = Latin5Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1760
		{
			yyVAL.str = Latin7Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1764
		{
			yyVAL.str = MacceStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1768
		{
			yyVAL.str = MacromanStr
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1772
		{
			yyVAL.str = SjisStr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1776
		{
			yyVAL.str = Swe7Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1780
		{
			yyVAL.str = Tis620Str
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1784
		{
			yyVAL.str = Ucs2Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1788
		{
			yyVAL.str = UjisStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1792
		{
			yyVAL.str = Utf16Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1796
		{
			yyVAL.str = Utf16leStr
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1800
		{
			yyVAL.str = Utf32Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1804
		{
			yyVAL.str = Utf8Str
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1808
		{
			yyVAL.str = Utf8mb4Str
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1812
		{
			yyVAL.str = Utf8Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1822
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1826
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1830
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1836
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1840
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1844
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1850
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1854
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1861
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1865
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1869
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1873
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1879
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1890
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1895
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1901
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1905
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1909
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1913
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1917
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1921
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1925
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1929
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1933
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1939
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1945
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1951
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1957
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1963
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1971
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1975
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1979
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1983
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1987
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1993
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1997
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2003
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2007
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2011
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2015
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2019
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2023
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2027
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2031
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2035
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2039
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2043
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2047
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 328:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2051
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 329:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2056
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2062
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2066
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2070
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2074
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2078
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2082
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2086
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2090
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2096
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2101
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2106
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2110
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2115
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 343:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2119
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 344:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2127
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2131
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 346:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2137
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2145
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2149
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2153
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2158
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2162
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2167
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2171
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2175
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2179
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2183
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2188
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2193
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2198
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2203
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2209
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2213
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2218
		{
			yyVAL.str = ""
		}
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2222
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2226
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 366:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2232
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2237
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2241
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2247
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2251
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2257
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2261
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2266
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2270
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2274
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2278
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2282
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2286
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2292
		{
			yyVAL.str = ""
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2296
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2302
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2306
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2310
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2314
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2318
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2323
		{
			yyVAL.str = ""
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2327
		{
			yyVAL.str = yyDollar[2].str
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2333
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2337
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2341
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2347
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2351
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2356
		{
			yyVAL.str = "key"
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2360
		{
			yyVAL.str = yyDollar[1].str
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2366
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2370
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2375
		{
			yyVAL.str = ""
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2379
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2385
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2389
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2395
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2399
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2405
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2409
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2415
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2419
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2425
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2431
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2435
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2439
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2443
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2447
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2452
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2456
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2462
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2468
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2474
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2478
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2482
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2487
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2491
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2497
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2503
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2509
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2513
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2517
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2521
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2525
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2530
		{
			yyVAL.str = ""
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2534
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2538
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2544
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2548
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2553
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2557
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2562
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2566
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2572
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2576
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2580
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2586
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2590
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2596
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2600
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2604
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2608
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2612
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2616
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2620
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2624
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2628
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2632
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2636
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2640
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2644
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2648
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2652
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2656
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2660
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2664
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2668
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2672
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2676
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2680
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2684
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2688
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2692
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2696
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2700
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2704
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2708
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2712
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2716
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2721
		{
			yyVAL.str = ""
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2725
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2729
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2748
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2752
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2756
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2761
		{
			yyVAL.str = ""
		}
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2767
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2771
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2776
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2780
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2785
		{
			yyVAL.str = ""
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2789
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2794
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2798
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2802
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2807
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2811
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2815
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2819
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2823
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 505:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2827
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2833
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2837
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2841
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2847
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2851
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2855
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2859
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2863
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2867
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2871
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2875
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2879
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2883
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2888
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2893
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2897
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2901
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2905
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2909
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2913
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2917
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2921
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2925
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2929
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2933
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2937
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2941
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2945
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2949
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2953
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2957
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2961
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2965
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2969
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2975
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2979
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2985
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2989
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2993
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2997
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3001
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3005
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3009
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3013
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3017
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3021
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3027
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3034
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3041
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3048
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3054
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3064
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3071
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3078
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3090
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3100
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3104
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3108
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3121
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3131
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3135
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3146
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3153
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3160
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3167
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3174
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3180
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3189
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3197
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3204
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3211
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3215
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3224
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3232
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3241
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3248
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3256
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3260
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3269
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3280
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3284
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3289
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3293
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3298
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3302
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3308
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3314
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3320
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3324
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3330
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3334
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3340
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3346
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3352
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3358
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3364
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3368
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3372
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3376
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3382
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3388
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3394
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3398
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3402
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3408
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3412
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3417
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3421
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3426
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3430
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3436
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3440
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3444
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3448
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3452
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3456
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3460
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3464
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3468
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3472
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3476
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3480
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3484
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3488
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3492
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3496
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3500
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3504
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3508
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3512
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3516
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3520
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3525
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3529
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3533
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3539
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3543
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3549
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3554
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3558
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3563
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3568
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3573
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3578
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3583
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3589
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3595
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3600
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3606
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3612
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3616
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3622
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3627
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3631
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3636
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3641
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3646
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3651
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3657
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3663
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3670
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3677
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3684
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3692
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3696
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3702
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3708
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3714
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3720
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3726
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3732
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3738
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3744
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3750
		{
			yyVAL.str = ""
		}
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3754
		{
			yyVAL.str = ""
		}
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3760
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3766
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3770
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 684:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3776
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3780
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3789
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3793
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3799
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3803
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3809
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3815
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3819
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3823
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3827
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3831
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3835
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3839
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3843
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3847
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3851
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3855
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3859
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3863
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3867
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3871
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3875
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3879
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3883
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3887
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3891
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3895
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3899
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3903
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3907
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3911
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3915
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3919
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3923
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3927
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3931
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3935
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3939
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3943
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3947
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3951
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3955
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3959
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3963
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3967
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3971
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3975
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3979
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3986
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3990
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3994
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3998
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4002
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4006
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4010
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4014
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4018
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4024
		{
			yyVAL.str = ""
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4028
		{
			yyVAL.str = "extended "
		}
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4034
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4038
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4044
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4048
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4054
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4058
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4062
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4068
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4072
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4076
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4082
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4086
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4092
		{
			yyVAL.empty = struct{}{}
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4096
		{
			yyVAL.empty = struct{}{}
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4100
		{
			yyVAL.empty = struct{}{}
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4106
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4110
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4116
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4120
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4124
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4131
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4135
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4139
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4143
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4150
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4154
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4160
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4166
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4170
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4175
		{
			yyVAL.empty = struct{}{}
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4177
		{
			yyVAL.empty = struct{}{}
		}
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4180
		{
			yyVAL.empty = struct{}{}
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4182
		{
			yyVAL.empty = struct{}{}
		}
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4186
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4192
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4197
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4201
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4205
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4209
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4213
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4217
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4223
		{
			yyVAL.str = yyDollar[1].str
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4227
		{
			yyVAL.str = yyDollar[1].str
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4231
		{
			yyVAL.str = yyDollar[1].str
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4237
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4241
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4245
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4249
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4254
		{
			yyVAL.str = ""
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4258
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4262
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4268
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4272
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4278
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4282
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4288
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4294
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4298
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4304
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4310
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4314
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4318
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4322
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4328
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4334
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4340
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4344
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4348
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4352
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4356
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4360
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4366
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4370
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4376
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4380
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4384
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4388
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4392
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4396
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4400
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4404
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4408
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4412
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4416
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4420
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4425
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4429
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4433
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4438
		{
			yyVAL.str = ""
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4442
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4447
		{
			setAllowComments(yylex, true)
		}
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4451
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4457
		{
			yyVAL.strs = nil
		}
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4461
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4467
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4471
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4475
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4480
		{
			yyVAL.str = ""
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4484
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4488
		{
			yyVAL.str = SQLCacheStr
		}
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4493
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4497
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4501
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4507
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4511
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4521
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4526
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4530
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4536
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4540
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4545
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4549
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4554
		{
			yyVAL.strs = nil
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4558
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4562
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4566
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 860:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4570
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4576
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4580
		{
			yyVAL.str = SQLCacheStr
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4584
		{
			yyVAL.str = DistinctStr
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4588
		{
			yyVAL.str = DistinctStr
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4592
		{
			yyVAL.str = StraightJoinHint
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4596
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4600
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4606
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4610
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4616
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4620
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4624
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4628
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4633
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4637
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4641
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4648
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4653
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4657
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4663
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4669
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4673
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4683
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4687
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4691
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4695
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4701
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4705
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4711
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4715
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4720
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4724
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4730
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4734
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4740
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4744
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4750
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4754
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4758
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4762
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4768
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4772
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 906:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4785
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4789
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4793
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4797
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4803
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 911:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4805
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4809
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4811
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4815
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4817
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4820
		{
			yyVAL.empty = struct{}{}
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4822
		{
			yyVAL.empty = struct{}{}
		}
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4825
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4829
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4833
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4840
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4846
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4850
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4854
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4860
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4866
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4870
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4874
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4878
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4884
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4888
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4898
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4902
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4908
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4912
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4918
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4923
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4927
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4933
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4937
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 942:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4943
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4947
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4951
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4955
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4960
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4964
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4968
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4972
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4978
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4982
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4989
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4993
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4997
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5001
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5005
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5009
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5013
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5019
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5023
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5027
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5031
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5037
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5041
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5045
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5049
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5053
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5057
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5061
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5065
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5069
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5073
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5077
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5083
		{
		}
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5086
		{
		}
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5092
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5096
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5100
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5104
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5108
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5112
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5116
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5120
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5124
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5128
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5132
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5136
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5140
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5146
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5150
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5154
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5158
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5162
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5166
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5170
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5174
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5178
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5182
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5186
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5190
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5194
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5198
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5202
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5206
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5210
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5214
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5218
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5222
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5230
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5234
		{
			// INTERVAL can trigger a shift / reduce conflict. We want
			// to shift here for the interval rule. In case we do have
			// the additional expression_list below, we'd pick that path
			// and thus properly parse it as a function when needed.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5242
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5246
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5250
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5256
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5262
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5266
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5272
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5276
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5282
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5286
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5290
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5296
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5300
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5307
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5311
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5315
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5319
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5323
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5329
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5333
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5337
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5341
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5345
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5351
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5355
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5360
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5364
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5370
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5374
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5379
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5383
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5388
		{
		}
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5391
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1044:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5397
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5403
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5407
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5412
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5419
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5425
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5429
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5435
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5439
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5445
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5449
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5454
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5461
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5467
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5471
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5477
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5483
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5487
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1064:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5493
		{
			yyVAL.str = ""
		}
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5497
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5503
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5507
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5514
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5518
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5522
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5526
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5532
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5536
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5540
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5544
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5548
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5552
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5556
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5562
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5566
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5570
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5577
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5583
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5587
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1085:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5597
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5601
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5611
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5615
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5619
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5623
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5627
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5631
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5635
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5639
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5643
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5647
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5658
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5662
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5668
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5672
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5677
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5681
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5685
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5689
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5693
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5697
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5701
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5705
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5709
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5713
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5717
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5721
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5725
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5729
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5733
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5737
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5741
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5745
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5749
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5753
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5757
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5761
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5765
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5769
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5773
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5777
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5781
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5785
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5789
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5793
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5797
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5801
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5805
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5809
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5813
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5817
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5821
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5825
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5829
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5833
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5837
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5841
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5845
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5849
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5853
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5857
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5861
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5865
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5869
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5873
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5877
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5881
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5885
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5889
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5893
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5897
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5901
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5905
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5909
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5913
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5917
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5921
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5925
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5929
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5933
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5937
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5941
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5945
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5949
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5953
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5957
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5961
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5965
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5969
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5973
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5977
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5981
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5985
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5994
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5998
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6002
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6006
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6012
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6016
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6022
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6026
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6030
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6034
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6038
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6043
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6047
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6051
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6055
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6059
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6063
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6068
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6072
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6076
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6080
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6087
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6091
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6097
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6101
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6105
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6109
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6114
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6118
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6124
		{
		}
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6126
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6130
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6134
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6138
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6142
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6146
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6150
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6154
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6158
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6162
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6166
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6172
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6176
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6180
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6184
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6188
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6192
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6196
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6200
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6204
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6214
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6218
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6222
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6226
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6237
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6241
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6245
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6249
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6253
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6259
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6263
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6267
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6271
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6275
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6281
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6285
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6289
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1251:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6295
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6299
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6303
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6309
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6313
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6317
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6321
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6325
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6331
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6335
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6339
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6343
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6347
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6351
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6355
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6359
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6363
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6367
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6373
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6377
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6382
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6386
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6391
		{
			yyVAL.str = string("")
		}
	case 1274:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6395
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:6401
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6405
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:6411
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6416
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6420
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6426
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6430
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6434
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6438
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6444
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6453
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6457
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6463
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6467
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6472
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6476
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:6482
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6488
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6492
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1294:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6497
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6501
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6506
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6510
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6516
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6522
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6526
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:6532
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6537
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6541
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6545
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6550
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6554
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6560
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6564
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6568
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6573
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6577
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6581
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6585
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6589
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6596
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6600
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6604
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6608
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6614
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6618
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6622
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6626
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6631
		{
			yyVAL.str = ""
		}
	case 1324:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6635
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1325:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6639
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1326:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6643
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1327:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6648
		{
			yyVAL.str = ""
		}
	case 1328:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6652
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6658
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6662
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1331:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6667
		{
			yyVAL.str = ""
		}
	case 1332:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6671
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6676
		{
			yyVAL.str = "cascaded"
		}
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6680
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6684
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1336:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6689
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6693
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6699
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6705
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6711
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6720
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6724
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6729
		{
			yyVAL.str = ""
		}
	case 1344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6733
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6739
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6743
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6749
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6753
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6757
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6762
		{
			yyVAL.str = ""
		}
	case 1351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6766
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6770
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1353:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6775
		{
			yyVAL.str = ""
		}
	case 1354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6779
		{
			yyVAL.str = " header"
		}
	case 1355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6784
		{
			yyVAL.str = ""
		}
	case 1356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6788
		{
			yyVAL.str = " manifest on"
		}
	case 1357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6792
		{
			yyVAL.str = " manifest off"
		}
	case 1358:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6797
		{
			yyVAL.str = ""
		}
	case 1359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6801
		{
			yyVAL.str = " overwrite on"
		}
	case 1360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6805
		{
			yyVAL.str = " overwrite off"
		}
	case 1361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6811
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6816
		{
			yyVAL.str = ""
		}
	case 1363:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6820
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6826
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6830
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1366:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6836
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6840
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1368:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6845
		{
			yyVAL.str = ""
		}
	case 1369:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6849
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6855
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1371:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6859
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6865
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1373:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6869
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6873
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1375:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6878
		{
			yyVAL.str = ""
		}
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6882
		{
			yyVAL.str = " optionally"
		}
	case 1377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6895
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6899
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6903
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6907
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6911
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6917
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6921
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6925
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1385:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6929
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1386:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6934
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6938
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6944
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6948
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6954
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6958
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6964
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6968
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6973
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6983
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6987
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6993
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6999
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7003
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:7009
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:7013
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:7017
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:7021
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:7027
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:7031
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:7035
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7042
		{
			yyVAL.str = "charset"
		}
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7052
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7056
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7060
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7069
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7071
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7074
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7076
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7079
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7081
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7084
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7086
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7089
		{
			yyVAL.empty = struct{}{}
		}
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7091
		{
			yyVAL.empty = struct{}{}
		}
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7093
		{
			yyVAL.empty = struct{}{}
		}
	case 1427:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7097
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7102
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7106
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7111
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7113
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7117
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7123
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7127
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7134
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7140
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7144
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1439:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7150
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7154
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7161
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1979:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7724
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1980:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7733
		{
			decNesting(yylex)
		}
	case 1981:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7738
		{
			skipToEnd(yylex)
		}
	case 1982:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7743
		{
			skipToEnd(yylex)
		}
	case 1983:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7747
		{
			skipToEnd(yylex)
		}
	case 1984:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7751
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
