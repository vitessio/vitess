// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const ALGORITHM = 57422
const NONE = 57423
const SHARED = 57424
const EXCLUSIVE = 57425
const SUBQUERY_AS_EXPR = 57426
const ID = 57427
const AT_ID = 57428
const AT_AT_ID = 57429
const HEX = 57430
const STRING = 57431
const NCHAR_STRING = 57432
const INTEGRAL = 57433
const FLOAT = 57434
const DECIMAL = 57435
const HEXNUM = 57436
const VALUE_ARG = 57437
const LIST_ARG = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BIT_LITERAL = 57441
const COMPRESSION = 57442
const JSON_PRETTY = 57443
const JSON_STORAGE_SIZE = 57444
const JSON_STORAGE_FREE = 57445
const JSON_CONTAINS = 57446
const JSON_CONTAINS_PATH = 57447
const JSON_EXTRACT = 57448
const JSON_KEYS = 57449
const JSON_OVERLAPS = 57450
const JSON_SEARCH = 57451
const JSON_VALUE = 57452
const EXTRACT = 57453
const NULL = 57454
const TRUE = 57455
const FALSE = 57456
const OFF = 57457
const DISCARD = 57458
const IMPORT = 57459
const ENABLE = 57460
const DISABLE = 57461
const TABLESPACE = 57462
const VIRTUAL = 57463
const STORED = 57464
const BOTH = 57465
const LEADING = 57466
const TRAILING = 57467
const EMPTY_FROM_CLAUSE = 57468
const LOWER_THAN_CHARSET = 57469
const CHARSET = 57470
const UNIQUE = 57471
const KEY = 57472
const EXPRESSION_PREC_SETTER = 57473
const OR = 57474
const XOR = 57475
const AND = 57476
const NOT = 57477
const BETWEEN = 57478
const CASE = 57479
const WHEN = 57480
const THEN = 57481
const ELSE = 57482
const END = 57483
const LE = 57484
const GE = 57485
const NE = 57486
const NULL_SAFE_EQUAL = 57487
const IS = 57488
const LIKE = 57489
const REGEXP = 57490
const IN = 57491
const SHIFT_LEFT = 57492
const SHIFT_RIGHT = 57493
const DIV = 57494
const MOD = 57495
const UNARY = 57496
const COLLATE = 57497
const BINARY = 57498
const UNDERSCORE_ARMSCII8 = 57499
const UNDERSCORE_ASCII = 57500
const UNDERSCORE_BIG5 = 57501
const UNDERSCORE_BINARY = 57502
const UNDERSCORE_CP1250 = 57503
const UNDERSCORE_CP1251 = 57504
const UNDERSCORE_CP1256 = 57505
const UNDERSCORE_CP1257 = 57506
const UNDERSCORE_CP850 = 57507
const UNDERSCORE_CP852 = 57508
const UNDERSCORE_CP866 = 57509
const UNDERSCORE_CP932 = 57510
const UNDERSCORE_DEC8 = 57511
const UNDERSCORE_EUCJPMS = 57512
const UNDERSCORE_EUCKR = 57513
const UNDERSCORE_GB18030 = 57514
const UNDERSCORE_GB2312 = 57515
const UNDERSCORE_GBK = 57516
const UNDERSCORE_GEOSTD8 = 57517
const UNDERSCORE_GREEK = 57518
const UNDERSCORE_HEBREW = 57519
const UNDERSCORE_HP8 = 57520
const UNDERSCORE_KEYBCS2 = 57521
const UNDERSCORE_KOI8R = 57522
const UNDERSCORE_KOI8U = 57523
const UNDERSCORE_LATIN1 = 57524
const UNDERSCORE_LATIN2 = 57525
const UNDERSCORE_LATIN5 = 57526
const UNDERSCORE_LATIN7 = 57527
const UNDERSCORE_MACCE = 57528
const UNDERSCORE_MACROMAN = 57529
const UNDERSCORE_SJIS = 57530
const UNDERSCORE_SWE7 = 57531
const UNDERSCORE_TIS620 = 57532
const UNDERSCORE_UCS2 = 57533
const UNDERSCORE_UJIS = 57534
const UNDERSCORE_UTF16 = 57535
const UNDERSCORE_UTF16LE = 57536
const UNDERSCORE_UTF32 = 57537
const UNDERSCORE_UTF8 = 57538
const UNDERSCORE_UTF8MB4 = 57539
const INTERVAL = 57540
const JSON_EXTRACT_OP = 57541
const JSON_UNQUOTE_EXTRACT_OP = 57542
const CREATE = 57543
const ALTER = 57544
const DROP = 57545
const RENAME = 57546
const ANALYZE = 57547
const ADD = 57548
const FLUSH = 57549
const CHANGE = 57550
const MODIFY = 57551
const DEALLOCATE = 57552
const REVERT = 57553
const SCHEMA = 57554
const TABLE = 57555
const INDEX = 57556
const VIEW = 57557
const TO = 57558
const IGNORE = 57559
const IF = 57560
const PRIMARY = 57561
const COLUMN = 57562
const SPATIAL = 57563
const FULLTEXT = 57564
const KEY_BLOCK_SIZE = 57565
const CHECK = 57566
const INDEXES = 57567
const ACTION = 57568
const CASCADE = 57569
const CONSTRAINT = 57570
const FOREIGN = 57571
const NO = 57572
const REFERENCES = 57573
const RESTRICT = 57574
const SHOW = 57575
const DESCRIBE = 57576
const EXPLAIN = 57577
const DATE = 57578
const ESCAPE = 57579
const REPAIR = 57580
const OPTIMIZE = 57581
const TRUNCATE = 57582
const COALESCE = 57583
const EXCHANGE = 57584
const REBUILD = 57585
const PARTITIONING = 57586
const REMOVE = 57587
const PREPARE = 57588
const EXECUTE = 57589
const MAXVALUE = 57590
const PARTITION = 57591
const REORGANIZE = 57592
const LESS = 57593
const THAN = 57594
const PROCEDURE = 57595
const TRIGGER = 57596
const VINDEX = 57597
const VINDEXES = 57598
const DIRECTORY = 57599
const NAME = 57600
const UPGRADE = 57601
const STATUS = 57602
const VARIABLES = 57603
const WARNINGS = 57604
const CASCADED = 57605
const DEFINER = 57606
const OPTION = 57607
const SQL = 57608
const UNDEFINED = 57609
const SEQUENCE = 57610
const MERGE = 57611
const TEMPORARY = 57612
const TEMPTABLE = 57613
const INVOKER = 57614
const SECURITY = 57615
const FIRST = 57616
const AFTER = 57617
const LAST = 57618
const VITESS_MIGRATION = 57619
const CANCEL = 57620
const RETRY = 57621
const COMPLETE = 57622
const CLEANUP = 57623
const BEGIN = 57624
const START = 57625
const TRANSACTION = 57626
const COMMIT = 57627
const ROLLBACK = 57628
const SAVEPOINT = 57629
const RELEASE = 57630
const WORK = 57631
const BIT = 57632
const TINYINT = 57633
const SMALLINT = 57634
const MEDIUMINT = 57635
const INT = 57636
const INTEGER = 57637
const BIGINT = 57638
const INTNUM = 57639
const REAL = 57640
const DOUBLE = 57641
const FLOAT_TYPE = 57642
const DECIMAL_TYPE = 57643
const NUMERIC = 57644
const TIME = 57645
const TIMESTAMP = 57646
const DATETIME = 57647
const YEAR = 57648
const CHAR = 57649
const VARCHAR = 57650
const BOOL = 57651
const CHARACTER = 57652
const VARBINARY = 57653
const NCHAR = 57654
const TEXT = 57655
const TINYTEXT = 57656
const MEDIUMTEXT = 57657
const LONGTEXT = 57658
const BLOB = 57659
const TINYBLOB = 57660
const MEDIUMBLOB = 57661
const LONGBLOB = 57662
const JSON = 57663
const JSON_SCHEMA_VALID = 57664
const JSON_SCHEMA_VALIDATION_REPORT = 57665
const ENUM = 57666
const GEOMETRY = 57667
const POINT = 57668
const LINESTRING = 57669
const POLYGON = 57670
const GEOMETRYCOLLECTION = 57671
const MULTIPOINT = 57672
const MULTILINESTRING = 57673
const MULTIPOLYGON = 57674
const ASCII = 57675
const UNICODE = 57676
const NULLX = 57677
const AUTO_INCREMENT = 57678
const APPROXNUM = 57679
const SIGNED = 57680
const UNSIGNED = 57681
const ZEROFILL = 57682
const CODE = 57683
const COLLATION = 57684
const COLUMNS = 57685
const DATABASES = 57686
const ENGINES = 57687
const EVENT = 57688
const EXTENDED = 57689
const FIELDS = 57690
const FULL = 57691
const FUNCTION = 57692
const GTID_EXECUTED = 57693
const KEYSPACES = 57694
const OPEN = 57695
const PLUGINS = 57696
const PRIVILEGES = 57697
const PROCESSLIST = 57698
const SCHEMAS = 57699
const TABLES = 57700
const TRIGGERS = 57701
const USER = 57702
const VGTID_EXECUTED = 57703
const VITESS_KEYSPACES = 57704
const VITESS_METADATA = 57705
const VITESS_MIGRATIONS = 57706
const VITESS_REPLICATION_STATUS = 57707
const VITESS_SHARDS = 57708
const VITESS_TABLETS = 57709
const VITESS_TARGET = 57710
const VSCHEMA = 57711
const NAMES = 57712
const GLOBAL = 57713
const SESSION = 57714
const ISOLATION = 57715
const LEVEL = 57716
const READ = 57717
const WRITE = 57718
const ONLY = 57719
const REPEATABLE = 57720
const COMMITTED = 57721
const UNCOMMITTED = 57722
const SERIALIZABLE = 57723
const CURRENT_TIMESTAMP = 57724
const DATABASE = 57725
const CURRENT_DATE = 57726
const NOW = 57727
const CURRENT_TIME = 57728
const LOCALTIME = 57729
const LOCALTIMESTAMP = 57730
const CURRENT_USER = 57731
const UTC_DATE = 57732
const UTC_TIME = 57733
const UTC_TIMESTAMP = 57734
const DAY = 57735
const DAY_HOUR = 57736
const DAY_MICROSECOND = 57737
const DAY_MINUTE = 57738
const DAY_SECOND = 57739
const HOUR = 57740
const HOUR_MICROSECOND = 57741
const HOUR_MINUTE = 57742
const HOUR_SECOND = 57743
const MICROSECOND = 57744
const MINUTE = 57745
const MINUTE_MICROSECOND = 57746
const MINUTE_SECOND = 57747
const MONTH = 57748
const QUARTER = 57749
const SECOND = 57750
const SECOND_MICROSECOND = 57751
const YEAR_MONTH = 57752
const WEEK = 57753
const REPLACE = 57754
const CONVERT = 57755
const CAST = 57756
const SUBSTR = 57757
const SUBSTRING = 57758
const GROUP_CONCAT = 57759
const SEPARATOR = 57760
const TIMESTAMPADD = 57761
const TIMESTAMPDIFF = 57762
const WEIGHT_STRING = 57763
const LTRIM = 57764
const RTRIM = 57765
const TRIM = 57766
const JSON_ARRAY = 57767
const JSON_OBJECT = 57768
const JSON_QUOTE = 57769
const JSON_DEPTH = 57770
const JSON_TYPE = 57771
const JSON_LENGTH = 57772
const JSON_VALID = 57773
const JSON_ARRAY_APPEND = 57774
const JSON_ARRAY_INSERT = 57775
const JSON_INSERT = 57776
const JSON_MERGE = 57777
const JSON_MERGE_PATCH = 57778
const JSON_MERGE_PRESERVE = 57779
const JSON_REMOVE = 57780
const JSON_REPLACE = 57781
const JSON_SET = 57782
const JSON_UNQUOTE = 57783
const MATCH = 57784
const AGAINST = 57785
const BOOLEAN = 57786
const LANGUAGE = 57787
const WITH = 57788
const QUERY = 57789
const EXPANSION = 57790
const WITHOUT = 57791
const VALIDATION = 57792
const UNUSED = 57793
const ARRAY = 57794
const CUME_DIST = 57795
const DESCRIPTION = 57796
const DENSE_RANK = 57797
const EMPTY = 57798
const EXCEPT = 57799
const FIRST_VALUE = 57800
const GROUPING = 57801
const GROUPS = 57802
const JSON_TABLE = 57803
const LAG = 57804
const LAST_VALUE = 57805
const LATERAL = 57806
const LEAD = 57807
const NTH_VALUE = 57808
const NTILE = 57809
const OF = 57810
const OVER = 57811
const PERCENT_RANK = 57812
const RANK = 57813
const RECURSIVE = 57814
const ROW_NUMBER = 57815
const SYSTEM = 57816
const WINDOW = 57817
const ACTIVE = 57818
const ADMIN = 57819
const AUTOEXTEND_SIZE = 57820
const BUCKETS = 57821
const CLONE = 57822
const COMPONENT = 57823
const DEFINITION = 57824
const ENFORCED = 57825
const ENGINE_ATTRIBUTE = 57826
const EXCLUDE = 57827
const FOLLOWING = 57828
const GEOMCOLLECTION = 57829
const GET_MASTER_PUBLIC_KEY = 57830
const HISTOGRAM = 57831
const HISTORY = 57832
const INACTIVE = 57833
const INVISIBLE = 57834
const LOCKED = 57835
const MASTER_COMPRESSION_ALGORITHMS = 57836
const MASTER_PUBLIC_KEY_PATH = 57837
const MASTER_TLS_CIPHERSUITES = 57838
const MASTER_ZSTD_COMPRESSION_LEVEL = 57839
const NESTED = 57840
const NETWORK_NAMESPACE = 57841
const NOWAIT = 57842
const NULLS = 57843
const OJ = 57844
const OLD = 57845
const OPTIONAL = 57846
const ORDINALITY = 57847
const ORGANIZATION = 57848
const OTHERS = 57849
const PATH = 57850
const PERSIST = 57851
const PERSIST_ONLY = 57852
const PRECEDING = 57853
const PRIVILEGE_CHECKS_USER = 57854
const PROCESS = 57855
const RANDOM = 57856
const REFERENCE = 57857
const REQUIRE_ROW_FORMAT = 57858
const RESOURCE = 57859
const RESPECT = 57860
const RESTART = 57861
const RETAIN = 57862
const REUSE = 57863
const ROLE = 57864
const SECONDARY = 57865
const SECONDARY_ENGINE = 57866
const SECONDARY_ENGINE_ATTRIBUTE = 57867
const SECONDARY_LOAD = 57868
const SECONDARY_UNLOAD = 57869
const SKIP = 57870
const SRID = 57871
const THREAD_PRIORITY = 57872
const TIES = 57873
const UNBOUNDED = 57874
const VCPU = 57875
const VISIBLE = 57876
const RETURNING = 57877
const FORMAT = 57878
const TREE = 57879
const VITESS = 57880
const TRADITIONAL = 57881
const LOCAL = 57882
const LOW_PRIORITY = 57883
const NO_WRITE_TO_BINLOG = 57884
const LOGS = 57885
const ERROR = 57886
const GENERAL = 57887
const HOSTS = 57888
const OPTIMIZER_COSTS = 57889
const USER_RESOURCES = 57890
const SLOW = 57891
const CHANNEL = 57892
const RELAY = 57893
const EXPORT = 57894
const AVG_ROW_LENGTH = 57895
const CONNECTION = 57896
const CHECKSUM = 57897
const DELAY_KEY_WRITE = 57898
const ENCRYPTION = 57899
const ENGINE = 57900
const INSERT_METHOD = 57901
const MAX_ROWS = 57902
const MIN_ROWS = 57903
const PACK_KEYS = 57904
const PASSWORD = 57905
const FIXED = 57906
const DYNAMIC = 57907
const COMPRESSED = 57908
const REDUNDANT = 57909
const COMPACT = 57910
const ROW_FORMAT = 57911
const STATS_AUTO_RECALC = 57912
const STATS_PERSISTENT = 57913
const STATS_SAMPLE_PAGES = 57914
const STORAGE = 57915
const MEMORY = 57916
const DISK = 57917
const PARTITIONS = 57918
const LINEAR = 57919
const RANGE = 57920
const LIST = 57921
const SUBPARTITION = 57922
const SUBPARTITIONS = 57923
const HASH = 57924

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	600, 145,
	-2, 151,
	-1, 48,
	131, 151,
	171, 151,
	327, 151,
	-2, 464,
	-1, 55,
	35, 679,
	231, 679,
	242, 679,
	277, 693,
	278, 693,
	-2, 681,
	-1, 60,
	233, 706,
	-2, 704,
	-1, 114,
	230, 1230,
	-2, 119,
	-1, 116,
	1, 146,
	600, 146,
	-2, 151,
	-1, 126,
	132, 362,
	236, 362,
	-2, 458,
	-1, 145,
	131, 151,
	171, 151,
	327, 151,
	-2, 473,
	-1, 683,
	215, 1251,
	-2, 1247,
	-1, 684,
	215, 1252,
	-2, 1248,
	-1, 758,
	59, 774,
	-2, 789,
	-1, 795,
	147, 1653,
	-2, 112,
	-1, 796,
	147, 1497,
	-2, 113,
	-1, 802,
	147, 1580,
	-2, 1224,
	-1, 950,
	147, 1427,
	-2, 1221,
	-1, 989,
	241, 41,
	246, 41,
	-2, 373,
	-1, 1069,
	1, 512,
	600, 512,
	-2, 151,
	-1, 1306,
	59, 775,
	-2, 794,
	-1, 1307,
	59, 776,
	-2, 795,
	-1, 1360,
	131, 151,
	171, 151,
	327, 151,
	-2, 405,
	-1, 1438,
	132, 362,
	236, 362,
	-2, 458,
	-1, 1447,
	241, 42,
	246, 42,
	-2, 374,
	-1, 1749,
	215, 1256,
	-2, 1250,
	-1, 1832,
	131, 151,
	171, 151,
	327, 151,
	-2, 406,
	-1, 1839,
	25, 170,
	-2, 172,
	-1, 2077,
	86, 39,
	-2, 831,
	-1, 2129,
	77, 94,
	86, 94,
	-2, 851,
	-1, 2196,
	575, 607,
	-2, 594,
	-1, 2329,
	49, 1192,
	-2, 1186,
	-1, 2538,
	86, 39,
	-2, 832,
	-1, 2576,
	7, 53,
	18, 53,
	20, 53,
	87, 53,
	-2, 823,
	-1, 2888,
	22, 1582,
	32, 1582,
	172, 1582,
	253, 1582,
	307, 1582,
	308, 1582,
	309, 1582,
	310, 1582,
	311, 1582,
	312, 1582,
	313, 1582,
	315, 1582,
	316, 1582,
	317, 1582,
	318, 1582,
	319, 1582,
	320, 1582,
	321, 1582,
	322, 1582,
	323, 1582,
	324, 1582,
	325, 1582,
	326, 1582,
	328, 1582,
	330, 1582,
	331, 1582,
	332, 1582,
	333, 1582,
	334, 1582,
	335, 1582,
	336, 1582,
	337, 1582,
	338, 1582,
	341, 1582,
	342, 1582,
	343, 1582,
	344, 1582,
	345, 1582,
	346, 1582,
	347, 1582,
	348, 1582,
	349, 1582,
	461, 1582,
	-2, 552,
}

const yyPrivate = 57344

const yyLast = 42035

var yyAct = [...]int{
	683, 692, 2666, 2939, 2288, 2667, 2643, 1829, 2668, 2820,
	2889, 2933, 2890, 2469, 2382, 3, 1363, 685, 2870, 2031,
	2773, 1783, 2886, 2389, 1132, 773, 2425, 1765, 1763, 2340,
	2796, 2343, 751, 2681, 1285, 2065, 601, 2250, 2341, 676,
	37, 1897, 2452, 677, 2451, 96, 1321, 2391, 2100, 2344,
	2541, 185, 2287, 2286, 185, 2686, 566, 185, 598, 674,
	2547, 686, 581, 675, 185, 1802, 627, 2454, 2567, 2123,
	2338, 2330, 185, 2092, 2533, 2161, 1862, 2233, 1867, 599,
	2193, 2162, 1887, 953, 2163, 1417, 154, 185, 597, 1818,
	36, 2112, 800, 1308, 774, 1807, 38, 2067, 1806, 1718,
	2084, 1659, 593, 1787, 140, 997, 1743, 1886, 1719, 581,
	1906, 1649, 581, 185, 581, 1607, 1794, 755, 1939, 759,
	1869, 2155, 753, 1461, 984, 1445, 979, 1352, 1330, 1809,
	610, 1019, 95, 797, 2131, 1288, 1217, 776, 1671, 1626,
	1153, 960, 1556, 1552, 990, 1884, 1452, 605, 91, 1538,
	1858, 961, 985, 986, 957, 1351, 765, 1349, 1335, 1412,
	1124, 1788, 1130, 158, 1561, 1081, 117, 987, 1715, 118,
	760, 102, 123, 1437, 124, 787, 761, 763, 76, 1065,
	97, 1224, 588, 1756, 85, 2829, 98, 1220, 2186, 89,
	2940, 2422, 2443, 1110, 1899, 1900, 1901, 1899, 2212, 2211,
	1937, 2184, 2626, 2241, 781, 2440, 786, 1523, 762, 77,
	2242, 119, 104, 105, 2851, 108, 1614, 538, 114, 8,
	90, 182, 125, 7, 533, 6, 1613, 187, 188, 189,
	1612, 2850, 1024, 1001, 2671, 1611, 954, 1746, 2671, 767,
	1760, 1761, 1610, 1609, 747, 748, 749, 750, 589, 2441,
	758, 1592, 1154, 591, 1601, 592, 754, 752, 2063, 1032,
	2905, 2326, 2521, 965, 970, 2094, 794, 2953, 1154, 2915,
	801, 2447, 2930, 2406, 1021, 768, 2602, 1619, 789, 790,
	119, 977, 775, 976, 2769, 2768, 975, 1035, 1036, 1037,
	1315, 1040, 1041, 1042, 1043, 1000, 1023, 1046, 1047, 1048,
	1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058,
	1059, 1060, 1061, 1062, 1025, 1026, 1027, 1022, 2670, 2851,
	1038, 2636, 2670, 78, 2637, 78, 2952, 2880, 78, 2943,
	181, 2846, 1977, 2928, 2644, 187, 188, 189, 2871, 1925,
	2879, 2249, 2503, 1427, 1353, 2845, 1354, 119, 78, 2103,
	2064, 80, 2379, 2380, 120, 2220, 142, 1164, 1878, 2219,
	1824, 1825, 1068, 1186, 2378, 2140, 2240, 163, 2139, 1974,
	1823, 2141, 2699, 1164, 2104, 1105, 1106, 1127, 570, 2444,
	1100, 1117, 1872, 1119, 2778, 1187, 1188, 1189, 1190, 1191,
	1192, 1193, 1195, 1194, 1196, 1197, 1975, 1701, 152, 1088,
	87, 745, 87, 141, 1089, 87, 1762, 744, 1088, 2187,
	2821, 2152, 1087, 1089, 1086, 974, 2544, 1074, 1075, 567,
	2276, 1116, 1118, 1101, 160, 87, 161, 1094, 1842, 1841,
	2494, 2492, 2471, 969, 579, 1600, 971, 583, 1951, 1948,
	1950, 1949, 129, 130, 151, 150, 180, 1064, 577, 1077,
	1544, 1292, 1160, 570, 2194, 1152, 1907, 2215, 1953, 1513,
	1954, 1945, 1955, 1940, 2942, 554, 1107, 570, 1160, 570,
	1602, 1603, 1604, 972, 570, 2464, 1108, 552, 1539, 1126,
	1121, 1103, 1104, 2465, 1693, 1682, 1683, 1684, 1685, 1695,
	1686, 1687, 1688, 1700, 1696, 1689, 1690, 1697, 1698, 1699,
	1691, 1692, 1694, 1514, 1102, 1515, 1109, 1039, 1095, 978,
	1070, 974, 1063, 2472, 1114, 2228, 1946, 549, 1115, 2628,
	2627, 1871, 2756, 1956, 1045, 1044, 562, 2473, 1120, 1942,
	974, 1008, 966, 185, 1006, 185, 2624, 2906, 185, 968,
	967, 559, 146, 127, 153, 134, 126, 87, 147, 148,
	1910, 1113, 980, 1803, 164, 1944, 981, 981, 1017, 1016,
	1015, 1014, 1013, 170, 135, 1012, 1011, 581, 1134, 581,
	581, 2251, 2277, 1010, 571, 1005, 1067, 1295, 138, 136,
	131, 132, 133, 137, 581, 581, 973, 1430, 972, 1018,
	128, 958, 1198, 2395, 2947, 1198, 993, 1943, 2937, 139,
	2926, 1146, 958, 958, 1975, 992, 539, 956, 541, 555,
	1553, 573, 1885, 572, 545, 788, 543, 547, 556, 548,
	1451, 542, 2229, 553, 1931, 37, 544, 557, 558, 560,
	563, 564, 565, 561, 2405, 551, 574, 1549, 999, 1098,
	1159, 1156, 1157, 1158, 1163, 1165, 1162, 2623, 1161, 571,
	1140, 2828, 2253, 1545, 2185, 1155, 1159, 1156, 1157, 1158,
	1163, 1165, 1162, 571, 1161, 571, 1028, 2232, 1066, 2415,
	571, 1155, 999, 2217, 1009, 2245, 155, 1007, 1989, 2214,
	1425, 1424, 973, 1034, 2188, 1423, 1201, 1202, 1203, 1204,
	2779, 2068, 2070, 1789, 1790, 2545, 1209, 2204, 1212, 1135,
	1550, 973, 1421, 537, 532, 1084, 2817, 1090, 1091, 1092,
	1093, 1543, 1199, 1200, 2263, 2262, 2261, 2255, 2583, 2259,
	1830, 2254, 2563, 2252, 1450, 2445, 2446, 2834, 2257, 1128,
	1129, 1136, 1137, 2844, 1283, 999, 998, 2256, 2448, 2136,
	2099, 1002, 992, 1205, 1875, 185, 1927, 2055, 1755, 581,
	581, 1003, 1122, 149, 2258, 2260, 1339, 1525, 1524, 1526,
	1527, 1528, 2235, 2227, 2669, 185, 2226, 2234, 2669, 81,
	998, 1004, 1264, 1976, 999, 2385, 1079, 1296, 86, 116,
	86, 1198, 1876, 86, 581, 1284, 143, 1299, 185, 144,
	1874, 999, 1298, 581, 77, 1197, 1302, 1073, 1076, 581,
	753, 1301, 755, 86, 575, 1149, 1085, 2377, 1111, 1147,
	2935, 1148, 1226, 2936, 1222, 2934, 1223, 797, 156, 999,
	2386, 1562, 568, 1877, 168, 2235, 770, 1125, 1631, 2840,
	2234, 1020, 1873, 998, 2269, 1097, 111, 569, 1002, 992,
	1278, 2619, 1632, 1633, 1630, 2388, 1099, 1284, 1003, 1083,
	1300, 2069, 2557, 1540, 95, 1541, 1941, 1546, 1542, 2383,
	1270, 1271, 1272, 1273, 1274, 176, 187, 188, 189, 1355,
	1651, 1150, 998, 1672, 1289, 2003, 2393, 2394, 992, 995,
	996, 1672, 958, 2384, 2177, 1169, 989, 993, 2695, 998,
	2896, 1033, 2594, 157, 162, 159, 165, 166, 167, 169,
	171, 172, 173, 174, 2894, 2593, 112, 988, 98, 175,
	177, 178, 179, 2898, 2899, 2390, 1914, 998, 1168, 1169,
	1460, 2393, 2394, 992, 995, 996, 1286, 958, 2895, 1303,
	1459, 989, 993, 1449, 1926, 752, 1924, 1297, 1922, 1170,
	1008, 754, 1320, 1006, 1317, 2856, 1186, 2922, 2244, 1340,
	1652, 1112, 1170, 185, 801, 2810, 1919, 1413, 1170, 1919,
	1981, 1982, 1983, 1069, 1563, 1345, 1346, 1422, 1187, 1188,
	1189, 1190, 1191, 1192, 1193, 1195, 1194, 1196, 1197, 2012,
	2392, 1192, 1193, 1195, 1194, 1196, 1197, 2857, 581, 1082,
	1447, 1170, 2395, 1923, 2950, 2764, 1921, 2811, 1456, 1621,
	1623, 1624, 1458, 2948, 2584, 581, 581, 87, 581, 2500,
	581, 581, 2763, 581, 581, 581, 581, 581, 581, 1350,
	2754, 1629, 2659, 1622, 2658, 2392, 2601, 1533, 581, 1186,
	2600, 1988, 185, 1494, 2789, 1315, 1531, 2395, 1187, 1188,
	1189, 1190, 1191, 1192, 1193, 1195, 1194, 1196, 1197, 185,
	2423, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1195, 1194,
	1196, 1197, 581, 1520, 185, 697, 698, 699, 2411, 2159,
	1167, 1443, 1168, 1169, 1315, 1551, 1508, 1170, 581, 2271,
	185, 2923, 2158, 1167, 1881, 1168, 1169, 2949, 1436, 1167,
	1532, 1168, 1169, 1170, 1534, 1518, 185, 2387, 1992, 1530,
	1517, 1453, 1453, 185, 1170, 1516, 1506, 1500, 1497, 1428,
	1429, 1491, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 581, 1167, 1455, 1168, 1169, 1519, 1496, 792, 1463,
	1495, 1464, 1170, 1466, 1468, 581, 581, 1472, 1474, 1476,
	1478, 1480, 1426, 1454, 1420, 1470, 2837, 2836, 1457, 1446,
	187, 188, 189, 185, 2591, 1434, 1433, 1432, 1188, 1189,
	1190, 1191, 1192, 1193, 1195, 1194, 1196, 1197, 2814, 2813,
	1498, 1499, 1558, 1489, 1490, 1170, 1504, 1505, 1190, 1191,
	1192, 1193, 1195, 1194, 1196, 1197, 2498, 1315, 2812, 2759,
	1492, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1172, 1650,
	2694, 1656, 1656, 2692, 1653, 1657, 2655, 1170, 1167, 2598,
	1168, 1169, 1662, 581, 2040, 1315, 2590, 1654, 1654, 1324,
	1554, 1170, 2414, 1315, 1167, 1627, 1168, 1169, 581, 581,
	1676, 2020, 2413, 119, 1677, 1167, 976, 1168, 1169, 975,
	2168, 2156, 1634, 1280, 1636, 1637, 1638, 1639, 1640, 1641,
	1642, 1643, 1644, 1645, 1646, 1647, 1648, 1935, 2924, 1934,
	1566, 1568, 1625, 1167, 1635, 1168, 1169, 1570, 1325, 1572,
	1573, 1574, 1575, 1786, 1716, 1768, 1579, 1170, 1593, 1559,
	1564, 1565, 1590, 1589, 187, 188, 189, 1999, 1591, 1747,
	2825, 185, 1529, 1521, 1569, 2468, 581, 1597, 1598, 1511,
	1507, 1576, 1577, 1578, 1315, 1170, 1167, 1503, 1168, 1169,
	1502, 1501, 1628, 187, 188, 189, 1315, 2143, 1326, 1123,
	185, 1139, 2786, 581, 2785, 1773, 1716, 1774, 1795, 1796,
	187, 188, 189, 185, 1895, 94, 1170, 581, 1167, 92,
	1168, 1169, 185, 2748, 185, 2747, 185, 185, 581, 2642,
	93, 581, 1167, 2195, 1168, 1169, 2132, 1749, 2173, 1998,
	1186, 2372, 581, 1182, 1747, 1183, 2101, 1673, 2090, 2941,
	1975, 1839, 797, 1751, 1752, 797, 2911, 1315, 95, 1184,
	1185, 1181, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1195,
	1194, 1196, 1197, 1315, 1170, 2090, 2877, 95, 2556, 187,
	188, 189, 1779, 1893, 1315, 2090, 2864, 1748, 1167, 1994,
	1168, 1169, 2090, 2860, 2108, 1805, 1838, 581, 1993, 2133,
	92, 2101, 101, 2558, 1888, 1889, 1890, 94, 2135, 1892,
	1894, 93, 1749, 100, 1166, 99, 1167, 2109, 1168, 1169,
	2852, 1315, 2839, 581, 1658, 1834, 2090, 1833, 1170, 581,
	1456, 1664, 1665, 1456, 1843, 1456, 1844, 1845, 1846, 1847,
	1767, 1918, 1816, 2090, 2830, 1328, 767, 1167, 2109, 1168,
	1169, 2109, 1854, 1855, 1856, 1857, 1781, 1315, 1848, 1849,
	1850, 1851, 1800, 1170, 2339, 1315, 1837, 1908, 1864, 2517,
	1170, 581, 2556, 1650, 2556, 1798, 2401, 101, 1870, 1650,
	1650, 1920, 1315, 1750, 1821, 1820, 1753, 1754, 100, 801,
	99, 2314, 801, 1822, 1836, 1835, 2634, 2827, 1990, 94,
	2517, 1315, 1170, 2090, 2755, 1167, 1905, 1168, 1169, 2025,
	1327, 1170, 2634, 1315, 1880, 684, 1170, 185, 2090, 2632,
	1919, 1315, 2009, 1778, 185, 2561, 1315, 1001, 2086, 185,
	185, 1166, 1315, 185, 1170, 185, 2008, 1453, 1919, 1860,
	1861, 1919, 185, 94, 1170, 2032, 1902, 1865, 1879, 185,
	1883, 1170, 1891, 2752, 1928, 1913, 1170, 1315, 1916, 1167,
	1917, 1168, 1169, 1793, 1170, 1319, 186, 2025, 1315, 186,
	1912, 1911, 186, 1170, 1758, 185, 1605, 582, 1915, 186,
	581, 1865, 1929, 1186, 1930, 2620, 1548, 186, 1347, 1000,
	1932, 1933, 757, 2578, 1167, 983, 1168, 1169, 2519, 1170,
	1990, 1167, 186, 1168, 1169, 1187, 1188, 1189, 1190, 1191,
	1192, 1193, 1195, 1194, 1196, 1197, 2515, 2403, 2402, 2399,
	2400, 2399, 2398, 100, 582, 982, 2506, 582, 186, 582,
	1170, 2132, 1938, 1167, 2160, 1168, 1169, 1170, 2505, 2109,
	1315, 2902, 1167, 2867, 1168, 1169, 2049, 1167, 87, 1168,
	1169, 2775, 1170, 1322, 1627, 2048, 1990, 1315, 1975, 2213,
	1170, 1416, 2198, 2191, 2192, 1167, 1170, 1168, 1169, 87,
	1985, 1170, 1987, 2745, 1959, 1167, 2706, 1168, 1169, 2090,
	2089, 2047, 1167, 1170, 1168, 1169, 2603, 1167, 2618, 1168,
	1169, 1990, 1986, 1170, 2133, 1167, 2615, 1168, 1169, 1170,
	1416, 1415, 2470, 1975, 1167, 1170, 1168, 1169, 1361, 1360,
	1966, 1967, 2046, 1170, 2596, 1969, 2509, 2508, 2776, 2045,
	1418, 1170, 1863, 2466, 1970, 2428, 1973, 1170, 1485, 2424,
	1167, 2199, 1168, 1169, 2044, 1859, 2604, 2605, 2606, 185,
	1878, 1628, 2043, 1853, 1852, 1536, 1448, 185, 2042, 1444,
	1984, 1656, 581, 2041, 2074, 1170, 1414, 113, 581, 2607,
	2061, 1167, 2426, 1168, 1169, 2035, 2164, 1654, 1167, 581,
	1168, 1169, 1482, 2078, 2072, 2034, 2165, 1771, 1486, 1487,
	1488, 2033, 1170, 1167, 1068, 1168, 1169, 2030, 1595, 2002,
	2919, 1167, 185, 1168, 1169, 2029, 185, 1167, 2105, 1168,
	1169, 2917, 1167, 2028, 1168, 1169, 2608, 2609, 2891, 2026,
	2849, 2142, 2794, 2165, 1167, 2571, 1168, 1169, 2420, 1483,
	1484, 2419, 37, 2418, 1167, 2018, 1168, 1169, 1749, 2339,
	1167, 2125, 1168, 1169, 2568, 2569, 1167, 2022, 1168, 1169,
	2178, 1960, 2574, 2361, 1167, 2573, 1168, 1169, 2362, 2358,
	1596, 2359, 1167, 2087, 1168, 1169, 2360, 2357, 1167, 581,
	1168, 1169, 2908, 2878, 2021, 185, 1785, 2676, 1289, 2675,
	2091, 1323, 185, 2363, 2062, 2118, 2119, 1777, 1748, 2562,
	2319, 2318, 2124, 2809, 581, 2000, 1167, 2685, 1168, 1169,
	2687, 581, 667, 2088, 2552, 1456, 1456, 2331, 2333, 2146,
	581, 2549, 2098, 2328, 1547, 2190, 2334, 2083, 743, 2548,
	2397, 2130, 2210, 1167, 771, 1168, 1169, 2674, 2209, 2150,
	2169, 1668, 772, 185, 185, 185, 185, 185, 2153, 2154,
	2137, 1870, 2134, 2480, 1030, 1669, 1029, 2164, 2144, 2147,
	185, 185, 2114, 2117, 2118, 2119, 2115, 2238, 2116, 2120,
	92, 1138, 2568, 2569, 580, 2157, 185, 94, 1313, 1309,
	2206, 93, 2052, 2053, 2114, 2117, 2118, 2119, 2115, 2166,
	2116, 2120, 2205, 1310, 92, 1650, 2179, 2180, 2181, 2174,
	120, 101, 2175, 2167, 2554, 93, 94, 1436, 2170, 2171,
	2208, 2945, 100, 2416, 99, 1795, 1796, 1963, 1775, 1776,
	1312, 799, 1311, 94, 955, 2826, 962, 2771, 2396, 2122,
	1782, 2264, 1656, 2268, 1656, 779, 780, 1656, 1952, 2207,
	2200, 2201, 1656, 2317, 2534, 1979, 753, 99, 1654, 101,
	1654, 2316, 2801, 1654, 2800, 2693, 581, 2691, 1654, 2690,
	100, 100, 99, 2683, 2616, 2553, 2551, 2429, 186, 2247,
	186, 1903, 581, 186, 1431, 2230, 778, 2246, 101, 2682,
	2308, 2301, 2302, 2303, 2304, 2542, 2291, 185, 2294, 100,
	2101, 581, 2248, 2295, 2921, 2920, 103, 2086, 2278, 2010,
	581, 1769, 582, 1341, 582, 582, 2265, 581, 581, 1332,
	185, 185, 185, 185, 185, 106, 107, 2920, 2921, 582,
	582, 2815, 185, 2589, 2308, 769, 2336, 185, 88, 1,
	185, 2893, 185, 2321, 2282, 185, 185, 185, 2351, 550,
	1759, 2296, 2297, 2298, 2299, 2300, 759, 1287, 2345, 1522,
	1512, 2645, 1717, 2772, 2434, 2432, 2322, 1909, 2371, 2236,
	2614, 2307, 2237, 1868, 2309, 991, 1302, 2125, 145, 1831,
	2412, 1832, 2873, 110, 2310, 2311, 2312, 951, 2289, 185,
	2289, 2323, 109, 2289, 2320, 2439, 994, 1096, 2289, 1904,
	2635, 2151, 581, 1840, 2436, 2313, 2435, 760, 1313, 1309,
	581, 2373, 2433, 761, 2374, 185, 2353, 2354, 2352, 2356,
	1367, 2355, 2364, 1310, 1365, 185, 1366, 2368, 2369, 1364,
	95, 2450, 1369, 1368, 2011, 2375, 2520, 1599, 578, 1558,
	185, 2350, 2381, 185, 2121, 183, 1356, 1333, 1306, 1307,
	1312, 1031, 1311, 2481, 540, 2408, 2404, 2407, 1936, 546,
	1210, 2342, 1594, 2315, 2138, 798, 2342, 791, 1770, 2076,
	2347, 2546, 2327, 2329, 2093, 2332, 2458, 2325, 2808, 2684,
	2457, 2865, 2148, 1329, 2001, 2430, 1670, 2449, 1810, 1620,
	186, 1870, 603, 602, 582, 582, 600, 2079, 2461, 2102,
	1173, 687, 2066, 1342, 2113, 2111, 2409, 2410, 2110, 1961,
	186, 1817, 2570, 2566, 2514, 2885, 1812, 2476, 2475, 1808,
	2085, 611, 604, 596, 2586, 581, 185, 2456, 2216, 582,
	2467, 2218, 2149, 186, 2463, 2484, 1151, 1305, 582, 590,
	964, 1667, 2490, 2483, 582, 2777, 2832, 2487, 2488, 1978,
	2489, 2502, 2431, 2491, 1304, 2493, 1680, 2495, 1681, 2421,
	2196, 1896, 63, 41, 1708, 585, 2904, 1142, 785, 32,
	31, 30, 29, 28, 23, 22, 21, 20, 19, 2540,
	25, 18, 17, 185, 16, 2442, 2914, 2944, 115, 50,
	47, 45, 122, 121, 48, 44, 2535, 2536, 1071, 42,
	27, 2592, 26, 15, 14, 13, 185, 12, 11, 2543,
	2565, 2550, 2478, 2479, 10, 9, 5, 4, 35, 34,
	33, 2555, 2575, 1145, 24, 2, 185, 2438, 2437, 185,
	185, 185, 2581, 2582, 2572, 2183, 1898, 0, 0, 581,
	581, 0, 0, 0, 0, 0, 0, 2579, 0, 0,
	0, 0, 2580, 0, 0, 2458, 0, 0, 0, 2457,
	2621, 2622, 2587, 2588, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 581, 581, 581, 581, 0, 0, 0, 0, 799,
	0, 799, 799, 0, 0, 0, 0, 0, 186, 0,
	0, 0, 0, 0, 0, 0, 1141, 1143, 0, 0,
	0, 0, 2597, 0, 2599, 0, 0, 0, 0, 2641,
	0, 0, 0, 0, 0, 0, 0, 1656, 0, 1656,
	0, 2639, 2640, 582, 0, 0, 0, 0, 2654, 0,
	0, 0, 0, 1654, 0, 1654, 0, 0, 185, 0,
	582, 582, 0, 582, 2650, 582, 582, 0, 582, 582,
	582, 582, 582, 582, 0, 0, 0, 0, 0, 2672,
	0, 0, 581, 582, 581, 0, 2679, 186, 0, 2662,
	2663, 0, 0, 2625, 0, 0, 2700, 2629, 2630, 2631,
	1656, 0, 0, 2708, 186, 0, 0, 0, 0, 0,
	0, 2680, 2651, 0, 2702, 2696, 1654, 582, 2704, 186,
	37, 2688, 2345, 0, 0, 1281, 2345, 2689, 2698, 0,
	0, 753, 0, 582, 0, 186, 0, 0, 0, 581,
	0, 0, 0, 0, 0, 0, 2712, 0, 2709, 2710,
	0, 186, 185, 0, 0, 0, 0, 0, 186, 0,
	2753, 0, 0, 0, 0, 581, 0, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 582, 2749, 2751, 2765,
	2750, 1293, 1294, 2289, 0, 2289, 0, 0, 2757, 2774,
	582, 582, 2791, 1656, 581, 2792, 2795, 2767, 581, 581,
	2766, 0, 0, 0, 0, 0, 0, 0, 186, 1654,
	0, 0, 0, 0, 0, 0, 1337, 0, 0, 0,
	0, 0, 0, 0, 2342, 799, 0, 581, 2802, 2803,
	0, 1357, 0, 0, 2805, 2804, 0, 0, 2807, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2819, 0,
	2818, 2816, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2822, 2345, 0, 0, 581, 0, 582, 0,
	0, 0, 0, 0, 0, 753, 0, 0, 2760, 2761,
	2762, 185, 0, 582, 582, 0, 0, 2824, 0, 0,
	0, 0, 0, 0, 0, 0, 581, 185, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2838, 2835, 0,
	0, 0, 0, 0, 0, 0, 0, 2841, 0, 181,
	2831, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 37, 0, 0, 0, 0, 0, 0, 581, 0,
	0, 0, 0, 120, 0, 0, 186, 0, 0, 0,
	0, 582, 0, 0, 0, 0, 163, 0, 0, 0,
	581, 581, 2866, 0, 0, 2858, 0, 0, 2863, 0,
	0, 0, 0, 581, 0, 186, 2868, 0, 582, 0,
	2872, 0, 185, 581, 2774, 2874, 37, 2881, 186, 0,
	0, 0, 582, 0, 0, 0, 0, 186, 2145, 186,
	2892, 186, 186, 582, 0, 2900, 582, 0, 0, 2897,
	2884, 2907, 0, 160, 0, 161, 0, 582, 0, 0,
	955, 2918, 2916, 581, 2913, 0, 0, 0, 0, 0,
	0, 0, 581, 1281, 2927, 180, 1656, 1462, 1462, 2932,
	1462, 2931, 1462, 1462, 2925, 1471, 1462, 1462, 1462, 1462,
	1462, 668, 1654, 2938, 2929, 181, 0, 0, 1281, 1281,
	955, 0, 2946, 0, 0, 2951, 0, 0, 0, 0,
	0, 0, 582, 0, 0, 1656, 0, 2955, 2954, 120,
	2956, 2957, 0, 2342, 2792, 0, 0, 0, 0, 0,
	0, 1654, 163, 0, 1535, 0, 0, 0, 582, 0,
	0, 0, 184, 0, 582, 536, 0, 0, 576, 0,
	1555, 0, 0, 0, 0, 536, 0, 0, 181, 0,
	0, 0, 0, 536, 0, 0, 0, 0, 0, 2189,
	0, 0, 0, 0, 0, 0, 0, 0, 766, 0,
	0, 0, 120, 164, 142, 0, 582, 0, 0, 160,
	0, 161, 170, 799, 784, 163, 784, 0, 0, 0,
	0, 0, 0, 0, 536, 0, 0, 799, 799, 0,
	0, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 152, 0, 0, 0,
	0, 141, 186, 0, 0, 0, 0, 0, 0, 186,
	0, 0, 0, 0, 186, 186, 0, 0, 186, 0,
	186, 0, 160, 0, 161, 1314, 0, 186, 0, 0,
	0, 0, 0, 0, 186, 0, 0, 0, 0, 0,
	1439, 1440, 151, 150, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1663, 0, 0, 0, 0,
	186, 0, 1281, 0, 0, 582, 0, 0, 0, 0,
	1678, 1679, 0, 0, 0, 155, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 164,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 799, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1772, 0,
	146, 1441, 153, 0, 1438, 0, 147, 148, 0, 0,
	0, 0, 164, 0, 0, 0, 0, 0, 0, 0,
	0, 170, 0, 0, 0, 1784, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1337,
	0, 0, 799, 0, 0, 0, 0, 0, 0, 0,
	799, 0, 0, 799, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 955, 0, 0, 0, 0, 0,
	0, 155, 0, 0, 0, 0, 0, 156, 0, 0,
	0, 0, 0, 168, 186, 0, 0, 0, 0, 0,
	0, 0, 186, 0, 0, 0, 0, 582, 0, 0,
	0, 0, 0, 582, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 582, 0, 0, 0, 0, 962,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 155, 0, 0, 186, 0, 0,
	0, 186, 0, 0, 0, 955, 0, 0, 0, 0,
	0, 962, 157, 162, 159, 165, 166, 167, 169, 171,
	172, 173, 174, 0, 0, 0, 0, 0, 175, 177,
	178, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 955, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 582, 0, 0, 0, 0, 0,
	186, 149, 0, 156, 0, 0, 0, 186, 0, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 582,
	0, 0, 0, 0, 0, 0, 582, 0, 0, 0,
	0, 0, 0, 0, 143, 582, 0, 144, 0, 0,
	0, 0, 0, 0, 536, 0, 536, 0, 0, 536,
	176, 0, 0, 0, 0, 0, 0, 0, 186, 186,
	186, 186, 186, 0, 2912, 0, 156, 0, 0, 0,
	0, 0, 168, 0, 1384, 186, 186, 0, 157, 162,
	159, 165, 166, 167, 169, 171, 172, 173, 174, 0,
	0, 186, 1972, 0, 175, 177, 178, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 162, 159, 165, 166, 167, 169, 171, 172,
	173, 174, 0, 0, 0, 0, 0, 175, 177, 178,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 582, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 582, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 0, 1282, 0, 582, 0, 0, 0,
	0, 0, 0, 0, 1372, 582, 0, 0, 0, 0,
	0, 0, 582, 582, 0, 186, 186, 186, 186, 186,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 186, 0, 0, 186, 0, 186, 799, 0,
	186, 186, 186, 0, 0, 0, 536, 0, 0, 0,
	0, 0, 0, 0, 1784, 0, 0, 0, 0, 0,
	2080, 0, 0, 0, 0, 0, 766, 0, 0, 0,
	0, 2095, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 1385, 0, 0, 0, 536,
	0, 0, 0, 0, 0, 0, 0, 582, 0, 0,
	0, 0, 0, 0, 0, 582, 0, 0, 0, 0,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 0, 0, 186, 1398,
	1401, 1402, 1403, 1404, 1405, 1406, 0, 1407, 1408, 1409,
	1410, 1411, 1386, 1387, 1388, 1389, 1370, 1371, 1399, 0,
	1373, 2172, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381,
	1382, 0, 0, 1383, 1390, 1391, 1392, 1393, 1394, 1395,
	1396, 1397, 0, 0, 0, 0, 1784, 0, 0, 0,
	0, 0, 0, 2197, 0, 0, 0, 0, 0, 0,
	0, 0, 2202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	582, 186, 0, 0, 0, 0, 1316, 1318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 78, 39, 40,
	80, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 536, 0, 0, 84, 0, 0,
	0, 43, 69, 70, 0, 67, 71, 0, 0, 0,
	0, 0, 0, 0, 68, 0, 0, 0, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1400, 0, 0, 0, 0, 0, 0,
	0, 186, 1282, 56, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1281, 87, 1281, 0, 0, 1281, 0,
	0, 186, 0, 1281, 186, 186, 186, 1282, 1282, 0,
	0, 0, 0, 536, 582, 582, 0, 0, 799, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1509, 0, 0, 0, 1462, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 536, 0, 0, 0, 0,
	0, 0, 0, 2324, 0, 0, 582, 582, 582, 582,
	0, 1557, 799, 0, 0, 0, 1281, 0, 0, 2349,
	1462, 1281, 0, 0, 0, 0, 0, 536, 0, 0,
	783, 0, 0, 0, 536, 0, 0, 0, 0, 0,
	0, 0, 0, 1580, 1581, 536, 536, 536, 536, 536,
	536, 536, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 0, 0, 0, 46, 49, 52,
	51, 54, 0, 66, 536, 0, 75, 72, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 582, 594, 582,
	0, 0, 0, 0, 955, 0, 0, 1281, 0, 55,
	83, 82, 1784, 0, 64, 65, 53, 0, 0, 0,
	0, 0, 73, 74, 0, 0, 0, 0, 0, 0,
	777, 0, 0, 0, 0, 0, 0, 0, 784, 0,
	0, 0, 0, 0, 0, 784, 784, 0, 0, 0,
	0, 1282, 0, 0, 582, 0, 0, 0, 57, 58,
	0, 59, 60, 61, 62, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 784, 1557, 784, 784, 784,
	784, 784, 0, 0, 0, 0, 0, 0, 0, 582,
	0, 0, 0, 582, 582, 0, 0, 0, 0, 0,
	0, 0, 1509, 0, 0, 0, 0, 2324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 784, 0, 0,
	0, 0, 582, 0, 0, 0, 0, 0, 0, 0,
	0, 766, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1384, 0, 536, 0, 0, 0, 0, 0,
	0, 1557, 0, 536, 0, 536, 0, 536, 1819, 0,
	0, 582, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 0, 0, 0, 0, 186, 2714, 2716, 2715,
	2725, 2726, 2727, 2728, 2729, 2730, 2731, 633, 0, 0,
	0, 582, 186, 0, 0, 0, 0, 1674, 0, 0,
	0, 1675, 86, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1784, 1784, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 582, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 582, 582, 0, 0, 0,
	1316, 1757, 0, 2646, 2647, 2648, 2649, 0, 582, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 582, 0,
	0, 0, 1372, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1780, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1281, 0,
	1281, 0, 0, 0, 0, 0, 0, 0, 582, 0,
	0, 0, 0, 0, 0, 0, 0, 582, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 536, 1281,
	0, 0, 0, 0, 2701, 536, 2703, 0, 0, 0,
	536, 536, 0, 1385, 536, 0, 1964, 0, 0, 0,
	0, 0, 0, 536, 0, 0, 0, 0, 0, 0,
	536, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1882, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 536, 0, 0, 0,
	0, 1784, 2720, 2721, 0, 0, 0, 1398, 1401, 1402,
	1403, 1404, 1405, 1406, 0, 1407, 1408, 1409, 1410, 1411,
	1386, 1387, 1388, 1389, 1370, 1371, 1399, 799, 1373, 0,
	1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 0,
	0, 1383, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397,
	0, 0, 0, 0, 0, 0, 2798, 0, 0, 0,
	2798, 2798, 678, 0, 628, 682, 630, 679, 680, 784,
	626, 629, 681, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1784,
	0, 0, 0, 0, 0, 0, 1171, 0, 0, 631,
	632, 2713, 2717, 2718, 2719, 2722, 2723, 2724, 2732, 2734,
	656, 2733, 2735, 2736, 2737, 2740, 2741, 2742, 2743, 2738,
	2739, 2744, 0, 0, 1218, 0, 0, 0, 1784, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 784, 784, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1557, 1784, 0,
	536, 1400, 0, 0, 0, 0, 0, 0, 1509, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 594, 0, 0, 1281, 0,
	2859, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 536, 0, 0, 0, 536, 0, 0,
	0, 0, 799, 799, 1991, 0, 0, 0, 1995, 0,
	1996, 1997, 0, 0, 0, 2882, 0, 0, 0, 2005,
	0, 0, 2006, 2007, 0, 2887, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2013,
	2014, 2015, 2016, 2017, 0, 2019, 0, 0, 0, 1331,
	0, 2023, 0, 2024, 0, 1784, 536, 2027, 0, 0,
	0, 0, 0, 2182, 2887, 2036, 2037, 2038, 2039, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2050, 2051,
	0, 0, 0, 0, 0, 0, 2056, 2057, 2058, 2059,
	2060, 0, 1780, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2073, 0, 0, 0, 0, 0, 0,
	0, 694, 79, 0, 536, 536, 536, 536, 536, 0,
	1290, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 536, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 784, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 535, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 0, 0, 0, 0, 756,
	0, 79, 746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1282, 0, 1282, 0, 0, 1282, 0, 756,
	0, 0, 1282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 963, 784, 0, 0, 0,
	0, 0, 0, 959, 1419, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 536, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1282, 0, 0, 0, 0,
	1282, 536, 536, 536, 536, 536, 0, 0, 0, 0,
	0, 0, 0, 2365, 0, 0, 0, 0, 536, 0,
	0, 1509, 0, 536, 0, 0, 536, 2376, 1557, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2275, 0, 0,
	536, 0, 0, 0, 1560, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1282, 2290, 0, 0,
	0, 0, 0, 0, 0, 0, 536, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 536, 0, 2305, 2306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 536, 0, 0, 536, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1615, 1616, 1617,
	1618, 0, 2348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2366,
	2367, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1660, 1661,
	0, 0, 0, 0, 0, 0, 1666, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1702, 1703, 1704, 1705, 1706, 1707, 1709, 1713, 1714,
	594, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728,
	1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738,
	1739, 1740, 1741, 1742, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 536, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 594, 0, 0, 0, 0, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2482,
	0, 0, 0, 0, 0, 0, 2486, 536, 0, 0,
	536, 536, 536, 0, 0, 0, 0, 0, 1791, 1792,
	2496, 2497, 2499, 2501, 0, 0, 0, 0, 0, 0,
	2507, 0, 0, 0, 0, 2511, 2512, 2513, 0, 0,
	0, 0, 2516, 0, 0, 0, 1828, 0, 2518, 0,
	0, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530,
	2531, 0, 0, 2532, 0, 0, 0, 0, 0, 2537,
	0, 0, 0, 1072, 0, 1078, 0, 0, 1080, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1131, 0,
	1131, 1131, 2559, 2560, 0, 1866, 2564, 1282, 0, 1282,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	0, 0, 0, 0, 2576, 2577, 0, 0, 0, 1509,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 756, 1206, 1207, 1208, 1282, 1211,
	0, 1213, 1214, 1215, 1216, 0, 1219, 1221, 1221, 0,
	1221, 1225, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1233,
	1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243,
	1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253,
	1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263,
	0, 1265, 1266, 1267, 1268, 1269, 0, 2633, 0, 0,
	1225, 1225, 1225, 1225, 1225, 0, 0, 0, 0, 0,
	0, 0, 0, 1509, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2660, 0, 0, 0,
	2661, 0, 0, 0, 0, 0, 2665, 0, 1291, 0,
	0, 0, 0, 0, 756, 0, 0, 0, 756, 0,
	0, 0, 0, 0, 756, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1344, 0,
	181, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1435, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1509, 0, 120, 0, 142, 0, 0, 0,
	0, 0, 0, 2004, 0, 0, 0, 163, 536, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2770, 0, 0, 0, 152, 1218,
	0, 0, 0, 141, 0, 0, 0, 1282, 2780, 2781,
	2782, 0, 2783, 2784, 0, 0, 0, 0, 2787, 0,
	2788, 0, 2790, 2793, 160, 0, 161, 0, 0, 2797,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1439, 1440, 151, 150, 180, 0, 0, 0,
	0, 0, 0, 1509, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2823, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1331, 0, 0, 0, 0, 0,
	0, 0, 0, 1362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2843, 0, 0, 0, 0, 0, 0,
	0, 0, 146, 1441, 153, 0, 1438, 2848, 147, 148,
	0, 0, 2853, 0, 164, 0, 0, 0, 2854, 2855,
	0, 0, 0, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 1493, 0, 0, 0, 2861, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1537, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2903, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1567, 2909, 0, 0,
	0, 2910, 0, 1571, 0, 0, 0, 0, 0, 0,
	0, 0, 1131, 0, 1582, 1583, 1584, 1585, 1586, 1587,
	1588, 0, 0, 0, 0, 0, 1131, 1131, 0, 0,
	0, 2243, 0, 0, 0, 0, 155, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2266,
	2267, 0, 0, 1608, 2270, 0, 0, 0, 0, 2272,
	2273, 2274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2279, 2280, 2281, 0, 0, 1720, 2283, 0, 2284,
	2285, 0, 0, 0, 2292, 2293, 0, 0, 0, 0,
	0, 0, 1720, 1720, 1720, 1720, 1720, 594, 594, 594,
	594, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 149, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 143, 0, 0, 144,
	0, 0, 2337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 156, 2370,
	0, 0, 0, 0, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 176, 0, 0, 0, 0,
	0, 0, 0, 1797, 0, 0, 0, 1811, 2427, 0,
	0, 0, 1801, 0, 1804, 0, 0, 1608, 0, 0,
	0, 0, 0, 157, 162, 159, 165, 166, 167, 169,
	171, 172, 173, 174, 0, 0, 0, 87, 0, 175,
	177, 178, 179, 688, 695, 696, 697, 698, 699, 689,
	691, 0, 0, 0, 690, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 693, 700, 701,
	0, 0, 0, 0, 0, 0, 0, 0, 963, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2504, 0, 0, 0, 0, 0, 0, 2510,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	963, 0, 0, 2459, 2460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 702, 703, 704, 705, 706,
	707, 708, 709, 710, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 741, 742, 0, 594, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1608, 0, 0,
	0, 0, 0, 0, 1947, 0, 0, 0, 0, 1957,
	1958, 0, 0, 1962, 0, 0, 0, 0, 0, 0,
	0, 0, 1965, 0, 0, 0, 0, 0, 0, 1968,
	0, 0, 0, 0, 0, 2617, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1971, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2638, 0, 0, 0,
	0, 1980, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2652,
	0, 2653, 0, 0, 0, 0, 2656, 2657, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2664, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 678, 0, 0, 682, 0, 679, 680, 0, 0,
	0, 681, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2697, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2705,
	0, 0, 2707, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2711, 0, 0, 2054,
	0, 0, 0, 0, 0, 0, 0, 2746, 0, 0,
	0, 87, 0, 0, 0, 0, 2071, 688, 695, 696,
	697, 698, 699, 689, 691, 0, 0, 0, 690, 0,
	0, 0, 0, 0, 756, 0, 0, 0, 0, 0,
	0, 693, 700, 701, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2106, 2107, 0, 0, 0, 0,
	0, 0, 0, 2126, 0, 2127, 2128, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2129, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2459, 2460, 0,
	0, 0, 0, 2806, 594, 0, 0, 0, 0, 702,
	703, 704, 705, 706, 707, 708, 709, 710, 711, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 727, 728, 729, 730, 731, 732,
	733, 734, 735, 736, 737, 738, 739, 740, 741, 742,
	0, 0, 0, 0, 0, 2176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 594,
	0, 0, 2203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2847, 0, 0, 2221, 2222, 2223, 2224, 2225, 2075, 0,
	0, 695, 696, 0, 0, 0, 0, 1655, 0, 0,
	1608, 2231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2239, 0, 0, 0,
	0, 0, 0, 0, 594, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2901, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 702, 703, 704, 705, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 0, 0, 0, 0, 0, 1811, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2346, 0, 79, 0,
	0, 1811, 1811, 1811, 1811, 1811, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2126, 756,
	0, 0, 0, 1811, 0, 0, 1811, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 695, 696, 0, 0, 0, 0, 1655, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2417,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2455, 0,
	0, 0, 0, 0, 0, 2453, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2462, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2474, 0, 0, 2477, 0, 0, 0, 0, 0, 0,
	0, 2485, 702, 703, 704, 705, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2539, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1811, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2585, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2595, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2610, 0, 0, 2611,
	2612, 2613, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2673, 0, 2677, 2678, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2346, 0, 79, 0, 2346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2758, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1230, 1231, 1232, 1233, 1234,
	1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244,
	1245, 1246, 1247, 1248, 1249, 1250, 1251, 1253, 1254, 1255,
	1256, 1257, 1258, 1259, 1260, 1261, 1262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2833, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2842, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 357, 2862, 0, 933, 918, 456, 79, 864,
	936, 833, 852, 946, 855, 858, 900, 812, 878, 375,
	849, 804, 837, 807, 844, 808, 835, 866, 248, 832,
	920, 882, 935, 330, 245, 814, 838, 389, 854, 196,
	902, 431, 232, 340, 337, 463, 260, 251, 247, 231,
	286, 347, 387, 450, 381, 942, 334, 888, 0, 441,
	360, 0, 0, 0, 868, 924, 876, 914, 863, 901,
	822, 887, 937, 850, 897, 938, 292, 230, 195, 372,
	442, 264, 0, 0, 0, 0, 187, 188, 189, 0,
	2875, 0, 2876, 0, 0, 0, 0, 0, 0, 221,
	0, 228, 315, 324, 323, 304, 305, 307, 309, 314,
	321, 327, 846, 894, 932, 847, 896, 243, 290, 250,
	242, 460, 943, 923, 811, 875, 931, 0, 0, 213,
	934, 870, 0, 899, 0, 949, 806, 890, 0, 809,
	813, 945, 927, 841, 253, 0, 0, 0, 0, 0,
	0, 0, 867, 877, 911, 861, 0, 0, 0, 0,
	0, 0, 0, 839, 0, 886, 0, 0, 0, 818,
	810, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 865, 0, 0, 0, 821, 0, 840, 912,
	0, 803, 273, 815, 361, 235, 0, 916, 926, 862,
	494, 930, 860, 859, 906, 819, 922, 853, 329, 817,
	298, 191, 209, 0, 851, 371, 412, 418, 921, 836,
	845, 233, 843, 416, 385, 478, 217, 262, 409, 390,
	414, 397, 265, 885, 904, 415, 335, 465, 404, 475,
	495, 496, 241, 365, 485, 454, 491, 508, 210, 238,
	379, 447, 481, 438, 358, 461, 462, 297, 437, 271,
	194, 333, 501, 208, 424, 225, 215, 201, 449, 473,
	222, 428, 0, 0, 510, 203, 471, 446, 354, 294,
	295, 202, 0, 408, 246, 269, 236, 374, 468, 469,
	234, 511, 212, 490, 205, 1133, 489, 367, 464, 472,
	355, 345, 204, 470, 353, 344, 300, 319, 320, 258,
	280, 402, 338, 403, 281, 363, 362, 364, 197, 482,
	0, 198, 0, 443, 483, 512, 218, 219, 220, 831,
	257, 261, 268, 270, 276, 277, 284, 331, 378, 401,
	399, 405, 917, 459, 476, 486, 493, 499, 500, 502,
	503, 504, 505, 506, 507, 366, 283, 439, 299, 336,
	909, 948, 384, 417, 223, 480, 440, 826, 830, 824,
	891, 825, 880, 881, 827, 939, 940, 941, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 0, 913, 820, 0,
	828, 829, 0, 919, 928, 929, 531, 346, 430, 477,
	301, 313, 316, 306, 325, 0, 326, 302, 303, 308,
	310, 311, 312, 317, 318, 322, 328, 884, 190, 206,
	332, 944, 406, 266, 509, 488, 484, 805, 823, 240,
	834, 842, 0, 848, 856, 857, 869, 871, 872, 873,
	874, 892, 893, 895, 903, 905, 908, 910, 915, 925,
	947, 192, 193, 199, 207, 216, 226, 239, 254, 256,
	263, 274, 279, 282, 287, 288, 291, 296, 342, 348,
	349, 350, 351, 368, 369, 370, 373, 376, 377, 380,
	382, 383, 386, 393, 394, 395, 396, 398, 400, 407,
	411, 419, 420, 421, 422, 423, 426, 427, 432, 433,
	434, 435, 436, 444, 448, 466, 467, 479, 492, 497,
	425, 275, 474, 498, 0, 341, 883, 889, 343, 259,
	278, 289, 898, 487, 445, 211, 413, 267, 200, 229,
	214, 237, 252, 255, 293, 352, 359, 388, 392, 272,
	249, 227, 410, 224, 429, 451, 452, 453, 455, 356,
	244, 391, 879, 907, 339, 457, 458, 285, 357, 0,
	0, 933, 918, 456, 0, 864, 936, 833, 852, 946,
	855, 858, 900, 812, 878, 375, 849, 804, 837, 807,
	844, 808, 835, 866, 248, 832, 920, 882, 935, 330,
	245, 814, 838, 389, 854, 196, 902, 431, 232, 340,
	337, 463, 260, 251, 247, 231, 286, 347, 387, 450,
	381, 942, 334, 888, 0, 441, 360, 0, 0, 0,
	868, 924, 876, 914, 863, 901, 822, 887, 937, 850,
	897, 938, 292, 230, 195, 372, 442, 264, 0, 0,
	0, 0, 187, 188, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 228, 315, 324,
	323, 304, 305, 307, 309, 314, 321, 327, 846, 894,
	932, 847, 896, 243, 290, 250, 242, 460, 943, 923,
	811, 875, 931, 0, 0, 213, 934, 870, 0, 899,
	0, 949, 806, 890, 0, 809, 813, 945, 927, 841,
	253, 0, 0, 0, 0, 0, 0, 0, 867, 877,
	911, 861, 0, 0, 0, 0, 0, 2377, 0, 839,
	0, 886, 0, 0, 0, 818, 810, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 865, 0,
	0, 0, 821, 0, 840, 912, 0, 803, 273, 815,
	361, 235, 0, 916, 926, 862, 494, 930, 860, 859,
	906, 819, 922, 853, 329, 817, 298, 191, 209, 0,
	851, 371, 412, 418, 921, 836, 845, 233, 843, 416,
	385, 478, 217, 262, 409, 390, 414, 397, 265, 885,
	904, 415, 335, 465, 404, 475, 495, 496, 241, 365,
	485, 454, 491, 508, 210, 238, 379, 447, 481, 438,
	358, 461, 462, 297, 437, 271, 194, 333, 501, 208,
	424, 225, 215, 201, 449, 473, 222, 428, 0, 0,
	510, 203, 471, 446, 354, 294, 295, 202, 0, 408,
	246, 269, 236, 374, 468, 469, 234, 511, 212, 490,
	205, 1133, 489, 367, 464, 472, 355, 345, 204, 470,
	353, 344, 300, 319, 320, 258, 280, 402, 338, 403,
	281, 363, 362, 364, 197, 482, 0, 198, 0, 443,
	483, 512, 218, 219, 220, 831, 257, 261, 268, 270,
	276, 277, 284, 331, 378, 401, 399, 405, 917, 459,
	476, 486, 493, 499, 500, 502, 503, 504, 505, 506,
	507, 366, 283, 439, 299, 336, 909, 948, 384, 417,
	223, 480, 440, 826, 830, 824, 891, 825, 880, 881,
	827, 939, 940, 941, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 0, 913, 820, 0, 828, 829, 0, 919,
	928, 929, 531, 346, 430, 477, 301, 313, 316, 306,
	325, 0, 326, 302, 303, 308, 310, 311, 312, 317,
	318, 322, 328, 884, 190, 206, 332, 944, 406, 266,
	509, 488, 484, 805, 823, 240, 834, 842, 0, 848,
	856, 857, 869, 871, 872, 873, 874, 892, 893, 895,
	903, 905, 908, 910, 915, 925, 947, 192, 193, 199,
	207, 216, 226, 239, 254, 256, 263, 274, 279, 282,
	287, 288, 291, 296, 342, 348, 349, 350, 351, 368,
	369, 370, 373, 376, 377, 380, 382, 383, 386, 393,
	394, 395, 396, 398, 400, 407, 411, 419, 420, 421,
	422, 423, 426, 427, 432, 433, 434, 435, 436, 444,
	448, 466, 467, 479, 492, 497, 425, 275, 474, 498,
	0, 341, 883, 889, 343, 259, 278, 289, 898, 487,
	445, 211, 413, 267, 200, 229, 214, 237, 252, 255,
	293, 352, 359, 388, 392, 272, 249, 227, 410, 224,
	429, 451, 452, 453, 455, 356, 244, 391, 879, 907,
	339, 457, 458, 285, 357, 0, 0, 933, 918, 456,
	0, 864, 936, 833, 852, 946, 855, 858, 900, 812,
	878, 375, 849, 804, 837, 807, 844, 808, 835, 866,
	248, 832, 920, 882, 935, 330, 245, 814, 838, 389,
	854, 196, 902, 431, 232, 340, 337, 463, 260, 251,
	247, 231, 286, 347, 387, 450, 381, 942, 334, 888,
	0, 441, 360, 0, 0, 0, 868, 924, 876, 914,
	863, 901, 822, 887, 937, 850, 897, 938, 292, 230,
	195, 372, 442, 264, 0, 0, 0, 0, 187, 188,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 228, 315, 324, 323, 304, 305, 307,
	309, 314, 321, 327, 846, 894, 932, 847, 896, 243,
	290, 250, 242, 460, 943, 923, 811, 875, 931, 0,
	0, 213, 934, 870, 0, 899, 0, 949, 806, 890,
	0, 809, 813, 945, 927, 841, 253, 0, 0, 0,
	0, 0, 0, 0, 867, 877, 911, 861, 0, 0,
	0, 0, 0, 2335, 0, 839, 0, 886, 0, 0,
	0, 818, 810, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 865, 0, 0, 0, 821, 0,
	840, 912, 0, 803, 273, 815, 361, 235, 0, 916,
	926, 862, 494, 930, 860, 859, 906, 819, 922, 853,
	329, 817, 298, 191, 209, 0, 851, 371, 412, 418,
	921, 836, 845, 233, 843, 416, 385, 478, 217, 262,
	409, 390, 414, 397, 265, 885, 904, 415, 335, 465,
	404, 475, 495, 496, 241, 365, 485, 454, 491, 508,
	210, 238, 379, 447, 481, 438, 358, 461, 462, 297,
	437, 271, 194, 333, 501, 208, 424, 225, 215, 201,
	449, 473, 222, 428, 0, 0, 510, 203, 471, 446,
	354, 294, 295, 202, 0, 408, 246, 269, 236, 374,
	468, 469, 234, 511, 212, 490, 205, 1133, 489, 367,
	464, 472, 355, 345, 204, 470, 353, 344, 300, 319,
	320, 258, 280, 402, 338, 403, 281, 363, 362, 364,
	197, 482, 0, 198, 0, 443, 483, 512, 218, 219,
	220, 831, 257, 261, 268, 270, 276, 277, 284, 331,
	378, 401, 399, 405, 917, 459, 476, 486, 493, 499,
	500, 502, 503, 504, 505, 506, 507, 366, 283, 439,
	299, 336, 909, 948, 384, 417, 223, 480, 440, 826,
	830, 824, 891, 825, 880, 881, 827, 939, 940, 941,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 0, 913,
	820, 0, 828, 829, 0, 919, 928, 929, 531, 346,
	430, 477, 301, 313, 316, 306, 325, 0, 326, 302,
	303, 308, 310, 311, 312, 317, 318, 322, 328, 884,
	190, 206, 332, 944, 406, 266, 509, 488, 484, 805,
	823, 240, 834, 842, 0, 848, 856, 857, 869, 871,
	872, 873, 874, 892, 893, 895, 903, 905, 908, 910,
	915, 925, 947, 192, 193, 199, 207, 216, 226, 239,
	254, 256, 263, 274, 279, 282, 287, 288, 291, 296,
	342, 348, 349, 350, 351, 368, 369, 370, 373, 376,
	377, 380, 382, 383, 386, 393, 394, 395, 396, 398,
	400, 407, 411, 419, 420, 421, 422, 423, 426, 427,
	432, 433, 434, 435, 436, 444, 448, 466, 467, 479,
	492, 497, 425, 275, 474, 498, 0, 341, 883, 889,
	343, 259, 278, 289, 898, 487, 445, 211, 413, 267,
	200, 229, 214, 237, 252, 255, 293, 352, 359, 388,
	392, 272, 249, 227, 410, 224, 429, 451, 452, 453,
	455, 356, 244, 391, 879, 907, 339, 457, 458, 285,
	357, 0, 0, 933, 918, 456, 0, 864, 936, 833,
	852, 946, 855, 858, 900, 812, 878, 375, 849, 804,
	837, 807, 844, 808, 835, 866, 248, 832, 920, 882,
	935, 330, 245, 814, 838, 389, 854, 196, 902, 431,
	232, 340, 337, 463, 260, 251, 247, 231, 286, 347,
	387, 450, 381, 942, 334, 888, 0, 441, 360, 0,
	0, 0, 868, 924, 876, 914, 863, 901, 822, 887,
	937, 850, 897, 938, 292, 230, 195, 372, 442, 264,
	0, 0, 0, 0, 187, 188, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 228,
	315, 324, 323, 304, 305, 307, 309, 314, 321, 327,
	846, 894, 932, 847, 896, 243, 290, 250, 242, 460,
	943, 923, 811, 875, 931, 0, 0, 213, 934, 870,
	0, 899, 0, 949, 806, 890, 0, 809, 813, 945,
	927, 841, 253, 0, 0, 0, 0, 0, 0, 0,
	867, 877, 911, 861, 0, 0, 0, 0, 0, 1799,
	0, 839, 0, 886, 0, 0, 0, 818, 810, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	865, 0, 0, 0, 821, 0, 840, 912, 0, 803,
	273, 815, 361, 235, 0, 916, 926, 862, 494, 930,
	860, 859, 906, 819, 922, 853, 329, 817, 298, 191,
	209, 0, 851, 371, 412, 418, 921, 836, 845, 233,
	843, 416, 385, 478, 217, 262, 409, 390, 414, 397,
	265, 885, 904, 415, 335, 465, 404, 475, 495, 496,
	241, 365, 485, 454, 491, 508, 210, 238, 379, 447,
	481, 438, 358, 461, 462, 297, 437, 271, 194, 333,
	501, 208, 424, 225, 215, 201, 449, 473, 222, 428,
	0, 0, 510, 203, 471, 446, 354, 294, 295, 202,
	0, 408, 246, 269, 236, 374, 468, 469, 234, 511,
	212, 490, 205, 1133, 489, 367, 464, 472, 355, 345,
	204, 470, 353, 344, 300, 319, 320, 258, 280, 402,
	338, 403, 281, 363, 362, 364, 197, 482, 0, 198,
	0, 443, 483, 512, 218, 219, 220, 831, 257, 261,
	268, 270, 276, 277, 284, 331, 378, 401, 399, 405,
	917, 459, 476, 486, 493, 499, 500, 502, 503, 504,
	505, 506, 507, 366, 283, 439, 299, 336, 909, 948,
	384, 417, 223, 480, 440, 826, 830, 824, 891, 825,
	880, 881, 827, 939, 940, 941, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 0, 913, 820, 0, 828, 829,
	0, 919, 928, 929, 531, 346, 430, 477, 301, 313,
	316, 306, 325, 0, 326, 302, 303, 308, 310, 311,
	312, 317, 318, 322, 328, 884, 190, 206, 332, 944,
	406, 266, 509, 488, 484, 805, 823, 240, 834, 842,
	0, 848, 856, 857, 869, 871, 872, 873, 874, 892,
	893, 895, 903, 905, 908, 910, 915, 925, 947, 192,
	193, 199, 207, 216, 226, 239, 254, 256, 263, 274,
	279, 282, 287, 288, 291, 296, 342, 348, 349, 350,
	351, 368, 369, 370, 373, 376, 377, 380, 382, 383,
	386, 393, 394, 395, 396, 398, 400, 407, 411, 419,
	420, 421, 422, 423, 426, 427, 432, 433, 434, 435,
	436, 444, 448, 466, 467, 479, 492, 497, 425, 275,
	474, 498, 0, 341, 883, 889, 343, 259, 278, 289,
	898, 487, 445, 211, 413, 267, 200, 229, 214, 237,
	252, 255, 293, 352, 359, 388, 392, 272, 249, 227,
	410, 224, 429, 451, 452, 453, 455, 356, 244, 391,
	879, 907, 339, 457, 458, 285, 357, 0, 0, 933,
	918, 456, 0, 864, 936, 833, 852, 946, 855, 858,
	900, 812, 878, 375, 849, 804, 837, 807, 844, 808,
	835, 866, 248, 832, 920, 882, 935, 330, 245, 814,
	838, 389, 854, 196, 902, 431, 232, 340, 337, 463,
	260, 251, 247, 231, 286, 347, 387, 450, 381, 942,
	334, 888, 0, 441, 360, 0, 0, 0, 868, 924,
	876, 914, 863, 901, 822, 887, 937, 850, 897, 938,
	292, 230, 195, 372, 442, 264, 0, 87, 0, 0,
	187, 188, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 228, 315, 324, 323, 304,
	305, 307, 309, 314, 321, 327, 846, 894, 932, 847,
	896, 243, 290, 250, 242, 460, 943, 923, 811, 875,
	931, 0, 0, 213, 934, 870, 0, 899, 0, 949,
	806, 890, 0, 809, 813, 945, 927, 841, 253, 0,
	0, 0, 0, 0, 0, 0, 867, 877, 911, 861,
	0, 0, 0, 0, 0, 0, 0, 839, 0, 886,
	0, 0, 0, 818, 810, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 865, 0, 0, 0,
	821, 0, 840, 912, 0, 803, 273, 815, 361, 235,
	0, 916, 926, 862, 494, 930, 860, 859, 906, 819,
	922, 853, 329, 817, 298, 191, 209, 0, 851, 371,
	412, 418, 921, 836, 845, 233, 843, 416, 385, 478,
	217, 262, 409, 390, 414, 397, 265, 885, 904, 415,
	335, 465, 404, 475, 495, 496, 241, 365, 485, 454,
	491, 508, 210, 238, 379, 447, 481, 438, 358, 461,
	462, 297, 437, 271, 194, 333, 501, 208, 424, 225,
	215, 201, 449, 473, 222, 428, 0, 0, 510, 203,
	471, 446, 354, 294, 295, 202, 0, 408, 246, 269,
	236, 374, 468, 469, 234, 511, 212, 490, 205, 1133,
	489, 367, 464, 472, 355, 345, 204, 470, 353, 344,
	300, 319, 320, 258, 280, 402, 338, 403, 281, 363,
	362, 364, 197, 482, 0, 198, 0, 443, 483, 512,
	218, 219, 220, 831, 257, 261, 268, 270, 276, 277,
	284, 331, 378, 401, 399, 405, 917, 459, 476, 486,
	493, 499, 500, 502, 503, 504, 505, 506, 507, 366,
	283, 439, 299, 336, 909, 948, 384, 417, 223, 480,
	440, 826, 830, 824, 891, 825, 880, 881, 827, 939,
	940, 941, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	0, 913, 820, 0, 828, 829, 0, 919, 928, 929,
	531, 346, 430, 477, 301, 313, 316, 306, 325, 0,
	326, 302, 303, 308, 310, 311, 312, 317, 318, 322,
	328, 884, 190, 206, 332, 944, 406, 266, 509, 488,
	484, 805, 823, 240, 834, 842, 0, 848, 856, 857,
	869, 871, 872, 873, 874, 892, 893, 895, 903, 905,
	908, 910, 915, 925, 947, 192, 193, 199, 207, 216,
	226, 239, 254, 256, 263, 274, 279, 282, 287, 288,
	291, 296, 342, 348, 349, 350, 351, 368, 369, 370,
	373, 376, 377, 380, 382, 383, 386, 393, 394, 395,
	396, 398, 400, 407, 411, 419, 420, 421, 422, 423,
	426, 427, 432, 433, 434, 435, 436, 444, 448, 466,
	467, 479, 492, 497, 425, 275, 474, 498, 0, 341,
	883, 889, 343, 259, 278, 289, 898, 487, 445, 211,
	413, 267, 200, 229, 214, 237, 252, 255, 293, 352,
	359, 388, 392, 272, 249, 227, 410, 224, 429, 451,
	452, 453, 455, 356, 244, 391, 879, 907, 339, 457,
	458, 285, 357, 0, 0, 933, 918, 456, 0, 864,
	936, 833, 852, 946, 855, 858, 900, 812, 878, 375,
	849, 804, 837, 807, 844, 808, 835, 866, 248, 832,
	920, 882, 935, 330, 245, 814, 838, 389, 854, 196,
	902, 431, 232, 340, 337, 463, 260, 251, 247, 231,
	286, 347, 387, 450, 381, 942, 334, 888, 0, 441,
	360, 0, 0, 0, 868, 924, 876, 914, 863, 901,
	822, 887, 937, 850, 897, 938, 292, 230, 195, 372,
	442, 264, 0, 0, 0, 0, 187, 188, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 228, 315, 324, 323, 304, 305, 307, 309, 314,
	321, 327, 846, 894, 932, 847, 896, 243, 290, 250,
	242, 460, 943, 923, 811, 875, 931, 0, 0, 213,
	934, 870, 0, 899, 0, 949, 806, 890, 0, 809,
	813, 945, 927, 841, 253, 0, 0, 0, 0, 0,
	0, 0, 867, 877, 911, 861, 0, 0, 0, 0,
	0, 0, 0, 839, 0, 886, 0, 0, 0, 818,
	810, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 865, 0, 0, 0, 821, 0, 840, 912,
	0, 803, 273, 815, 361, 235, 0, 916, 926, 862,
	494, 930, 860, 859, 906, 819, 922, 853, 329, 817,
	298, 191, 209, 0, 851, 371, 412, 418, 921, 836,
	845, 233, 843, 416, 385, 478, 217, 262, 409, 390,
	414, 397, 265, 885, 904, 415, 335, 465, 404, 475,
	495, 496, 241, 365, 485, 454, 491, 508, 210, 238,
	379, 447, 481, 438, 358, 461, 462, 297, 437, 271,
	194, 333, 501, 208, 424, 225, 215, 201, 449, 473,
	222, 428, 0, 0, 510, 203, 471, 446, 354, 294,
	295, 202, 0, 408, 246, 269, 236, 374, 468, 469,
	234, 511, 212, 490, 205, 1133, 489, 367, 464, 472,
	355, 345, 204, 470, 353, 344, 300, 319, 320, 258,
	280, 402, 338, 403, 281, 363, 362, 364, 197, 482,
	0, 198, 0, 443, 483, 512, 218, 219, 220, 831,
	257, 261, 268, 270, 276, 277, 284, 331, 378, 401,
	399, 405, 917, 459, 476, 486, 493, 499, 500, 502,
	503, 504, 505, 506, 507, 366, 283, 439, 299, 336,
	909, 948, 384, 417, 223, 480, 440, 826, 830, 824,
	891, 825, 880, 881, 827, 939, 940, 941, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 0, 913, 820, 0,
	828, 829, 0, 919, 928, 929, 531, 346, 430, 477,
	301, 313, 316, 306, 325, 0, 326, 302, 303, 308,
	310, 311, 312, 317, 318, 322, 328, 884, 190, 206,
	332, 944, 406, 266, 509, 488, 484, 805, 823, 240,
	834, 842, 0, 848, 856, 857, 869, 871, 872, 873,
	874, 892, 893, 895, 903, 905, 908, 910, 915, 925,
	947, 192, 193, 199, 207, 216, 226, 239, 254, 256,
	263, 274, 279, 282, 287, 288, 291, 296, 342, 348,
	349, 350, 351, 368, 369, 370, 373, 376, 377, 380,
	382, 383, 386, 393, 394, 395, 396, 398, 400, 407,
	411, 419, 420, 421, 422, 423, 426, 427, 432, 433,
	434, 435, 436, 444, 448, 466, 467, 479, 492, 497,
	425, 275, 474, 498, 0, 341, 883, 889, 343, 259,
	278, 289, 898, 487, 445, 211, 413, 267, 200, 229,
	214, 237, 252, 255, 293, 352, 359, 388, 392, 272,
	249, 227, 410, 224, 429, 451, 452, 453, 455, 356,
	244, 391, 879, 907, 339, 457, 458, 285, 357, 0,
	0, 933, 918, 456, 0, 864, 936, 833, 852, 946,
	855, 858, 900, 812, 878, 375, 849, 804, 837, 807,
	844, 808, 835, 866, 248, 832, 920, 882, 935, 330,
	245, 814, 838, 389, 854, 196, 902, 431, 232, 340,
	337, 463, 260, 251, 247, 231, 286, 347, 387, 450,
	381, 942, 334, 888, 0, 441, 360, 0, 0, 0,
	868, 924, 876, 914, 863, 901, 822, 887, 937, 850,
	897, 938, 292, 230, 195, 372, 442, 264, 0, 0,
	0, 0, 187, 188, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 228, 315, 324,
	323, 304, 305, 307, 309, 314, 321, 327, 846, 894,
	932, 847, 896, 243, 290, 250, 242, 460, 943, 923,
	811, 875, 931, 0, 0, 950, 934, 870, 0, 899,
	0, 949, 806, 890, 0, 809, 813, 945, 927, 841,
	253, 0, 0, 0, 0, 0, 0, 0, 867, 877,
	911, 861, 0, 0, 0, 0, 0, 0, 0, 839,
	0, 886, 0, 0, 0, 818, 810, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 865, 0,
	0, 0, 821, 0, 840, 912, 0, 803, 273, 815,
	361, 235, 0, 916, 926, 862, 494, 930, 860, 859,
	906, 819, 922, 853, 329, 817, 298, 191, 209, 0,
	851, 371, 412, 418, 921, 836, 845, 233, 843, 416,
	385, 478, 217, 262, 409, 390, 414, 397, 265, 885,
	904, 415, 335, 465, 404, 475, 495, 496, 241, 365,
	485, 454, 491, 508, 210, 238, 379, 447, 481, 438,
	358, 461, 462, 297, 437, 271, 194, 333, 501, 208,
	424, 225, 215, 201, 449, 473, 222, 428, 0, 0,
	510, 203, 471, 446, 354, 294, 295, 202, 0, 408,
	246, 269, 236, 374, 468, 469, 234, 511, 212, 490,
	205, 816, 489, 367, 464, 472, 355, 345, 204, 470,
	353, 344, 300, 319, 320, 258, 280, 402, 338, 403,
	281, 363, 362, 364, 197, 482, 0, 198, 0, 443,
	483, 512, 218, 219, 220, 831, 257, 261, 268, 270,
	276, 277, 284, 331, 378, 401, 399, 405, 917, 459,
	476, 486, 493, 499, 500, 502, 503, 504, 505, 506,
	507, 802, 796, 795, 299, 336, 909, 948, 384, 417,
	223, 480, 440, 826, 830, 824, 891, 825, 880, 881,
	827, 939, 940, 941, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 0, 913, 820, 0, 828, 829, 0, 919,
	928, 929, 531, 346, 430, 477, 301, 313, 316, 306,
	325, 0, 326, 302, 303, 308, 310, 311, 312, 317,
	318, 322, 328, 884, 190, 206, 332, 944, 406, 266,
	509, 488, 484, 805, 823, 240, 834, 842, 0, 848,
	856, 857, 869, 871, 872, 873, 874, 892, 893, 895,
	903, 905, 908, 910, 915, 925, 947, 192, 193, 199,
	207, 216, 226, 239, 254, 256, 263, 274, 279, 282,
	287, 288, 291, 296, 342, 348, 349, 350, 351, 368,
	369, 370, 373, 376, 377, 380, 382, 383, 386, 393,
	394, 395, 396, 398, 400, 407, 411, 419, 420, 421,
	422, 423, 426, 427, 432, 433, 434, 435, 436, 444,
	448, 466, 467, 479, 492, 497, 425, 275, 474, 498,
	0, 341, 883, 889, 343, 259, 278, 289, 898, 487,
	445, 211, 413, 267, 200, 229, 214, 237, 252, 255,
	293, 352, 359, 388, 392, 272, 249, 227, 410, 224,
	429, 451, 452, 453, 455, 356, 244, 391, 879, 907,
	339, 457, 458, 285, 357, 0, 0, 933, 918, 456,
	0, 864, 936, 833, 852, 946, 855, 858, 900, 812,
	878, 375, 849, 804, 837, 807, 844, 808, 835, 866,
	248, 832, 920, 882, 935, 330, 245, 814, 838, 389,
	854, 196, 902, 431, 232, 340, 337, 463, 260, 251,
	247, 231, 286, 347, 387, 450, 381, 942, 334, 888,
	0, 441, 360, 0, 0, 0, 868, 924, 876, 914,
	863, 901, 822, 887, 937, 850, 897, 938, 292, 230,
	195, 372, 442, 264, 0, 0, 0, 0, 187, 188,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 228, 315, 324, 323, 304, 305, 307,
	309, 314, 321, 327, 846, 894, 932, 847, 896, 243,
	290, 250, 242, 460, 943, 923, 811, 875, 931, 0,
	0, 950, 934, 870, 0, 899, 0, 949, 806, 890,
	0, 809, 813, 945, 927, 841, 253, 0, 0, 0,
	0, 0, 0, 0, 867, 877, 911, 861, 0, 0,
	0, 0, 0, 0, 0, 839, 0, 886, 0, 0,
	0, 818, 810, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 865, 0, 0, 0, 821, 0,
	840, 912, 0, 803, 273, 815, 361, 235, 0, 916,
	926, 862, 494, 930, 860, 859, 906, 819, 922, 853,
	329, 817, 298, 191, 209, 0, 851, 371, 412, 418,
	921, 836, 845, 233, 843, 416, 385, 478, 217, 262,
	409, 390, 414, 397, 265, 885, 904, 415, 335, 465,
	404, 475, 495, 496, 241, 365, 485, 454, 491, 508,
	210, 238, 379, 447, 481, 438, 358, 461, 462, 297,
	437, 271, 194, 333, 501, 208, 424, 225, 215, 201,
	449, 1348, 222, 428, 0, 0, 510, 203, 471, 446,
	354, 294, 295, 202, 0, 408, 246, 269, 236, 374,
	468, 469, 234, 511, 212, 490, 205, 816, 489, 367,
	464, 472, 355, 345, 204, 470, 353, 344, 300, 319,
	320, 258, 280, 402, 338, 403, 281, 363, 362, 364,
	197, 482, 0, 198, 0, 443, 483, 512, 218, 219,
	220, 831, 257, 261, 268, 270, 276, 277, 284, 331,
	378, 401, 399, 405, 917, 459, 476, 486, 493, 499,
	500, 502, 503, 504, 505, 506, 507, 802, 796, 795,
	299, 336, 909, 948, 384, 417, 223, 480, 440, 826,
	830, 824, 891, 825, 880, 881, 827, 939, 940, 941,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 0, 913,
	820, 0, 828, 829, 0, 919, 928, 929, 531, 346,
	430, 477, 301, 313, 316, 306, 325, 0, 326, 302,
	303, 308, 310, 311, 312, 317, 318, 322, 328, 884,
	190, 206, 332, 944, 406, 266, 509, 488, 484, 805,
	823, 240, 834, 842, 0, 848, 856, 857, 869, 871,
	872, 873, 874, 892, 893, 895, 903, 905, 908, 910,
	915, 925, 947, 192, 193, 199, 207, 216, 226, 239,
	254, 256, 263, 274, 279, 282, 287, 288, 291, 296,
	342, 348, 349, 350, 351, 368, 369, 370, 373, 376,
	377, 380, 382, 383, 386, 393, 394, 395, 396, 398,
	400, 407, 411, 419, 420, 421, 422, 423, 426, 427,
	432, 433, 434, 435, 436, 444, 448, 466, 467, 479,
	492, 497, 425, 275, 474, 498, 0, 341, 883, 889,
	343, 259, 278, 289, 898, 487, 445, 211, 413, 267,
	200, 229, 214, 237, 252, 255, 293, 352, 359, 388,
	392, 272, 249, 227, 410, 224, 429, 451, 452, 453,
	455, 356, 244, 391, 879, 907, 339, 457, 458, 285,
	357, 0, 0, 933, 918, 456, 0, 864, 936, 833,
	852, 946, 855, 858, 900, 812, 878, 375, 849, 804,
	837, 807, 844, 808, 835, 866, 248, 832, 920, 882,
	935, 330, 245, 814, 838, 389, 854, 196, 902, 431,
	232, 340, 337, 463, 260, 251, 247, 231, 286, 347,
	387, 450, 381, 942, 334, 888, 0, 441, 360, 0,
	0, 0, 868, 924, 876, 914, 863, 901, 822, 887,
	937, 850, 897, 938, 292, 230, 195, 372, 442, 264,
	0, 0, 0, 0, 187, 188, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 228,
	315, 324, 323, 304, 305, 307, 309, 314, 321, 327,
	846, 894, 932, 847, 896, 243, 290, 250, 242, 460,
	943, 923, 811, 875, 931, 0, 0, 950, 934, 870,
	0, 899, 0, 949, 806, 890, 0, 809, 813, 945,
	927, 841, 253, 0, 0, 0, 0, 0, 0, 0,
	867, 877, 911, 861, 0, 0, 0, 0, 0, 0,
	0, 839, 0, 886, 0, 0, 0, 818, 810, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	865, 0, 0, 0, 821, 0, 840, 912, 0, 803,
	273, 815, 361, 235, 0, 916, 926, 862, 494, 930,
	860, 859, 906, 819, 922, 853, 329, 817, 298, 191,
	209, 0, 851, 371, 412, 418, 921, 836, 845, 233,
	843, 416, 385, 478, 217, 262, 409, 390, 414, 397,
	265, 885, 904, 415, 335, 465, 404, 475, 495, 496,
	241, 365, 485, 454, 491, 508, 210, 238, 379, 447,
	481, 438, 358, 461, 462, 297, 437, 271, 194, 333,
	501, 208, 424, 225, 215, 201, 449, 793, 222, 428,
	0, 0, 510, 203, 471, 446, 354, 294, 295, 202,
	0, 408, 246, 269, 236, 374, 468, 469, 234, 511,
	212, 490, 205, 816, 489, 367, 464, 472, 355, 345,
	204, 470, 353, 344, 300, 319, 320, 258, 280, 402,
	338, 403, 281, 363, 362, 364, 197, 482, 0, 198,
	0, 443, 483, 512, 218, 219, 220, 831, 257, 261,
	268, 270, 276, 277, 284, 331, 378, 401, 399, 405,
	917, 459, 476, 486, 493, 499, 500, 502, 503, 504,
	505, 506, 507, 802, 796, 795, 299, 336, 909, 948,
	384, 417, 223, 480, 440, 826, 830, 824, 891, 825,
	880, 881, 827, 939, 940, 941, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 0, 913, 820, 0, 828, 829,
	0, 919, 928, 929, 531, 346, 430, 477, 301, 313,
	316, 306, 325, 0, 326, 302, 303, 308, 310, 311,
	312, 317, 318, 322, 328, 884, 190, 206, 332, 944,
	406, 266, 509, 488, 484, 805, 823, 240, 834, 842,
	0, 848, 856, 857, 869, 871, 872, 873, 874, 892,
	893, 895, 903, 905, 908, 910, 915, 925, 947, 192,
	193, 199, 207, 216, 226, 239, 254, 256, 263, 274,
	279, 282, 287, 288, 291, 296, 342, 348, 349, 350,
	351, 368, 369, 370, 373, 376, 377, 380, 382, 383,
	386, 393, 394, 395, 396, 398, 400, 407, 411, 419,
	420, 421, 422, 423, 426, 427, 432, 433, 434, 435,
	436, 444, 448, 466, 467, 479, 492, 497, 425, 275,
	474, 498, 0, 341, 883, 889, 343, 259, 278, 289,
	898, 487, 445, 211, 413, 267, 200, 229, 214, 237,
	252, 255, 293, 352, 359, 388, 392, 272, 249, 227,
	410, 224, 429, 451, 452, 453, 455, 356, 244, 391,
	879, 907, 339, 457, 458, 285, 357, 0, 0, 0,
	0, 456, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 375, 0, 0, 1744, 0, 612, 0,
	0, 0, 248, 617, 0, 0, 0, 330, 245, 0,
	1745, 389, 0, 196, 0, 431, 232, 340, 337, 463,
	260, 251, 247, 231, 286, 347, 387, 450, 381, 624,
	334, 0, 0, 441, 360, 0, 0, 0, 0, 0,
	619, 620, 0, 0, 0, 0, 0, 0, 0, 0,
	292, 230, 195, 372, 442, 264, 0, 87, 0, 0,
	187, 188, 189, 688, 695, 696, 697, 698, 699, 689,
	691, 0, 0, 221, 690, 228, 635, 637, 636, 646,
	647, 648, 649, 650, 651, 652, 633, 693, 700, 701,
	0, 243, 290, 250, 242, 460, 0, 0, 0, 0,
	0, 0, 0, 213, 0, 0, 0, 0, 0, 0,
	0, 595, 609, 0, 623, 0, 0, 0, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 606, 607, 782, 0, 0, 0, 672,
	0, 608, 0, 0, 616, 702, 703, 704, 705, 706,
	707, 708, 709, 710, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 741, 742, 618, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 361, 235,
	0, 671, 0, 0, 494, 0, 0, 669, 0, 0,
	0, 0, 329, 0, 298, 191, 209, 0, 0, 371,
	412, 418, 0, 0, 0, 233, 0, 416, 385, 478,
	217, 262, 409, 390, 414, 397, 265, 0, 0, 415,
	335, 465, 404, 475, 495, 496, 241, 365, 485, 454,
	491, 508, 210, 238, 379, 447, 481, 438, 358, 461,
	462, 297, 437, 271, 194, 333, 501, 208, 424, 225,
	215, 201, 449, 473, 222, 428, 0, 0, 510, 203,
	471, 446, 354, 294, 295, 202, 0, 408, 246, 269,
	236, 374, 468, 469, 234, 511, 212, 490, 205, 0,
	489, 367, 464, 472, 355, 345, 204, 470, 353, 344,
	300, 641, 642, 258, 280, 402, 338, 403, 281, 363,
	362, 364, 197, 482, 0, 198, 0, 443, 483, 512,
	218, 219, 220, 0, 257, 261, 268, 270, 276, 277,
	284, 331, 378, 401, 399, 405, 0, 459, 476, 486,
	493, 499, 500, 502, 503, 504, 505, 506, 507, 366,
	283, 439, 299, 336, 0, 0, 384, 417, 223, 480,
	440, 678, 670, 628, 682, 630, 679, 680, 625, 626,
	629, 681, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	0, 673, 615, 614, 0, 621, 622, 0, 631, 632,
	634, 638, 639, 640, 643, 644, 645, 653, 655, 656,
	654, 657, 658, 659, 662, 663, 664, 665, 660, 661,
	666, 613, 190, 206, 332, 0, 406, 266, 509, 488,
	484, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 199, 207, 216,
	226, 239, 254, 256, 263, 274, 279, 282, 287, 288,
	291, 296, 342, 348, 349, 350, 351, 368, 369, 370,
	373, 376, 377, 380, 382, 383, 386, 393, 394, 395,
	396, 398, 400, 407, 411, 419, 420, 421, 422, 423,
	426, 427, 432, 433, 434, 435, 436, 444, 448, 466,
	467, 479, 492, 497, 425, 275, 474, 498, 0, 341,
	0, 0, 343, 259, 278, 289, 0, 487, 445, 211,
	413, 267, 200, 229, 214, 237, 252, 255, 293, 352,
	359, 388, 392, 272, 249, 227, 410, 224, 429, 451,
	452, 453, 455, 356, 244, 391, 0, 357, 339, 457,
	458, 285, 456, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 375, 0, 0, 0, 0, 612,
	0, 0, 0, 248, 617, 0, 0, 0, 330, 245,
	0, 0, 389, 0, 196, 0, 431, 232, 340, 337,
	463, 260, 251, 247, 231, 286, 347, 387, 450, 381,
	624, 334, 0, 0, 441, 360, 0, 0, 0, 0,
	0, 619, 620, 0, 0, 0, 0, 0, 0, 0,
	0, 292, 230, 195, 372, 442, 264, 0, 87, 0,
	0, 187, 188, 189, 688, 695, 696, 697, 698, 699,
	689, 691, 0, 0, 221, 690, 228, 635, 637, 636,
	646, 647, 648, 649, 650, 651, 652, 633, 693, 700,
	701, 0, 243, 290, 250, 242, 460, 0, 0, 1710,
	1711, 1712, 0, 0, 213, 0, 0, 0, 0, 0,
	0, 0, 595, 609, 0, 623, 0, 0, 0, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 606, 607, 0, 0, 0, 0,
	672, 0, 608, 0, 0, 616, 702, 703, 704, 705,
	706, 707, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 618, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 361,
	235, 0, 671, 0, 0, 494, 0, 0, 669, 0,
	0, 0, 0, 329, 0, 298, 191, 209, 0, 0,
	371, 412, 418, 0, 0, 0, 233, 0, 416, 385,
	478, 217, 262, 409, 390, 414, 397, 265, 0, 0,
	415, 335, 465, 404, 475, 495, 496, 241, 365, 485,
	454, 491, 508, 210, 238, 379, 447, 481, 438, 358,
	461, 462, 297, 437, 271, 194, 333, 501, 208, 424,
	225, 215, 201, 449, 473, 222, 428, 0, 0, 510,
	203, 471, 446, 354, 294, 295, 202, 0, 408, 246,
	269, 236, 374, 468, 469, 234, 511, 212, 490, 205,
	0, 489, 367, 464, 472, 355, 345, 204, 470, 353,
	344, 300, 641, 642, 258, 280, 402, 338, 403, 281,
	363, 362, 364, 197, 482, 0, 198, 0, 443, 483,
	512, 218, 219, 220, 0, 257, 261, 268, 270, 276,
	277, 284, 331, 378, 401, 399, 405, 0, 459, 476,
	486, 493, 499, 500, 502, 503, 504, 505, 506, 507,
	366, 283, 439, 299, 336, 0, 0, 384, 417, 223,
	480, 440, 678, 670, 628, 682, 630, 679, 680, 625,
	626, 629, 681, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 0, 673, 615, 614, 0, 621, 622, 0, 631,
	632, 634, 638, 639, 640, 643, 644, 645, 653, 655,
	656, 654, 657, 658, 659, 662, 663, 664, 665, 660,
	661, 666, 613, 190, 206, 332, 0, 406, 266, 509,
	488, 484, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 199, 207,
	216, 226, 239, 254, 256, 263, 274, 279, 282, 287,
	288, 291, 296, 342, 348, 349, 350, 351, 368, 369,
	370, 373, 376, 377, 380, 382, 383, 386, 393, 394,
	395, 396, 398, 400, 407, 411, 419, 420, 421, 422,
	423, 426, 427, 432, 433, 434, 435, 436, 444, 448,
	466, 467, 479, 492, 497, 425, 275, 474, 498, 0,
	341, 0, 0, 343, 259, 278, 289, 0, 487, 445,
	211, 413, 267, 200, 229, 214, 237, 252, 255, 293,
	352, 359, 388, 392, 272, 249, 227, 410, 224, 429,
	451, 452, 453, 455, 356, 244, 391, 0, 357, 339,
	457, 458, 285, 456, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 375, 0, 0, 0, 0,
	612, 0, 0, 0, 248, 617, 0, 0, 0, 330,
	245, 0, 0, 389, 0, 196, 0, 431, 232, 340,
	337, 463, 260, 251, 247, 231, 286, 347, 387, 450,
	381, 624, 334, 0, 0, 441, 360, 0, 0, 0,
	0, 0, 619, 620, 0, 0, 0, 0, 0, 0,
	1826, 0, 292, 230, 195, 372, 442, 264, 0, 87,
	0, 0, 187, 188, 189, 688, 695, 696, 697, 698,
	699, 689, 691, 0, 0, 221, 690, 228, 635, 637,
	636, 646, 647, 648, 649, 650, 651, 652, 633, 693,
	700, 701, 1827, 243, 290, 250, 242, 460, 0, 0,
	0, 0, 0, 0, 0, 213, 0, 0, 0, 0,
	0, 0, 0, 595, 609, 0, 623, 0, 0, 0,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 606, 607, 0, 0, 0,
	0, 672, 0, 608, 0, 0, 616, 702, 703, 704,
	705, 706, 707, 708, 709, 710, 711, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
	735, 736, 737, 738, 739, 740, 741, 742, 618, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	361, 235, 0, 671, 0, 0, 494, 0, 0, 669,
	0, 0, 0, 0, 329, 0, 298, 191, 209, 0,
	0, 371, 412, 418, 0, 0, 0, 233, 0, 416,
	385, 478, 217, 262, 409, 390, 414, 397, 265, 0,
	0, 415, 335, 465, 404, 475, 495, 496, 241, 365,
	485, 454, 491, 508, 210, 238, 379, 447, 481, 438,
	358, 461, 462, 297, 437, 271, 194, 333, 501, 208,
	424, 225, 215, 201, 449, 473, 222, 428, 0, 0,
	510, 203, 471, 446, 354, 294, 295, 202, 0, 408,
	246, 269, 236, 374, 468, 469, 234, 511, 212, 490,
	205, 0, 489, 367, 464, 472, 355, 345, 204, 470,
	353, 344, 300, 641, 642, 258, 280, 402, 338, 403,
	281, 363, 362, 364, 197, 482, 0, 198, 0, 443,
	483, 512, 218, 219, 220, 0, 257, 261, 268, 270,
	276, 277, 284, 331, 378, 401, 399, 405, 0, 459,
	476, 486, 493, 499, 500, 502, 503, 504, 505, 506,
	507, 366, 283, 439, 299, 336, 0, 0, 384, 417,
	223, 480, 440, 678, 670, 628, 682, 630, 679, 680,
	625, 626, 629, 681, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 0, 673, 615, 614, 0, 621, 622, 0,
	631, 632, 634, 638, 639, 640, 643, 644, 645, 653,
	655, 656, 654, 657, 658, 659, 662, 663, 664, 665,
	660, 661, 666, 613, 190, 206, 332, 0, 406, 266,
	509, 488, 484, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 199,
	207, 216, 226, 239, 254, 256, 263, 274, 279, 282,
	287, 288, 291, 296, 342, 348, 349, 350, 351, 368,
	369, 370, 373, 376, 377, 380, 382, 383, 386, 393,
	394, 395, 396, 398, 400, 407, 411, 419, 420, 421,
	422, 423, 426, 427, 432, 433, 434, 435, 436, 444,
	448, 466, 467, 479, 492, 497, 425, 275, 474, 498,
	0, 341, 0, 0, 343, 259, 278, 289, 0, 487,
	445, 211, 413, 267, 200, 229, 214, 237, 252, 255,
	293, 352, 359, 388, 392, 272, 249, 227, 410, 224,
	429, 451, 452, 453, 455, 356, 244, 391, 0, 0,
	339, 457, 458, 285, 357, 0, 0, 0, 78, 456,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 0, 0, 0, 0, 612, 0, 0, 0,
	248, 617, 0, 0, 0, 330, 245, 0, 0, 389,
	0, 196, 0, 431, 232, 340, 337, 463, 260, 251,
	247, 231, 286, 347, 387, 450, 381, 624, 334, 0,
	0, 441, 360, 0, 0, 0, 0, 0, 619, 620,
	0, 0, 0, 0, 0, 0, 0, 0, 292, 230,
	195, 372, 442, 264, 0, 87, 0, 0, 187, 188,
	189, 688, 695, 696, 697, 698, 699, 689, 691, 0,
	0, 221, 690, 228, 635, 637, 636, 646, 647, 648,
	649, 650, 651, 652, 633, 693, 700, 701, 0, 243,
	290, 250, 242, 460, 0, 0, 0, 0, 0, 0,
	0, 213, 0, 0, 0, 0, 0, 0, 0, 595,
	609, 0, 623, 0, 0, 0, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 606, 607, 0, 0, 0, 0, 672, 0, 608,
	0, 0, 616, 702, 703, 704, 705, 706, 707, 708,
	709, 710, 711, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 742, 618, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 361, 235, 0, 671,
	0, 0, 494, 0, 0, 669, 0, 0, 0, 0,
	329, 0, 298, 191, 209, 0, 0, 371, 412, 418,
	0, 0, 0, 233, 0, 416, 385, 478, 217, 262,
	409, 390, 414, 397, 265, 0, 0, 415, 335, 465,
	404, 475, 495, 496, 241, 365, 485, 454, 491, 508,
	210, 238, 379, 447, 481, 438, 358, 461, 462, 297,
	437, 271, 194, 333, 501, 208, 424, 225, 215, 201,
	449, 473, 222, 428, 0, 0, 510, 203, 471, 446,
	354, 294, 295, 202, 0, 408, 246, 269, 236, 374,
	468, 469, 234, 511, 212, 490, 205, 0, 489, 367,
	464, 472, 355, 345, 204, 470, 353, 344, 300, 641,
	642, 258, 280, 402, 338, 403, 281, 363, 362, 364,
	197, 482, 0, 198, 0, 443, 483, 512, 218, 219,
	220, 0, 257, 261, 268, 270, 276, 277, 284, 331,
	378, 401, 399, 405, 0, 459, 476, 486, 493, 499,
	500, 502, 503, 504, 505, 506, 507, 366, 283, 439,
	299, 336, 0, 0, 384, 417, 223, 480, 440, 678,
	670, 628, 682, 630, 679, 680, 625, 626, 629, 681,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 0, 673,
	615, 614, 0, 621, 622, 0, 631, 632, 634, 638,
	639, 640, 643, 644, 645, 653, 655, 656, 654, 657,
	658, 659, 662, 663, 664, 665, 660, 661, 666, 613,
	190, 206, 332, 86, 406, 266, 509, 488, 484, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 199, 207, 216, 226, 239,
	254, 256, 263, 274, 279, 282, 287, 288, 291, 296,
	342, 348, 349, 350, 351, 368, 369, 370, 373, 376,
	377, 380, 382, 383, 386, 393, 394, 395, 396, 398,
	400, 407, 411, 419, 420, 421, 422, 423, 426, 427,
	432, 433, 434, 435, 436, 444, 448, 466, 467, 479,
	492, 497, 425, 275, 474, 498, 0, 341, 0, 0,
	343, 259, 278, 289, 0, 487, 445, 211, 413, 267,
	200, 229, 214, 237, 252, 255, 293, 352, 359, 388,
	392, 272, 249, 227, 410, 224, 429, 451, 452, 453,
	455, 356, 244, 391, 0, 357, 339, 457, 458, 285,
	456, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 0, 0, 0, 612, 0, 0,
	0, 248, 617, 0, 0, 0, 330, 245, 0, 0,
	389, 0, 196, 0, 431, 232, 340, 337, 463, 260,
	251, 247, 231, 286, 347, 387, 450, 381, 624, 334,
	0, 0, 441, 360, 0, 0, 0, 0, 0, 619,
	620, 0, 0, 0, 0, 0, 0, 0, 0, 292,
	230, 195, 372, 442, 264, 0, 87, 0, 0, 187,
	188, 189, 688, 695, 696, 697, 698, 699, 689, 691,
	0, 0, 221, 690, 228, 635, 637, 636, 646, 647,
	648, 649, 650, 651, 652, 633, 693, 700, 701, 0,
	243, 290, 250, 242, 460, 0, 0, 0, 0, 0,
	0, 0, 213, 0, 0, 0, 0, 0, 0, 0,
	595, 609, 0, 623, 0, 0, 0, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 606, 607, 0, 0, 0, 0, 672, 0,
	608, 0, 0, 616, 702, 703, 704, 705, 706, 707,
	708, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 737,
	738, 739, 740, 741, 742, 618, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 361, 235, 0,
	671, 0, 0, 494, 0, 0, 669, 0, 0, 0,
	0, 329, 0, 298, 191, 209, 0, 0, 371, 412,
	418, 0, 0, 0, 233, 0, 416, 385, 478, 217,
	262, 409, 390, 414, 397, 265, 2869, 0, 415, 335,
	465, 404, 475, 495, 496, 241, 365, 485, 454, 491,
	508, 210, 238, 379, 447, 481, 438, 358, 461, 462,
	297, 437, 271, 194, 333, 501, 208, 424, 225, 215,
	201, 449, 473, 222, 428, 0, 0, 510, 203, 471,
	446, 354, 294, 295, 202, 0, 408, 246, 269, 236,
	374, 468, 469, 234, 511, 212, 490, 205, 0, 489,
	367, 464, 472, 355, 345, 204, 470, 353, 344, 300,
	641, 642, 258, 280, 402, 338, 403, 281, 363, 362,
	364, 197, 482, 0, 198, 0, 443, 483, 512, 218,
	219, 220, 0, 257, 261, 268, 270, 276, 277, 284,
	331, 378, 401, 399, 405, 0, 459, 476, 486, 493,
	499, 500, 502, 503, 504, 505, 506, 507, 366, 283,
	439, 299, 336, 0, 0, 384, 417, 223, 480, 440,
	678, 670, 628, 682, 630, 679, 680, 625, 626, 629,
	681, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 0,
	673, 615, 614, 0, 621, 622, 0, 631, 632, 634,
	638, 639, 640, 643, 644, 645, 653, 655, 656, 654,
	657, 658, 659, 662, 663, 664, 665, 660, 661, 666,
	613, 190, 206, 332, 0, 406, 266, 509, 488, 484,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 199, 207, 216, 226,
	239, 254, 256, 263, 274, 279, 282, 287, 288, 291,
	296, 342, 348, 349, 350, 351, 368, 369, 370, 373,
	376, 377, 380, 382, 383, 386, 393, 394, 395, 396,
	398, 400, 407, 411, 419, 420, 421, 422, 423, 426,
	427, 432, 433, 434, 435, 436, 444, 448, 466, 467,
	479, 492, 497, 425, 275, 474, 498, 0, 341, 0,
	0, 343, 259, 278, 289, 0, 487, 445, 211, 413,
	267, 200, 229, 214, 237, 252, 255, 293, 352, 359,
	388, 392, 272, 249, 227, 410, 224, 429, 451, 452,
	453, 455, 356, 244, 391, 0, 357, 339, 457, 458,
	285, 456, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 375, 0, 0, 0, 0, 612, 0,
	0, 0, 248, 617, 0, 0, 0, 330, 245, 0,
	0, 389, 0, 196, 0, 431, 232, 340, 337, 463,
	260, 251, 247, 231, 286, 347, 387, 450, 381, 624,
	334, 0, 0, 441, 360, 0, 0, 0, 0, 0,
	619, 620, 0, 0, 0, 0, 0, 0, 0, 0,
	292, 230, 195, 372, 442, 264, 0, 87, 0, 1315,
	187, 188, 189, 688, 695, 696, 697, 698, 699, 689,
	691, 0, 0, 221, 690, 228, 635, 637, 636, 646,
	647, 648, 649, 650, 651, 652, 633, 693, 700, 701,
	0, 243, 290, 250, 242, 460, 0, 0, 0, 0,
	0, 0, 0, 213, 0, 0, 0, 0, 0, 0,
	0, 595, 609, 0, 623, 0, 0, 0, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 606, 607, 0, 0, 0, 0, 672,
	0, 608, 0, 0, 616, 702, 703, 704, 705, 706,
	707, 708, 709, 710, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 741, 742, 618, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 361, 235,
	0, 671, 0, 0, 494, 0, 0, 669, 0, 0,
	0, 0, 329, 0, 298, 191, 209, 0, 0, 371,
	412, 418, 0, 0, 0, 233, 0, 416, 385, 478,
	217, 262, 409, 390, 414, 397, 265, 0, 0, 415,
	335, 465, 404, 475, 495, 496, 241, 365, 485, 454,
	491, 508, 210, 238, 379, 447, 481, 438, 358, 461,
	462, 297, 437, 271, 194, 333, 501, 208, 424, 225,
	215, 201, 449, 473, 222, 428, 0, 0, 510, 203,
	471, 446, 354, 294, 295, 202, 0, 408, 246, 269,
	236, 374, 468, 469, 234, 511, 212, 490, 205, 0,
	489, 367, 464, 472, 355, 345, 204, 470, 353, 344,
	300, 641, 642, 258, 280, 402, 338, 403, 281, 363,
	362, 364, 197, 482, 0, 198, 0, 443, 483, 512,
	218, 219, 220, 0, 257, 261, 268, 270, 276, 277,
	284, 331, 378, 401, 399, 405, 0, 459, 476, 486,
	493, 499, 500, 502, 503, 504, 505, 506, 507, 366,
	283, 439, 299, 336, 0, 0, 384, 417, 223, 480,
	440, 678, 670, 628, 682, 630, 679, 680, 625, 626,
	629, 681, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	0, 673, 615, 614, 0, 621, 622, 0, 631, 632,
	634, 638, 639, 640, 643, 644, 645, 653, 655, 656,
	654, 657, 658, 659, 662, 663, 664, 665, 660, 661,
	666, 613, 190, 206, 332, 0, 406, 266, 509, 488,
	484, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 199, 207, 216,
	226, 239, 254, 256, 263, 274, 279, 282, 287, 288,
	291, 296, 342, 348, 349, 350, 351, 368, 369, 370,
	373, 376, 377, 380, 382, 383, 386, 393, 394, 395,
	396, 398, 400, 407, 411, 419, 420, 421, 422, 423,
	426, 427, 432, 433, 434, 435, 436, 444, 448, 466,
	467, 479, 492, 497, 425, 275, 474, 498, 0, 341,
	0, 0, 343, 259, 278, 289, 0, 487, 445, 211,
	413, 267, 200, 229, 214, 237, 252, 255, 293, 352,
	359, 388, 392, 272, 249, 227, 410, 224, 429, 451,
	452, 453, 455, 356, 244, 391, 0, 357, 339, 457,
	458, 285, 456, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 375, 0, 0, 0, 0, 612,
	0, 0, 0, 248, 617, 0, 0, 0, 330, 245,
	0, 0, 389, 0, 196, 0, 431, 232, 340, 337,
	463, 260, 251, 247, 231, 286, 347, 387, 450, 381,
	624, 334, 0, 0, 441, 360, 0, 0, 0, 0,
	0, 619, 620, 0, 0, 0, 0, 0, 0, 0,
	0, 292, 230, 195, 372, 442, 264, 0, 87, 0,
	0, 187, 188, 189, 688, 695, 696, 697, 698, 699,
	689, 691, 0, 0, 221, 690, 228, 635, 637, 636,
	646, 647, 648, 649, 650, 651, 652, 633, 693, 700,
	701, 0, 243, 290, 250, 242, 460, 0, 0, 0,
	0, 0, 0, 0, 213, 0, 0, 0, 0, 0,
	0, 0, 595, 609, 0, 623, 0, 0, 0, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 606, 607, 782, 0, 0, 0,
	672, 0, 608, 0, 0, 616, 702, 703, 704, 705,
	706, 707, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 618, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 361,
	235, 0, 671, 0, 0, 494, 0, 0, 669, 0,
	0, 0, 0, 329, 0, 298, 191, 209, 0, 0,
	371, 412, 418, 0, 0, 0, 233, 0, 416, 385,
	478, 217, 262, 409, 390, 414, 397, 265, 0, 0,
	415, 335, 465, 404, 475, 495, 496, 241, 365, 485,
	454, 491, 508, 210, 238, 379, 447, 481, 438, 358,
	461, 462, 297, 437, 271, 194, 333, 501, 208, 424,
	225, 215, 201, 449, 473, 222, 428, 0, 0, 510,
	203, 471, 446, 354, 294, 295, 202, 0, 408, 246,
	269, 236, 374, 468, 469, 234, 511, 212, 490, 205,
	0, 489, 367, 464, 472, 355, 345, 204, 470, 353,
	344, 300, 641, 642, 258, 280, 402, 338, 403, 281,
	363, 362, 364, 197, 482, 0, 198, 0, 443, 483,
	512, 218, 219, 220, 0, 257, 261, 268, 270, 276,
	277, 284, 331, 378, 401, 399, 405, 0, 459, 476,
	486, 493, 499, 500, 502, 503, 504, 505, 506, 507,
	366, 283, 439, 299, 336, 0, 0, 384, 417, 223,
	480, 440, 678, 670, 628, 682, 630, 679, 680, 625,
	626, 629, 681, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 0, 673, 615, 614, 0, 621, 622, 0, 631,
	632, 634, 638, 639, 640, 643, 644, 645, 653, 655,
	656, 654, 657, 658, 659, 662, 663, 664, 665, 660,
	661, 666, 613, 190, 206, 332, 0, 406, 266, 509,
	488, 484, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 199, 207,
	216, 226, 239, 254, 256, 263, 274, 279, 282, 287,
	288, 291, 296, 342, 348, 349, 350, 351, 368, 369,
	370, 373, 376, 377, 380, 382, 383, 386, 393, 394,
	395, 396, 398, 400, 407, 411, 419, 420, 421, 422,
	423, 426, 427, 432, 433, 434, 435, 436, 444, 448,
	466, 467, 479, 492, 497, 425, 275, 474, 498, 0,
	341, 0, 0, 343, 259, 278, 289, 0, 487, 445,
	211, 413, 267, 200, 229, 214, 237, 252, 255, 293,
	352, 359, 388, 392, 272, 249, 227, 410, 224, 429,
	451, 452, 453, 455, 356, 244, 391, 0, 357, 339,
	457, 458, 285, 456, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 375, 0, 0, 0, 0,
	612, 0, 0, 0, 248, 617, 0, 0, 0, 330,
	245, 0, 0, 389, 0, 196, 0, 431, 232, 340,
	337, 463, 260, 251, 247, 231, 286, 347, 387, 450,
	381, 624, 334, 0, 0, 441, 360, 0, 0, 0,
	0, 0, 619, 620, 0, 0, 0, 0, 0, 0,
	0, 0, 292, 230, 195, 372, 442, 264, 0, 87,
	0, 0, 187, 188, 189, 688, 695, 696, 697, 698,
	699, 689, 691, 0, 0, 221, 690, 228, 635, 637,
	636, 646, 647, 648, 649, 650, 651, 652, 633, 693,
	700, 701, 0, 243, 290, 250, 242, 460, 0, 0,
	0, 0, 0, 0, 0, 213, 0, 0, 0, 0,
	0, 0, 0, 595, 609, 0, 623, 0, 0, 0,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 606, 607, 0, 0, 0,
	0, 672, 0, 608, 0, 0, 616, 702, 703, 704,
	705, 706, 707, 708, 709, 710, 711, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
	735, 736, 737, 738, 739, 740, 741, 742, 618, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	361, 235, 0, 671, 0, 0, 494, 0, 0, 669,
	0, 0, 0, 0, 329, 0, 298, 191, 209, 0,
	0, 371, 412, 418, 0, 0, 0, 233, 0, 416,
	385, 478, 217, 262, 409, 390, 414, 397, 265, 0,
	0, 415, 335, 465, 404, 475, 495, 496, 241, 365,
	485, 454, 491, 508, 210, 238, 379, 447, 481, 438,
	358, 461, 462, 297, 437, 271, 194, 333, 501, 208,
	424, 225, 215, 201, 449, 473, 222, 428, 0, 0,
	510, 203, 471, 446, 354, 294, 295, 202, 0, 408,
	246, 269, 236, 374, 468, 469, 234, 511, 212, 490,
	205, 0, 489, 367, 464, 472, 355, 345, 204, 470,
	353, 344, 300, 641, 642, 258, 280, 402, 338, 403,
	281, 363, 362, 364, 197, 482, 0, 198, 0, 443,
	483, 512, 218, 219, 220, 0, 257, 261, 268, 270,
	276, 277, 284, 331, 378, 401, 399, 405, 0, 459,
	476, 486, 493, 499, 500, 502, 503, 504, 505, 506,
	507, 366, 283, 439, 299, 336, 0, 0, 384, 417,
	223, 480, 440, 678, 670, 628, 682, 630, 679, 680,
	625, 626, 629, 681, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 0, 673, 615, 614, 0, 621, 622, 0,
	631, 632, 634, 638, 639, 640, 643, 644, 645, 653,
	655, 656, 654, 657, 658, 659, 662, 663, 664, 665,
	660, 661, 666, 613, 190, 206, 332, 0, 406, 266,
	509, 488, 484, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 199,
	207, 216, 226, 239, 254, 256, 263, 274, 279, 282,
	287, 288, 291, 296, 342, 348, 349, 350, 351, 368,
	369, 370, 373, 376, 377, 380, 382, 383, 386, 393,
	394, 395, 396, 398, 400, 407, 411, 419, 420, 421,
	422, 423, 426, 427, 432, 433, 434, 435, 436, 444,
	448, 466, 467, 479, 492, 497, 425, 275, 474, 498,
	0, 341, 0, 0, 343, 259, 278, 289, 0, 487,
	445, 211, 413, 267, 200, 229, 214, 237, 252, 255,
	293, 352, 359, 388, 392, 272, 249, 227, 410, 224,
	429, 451, 452, 453, 455, 356, 244, 391, 0, 357,
	339, 457, 458, 285, 456, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 375, 0, 0, 0,
	0, 612, 0, 0, 0, 248, 617, 0, 0, 0,
	330, 245, 0, 0, 389, 0, 196, 0, 431, 232,
	340, 337, 463, 260, 251, 247, 231, 286, 347, 387,
	450, 381, 624, 334, 0, 0, 441, 360, 0, 0,
	0, 0, 0, 619, 620, 0, 0, 0, 0, 0,
	0, 0, 0, 292, 230, 195, 372, 442, 264, 0,
	87, 0, 0, 187, 188, 189, 688, 695, 696, 697,
	698, 699, 689, 691, 0, 0, 221, 690, 228, 635,
	637, 636, 646, 647, 648, 649, 650, 651, 652, 633,
	693, 700, 701, 0, 243, 290, 250, 242, 460, 0,
	0, 0, 0, 0, 0, 0, 213, 0, 0, 0,
	0, 0, 0, 0, 0, 609, 0, 623, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 606, 607, 0, 0,
	0, 0, 672, 0, 608, 0, 0, 616, 702, 703,
	704, 705, 706, 707, 708, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 618,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 361, 235, 0, 671, 0, 0, 494, 0, 0,
	669, 0, 0, 0, 0, 329, 0, 298, 191, 209,
	0, 0, 371, 412, 418, 0, 0, 0, 233, 0,
	416, 385, 478, 217, 262, 409, 390, 414, 397, 265,
	0, 0, 415, 335, 465, 404, 475, 495, 496, 241,
	365, 485, 454, 491, 508, 210, 238, 379, 447, 481,
	438, 358, 461, 462, 297, 437, 271, 194, 333, 501,
	208, 424, 225, 215, 201, 449, 473, 222, 428, 0,
	0, 510, 203, 471, 446, 354, 294, 295, 202, 0,
	408, 246, 269, 236, 374, 468, 469, 234, 511, 212,
	490, 205, 0, 489, 367, 464, 472, 355, 345, 204,
	470, 353, 344, 300, 641, 642, 258, 280, 402, 338,
	403, 281, 363, 362, 364, 197, 482, 0, 198, 0,
	443, 483, 512, 218, 219, 220, 0, 257, 261, 268,
	270, 276, 277, 284, 331, 378, 401, 399, 405, 0,
	459, 476, 486, 493, 499, 500, 502, 503, 504, 505,
	506, 507, 366, 283, 439, 299, 336, 0, 0, 384,
	417, 223, 480, 440, 678, 670, 628, 682, 630, 679,
	680, 625, 626, 629, 681, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 0, 673, 615, 614, 0, 621, 622,
	0, 631, 632, 634, 638, 639, 640, 643, 644, 645,
	653, 655, 656, 654, 657, 658, 659, 662, 663, 664,
	665, 660, 661, 666, 613, 190, 206, 332, 0, 406,
	266, 509, 488, 484, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	199, 207, 216, 226, 239, 254, 256, 263, 274, 279,
	282, 287, 288, 291, 296, 342, 348, 349, 350, 351,
	368, 369, 370, 373, 376, 377, 380, 382, 383, 386,
	393, 394, 395, 396, 398, 400, 407, 411, 419, 420,
	421, 422, 423, 426, 427, 432, 433, 434, 435, 436,
	444, 448, 466, 467, 479, 492, 497, 425, 275, 474,
	498, 0, 341, 0, 0, 343, 259, 278, 289, 0,
	487, 445, 211, 413, 267, 200, 229, 214, 237, 252,
	255, 293, 352, 359, 388, 392, 272, 249, 227, 410,
	224, 429, 451, 452, 453, 455, 356, 244, 391, 0,
	357, 339, 457, 458, 285, 456, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 375, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 330, 245, 0, 0, 389, 0, 196, 0, 431,
	232, 340, 337, 463, 260, 251, 247, 231, 286, 347,
	387, 450, 381, 0, 334, 0, 0, 441, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 292, 230, 195, 372, 442, 264,
	0, 0, 0, 0, 187, 188, 189, 0, 695, 696,
	0, 0, 0, 0, 1655, 0, 0, 221, 0, 228,
	315, 324, 323, 304, 305, 307, 309, 314, 321, 327,
	0, 0, 0, 0, 0, 243, 290, 250, 242, 460,
	0, 0, 0, 0, 0, 0, 0, 213, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 702,
	703, 704, 705, 706, 707, 708, 709, 710, 711, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 727, 728, 729, 730, 731, 732,
	733, 734, 735, 736, 737, 738, 739, 740, 741, 742,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 361, 235, 0, 0, 0, 0, 494, 0,
	0, 0, 0, 0, 0, 0, 329, 0, 298, 191,
	209, 0, 0, 371, 412, 418, 0, 0, 0, 233,
	0, 416, 385, 478, 217, 262, 409, 390, 414, 397,
	265, 0, 0, 415, 335, 465, 404, 475, 495, 496,
	241, 365, 485, 454, 491, 508, 210, 238, 379, 447,
	481, 438, 358, 461, 462, 297, 437, 271, 194, 333,
	501, 208, 424, 225, 215, 201, 449, 473, 222, 428,
	0, 0, 510, 203, 471, 446, 354, 294, 295, 202,
	0, 408, 246, 269, 236, 374, 468, 469, 234, 511,
	212, 490, 205, 0, 489, 367, 464, 472, 355, 345,
	204, 470, 353, 344, 300, 319, 320, 258, 280, 402,
	338, 403, 281, 363, 362, 364, 197, 482, 0, 198,
	0, 443, 483, 512, 218, 219, 220, 0, 257, 261,
	268, 270, 276, 277, 284, 331, 378, 401, 399, 405,
	0, 459, 476, 486, 493, 499, 500, 502, 503, 504,
	505, 506, 507, 366, 283, 439, 299, 336, 0, 0,
	384, 417, 223, 480, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 531, 346, 430, 477, 301, 313,
	316, 306, 325, 0, 326, 302, 303, 308, 310, 311,
	312, 317, 318, 322, 328, 0, 190, 206, 332, 0,
	406, 266, 509, 488, 484, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 199, 207, 216, 226, 239, 254, 256, 263, 274,
	279, 282, 287, 288, 291, 296, 342, 348, 349, 350,
	351, 368, 369, 370, 373, 376, 377, 380, 382, 383,
	386, 393, 394, 395, 396, 398, 400, 407, 411, 419,
	420, 421, 422, 423, 426, 427, 432, 433, 434, 435,
	436, 444, 448, 466, 467, 479, 492, 497, 425, 275,
	474, 498, 0, 341, 0, 0, 343, 259, 278, 289,
	0, 487, 445, 211, 413, 267, 200, 229, 214, 237,
	252, 255, 293, 352, 359, 388, 392, 272, 249, 227,
	410, 224, 429, 451, 452, 453, 455, 356, 244, 391,
	0, 357, 339, 457, 458, 285, 456, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 375, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	0, 0, 330, 245, 0, 0, 389, 0, 196, 0,
	431, 232, 340, 337, 463, 260, 251, 247, 231, 286,
	347, 387, 450, 381, 0, 334, 0, 0, 441, 360,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 292, 230, 195, 372, 442,
	264, 0, 0, 0, 0, 187, 188, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	228, 315, 324, 323, 304, 305, 307, 309, 314, 321,
	327, 0, 0, 0, 0, 0, 243, 290, 250, 242,
	460, 0, 0, 0, 0, 0, 0, 0, 213, 0,
	999, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 361, 235, 0, 0, 0, 998, 494,
	0, 0, 0, 0, 0, 995, 996, 329, 958, 298,
	191, 209, 989, 993, 371, 412, 418, 0, 0, 0,
	233, 0, 416, 385, 478, 217, 262, 409, 390, 414,
	397, 265, 0, 0, 415, 335, 465, 404, 475, 495,
	496, 241, 365, 485, 454, 491, 508, 210, 238, 379,
	447, 481, 438, 358, 461, 462, 297, 437, 271, 194,
	333, 501, 208, 424, 225, 215, 201, 449, 473, 222,
	428, 0, 0, 510, 203, 471, 446, 354, 294, 295,
	202, 0, 408, 246, 269, 236, 374, 468, 469, 234,
	511, 212, 490, 205, 0, 489, 367, 464, 472, 355,
	345, 204, 470, 353, 344, 300, 319, 320, 258, 280,
	402, 338, 403, 281, 363, 362, 364, 197, 482, 0,
	198, 0, 443, 483, 512, 218, 219, 220, 0, 257,
	261, 268, 270, 276, 277, 284, 331, 378, 401, 399,
	405, 0, 459, 476, 486, 493, 499, 500, 502, 503,
	504, 505, 506, 507, 366, 283, 439, 299, 336, 0,
	0, 384, 417, 223, 480, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 531, 346, 430, 477, 301,
	313, 316, 306, 325, 0, 326, 302, 303, 308, 310,
	311, 312, 317, 318, 322, 328, 0, 190, 206, 332,
	0, 406, 266, 509, 488, 484, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 199, 207, 216, 226, 239, 254, 256, 263,
	274, 279, 282, 287, 288, 291, 296, 342, 348, 349,
	350, 351, 368, 369, 370, 373, 376, 377, 380, 382,
	383, 386, 393, 394, 395, 396, 398, 400, 407, 411,
	419, 420, 421, 422, 423, 426, 427, 432, 433, 434,
	435, 436, 444, 448, 466, 467, 479, 492, 497, 425,
	275, 474, 498, 0, 341, 0, 0, 343, 259, 278,
	289, 0, 487, 445, 211, 413, 267, 200, 229, 214,
	237, 252, 255, 293, 352, 359, 388, 392, 272, 249,
	227, 410, 224, 429, 451, 452, 453, 455, 356, 244,
	391, 0, 0, 339, 457, 458, 285, 357, 0, 0,
	0, 78, 456, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 375, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 0, 0, 0, 0, 330, 245,
	0, 0, 389, 0, 196, 0, 431, 232, 340, 337,
	463, 260, 251, 247, 231, 286, 347, 387, 450, 381,
	0, 334, 0, 0, 441, 360, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 292, 230, 195, 372, 442, 264, 0, 87, 0,
	0, 187, 188, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 228, 315, 324, 323,
	304, 305, 307, 309, 314, 321, 327, 0, 0, 0,
	0, 0, 243, 290, 250, 242, 460, 0, 0, 0,
	0, 0, 0, 0, 213, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 361,
	235, 0, 0, 0, 0, 494, 0, 0, 0, 0,
	0, 0, 0, 329, 0, 298, 191, 209, 0, 0,
	371, 412, 418, 0, 0, 0, 233, 0, 416, 385,
	478, 217, 262, 409, 390, 414, 397, 265, 0, 0,
	415, 335, 465, 404, 475, 495, 496, 241, 365, 485,
	454, 491, 508, 210, 238, 379, 447, 481, 438, 358,
	461, 462, 297, 437, 271, 194, 333, 501, 208, 424,
	225, 215, 201, 449, 473, 222, 428, 0, 0, 510,
	203, 471, 446, 354, 294, 295, 202, 0, 408, 246,
	269, 236, 374, 468, 469, 234, 511, 212, 490, 205,
	0, 489, 367, 464, 472, 355, 345, 204, 470, 353,
	344, 300, 319, 320, 258, 280, 402, 338, 403, 281,
	363, 362, 364, 197, 482, 0, 198, 0, 443, 483,
	512, 218, 219, 220, 0, 257, 261, 268, 270, 276,
	277, 284, 331, 378, 401, 399, 405, 0, 459, 476,
	486, 493, 499, 500, 502, 503, 504, 505, 506, 507,
	366, 283, 439, 299, 336, 0, 0, 384, 417, 223,
	480, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 531, 346, 430, 477, 301, 313, 316, 306, 325,
	0, 326, 302, 303, 308, 310, 311, 312, 317, 318,
	322, 328, 0, 190, 206, 332, 86, 406, 266, 509,
	488, 484, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 1814, 0, 0, 1813, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 199, 207,
	216, 226, 239, 254, 256, 263, 274, 279, 282, 287,
	288, 291, 296, 342, 348, 349, 350, 351, 368, 369,
	370, 373, 376, 377, 380, 382, 383, 386, 393, 394,
	395, 396, 398, 400, 407, 411, 419, 420, 421, 422,
	423, 426, 427, 432, 433, 434, 435, 436, 444, 448,
	466, 467, 479, 492, 497, 425, 275, 474, 498, 0,
	341, 0, 0, 343, 259, 278, 289, 0, 487, 445,
	211, 413, 267, 200, 229, 214, 237, 252, 255, 293,
	352, 359, 388, 392, 272, 249, 227, 410, 224, 429,
	451, 452, 453, 455, 356, 244, 391, 0, 1334, 339,
	457, 458, 285, 456, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 375, 0, 0, 0, 1336,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 330,
	245, 0, 0, 389, 0, 196, 0, 431, 232, 340,
	337, 463, 260, 251, 247, 231, 286, 347, 387, 450,
	381, 0, 334, 0, 0, 441, 360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 292, 230, 195, 372, 442, 264, 0, 0,
	0, 0, 187, 188, 189, 0, 1338, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 228, 315, 324,
	323, 304, 305, 307, 309, 314, 321, 327, 0, 0,
	0, 0, 0, 243, 290, 250, 242, 460, 0, 0,
	0, 0, 0, 0, 0, 213, 0, 0, 0, 1167,
	0, 1168, 1169, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	361, 235, 0, 0, 0, 0, 494, 0, 0, 0,
	0, 0, 0, 0, 329, 0, 298, 191, 209, 0,
	0, 371, 412, 418, 0, 0, 0, 233, 0, 416,
	385, 478, 217, 262, 409, 390, 414, 397, 265, 0,
	0, 415, 335, 465, 404, 475, 495, 496, 241, 365,
	485, 454, 491, 508, 210, 238, 379, 447, 481, 438,
	358, 461, 462, 297, 437, 271, 194, 333, 501, 208,
	424, 225, 215, 201, 449, 473, 222, 428, 0, 0,
	510, 203, 471, 446, 354, 294, 295, 202, 0, 408,
	246, 269, 236, 374, 468, 469, 234, 511, 212, 490,
	205, 0, 489, 367, 464, 472, 355, 345, 204, 470,
	353, 344, 300, 319, 320, 258, 280, 402, 338, 403,
	281, 363, 362, 364, 197, 482, 0, 198, 0, 443,
	483, 512, 218, 219, 220, 0, 257, 261, 268, 270,
	276, 277, 284, 331, 378, 401, 399, 405, 0, 459,
	476, 486, 493, 499, 500, 502, 503, 504, 505, 506,
	507, 366, 283, 439, 299, 336, 0, 0, 384, 417,
	223, 480, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 531, 346, 430, 477, 301, 313, 316, 306,
	325, 0, 326, 302, 303, 308, 310, 311, 312, 317,
	318, 322, 328, 0, 190, 206, 332, 0, 406, 266,
	509, 488, 484, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 199,
	207, 216, 226, 239, 254, 256, 263, 274, 279, 282,
	287, 288, 291, 296, 342, 348, 349, 350, 351, 368,
	369, 370, 373, 376, 377, 380, 382, 383, 386, 393,
	394, 395, 396, 398, 400, 407, 411, 419, 420, 421,
	422, 423, 426, 427, 432, 433, 434, 435, 436, 444,
	448, 466, 467, 479, 492, 497, 425, 275, 474, 498,
	0, 341, 0, 0, 343, 259, 278, 289, 0, 487,
	445, 211, 413, 267, 200, 229, 214, 237, 252, 255,
	293, 352, 359, 388, 392, 272, 249, 227, 410, 224,
	429, 451, 452, 453, 455, 356, 244, 391, 0, 357,
	339, 457, 458, 285, 456, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 375, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 0, 0, 0, 0,
	330, 245, 0, 0, 389, 0, 196, 0, 431, 232,
	340, 337, 463, 260, 251, 247, 231, 286, 347, 387,
	450, 381, 0, 334, 0, 0, 441, 360, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 292, 230, 195, 372, 442, 264, 0,
	0, 0, 0, 187, 188, 189, 1277, 1280, 0, 0,
	0, 0, 1276, 1279, 0, 0, 221, 1275, 228, 315,
	324, 323, 304, 305, 307, 309, 314, 321, 327, 0,
	0, 0, 0, 0, 243, 290, 250, 242, 460, 0,
	0, 0, 0, 0, 0, 0, 213, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 361, 235, 0, 0, 0, 0, 494, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 298, 191, 209,
	0, 0, 371, 412, 418, 0, 0, 0, 233, 0,
	416, 385, 478, 217, 262, 409, 390, 414, 397, 265,
	0, 0, 415, 335, 465, 404, 475, 495, 496, 241,
	365, 485, 454, 491, 508, 210, 238, 379, 447, 481,
	438, 358, 461, 462, 297, 437, 271, 194, 333, 501,
	208, 424, 225, 215, 201, 449, 473, 222, 428, 0,
	0, 510, 203, 471, 446, 354, 294, 295, 202, 0,
	408, 246, 269, 236, 374, 468, 469, 234, 511, 212,
	490, 205, 0, 489, 367, 464, 472, 355, 345, 204,
	470, 353, 344, 300, 319, 320, 258, 280, 402, 338,
	403, 281, 363, 362, 364, 197, 482, 0, 198, 0,
	443, 483, 512, 218, 219, 220, 0, 257, 261, 268,
	270, 276, 277, 284, 331, 378, 401, 399, 405, 0,
	459, 476, 486, 493, 499, 500, 502, 503, 504, 505,
	506, 507, 366, 283, 439, 299, 336, 0, 0, 384,
	417, 223, 480, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 531, 346, 430, 477, 301, 313, 316,
	306, 325, 0, 326, 302, 303, 308, 310, 311, 312,
	317, 318, 322, 328, 0, 190, 206, 332, 0, 406,
	266, 509, 488, 484, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	199, 207, 216, 226, 239, 254, 256, 263, 274, 279,
	282, 287, 288, 291, 296, 342, 348, 349, 350, 351,
	368, 369, 370, 373, 376, 377, 380, 382, 383, 386,
	393, 394, 395, 396, 398, 400, 407, 411, 419, 420,
	421, 422, 423, 426, 427, 432, 433, 434, 435, 436,
	444, 448, 466, 467, 479, 492, 497, 425, 275, 474,
	498, 0, 341, 0, 0, 343, 259, 278, 289, 0,
	487, 445, 211, 413, 267, 200, 229, 214, 237, 252,
	255, 293, 352, 359, 388, 392, 272, 249, 227, 410,
	224, 429, 451, 452, 453, 455, 356, 244, 391, 0,
	0, 339, 457, 458, 285, 357, 0, 0, 0, 78,
	456, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 0, 0, 330, 245, 0, 0,
	389, 0, 196, 0, 431, 232, 340, 337, 463, 260,
	251, 247, 231, 286, 347, 387, 450, 381, 0, 334,
	0, 0, 441, 360, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 292,
	230, 195, 372, 442, 264, 0, 87, 0, 1315, 187,
	188, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 228, 315, 324, 323, 304, 305,
	307, 309, 314, 321, 327, 0, 0, 0, 0, 0,
	243, 290, 250, 242, 460, 0, 0, 0, 0, 0,
	0, 0, 213, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 361, 235, 0,
	0, 0, 0, 494, 0, 0, 0, 0, 0, 0,
	0, 329, 0, 298, 191, 209, 0, 0, 371, 412,
	418, 0, 0, 0, 233, 0, 416, 385, 478, 217,
	262, 409, 390, 414, 397, 265, 0, 0, 415, 335,
	465, 404, 475, 495, 496, 241, 365, 485, 454, 491,
	508, 210, 238, 379, 447, 481, 438, 358, 461, 462,
	297, 437, 271, 194, 333, 501, 208, 424, 225, 215,
	201, 449, 473, 222, 428, 0, 0, 510, 203, 471,
	446, 354, 294, 295, 202, 0, 408, 246, 269, 236,
	374, 468, 469, 234, 511, 212, 490, 205, 0, 489,
	367, 464, 472, 355, 345, 204, 470, 353, 344, 300,
	319, 320, 258, 280, 402, 338, 403, 281, 363, 362,
	364, 197, 482, 0, 198, 0, 443, 483, 512, 218,
	219, 220, 0, 257, 261, 268, 270, 276, 277, 284,
	331, 378, 401, 399, 405, 0, 459, 476, 486, 493,
	499, 500, 502, 503, 504, 505, 506, 507, 366, 283,
	439, 299, 336, 0, 0, 384, 417, 223, 480, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 531,
	346, 430, 477, 301, 313, 316, 306, 325, 0, 326,
	302, 303, 308, 310, 311, 312, 317, 318, 322, 328,
	0, 190, 206, 332, 86, 406, 266, 509, 488, 484,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 199, 207, 216, 226,
	239, 254, 256, 263, 274, 279, 282, 287, 288, 291,
	296, 342, 348, 349, 350, 351, 368, 369, 370, 373,
	376, 377, 380, 382, 383, 386, 393, 394, 395, 396,
	398, 400, 407, 411, 419, 420, 421, 422, 423, 426,
	427, 432, 433, 434, 435, 436, 444, 448, 466, 467,
	479, 492, 497, 425, 275, 474, 498, 0, 341, 0,
	0, 343, 259, 278, 289, 0, 487, 445, 211, 413,
	267, 200, 229, 214, 237, 252, 255, 293, 352, 359,
	388, 392, 272, 249, 227, 410, 224, 429, 451, 452,
	453, 455, 356, 244, 391, 0, 357, 339, 457, 458,
	285, 456, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 375, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 330, 245, 0,
	0, 389, 0, 196, 0, 431, 232, 340, 337, 463,
	260, 251, 247, 231, 286, 347, 387, 450, 381, 0,
	334, 0, 0, 441, 360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	292, 230, 195, 372, 442, 264, 0, 87, 0, 0,
	187, 188, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 228, 315, 324, 323, 304,
	305, 307, 309, 314, 321, 327, 0, 0, 0, 0,
	0, 243, 290, 250, 242, 460, 0, 0, 0, 0,
	0, 0, 0, 213, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 361, 235,
	0, 0, 0, 0, 494, 0, 0, 0, 0, 0,
	0, 0, 329, 0, 298, 191, 209, 0, 0, 371,
	412, 418, 0, 0, 0, 233, 0, 416, 385, 478,
	217, 262, 409, 390, 414, 397, 265, 0, 0, 415,
	335, 465, 404, 475, 495, 496, 241, 365, 485, 454,
	491, 508, 210, 238, 379, 447, 481, 438, 358, 461,
	462, 297, 437, 271, 194, 333, 501, 208, 424, 225,
	215, 201, 449, 473, 222, 428, 0, 0, 510, 203,
	471, 446, 354, 294, 295, 202, 0, 408, 246, 269,
	236, 374, 468, 469, 234, 511, 212, 490, 205, 0,
	489, 367, 464, 472, 355, 345, 204, 470, 353, 344,
	300, 319, 320, 258, 280, 402, 338, 403, 281, 363,
	362, 364, 197, 482, 0, 198, 0, 443, 483, 512,
	218, 219, 220, 0, 257, 261, 268, 270, 276, 277,
	284, 331, 378, 401, 399, 405, 0, 459, 476, 486,
	493, 499, 500, 502, 503, 504, 505, 506, 507, 366,
	283, 439, 299, 336, 0, 0, 384, 417, 223, 480,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	531, 346, 430, 477, 301, 313, 316, 306, 325, 0,
	326, 302, 303, 308, 310, 311, 312, 317, 318, 322,
	328, 0, 190, 206, 332, 0, 406, 266, 509, 488,
	484, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	1814, 0, 0, 1813, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 199, 207, 216,
	226, 239, 254, 256, 263, 274, 279, 282, 287, 288,
	291, 296, 342, 348, 349, 350, 351, 368, 369, 370,
	373, 376, 377, 380, 382, 383, 386, 393, 394, 395,
	396, 398, 400, 407, 411, 419, 420, 421, 422, 423,
	426, 427, 432, 433, 434, 435, 436, 444, 448, 466,
	467, 479, 492, 497, 425, 275, 474, 498, 0, 341,
	0, 0, 343, 259, 278, 289, 0, 487, 445, 211,
	413, 267, 200, 229, 214, 237, 252, 255, 293, 352,
	359, 388, 392, 272, 249, 227, 410, 224, 429, 451,
	452, 453, 455, 356, 244, 391, 0, 357, 339, 457,
	458, 285, 456, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 375, 0, 0, 0, 1766, 0,
	0, 0, 0, 248, 0, 0, 0, 0, 330, 245,
	0, 0, 389, 0, 196, 0, 431, 232, 340, 337,
	463, 260, 251, 247, 231, 286, 347, 387, 450, 381,
	0, 334, 0, 0, 441, 360, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 292, 230, 195, 372, 442, 264, 0, 0, 0,
	0, 187, 188, 189, 0, 1510, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 228, 315, 324, 323,
	304, 305, 307, 309, 314, 321, 327, 0, 0, 0,
	0, 0, 243, 290, 250, 242, 460, 0, 0, 0,
	0, 0, 0, 0, 213, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 361,
	235, 0, 0, 0, 0, 494, 0, 0, 0, 0,
	0, 0, 0, 329, 0, 298, 191, 209, 0, 0,
	371, 412, 418, 0, 0, 0, 233, 0, 416, 385,
	478, 217, 262, 409, 390, 414, 397, 265, 0, 1764,
	415, 335, 465, 404, 475, 495, 496, 241, 365, 485,
	454, 491, 508, 210, 238, 379, 447, 481, 438, 358,
	461, 462, 297, 437, 271, 194, 333, 501, 208, 424,
	225, 215, 201, 449, 473, 222, 428, 0, 0, 510,
	203, 471, 446, 354, 294, 295, 202, 0, 408, 246,
	269, 236, 374, 468, 469, 234, 511, 212, 490, 205,
	0, 489, 367, 464, 472, 355, 345, 204, 470, 353,
	344, 300, 319, 320, 258, 280, 402, 338, 403, 281,
	363, 362, 364, 197, 482, 0, 198, 0, 443, 483,
	512, 218, 219, 220, 0, 257, 261, 268, 270, 276,
	277, 284, 331, 378, 401, 399, 405, 0, 459, 476,
	486, 493, 499, 500, 502, 503, 504, 505, 506, 507,
	366, 283, 439, 299, 336, 0, 0, 384, 417, 223,
	480, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 531, 346, 430, 477, 301, 313, 316, 306, 325,
	0, 326, 302, 303, 308, 310, 311, 312, 317, 318,
	322, 328, 0, 190, 206, 332, 0, 406, 266, 509,
	488, 484, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 199, 207,
	216, 226, 239, 254, 256, 263, 274, 279, 282, 287,
	288, 291, 296, 342, 348, 349, 350, 351, 368, 369,
	370, 373, 376, 377, 380, 382, 383, 386, 393, 394,
	395, 396, 398, 400, 407, 411, 419, 420, 421, 422,
	423, 426, 427, 432, 433, 434, 435, 436, 444, 448,
	466, 467, 479, 492, 497, 425, 275, 474, 498, 0,
	341, 0, 0, 343, 259, 278, 289, 0, 487, 445,
	211, 413, 267, 200, 229, 214, 237, 252, 255, 293,
	352, 359, 388, 392, 272, 249, 227, 410, 224, 429,
	451, 452, 453, 455, 356, 244, 391, 0, 357, 339,
	457, 458, 285, 456, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 375, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 330,
	245, 0, 0, 389, 0, 196, 0, 431, 232, 340,
	337, 463, 260, 251, 247, 231, 286, 347, 387, 450,
	381, 0, 334, 0, 0, 441, 360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 292, 230, 195, 372, 442, 264, 0, 0,
	0, 0, 187, 188, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 228, 315, 324,
	323, 304, 305, 307, 309, 314, 321, 327, 0, 0,
	0, 0, 0, 243, 290, 250, 242, 460, 0, 0,
	0, 0, 0, 0, 0, 213, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 952,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	361, 235, 0, 0, 0, 0, 494, 0, 0, 0,
	0, 0, 0, 0, 329, 958, 298, 191, 209, 956,
	0, 371, 412, 418, 0, 0, 0, 233, 0, 416,
	385, 478, 217, 262, 409, 390, 414, 397, 265, 0,
	0, 415, 335, 465, 404, 475, 495, 496, 241, 365,
	485, 454, 491, 508, 210, 238, 379, 447, 481, 438,
	358, 461, 462, 297, 437, 271, 194, 333, 501, 208,
	424, 225, 215, 201, 449, 473, 222, 428, 0, 0,
	510, 203, 471, 446, 354, 294, 295, 202, 0, 408,
	246, 269, 236, 374, 468, 469, 234, 511, 212, 490,
	205, 0, 489, 367, 464, 472, 355, 345, 204, 470,
	353, 344, 300, 319, 320, 258, 280, 402, 338, 403,
	281, 363, 362, 364, 197, 482, 0, 198, 0, 443,
	483, 512, 218, 219, 220, 0, 257, 261, 268, 270,
	276, 277, 284, 331, 378, 401, 399, 405, 0, 459,
	476, 486, 493, 499, 500, 502, 503, 504, 505, 506,
	507, 366, 283, 439, 299, 336, 0, 0, 384, 417,
	223, 480, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 531, 346, 430, 477, 301, 313, 316, 306,
	325, 0, 326, 302, 303, 308, 310, 311, 312, 317,
	318, 322, 328, 0, 190, 206, 332, 0, 406, 266,
	509, 488, 484, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 199,
	207, 216, 226, 239, 254, 256, 263, 274, 279, 282,
	287, 288, 291, 296, 342, 348, 349, 350, 351, 368,
	369, 370, 373, 376, 377, 380, 382, 383, 386, 393,
	394, 395, 396, 398, 400, 407, 411, 419, 420, 421,
	422, 423, 426, 427, 432, 433, 434, 435, 436, 444,
	448, 466, 467, 479, 492, 497, 425, 275, 474, 498,
	0, 341, 0, 0, 343, 259, 278, 289, 0, 487,
	445, 211, 413, 267, 200, 229, 214, 237, 252, 255,
	293, 352, 359, 388, 392, 272, 249, 227, 410, 224,
	429, 451, 452, 453, 455, 356, 244, 391, 0, 357,
	339, 457, 458, 285, 456, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 375, 0, 0, 0,
	1766, 0, 0, 0, 0, 248, 0, 0, 0, 0,
	330, 245, 0, 0, 389, 0, 196, 0, 431, 232,
	340, 337, 463, 260, 251, 247, 231, 286, 347, 387,
	450, 381, 0, 334, 0, 0, 441, 360, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 292, 230, 195, 372, 442, 264, 0,
	0, 0, 0, 187, 188, 189, 0, 1510, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 228, 315,
	324, 323, 304, 305, 307, 309, 314, 321, 327, 0,
	0, 0, 0, 0, 243, 290, 250, 242, 460, 0,
	0, 0, 0, 0, 0, 0, 213, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 361, 235, 0, 0, 0, 0, 494, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 298, 191, 209,
	0, 0, 371, 412, 418, 0, 0, 0, 233, 0,
	416, 385, 478, 217, 262, 409, 390, 414, 397, 265,
	0, 0, 415, 335, 465, 404, 475, 495, 496, 241,
	365, 485, 454, 491, 508, 210, 238, 379, 447, 481,
	438, 358, 461, 462, 297, 437, 271, 194, 333, 501,
	208, 424, 225, 215, 201, 449, 473, 222, 428, 0,
	0, 510, 203, 471, 446, 354, 294, 295, 202, 0,
	408, 246, 269, 236, 374, 468, 469, 234, 511, 212,
	490, 205, 0, 489, 367, 464, 472, 355, 345, 204,
	470, 353, 344, 300, 319, 320, 258, 280, 402, 338,
	403, 281, 363, 362, 364, 197, 482, 0, 198, 0,
	443, 483, 512, 218, 219, 220, 0, 257, 261, 268,
	270, 276, 277, 284, 331, 378, 401, 399, 405, 0,
	459, 476, 486, 493, 499, 500, 502, 503, 504, 505,
	506, 507, 366, 283, 439, 299, 336, 0, 0, 384,
	417, 223, 480, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 531, 346, 430, 477, 301, 313, 316,
	306, 325, 0, 326, 302, 303, 308, 310, 311, 312,
	317, 318, 322, 328, 0, 190, 206, 332, 0, 406,
	266, 509, 488, 484, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	199, 207, 216, 226, 239, 254, 256, 263, 274, 279,
	282, 287, 288, 291, 296, 342, 348, 349, 350, 351,
	368, 369, 370, 373, 376, 377, 380, 382, 383, 386,
	393, 394, 395, 396, 398, 400, 407, 411, 419, 420,
	421, 422, 423, 426, 427, 432, 433, 434, 435, 436,
	444, 448, 466, 467, 479, 492, 497, 425, 275, 474,
	498, 0, 341, 0, 0, 343, 259, 278, 289, 0,
	487, 445, 211, 413, 267, 200, 229, 214, 237, 252,
	255, 293, 352, 359, 388, 392, 272, 249, 227, 410,
	224, 429, 451, 452, 453, 455, 356, 244, 391, 0,
	357, 339, 457, 458, 285, 456, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 375, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 330, 245, 0, 0, 389, 0, 196, 0, 431,
	232, 340, 337, 463, 260, 251, 247, 231, 286, 347,
	387, 450, 381, 0, 334, 0, 0, 441, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 292, 230, 195, 372, 442, 264,
	0, 0, 0, 1315, 187, 188, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 228,
	315, 324, 323, 304, 305, 307, 309, 314, 321, 327,
	0, 0, 0, 0, 0, 243, 290, 250, 242, 460,
	0, 0, 0, 0, 0, 0, 0, 213, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 361, 235, 0, 0, 0, 0, 494, 0,
	0, 0, 2799, 0, 0, 0, 329, 0, 298, 191,
	209, 0, 0, 371, 412, 418, 0, 0, 0, 233,
	0, 416, 385, 478, 217, 262, 409, 390, 414, 397,
	265, 0, 0, 415, 335, 465, 404, 475, 495, 496,
	241, 365, 485, 454, 491, 508, 210, 238, 379, 447,
	481, 438, 358, 461, 462, 297, 437, 271, 194, 333,
	501, 208, 424, 225, 215, 201, 449, 473, 222, 428,
	0, 0, 510, 203, 471, 446, 354, 294, 295, 202,
	0, 408, 246, 269, 236, 374, 468, 469, 234, 511,
	212, 490, 205, 0, 489, 367, 464, 472, 355, 345,
	204, 470, 353, 344, 300, 319, 320, 258, 280, 402,
	338, 403, 281, 363, 362, 364, 197, 482, 0, 198,
	0, 443, 483, 512, 218, 219, 220, 0, 257, 261,
	268, 270, 276, 277, 284, 331, 378, 401, 399, 405,
	0, 459, 476, 486, 493, 499, 500, 502, 503, 504,
	505, 506, 507, 366, 283, 439, 299, 336, 0, 0,
	384, 417, 223, 480, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 531, 346, 430, 477, 301, 313,
	316, 306, 325, 0, 326, 302, 303, 308, 310, 311,
	312, 317, 318, 322, 328, 0, 190, 206, 332, 0,
	406, 266, 509, 488, 484, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 199, 207, 216, 226, 239, 254, 256, 263, 274,
	279, 282, 287, 288, 291, 296, 342, 348, 349, 350,
	351, 368, 369, 370, 373, 376, 377, 380, 382, 383,
	386, 393, 394, 395, 396, 398, 400, 407, 411, 419,
	420, 421, 422, 423, 426, 427, 432, 433, 434, 435,
	436, 444, 448, 466, 467, 479, 492, 497, 425, 275,
	474, 498, 0, 341, 0, 0, 343, 259, 278, 289,
	0, 487, 445, 211, 413, 267, 200, 229, 214, 237,
	252, 255, 293, 352, 359, 388, 392, 272, 249, 227,
	410, 224, 429, 451, 452, 453, 455, 356, 244, 391,
	0, 357, 339, 457, 458, 285, 456, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 375, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	0, 0, 330, 245, 0, 0, 389, 0, 196, 0,
	431, 232, 340, 337, 463, 260, 251, 247, 231, 286,
	347, 387, 450, 381, 0, 334, 0, 0, 441, 360,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 292, 230, 195, 372, 442,
	264, 0, 0, 0, 0, 187, 188, 189, 0, 2096,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	228, 315, 324, 323, 304, 305, 307, 309, 314, 321,
	327, 0, 0, 0, 0, 0, 243, 290, 250, 242,
	460, 0, 0, 0, 0, 0, 0, 0, 213, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2097,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 361, 235, 0, 0, 0, 0, 494,
	0, 0, 0, 0, 0, 0, 0, 329, 0, 298,
	191, 209, 0, 0, 371, 412, 418, 0, 0, 0,
	233, 0, 416, 385, 478, 217, 262, 409, 390, 414,
	397, 265, 0, 0, 415, 335, 465, 404, 475, 495,
	496, 241, 365, 485, 454, 491, 508, 210, 238, 379,
	447, 481, 438, 358, 461, 462, 297, 437, 271, 194,
	333, 501, 208, 424, 225, 215, 201, 449, 473, 222,
	428, 0, 0, 510, 203, 471, 446, 354, 294, 295,
	202, 0, 408, 246, 269, 236, 374, 468, 469, 234,
	511, 212, 490, 205, 0, 489, 367, 464, 472, 355,
	345, 204, 470, 353, 344, 300, 319, 320, 258, 280,
	402, 338, 403, 281, 363, 362, 364, 197, 482, 0,
	198, 0, 443, 483, 512, 218, 219, 220, 0, 257,
	261, 268, 270, 276, 277, 284, 331, 378, 401, 399,
	405, 0, 459, 476, 486, 493, 499, 500, 502, 503,
	504, 505, 506, 507, 366, 283, 439, 299, 336, 0,
	0, 384, 417, 223, 480, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 531, 346, 430, 477, 301,
	313, 316, 306, 325, 0, 326, 302, 303, 308, 310,
	311, 312, 317, 318, 322, 328, 0, 190, 206, 332,
	0, 406, 266, 509, 488, 484, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 199, 207, 216, 226, 239, 254, 256, 263,
	274, 279, 282, 287, 288, 291, 296, 342, 348, 349,
	350, 351, 368, 369, 370, 373, 376, 377, 380, 382,
	383, 386, 393, 394, 395, 396, 398, 400, 407, 411,
	419, 420, 421, 422, 423, 426, 427, 432, 433, 434,
	435, 436, 444, 448, 466, 467, 479, 492, 497, 425,
	275, 474, 498, 0, 341, 0, 0, 343, 259, 278,
	289, 0, 487, 445, 211, 413, 267, 200, 229, 214,
	237, 252, 255, 293, 352, 359, 388, 392, 272, 249,
	227, 410, 224, 429, 451, 452, 453, 455, 356, 244,
	391, 0, 357, 339, 457, 458, 285, 456, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 375,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 330, 245, 0, 0, 389, 0, 196,
	0, 431, 232, 340, 337, 463, 260, 251, 247, 231,
	286, 347, 387, 450, 381, 0, 334, 0, 0, 441,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 292, 230, 195, 372,
	442, 264, 0, 0, 0, 0, 187, 188, 189, 0,
	0, 0, 2081, 0, 0, 0, 2082, 0, 0, 221,
	0, 228, 315, 324, 323, 304, 305, 307, 309, 314,
	321, 327, 0, 0, 0, 0, 0, 243, 290, 250,
	242, 460, 0, 0, 0, 0, 0, 0, 0, 213,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 361, 235, 0, 0, 0, 0,
	494, 0, 0, 0, 0, 0, 0, 0, 329, 0,
	298, 191, 209, 0, 0, 371, 412, 418, 0, 0,
	0, 233, 0, 416, 385, 478, 217, 262, 409, 390,
	414, 397, 265, 0, 0, 415, 335, 465, 404, 475,
	495, 496, 241, 365, 485, 454, 491, 508, 210, 238,
	379, 447, 481, 438, 358, 461, 462, 297, 437, 271,
	194, 333, 501, 208, 424, 225, 215, 201, 449, 473,
	222, 428, 0, 0, 510, 203, 471, 446, 354, 294,
	295, 202, 0, 408, 246, 269, 236, 374, 468, 469,
	234, 511, 212, 490, 205, 0, 489, 367, 464, 472,
	355, 345, 204, 470, 353, 344, 300, 319, 320, 258,
	280, 402, 338, 403, 281, 363, 362, 364, 197, 482,
	0, 198, 0, 443, 483, 512, 218, 219, 220, 0,
	257, 261, 268, 270, 276, 277, 284, 331, 378, 401,
	399, 405, 0, 459, 476, 486, 493, 499, 500, 502,
	503, 504, 505, 506, 507, 366, 283, 439, 299, 336,
	0, 0, 384, 417, 223, 480, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 531, 346, 430, 477,
	301, 313, 316, 306, 325, 0, 326, 302, 303, 308,
	310, 311, 312, 317, 318, 322, 328, 0, 190, 206,
	332, 0, 406, 266, 509, 488, 484, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 199, 207, 216, 226, 239, 254, 256,
	263, 274, 279, 282, 287, 288, 291, 296, 342, 348,
	349, 350, 351, 368, 369, 370, 373, 376, 377, 380,
	382, 383, 386, 393, 394, 395, 396, 398, 400, 407,
	411, 419, 420, 421, 422, 423, 426, 427, 432, 433,
	434, 435, 436, 444, 448, 466, 467, 479, 492, 497,
	425, 275, 474, 498, 0, 341, 0, 0, 343, 259,
	278, 289, 0, 487, 445, 211, 413, 267, 200, 229,
	214, 237, 252, 255, 293, 352, 359, 388, 392, 272,
	249, 227, 410, 224, 429, 451, 452, 453, 455, 356,
	244, 391, 0, 357, 339, 457, 458, 285, 456, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	375, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	1359, 0, 0, 0, 330, 245, 0, 0, 389, 0,
	196, 0, 431, 232, 340, 337, 463, 260, 251, 247,
	231, 286, 347, 387, 450, 381, 0, 334, 0, 0,
	441, 360, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 292, 230, 195,
	372, 442, 264, 0, 0, 0, 0, 187, 188, 189,
	0, 1358, 0, 0, 0, 0, 0, 0, 0, 0,
	221, 0, 228, 315, 324, 323, 304, 305, 307, 309,
	314, 321, 327, 0, 0, 0, 0, 0, 243, 290,
	250, 242, 460, 0, 0, 0, 0, 0, 0, 0,
	213, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 361, 235, 0, 0, 0,
	0, 494, 0, 0, 0, 0, 0, 0, 0, 329,
	0, 298, 191, 209, 0, 0, 371, 412, 418, 0,
	0, 0, 233, 0, 416, 385, 478, 217, 262, 409,
	390, 414, 397, 265, 0, 0, 415, 335, 465, 404,
	475, 495, 496, 241, 365, 485, 454, 491, 508, 210,
	238, 379, 447, 481, 438, 358, 461, 462, 297, 437,
	271, 194, 333, 501, 208, 424, 225, 215, 201, 449,
	473, 222, 428, 0, 0, 510, 203, 471, 446, 354,
	294, 295, 202, 0, 408, 246, 269, 236, 374, 468,
	469, 234, 511, 212, 490, 205, 0, 489, 367, 464,
	472, 355, 345, 204, 470, 353, 344, 300, 319, 320,
	258, 280, 402, 338, 403, 281, 363, 362, 364, 197,
	482, 0, 198, 0, 443, 483, 512, 218, 219, 220,
	0, 257, 261, 268, 270, 276, 277, 284, 331, 378,
	401, 399, 405, 0, 459, 476, 486, 493, 499, 500,
	502, 503, 504, 505, 506, 507, 366, 283, 439, 299,
	336, 0, 0, 384, 417, 223, 480, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 531, 346, 430,
	477, 301, 313, 316, 306, 325, 0, 326, 302, 303,
	308, 310, 311, 312, 317, 318, 322, 328, 0, 190,
	206, 332, 0, 406, 266, 509, 488, 484, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 199, 207, 216, 226, 239, 254,
	256, 263, 274, 279, 282, 287, 288, 291, 296, 342,
	348, 349, 350, 351, 368, 369, 370, 373, 376, 377,
	380, 382, 383, 386, 393, 394, 395, 396, 398, 400,
	407, 411, 419, 420, 421, 422, 423, 426, 427, 432,
	433, 434, 435, 436, 444, 448, 466, 467, 479, 492,
	497, 425, 275, 474, 498, 0, 341, 0, 0, 343,
	259, 278, 289, 0, 487, 445, 211, 413, 267, 200,
	229, 214, 237, 252, 255, 293, 352, 359, 388, 392,
	272, 249, 227, 410, 224, 429, 451, 452, 453, 455,
	356, 244, 391, 0, 357, 339, 457, 458, 285, 456,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 0, 0, 330, 245, 0, 0, 389,
	0, 196, 0, 431, 232, 340, 337, 463, 260, 251,
	247, 231, 286, 347, 387, 450, 381, 0, 334, 0,
	0, 441, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 292, 230,
	195, 372, 442, 264, 0, 0, 0, 0, 187, 188,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 228, 315, 324, 323, 304, 305, 307,
	309, 314, 321, 327, 0, 0, 0, 0, 0, 243,
	290, 250, 242, 460, 0, 0, 0, 0, 0, 0,
	0, 213, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 361, 235, 0, 0,
	0, 0, 494, 0, 0, 0, 2883, 0, 0, 0,
	329, 0, 298, 191, 209, 0, 0, 371, 412, 418,
	0, 0, 0, 233, 0, 416, 385, 478, 217, 262,
	409, 390, 414, 397, 265, 0, 0, 415, 335, 465,
	404, 475, 495, 496, 241, 365, 485, 454, 491, 508,
	210, 238, 379, 447, 481, 438, 358, 461, 462, 297,
	437, 271, 194, 333, 501, 208, 424, 225, 215, 201,
	449, 473, 222, 428, 0, 0, 510, 203, 471, 446,
	354, 294, 295, 202, 0, 408, 246, 269, 236, 374,
	468, 469, 234, 511, 212, 490, 205, 0, 489, 367,
	464, 472, 355, 345, 204, 470, 353, 344, 300, 319,
	320, 258, 280, 402, 338, 403, 281, 363, 362, 364,
	197, 482, 0, 198, 0, 443, 483, 512, 218, 219,
	220, 0, 257, 261, 268, 270, 276, 277, 284, 331,
	378, 401, 399, 405, 0, 459, 476, 486, 493, 499,
	500, 502, 503, 504, 505, 506, 507, 366, 283, 439,
	299, 336, 0, 0, 384, 417, 223, 480, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 531, 346,
	430, 477, 301, 313, 316, 306, 325, 0, 326, 302,
	303, 308, 310, 311, 312, 317, 318, 322, 328, 0,
	190, 206, 332, 0, 406, 266, 509, 488, 484, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 199, 207, 216, 226, 239,
	254, 256, 263, 274, 279, 282, 287, 288, 291, 296,
	342, 348, 349, 350, 351, 368, 369, 370, 373, 376,
	377, 380, 382, 383, 386, 393, 394, 395, 396, 398,
	400, 407, 411, 419, 420, 421, 422, 423, 426, 427,
	432, 433, 434, 435, 436, 444, 448, 466, 467, 479,
	492, 497, 425, 275, 474, 498, 0, 341, 0, 0,
	343, 259, 278, 289, 0, 487, 445, 211, 413, 267,
	200, 229, 214, 237, 252, 255, 293, 352, 359, 388,
	392, 272, 249, 227, 410, 224, 429, 451, 452, 453,
	455, 356, 244, 391, 0, 357, 339, 457, 458, 285,
	456, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 0, 0, 330, 245, 0, 0,
	389, 0, 196, 0, 431, 232, 340, 337, 463, 260,
	251, 247, 231, 286, 347, 387, 450, 381, 0, 334,
	0, 0, 441, 360, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 292,
	230, 195, 372, 442, 264, 0, 0, 0, 0, 187,
	188, 189, 0, 1510, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 228, 315, 324, 323, 304, 305,
	307, 309, 314, 321, 327, 0, 0, 0, 0, 0,
	243, 290, 250, 242, 460, 0, 0, 0, 0, 0,
	0, 0, 213, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 361, 235, 0,
	0, 0, 0, 494, 0, 0, 0, 0, 0, 0,
	0, 329, 0, 298, 191, 209, 0, 0, 371, 412,
	418, 0, 0, 0, 233, 0, 416, 385, 478, 217,
	262, 409, 390, 414, 397, 265, 0, 0, 415, 335,
	465, 404, 475, 495, 496, 241, 365, 485, 454, 491,
	508, 210, 238, 379, 447, 481, 438, 358, 461, 462,
	297, 437, 271, 194, 333, 501, 208, 424, 225, 215,
	201, 449, 473, 222, 428, 0, 0, 510, 203, 471,
	446, 354, 294, 295, 202, 0, 408, 246, 269, 236,
	374, 468, 469, 234, 511, 212, 490, 205, 0, 489,
	367, 464, 472, 355, 345, 204, 470, 353, 344, 300,
	319, 320, 258, 280, 402, 338, 403, 281, 363, 362,
	364, 197, 482, 0, 198, 0, 443, 483, 512, 218,
	219, 220, 0, 257, 261, 268, 270, 276, 277, 284,
	331, 378, 401, 399, 405, 0, 459, 476, 486, 493,
	499, 500, 502, 503, 504, 505, 506, 507, 366, 283,
	439, 299, 336, 0, 0, 384, 417, 223, 480, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 531,
	346, 430, 477, 301, 313, 316, 306, 325, 0, 326,
	302, 303, 308, 310, 311, 312, 317, 318, 322, 328,
	0, 190, 206, 332, 0, 406, 266, 509, 488, 484,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 199, 207, 216, 226,
	239, 254, 256, 263, 274, 279, 282, 287, 288, 291,
	296, 342, 348, 349, 350, 351, 368, 369, 370, 373,
	376, 377, 380, 382, 383, 386, 393, 394, 395, 396,
	398, 400, 407, 411, 419, 420, 421, 422, 423, 426,
	427, 432, 433, 434, 435, 436, 444, 448, 466, 467,
	479, 492, 497, 425, 275, 474, 498, 0, 341, 0,
	0, 343, 259, 278, 289, 0, 487, 445, 211, 413,
	267, 200, 229, 214, 237, 252, 255, 293, 352, 359,
	388, 392, 272, 249, 227, 410, 224, 429, 451, 452,
	453, 455, 356, 244, 391, 0, 357, 339, 457, 458,
	285, 456, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 375, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 330, 245, 0,
	0, 389, 0, 196, 0, 431, 232, 340, 337, 463,
	260, 251, 247, 231, 286, 347, 387, 450, 381, 0,
	334, 0, 0, 441, 360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	292, 230, 195, 372, 442, 264, 0, 0, 0, 0,
	187, 188, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 228, 315, 324, 323, 304,
	305, 307, 309, 314, 321, 327, 0, 0, 0, 0,
	0, 243, 290, 250, 242, 460, 0, 0, 0, 0,
	0, 0, 0, 213, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 361, 235,
	0, 0, 0, 0, 494, 0, 0, 0, 2799, 0,
	0, 0, 329, 0, 298, 191, 209, 0, 0, 371,
	412, 418, 0, 0, 0, 233, 0, 416, 385, 478,
	217, 262, 409, 390, 414, 397, 265, 0, 0, 415,
	335, 465, 404, 475, 495, 496, 241, 365, 485, 454,
	491, 508, 210, 238, 379, 447, 481, 438, 358, 461,
	462, 297, 437, 271, 194, 333, 501, 208, 424, 225,
	215, 201, 449, 473, 222, 428, 0, 0, 510, 203,
	471, 446, 354, 294, 295, 202, 0, 408, 246, 269,
	236, 374, 468, 469, 234, 511, 212, 490, 205, 0,
	489, 367, 464, 472, 355, 345, 204, 470, 353, 344,
	300, 319, 320, 258, 280, 402, 338, 403, 281, 363,
	362, 364, 197, 482, 0, 198, 0, 443, 483, 512,
	218, 219, 220, 0, 257, 261, 268, 270, 276, 277,
	284, 331, 378, 401, 399, 405, 0, 459, 476, 486,
	493, 499, 500, 502, 503, 504, 505, 506, 507, 366,
	283, 439, 299, 336, 0, 0, 384, 417, 223, 480,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	531, 346, 430, 477, 301, 313, 316, 306, 325, 0,
	326, 302, 303, 308, 310, 311, 312, 317, 318, 322,
	328, 0, 190, 206, 332, 0, 406, 266, 509, 488,
	484, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 199, 207, 216,
	226, 239, 254, 256, 263, 274, 279, 282, 287, 288,
	291, 296, 342, 348, 349, 350, 351, 368, 369, 370,
	373, 376, 377, 380, 382, 383, 386, 393, 394, 395,
	396, 398, 400, 407, 411, 419, 420, 421, 422, 423,
	426, 427, 432, 433, 434, 435, 436, 444, 448, 466,
	467, 479, 492, 497, 425, 275, 474, 498, 0, 341,
	0, 0, 343, 259, 278, 289, 0, 487, 445, 211,
	413, 267, 200, 229, 214, 237, 252, 255, 293, 352,
	359, 388, 392, 272, 249, 227, 410, 224, 429, 451,
	452, 453, 455, 356, 244, 391, 0, 357, 339, 457,
	458, 285, 456, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 375, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 0, 0, 0, 0, 330, 245,
	0, 0, 389, 0, 196, 0, 431, 232, 340, 337,
	463, 260, 251, 247, 231, 286, 347, 387, 450, 381,
	0, 334, 0, 0, 441, 360, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 292, 230, 195, 372, 442, 264, 0, 87, 0,
	0, 187, 188, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 228, 315, 324, 323,
	304, 305, 307, 309, 314, 321, 327, 0, 0, 0,
	0, 0, 243, 290, 250, 242, 460, 0, 0, 0,
	0, 0, 0, 0, 213, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 361,
	235, 0, 0, 0, 0, 494, 0, 0, 0, 0,
	0, 0, 0, 329, 0, 298, 191, 209, 0, 0,
	371, 412, 418, 0, 0, 0, 233, 0, 416, 385,
	478, 217, 262, 409, 390, 414, 397, 265, 0, 0,
	415, 335, 465, 404, 475, 495, 496, 241, 365, 485,
	454, 491, 508, 210, 238, 379, 447, 481, 438, 358,
	461, 462, 297, 437, 271, 194, 333, 501, 208, 424,
	225, 215, 201, 449, 473, 222, 428, 0, 0, 510,
	203, 471, 446, 354, 294, 295, 202, 0, 408, 246,
	269, 236, 374, 468, 469, 234, 511, 212, 490, 205,
	0, 489, 367, 464, 472, 355, 345, 204, 470, 353,
	344, 300, 319, 320, 258, 280, 402, 338, 403, 281,
	363, 362, 364, 197, 482, 0, 198, 0, 443, 483,
	512, 218, 219, 220, 0, 257, 261, 268, 270, 276,
	277, 284, 331, 378, 401, 399, 405, 0, 459, 476,
	486, 493, 499, 500, 502, 503, 504, 505, 506, 507,
	366, 283, 439, 299, 336, 0, 0, 384, 417, 223,
	480, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 531, 346, 430, 477, 301, 313, 316, 306, 325,
	0, 326, 302, 303, 308, 310, 311, 312, 317, 318,
	322, 328, 0, 190, 206, 332, 0, 406, 266, 509,
	488, 484, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 199, 207,
	216, 226, 239, 254, 256, 263, 274, 279, 282, 287,
	288, 291, 296, 342, 348, 349, 350, 351, 368, 369,
	370, 373, 376, 377, 380, 382, 383, 386, 393, 394,
	395, 396, 398, 400, 407, 411, 419, 420, 421, 422,
	423, 426, 427, 432, 433, 434, 435, 436, 444, 448,
	466, 467, 479, 492, 497, 425, 275, 474, 498, 0,
	341, 0, 0, 343, 259, 278, 289, 0, 487, 445,
	211, 413, 267, 200, 229, 214, 237, 252, 255, 293,
	352, 359, 388, 392, 272, 249, 227, 410, 224, 429,
	451, 452, 453, 455, 356, 244, 391, 0, 357, 339,
	457, 458, 285, 456, 0, 0, 0, 0, 1815, 0,
	0, 0, 0, 0, 0, 375, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 330,
	245, 0, 0, 389, 0, 196, 0, 431, 232, 340,
	337, 463, 260, 251, 247, 231, 286, 347, 387, 450,
	381, 0, 334, 0, 0, 441, 360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 292, 230, 195, 372, 442, 264, 0, 0,
	0, 0, 187, 188, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 228, 315, 324,
	323, 304, 305, 307, 309, 314, 321, 327, 0, 0,
	0, 0, 0, 243, 290, 250, 242, 460, 0, 0,
	0, 0, 0, 0, 0, 213, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	361, 235, 0, 0, 0, 0, 494, 0, 0, 0,
	0, 0, 0, 0, 329, 0, 298, 191, 209, 0,
	0, 371, 412, 418, 0, 0, 0, 233, 0, 416,
	385, 478, 217, 262, 409, 390, 414, 397, 265, 0,
	0, 415, 335, 465, 404, 475, 495, 496, 241, 365,
	485, 454, 491, 508, 210, 238, 379, 447, 481, 438,
	358, 461, 462, 297, 437, 271, 194, 333, 501, 208,
	424, 225, 215, 201, 449, 473, 222, 428, 0, 0,
	510, 203, 471, 446, 354, 294, 295, 202, 0, 408,
	246, 269, 236, 374, 468, 469, 234, 511, 212, 490,
	205, 0, 489, 367, 464, 472, 355, 345, 204, 470,
	353, 344, 300, 319, 320, 258, 280, 402, 338, 403,
	281, 363, 362, 364, 197, 482, 0, 198, 0, 443,
	483, 512, 218, 219, 220, 0, 257, 261, 268, 270,
	276, 277, 284, 331, 378, 401, 399, 405, 0, 459,
	476, 486, 493, 499, 500, 502, 503, 504, 505, 506,
	507, 366, 283, 439, 299, 336, 0, 0, 384, 417,
	223, 480, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 531, 346, 430, 477, 301, 313, 316, 306,
	325, 0, 326, 302, 303, 308, 310, 311, 312, 317,
	318, 322, 328, 0, 190, 206, 332, 0, 406, 266,
	509, 488, 484, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 199,
	207, 216, 226, 239, 254, 256, 263, 274, 279, 282,
	287, 288, 291, 296, 342, 348, 349, 350, 351, 368,
	369, 370, 373, 376, 377, 380, 382, 383, 386, 393,
	394, 395, 396, 398, 400, 407, 411, 419, 420, 421,
	422, 423, 426, 427, 432, 433, 434, 435, 436, 444,
	448, 466, 467, 479, 492, 497, 425, 275, 474, 498,
	0, 341, 0, 0, 343, 259, 278, 289, 0, 487,
	445, 211, 413, 267, 200, 229, 214, 237, 252, 255,
	293, 352, 359, 388, 392, 272, 249, 227, 410, 224,
	429, 451, 452, 453, 455, 356, 244, 391, 0, 357,
	339, 457, 458, 285, 456, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 375, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 0, 0, 0, 0,
	330, 245, 0, 0, 389, 0, 196, 0, 431, 232,
	340, 337, 463, 260, 251, 247, 231, 286, 347, 387,
	450, 381, 0, 334, 0, 0, 441, 360, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 292, 230, 195, 372, 442, 264, 0,
	0, 0, 0, 187, 188, 189, 0, 1338, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 228, 315,
	324, 323, 304, 305, 307, 309, 314, 321, 327, 0,
	0, 0, 0, 0, 243, 290, 250, 242, 460, 0,
	0, 0, 0, 0, 0, 0, 213, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 361, 235, 0, 0, 0, 0, 494, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 298, 191, 209,
	0, 0, 371, 412, 418, 0, 0, 0, 233, 0,
	416, 385, 478, 217, 262, 409, 390, 414, 397, 265,
	0, 0, 415, 335, 465, 404, 475, 495, 496, 241,
	365, 485, 454, 491, 508, 210, 238, 379, 447, 481,
	438, 358, 461, 462, 297, 437, 271, 194, 333, 501,
	208, 424, 225, 215, 201, 449, 473, 222, 428, 0,
	0, 510, 203, 471, 446, 354, 294, 295, 202, 0,
	408, 246, 269, 236, 374, 468, 469, 234, 511, 212,
	490, 205, 0, 489, 367, 464, 472, 355, 345, 204,
	470, 353, 344, 300, 319, 320, 258, 280, 402, 338,
	403, 281, 363, 362, 364, 197, 482, 0, 198, 0,
	443, 483, 512, 218, 219, 220, 0, 257, 261, 268,
	270, 276, 277, 284, 331, 378, 401, 399, 405, 0,
	459, 476, 486, 493, 499, 500, 502, 503, 504, 505,
	506, 507, 366, 283, 439, 299, 336, 0, 0, 384,
	417, 223, 480, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 531, 346, 430, 477, 301, 313, 316,
	306, 325, 0, 326, 302, 303, 308, 310, 311, 312,
	317, 318, 322, 328, 0, 190, 206, 332, 0, 406,
	266, 509, 488, 484, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	199, 207, 216, 226, 239, 254, 256, 263, 274, 279,
	282, 287, 288, 291, 296, 342, 348, 349, 350, 351,
	368, 369, 370, 373, 376, 377, 380, 382, 383, 386,
	393, 394, 395, 396, 398, 400, 407, 411, 419, 420,
	421, 422, 423, 426, 427, 432, 433, 434, 435, 436,
	444, 448, 466, 467, 479, 492, 497, 425, 275, 474,
	498, 0, 341, 0, 0, 343, 259, 278, 289, 0,
	487, 445, 211, 413, 267, 200, 229, 214, 237, 252,
	255, 293, 352, 359, 388, 392, 272, 249, 227, 410,
	224, 429, 451, 452, 453, 455, 356, 244, 391, 0,
	357, 339, 457, 458, 285, 456, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 375, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 330, 245, 0, 0, 389, 0, 196, 0, 431,
	232, 340, 337, 463, 260, 251, 247, 231, 286, 347,
	387, 450, 381, 0, 334, 0, 0, 441, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 292, 230, 195, 372, 442, 264,
	0, 0, 0, 0, 187, 188, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 228,
	315, 324, 323, 304, 305, 307, 309, 314, 321, 327,
	0, 0, 0, 0, 0, 243, 290, 250, 242, 460,
	0, 0, 0, 0, 0, 0, 0, 213, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1198, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 361, 235, 0, 0, 0, 0, 494, 0,
	0, 0, 0, 0, 0, 0, 329, 0, 298, 191,
	209, 0, 0, 371, 412, 418, 0, 0, 0, 233,
	0, 416, 385, 478, 217, 262, 409, 390, 414, 397,
	265, 0, 0, 415, 335, 465, 404, 475, 495, 496,
	241, 365, 485, 454, 491, 508, 210, 238, 379, 447,
	481, 438, 358, 461, 462, 297, 437, 271, 194, 333,
	501, 208, 424, 225, 215, 201, 449, 473, 222, 428,
	0, 0, 510, 203, 471, 446, 354, 294, 295, 202,
	0, 408, 246, 269, 236, 374, 468, 469, 234, 511,
	212, 490, 205, 0, 489, 367, 464, 472, 355, 345,
	204, 470, 353, 344, 300, 319, 320, 258, 280, 402,
	338, 403, 281, 363, 362, 364, 197, 482, 0, 198,
	0, 443, 483, 512, 218, 219, 220, 0, 257, 261,
	268, 270, 276, 277, 284, 331, 378, 401, 399, 405,
	0, 459, 476, 486, 493, 499, 500, 502, 503, 504,
	505, 506, 507, 366, 283, 439, 299, 336, 0, 0,
	384, 417, 223, 480, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 531, 346, 430, 477, 301, 313,
	316, 306, 325, 0, 326, 302, 303, 308, 310, 311,
	312, 317, 318, 322, 328, 0, 190, 206, 332, 0,
	406, 266, 509, 488, 484, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 199, 207, 216, 226, 239, 254, 256, 263, 274,
	279, 282, 287, 288, 291, 296, 342, 348, 349, 350,
	351, 368, 369, 370, 373, 376, 377, 380, 382, 383,
	386, 393, 394, 395, 396, 398, 400, 407, 411, 419,
	420, 421, 422, 423, 426, 427, 432, 433, 434, 435,
	436, 444, 448, 466, 467, 479, 492, 497, 425, 275,
	474, 498, 0, 341, 0, 0, 343, 259, 278, 289,
	0, 487, 445, 211, 413, 267, 200, 229, 214, 237,
	252, 255, 293, 352, 359, 388, 392, 272, 249, 227,
	410, 224, 429, 451, 452, 453, 455, 356, 244, 391,
	0, 357, 339, 457, 458, 285, 456, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 375, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	0, 0, 330, 245, 0, 0, 389, 0, 196, 0,
	431, 232, 340, 337, 463, 260, 251, 247, 231, 286,
	347, 387, 450, 381, 0, 334, 0, 0, 441, 360,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 292, 230, 195, 372, 442,
	264, 0, 0, 0, 0, 187, 188, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	228, 315, 324, 323, 304, 305, 307, 309, 314, 321,
	327, 0, 0, 0, 0, 0, 243, 290, 250, 242,
	460, 0, 0, 0, 0, 0, 0, 0, 213, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 361, 235, 0, 0, 0, 0, 494,
	0, 0, 0, 0, 0, 0, 0, 329, 0, 298,
	191, 209, 0, 0, 371, 412, 418, 0, 0, 0,
	233, 0, 416, 385, 478, 217, 262, 409, 390, 414,
	397, 265, 0, 0, 415, 335, 465, 404, 475, 495,
	496, 241, 365, 485, 454, 491, 508, 210, 238, 379,
	447, 481, 438, 358, 461, 462, 297, 437, 271, 194,
	333, 501, 208, 424, 225, 215, 201, 449, 473, 222,
	428, 0, 0, 510, 203, 471, 446, 354, 294, 295,
	202, 0, 408, 246, 269, 236, 374, 468, 469, 234,
	511, 212, 490, 205, 0, 489, 367, 464, 472, 355,
	345, 204, 470, 353, 344, 300, 319, 320, 258, 280,
	402, 338, 403, 281, 363, 362, 364, 197, 482, 0,
	198, 0, 443, 483, 512, 218, 219, 220, 0, 257,
	261, 268, 270, 276, 277, 284, 331, 378, 401, 399,
	405, 0, 459, 476, 486, 493, 499, 500, 502, 503,
	504, 505, 506, 507, 366, 283, 439, 299, 336, 0,
	0, 384, 417, 223, 480, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 531, 346, 430, 477, 301,
	313, 316, 306, 325, 0, 326, 302, 303, 308, 310,
	311, 312, 317, 318, 322, 328, 0, 190, 206, 332,
	1606, 406, 266, 509, 488, 484, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 199, 207, 216, 226, 239, 254, 256, 263,
	274, 279, 282, 287, 288, 291, 296, 342, 348, 349,
	350, 351, 368, 369, 370, 373, 376, 377, 380, 382,
	383, 386, 393, 394, 395, 396, 398, 400, 407, 411,
	419, 420, 421, 422, 423, 426, 427, 432, 433, 434,
	435, 436, 444, 448, 466, 467, 479, 492, 497, 425,
	275, 474, 498, 0, 341, 0, 0, 343, 259, 278,
	289, 0, 487, 445, 211, 413, 267, 200, 229, 214,
	237, 252, 255, 293, 352, 359, 388, 392, 272, 249,
	227, 410, 224, 429, 451, 452, 453, 455, 356, 244,
	391, 0, 357, 339, 457, 458, 285, 456, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 375,
	0, 1481, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 330, 245, 0, 0, 389, 0, 196,
	0, 431, 232, 340, 337, 463, 260, 251, 247, 231,
	286, 347, 387, 450, 381, 0, 334, 0, 0, 441,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 292, 230, 195, 372,
	442, 264, 0, 0, 0, 0, 187, 188, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 228, 315, 324, 323, 304, 305, 307, 309, 314,
	321, 327, 0, 0, 0, 0, 0, 243, 290, 250,
	242, 460, 0, 0, 0, 0, 0, 0, 0, 213,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 361, 235, 0, 0, 0, 0,
	494, 0, 0, 0, 0, 0, 0, 0, 329, 0,
	298, 191, 209, 0, 0, 371, 412, 418, 0, 0,
	0, 233, 0, 416, 385, 478, 217, 262, 409, 390,
	414, 397, 265, 0, 0, 415, 335, 465, 404, 475,
	495, 496, 241, 365, 485, 454, 491, 508, 210, 238,
	379, 447, 481, 438, 358, 461, 462, 297, 437, 271,
	194, 333, 501, 208, 424, 225, 215, 201, 449, 473,
	222, 428, 0, 0, 510, 203, 471, 446, 354, 294,
	295, 202, 0, 408, 246, 269, 236, 374, 468, 469,
	234, 511, 212, 490, 205, 0, 489, 367, 464, 472,
	355, 345, 204, 470, 353, 344, 300, 319, 320, 258,
	280, 402, 338, 403, 281, 363, 362, 364, 197, 482,
	0, 198, 0, 443, 483, 512, 218, 219, 220, 0,
	257, 261, 268, 270, 276, 277, 284, 331, 378, 401,
	399, 405, 0, 459, 476, 486, 493, 499, 500, 502,
	503, 504, 505, 506, 507, 366, 283, 439, 299, 336,
	0, 0, 384, 417, 223, 480, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 531, 346, 430, 477,
	301, 313, 316, 306, 325, 0, 326, 302, 303, 308,
	310, 311, 312, 317, 318, 322, 328, 0, 190, 206,
	332, 0, 406, 266, 509, 488, 484, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 199, 207, 216, 226, 239, 254, 256,
	263, 274, 279, 282, 287, 288, 291, 296, 342, 348,
	349, 350, 351, 368, 369, 370, 373, 376, 377, 380,
	382, 383, 386, 393, 394, 395, 396, 398, 400, 407,
	411, 419, 420, 421, 422, 423, 426, 427, 432, 433,
	434, 435, 436, 444, 448, 466, 467, 479, 492, 497,
	425, 275, 474, 498, 0, 341, 0, 0, 343, 259,
	278, 289, 0, 487, 445, 211, 413, 267, 200, 229,
	214, 237, 252, 255, 293, 352, 359, 388, 392, 272,
	249, 227, 410, 224, 429, 451, 452, 453, 455, 356,
	244, 391, 0, 357, 339, 457, 458, 285, 456, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	375, 0, 1479, 0, 0, 0, 0, 0, 0, 248,
	0, 0, 0, 0, 330, 245, 0, 0, 389, 0,
	196, 0, 431, 232, 340, 337, 463, 260, 251, 247,
	231, 286, 347, 387, 450, 381, 0, 334, 0, 0,
	441, 360, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 292, 230, 195,
	372, 442, 264, 0, 0, 0, 0, 187, 188, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	221, 0, 228, 315, 324, 323, 304, 305, 307, 309,
	314, 321, 327, 0, 0, 0, 0, 0, 243, 290,
	250, 242, 460, 0, 0, 0, 0, 0, 0, 0,
	213, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 361, 235, 0, 0, 0,
	0, 494, 0, 0, 0, 0, 0, 0, 0, 329,
	0, 298, 191, 209, 0, 0, 371, 412, 418, 0,
	0, 0, 233, 0, 416, 385, 478, 217, 262, 409,
	390, 414, 397, 265, 0, 0, 415, 335, 465, 404,
	475, 495, 496, 241, 365, 485, 454, 491, 508, 210,
	238, 379, 447, 481, 438, 358, 461, 462, 297, 437,
	271, 194, 333, 501, 208, 424, 225, 215, 201, 449,
	473, 222, 428, 0, 0, 510, 203, 471, 446, 354,
	294, 295, 202, 0, 408, 246, 269, 236, 374, 468,
	469, 234, 511, 212, 490, 205, 0, 489, 367, 464,
	472, 355, 345, 204, 470, 353, 344, 300, 319, 320,
	258, 280, 402, 338, 403, 281, 363, 362, 364, 197,
	482, 0, 198, 0, 443, 483, 512, 218, 219, 220,
	0, 257, 261, 268, 270, 276, 277, 284, 331, 378,
	401, 399, 405, 0, 459, 476, 486, 493, 499, 500,
	502, 503, 504, 505, 506, 507, 366, 283, 439, 299,
	336, 0, 0, 384, 417, 223, 480, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 531, 346, 430,
	477, 301, 313, 316, 306, 325, 0, 326, 302, 303,
	308, 310, 311, 312, 317, 318, 322, 328, 0, 190,
	206, 332, 0, 406, 266, 509, 488, 484, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 199, 207, 216, 226, 239, 254,
	256, 263, 274, 279, 282, 287, 288, 291, 296, 342,
	348, 349, 350, 351, 368, 369, 370, 373, 376, 377,
	380, 382, 383, 386, 393, 394, 395, 396, 398, 400,
	407, 411, 419, 420, 421, 422, 423, 426, 427, 432,
	433, 434, 435, 436, 444, 448, 466, 467, 479, 492,
	497, 425, 275, 474, 498, 0, 341, 0, 0, 343,
	259, 278, 289, 0, 487, 445, 211, 413, 267, 200,
	229, 214, 237, 252, 255, 293, 352, 359, 388, 392,
	272, 249, 227, 410, 224, 429, 451, 452, 453, 455,
	356, 244, 391, 0, 357, 339, 457, 458, 285, 456,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 0, 1477, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 0, 0, 330, 245, 0, 0, 389,
	0, 196, 0, 431, 232, 340, 337, 463, 260, 251,
	247, 231, 286, 347, 387, 450, 381, 0, 334, 0,
	0, 441, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 292, 230,
	195, 372, 442, 264, 0, 0, 0, 0, 187, 188,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 228, 315, 324, 323, 304, 305, 307,
	309, 314, 321, 327, 0, 0, 0, 0, 0, 243,
	290, 250, 242, 460, 0, 0, 0, 0, 0, 0,
	0, 213, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 361, 235, 0, 0,
	0, 0, 494, 0, 0, 0, 0, 0, 0, 0,
	329, 0, 298, 191, 209, 0, 0, 371, 412, 418,
	0, 0, 0, 233, 0, 416, 385, 478, 217, 262,
	409, 390, 414, 397, 265, 0, 0, 415, 335, 465,
	404, 475, 495, 496, 241, 365, 485, 454, 491, 508,
	210, 238, 379, 447, 481, 438, 358, 461, 462, 297,
	437, 271, 194, 333, 501, 208, 424, 225, 215, 201,
	449, 473, 222, 428, 0, 0, 510, 203, 471, 446,
	354, 294, 295, 202, 0, 408, 246, 269, 236, 374,
	468, 469, 234, 511, 212, 490, 205, 0, 489, 367,
	464, 472, 355, 345, 204, 470, 353, 344, 300, 319,
	320, 258, 280, 402, 338, 403, 281, 363, 362, 364,
	197, 482, 0, 198, 0, 443, 483, 512, 218, 219,
	220, 0, 257, 261, 268, 270, 276, 277, 284, 331,
	378, 401, 399, 405, 0, 459, 476, 486, 493, 499,
	500, 502, 503, 504, 505, 506, 507, 366, 283, 439,
	299, 336, 0, 0, 384, 417, 223, 480, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 531, 346,
	430, 477, 301, 313, 316, 306, 325, 0, 326, 302,
	303, 308, 310, 311, 312, 317, 318, 322, 328, 0,
	190, 206, 332, 0, 406, 266, 509, 488, 484, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 199, 207, 216, 226, 239,
	254, 256, 263, 274, 279, 282, 287, 288, 291, 296,
	342, 348, 349, 350, 351, 368, 369, 370, 373, 376,
	377, 380, 382, 383, 386, 393, 394, 395, 396, 398,
	400, 407, 411, 419, 420, 421, 422, 423, 426, 427,
	432, 433, 434, 435, 436, 444, 448, 466, 467, 479,
	492, 497, 425, 275, 474, 498, 0, 341, 0, 0,
	343, 259, 278, 289, 0, 487, 445, 211, 413, 267,
	200, 229, 214, 237, 252, 255, 293, 352, 359, 388,
	392, 272, 249, 227, 410, 224, 429, 451, 452, 453,
	455, 356, 244, 391, 0, 357, 339, 457, 458, 285,
	456, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 1475, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 0, 0, 330, 245, 0, 0,
	389, 0, 196, 0, 431, 232, 340, 337, 463, 260,
	251, 247, 231, 286, 347, 387, 450, 381, 0, 334,
	0, 0, 441, 360, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 292,
	230, 195, 372, 442, 264, 0, 0, 0, 0, 187,
	188, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 228, 315, 324, 323, 304, 305,
	307, 309, 314, 321, 327, 0, 0, 0, 0, 0,
	243, 290, 250, 242, 460, 0, 0, 0, 0, 0,
	0, 0, 213, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 361, 235, 0,
	0, 0, 0, 494, 0, 0, 0, 0, 0, 0,
	0, 329, 0, 298, 191, 209, 0, 0, 371, 412,
	418, 0, 0, 0, 233, 0, 416, 385, 478, 217,
	262, 409, 390, 414, 397, 265, 0, 0, 415, 335,
	465, 404, 475, 495, 496, 241, 365, 485, 454, 491,
	508, 210, 238, 379, 447, 481, 438, 358, 461, 462,
	297, 437, 271, 194, 333, 501, 208, 424, 225, 215,
	201, 449, 473, 222, 428, 0, 0, 510, 203, 471,
	446, 354, 294, 295, 202, 0, 408, 246, 269, 236,
	374, 468, 469, 234, 511, 212, 490, 205, 0, 489,
	367, 464, 472, 355, 345, 204, 470, 353, 344, 300,
	319, 320, 258, 280, 402, 338, 403, 281, 363, 362,
	364, 197, 482, 0, 198, 0, 443, 483, 512, 218,
	219, 220, 0, 257, 261, 268, 270, 276, 277, 284,
	331, 378, 401, 399, 405, 0, 459, 476, 486, 493,
	499, 500, 502, 503, 504, 505, 506, 507, 366, 283,
	439, 299, 336, 0, 0, 384, 417, 223, 480, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 531,
	346, 430, 477, 301, 313, 316, 306, 325, 0, 326,
	302, 303, 308, 310, 311, 312, 317, 318, 322, 328,
	0, 190, 206, 332, 0, 406, 266, 509, 488, 484,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 199, 207, 216, 226,
	239, 254, 256, 263, 274, 279, 282, 287, 288, 291,
	296, 342, 348, 349, 350, 351, 368, 369, 370, 373,
	376, 377, 380, 382, 383, 386, 393, 394, 395, 396,
	398, 400, 407, 411, 419, 420, 421, 422, 423, 426,
	427, 432, 433, 434, 435, 436, 444, 448, 466, 467,
	479, 492, 497, 425, 275, 474, 498, 0, 341, 0,
	0, 343, 259, 278, 289, 0, 487, 445, 211, 413,
	267, 200, 229, 214, 237, 252, 255, 293, 352, 359,
	388, 392, 272, 249, 227, 410, 224, 429, 451, 452,
	453, 455, 356, 244, 391, 0, 357, 339, 457, 458,
	285, 456, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 375, 0, 1473, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 330, 245, 0,
	0, 389, 0, 196, 0, 431, 232, 340, 337, 463,
	260, 251, 247, 231, 286, 347, 387, 450, 381, 0,
	334, 0, 0, 441, 360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	292, 230, 195, 372, 442, 264, 0, 0, 0, 0,
	187, 188, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 228, 315, 324, 323, 304,
	305, 307, 309, 314, 321, 327, 0, 0, 0, 0,
	0, 243, 290, 250, 242, 460, 0, 0, 0, 0,
	0, 0, 0, 213, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 361, 235,
	0, 0, 0, 0, 494, 0, 0, 0, 0, 0,
	0, 0, 329, 0, 298, 191, 209, 0, 0, 371,
	412, 418, 0, 0, 0, 233, 0, 416, 385, 478,
	217, 262, 409, 390, 414, 397, 265, 0, 0, 415,
	335, 465, 404, 475, 495, 496, 241, 365, 485, 454,
	491, 508, 210, 238, 379, 447, 481, 438, 358, 461,
	462, 297, 437, 271, 194, 333, 501, 208, 424, 225,
	215, 201, 449, 473, 222, 428, 0, 0, 510, 203,
	471, 446, 354, 294, 295, 202, 0, 408, 246, 269,
	236, 374, 468, 469, 234, 511, 212, 490, 205, 0,
	489, 367, 464, 472, 355, 345, 204, 470, 353, 344,
	300, 319, 320, 258, 280, 402, 338, 403, 281, 363,
	362, 364, 197, 482, 0, 198, 0, 443, 483, 512,
	218, 219, 220, 0, 257, 261, 268, 270, 276, 277,
	284, 331, 378, 401, 399, 405, 0, 459, 476, 486,
	493, 499, 500, 502, 503, 504, 505, 506, 507, 366,
	283, 439, 299, 336, 0, 0, 384, 417, 223, 480,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	531, 346, 430, 477, 301, 313, 316, 306, 325, 0,
	326, 302, 303, 308, 310, 311, 312, 317, 318, 322,
	328, 0, 190, 206, 332, 0, 406, 266, 509, 488,
	484, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 199, 207, 216,
	226, 239, 254, 256, 263, 274, 279, 282, 287, 288,
	291, 296, 342, 348, 349, 350, 351, 368, 369, 370,
	373, 376, 377, 380, 382, 383, 386, 393, 394, 395,
	396, 398, 400, 407, 411, 419, 420, 421, 422, 423,
	426, 427, 432, 433, 434, 435, 436, 444, 448, 466,
	467, 479, 492, 497, 425, 275, 474, 498, 0, 341,
	0, 0, 343, 259, 278, 289, 0, 487, 445, 211,
	413, 267, 200, 229, 214, 237, 252, 255, 293, 352,
	359, 388, 392, 272, 249, 227, 410, 224, 429, 451,
	452, 453, 455, 356, 244, 391, 0, 357, 339, 457,
	458, 285, 456, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 375, 0, 1469, 0, 0, 0,
	0, 0, 0, 248, 0, 0, 0, 0, 330, 245,
	0, 0, 389, 0, 196, 0, 431, 232, 340, 337,
	463, 260, 251, 247, 231, 286, 347, 387, 450, 381,
	0, 334, 0, 0, 441, 360, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 292, 230, 195, 372, 442, 264, 0, 0, 0,
	0, 187, 188, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 228, 315, 324, 323,
	304, 305, 307, 309, 314, 321, 327, 0, 0, 0,
	0, 0, 243, 290, 250, 242, 460, 0, 0, 0,
	0, 0, 0, 0, 213, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 361,
	235, 0, 0, 0, 0, 494, 0, 0, 0, 0,
	0, 0, 0, 329, 0, 298, 191, 209, 0, 0,
	371, 412, 418, 0, 0, 0, 233, 0, 416, 385,
	478, 217, 262, 409, 390, 414, 397, 265, 0, 0,
	415, 335, 465, 404, 475, 495, 496, 241, 365, 485,
	454, 491, 508, 210, 238, 379, 447, 481, 438, 358,
	461, 462, 297, 437, 271, 194, 333, 501, 208, 424,
	225, 215, 201, 449, 473, 222, 428, 0, 0, 510,
	203, 471, 446, 354, 294, 295, 202, 0, 408, 246,
	269, 236, 374, 468, 469, 234, 511, 212, 490, 205,
	0, 489, 367, 464, 472, 355, 345, 204, 470, 353,
	344, 300, 319, 320, 258, 280, 402, 338, 403, 281,
	363, 362, 364, 197, 482, 0, 198, 0, 443, 483,
	512, 218, 219, 220, 0, 257, 261, 268, 270, 276,
	277, 284, 331, 378, 401, 399, 405, 0, 459, 476,
	486, 493, 499, 500, 502, 503, 504, 505, 506, 507,
	366, 283, 439, 299, 336, 0, 0, 384, 417, 223,
	480, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 531, 346, 430, 477, 301, 313, 316, 306, 325,
	0, 326, 302, 303, 308, 310, 311, 312, 317, 318,
	322, 328, 0, 190, 206, 332, 0, 406, 266, 509,
	488, 484, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 199, 207,
	216, 226, 239, 254, 256, 263, 274, 279, 282, 287,
	288, 291, 296, 342, 348, 349, 350, 351, 368, 369,
	370, 373, 376, 377, 380, 382, 383, 386, 393, 394,
	395, 396, 398, 400, 407, 411, 419, 420, 421, 422,
	423, 426, 427, 432, 433, 434, 435, 436, 444, 448,
	466, 467, 479, 492, 497, 425, 275, 474, 498, 0,
	341, 0, 0, 343, 259, 278, 289, 0, 487, 445,
	211, 413, 267, 200, 229, 214, 237, 252, 255, 293,
	352, 359, 388, 392, 272, 249, 227, 410, 224, 429,
	451, 452, 453, 455, 356, 244, 391, 0, 357, 339,
	457, 458, 285, 456, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 375, 0, 1467, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 330,
	245, 0, 0, 389, 0, 196, 0, 431, 232, 340,
	337, 463, 260, 251, 247, 231, 286, 347, 387, 450,
	381, 0, 334, 0, 0, 441, 360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 292, 230, 195, 372, 442, 264, 0, 0,
	0, 0, 187, 188, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 228, 315, 324,
	323, 304, 305, 307, 309, 314, 321, 327, 0, 0,
	0, 0, 0, 243, 290, 250, 242, 460, 0, 0,
	0, 0, 0, 0, 0, 213, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	361, 235, 0, 0, 0, 0, 494, 0, 0, 0,
	0, 0, 0, 0, 329, 0, 298, 191, 209, 0,
	0, 371, 412, 418, 0, 0, 0, 233, 0, 416,
	385, 478, 217, 262, 409, 390, 414, 397, 265, 0,
	0, 415, 335, 465, 404, 475, 495, 496, 241, 365,
	485, 454, 491, 508, 210, 238, 379, 447, 481, 438,
	358, 461, 462, 297, 437, 271, 194, 333, 501, 208,
	424, 225, 215, 201, 449, 473, 222, 428, 0, 0,
	510, 203, 471, 446, 354, 294, 295, 202, 0, 408,
	246, 269, 236, 374, 468, 469, 234, 511, 212, 490,
	205, 0, 489, 367, 464, 472, 355, 345, 204, 470,
	353, 344, 300, 319, 320, 258, 280, 402, 338, 403,
	281, 363, 362, 364, 197, 482, 0, 198, 0, 443,
	483, 512, 218, 219, 220, 0, 257, 261, 268, 270,
	276, 277, 284, 331, 378, 401, 399, 405, 0, 459,
	476, 486, 493, 499, 500, 502, 503, 504, 505, 506,
	507, 366, 283, 439, 299, 336, 0, 0, 384, 417,
	223, 480, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 531, 346, 430, 477, 301, 313, 316, 306,
	325, 0, 326, 302, 303, 308, 310, 311, 312, 317,
	318, 322, 328, 0, 190, 206, 332, 0, 406, 266,
	509, 488, 484, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 199,
	207, 216, 226, 239, 254, 256, 263, 274, 279, 282,
	287, 288, 291, 296, 342, 348, 349, 350, 351, 368,
	369, 370, 373, 376, 377, 380, 382, 383, 386, 393,
	394, 395, 396, 398, 400, 407, 411, 419, 420, 421,
	422, 423, 426, 427, 432, 433, 434, 435, 436, 444,
	448, 466, 467, 479, 492, 497, 425, 275, 474, 498,
	0, 341, 0, 0, 343, 259, 278, 289, 0, 487,
	445, 211, 413, 267, 200, 229, 214, 237, 252, 255,
	293, 352, 359, 388, 392, 272, 249, 227, 410, 224,
	429, 451, 452, 453, 455, 356, 244, 391, 0, 357,
	339, 457, 458, 285, 456, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 375, 0, 1465, 0,
	0, 0, 0, 0, 0, 248, 0, 0, 0, 0,
	330, 245, 0, 0, 389, 0, 196, 0, 431, 232,
	340, 337, 463, 260, 251, 247, 231, 286, 347, 387,
	450, 381, 0, 334, 0, 0, 441, 360, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 292, 230, 195, 372, 442, 264, 0,
	0, 0, 0, 187, 188, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 228, 315,
	324, 323, 304, 305, 307, 309, 314, 321, 327, 0,
	0, 0, 0, 0, 243, 290, 250, 242, 460, 0,
	0, 0, 0, 0, 0, 0, 213, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 361, 235, 0, 0, 0, 0, 494, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 298, 191, 209,
	0, 0, 371, 412, 418, 0, 0, 0, 233, 0,
	416, 385, 478, 217, 262, 409, 390, 414, 397, 265,
	0, 0, 415, 335, 465, 404, 475, 495, 496, 241,
	365, 485, 454, 491, 508, 210, 238, 379, 447, 481,
	438, 358, 461, 462, 297, 437, 271, 194, 333, 501,
	208, 424, 225, 215, 201, 449, 473, 222, 428, 0,
	0, 510, 203, 471, 446, 354, 294, 295, 202, 0,
	408, 246, 269, 236, 374, 468, 469, 234, 511, 212,
	490, 205, 0, 489, 367, 464, 472, 355, 345, 204,
	470, 353, 344, 300, 319, 320, 258, 280, 402, 338,
	403, 281, 363, 362, 364, 197, 482, 0, 198, 0,
	443, 483, 512, 218, 219, 220, 0, 257, 261, 268,
	270, 276, 277, 284, 331, 378, 401, 399, 405, 0,
	459, 476, 486, 493, 499, 500, 502, 503, 504, 505,
	506, 507, 366, 283, 439, 299, 336, 0, 0, 384,
	417, 223, 480, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 531, 346, 430, 477, 301, 313, 316,
	306, 325, 0, 326, 302, 303, 308, 310, 311, 312,
	317, 318, 322, 328, 0, 190, 206, 332, 0, 406,
	266, 509, 488, 484, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	199, 207, 216, 226, 239, 254, 256, 263, 274, 279,
	282, 287, 288, 291, 296, 342, 348, 349, 350, 351,
	368, 369, 370, 373, 376, 377, 380, 382, 383, 386,
	393, 394, 395, 396, 398, 400, 407, 411, 419, 420,
	421, 422, 423, 426, 427, 432, 433, 434, 435, 436,
	444, 448, 466, 467, 479, 492, 497, 425, 275, 474,
	498, 0, 341, 0, 0, 343, 259, 278, 289, 0,
	487, 445, 211, 413, 267, 200, 229, 214, 237, 252,
	255, 293, 352, 359, 388, 392, 272, 249, 227, 410,
	224, 429, 451, 452, 453, 455, 356, 244, 391, 0,
	357, 339, 457, 458, 285, 456, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 375, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 330, 245, 0, 0, 389, 0, 196, 0, 431,
	232, 340, 337, 463, 260, 251, 247, 231, 286, 347,
	387, 450, 381, 0, 334, 0, 0, 441, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 292, 230, 195, 372, 442, 264,
	0, 1442, 0, 0, 187, 188, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 228,
	315, 324, 323, 304, 305, 307, 309, 314, 321, 327,
	0, 0, 0, 0, 0, 243, 290, 250, 242, 460,
	0, 0, 0, 0, 0, 0, 0, 213, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 361, 235, 0, 0, 0, 0, 494, 0,
	0, 0, 0, 0, 0, 0, 329, 0, 298, 191,
	209, 0, 0, 371, 412, 418, 0, 0, 0, 233,
	0, 416, 385, 478, 217, 262, 409, 390, 414, 397,
	265, 0, 0, 415, 335, 465, 404, 475, 495, 496,
	241, 365, 485, 454, 491, 508, 210, 238, 379, 447,
	481, 438, 358, 461, 462, 297, 437, 271, 194, 333,
	501, 208, 424, 225, 215, 201, 449, 473, 222, 428,
	0, 0, 510, 203, 471, 446, 354, 294, 295, 202,
	0, 408, 246, 269, 236, 374, 468, 469, 234, 511,
	212, 490, 205, 0, 489, 367, 464, 472, 355, 345,
	204, 470, 353, 344, 300, 319, 320, 258, 280, 402,
	338, 403, 281, 363, 362, 364, 197, 482, 0, 198,
	0, 443, 483, 512, 218, 219, 220, 0, 257, 261,
	268, 270, 276, 277, 284, 331, 378, 401, 399, 405,
	0, 459, 476, 486, 493, 499, 500, 502, 503, 504,
	505, 506, 507, 366, 283, 439, 299, 336, 0, 0,
	384, 417, 223, 480, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 531, 346, 430, 477, 301, 313,
	316, 306, 325, 0, 326, 302, 303, 308, 310, 311,
	312, 317, 318, 322, 328, 0, 190, 206, 332, 0,
	406, 266, 509, 488, 484, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 199, 207, 216, 226, 239, 254, 256, 263, 274,
	279, 282, 287, 288, 291, 296, 342, 348, 349, 350,
	351, 368, 369, 370, 373, 376, 377, 380, 382, 383,
	386, 393, 394, 395, 396, 398, 400, 407, 411, 419,
	420, 421, 422, 423, 426, 427, 432, 433, 434, 435,
	436, 444, 448, 466, 467, 479, 492, 497, 425, 275,
	474, 498, 0, 341, 0, 0, 343, 259, 278, 289,
	0, 487, 445, 211, 413, 267, 200, 229, 214, 237,
	252, 255, 293, 352, 359, 388, 392, 272, 249, 227,
	410, 224, 429, 451, 452, 453, 455, 356, 244, 391,
	0, 357, 339, 457, 458, 285, 456, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 375, 0,
	0, 0, 0, 0, 0, 0, 1343, 248, 0, 0,
	0, 0, 330, 245, 0, 0, 389, 0, 196, 0,
	431, 232, 340, 337, 463, 260, 251, 247, 231, 286,
	347, 387, 450, 381, 0, 334, 0, 0, 441, 360,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 292, 230, 195, 372, 442,
	264, 0, 0, 0, 0, 187, 188, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	228, 315, 324, 323, 304, 305, 307, 309, 314, 321,
	327, 0, 0, 0, 0, 0, 243, 290, 250, 242,
	460, 0, 0, 0, 0, 0, 0, 0, 213, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 361, 235, 0, 0, 0, 0, 494,
	0, 0, 0, 0, 0, 0, 0, 329, 0, 298,
	191, 209, 0, 0, 371, 412, 418, 0, 0, 0,
	233, 0, 416, 385, 478, 217, 262, 409, 390, 414,
	397, 265, 0, 0, 415, 335, 465, 404, 475, 495,
	496, 241, 365, 485, 454, 491, 508, 210, 238, 379,
	447, 481, 438, 358, 461, 462, 297, 437, 271, 194,
	333, 501, 208, 424, 225, 215, 201, 449, 473, 222,
	428, 0, 0, 510, 203, 471, 446, 354, 294, 295,
	202, 0, 408, 246, 269, 236, 374, 468, 469, 234,
	511, 212, 490, 205, 0, 489, 367, 464, 472, 355,
	345, 204, 470, 353, 344, 300, 319, 320, 258, 280,
	402, 338, 403, 281, 363, 362, 364, 197, 482, 0,
	198, 0, 443, 483, 512, 218, 219, 220, 0, 257,
	261, 268, 270, 276, 277, 284, 331, 378, 401, 399,
	405, 0, 459, 476, 486, 493, 499, 500, 502, 503,
	504, 505, 506, 507, 366, 283, 439, 299, 336, 0,
	0, 384, 417, 223, 480, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 531, 346, 430, 477, 301,
	313, 316, 306, 325, 0, 326, 302, 303, 308, 310,
	311, 312, 317, 318, 322, 328, 0, 190, 206, 332,
	0, 406, 266, 509, 488, 484, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 199, 207, 216, 226, 239, 254, 256, 263,
	274, 279, 282, 287, 288, 291, 296, 342, 348, 349,
	350, 351, 368, 369, 370, 373, 376, 377, 380, 382,
	383, 386, 393, 394, 395, 396, 398, 400, 407, 411,
	419, 420, 421, 422, 423, 426, 427, 432, 433, 434,
	435, 436, 444, 448, 466, 467, 479, 492, 497, 425,
	275, 474, 498, 0, 341, 0, 0, 343, 259, 278,
	289, 0, 487, 445, 211, 413, 267, 200, 229, 214,
	237, 252, 255, 293, 352, 359, 388, 392, 272, 249,
	227, 410, 224, 429, 451, 452, 453, 455, 356, 244,
	391, 0, 357, 339, 457, 458, 285, 456, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 375,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 330, 245, 0, 0, 389, 0, 196,
	0, 431, 232, 340, 337, 463, 260, 251, 247, 231,
	286, 347, 387, 450, 381, 0, 334, 0, 0, 441,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 292, 230, 195, 372,
	442, 264, 0, 0, 0, 0, 187, 188, 189, 0,
	1144, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 228, 315, 324, 323, 304, 305, 307, 309, 314,
	321, 327, 0, 0, 0, 0, 0, 243, 290, 250,
	242, 460, 0, 0, 0, 0, 0, 0, 0, 213,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 361, 235, 0, 0, 0, 0,
	494, 0, 0, 0, 0, 0, 0, 0, 329, 0,
	298, 191, 209, 0, 0, 371, 412, 418, 0, 0,
	0, 233, 0, 416, 385, 478, 217, 262, 409, 390,
	414, 397, 265, 0, 0, 415, 335, 465, 404, 475,
	495, 496, 241, 365, 485, 454, 491, 508, 210, 238,
	379, 447, 481, 438, 358, 461, 462, 297, 437, 271,
	194, 333, 501, 208, 424, 225, 215, 201, 449, 473,
	222, 428, 0, 0, 510, 203, 471, 446, 354, 294,
	295, 202, 0, 408, 246, 269, 236, 374, 468, 469,
	234, 511, 212, 490, 205, 0, 489, 367, 464, 472,
	355, 345, 204, 470, 353, 344, 300, 319, 320, 258,
	280, 402, 338, 403, 281, 363, 362, 364, 197, 482,
	0, 198, 0, 443, 483, 512, 218, 219, 220, 0,
	257, 261, 268, 270, 276, 277, 284, 331, 378, 401,
	399, 405, 0, 459, 476, 486, 493, 499, 500, 502,
	503, 504, 505, 506, 507, 366, 283, 439, 299, 336,
	0, 0, 384, 417, 223, 480, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 531, 346, 430, 477,
	301, 313, 316, 306, 325, 0, 326, 302, 303, 308,
	310, 311, 312, 317, 318, 322, 328, 0, 190, 206,
	332, 0, 406, 266, 509, 488, 484, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 199, 207, 216, 226, 239, 254, 256,
	263, 274, 279, 282, 287, 288, 291, 296, 342, 348,
	349, 350, 351, 368, 369, 370, 373, 376, 377, 380,
	382, 383, 386, 393, 394, 395, 396, 398, 400, 407,
	411, 419, 420, 421, 422, 423, 426, 427, 432, 433,
	434, 435, 436, 444, 448, 466, 467, 479, 492, 497,
	425, 275, 474, 498, 0, 341, 0, 0, 343, 259,
	278, 289, 0, 487, 445, 211, 413, 267, 200, 229,
	214, 237, 252, 255, 293, 352, 359, 388, 392, 272,
	249, 227, 410, 224, 429, 451, 452, 453, 455, 356,
	244, 391, 0, 357, 339, 457, 458, 285, 456, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	375, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	0, 0, 0, 0, 330, 245, 0, 0, 389, 0,
	196, 0, 431, 232, 340, 337, 463, 260, 251, 247,
	231, 286, 347, 387, 450, 381, 0, 334, 0, 0,
	441, 360, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 292, 230, 195,
	372, 442, 264, 0, 0, 0, 0, 187, 188, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	221, 0, 228, 315, 324, 323, 304, 305, 307, 309,
	314, 321, 327, 0, 0, 0, 0, 0, 243, 290,
	250, 242, 460, 0, 0, 0, 0, 0, 0, 0,
	213, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 361, 235, 0, 0, 0,
	0, 494, 0, 0, 0, 0, 0, 0, 0, 329,
	0, 298, 191, 209, 0, 0, 371, 412, 418, 0,
	0, 0, 233, 0, 416, 385, 478, 217, 262, 409,
	390, 414, 397, 265, 0, 0, 415, 335, 465, 404,
	475, 495, 496, 241, 365, 485, 454, 491, 508, 210,
	238, 379, 447, 481, 438, 358, 461, 462, 297, 437,
	271, 194, 333, 501, 208, 424, 225, 215, 201, 449,
	473, 222, 428, 0, 0, 510, 203, 471, 446, 354,
	294, 295, 202, 0, 408, 246, 269, 236, 374, 468,
	469, 234, 511, 212, 490, 205, 0, 489, 367, 464,
	472, 355, 345, 204, 470, 353, 344, 300, 319, 320,
	258, 280, 402, 338, 403, 281, 363, 362, 364, 197,
	482, 0, 198, 0, 443, 483, 512, 218, 219, 220,
	0, 257, 261, 268, 270, 276, 277, 284, 331, 378,
	401, 399, 405, 0, 459, 476, 486, 493, 499, 500,
	502, 503, 504, 505, 506, 507, 366, 283, 439, 299,
	336, 0, 0, 384, 417, 223, 480, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 531, 346, 430,
	477, 301, 313, 316, 306, 325, 0, 326, 302, 303,
	308, 310, 311, 312, 317, 318, 322, 328, 0, 190,
	206, 332, 0, 406, 266, 509, 488, 484, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 764, 0,
	0, 0, 192, 193, 199, 207, 216, 226, 239, 254,
	256, 263, 274, 279, 282, 287, 288, 291, 296, 342,
	348, 349, 350, 351, 368, 369, 370, 373, 376, 377,
	380, 382, 383, 386, 393, 394, 395, 396, 398, 400,
	407, 411, 419, 420, 421, 422, 423, 426, 427, 432,
	433, 434, 435, 436, 444, 448, 466, 467, 479, 492,
	497, 425, 275, 474, 498, 0, 341, 0, 0, 343,
	259, 278, 289, 0, 487, 445, 211, 413, 267, 200,
	229, 214, 237, 252, 255, 293, 352, 359, 388, 392,
	272, 249, 227, 410, 224, 429, 451, 452, 453, 455,
	356, 244, 391, 0, 357, 339, 457, 458, 285, 456,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 0, 0, 330, 245, 0, 0, 389,
	0, 196, 0, 431, 232, 340, 337, 463, 260, 251,
	247, 231, 286, 347, 387, 450, 381, 0, 334, 0,
	0, 441, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 292, 230,
	195, 372, 442, 264, 0, 0, 0, 0, 187, 188,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 228, 315, 324, 323, 304, 305, 307,
	309, 314, 321, 327, 0, 0, 0, 0, 0, 243,
	290, 250, 242, 460, 0, 0, 0, 0, 0, 0,
	0, 213, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 587, 0, 273, 0, 361, 235, 0, 0,
	0, 0, 494, 0, 0, 0, 0, 0, 0, 0,
	329, 0, 298, 191, 209, 0, 0, 371, 412, 418,
	0, 0, 0, 233, 0, 416, 385, 478, 217, 262,
	409, 390, 414, 397, 265, 0, 0, 415, 335, 465,
	404, 475, 495, 496, 241, 365, 485, 454, 491, 508,
	210, 238, 379, 447, 481, 438, 358, 461, 462, 297,
	437, 271, 194, 333, 501, 208, 424, 225, 215, 201,
	449, 473, 222, 428, 0, 0, 510, 203, 471, 446,
	354, 294, 295, 202, 0, 408, 246, 269, 236, 374,
	468, 469, 234, 511, 212, 490, 205, 0, 489, 367,
	464, 472, 355, 345, 204, 470, 353, 344, 300, 319,
	320, 258, 280, 402, 338, 403, 281, 363, 362, 364,
	197, 482, 0, 198, 0, 443, 483, 512, 218, 219,
	220, 0, 257, 261, 268, 270, 276, 277, 284, 331,
	378, 401, 399, 405, 0, 459, 476, 486, 493, 499,
	500, 502, 503, 504, 505, 506, 507, 366, 283, 439,
	299, 336, 0, 0, 384, 417, 223, 480, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 531, 346,
	430, 477, 301, 313, 316, 306, 325, 0, 326, 302,
	303, 308, 310, 311, 312, 317, 318, 322, 328, 0,
	190, 206, 332, 0, 406, 266, 509, 488, 484, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 199, 207, 216, 226, 239,
	254, 256, 263, 274, 279, 282, 287, 288, 291, 296,
	342, 348, 349, 350, 351, 368, 369, 370, 373, 376,
	377, 380, 382, 383, 386, 393, 394, 395, 396, 398,
	400, 407, 411, 419, 420, 421, 422, 423, 426, 427,
	432, 433, 434, 435, 436, 444, 448, 466, 467, 479,
	492, 497, 425, 586, 474, 498, 0, 341, 0, 0,
	343, 259, 278, 289, 0, 487, 445, 211, 413, 267,
	200, 229, 214, 237, 252, 255, 293, 352, 359, 388,
	392, 272, 249, 227, 410, 224, 429, 451, 452, 453,
	455, 356, 244, 391, 0, 357, 339, 457, 458, 285,
	456, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 0, 0, 330, 245, 0, 0,
	389, 0, 196, 0, 431, 232, 340, 337, 463, 260,
	251, 247, 231, 286, 347, 387, 450, 381, 0, 334,
	0, 0, 441, 360, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 292,
	230, 195, 372, 442, 264, 0, 0, 0, 0, 187,
	188, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 228, 315, 324, 323, 304, 305,
	307, 309, 314, 321, 327, 0, 0, 0, 0, 0,
	243, 290, 250, 242, 460, 0, 0, 0, 0, 0,
	0, 0, 213, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 361, 235, 0,
	0, 534, 0, 494, 0, 0, 0, 0, 0, 0,
	0, 329, 0, 298, 191, 209, 0, 0, 371, 412,
	418, 0, 0, 0, 233, 0, 416, 385, 478, 217,
	262, 409, 390, 414, 397, 265, 0, 0, 415, 335,
	465, 404, 475, 495, 496, 241, 365, 485, 454, 491,
	508, 210, 238, 379, 447, 481, 438, 358, 461, 462,
	297, 437, 271, 194, 333, 501, 208, 424, 225, 215,
	201, 449, 473, 222, 428, 0, 0, 510, 203, 471,
	446, 354, 294, 295, 202, 0, 408, 246, 269, 236,
	374, 468, 469, 234, 511, 212, 490, 205, 0, 489,
	367, 464, 472, 355, 345, 204, 470, 353, 344, 300,
	319, 320, 258, 280, 402, 338, 403, 281, 363, 362,
	364, 197, 482, 0, 198, 0, 443, 483, 512, 218,
	219, 220, 0, 257, 261, 268, 270, 276, 277, 284,
	331, 378, 401, 399, 405, 0, 459, 476, 486, 493,
	499, 500, 502, 503, 504, 505, 506, 507, 366, 283,
	439, 299, 336, 0, 0, 384, 417, 223, 480, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 531,
	346, 430, 477, 301, 313, 316, 306, 325, 0, 326,
	302, 303, 308, 310, 311, 312, 317, 318, 322, 328,
	0, 190, 206, 332, 0, 406, 266, 509, 488, 484,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 199, 207, 216, 226,
	239, 254, 256, 263, 274, 279, 282, 287, 288, 291,
	296, 342, 348, 349, 350, 351, 368, 369, 370, 373,
	376, 377, 380, 382, 383, 386, 393, 394, 395, 396,
	398, 400, 407, 411, 419, 420, 421, 422, 423, 426,
	427, 432, 433, 434, 435, 436, 444, 448, 466, 467,
	479, 492, 497, 425, 275, 474, 498, 0, 341, 0,
	0, 343, 259, 278, 289, 0, 487, 445, 211, 413,
	267, 200, 229, 214, 237, 252, 255, 293, 352, 359,
	388, 392, 272, 249, 227, 410, 224, 429, 451, 452,
	453, 455, 356, 244, 391, 0, 357, 339, 457, 458,
	285, 456, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 375, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 330, 245, 0,
	0, 389, 0, 196, 0, 431, 232, 340, 337, 463,
	260, 251, 247, 231, 286, 347, 387, 450, 381, 0,
	334, 0, 0, 441, 360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	292, 230, 195, 372, 442, 264, 0, 0, 0, 0,
	187, 188, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 228, 315, 324, 323, 304,
	305, 307, 309, 314, 321, 327, 0, 0, 0, 0,
	0, 243, 290, 250, 242, 460, 0, 0, 0, 0,
	0, 0, 0, 213, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 361, 235,
	0, 0, 0, 0, 494, 0, 0, 0, 0, 0,
	0, 0, 329, 0, 298, 191, 209, 0, 0, 371,
	412, 418, 0, 0, 0, 233, 0, 416, 385, 478,
	217, 262, 409, 390, 414, 397, 265, 0, 0, 415,
	335, 465, 404, 475, 495, 496, 241, 365, 485, 454,
	491, 508, 210, 238, 379, 447, 481, 438, 358, 461,
	462, 297, 437, 271, 194, 333, 501, 208, 424, 225,
	215, 201, 449, 473, 222, 428, 0, 0, 510, 203,
	471, 446, 354, 294, 295, 202, 0, 408, 246, 269,
	236, 374, 468, 469, 234, 511, 212, 490, 205, 0,
	489, 367, 464, 472, 355, 345, 204, 470, 353, 344,
	300, 319, 320, 258, 280, 402, 338, 403, 281, 363,
	362, 364, 197, 482, 0, 198, 0, 443, 483, 512,
	218, 219, 220, 0, 257, 261, 268, 270, 276, 277,
	284, 331, 378, 401, 399, 405, 0, 459, 476, 486,
	493, 499, 500, 502, 503, 504, 505, 506, 507, 366,
	283, 439, 299, 336, 0, 0, 384, 417, 223, 480,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	531, 346, 430, 477, 301, 313, 316, 306, 325, 0,
	326, 302, 303, 308, 310, 311, 312, 317, 318, 322,
	328, 0, 190, 206, 332, 0, 406, 266, 509, 488,
	484, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 199, 207, 216,
	226, 239, 254, 256, 263, 274, 279, 282, 287, 288,
	291, 296, 342, 348, 349, 350, 351, 2888, 369, 370,
	373, 376, 377, 380, 382, 383, 386, 393, 394, 395,
	396, 398, 400, 407, 411, 419, 420, 421, 422, 423,
	426, 427, 432, 433, 434, 435, 436, 444, 448, 466,
	467, 479, 492, 497, 425, 275, 474, 498, 0, 341,
	0, 0, 343, 259, 278, 289, 0, 487, 445, 211,
	413, 267, 200, 229, 214, 237, 252, 255, 293, 352,
	359, 388, 392, 272, 249, 227, 410, 224, 429, 451,
	452, 453, 455, 356, 244, 391, 0, 357, 339, 457,
	458, 285, 456, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 375, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 0, 0, 0, 0, 330, 245,
	0, 0, 389, 0, 196, 0, 431, 232, 340, 337,
	463, 260, 251, 247, 231, 286, 347, 387, 450, 381,
	0, 334, 0, 0, 441, 360, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 292, 230, 195, 372, 442, 264, 0, 0, 0,
	0, 187, 188, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 228, 315, 324, 323,
	304, 305, 307, 309, 314, 321, 327, 0, 0, 0,
	0, 0, 243, 290, 250, 242, 460, 0, 0, 0,
	0, 0, 0, 0, 213, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 361,
	235, 0, 0, 0, 0, 494, 0, 0, 0, 0,
	0, 0, 0, 329, 0, 298, 191, 209, 0, 0,
	371, 412, 418, 0, 0, 0, 233, 0, 416, 385,
	478, 217, 262, 409, 390, 414, 397, 265, 0, 0,
	415, 335, 465, 404, 475, 495, 496, 241, 365, 485,
	454, 491, 508, 210, 238, 379, 447, 481, 438, 358,
	461, 462, 297, 437, 271, 194, 333, 501, 208, 424,
	225, 215, 201, 449, 473, 222, 428, 0, 0, 510,
	203, 471, 446, 354, 294, 295, 202, 0, 408, 246,
	269, 236, 374, 468, 469, 234, 511, 212, 490, 205,
	0, 489, 367, 464, 472, 355, 345, 204, 470, 353,
	344, 300, 319, 320, 258, 280, 402, 338, 403, 281,
	363, 362, 364, 197, 482, 0, 198, 0, 443, 483,
	512, 218, 219, 220, 0, 257, 261, 268, 270, 276,
	277, 284, 331, 378, 401, 399, 405, 0, 459, 476,
	486, 493, 499, 500, 502, 503, 504, 505, 506, 507,
	366, 283, 439, 299, 336, 0, 0, 384, 417, 223,
	480, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 531, 346, 430, 477, 301, 313, 316, 306, 325,
	0, 326, 302, 303, 308, 310, 311, 312, 317, 318,
	322, 328, 0, 190, 206, 332, 0, 406, 266, 509,
	488, 484, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 199, 207,
	216, 226, 239, 254, 256, 263, 274, 279, 282, 287,
	288, 291, 296, 342, 348, 349, 350, 351, 368, 369,
	370, 373, 376, 377, 380, 382, 383, 386, 393, 394,
	395, 396, 398, 400, 407, 411, 419, 420, 421, 422,
	423, 426, 427, 432, 433, 434, 435, 436, 444, 448,
	466, 467, 479, 492, 497, 425, 275, 474, 498, 0,
	341, 0, 0, 343, 259, 278, 289, 0, 487, 445,
	211, 413, 267, 200, 229, 214, 237, 252, 255, 293,
	352, 359, 388, 392, 272, 249, 227, 410, 224, 429,
	451, 452, 453, 455, 356, 244, 391, 0, 357, 339,
	457, 458, 285, 456, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 375, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 330,
	245, 0, 0, 389, 0, 196, 0, 431, 232, 340,
	337, 463, 260, 251, 247, 231, 286, 347, 387, 450,
	381, 0, 334, 0, 0, 441, 360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 292, 230, 195, 372, 442, 264, 0, 0,
	0, 0, 187, 2538, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 228, 315, 324,
	323, 304, 305, 307, 309, 314, 321, 327, 0, 0,
	0, 0, 0, 243, 290, 250, 242, 460, 0, 0,
	0, 0, 0, 0, 0, 213, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	361, 235, 0, 0, 0, 0, 494, 0, 0, 0,
	0, 0, 0, 0, 329, 0, 298, 191, 209, 0,
	0, 371, 412, 418, 0, 0, 0, 233, 0, 416,
	385, 478, 217, 262, 409, 390, 414, 397, 265, 0,
	0, 415, 335, 465, 404, 475, 495, 496, 241, 365,
	485, 454, 491, 508, 210, 238, 379, 447, 481, 438,
	358, 461, 462, 297, 437, 271, 194, 333, 501, 208,
	424, 225, 215, 201, 449, 473, 222, 428, 0, 0,
	510, 203, 471, 446, 354, 294, 295, 202, 0, 408,
	246, 269, 236, 374, 468, 469, 234, 511, 212, 490,
	205, 0, 489, 367, 464, 472, 355, 345, 204, 470,
	353, 344, 300, 319, 320, 258, 280, 402, 338, 403,
	281, 363, 362, 364, 197, 482, 0, 198, 0, 443,
	483, 512, 218, 219, 220, 0, 257, 261, 268, 270,
	276, 277, 284, 331, 378, 401, 399, 405, 0, 459,
	476, 486, 493, 499, 500, 502, 503, 504, 505, 506,
	507, 366, 283, 439, 299, 336, 0, 0, 384, 417,
	223, 480, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 531, 346, 430, 477, 301, 313, 316, 306,
	325, 0, 326, 302, 303, 308, 310, 311, 312, 317,
	318, 322, 328, 0, 190, 206, 332, 0, 406, 266,
	509, 488, 484, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 199,
	207, 216, 226, 239, 254, 256, 263, 274, 279, 282,
	287, 288, 291, 296, 342, 348, 349, 350, 351, 368,
	369, 370, 373, 376, 377, 380, 382, 383, 386, 393,
	394, 395, 396, 398, 400, 407, 411, 419, 420, 421,
	422, 423, 426, 427, 432, 433, 434, 435, 436, 444,
	448, 466, 467, 479, 492, 497, 425, 275, 474, 498,
	0, 341, 0, 0, 343, 259, 278, 289, 0, 487,
	445, 211, 413, 267, 200, 229, 214, 237, 252, 255,
	293, 352, 359, 388, 392, 272, 249, 227, 410, 224,
	429, 451, 452, 453, 455, 356, 244, 391, 0, 357,
	339, 457, 458, 285, 456, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 375, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 0, 0, 0, 0,
	330, 245, 0, 0, 389, 0, 196, 0, 431, 232,
	340, 337, 463, 260, 251, 247, 231, 286, 347, 387,
	450, 381, 0, 334, 0, 0, 441, 360, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 292, 230, 195, 372, 442, 264, 0,
	0, 0, 0, 187, 2077, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 228, 315,
	324, 323, 304, 305, 307, 309, 314, 321, 327, 0,
	0, 0, 0, 0, 243, 290, 250, 242, 460, 0,
	0, 0, 0, 0, 0, 0, 213, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 361, 235, 0, 0, 0, 0, 494, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 298, 191, 209,
	0, 0, 371, 412, 418, 0, 0, 0, 233, 0,
	416, 385, 478, 217, 262, 409, 390, 414, 397, 265,
	0, 0, 415, 335, 465, 404, 475, 495, 496, 241,
	365, 485, 454, 491, 508, 210, 238, 379, 447, 481,
	438, 358, 461, 462, 297, 437, 271, 194, 333, 501,
	208, 424, 225, 215, 201, 449, 473, 222, 428, 0,
	0, 510, 203, 471, 446, 354, 294, 295, 202, 0,
	408, 246, 269, 236, 374, 468, 469, 234, 511, 212,
	490, 205, 0, 489, 367, 464, 472, 355, 345, 204,
	470, 353, 344, 300, 319, 320, 258, 280, 402, 338,
	403, 281, 363, 362, 364, 197, 482, 0, 198, 0,
	443, 483, 512, 218, 219, 220, 0, 257, 261, 268,
	270, 276, 277, 284, 331, 378, 401, 399, 405, 0,
	459, 476, 486, 493, 499, 500, 502, 503, 504, 505,
	506, 507, 366, 283, 439, 299, 336, 0, 0, 384,
	417, 223, 480, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 531, 346, 430, 477, 301, 313, 316,
	306, 325, 0, 326, 302, 303, 308, 310, 311, 312,
	317, 318, 322, 328, 0, 190, 206, 332, 0, 406,
	266, 509, 488, 484, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	199, 207, 216, 226, 239, 254, 256, 263, 274, 279,
	282, 287, 288, 291, 296, 342, 348, 349, 350, 351,
	368, 369, 370, 373, 376, 377, 380, 382, 383, 386,
	393, 394, 395, 396, 398, 400, 407, 411, 419, 420,
	421, 422, 423, 426, 427, 432, 433, 434, 435, 436,
	444, 448, 466, 467, 479, 492, 497, 425, 275, 474,
	498, 0, 341, 0, 0, 343, 259, 278, 289, 0,
	487, 445, 211, 413, 267, 200, 229, 214, 237, 252,
	255, 293, 352, 359, 388, 392, 272, 249, 227, 410,
	224, 429, 451, 452, 453, 455, 356, 244, 391, 0,
	0, 339, 457, 458, 285,
}

var yyPact = [...]int{
	3859, -1000, -411, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1948, 1994, -1000, -1000,
	-1000, -1000, 2103, -1000, 751, 1692, -1000, 1969, 323, -1000,
	40253, 474, -1000, 39071, 473, 247, 40253, -1000, 147, -1000,
	128, 40253, 133, 38480, -1000, -1000, -304, 17194, 1884, 32,
	26, 40253, -1000, -1000, -1000, -1000, 2071, 1604, -1000, 320,
	-1000, -1000, -1000, -1000, -1000, -1000, 37889, -1000, -1000, -1000,
	1977, 1972, 2113, 669, 1892, -1000, 2027, 1604, -1000, 17194,
	2057, 2012, 16603, -1000, 16603, 381, -1000, -1000, 12456, -1000,
	-1000, 23114, 40253, 28433, 301, -1000, 1969, -1000, -1000, 338,
	-1000, 290, 1559, -1000, 1529, -1000, 641, 505, 309, 411,
	408, 307, 300, 299, 296, 295, 294, 293, 292, 328,
	-1000, 684, 684, -150, -171, 2928, 368, 368, 368, 433,
	1921, 1919, -1000, 658, -1000, 684, 684, 684, 336, 684,
	684, 684, 684, 251, 250, 684, 684, 684, 684, 684,
	684, 684, 684, 684, 684, 684, 684, 684, 684, 684,
	684, 684, 282, 1969, 234, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 40253, 186, 40253, -1000, 561, 40253, 834, 834,
	39, 834, 834, 834, 834, 150, 604, 5, -1000, 146,
	204, 98, 229, 794, 151, -1000, -1000, 202, 794, 1227,
	672, 104, -1000, 834, 834, -1000, 10072, 139, 10072, 10072,
	-1000, 1939, -1000, -1000, -1000, -1000, 1232, -1000, 417, -1000,
	-1000, -1000, -1000, 40253, 37298, 340, 724, -1000, -1000, -1000,
	80, -1000, -1000, 1348, 1089, 17194, 1044, -1000, 1224, 610,
	-1000, -1000, -1000, -1000, -1000, 496, 17785, 17785, 17785, 17785,
	-1000, -1000, 1583, 1583, 1583, 1583, 17785, 1583, 17785, 1583,
	1583, 1583, 1583, 17194, 1583, 1583, 1583, -1000, 1583, 1583,
	1583, 1583, 1583, 1583, 1583, 1583, 1583, 1583, 1583, 1583,
	1583, 1583, 1583, 1583, 1583, 1583, 1583, 1583, 1583, 1583,
	1583, 1583, 1583, 1583, 1583, 1583, 1583, 1583, 1583, 1583,
	1583, 1583, 1583, 1583, 1583, 1583, 1583, 1583, 557, 1583,
	1583, 1583, 1583, 1583, -1000, -1000, -1000, -1000, 1583, 1583,
	1583, 1583, 1583, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 20745, -1000, 14830, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 40253, -1000, 1583, 157, 40253, 40253,
	314, 2027, 1604, -1000, 2071, 2042, 320, -1000, 2175, 1490,
	1398, 1229, 1604, 1499, 40253, -1000, 1588, -1000, -1000, -1000,
	1830, 1176, 1226, -1000, -1000, -1000, -1000, 1444, 17194, -1000,
	-1000, 2095, -1000, 20154, 541, 849, 2089, 36707, -1000, 381,
	381, 1522, 11860, -46, -1000, -1000, -1000, 722, 26069, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1939, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1642, 40253, -1000, -1000, 4230, 1196, -1000, 1691, -1000,
	1634, -1000, 1655, 17194, 1724, 472, 1196, 454, 450, 449,
	-1000, -86, -1000, -1000, -1000, -1000, -1000, 684, 684, -1000,
	326, 2055, 323, 5663, -1000, -1000, -1000, 36116, 1684, 1196,
	-1000, 1681, -1000, 800, 488, 539, 539, 1196, -1000, -1000,
	40253, 1196, 797, 787, 40253, 40253, -1000, 35525, -1000, 34934,
	34343, 1051, 40253, 33752, 33161, 32570, 31979, 31388, -1000, 1761,
	-1000, 1717, -1000, -1000, -1000, 40253, 40253, 40253, 322, -1000,
	-1000, 40253, 1196, -1000, -1000, 1036, 1033, 1014, 684, 684,
	1013, 1219, 1218, 1215, 684, 684, 1012, 1208, 27251, 1207,
	212, 1011, 1006, 1001, 1032, 1201, 176, 1200, 1005, 996,
	1000, 40253, 1680, 40253, -1000, 197, 635, 358, 710, 1969,
	1880, 1520, 404, 470, 1196, 375, 375, 40253, -1000, 10668,
	-1000, -1000, 1187, 17194, -1000, 807, 794, 794, -1000, -1000,
	-1000, -1000, -1000, -1000, 834, 40253, 807, -1000, -1000, -1000,
	794, 834, 40253, 834, 834, 834, 834, 794, 794, 794,
	834, 40253, 40253, 40253, 40253, 40253, 40253, 40253, 40253, 40253,
	10072, 672, 834, -309, -1000, 1186, -1000, 1794, -1000, -1000,
	-1000, -1000, -1000, -1000, 10072, 10072, -1000, -1000, -1000, -1000,
	131, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-84, 1510, 30797, -1000, -317, -318, -325, -330, -1000, -1000,
	-1000, -334, -344, -1000, -1000, -1000, 17194, 17194, 17194, 17194,
	-208, -1000, 884, 17785, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 922, 687, 17785, 17785, 17785, 17785, 17785, 17785, 17785,
	17785, 17785, 17785, 17785, 17785, 17785, 17785, 17785, 778, 6949,
	6949, 610, 610, 610, 610, -1000, 16603, 17194, 17194, 610,
	-1000, 1196, 30206, 16603, 16603, 17194, 1917, 738, 1089, 40253,
	-1000, 1229, -1000, -1000, -1000, 1136, -1000, 40253, 40253, 74,
	17194, 17194, 17194, 17194, 17194, 17194, 13643, 17194, 17194, 17194,
	17194, 17194, 17194, 17194, 17194, 17194, 17194, 17194, 17194, 17194,
	17194, 17194, 17194, 17194, 17194, 17194, 17194, 17194, 17194, 17194,
	17194, 17194, 17194, 13052, 10668, 16603, 16603, 16603, 16603, 16603,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 533, 1415, 1317, 1465, -1000, 1508, -1000, -152,
	22523, 17194, 1183, 2087, 1720, 40253, -1000, -1000, -1000, 2027,
	-1000, 2027, 1415, 1955, 1838, 16603, -1000, -1000, 1955, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1306, -1000, 40253,
	1499, 2005, 40253, 1824, 1181, 343, -1000, 17194, 17194, 1497,
	-1000, 1301, 40253, -1000, -208, -1000, 29615, -1000, -1000, 9476,
	-1000, 40253, 287, 40253, -1000, 21932, 29024, 11264, -46, -1000,
	11264, 1427, -1000, -21, -33, 14234, 549, -1000, -1000, -1000,
	2928, 18967, 1329, 549, 73, -1000, -1000, -1000, 1655, -1000,
	1655, 1655, 1655, 1655, 343, 343, 343, 343, -1000, -1000,
	-1000, -1000, -1000, 1679, 1678, -1000, 1655, 1655, 1655, 1655,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1670, 1670, 1670,
	1657, 1657, 361, -1000, 17194, 281, 28433, 1988, 990, 1390,
	197, 377, 1683, 1196, 1196, 1196, 377, -1000, 1311, 1242,
	-1000, -400, 1480, -1000, -1000, 2052, -1000, -1000, 686, 820,
	817, 602, 40253, 165, 284, -1000, 350, -1000, 28433, 1196,
	783, 539, 1196, -1000, 1196, -1000, -1000, -1000, -1000, -1000,
	1196, 1475, -1000, 1472, 873, 815, 870, 813, 1475, -1000,
	-1000, -124, 1475, -1000, 1475, -1000, 1475, -1000, 1475, -1000,
	1475, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 714,
	40253, 165, 778, -1000, 391, -1000, -1000, -1000, 778, 778,
	-1000, -1000, -1000, -1000, 1167, 1165, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -390, 40253, -1000, 180, 709,
	257, 325, 231, 40253, 143, 2015, 174, 249, 40253, 40253,
	375, 1785, 40253, 1991, 40253, -1000, -1000, -1000, -1000, -1000,
	1089, 40253, -1000, -1000, 834, 834, -1000, -1000, 40253, 834,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 834, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 40253, -1000, -1000, -1000, -1000, 40253,
	-1000, -1000, -1000, -1000, -1000, 96, -23, 310, -1000, -1000,
	-1000, -1000, -1000, 2023, -1000, 1089, 781, 747, -1000, 1583,
	-1000, -1000, 845, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	922, 17785, 17785, 17785, 893, 424, 1467, 880, 999, 1017,
	1017, 818, 818, 627, 627, 627, 627, 627, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1151, -1000, 1590, -1000,
	1073, 1332, 1229, -1000, 1590, 1590, 1273, 16603, -1000, -1000,
	730, -1000, 17194, 1229, -1000, -1000, 1229, 1229, 1470, 1456,
	2085, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 954, 1390, 1390, 1390, 1390, 1390, 17194, 1217,
	-1000, -1000, -1000, 1798, 1771, 1229, 1348, 1229, 1443, -1000,
	1743, 1390, 1737, 1729, 1721, 1479, 1715, 1709, 1699, 1390,
	1390, 1390, 1128, 1687, 1682, 1676, 1668, 1653, 1646, 1615,
	1589, 1580, 1390, 1229, 16603, 16603, 1432, 1583, 532, -1000,
	1590, 1229, 1229, 1590, 1590, 10668, 1229, -1000, 40253, -1000,
	-299, -1000, -43, 617, 1583, -1000, 27251, 1229, -1000, 6739,
	-1000, 41435, -1000, -1000, -1000, -1000, -1000, 25478, 1534, 1955,
	-1000, -1000, 1583, 1613, -1000, -1000, 343, 48, 24887, -1000,
	-1000, 1089, 1089, 17194, -1000, -1000, -1000, -1000, -1000, -1000,
	525, 2075, 317, 1583, -1000, 1382, 1918, -1000, -1000, -1000,
	2004, 19563, -1000, 1583, 1583, 40253, 1637, 1342, -1000, 524,
	-1000, 1427, -46, -27, -1000, -1000, -1000, -1000, 1089, -1000,
	1225, 291, 2792, -1000, 362, -1000, -1000, -1000, -1000, 1899,
	54, -1000, -1000, -1000, 343, 343, -1000, -1000, -1000, -1000,
	-1000, -1000, 1149, 1149, -1000, -1000, -1000, -1000, -1000, 988,
	-1000, -1000, -1000, 975, -1000, -1000, 1567, 1753, 281, -1000,
	-1000, 684, 1148, -1000, -1000, 1901, 684, 684, 40253, -1000,
	-1000, 1271, 1988, 180, 40253, 745, 1784, -1000, 1683, 1683,
	1683, 40253, -1000, -1000, -1000, -1000, -392, 55, 324, -1000,
	-1000, -1000, 2991, 40253, 1597, -1000, 162, -1000, 1266, -1000,
	40253, -1000, 1595, 1666, 1196, 1196, -1000, -1000, -1000, 40253,
	1583, -1000, -1000, -1000, -1000, 467, 1961, 1949, 165, 162,
	549, 1196, -1000, -1000, -1000, -1000, -1000, -393, 1592, 447,
	167, 267, 40253, 40253, 40253, 40253, 40253, 543, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 240, 389, -1000, 40253,
	40253, 581, -1000, -1000, -1000, 794, -1000, -1000, 794, -1000,
	-1000, -1000, -1000, -1000, 1934, 40253, -26, -366, -1000, -357,
	17194, -1000, -1000, -1000, -1000, 810, 421, 1467, 17785, 17785,
	16603, -119, 399, 399, 778, -1000, -1000, -1000, 17194, 17194,
	1625, 688, -1000, 17194, 935, -1000, -1000, -1000, 17194, 17194,
	17194, 1229, 248, -1000, -1000, -1000, -1000, -1000, 2084, -1000,
	17194, 17194, 17194, -1000, -1000, 17194, 17194, -1000, 17194, 17194,
	18376, 1229, 18376, 17194, 17194, 18376, -1000, -1000, -1000, -1000,
	18376, 17194, 17194, 17194, 17194, 17194, 17194, 17194, 17194, 17194,
	-1000, -1000, 1590, 1590, 16603, 10668, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 617, -1000, 539, 539,
	539, 40253, -1000, -1000, -1000, -1000, -1000, -1000, 1425, 2029,
	-1000, 1844, 1843, 2083, 2075, -1000, 21932, 1955, -1000, -1000,
	40253, -292, -1000, 1877, 1870, -1000, -1000, -1000, -1000, 8880,
	2027, 17194, 1773, 40253, 1583, -1000, 21341, 40253, 40253, 21932,
	21932, 21932, 21932, 21932, -1000, 1811, 1803, -1000, 1805, 1797,
	1827, 40253, -1000, 1573, 1229, 2042, 19563, 320, 17194, 23705,
	1284, 21932, -1000, -1000, 21932, 40253, 8284, -1000, -1000, -28,
	-44, -1000, -1000, -1000, -1000, 2928, -1000, -1000, 744, 2003,
	1889, -1000, -1000, -1000, -1000, 1555, -1000, 1553, 1410, 1551,
	134, -1000, 1716, 1924, 684, 684, -1000, 974, -1000, 1196,
	1140, 1130, -1000, -1000, -1000, 437, -1000, 1987, 40253, 1767,
	1765, 1762, -1000, -406, 956, 1664, 1702, 17194, 1660, 2048,
	1360, 40253, -1000, -1000, 40253, -1000, 148, -1000, 281, 40253,
	-1000, -1000, -1000, 284, 40253, -1000, 6546, 162, -1000, -1000,
	-1000, -1000, -1000, -1000, 40253, 194, -1000, 1658, 1206, -1000,
	-1000, 1645, -1000, -1000, -1000, -1000, 160, 255, -1000, 40253,
	518, 1753, 40253, -1000, -1000, -1000, 834, 834, -1000, -1000,
	1920, -1000, 1196, 1390, 17785, 17785, -1000, 610, -1000, 1583,
	1229, 1655, 1655, -1000, 1655, 1657, -1000, 1655, 119, 1655,
	118, 1655, -1000, -1000, 1229, 1229, 1100, 987, -93, -1000,
	1089, 17194, 1572, 1560, 1390, -1000, 1652, 1651, 17194, 1390,
	1390, 1390, -1000, 1089, 1479, 1550, 1434, -1000, -1000, -1000,
	-1000, 1403, 1390, 1532, -290, 1229, 1501, 1501, 1501, 1501,
	1501, 1465, 1465, 1465, 1465, -1000, -1000, 1229, -1000, -1000,
	2022, 2022, 2022, 1454, 40844, 40253, -1000, -1000, -1000, -1000,
	2075, 2069, 1385, -1000, -1000, 48, 365, -1000, 1874, 1870,
	-1000, 2047, 1865, 2046, -1000, -1000, -1000, 1089, -1000, 1974,
	1408, -1000, 705, 1337, -1000, -1000, 16012, 1459, 1842, 507,
	1454, 1406, 1918, 1778, 1759, 1896, -1000, -1000, -1000, -1000,
	1799, -1000, 1796, -1000, -1000, 1588, -1000, -1000, 1317, 1229,
	1527, 287, 21932, 1351, 1351, -1000, 503, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 889, 6162, 2111, -1000, 1124, -1000,
	1062, -1000, 772, 759, -1000, 40253, 1649, -1000, 343, 1117,
	343, 936, -1000, 932, -1000, -1000, -224, -1000, -1000, 1675,
	1748, -1000, -1000, -1000, -1000, 40253, -1000, -1000, 40253, 40253,
	40253, 1631, 2045, -1000, 17194, 1623, 694, 1518, 40253, 40253,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	379, 684, -373, 246, 245, 684, 684, 684, -1000, -1000,
	1452, 1446, -1000, -142, -1000, 17194, -1000, -1000, -1000, 971,
	971, -1000, 1588, -1000, -1000, -1000, 1262, -1000, -1000, -129,
	40253, 40253, 40253, 40253, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 610, 17785, -1000, -1000, 343, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 17194, -1000,
	17194, -1000, 2027, 1114, 1089, 17194, 17194, -1000, 930, 928,
	1390, -1000, -1000, -1000, 1229, 18376, -1000, 18376, -1000, 17194,
	203, 399, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1583, 1871, 1583, 1583, 23705, -1000, -1000,
	2069, 2062, 2044, 1854, 1858, 1858, 1874, -1000, 2040, 2038,
	-1000, 1111, 2036, 1108, 755, -1000, 40253, 17194, 1583, -1000,
	315, 40253, 1583, 40253, -1000, 2043, -1000, -1000, 17194, 1611,
	-1000, 17194, -1000, -1000, -1000, -1000, -1000, -1000, 6949, 2075,
	1351, -1000, -1000, 644, -1000, 17194, -1000, -1000, -1000, 4193,
	-1000, -1000, -1000, -1000, -1000, 1608, 17194, -1000, -1000, -1000,
	1258, 1256, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1588, -1000, -1000, -1000, -1000, 284, -397, 1486, 40253, 926,
	-1000, 1437, 1360, 253, 1583, 1097, 684, 684, 684, 918,
	901, 27251, 345, -1000, 284, -1000, -182, -183, 1390, -1000,
	-1000, 2002, -1000, -1000, 10668, -1000, -1000, 1586, 1661, -1000,
	227, -1000, 1390, 1390, 1229, -1000, 1390, 1390, 1237, 1235,
	-1000, -1000, 1434, -1000, 948, -1000, 203, 1229, 1756, -1000,
	-1000, 6949, -1000, 24296, -1000, 2035, 2033, 27842, 27842, 617,
	2062, -1000, 17194, 17194, 1849, 879, -1000, -1000, -1000, -1000,
	1096, 1077, -1000, 1076, -1000, 2109, -1000, 1089, -1000, 1583,
	-1000, 491, 1337, -1000, 2027, 1089, 40253, 1089, 50, 2043,
	-1000, 1390, -1000, 1583, 1583, 1583, 1583, 1583, 1583, 1583,
	1583, 1583, 1583, 1583, 1583, 1583, 1583, 1583, 1583, 1583,
	1583, 1583, 1583, 1583, 1583, 1583, 1583, 1583, 1583, 1583,
	1583, 1583, 1583, 1583, 1583, 40253, 1203, -1000, -1000, 2000,
	1430, 52, -1000, 1377, -1000, -1000, 462, -1000, 17194, -1000,
	27251, 1055, 1054, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 320, 1356, -1000, 682, 40253, 40253, 1229, 272, -133,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 17194,
	-1000, 1229, 1754, -1000, -242, -1000, 1354, -1000, -1000, -1000,
	-1000, -1000, 1354, 1354, -1000, -1000, 1089, 1348, -1000, 869,
	-1000, -1000, -1000, -1000, -1000, 40253, 1337, 40253, -1000, 1326,
	1229, 1583, 2027, -1000, 1319, -1000, 320, -1000, 1578, 1702,
	-1000, -1000, -1000, 15421, -1000, -1000, -1000, -1000, -125, 10668,
	7688, 1309, -1000, -1000, 1821, -122, -138, 1479, -1000, -347,
	-1000, -1000, 26660, -1000, -1000, -1000, -1000, -1000, 1312, -1000,
	-1000, 23705, 39662, -1000, 1752, 789, -125, 17194, 1576, 1229,
	-1000, -20, -1000, -1000, -1000, -1000, -1000, 1645, -1000, 1820,
	-1000, 1229, -1000, -1000, -1000, 1290, -1000, 3462, -256, 1745,
	1734, 2082, -1000, -1000, -1000, 832, 989, -1000, -1000, -1000,
	-1000, 1171, 40253, -1000, 359, -1000, -1000, -129, -130, -1000,
	-1000, 39662, -250, 549, 6949, -1000, -1000, 2106, -1000, 2104,
	566, 566, -1000, -1000, -408, 1282, 182, -1000, -135, -1000,
	-1000, 1985, 50, -1000, -1000, -1000, 351, 972, -1000, -1000,
	900, -408, -1000, -139, -258, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 6949, 207, 207, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2426, 2425, 26, 3, 2418, 2417, 2415, 39, 90,
	178, 15, 184, 96, 2414, 2413, 2410, 2409, 2408, 2407,
	2406, 225, 223, 219, 2405, 2404, 2398, 2397, 2395, 2394,
	2393, 2392, 2390, 2389, 208, 156, 177, 2388, 2385, 2384,
	104, 173, 81, 84, 174, 2383, 2382, 75, 2381, 2380,
	2379, 169, 166, 779, 2378, 163, 110, 41, 2377, 2376,
	2375, 2374, 2372, 2371, 2370, 2368, 2367, 2366, 2365, 2364,
	2363, 2362, 2361, 2360, 2359, 171, 2358, 2357, 18, 2356,
	77, 2355, 2354, 2353, 2352, 126, 2351, 2350, 2349, 2348,
	2346, 2344, 2341, 140, 2339, 2336, 2335, 2331, 180, 2330,
	2329, 237, 106, 101, 2327, 2326, 93, 179, 2324, 118,
	2322, 2321, 2320, 149, 2318, 4030, 2317, 67, 63, 2314,
	58, 79, 59, 61, 17, 4, 2313, 2312, 66, 88,
	2311, 100, 69, 2310, 98, 95, 2309, 2306, 22, 9,
	2305, 5, 2, 8, 68, 2303, 2302, 115, 2301, 2299,
	2298, 91, 2295, 2294, 4880, 2293, 89, 129, 97, 74,
	2292, 35, 48, 2291, 2290, 2289, 2287, 2286, 36, 2283,
	2282, 2279, 139, 34, 168, 31, 43, 49, 130, 2278,
	147, 80, 2276, 138, 136, 2274, 50, 33, 32, 2273,
	45, 128, 116, 25, 94, 148, 2272, 2271, 55, 73,
	2269, 2268, 2267, 2265, 2264, 2263, 71, 2262, 60, 2261,
	183, 2260, 21, 2259, 46, 30, 2258, 65, 123, 70,
	29, 2257, 161, 2255, 38, 157, 127, 155, 2254, 2253,
	2252, 2250, 175, 265, 2249, 2248, 165, 160, 143, 145,
	2246, 263, 2244, 2241, 92, 1535, 1912, 24, 158, 2237,
	2236, 2931, 142, 27, 28, 2235, 193, 2234, 2228, 2227,
	182, 162, 111, 1019, 37, 2226, 2224, 16, 2223, 2222,
	2219, 2216, 2214, 2210, 85, 2202, 2196, 2194, 181, 103,
	7, 150, 76, 2193, 2191, 2190, 121, 83, 2189, 153,
	152, 124, 105, 2187, 164, 146, 125, 2186, 131, 2185,
	2182, 2177, 2173, 2172, 86, 2171, 2169, 2168, 2165, 151,
	141, 120, 82, 2163, 78, 107, 144, 154, 44, 2160,
	42, 2157, 2155, 2154, 172, 20, 2153, 6, 52, 53,
	19, 108, 99, 2152, 0, 2151, 13, 159, 264, 167,
	2150, 2149, 11, 10, 12, 2147, 135, 2140, 2139, 2131,
	23, 47, 14, 1, 2129, 2128, 4871, 3095, 134, 2096,
	187,
}

//line sql.y:6790
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 354, 355, 355, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 334, 334,
	334, 337, 337, 32, 70, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 83, 83, 22, 23, 23, 23, 23,
	358, 358, 149, 149, 147, 147, 148, 148, 217, 217,
	24, 25, 25, 227, 227, 226, 226, 226, 228, 228,
	228, 228, 263, 263, 26, 26, 26, 26, 26, 99,
	99, 336, 336, 335, 327, 327, 326, 326, 325, 333,
	333, 332, 332, 331, 38, 39, 48, 48, 48, 48,
	49, 50, 338, 338, 300, 54, 54, 53, 53, 53,
	53, 55, 55, 52, 52, 51, 51, 302, 302, 288,
	288, 301, 301, 301, 301, 301, 301, 301, 287, 287,
	110, 110, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 349, 349, 197, 197, 197, 197, 197,
	197, 119, 119, 128, 128, 128, 128, 128, 117, 117,
	118, 116, 116, 116, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 127, 127, 123,
	123, 123, 124, 124, 124, 125, 125, 350, 350, 350,
	350, 267, 267, 267, 267, 270, 270, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 269, 269, 269, 269,
	269, 271, 271, 271, 271, 271, 272, 272, 272, 272,
	272, 272, 272, 272, 272, 272, 272, 272, 272, 272,
	272, 273, 273, 273, 273, 273, 273, 273, 273, 286,
	286, 274, 274, 281, 281, 282, 282, 282, 283, 283,
	283, 284, 284, 279, 279, 279, 279, 279, 279, 280,
	280, 280, 289, 314, 314, 313, 313, 311, 311, 311,
	311, 311, 311, 311, 311, 298, 298, 308, 308, 308,
	308, 308, 297, 297, 293, 293, 293, 294, 294, 295,
	295, 292, 292, 296, 296, 310, 310, 309, 309, 290,
	290, 291, 291, 316, 351, 351, 351, 351, 351, 352,
	352, 317, 343, 344, 342, 342, 342, 342, 342, 80,
	80, 80, 240, 240, 240, 306, 306, 305, 305, 305,
	307, 307, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 235, 235, 235, 341, 341, 341, 341,
	341, 341, 340, 340, 340, 303, 303, 303, 339, 339,
	56, 56, 181, 181, 45, 45, 45, 45, 45, 45,
	44, 44, 44, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 46, 46, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 85, 85, 86,
	86, 86, 86, 88, 88, 88, 319, 319, 57, 57,
	3, 3, 137, 139, 140, 140, 138, 138, 138, 138,
	138, 138, 59, 59, 58, 58, 142, 141, 143, 143,
	143, 1, 1, 2, 2, 4, 4, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 285,
	285, 285, 318, 318, 320, 87, 87, 87, 87, 87,
	87, 87, 87, 87, 322, 322, 322, 60, 60, 323,
	275, 276, 277, 5, 6, 299, 321, 95, 95, 28,
	37, 37, 29, 29, 29, 29, 30, 30, 61, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 234,
	234, 242, 242, 233, 233, 256, 256, 256, 236, 236,
	236, 237, 237, 348, 348, 348, 230, 230, 63, 63,
	63, 65, 65, 66, 67, 67, 258, 258, 259, 259,
	68, 69, 81, 81, 81, 81, 81, 81, 84, 84,
	84, 15, 15, 15, 15, 77, 77, 77, 14, 14,
	64, 64, 71, 345, 345, 346, 347, 347, 347, 347,
	72, 74, 31, 31, 31, 31, 31, 31, 105, 105,
	93, 93, 93, 93, 93, 93, 93, 93, 93, 93,
	93, 93, 100, 100, 100, 94, 94, 359, 75, 76,
	76, 98, 98, 98, 91, 91, 91, 97, 97, 97,
	16, 16, 17, 216, 216, 18, 18, 102, 102, 104,
	104, 104, 104, 104, 106, 106, 106, 106, 106, 106,
	106, 101, 101, 103, 103, 103, 103, 249, 249, 249,
	248, 248, 131, 131, 133, 132, 132, 134, 134, 135,
	135, 135, 135, 179, 179, 157, 157, 214, 214, 212,
	212, 213, 213, 215, 215, 215, 215, 218, 218, 136,
	136, 136, 136, 144, 144, 145, 145, 146, 146, 257,
	257, 254, 254, 254, 253, 253, 150, 150, 150, 152,
	151, 151, 151, 151, 153, 153, 155, 155, 154, 154,
	156, 161, 161, 160, 160, 158, 158, 158, 158, 159,
	159, 159, 159, 162, 162, 115, 115, 115, 115, 115,
	115, 115, 126, 126, 126, 126, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 82, 82, 82, 231, 231, 163, 163,
	171, 171, 171, 171, 164, 164, 164, 164, 164, 164,
	164, 172, 172, 172, 178, 173, 173, 169, 169, 169,
	169, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 265,
	265, 330, 330, 329, 329, 328, 328, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 89,
	89, 89, 89, 89, 89, 89, 89, 89, 360, 360,
	278, 278, 278, 278, 170, 170, 170, 170, 170, 96,
	96, 96, 96, 96, 262, 262, 262, 266, 266, 266,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 184, 184, 92, 92, 182,
	182, 183, 185, 185, 180, 180, 180, 166, 166, 166,
	186, 186, 187, 187, 188, 188, 190, 189, 189, 191,
	192, 192, 192, 193, 193, 194, 194, 194, 47, 47,
	47, 47, 47, 42, 42, 42, 42, 43, 43, 43,
	107, 107, 107, 107, 109, 109, 108, 108, 78, 78,
	79, 79, 79, 113, 113, 114, 114, 114, 111, 111,
	112, 112, 210, 210, 195, 195, 195, 202, 202, 202,
	198, 198, 200, 200, 200, 201, 201, 201, 199, 207,
	207, 209, 209, 208, 208, 204, 204, 205, 205, 206,
	206, 206, 203, 203, 165, 165, 165, 165, 165, 211,
	211, 211, 211, 219, 219, 175, 175, 177, 177, 176,
	130, 220, 220, 224, 221, 221, 225, 225, 225, 225,
	225, 222, 222, 223, 223, 250, 250, 250, 229, 229,
	241, 241, 238, 238, 239, 239, 232, 232, 243, 243,
	243, 73, 174, 174, 315, 315, 312, 246, 246, 247,
	247, 251, 251, 255, 255, 252, 252, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 356, 357, 260, 261,
	261, 261,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 2,
	2, 0, 1, 4, 4, 4, 4, 2, 4, 1,
	3, 1, 1, 3, 4, 3, 3, 3, 5, 10,
	0, 2, 0, 2, 3, 5, 3, 4, 2, 3,
	2, 3, 3, 1, 1, 0, 2, 2, 3, 3,
	2, 1, 1, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 3, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 1, 5,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 3, 0, 5, 0, 3, 5, 0, 1,
	1, 0, 1, 0, 2, 2, 2, 1, 1, 0,
	2, 2, 5, 0, 1, 1, 2, 1, 3, 2,
	1, 1, 3, 3, 3, 0, 1, 4, 3, 3,
	4, 2, 0, 2, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 3, 3, 4, 3,
	1, 3, 1, 7, 5, 6, 6, 7, 7, 0,
	1, 5, 3, 3, 1, 1, 2, 2, 2, 0,
	1, 1, 0, 1, 2, 0, 1, 1, 3, 2,
	1, 2, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 4, 5, 0, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 1, 0, 2, 0, 1, 5, 1, 3, 7,
	1, 3, 3, 1, 2, 2, 2, 5, 5, 5,
	6, 8, 6, 5, 5, 2, 2, 2, 2, 3,
	3, 3, 4, 1, 3, 5, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 3, 4, 4,
	2, 11, 3, 6, 8, 6, 6, 6, 13, 8,
	6, 10, 5, 5, 5, 5, 5, 0, 6, 5,
	6, 4, 5, 0, 8, 9, 0, 3, 0, 1,
	0, 3, 8, 4, 1, 3, 3, 6, 7, 7,
	8, 4, 0, 1, 0, 1, 3, 3, 1, 1,
	2, 1, 1, 0, 2, 0, 2, 5, 3, 7,
	4, 4, 4, 4, 3, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 0,
	2, 2, 1, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 2, 2, 4, 4, 3, 0, 1, 4,
	3, 4, 4, 3, 3, 3, 2, 1, 3, 3,
	3, 5, 7, 7, 6, 5, 3, 2, 3, 3,
	3, 7, 3, 3, 3, 3, 4, 7, 5, 2,
	4, 4, 4, 4, 4, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 4, 2, 2, 4, 4, 4,
	4, 4, 3, 3, 3, 5, 2, 3, 3, 2,
	3, 4, 4, 4, 3, 4, 4, 5, 3, 0,
	1, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 2, 0, 1, 1, 1, 1, 2, 1,
	3, 1, 2, 1, 1, 5, 0, 1, 0, 1,
	2, 3, 0, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 3, 3,
	2, 2, 3, 1, 3, 2, 1, 2, 1, 2,
	2, 4, 3, 3, 6, 4, 7, 6, 1, 3,
	2, 2, 2, 2, 1, 1, 1, 3, 2, 1,
	1, 1, 0, 1, 1, 0, 3, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 1, 0, 1, 1,
	5, 5, 4, 0, 2, 4, 4, 0, 1, 0,
	1, 2, 3, 4, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 1, 0, 1, 2, 1, 3, 1, 1, 1,
	4, 3, 1, 3, 4, 3, 7, 0, 3, 1,
	3, 1, 3, 1, 1, 3, 3, 1, 3, 4,
	4, 4, 3, 2, 4, 0, 1, 0, 2, 0,
	1, 0, 1, 2, 1, 1, 1, 2, 2, 1,
	2, 3, 2, 3, 2, 2, 2, 1, 1, 3,
	3, 0, 1, 1, 2, 6, 5, 6, 6, 0,
	2, 3, 3, 0, 2, 3, 3, 3, 2, 3,
	1, 6, 3, 4, 3, 1, 3, 4, 5, 6,
	3, 4, 5, 6, 3, 4, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 3, 1, 1, 2, 2, 2,
	2, 1, 1, 2, 9, 6, 6, 6, 2, 2,
	3, 3, 3, 1, 1, 1, 0, 3, 1, 1,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 5, 5,
	6, 4, 4, 8, 6, 8, 6, 8, 5, 4,
	2, 2, 1, 2, 2, 2, 8, 8, 6, 5,
	4, 4, 4, 4, 4, 7, 4, 6, 6, 6,
	4, 4, 4, 7, 8, 6, 5, 6, 8, 11,
	7, 8, 8, 9, 4, 4, 4, 4, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 4, 0,
	2, 0, 2, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	0, 2, 3, 3, 4, 4, 4, 4, 4, 0,
	3, 4, 7, 3, 1, 1, 1, 0, 5, 5,
	2, 3, 1, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 2, 1, 1, 0, 1, 0, 2, 1,
	2, 4, 0, 2, 1, 3, 5, 1, 2, 2,
	0, 3, 0, 2, 0, 1, 3, 1, 3, 2,
	0, 1, 1, 0, 1, 2, 4, 4, 0, 2,
	2, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	0, 3, 3, 3, 0, 3, 1, 1, 0, 4,
	0, 1, 1, 0, 3, 1, 3, 2, 1, 1,
	0, 1, 2, 4, 9, 3, 5, 0, 3, 3,
	0, 1, 0, 2, 2, 0, 2, 2, 2, 0,
	2, 1, 2, 3, 3, 0, 2, 1, 2, 3,
	4, 3, 0, 1, 2, 1, 5, 4, 4, 1,
	3, 3, 5, 0, 5, 1, 3, 1, 2, 3,
	1, 1, 3, 3, 1, 3, 3, 3, 3, 3,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 0, 3, 0, 1, 0, 1,
	1, 5, 0, 1, 0, 1, 2, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 0,
	1, 1,
}

var yyChk = [...]int{
	-1000, -354, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -61, -62, -63, -65,
	-66, -67, -68, -69, -14, -64, -31, -32, -70, -71,
	-72, -73, -74, -16, -17, -18, -9, -8, -13, 9,
	10, -83, -33, 32, -38, -48, 218, -49, -39, 219,
	-50, 221, 220, 257, 222, 250, 74, 299, 300, 302,
	303, 304, 305, -84, 255, 256, 224, 36, 45, 33,
	34, 37, 228, 263, 264, 227, -10, -34, 8, -356,
	11, 429, 252, 251, 28, -12, 463, 85, -355, 600,
	-210, -195, 22, 33, 29, -194, -190, -98, -195, 20,
	18, 7, -75, -359, -75, -75, 12, 13, -75, -300,
	-302, 85, 155, 85, -75, -54, -53, -52, -51, -55,
	31, -45, -46, -324, -44, -41, 223, 220, 267, 119,
	120, 257, 258, 259, 222, 241, 256, 260, 255, 276,
	-40, 80, 33, 463, 466, -307, 219, 225, 226, 430,
	122, 121, 75, 221, -304, 353, 495, 570, -55, 572,
	101, 103, 571, 44, 231, 573, 574, 575, 501, 576,
	240, 577, 578, 579, 580, 586, 542, 587, 588, 589,
	123, 7, -75, -255, -251, -334, -245, 88, 89, 90,
	460, 243, 493, 494, 292, 80, 41, 350, 353, 495,
	570, 299, 313, 307, 334, 326, 461, 496, 295, 244,
	280, 567, 324, 131, 572, 298, 497, 258, 358, 359,
	360, 101, 302, 396, 585, 297, 498, 583, 103, 571,
	79, 51, 44, 253, 322, 227, 318, 573, 281, 499,
	471, 274, 122, 119, 592, 36, 316, 50, 30, 582,
	121, 49, 574, 146, 500, 575, 501, 362, 341, 561,
	48, 363, 259, 502, 83, 264, 465, 569, 364, 317,
	365, 291, 581, 224, 503, 553, 366, 367, 562, 504,
	342, 346, 505, 388, 368, 599, 52, 506, 507, 563,
	120, 508, 78, 576, 311, 312, 509, 289, 242, 390,
	338, 442, 449, 450, 107, 108, 445, 109, 451, 110,
	452, 453, 454, 443, 111, 104, 444, 455, 456, 339,
	340, 112, 457, 106, 105, 446, 448, 113, 458, 240,
	35, 369, 462, 293, 58, 268, 391, 46, 344, 596,
	45, 557, 510, 560, 337, 333, 439, 53, 511, 512,
	513, 514, 577, 336, 310, 332, 591, 4, 286, 578,
	62, 226, 348, 347, 349, 275, 387, 329, 515, 516,
	517, 247, 81, 518, 319, 21, 519, 520, 370, 282,
	521, 56, 522, 523, 394, 256, 524, 54, 579, 39,
	261, 593, 580, 525, 526, 527, 528, 263, 529, 372,
	530, 371, 343, 345, 270, 373, 464, 531, 315, 260,
	584, 532, 248, 568, 262, 267, 255, 395, 249, 533,
	534, 535, 536, 537, 296, 552, 538, 539, 303, 586,
	440, 43, 540, 541, 542, 543, 544, 290, 285, 389,
	398, 61, 82, 355, 545, 566, 309, 283, 546, 300,
	55, 587, 588, 589, 277, 590, 9, 597, 598, 375,
	123, 287, 288, 47, 330, 269, 547, 548, 320, 321,
	335, 308, 331, 301, 554, 271, 376, 441, 257, 549,
	397, 284, 351, 356, 468, 276, 377, 565, 467, 328,
	325, 278, 550, 378, 232, 272, 273, 551, 555, 379,
	380, 294, 381, 382, 383, 384, 385, 386, 279, 466,
	306, 323, 357, 410, 411, 412, 413, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 438, 230, -75, 230, -154, -251, 230, -222, 359,
	-242, 361, 374, 369, 379, 367, -234, 370, 372, 270,
	-348, 388, 230, 376, 218, 362, 371, 380, 381, 294,
	382, 386, 279, 383, 384, 385, -334, 172, 575, 590,
	131, 327, 366, 364, 389, 557, -251, 301, -258, 306,
	-246, -334, -245, 304, -154, -81, 553, 222, -260, -260,
	-100, 557, 559, -173, -115, 139, -126, -129, -120, -121,
	-167, -168, -169, -170, -127, -180, 161, 162, 169, 140,
	-178, -130, 26, 459, 431, 430, 172, 31, 214, 68,
	69, 433, 434, 142, 57, 406, 407, -128, 401, 408,
	403, 436, 437, 114, 438, 104, 106, 105, 439, 440,
	441, 339, 340, 442, 443, 444, 107, 108, 109, 110,
	111, 112, 113, 445, 448, 446, 447, 449, 450, 451,
	456, 457, 452, 453, 454, 455, 458, -246, -251, 235,
	400, 229, 167, 429, -122, -118, -8, -176, 399, 404,
	405, 409, 402, -334, -245, -124, -123, -163, 91, 97,
	102, 98, -353, 115, -356, 92, 93, 94, 95, 96,
	116, 117, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 44, 375, 375, -154, -75, -75, -75,
	-75, -188, -98, -190, -10, -8, -356, 8, -75, -8,
	-9, -13, -34, -36, 489, -35, -251, -195, -210, 12,
	157, 42, 50, -193, -194, -12, -8, -115, 19, 23,
	24, -103, 163, -115, -251, -76, -103, -232, 234, -75,
	-75, -221, -263, 301, -225, 389, 388, -247, -223, -246,
	-244, -222, 387, 223, 23, 469, 138, 25, 27, 141,
	172, 126, 19, 142, 37, 225, 327, 241, 171, 237,
	430, 218, 72, 470, 401, 403, 399, 406, 432, 433,
	400, 361, 31, 13, 472, 28, 251, 24, 38, 165,
	220, 145, 473, 254, 26, 252, 114, 117, 475, 22,
	75, 246, 14, 239, 40, 16, 476, 477, 17, 235,
	234, 157, 231, 70, 11, 214, 29, 154, 66, 478,
	133, 479, 480, 481, 482, 127, 68, 155, 20, 594,
	404, 405, 33, 558, 459, 265, 167, 73, 59, 559,
	139, 402, 483, 484, 115, 485, 118, 76, 564, 135,
	18, 71, 42, 486, 266, 487, 236, 595, 488, 392,
	489, 156, 221, 429, 69, 490, 229, 374, 8, 435,
	32, 250, 238, 125, 67, 491, 230, 144, 436, 437,
	233, 128, 116, 7, 132, 34, 12, 74, 77, 407,
	408, 409, 57, 124, 463, 143, 15, 492, 393, 137,
	131, -301, 155, -287, -291, -246, 245, -317, 241, -154,
	-310, -309, -246, -356, -99, -241, 231, 239, 238, 132,
	-338, 135, 287, 400, 229, -51, -52, -222, 171, -85,
	262, 266, 86, 86, -291, -290, -289, -339, 266, 245,
	-316, -308, 237, 246, -297, 238, 239, -292, 231, 133,
	-339, -292, 236, 246, 266, 266, 123, 266, 123, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 261, -298,
	147, -298, 467, 467, -304, -339, -339, -339, 233, 35,
	35, -243, -292, 233, 25, -298, -298, -298, -222, 171,
	-298, -298, -298, -298, 274, 274, -298, -298, -298, -298,
	-298, -298, -298, -298, -298, -298, -298, -298, -298, -298,
	-298, -298, -298, 230, -338, -107, 386, 294, 80, -53,
	276, -37, -154, -241, 231, 232, -338, 263, -154, 215,
	-154, -236, 155, 15, -236, -233, 375, 373, 360, 365,
	-236, -236, -236, -236, 277, 358, -293, 231, 35, 242,
	375, 277, 358, 277, 278, 277, 278, 368, 378, 277,
	-256, 14, 157, 400, 363, 367, 270, 230, 271, 232,
	377, 278, -256, 92, -237, 155, 375, 273, -236, -236,
	-261, -356, -247, 327, -334, 560, -261, -261, 32, 89,
	233, -246, -77, -246, 92, -15, -11, -22, -21, -23,
	147, -105, 375, -93, 172, 575, 561, 562, 563, 560,
	372, 568, 566, 564, 277, 565, 86, 135, 137, 138,
	4, -115, 154, -164, 147, 148, 149, 150, 151, 152,
	153, 157, 139, 141, 155, 156, 136, 158, 159, 160,
	161, 162, 163, 164, 166, 165, 167, 168, 171, 216,
	217, -121, -121, -121, -121, -178, -356, -356, -356, -121,
	-231, -356, -121, -356, -356, -356, -356, -184, -115, -356,
	-360, -356, -360, -360, -278, -356, -278, -356, -356, -356,
	-356, -356, -356, -356, -356, -356, -356, -356, -356, -356,
	-356, -356, -356, -356, -356, -356, -356, -356, -356, -356,
	-356, -356, -356, -356, -356, -356, -356, -356, -356, -356,
	-356, -356, -356, -356, 215, -356, -356, -356, -356, -356,
	-278, -278, -278, -278, -278, 102, 97, 91, -180, 98,
	92, -246, -251, -8, -9, -173, -260, -345, -346, -157,
	-154, -356, 294, -246, -246, 263, -193, -12, -8, -188,
	-194, -190, -8, -75, -91, -104, 63, 64, -106, 24,
	38, 67, 65, 23, -357, 87, -357, -210, -357, 86,
	-36, -214, 85, 61, 43, 92, 92, 86, 21, -189,
	-191, -115, 14, -249, 4, -248, 25, -246, 92, 215,
	100, 14, -155, 29, -154, -232, -232, 86, 301, -225,
	-263, -227, -226, 390, 392, 147, -250, -246, 92, 31,
	87, 86, -154, -267, -270, -272, -271, -273, -268, -269,
	324, 325, 172, 328, 330, 331, 332, 333, 334, 335,
	336, 337, 338, 341, 32, 253, 320, 321, 322, 323,
	342, 343, 344, 345, 346, 347, 348, 349, 307, 326,
	461, 308, 309, 310, 311, 312, 313, 315, 316, 317,
	318, 319, -337, -334, 85, 87, 86, -274, 85, -115,
	-107, 230, -334, 231, 231, 231, -75, 429, -298, -298,
	261, 19, -44, -41, -324, 18, -40, -41, 223, 119,
	120, 220, 85, -287, 85, -296, -337, -334, 85, 133,
	236, 132, -295, -292, -295, -296, -334, -180, -334, 133,
	133, -218, -246, -218, -218, 23, -218, 23, -218, 23,
	94, -246, -218, 23, -218, 23, -218, 23, -218, 23,
	-218, 23, 31, 78, 79, 31, 81, 82, 83, -180,
	-180, -287, -222, -154, -334, 94, 94, 94, -298, -298,
	94, 92, 92, 92, -298, -298, 94, 92, -253, -251,
	92, 92, -340, 247, 291, 293, 94, 94, 94, 94,
	31, 92, -341, 31, 582, 581, 583, 584, 585, 92,
	94, 31, 94, 31, 94, -246, 85, -154, -113, 281,
	218, 220, 223, 76, 92, 295, 147, 44, 86, 233,
	230, -334, -238, 235, -238, -246, -252, -251, -244, 92,
	-115, -294, 14, 157, -256, -256, -236, -154, -294, -256,
	-236, -154, -236, -236, -236, -236, -256, -256, -256, -236,
	-251, -251, -154, -154, -154, -154, -154, -154, -154, -261,
	-237, -236, 560, 92, -230, 14, 76, -261, -261, -259,
	304, 338, 554, 555, 556, 86, 463, -147, -154, 560,
	560, 560, 560, 560, 560, -115, -115, -115, -115, 485,
	-171, 115, 139, 116, 117, -129, -172, -176, -178, 99,
	157, 141, 155, 156, -120, -121, -120, -120, -120, -120,
	-120, -120, -120, -120, -120, -120, -120, -120, -120, -262,
	-334, 92, 172, -125, -124, 98, -353, -125, -101, -103,
	-115, -115, -334, -246, -101, -101, -115, -97, 24, 38,
	-182, -183, 143, -180, -357, -357, 94, 98, -246, -246,
	-90, -89, 411, 412, 413, 414, 416, 417, 418, 421,
	422, 426, 427, 410, 428, 415, 420, 423, 424, 425,
	419, 323, -115, -115, -115, -115, -115, -115, -82, -115,
	126, 127, 128, -115, -115, -174, -173, -333, -332, -331,
	-115, -115, -115, -115, -115, -115, -115, -115, -115, -115,
	-115, -115, -115, -115, -115, -115, -115, -115, -115, -115,
	-115, -115, -115, -102, 24, 38, -101, -247, -252, -244,
	-101, -102, -102, -101, -101, 215, -210, -357, 86, -347,
	392, 393, 558, -254, 266, -253, 25, -174, 92, 14,
	-216, 77, -246, -193, -193, 63, 64, 59, -101, -106,
	-357, -35, 25, -212, -246, 62, 92, -279, -222, 350,
	351, -115, -115, 86, -192, 27, 28, -154, -248, 163,
	-252, -154, -217, 266, -154, -132, -134, -135, -136, -157,
	-179, -356, -137, 481, 478, 14, -147, -148, -156, -251,
	-225, -227, 86, 391, 393, 394, 76, 118, -115, -280,
	171, -306, -305, -304, -287, -289, -290, -291, 87, -280,
	-283, 356, 355, -274, -274, -274, -274, -274, -279, -279,
	-279, -279, 85, 85, -274, -274, -274, -274, -281, 85,
	-281, -281, -282, 85, -282, -317, -115, -314, -313, -311,
	-312, 240, 101, 551, 509, 463, 501, 542, 77, -309,
	-192, 94, -357, -113, -239, 235, -315, -312, -334, -334,
	-334, -239, -334, 92, -334, 92, -86, -57, -1, 594,
	595, 596, 86, 19, -288, -287, -56, 291, -320, -321,
	266, -316, -310, -296, 133, -295, -296, -296, -334, 86,
	29, 123, 123, 123, 123, 463, 220, 32, -287, -56,
	-262, 233, -262, -262, 92, 92, -235, 590, -147, -109,
	283, 147, 272, 272, 230, 230, 285, -154, 296, 298,
	297, 295, 23, 284, 286, 288, 274, -154, -154, -238,
	76, -149, -154, 26, -251, -154, -236, -236, -154, -236,
	-236, -154, -246, -93, 392, 86, 463, 22, -94, 22,
	-356, 115, 116, 117, -172, -120, -121, -120, 138, 254,
	86, -357, 25, 86, 77, -357, -357, -357, 86, 14,
	-101, -185, -183, 145, -115, -357, -357, -357, 86, 86,
	14, -266, 25, -357, -357, -357, -357, -357, -184, -357,
	14, 86, 86, -357, -357, 86, 86, -357, 86, 86,
	86, -330, 86, 86, 86, 86, -357, -357, -357, -357,
	86, 86, 86, 86, 86, 86, 86, 86, 86, 86,
	-357, -357, -101, -101, -356, 215, -357, -357, -357, -357,
	-357, -247, -346, 557, 393, -161, -160, -158, 74, 234,
	75, -356, -253, -357, -125, 89, -213, 89, -212, -166,
	-246, 94, 98, -195, -131, -133, 14, -106, -178, 87,
	86, -279, -199, -204, -233, -246, 92, 172, -191, 215,
	-162, 15, -165, 32, 57, -11, -356, -356, 32, 86,
	-150, -152, -151, -153, 66, 70, 72, 67, 68, 69,
	73, -257, 25, -132, -9, -8, -356, -356, -356, -154,
	-147, -358, 14, 77, -358, 86, 215, -226, -228, 395,
	392, 398, -334, 92, -85, 86, -304, -291, -196, -110,
	40, -284, 357, -279, -279, -286, 92, -286, 94, 94,
	87, -47, -42, -43, 33, 80, -311, -298, 92, 39,
	-298, -298, -246, 87, -192, -109, -154, 139, 76, -315,
	-315, -315, -251, -2, 593, 599, 133, 85, 360, 18,
	-212, 86, 87, -181, 292, 87, -87, -246, 87, 85,
	-296, -296, -246, -356, 230, 31, 31, -56, -181, -280,
	-334, 592, 591, 87, 232, 290, -114, 406, -111, 92,
	88, -154, -154, -154, -154, -154, 223, 220, 275, 233,
	-147, -154, 86, -80, 249, 244, -256, -256, 33, -154,
	392, 569, 567, -115, 138, 254, -129, -121, -103, 460,
	-264, 172, 324, 253, 322, 318, 338, 329, 355, 320,
	356, 317, 316, 315, -264, -262, -115, -115, -188, 146,
	-115, 144, -115, -115, -115, -357, 172, 324, 14, -115,
	-115, -115, -331, -115, -115, -115, -329, -328, -125, -180,
	-357, -329, -115, -115, -328, -328, -332, -332, -332, -332,
	-332, -173, -173, -173, -173, -357, -357, -102, -247, -158,
	-292, -292, -292, -218, 86, -229, 22, 14, 57, 57,
	-131, -162, -132, -106, -246, -202, 553, -207, 46, -205,
	-206, 47, -203, 48, 56, 163, -193, -115, -219, 76,
	-220, -224, -180, -175, -177, -176, -356, -211, -357, -246,
	-218, -220, -134, -135, -135, -134, -135, 66, 66, 66,
	71, 66, 71, 66, -151, -251, -357, -357, -9, -9,
	-115, -254, 77, -132, -132, -156, -251, 163, 392, 396,
	397, -304, -352, 115, 139, 31, 76, 353, 101, -350,
	171, -351, 236, 132, 133, 248, 25, 41, 87, 86,
	87, 86, 87, 86, -240, 500, 139, -43, -42, -298,
	-298, 94, -334, 92, 92, 232, 26, -154, 76, 76,
	76, -88, 597, 94, 85, -3, 80, -115, 85, 19,
	-287, -180, -322, -275, -323, -276, -277, -5, -6, -299,
	57, 101, -60, 44, 231, 577, 578, 123, 590, -314,
	-212, -318, -320, -154, -117, -356, -116, -118, -122, 161,
	162, -181, -154, -108, 281, 289, 85, -112, 89, -336,
	77, 272, 353, 272, -154, -80, -47, -154, -236, -236,
	33, -334, -357, -129, -121, -356, -357, -274, -274, -274,
	-282, -274, 312, -274, 312, -274, -357, -357, 86, -357,
	22, -357, -92, 435, -115, 86, 86, -357, 85, 85,
	-115, -357, -357, -357, -330, 86, -357, 86, -357, 86,
	-265, 552, -357, -357, -357, -357, -357, -357, -357, -357,
	-357, -357, -357, -159, 22, -159, -159, -357, 89, -154,
	-162, -186, 16, -199, 51, 330, -209, -208, 55, 47,
	-206, 19, 49, 19, 30, -219, 86, 147, 86, -357,
	-357, 86, 57, 215, -357, -162, -145, -144, 76, 77,
	-146, 76, -144, 66, 66, -214, -357, -357, 86, -217,
	-132, -162, -162, 215, 115, -356, -119, -128, -117, 12,
	92, 92, -334, 133, 133, -154, 85, -279, 92, -279,
	94, 94, 500, 31, 81, 82, 83, 31, 78, 79,
	-154, -154, -154, -154, -319, 85, 19, -115, 85, 147,
	87, -212, -212, 268, 157, -298, 575, 274, 274, -298,
	-298, -298, 87, -357, 86, -285, 463, 466, -115, -123,
	-123, -214, 87, -327, 463, -335, -246, -246, -246, -246,
	-120, -279, -115, -115, -193, 92, -115, -115, 94, 94,
	-357, -357, -329, -328, -115, -357, -142, -141, -143, 561,
	115, 31, -264, -356, 66, 18, 16, -356, -356, -254,
	-186, -187, 17, 19, -200, 53, -198, 52, -198, -208,
	19, 19, 92, 19, 92, 133, -224, -115, -177, 57,
	-11, -246, -175, -246, -188, -115, 85, -115, -125, -162,
	-162, -115, -168, 438, 104, 106, 105, 439, 440, 441,
	339, 340, 442, 443, 444, 107, 108, 109, 110, 111,
	112, 113, 445, 448, 446, 449, 450, 451, 456, 457,
	452, 453, 454, 455, 458, 85, -115, 87, 87, -214,
	-318, -57, 87, -212, 94, 87, 269, -176, -356, 92,
	-298, -298, -298, 94, 94, -253, -351, -320, 467, 467,
	-357, 25, -326, -325, -247, 85, 77, -96, 157, 463,
	-357, -357, -357, -357, -357, 87, 87, -357, -357, 86,
	-357, -141, -143, -357, 76, -125, -215, -357, -246, 236,
	19, 19, -215, -215, -161, -187, -115, -173, -201, 54,
	76, 118, 92, 92, 92, 12, -175, 215, -193, -212,
	-139, 360, -188, -357, -212, 87, 25, 87, 599, 133,
	87, -176, -95, -356, 265, -253, 92, 92, -11, 86,
	147, -212, -154, -357, 461, 73, 464, -115, -357, 76,
	473, 561, 86, -357, -357, -357, 76, 118, -220, -246,
	87, -357, -356, -193, 87, -197, -11, 85, -3, 265,
	-78, 463, -325, -303, -247, 92, 94, 87, 62, 462,
	465, -330, -246, 236, -254, -140, -138, -246, 515, -343,
	-344, 76, -352, -349, 115, 139, 101, -350, 124, 125,
	-78, -115, 85, -357, -79, 280, 557, -336, 62, -357,
	-357, 86, 22, -267, -59, 525, -344, 76, -343, 76,
	13, 12, 115, 92, 87, -212, 241, -327, 463, -138,
	522, -280, -125, -342, 249, 244, 247, 32, -342, -4,
	598, 87, 282, 464, -58, 26, -139, 243, 31, 115,
	94, -4, 465, 525, -125, -142, -141, -141,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 767,
	767, 767, 0, 767, 0, 0, 767, -2, -2, 767,
	1253, 0, 767, 0, 0, -2, 699, 701, 0, 703,
	-2, 0, 0, 712, 1748, 1748, 762, 0, 0, 0,
	0, 0, 767, 767, 767, 767, 1114, 48, 767, 0,
	83, 84, 718, 719, 720, 63, 0, 1746, 1, 3,
	69, 73, 0, 0, 0, 56, 1123, 0, 76, 0,
	0, 771, 0, 769, 0, 1236, 767, 767, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 0,
	152, 527, 467, 510, 465, 496, -2, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	470, 355, 355, 0, 0, -2, 458, 458, 458, 0,
	0, 0, 493, 1238, 410, 355, 355, 355, 0, 355,
	355, 355, 355, 0, 0, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 355, 355, 355, 355, 355, 355,
	355, 355, 1140, 151, 1254, 1251, 1252, 38, 39, 40,
	1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413,
	1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423,
	1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433,
	1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443,
	1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453,
	1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463,
	1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473,
	1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483,
	1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503,
	1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513,
	1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523,
	1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533,
	1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543,
	1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553,
	1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563,
	1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573,
	1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583,
	1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593,
	1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603,
	1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613,
	1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623,
	1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633,
	1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643,
	1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653,
	1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663,
	1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673,
	1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683,
	1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693,
	1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703,
	1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713,
	1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723,
	1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733,
	1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743,
	1744, 1745, 0, 1230, 0, 627, 868, 0, 688, 688,
	0, 688, 688, 688, 688, 0, 0, 0, 639, 0,
	0, 0, 0, 685, 0, 655, 656, 0, 685, 0,
	691, 0, 666, 688, 688, 669, 1749, 0, 1749, 1749,
	1221, 0, 682, 680, 694, 695, 698, 702, 0, 707,
	710, 1247, 1248, 0, 725, 47, 1489, 717, 730, 731,
	0, 763, 764, 43, 965, 0, 890, 895, 906, 919,
	920, 921, 922, 923, 925, 926, 0, 0, 0, 0,
	931, 932, 0, 0, 0, 0, 0, 946, 0, 0,
	0, 0, 0, 1095, 0, 1058, 1058, 982, 1058, 1060,
	1060, 0, 0, 0, 1745, 1529, 1537, 1538, 1560, 1644,
	1691, 1533, 1534, 1515, 1527, 1530, 1518, 1519, 1521, 1523,
	1528, 1535, 1541, 1520, 1540, 1539, 0, 1516, 1517, 1522,
	1532, 1536, 1524, 1525, 1526, 1531, 1542, 1104, 0, 0,
	0, 0, 0, 0, 257, 258, 964, 1210, 1060, 1060,
	1060, 1060, 1060, -2, -2, 204, 205, 206, 207, 208,
	209, 210, 0, 200, 0, 262, 263, 259, 260, 261,
	948, 949, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 243,
	244, 245, 246, 247, 248, 249, 250, 251, 252, 253,
	254, 255, 256, 1748, 0, 740, 0, 0, 0, 0,
	0, 1123, 0, 1115, 1114, 61, 0, 767, -2, 0,
	0, 0, 0, 45, 0, 50, 827, 75, 74, 1162,
	0, 0, 0, 57, 1124, 65, 67, 1125, 0, 772,
	773, 0, 803, 807, 0, 768, 0, 0, 1237, 1236,
	1236, 100, 0, 1687, 1214, -2, -2, 0, 0, 1249,
	1250, 1223, -2, 1257, 1258, 1259, 1260, 1261, 1262, 1263,
	1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273,
	1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283,
	1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293,
	1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303,
	1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313,
	1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323,
	1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333,
	1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343,
	1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353,
	1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363,
	1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373,
	1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383,
	1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393,
	1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403,
	-2, 0, 0, 161, 162, 0, 41, 382, 0, 157,
	0, 375, 321, 0, 1140, 0, 0, 0, 0, 0,
	767, 0, 1231, 142, 143, 149, 150, 355, 355, 507,
	0, 0, 151, 151, 474, 475, 476, 0, 0, -2,
	380, 0, 459, 0, 0, 369, 369, 373, 371, 372,
	0, 0, 0, 0, 0, 0, 487, 0, 488, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 588, 0,
	356, 0, 505, 506, 411, 0, 0, 0, 0, 485,
	486, 0, 0, 1239, 1240, 0, 0, 0, 355, 355,
	0, 0, 0, 0, 355, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 141, 1153, 0, 0, 0, -2,
	0, 619, 0, 0, 0, 1232, 1232, 0, 626, 0,
	628, 629, 0, 0, 630, 0, 685, 685, 683, 684,
	632, 633, 634, 635, 688, 0, 0, 364, 365, 366,
	685, 688, 0, 688, 688, 688, 688, 685, 685, 685,
	688, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1749, 691, 688, 0, 662, 0, 663, 664, 667, 668,
	670, 1750, 1751, 1270, 1749, 1749, 674, 678, 1222, 700,
	708, 711, 728, 726, 727, 729, 721, 722, 723, 724,
	0, 742, 743, 748, 0, 0, 0, 0, 754, 755,
	756, 0, 0, 759, 760, 761, 0, 0, 0, 0,
	0, 888, 0, 0, 954, 955, 956, 957, 958, 959,
	960, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 927, 928, 929, 930, 933, 0, 0, 0, 938,
	939, 0, 0, 0, 0, 0, 777, 0, 1096, 0,
	980, 0, 981, 983, 984, 0, 985, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1242,
	129, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 787, 0, 0, 787, 787, 0, 0,
	193, 194, 195, 196, 197, 211, 212, 213, 214, 215,
	264, 1104, 0, 964, 0, 0, 44, 732, 733, 0,
	851, 1242, 0, 0, 783, 0, 55, 64, 66, 1123,
	59, 1123, 0, 789, 0, 0, -2, -2, 790, 796,
	797, 798, 799, 800, 52, 1747, 53, 0, 72, 0,
	46, 0, 0, 0, 0, 333, 1165, 0, 0, 1116,
	1117, 1120, 0, 804, 1571, 808, 0, 810, 811, 0,
	770, 0, 98, 0, 867, 0, 0, 0, 1687, 1220,
	0, 102, 103, 0, 0, 0, 339, 1225, 1226, 1227,
	-2, 362, 0, 339, 328, 272, 273, 274, 321, 276,
	321, 321, 321, 321, 333, 333, 333, 333, 304, 305,
	306, 307, 308, 0, 0, 291, 321, 321, 321, 321,
	311, 312, 313, 314, 315, 316, 317, 318, 277, 278,
	279, 280, 281, 282, 283, 284, 285, 323, 323, 323,
	325, 325, 0, 42, 0, 343, 0, 1120, 0, 0,
	1153, 1234, 1244, 0, 0, 0, 1234, 120, 0, 0,
	508, 538, 468, 497, 509, 0, 471, 472, -2, 0,
	0, 458, 0, 460, 0, 363, 0, -2, 0, 373,
	0, 369, 373, 370, 373, 361, 374, 489, 490, 491,
	0, 568, 837, 0, 0, 0, 0, 0, 574, 575,
	576, 0, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 498, 499, 500, 501, 502, 503, 504, 0,
	0, 460, 0, 494, 0, 412, 413, 414, 0, 0,
	417, 418, 419, 420, 0, 0, 423, 424, 425, 854,
	855, 426, 427, 452, 453, 454, 428, 429, 430, 431,
	432, 433, 434, 446, 447, 448, 449, 450, 451, 435,
	436, 437, 438, 439, 440, 443, 0, 135, 1144, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1232, 0, 0, 0, 0, 786, 869, 1255, 1256, 689,
	690, 0, 367, 368, 688, 688, 636, 675, 0, 688,
	640, 676, 641, 643, 642, 644, 657, 658, 688, 647,
	686, 687, 648, 649, 650, 651, 652, 653, 654, 671,
	659, 660, 661, 692, 0, 696, 697, 672, 673, 0,
	709, 713, 714, 715, 716, 0, 0, 745, 94, 750,
	751, 752, 753, 765, 758, 966, 885, 886, 887, 0,
	889, 892, 0, 950, 952, 894, 896, 961, 962, 963,
	0, 0, 0, 0, 0, 900, 904, 907, 908, 909,
	910, 911, 912, 913, 914, 915, 916, 917, 918, 924,
	1074, 1075, 1076, 941, 265, 266, 0, 942, 0, 801,
	0, 0, 0, 940, 0, 0, 0, 0, 778, 779,
	1102, 1099, 0, 0, 1059, 1061, 0, 0, 0, 0,
	0, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045,
	1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055,
	1056, 1057, 1077, 0, 0, 0, 0, 0, 1095, 0,
	943, 944, 945, 0, 0, 0, 1243, 0, 130, 131,
	0, 0, 0, 0, 0, 1031, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 788, 1105, 0, -2,
	0, 0, 0, 0, 0, 0, 0, 1209, 0, 735,
	736, 738, 0, 871, 0, 852, 0, 0, 741, 0,
	782, 0, 785, 58, 60, 794, 795, 0, 812, 791,
	54, 49, 0, 0, 829, 1163, 333, 1185, 0, 337,
	338, 1126, 1127, 0, 1119, 1121, 1122, 77, 809, 805,
	0, 883, 0, 0, 866, 0, 815, 817, 818, 819,
	849, 0, 822, 0, 0, 0, 0, 0, 96, 868,
	1215, 101, 0, 0, 106, 107, 1216, 1217, 1218, 1219,
	0, 527, -2, 407, 163, 165, 166, 167, 158, -2,
	331, 329, 330, 275, 333, 333, 298, 299, 300, 301,
	302, 303, 0, 0, 292, 293, 294, 295, 286, 0,
	287, 288, 289, 0, 290, 381, 0, 1128, 344, 345,
	347, 355, 0, 350, 351, 0, 355, 355, 0, 376,
	377, 0, 1120, 1144, 0, 0, 0, 1245, 1244, 1244,
	1244, 0, 153, 154, 155, 156, 563, 0, 0, 539,
	561, 562, 151, 0, 0, 159, 462, 461, 0, 595,
	0, 379, 0, 0, 373, 373, 358, 359, 492, 0,
	0, 570, 571, 572, 573, 0, 0, 0, 460, 462,
	339, 0, 415, 416, 421, 422, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 523,
	524, 525, 526, 1141, 1142, 1143, 0, 0, 620, 0,
	0, 399, 92, 1233, 625, 685, 646, 677, 685, 638,
	645, 665, 705, 749, 0, 0, 0, 0, 757, 0,
	0, 893, 951, 953, 897, 0, 901, 905, 0, 0,
	0, 0, 0, 0, 0, 947, 971, 972, 0, 0,
	1114, 0, 1100, 0, 0, 979, 1062, 1063, 0, 0,
	0, 0, 0, 990, 991, 992, 993, 994, 0, 996,
	0, 0, 0, 1000, 1001, 0, 0, 1002, 0, 0,
	0, 0, 0, 0, 0, 0, 1014, 1015, 1016, 1017,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1028, 967, 0, 0, 787, 0, 1064, 1065, 1066, 1067,
	1068, 1105, 734, 737, 739, 825, 872, 873, 0, 0,
	0, 0, 853, 1241, 780, 781, 784, -2, 0, 0,
	1107, 0, 0, 812, 883, 813, 0, 792, 51, 828,
	0, 1167, 1166, 1179, 1192, 334, 335, 336, 1118, 0,
	1123, 0, 1203, 0, 0, 1195, 0, 0, 0, 0,
	0, 0, 0, 0, 856, 0, 0, 859, 0, 0,
	0, 0, 850, 0, 0, 0, 0, 0, 0, -2,
	0, 0, 90, 91, 0, 0, 0, 104, 105, 0,
	0, 111, 340, 341, 144, 151, 409, 164, 389, 0,
	0, 271, 332, 296, 297, 0, 319, 0, 0, 0,
	402, 116, 1132, 1131, 355, 355, 346, 0, 349, 0,
	0, 0, 1246, 322, 378, 0, 134, 0, 0, 0,
	0, 0, 140, 533, 0, 0, 540, 0, 0, 0,
	466, 0, 477, 478, 0, 567, -2, 616, 343, 0,
	357, 360, 838, 0, 0, 479, 0, 462, 483, 484,
	495, 444, 445, 442, 0, 0, 1154, 1155, 1160, 1158,
	1159, 121, 515, 517, 516, 520, 0, 0, 513, 0,
	399, 1128, 0, 624, 400, 401, 688, 688, 744, 95,
	0, 747, 0, 0, 0, 0, 898, 902, 802, 0,
	0, 321, 321, 1082, 321, 325, 1085, 321, 1087, 321,
	1090, 321, 1093, 1094, 0, 0, 0, 0, 1097, 978,
	1103, 0, 0, 0, 0, 989, 0, 0, 0, 0,
	0, 0, 132, 133, 1031, 0, 0, 1033, 1035, 1036,
	1006, 1032, 0, 0, 1029, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 968, 969, 0, 1106, 874,
	879, 879, 879, 0, 0, 0, 1228, 1229, 1108, 1109,
	883, 1110, 814, 793, 830, 1185, 0, 1178, 0, -2,
	1187, 0, 0, 0, 1193, 806, 78, 884, 81, 0,
	1203, 1211, 0, 1194, 1205, 1207, 0, 0, 0, 1199,
	0, 883, 816, 845, 847, 0, 842, 857, 858, 860,
	0, 862, 0, 864, 865, 827, 821, 823, 0, 0,
	0, 98, 0, 883, 883, 97, 0, 870, 108, 109,
	110, 408, 168, 173, 0, 0, 0, 178, 0, 180,
	0, 390, 0, 268, 270, 0, 0, 171, 333, 0,
	333, 0, 326, 0, 391, 403, 0, 1129, 1130, 0,
	0, 348, 352, 353, 354, 0, 1235, 136, 0, 0,
	0, 536, 0, 564, 0, 0, 0, 0, 0, 0,
	160, 463, 596, 597, 598, 599, 600, 601, 602, 603,
	0, 355, 0, 0, 0, 355, 355, 355, 608, 342,
	0, 0, 592, 589, 480, 0, 198, 199, 201, 0,
	0, 482, 827, 1145, 1146, 1147, 0, 1157, 1161, 124,
	0, 0, 0, 0, 621, 622, 623, 93, 631, 637,
	746, 766, 891, 899, 903, 0, 935, 1080, 333, 1083,
	1084, 1086, 1088, 1089, 1091, 1092, 936, 937, 0, 974,
	0, 976, 1123, 0, 1101, 0, 0, 988, 0, 0,
	0, 997, 998, 999, 0, 0, 1005, 0, 1007, 0,
	0, 0, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025,
	1026, 1027, 970, 0, 0, 0, 0, 851, -2, 62,
	1110, 1112, 0, 1172, 1170, 1170, 1180, 1181, 0, 0,
	1188, 0, 0, 0, 0, 82, 0, 0, 0, 1208,
	0, 0, 0, 0, 99, 1114, 839, 846, 0, 0,
	840, 0, 841, 861, 863, 820, -2, 824, 0, 883,
	883, 88, 89, 0, 174, 0, 176, 191, 192, 0,
	179, 181, 182, 267, 269, 0, 0, 309, 320, 310,
	0, 0, 404, 1133, 1134, 1135, 1136, 1137, 1138, 1139,
	827, 137, 138, 139, 528, 0, 538, 0, 0, 0,
	531, 0, 469, 0, 0, 0, 355, 355, 355, 0,
	0, 0, 0, 569, 0, 577, 0, 0, 0, 202,
	203, 0, 1156, 514, 0, 122, 123, 0, 0, 519,
	1069, 1081, 0, 0, 0, 1098, 0, 0, 0, 0,
	995, 1003, 0, 1034, 0, 1010, 0, 0, 0, 558,
	559, 0, 1030, 0, 880, 0, 0, 0, 0, 871,
	1112, 80, 0, 0, 1175, 0, 1168, 1171, 1169, 1182,
	0, 0, 1189, 0, 1191, 0, 1212, 1213, 1206, 0,
	1198, 1201, 1197, 1200, 1123, 843, 0, 848, 0, 1114,
	87, 0, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 324, 327, 0,
	0, 0, 529, 0, 541, 532, 0, 606, 0, 610,
	0, 0, 0, 613, 614, 615, 383, 593, 590, 591,
	481, 0, 125, 126, 0, 0, 0, 0, 0, 0,
	973, 975, 977, 986, 987, 1078, 1079, 1004, 1008, 0,
	1011, 0, 0, 1012, 0, 560, 0, 876, 833, 834,
	881, 882, 0, 0, 826, 79, 1113, 1111, 1164, 0,
	1173, 1174, 1183, 1184, 1190, 0, 1196, 0, 85, 0,
	0, 0, 1123, 175, 0, 185, 0, 537, 0, 540,
	530, 604, 605, 0, 617, 609, 611, 612, 1148, 0,
	0, 0, 521, 934, 0, 0, 0, 1031, 1013, 0,
	556, 557, 0, 875, 877, 878, 1176, 1177, 1204, 1202,
	844, 851, 0, 86, 384, 389, 1148, 0, 0, 0,
	511, 1150, 127, 128, 455, 456, 457, 121, 1070, 0,
	1073, 0, 835, 836, 542, 0, 544, 0, -2, 385,
	386, 0, 169, 186, 187, 0, 0, 190, 183, 184,
	117, 0, 0, 618, 0, 1151, 1152, 124, 1071, 1009,
	543, 0, 0, 339, 0, 553, 387, 0, 388, 0,
	0, 0, 188, 189, 565, 0, 0, 518, 0, 545,
	546, 554, 0, 392, 394, 395, 0, 0, 393, 534,
	0, 565, 1149, 0, 0, 555, 551, 396, 397, 398,
	566, 535, 1072, 0, 547, 548, 549, 550,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 140, 3, 3, 3, 166, 158, 3,
	85, 87, 163, 161, 86, 162, 215, 164, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 600,
	148, 147, 149, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 168, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 136, 3, 169,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 137, 138, 139, 141, 142, 143, 144, 145, 146,
	150, 151, 152, 153, 154, 155, 156, 157, 159, 160,
	165, 167, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:517
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:522
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:523
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:527
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:563
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:569
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:573
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:577
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:582
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:586
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:592
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:598
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:604
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:608
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:613
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:617
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:623
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:627
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:633
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:639
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:643
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:647
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:670
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:676
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:681
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:687
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:694
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:700
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:707
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:711
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:717
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:721
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:725
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:729
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:733
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:739
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:743
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:748
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:752
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:758
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:762
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:767
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:773
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:779
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:786
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:792
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:800
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:804
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:812
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:824
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:836
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:840
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:846
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:852
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:856
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:860
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:864
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:869
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:870
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:874
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:878
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:884
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:888
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:894
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:898
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:903
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:907
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:913
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:919
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:923
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:929
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:933
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:939
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:943
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:947
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:953
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:957
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:961
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:965
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:971
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:975
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:981
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:987
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:994
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1003
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1007
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1014
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1018
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1023
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1027
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1033
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1038
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1043
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1049
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1054
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1060
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1065
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1069
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1075
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1079
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1085
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1091
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1098
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1105
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1110
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1115
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1120
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1127
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1134
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1145
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1152
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1156
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1162
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1166
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1170
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1174
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 151:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1180
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1184
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1190
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1194
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1200
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1204
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1211
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1215
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1221
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1225
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1231
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1236
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1241
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1245
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1250
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1254
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1258
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1269
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1278
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1287
		{
			yyVAL.str = ""
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1291
		{
			yyVAL.str = ""
		}
	case 172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1300
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1304
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1310
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1316
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1321
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1326
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1331
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1336
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1341
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1346
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1350
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1357
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1361
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1366
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1370
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1375
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1381
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1387
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1392
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1399
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1406
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1410
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1414
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1418
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1422
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1433
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1440
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1444
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1450
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1454
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1458
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1462
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1466
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1470
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1474
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1479
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1483
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1487
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1491
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1495
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1502
		{
			yyVAL.str = Armscii8Str
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1506
		{
			yyVAL.str = ASCIIStr
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1510
		{
			yyVAL.str = Big5Str
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1514
		{
			yyVAL.str = UBinaryStr
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1518
		{
			yyVAL.str = Cp1250Str
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1522
		{
			yyVAL.str = Cp1251Str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1526
		{
			yyVAL.str = Cp1256Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1530
		{
			yyVAL.str = Cp1257Str
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1534
		{
			yyVAL.str = Cp850Str
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1538
		{
			yyVAL.str = Cp852Str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1542
		{
			yyVAL.str = Cp866Str
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1546
		{
			yyVAL.str = Cp932Str
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1550
		{
			yyVAL.str = Dec8Str
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1554
		{
			yyVAL.str = EucjpmsStr
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1558
		{
			yyVAL.str = EuckrStr
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1562
		{
			yyVAL.str = Gb18030Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1566
		{
			yyVAL.str = Gb2312Str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1570
		{
			yyVAL.str = GbkStr
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1574
		{
			yyVAL.str = Geostd8Str
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1578
		{
			yyVAL.str = GreekStr
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1582
		{
			yyVAL.str = HebrewStr
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1586
		{
			yyVAL.str = Hp8Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1590
		{
			yyVAL.str = Keybcs2Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1594
		{
			yyVAL.str = Koi8rStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1598
		{
			yyVAL.str = Koi8uStr
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1602
		{
			yyVAL.str = Latin1Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1606
		{
			yyVAL.str = Latin2Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1610
		{
			yyVAL.str = Latin5Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1614
		{
			yyVAL.str = Latin7Str
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1618
		{
			yyVAL.str = MacceStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1622
		{
			yyVAL.str = MacromanStr
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1626
		{
			yyVAL.str = SjisStr
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1630
		{
			yyVAL.str = Swe7Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1634
		{
			yyVAL.str = Tis620Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1638
		{
			yyVAL.str = Ucs2Str
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1642
		{
			yyVAL.str = UjisStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1646
		{
			yyVAL.str = Utf16Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1650
		{
			yyVAL.str = Utf16leStr
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1654
		{
			yyVAL.str = Utf32Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1658
		{
			yyVAL.str = Utf8Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1662
		{
			yyVAL.str = Utf8mb4Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1672
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1676
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1680
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1686
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1690
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1694
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1700
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1704
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1711
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1715
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1719
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1723
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1729
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1740
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1745
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1751
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1755
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1759
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1763
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1767
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1771
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1775
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1779
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1783
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1789
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1795
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1801
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1807
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1813
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1821
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1825
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1829
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1833
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1837
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1843
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1847
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1851
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1855
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1859
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1863
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1867
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1871
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1875
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1879
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1883
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1887
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1891
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1895
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 310:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1900
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1906
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1910
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1914
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1918
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1922
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1926
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1930
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1934
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1940
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1945
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 321:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1950
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1954
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1959
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 324:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1963
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1971
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1975
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1981
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 328:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1989
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1993
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1997
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2002
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2006
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2011
		{
			yyVAL.str = ""
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2015
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2019
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2023
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2027
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2032
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2038
		{
			yyVAL.str = ""
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2042
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2046
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2053
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2058
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2062
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2068
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2072
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2078
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2082
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2087
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2091
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2095
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2099
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2103
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2107
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2113
		{
			yyVAL.str = ""
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2117
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 357:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2123
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2127
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2131
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2135
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2139
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2144
		{
			yyVAL.str = ""
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2148
		{
			yyVAL.str = yyDollar[2].str
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2154
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2158
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2162
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2169
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2173
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2178
		{
			yyVAL.str = "key"
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2182
		{
			yyVAL.str = yyDollar[1].str
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2188
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2192
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2197
		{
			yyVAL.str = ""
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2201
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2207
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2211
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2217
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2221
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2227
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2231
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2237
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2241
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2247
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2253
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2257
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2261
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2265
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2269
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion(), OnDelete: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2274
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2278
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2284
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2290
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2296
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2302
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2306
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2310
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2314
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2318
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2323
		{
			yyVAL.str = ""
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2327
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2331
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2336
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2340
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2344
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2349
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2353
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2359
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2363
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2367
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2373
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2377
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2383
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2387
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2391
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2395
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2399
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2403
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2407
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2411
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2415
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2419
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2423
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2427
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2431
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2435
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2439
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2443
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2447
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2451
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2455
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2459
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2463
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2467
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2471
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2475
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2479
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2483
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2487
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2491
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2495
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2499
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2503
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2508
		{
			yyVAL.str = ""
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2512
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2516
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2535
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2539
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2543
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 458:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2548
		{
			yyVAL.str = ""
		}
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2554
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2558
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2563
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2567
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2572
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2576
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2580
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2584
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2588
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 469:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2592
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2598
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2602
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2606
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2612
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2616
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2620
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2624
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2628
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2632
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2636
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2640
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2644
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2648
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2652
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2656
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2660
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2664
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2668
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2672
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2676
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2680
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2684
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2688
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2692
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2696
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2700
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2706
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2710
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2716
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2720
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2724
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2728
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2732
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2736
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2740
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2744
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2748
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2754
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2761
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2768
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2775
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2781
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2785
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2792
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2799
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2811
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2821
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2825
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2829
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2842
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2852
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2856
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2867
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2874
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2881
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2888
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2895
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2902
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2906
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2915
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2923
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2932
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2939
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2947
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2951
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2960
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2971
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2975
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2980
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2984
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2989
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:2993
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:2999
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3005
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3011
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3015
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3021
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3025
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3031
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3037
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3043
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3049
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3055
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3059
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3063
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3067
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3073
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3079
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3085
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3089
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3093
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3099
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3103
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3108
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3112
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3117
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3121
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3127
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3131
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3135
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3139
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3143
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3147
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3151
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3155
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3159
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3163
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3167
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3171
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3175
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3179
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3183
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3187
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3191
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3195
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3199
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3203
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3207
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3211
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3216
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3220
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3224
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3231
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3235
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3241
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 595:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3246
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3250
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3255
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3260
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3265
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3270
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3275
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3281
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3287
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3294
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3301
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3308
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3316
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3320
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3326
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3332
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3338
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3344
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3350
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3356
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3362
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3368
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3374
		{
			yyVAL.str = ""
		}
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3378
		{
			yyVAL.str = ""
		}
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3384
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3390
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3394
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 622:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3400
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3404
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3413
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3417
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3423
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3427
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3432
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3438
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3442
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3446
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3450
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3454
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3458
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3462
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3466
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3470
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3474
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3478
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3482
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3486
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3490
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3494
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3498
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3502
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3506
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3510
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3514
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3518
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3522
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3526
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3530
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3534
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3538
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3542
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3546
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3550
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3554
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3558
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3562
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3566
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3570
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3574
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3578
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3582
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3586
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3590
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3594
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3598
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3605
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].colIdent.String())}}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3609
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3613
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()}}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3617
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3621
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3625
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3629
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3633
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3637
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3643
		{
			yyVAL.str = ""
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3647
		{
			yyVAL.str = "extended "
		}
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3653
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3657
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3663
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3667
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 685:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3673
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3677
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3681
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 688:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3687
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3691
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3695
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3701
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3705
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3711
		{
			yyVAL.empty = struct{}{}
		}
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3715
		{
			yyVAL.empty = struct{}{}
		}
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3719
		{
			yyVAL.empty = struct{}{}
		}
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3725
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3729
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3735
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3739
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3743
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3749
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3753
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3759
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3765
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3769
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3774
		{
			yyVAL.empty = struct{}{}
		}
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3776
		{
			yyVAL.empty = struct{}{}
		}
	case 708:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3779
		{
			yyVAL.empty = struct{}{}
		}
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3781
		{
			yyVAL.empty = struct{}{}
		}
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3786
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3792
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3797
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3801
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3805
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3809
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3813
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3817
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3823
		{
			yyVAL.str = yyDollar[1].str
		}
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3827
		{
			yyVAL.str = yyDollar[1].str
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3831
		{
			yyVAL.str = yyDollar[1].str
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3837
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3841
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3845
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3849
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3854
		{
			yyVAL.str = ""
		}
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3858
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3862
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3868
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3872
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3878
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3882
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3888
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3894
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3898
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3904
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3910
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3914
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3918
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3922
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3928
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3934
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3940
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3944
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3948
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3952
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3956
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3960
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3966
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3970
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3976
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3980
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3984
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3988
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3992
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3996
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4000
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4004
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4008
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4012
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4016
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4020
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4025
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4029
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4033
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4038
		{
			yyVAL.str = ""
		}
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4042
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 767:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4047
		{
			setAllowComments(yylex, true)
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4051
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 769:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4057
		{
			yyVAL.strs = nil
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4061
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4067
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4071
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4075
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4080
		{
			yyVAL.str = ""
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4084
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4088
		{
			yyVAL.str = SQLCacheStr
		}
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4093
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4097
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4101
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4107
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4111
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4123
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4128
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4132
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4138
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4142
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4147
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4151
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4156
		{
			yyVAL.strs = nil
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4160
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4164
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4168
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4172
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4178
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4182
		{
			yyVAL.str = SQLCacheStr
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4186
		{
			yyVAL.str = DistinctStr
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4190
		{
			yyVAL.str = DistinctStr
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4194
		{
			yyVAL.str = StraightJoinHint
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4198
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4202
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4208
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4212
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4218
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4222
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4226
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4230
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4235
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4239
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4243
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4250
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4255
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4259
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4265
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4271
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4275
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4285
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4289
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4293
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4297
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4303
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4307
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4313
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4317
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4322
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4326
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4332
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4336
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4342
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4346
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4352
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4356
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4360
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4364
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4370
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4374
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4387
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4391
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4395
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4399
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4405
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 844:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4407
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 845:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4411
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4413
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4417
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4419
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4422
		{
			yyVAL.empty = struct{}{}
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4424
		{
			yyVAL.empty = struct{}{}
		}
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4427
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4431
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4435
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4442
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4448
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4452
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4456
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4462
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4468
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4472
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4476
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4480
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4486
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4490
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4500
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4504
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4510
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4514
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4520
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 871:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4525
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4529
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4535
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4539
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 875:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4545
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4549
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4553
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4557
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4562
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4566
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4570
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4574
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4580
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4584
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4591
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4595
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4599
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4603
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4607
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4611
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4615
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4622
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4626
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4630
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4634
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4640
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4644
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4648
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4652
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4656
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4660
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4664
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4668
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4672
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4676
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4680
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4686
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4690
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4694
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4698
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4702
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4706
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4710
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4714
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4718
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4722
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4726
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4730
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4734
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4740
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4744
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4748
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4752
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4756
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4760
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4764
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4768
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4772
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4776
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4780
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4784
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4788
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4792
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4796
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4800
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4804
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4808
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4812
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4820
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4824
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4832
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4836
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4842
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4846
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4850
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4856
		{
			yyVAL.str = ""
		}
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4860
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4866
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4870
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4877
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4881
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4885
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4889
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4895
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4899
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4903
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4907
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4911
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4915
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4919
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4925
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4929
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4933
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4940
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4946
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4950
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 967:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4960
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4964
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4968
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4972
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4982
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4986
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4990
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4994
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4998
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5002
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5006
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5010
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5014
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5018
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5029
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5033
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5039
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5043
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5048
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5052
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5056
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5060
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5064
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5068
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5072
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5076
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5080
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5084
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5088
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5092
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5096
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5100
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5104
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5108
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5112
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5116
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5120
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5124
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5128
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5132
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5136
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5140
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5144
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5148
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5152
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5156
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5160
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5164
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5168
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5172
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5176
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5180
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5184
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5188
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5192
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5196
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5200
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5204
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5208
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5212
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5216
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5220
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5225
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5229
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5234
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5238
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5244
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5248
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5254
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5258
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5264
		{
		}
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5266
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5270
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5274
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5278
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5282
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5286
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5290
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5294
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5298
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5302
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5306
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5312
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5316
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5320
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5324
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5328
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5332
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5336
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5340
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5344
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5354
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5358
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5362
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5366
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5377
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5381
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5385
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5389
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5393
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5399
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5403
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5407
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5411
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5415
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5421
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5425
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5429
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1077:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5435
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5439
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5443
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5449
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5453
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5457
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5461
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5465
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5471
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5475
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5479
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5483
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5487
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5491
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5495
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5499
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5503
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5507
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5513
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5517
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5522
		{
			yyVAL.str = string("")
		}
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5526
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5532
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5536
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5542
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5547
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5551
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5557
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5561
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5565
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5571
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5580
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5584
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5590
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5594
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5599
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5603
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5608
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5612
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5618
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5624
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5628
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5634
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5639
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5643
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5647
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5652
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5656
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5662
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5666
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5670
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5675
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5679
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5683
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5687
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5691
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5698
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5702
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5706
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5710
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5716
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5720
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5724
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5729
		{
			yyVAL.str = ""
		}
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5733
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5737
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5741
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1144:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5746
		{
			yyVAL.str = ""
		}
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5750
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5756
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5760
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5765
		{
			yyVAL.str = ""
		}
	case 1149:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5769
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1150:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5774
		{
			yyVAL.str = "cascaded"
		}
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5778
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5782
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5787
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5791
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5797
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5803
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5809
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5818
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5822
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1160:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5827
		{
			yyVAL.str = ""
		}
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5831
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5837
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5841
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5847
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5851
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5855
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5860
		{
			yyVAL.str = ""
		}
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5864
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5868
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5873
		{
			yyVAL.str = ""
		}
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5877
		{
			yyVAL.str = " header"
		}
	case 1172:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5882
		{
			yyVAL.str = ""
		}
	case 1173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5886
		{
			yyVAL.str = " manifest on"
		}
	case 1174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5890
		{
			yyVAL.str = " manifest off"
		}
	case 1175:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5895
		{
			yyVAL.str = ""
		}
	case 1176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5899
		{
			yyVAL.str = " overwrite on"
		}
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5903
		{
			yyVAL.str = " overwrite off"
		}
	case 1178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5909
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1179:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5914
		{
			yyVAL.str = ""
		}
	case 1180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5918
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5924
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5928
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5934
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5938
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1185:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5943
		{
			yyVAL.str = ""
		}
	case 1186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5947
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5953
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5957
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5963
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1190:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5967
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5971
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5976
		{
			yyVAL.str = ""
		}
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5980
		{
			yyVAL.str = " optionally"
		}
	case 1194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5993
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5997
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6001
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6005
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6009
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6015
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6019
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6023
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1202:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6027
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1203:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6032
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6036
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6042
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6046
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6052
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6056
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6062
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6067
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6077
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6081
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1213:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6087
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6093
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6097
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6103
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6107
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6111
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6115
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6119
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6127
		{
			yyVAL.str = "charset"
		}
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6137
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6141
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6145
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6154
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6156
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6159
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6161
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6164
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6166
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6169
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6171
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6174
		{
			yyVAL.empty = struct{}{}
		}
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6176
		{
			yyVAL.empty = struct{}{}
		}
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6178
		{
			yyVAL.empty = struct{}{}
		}
	case 1241:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6182
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6187
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6191
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6196
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6198
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6202
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6208
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6212
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6219
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6225
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6229
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1253:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6235
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6239
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6246
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6760
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6769
		{
			decNesting(yylex)
		}
	case 1748:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6774
		{
			skipToEnd(yylex)
		}
	case 1749:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6779
		{
			skipToEnd(yylex)
		}
	case 1750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6783
		{
			skipToEnd(yylex)
		}
	case 1751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6787
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
