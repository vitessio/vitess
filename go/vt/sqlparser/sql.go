// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"

	"vitess.io/vitess/go/ptr"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func markBindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const MULTIPLE_TEXT_LITERAL = 57347
const FUNCTION_CALL_NON_KEYWORD = 57348
const STRING_TYPE_PREFIX_NON_KEYWORD = 57349
const ANY_SOME = 57350
const SELECT_OPTIONS = 57351
const LEX_ERROR = 57352
const UNION = 57353
const SELECT = 57354
const STREAM = 57355
const VSTREAM = 57356
const INSERT = 57357
const UPDATE = 57358
const DELETE = 57359
const FROM = 57360
const WHERE = 57361
const GROUP = 57362
const HAVING = 57363
const ORDER = 57364
const BY = 57365
const LIMIT = 57366
const OFFSET = 57367
const FOR = 57368
const DISTINCT = 57369
const AS = 57370
const EXISTS = 57371
const ASC = 57372
const DESC = 57373
const INTO = 57374
const DUPLICATE = 57375
const DEFAULT = 57376
const SET = 57377
const LOCK = 57378
const UNLOCK = 57379
const KEYS = 57380
const DO = 57381
const CALL = 57382
const ALL = 57383
const ANY = 57384
const SOME = 57385
const DISTINCTROW = 57386
const PARSER = 57387
const GENERATED = 57388
const ALWAYS = 57389
const OUTFILE = 57390
const S3 = 57391
const DATA = 57392
const LOAD = 57393
const LINES = 57394
const TERMINATED = 57395
const ESCAPED = 57396
const ENCLOSED = 57397
const DUMPFILE = 57398
const CSV = 57399
const HEADER = 57400
const MANIFEST = 57401
const OVERWRITE = 57402
const STARTING = 57403
const OPTIONALLY = 57404
const VALUES = 57405
const LAST_INSERT_ID = 57406
const NEXT = 57407
const VALUE = 57408
const SHARE = 57409
const MODE = 57410
const SQL_NO_CACHE = 57411
const SQL_CACHE = 57412
const SQL_CALC_FOUND_ROWS = 57413
const SQL_SMALL_RESULT = 57414
const SQL_BIG_RESULT = 57415
const HIGH_PRIORITY = 57416
const JOIN = 57417
const STRAIGHT_JOIN = 57418
const LEFT = 57419
const RIGHT = 57420
const INNER = 57421
const OUTER = 57422
const CROSS = 57423
const NATURAL = 57424
const USE = 57425
const FORCE = 57426
const ON = 57427
const USING = 57428
const INPLACE = 57429
const COPY = 57430
const INSTANT = 57431
const ALGORITHM = 57432
const NONE = 57433
const SHARED = 57434
const EXCLUSIVE = 57435
const SUBQUERY_AS_EXPR = 57436
const STRING = 57437
const SQL_BUFFER_RESULT = 57438
const ID = 57439
const AT_ID = 57440
const AT_AT_ID = 57441
const HEX = 57442
const NCHAR_STRING = 57443
const INTEGRAL = 57444
const FLOAT = 57445
const DECIMAL = 57446
const HEXNUM = 57447
const COMMENT = 57448
const COMMENT_KEYWORD = 57449
const BITNUM = 57450
const BIT_LITERAL = 57451
const COMPRESSION = 57452
const VALUE_ARG = 57453
const LIST_ARG = 57454
const OFFSET_ARG = 57455
const JSON_PRETTY = 57456
const JSON_STORAGE_SIZE = 57457
const JSON_STORAGE_FREE = 57458
const JSON_CONTAINS = 57459
const JSON_CONTAINS_PATH = 57460
const JSON_EXTRACT = 57461
const JSON_KEYS = 57462
const JSON_OVERLAPS = 57463
const JSON_SEARCH = 57464
const JSON_VALUE = 57465
const JSON_ARRAYAGG = 57466
const JSON_OBJECTAGG = 57467
const EXTRACT = 57468
const NULL = 57469
const UNKNOWN = 57470
const TRUE = 57471
const FALSE = 57472
const OFF = 57473
const DISCARD = 57474
const IMPORT = 57475
const ENABLE = 57476
const DISABLE = 57477
const TABLESPACE = 57478
const VIRTUAL = 57479
const STORED = 57480
const BOTH = 57481
const LEADING = 57482
const TRAILING = 57483
const KILL = 57484
const TRACE = 57485
const EMPTY_FROM_CLAUSE = 57486
const LOWER_THAN_CHARSET = 57487
const CHARSET = 57488
const UNIQUE = 57489
const KEY = 57490
const EXPRESSION_PREC_SETTER = 57491
const OR = 57492
const XOR = 57493
const AND = 57494
const NOT = 57495
const BETWEEN = 57496
const CASE = 57497
const WHEN = 57498
const THEN = 57499
const ELSE = 57500
const END = 57501
const LE = 57502
const GE = 57503
const NE = 57504
const NULL_SAFE_EQUAL = 57505
const IS = 57506
const LIKE = 57507
const REGEXP = 57508
const RLIKE = 57509
const IN = 57510
const ASSIGNMENT_OPT = 57511
const SHIFT_LEFT = 57512
const SHIFT_RIGHT = 57513
const DIV = 57514
const MOD = 57515
const UNARY = 57516
const COLLATE = 57517
const BINARY = 57518
const UNDERSCORE_ARMSCII8 = 57519
const UNDERSCORE_ASCII = 57520
const UNDERSCORE_BIG5 = 57521
const UNDERSCORE_BINARY = 57522
const UNDERSCORE_CP1250 = 57523
const UNDERSCORE_CP1251 = 57524
const UNDERSCORE_CP1256 = 57525
const UNDERSCORE_CP1257 = 57526
const UNDERSCORE_CP850 = 57527
const UNDERSCORE_CP852 = 57528
const UNDERSCORE_CP866 = 57529
const UNDERSCORE_CP932 = 57530
const UNDERSCORE_DEC8 = 57531
const UNDERSCORE_EUCJPMS = 57532
const UNDERSCORE_EUCKR = 57533
const UNDERSCORE_GB18030 = 57534
const UNDERSCORE_GB2312 = 57535
const UNDERSCORE_GBK = 57536
const UNDERSCORE_GEOSTD8 = 57537
const UNDERSCORE_GREEK = 57538
const UNDERSCORE_HEBREW = 57539
const UNDERSCORE_HP8 = 57540
const UNDERSCORE_KEYBCS2 = 57541
const UNDERSCORE_KOI8R = 57542
const UNDERSCORE_KOI8U = 57543
const UNDERSCORE_LATIN1 = 57544
const UNDERSCORE_LATIN2 = 57545
const UNDERSCORE_LATIN5 = 57546
const UNDERSCORE_LATIN7 = 57547
const UNDERSCORE_MACCE = 57548
const UNDERSCORE_MACROMAN = 57549
const UNDERSCORE_SJIS = 57550
const UNDERSCORE_SWE7 = 57551
const UNDERSCORE_TIS620 = 57552
const UNDERSCORE_UCS2 = 57553
const UNDERSCORE_UJIS = 57554
const UNDERSCORE_UTF16 = 57555
const UNDERSCORE_UTF16LE = 57556
const UNDERSCORE_UTF32 = 57557
const UNDERSCORE_UTF8 = 57558
const UNDERSCORE_UTF8MB4 = 57559
const UNDERSCORE_UTF8MB3 = 57560
const INTERVAL = 57561
const WINDOW_EXPR = 57562
const JSON_EXTRACT_OP = 57563
const JSON_UNQUOTE_EXTRACT_OP = 57564
const CREATE = 57565
const ALTER = 57566
const DROP = 57567
const RENAME = 57568
const ANALYZE = 57569
const ADD = 57570
const FLUSH = 57571
const CHANGE = 57572
const MODIFY = 57573
const DEALLOCATE = 57574
const REVERT = 57575
const QUERIES = 57576
const SCHEMA = 57577
const TABLE = 57578
const INDEX = 57579
const VIEW = 57580
const TO = 57581
const IGNORE = 57582
const IF = 57583
const PRIMARY = 57584
const COLUMN = 57585
const SPATIAL = 57586
const FULLTEXT = 57587
const KEY_BLOCK_SIZE = 57588
const CHECK = 57589
const INDEXES = 57590
const ACTION = 57591
const CASCADE = 57592
const CONSTRAINT = 57593
const FOREIGN = 57594
const NO = 57595
const REFERENCES = 57596
const RESTRICT = 57597
const SHOW = 57598
const DESCRIBE = 57599
const EXPLAIN = 57600
const DATE = 57601
const ESCAPE = 57602
const REPAIR = 57603
const OPTIMIZE = 57604
const TRUNCATE = 57605
const COALESCE = 57606
const EXCHANGE = 57607
const REBUILD = 57608
const PARTITIONING = 57609
const REMOVE = 57610
const PREPARE = 57611
const EXECUTE = 57612
const MAXVALUE = 57613
const PARTITION = 57614
const REORGANIZE = 57615
const LESS = 57616
const THAN = 57617
const PROCEDURE = 57618
const TRIGGER = 57619
const VINDEX = 57620
const VINDEXES = 57621
const DIRECTORY = 57622
const NAME = 57623
const UPGRADE = 57624
const STATUS = 57625
const VARIABLES = 57626
const WARNINGS = 57627
const CASCADED = 57628
const DEFINER = 57629
const OPTION = 57630
const SQL = 57631
const UNDEFINED = 57632
const SEQUENCE = 57633
const MERGE = 57634
const TEMPORARY = 57635
const TEMPTABLE = 57636
const INVOKER = 57637
const SECURITY = 57638
const FIRST = 57639
const AFTER = 57640
const LAST = 57641
const VITESS_MIGRATION = 57642
const CANCEL = 57643
const RETRY = 57644
const LAUNCH = 57645
const COMPLETE = 57646
const CLEANUP = 57647
const THROTTLE = 57648
const UNTHROTTLE = 57649
const FORCE_CUTOVER = 57650
const CUTOVER_THRESHOLD = 57651
const EXPIRE = 57652
const RATIO = 57653
const VITESS_THROTTLER = 57654
const BEGIN = 57655
const START = 57656
const TRANSACTION = 57657
const COMMIT = 57658
const ROLLBACK = 57659
const SAVEPOINT = 57660
const RELEASE = 57661
const WORK = 57662
const CONSISTENT = 57663
const SNAPSHOT = 57664
const UNRESOLVED = 57665
const TRANSACTIONS = 57666
const BIT = 57667
const TINYINT = 57668
const SMALLINT = 57669
const MEDIUMINT = 57670
const INT = 57671
const INTEGER = 57672
const BIGINT = 57673
const INTNUM = 57674
const REAL = 57675
const DOUBLE = 57676
const FLOAT_TYPE = 57677
const FLOAT4_TYPE = 57678
const FLOAT8_TYPE = 57679
const DECIMAL_TYPE = 57680
const NUMERIC = 57681
const TIME = 57682
const TIMESTAMP = 57683
const DATETIME = 57684
const YEAR = 57685
const CHAR = 57686
const VARCHAR = 57687
const BOOL = 57688
const CHARACTER = 57689
const VARBINARY = 57690
const NCHAR = 57691
const TEXT = 57692
const TINYTEXT = 57693
const MEDIUMTEXT = 57694
const LONGTEXT = 57695
const BLOB = 57696
const TINYBLOB = 57697
const MEDIUMBLOB = 57698
const LONGBLOB = 57699
const JSON = 57700
const JSON_SCHEMA_VALID = 57701
const JSON_SCHEMA_VALIDATION_REPORT = 57702
const ENUM = 57703
const GEOMETRY = 57704
const POINT = 57705
const LINESTRING = 57706
const POLYGON = 57707
const GEOMCOLLECTION = 57708
const GEOMETRYCOLLECTION = 57709
const MULTIPOINT = 57710
const MULTILINESTRING = 57711
const MULTIPOLYGON = 57712
const ASCII = 57713
const UNICODE = 57714
const VECTOR = 57715
const NULLX = 57716
const AUTO_INCREMENT = 57717
const APPROXNUM = 57718
const SIGNED = 57719
const UNSIGNED = 57720
const ZEROFILL = 57721
const PURGE = 57722
const BEFORE = 57723
const CODE = 57724
const COLLATION = 57725
const COLUMNS = 57726
const DATABASES = 57727
const ENGINES = 57728
const EVENT = 57729
const EXTENDED = 57730
const FIELDS = 57731
const FULL = 57732
const FUNCTION = 57733
const GTID_EXECUTED = 57734
const KEYSPACES = 57735
const OPEN = 57736
const PLUGINS = 57737
const PRIVILEGES = 57738
const PROCESSLIST = 57739
const SCHEMAS = 57740
const TABLES = 57741
const TRIGGERS = 57742
const USER = 57743
const VGTID_EXECUTED = 57744
const VITESS_KEYSPACES = 57745
const VITESS_METADATA = 57746
const VITESS_MIGRATIONS = 57747
const VITESS_REPLICATION_STATUS = 57748
const VITESS_SHARDS = 57749
const VITESS_TABLETS = 57750
const VITESS_TARGET = 57751
const VSCHEMA = 57752
const VITESS_THROTTLED_APPS = 57753
const NAMES = 57754
const GLOBAL = 57755
const SESSION = 57756
const ISOLATION = 57757
const LEVEL = 57758
const READ = 57759
const WRITE = 57760
const ONLY = 57761
const REPEATABLE = 57762
const COMMITTED = 57763
const UNCOMMITTED = 57764
const SERIALIZABLE = 57765
const ADDDATE = 57766
const CURRENT_TIMESTAMP = 57767
const DATABASE = 57768
const CURRENT_DATE = 57769
const CURDATE = 57770
const DATE_ADD = 57771
const DATE_SUB = 57772
const NOW = 57773
const SUBDATE = 57774
const CURTIME = 57775
const CURRENT_TIME = 57776
const LOCALTIME = 57777
const LOCALTIMESTAMP = 57778
const CURRENT_USER = 57779
const UTC_DATE = 57780
const UTC_TIME = 57781
const UTC_TIMESTAMP = 57782
const SYSDATE = 57783
const DAY = 57784
const DAY_HOUR = 57785
const DAY_MICROSECOND = 57786
const DAY_MINUTE = 57787
const DAY_SECOND = 57788
const HOUR = 57789
const HOUR_MICROSECOND = 57790
const HOUR_MINUTE = 57791
const HOUR_SECOND = 57792
const MICROSECOND = 57793
const MINUTE = 57794
const MINUTE_MICROSECOND = 57795
const MINUTE_SECOND = 57796
const MONTH = 57797
const QUARTER = 57798
const SECOND = 57799
const SECOND_MICROSECOND = 57800
const YEAR_MONTH = 57801
const WEEK = 57802
const SQL_TSI_DAY = 57803
const SQL_TSI_WEEK = 57804
const SQL_TSI_HOUR = 57805
const SQL_TSI_MINUTE = 57806
const SQL_TSI_MONTH = 57807
const SQL_TSI_QUARTER = 57808
const SQL_TSI_SECOND = 57809
const SQL_TSI_MICROSECOND = 57810
const SQL_TSI_YEAR = 57811
const REPLACE = 57812
const CONVERT = 57813
const CAST = 57814
const SUBSTR = 57815
const SUBSTRING = 57816
const MID = 57817
const SEPARATOR = 57818
const TIMESTAMPADD = 57819
const TIMESTAMPDIFF = 57820
const WEIGHT_STRING = 57821
const LTRIM = 57822
const RTRIM = 57823
const TRIM = 57824
const JSON_ARRAY = 57825
const JSON_OBJECT = 57826
const JSON_QUOTE = 57827
const JSON_DEPTH = 57828
const JSON_TYPE = 57829
const JSON_LENGTH = 57830
const JSON_VALID = 57831
const JSON_ARRAY_APPEND = 57832
const JSON_ARRAY_INSERT = 57833
const JSON_INSERT = 57834
const JSON_MERGE = 57835
const JSON_MERGE_PATCH = 57836
const JSON_MERGE_PRESERVE = 57837
const JSON_REMOVE = 57838
const JSON_REPLACE = 57839
const JSON_SET = 57840
const JSON_UNQUOTE = 57841
const COUNT = 57842
const AVG = 57843
const MAX = 57844
const MIN = 57845
const SUM = 57846
const GROUP_CONCAT = 57847
const BIT_AND = 57848
const BIT_OR = 57849
const BIT_XOR = 57850
const STD = 57851
const STDDEV = 57852
const STDDEV_POP = 57853
const STDDEV_SAMP = 57854
const VAR_POP = 57855
const VAR_SAMP = 57856
const VARIANCE = 57857
const ANY_VALUE = 57858
const REGEXP_INSTR = 57859
const REGEXP_LIKE = 57860
const REGEXP_REPLACE = 57861
const REGEXP_SUBSTR = 57862
const ExtractValue = 57863
const UpdateXML = 57864
const GET_LOCK = 57865
const RELEASE_LOCK = 57866
const RELEASE_ALL_LOCKS = 57867
const IS_FREE_LOCK = 57868
const IS_USED_LOCK = 57869
const LOCATE = 57870
const POSITION = 57871
const ST_GeometryCollectionFromText = 57872
const ST_GeometryFromText = 57873
const ST_LineStringFromText = 57874
const ST_MultiLineStringFromText = 57875
const ST_MultiPointFromText = 57876
const ST_MultiPolygonFromText = 57877
const ST_PointFromText = 57878
const ST_PolygonFromText = 57879
const ST_GeometryCollectionFromWKB = 57880
const ST_GeometryFromWKB = 57881
const ST_LineStringFromWKB = 57882
const ST_MultiLineStringFromWKB = 57883
const ST_MultiPointFromWKB = 57884
const ST_MultiPolygonFromWKB = 57885
const ST_PointFromWKB = 57886
const ST_PolygonFromWKB = 57887
const ST_AsBinary = 57888
const ST_AsText = 57889
const ST_Dimension = 57890
const ST_Envelope = 57891
const ST_IsSimple = 57892
const ST_IsEmpty = 57893
const ST_GeometryType = 57894
const ST_X = 57895
const ST_Y = 57896
const ST_Latitude = 57897
const ST_Longitude = 57898
const ST_EndPoint = 57899
const ST_IsClosed = 57900
const ST_Length = 57901
const ST_NumPoints = 57902
const ST_StartPoint = 57903
const ST_PointN = 57904
const ST_Area = 57905
const ST_Centroid = 57906
const ST_ExteriorRing = 57907
const ST_InteriorRingN = 57908
const ST_NumInteriorRings = 57909
const ST_NumGeometries = 57910
const ST_GeometryN = 57911
const ST_LongFromGeoHash = 57912
const ST_PointFromGeoHash = 57913
const ST_LatFromGeoHash = 57914
const ST_GeoHash = 57915
const ST_AsGeoJSON = 57916
const ST_GeomFromGeoJSON = 57917
const MATCH = 57918
const AGAINST = 57919
const BOOLEAN = 57920
const LANGUAGE = 57921
const WITH = 57922
const QUERY = 57923
const EXPANSION = 57924
const WITHOUT = 57925
const VALIDATION = 57926
const ROLLUP = 57927
const UNUSED = 57928
const ARRAY = 57929
const BYTE = 57930
const CUME_DIST = 57931
const DESCRIPTION = 57932
const DENSE_RANK = 57933
const EMPTY = 57934
const EXCEPT = 57935
const FIRST_VALUE = 57936
const GROUPING = 57937
const GROUPS = 57938
const JSON_TABLE = 57939
const LAG = 57940
const LAST_VALUE = 57941
const LATERAL = 57942
const LEAD = 57943
const NTH_VALUE = 57944
const NTILE = 57945
const OF = 57946
const OVER = 57947
const PERCENT_RANK = 57948
const RANK = 57949
const RECURSIVE = 57950
const ROW_NUMBER = 57951
const SYSTEM = 57952
const WINDOW = 57953
const ACTIVE = 57954
const ADMIN = 57955
const AUTOEXTEND_SIZE = 57956
const BUCKETS = 57957
const CLONE = 57958
const COLUMN_FORMAT = 57959
const COMPONENT = 57960
const DEFINITION = 57961
const ENFORCED = 57962
const ENGINE_ATTRIBUTE = 57963
const EXCLUDE = 57964
const FOLLOWING = 57965
const GET_MASTER_PUBLIC_KEY = 57966
const HISTOGRAM = 57967
const HISTORY = 57968
const INACTIVE = 57969
const INVISIBLE = 57970
const LOCKED = 57971
const MASTER_COMPRESSION_ALGORITHMS = 57972
const MASTER_PUBLIC_KEY_PATH = 57973
const MASTER_TLS_CIPHERSUITES = 57974
const MASTER_ZSTD_COMPRESSION_LEVEL = 57975
const NESTED = 57976
const NETWORK_NAMESPACE = 57977
const NOWAIT = 57978
const NULLS = 57979
const OJ = 57980
const OLD = 57981
const OPTIONAL = 57982
const ORDINALITY = 57983
const ORGANIZATION = 57984
const OTHERS = 57985
const PARTIAL = 57986
const PATH = 57987
const PERSIST = 57988
const PERSIST_ONLY = 57989
const PRECEDING = 57990
const PRIVILEGE_CHECKS_USER = 57991
const PROCESS = 57992
const RANDOM = 57993
const REFERENCE = 57994
const REQUIRE_ROW_FORMAT = 57995
const RESOURCE = 57996
const RESPECT = 57997
const RESTART = 57998
const RETAIN = 57999
const REUSE = 58000
const ROLE = 58001
const SECONDARY = 58002
const SECONDARY_ENGINE = 58003
const SECONDARY_ENGINE_ATTRIBUTE = 58004
const SECONDARY_LOAD = 58005
const SECONDARY_UNLOAD = 58006
const SIMPLE = 58007
const SKIP = 58008
const SRID = 58009
const THREAD_PRIORITY = 58010
const TIES = 58011
const UNBOUNDED = 58012
const VCPU = 58013
const VISIBLE = 58014
const RETURNING = 58015
const FORMAT_BYTES = 58016
const FORMAT_PICO_TIME = 58017
const PS_CURRENT_THREAD_ID = 58018
const PS_THREAD_ID = 58019
const GTID_SUBSET = 58020
const GTID_SUBTRACT = 58021
const WAIT_FOR_EXECUTED_GTID_SET = 58022
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 58023
const FORMAT = 58024
const TREE = 58025
const VITESS = 58026
const TRADITIONAL = 58027
const VTEXPLAIN = 58028
const VEXPLAIN = 58029
const PLAN = 58030
const LOCAL = 58031
const LOW_PRIORITY = 58032
const NO_WRITE_TO_BINLOG = 58033
const LOGS = 58034
const ERROR = 58035
const GENERAL = 58036
const HOSTS = 58037
const OPTIMIZER_COSTS = 58038
const USER_RESOURCES = 58039
const SLOW = 58040
const CHANNEL = 58041
const RELAY = 58042
const EXPORT = 58043
const CURRENT = 58044
const ROW = 58045
const ROWS = 58046
const AVG_ROW_LENGTH = 58047
const CONNECTION = 58048
const CHECKSUM = 58049
const DELAY_KEY_WRITE = 58050
const ENCRYPTION = 58051
const ENGINE = 58052
const INSERT_METHOD = 58053
const MAX_ROWS = 58054
const MIN_ROWS = 58055
const PACK_KEYS = 58056
const PASSWORD = 58057
const FIXED = 58058
const DYNAMIC = 58059
const COMPRESSED = 58060
const REDUNDANT = 58061
const COMPACT = 58062
const ROW_FORMAT = 58063
const STATS_AUTO_RECALC = 58064
const STATS_PERSISTENT = 58065
const STATS_SAMPLE_PAGES = 58066
const STORAGE = 58067
const MEMORY = 58068
const DISK = 58069
const PARTITIONS = 58070
const LINEAR = 58071
const RANGE = 58072
const LIST = 58073
const SUBPARTITION = 58074
const SUBPARTITIONS = 58075
const HASH = 58076

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"MULTIPLE_TEXT_LITERAL",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"ANY_SOME",
	"SELECT_OPTIONS",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"ALL",
	"ANY",
	"SOME",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"HIGH_PRIORITY",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"SQL_BUFFER_RESULT",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"EXTRACT",
	"NULL",
	"UNKNOWN",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"KILL",
	"TRACE",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"ASSIGNMENT_OPT",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"FORCE_CUTOVER",
	"CUTOVER_THRESHOLD",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"UNRESOLVED",
	"TRANSACTIONS",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"VECTOR",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"PURGE",
	"BEFORE",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ADDDATE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURDATE",
	"DATE_ADD",
	"DATE_SUB",
	"NOW",
	"SUBDATE",
	"CURTIME",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"SYSDATE",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_HOUR",
	"SQL_TSI_MINUTE",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_SECOND",
	"SQL_TSI_MICROSECOND",
	"SQL_TSI_YEAR",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"MID",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"ANY_VALUE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"ST_GeometryCollectionFromText",
	"ST_GeometryFromText",
	"ST_LineStringFromText",
	"ST_MultiLineStringFromText",
	"ST_MultiPointFromText",
	"ST_MultiPolygonFromText",
	"ST_PointFromText",
	"ST_PolygonFromText",
	"ST_GeometryCollectionFromWKB",
	"ST_GeometryFromWKB",
	"ST_LineStringFromWKB",
	"ST_MultiLineStringFromWKB",
	"ST_MultiPointFromWKB",
	"ST_MultiPolygonFromWKB",
	"ST_PointFromWKB",
	"ST_PolygonFromWKB",
	"ST_AsBinary",
	"ST_AsText",
	"ST_Dimension",
	"ST_Envelope",
	"ST_IsSimple",
	"ST_IsEmpty",
	"ST_GeometryType",
	"ST_X",
	"ST_Y",
	"ST_Latitude",
	"ST_Longitude",
	"ST_EndPoint",
	"ST_IsClosed",
	"ST_Length",
	"ST_NumPoints",
	"ST_StartPoint",
	"ST_PointN",
	"ST_Area",
	"ST_Centroid",
	"ST_ExteriorRing",
	"ST_InteriorRingN",
	"ST_NumInteriorRings",
	"ST_NumGeometries",
	"ST_GeometryN",
	"ST_LongFromGeoHash",
	"ST_PointFromGeoHash",
	"ST_LatFromGeoHash",
	"ST_GeoHash",
	"ST_AsGeoJSON",
	"ST_GeomFromGeoJSON",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ROLLUP",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	16, 49,
	17, 49,
	-2, 40,
	-1, 52,
	1, 160,
	752, 160,
	-2, 168,
	-1, 53,
	149, 168,
	191, 168,
	364, 168,
	-2, 526,
	-1, 61,
	38, 787,
	254, 787,
	265, 787,
	300, 801,
	301, 801,
	-2, 789,
	-1, 66,
	256, 825,
	-2, 823,
	-1, 124,
	253, 1630,
	-2, 134,
	-1, 126,
	1, 161,
	752, 161,
	-2, 168,
	-1, 137,
	150, 411,
	259, 411,
	-2, 515,
	-1, 156,
	149, 168,
	191, 168,
	364, 168,
	-2, 535,
	-1, 751,
	177, 41,
	-2, 43,
	-1, 960,
	95, 1647,
	-2, 1485,
	-1, 961,
	95, 1648,
	236, 1652,
	-2, 1486,
	-1, 962,
	236, 1651,
	-2, 42,
	-1, 1048,
	65, 899,
	-2, 912,
	-1, 1137,
	264, 1112,
	269, 1112,
	-2, 422,
	-1, 1222,
	1, 583,
	752, 583,
	-2, 168,
	-1, 1533,
	236, 1652,
	-2, 1486,
	-1, 1746,
	65, 900,
	-2, 916,
	-1, 1747,
	65, 901,
	-2, 917,
	-1, 1812,
	149, 168,
	191, 168,
	364, 168,
	-2, 461,
	-1, 1895,
	150, 411,
	259, 411,
	-2, 515,
	-1, 1904,
	264, 1113,
	269, 1113,
	-2, 423,
	-1, 2353,
	236, 1656,
	-2, 1650,
	-1, 2354,
	236, 1652,
	-2, 1648,
	-1, 2459,
	149, 168,
	191, 168,
	364, 168,
	-2, 462,
	-1, 2466,
	28, 189,
	-2, 191,
	-1, 2932,
	86, 99,
	96, 99,
	-2, 979,
	-1, 3000,
	727, 705,
	-2, 679,
	-1, 3225,
	55, 1589,
	-2, 1583,
	-1, 4062,
	727, 705,
	-2, 693,
	-1, 4154,
	98, 637,
	104, 637,
	114, 637,
	193, 637,
	194, 637,
	195, 637,
	196, 637,
	197, 637,
	198, 637,
	199, 637,
	200, 637,
	201, 637,
	202, 637,
	203, 637,
	204, 637,
	205, 637,
	206, 637,
	207, 637,
	208, 637,
	209, 637,
	210, 637,
	211, 637,
	212, 637,
	213, 637,
	214, 637,
	215, 637,
	216, 637,
	217, 637,
	218, 637,
	219, 637,
	220, 637,
	221, 637,
	222, 637,
	223, 637,
	224, 637,
	225, 637,
	226, 637,
	227, 637,
	228, 637,
	229, 637,
	230, 637,
	231, 637,
	232, 637,
	233, 637,
	234, 637,
	-2, 2028,
}

const yyPrivate = 57344

const yyLast = 55832

var yyAct = [...]int{
	976, 3713, 3714, 87, 3712, 4229, 4133, 2456, 4043, 2158,
	964, 2382, 3376, 4242, 4121, 4025, 3662, 4196, 971, 2146,
	4197, 963, 3277, 3284, 1290, 3948, 3334, 4152, 3339, 3336,
	3512, 3335, 1288, 3325, 3238, 4023, 3333, 3338, 3337, 3091,
	3649, 2384, 1815, 2084, 3176, 3354, 5, 2531, 2025, 3292,
	3353, 755, 3242, 3239, 3558, 3552, 3065, 3755, 3226, 3090,
	749, 2892, 1872, 925, 783, 924, 2966, 3356, 750, 2494,
	3047, 1766, 2430, 2967, 3383, 2997, 2499, 2518, 3542, 4094,
	2411, 2968, 2427, 2444, 2562, 165, 1046, 1169, 87, 1067,
	2431, 1043, 2898, 2917, 1074, 2882, 2866, 929, 1099, 2142,
	42, 1145, 2180, 2306, 1920, 3580, 3038, 2432, 1902, 1046,
	2305, 2540, 2338, 41, 2517, 43, 2905, 2092, 151, 2501,
	2959, 3236, 2419, 2579, 1109, 1132, 1127, 1804, 2934, 1784,
	978, 102, 106, 1770, 107, 2434, 1727, 1546, 2186, 2106,
	1471, 2117, 1454, 2021, 1909, 1103, 765, 3241, 1106, 1135,
	1881, 1138, 2001, 1107, 2490, 1133, 1134, 1803, 1084, 1789,
	2491, 1086, 2412, 760, 752, 1055, 1749, 2194, 3750, 2213,
	1052, 1529, 2864, 85, 109, 2033, 2083, 1278, 169, 3513,
	3742, 1505, 1066, 1045, 129, 1049, 127, 128, 3569, 1894,
	134, 101, 135, 1218, 1079, 1041, 1053, 1555, 1550, 753,
	84, 1050, 108, 1051, 100, 4230, 1069, 1286, 926, 1078,
	1264, 3650, 93, 2533, 2534, 2535, 2533, 742, 3322, 4078,
	3020, 3019, 2577, 2988, 685, 4179, 3642, 1040, 1986, 1772,
	3055, 130, 3056, 1059, 4074, 2379, 2380, 1472, 2099, 4073,
	1149, 1171, 1174, 136, 2098, 4079, 3605, 1100, 2097, 2096,
	2095, 2094, 2064, 1234, 1188, 1189, 1190, 2862, 1193, 1194,
	1195, 1196, 1182, 2631, 1199, 1200, 1201, 1202, 1203, 1204,
	1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214,
	1215, 1094, 1093, 4173, 1057, 2, 1044, 1042, 1148, 682,
	743, 683, 3222, 1124, 1060, 1775, 1773, 2566, 4200, 3344,
	3717, 4252, 4235, 1488, 1116, 130, 2403, 1175, 1178, 1179,
	727, 1123, 2894, 1122, 1121, 4052, 3717, 2990, 1111, 3180,
	4195, 1068, 4183, 4181, 3344, 1776, 1774, 4234, 4220, 113,
	114, 115, 1191, 118, 3516, 1768, 124, 3341, 727, 193,
	4074, 2565, 677, 3515, 977, 1482, 2408, 4182, 4180, 2407,
	1235, 3013, 1039, 4026, 740, 741, 2827, 3010, 1468, 3342,
	2104, 1465, 721, 1760, 1034, 1035, 1036, 1037, 192, 95,
	3402, 1048, 4148, 130, 3944, 3943, 3655, 1173, 1172, 3656,
	4210, 3954, 86, 4177, 3342, 86, 3674, 721, 3348, 86,
	1456, 131, 1092, 1096, 928, 3663, 3716, 4122, 2151, 4130,
	2559, 1081, 1082, 3953, 1125, 2908, 4157, 174, 980, 981,
	982, 3428, 3716, 3348, 1883, 980, 981, 982, 2943, 3274,
	3275, 2942, 2863, 2638, 2944, 2451, 2452, 1805, 3673, 1806,
	716, 2076, 2077, 2909, 3273, 1115, 97, 3054, 1117, 2635,
	3769, 721, 1271, 1120, 1273, 1227, 1228, 2450, 3037, 1254,
	1032, 1031, 1485, 2948, 1486, 1487, 4044, 2991, 1478, 1242,
	2955, 1470, 4134, 2564, 1243, 95, 1467, 171, 95, 1255,
	172, 1484, 95, 1259, 1260, 1248, 3410, 1230, 701, 1242,
	1283, 2029, 1270, 1272, 1243, 721, 4162, 3380, 1472, 2469,
	2468, 699, 1241, 2636, 1240, 3408, 191, 1449, 1217, 721,
	2629, 1118, 3378, 3345, 2901, 2902, 4160, 3112, 2381, 721,
	2075, 735, 2079, 739, 733, 3384, 4166, 4167, 86, 2510,
	1801, 88, 3039, 3996, 3066, 3997, 3294, 3295, 3345, 2998,
	2541, 696, 1506, 4161, 1731, 1976, 3371, 1120, 4138, 1112,
	711, 3023, 2415, 2504, 3372, 4138, 1114, 1113, 2586, 2580,
	4232, 1192, 4201, 1455, 3399, 706, 1507, 1508, 1509, 1510,
	1511, 1512, 1513, 1515, 1514, 1516, 1517, 709, 1256, 97,
	719, 1466, 2584, 4202, 1249, 2002, 1275, 722, 720, 1977,
	1448, 1978, 1261, 2605, 3381, 2606, 1280, 2607, 2632, 1263,
	2633, 3042, 1262, 1268, 1282, 1118, 1482, 1269, 3644, 3379,
	1281, 95, 722, 2587, 1257, 1258, 1223, 1274, 3068, 3643,
	2608, 175, 2582, 3027, 2583, 3028, 3928, 1147, 1198, 1197,
	181, 3640, 1147, 2030, 1085, 1520, 1128, 2585, 2544, 1158,
	1129, 3721, 1267, 2428, 1119, 3293, 1129, 1167, 686, 1140,
	688, 702, 1166, 724, 1165, 723, 692, 3296, 690, 694,
	703, 695, 1164, 689, 1163, 700, 722, 1162, 691, 704,
	705, 708, 712, 713, 714, 710, 707, 1520, 698, 725,
	1161, 1160, 1155, 1734, 1887, 1168, 3113, 3555, 3296, 4253,
	1104, 4207, 3078, 3077, 3076, 1141, 4174, 3070, 1104, 3074,
	1104, 3069, 1102, 3067, 2022, 1177, 2503, 1882, 3072, 1080,
	722, 1140, 1092, 1096, 928, 1176, 3043, 3071, 2570, 1478,
	2569, 3059, 2018, 1457, 722, 1185, 1287, 3316, 1287, 1287,
	1146, 1095, 1089, 1087, 722, 1146, 3073, 3075, 1119, 3022,
	4175, 1880, 1879, 1878, 3179, 3008, 3639, 2019, 2413, 2414,
	2593, 2589, 2591, 2592, 2590, 2594, 2595, 2596, 2597, 166,
	1876, 721, 1802, 2653, 1477, 1474, 1475, 1476, 1481, 1483,
	1480, 3207, 1479, 2992, 1233, 676, 3205, 4039, 1046, 1530,
	1535, 1536, 1473, 1539, 1541, 1542, 1543, 1544, 1545, 1159,
	1548, 1549, 1551, 1551, 3594, 1551, 1551, 1556, 1556, 1556,
	1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568,
	1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578,
	1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588,
	1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598,
	1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608,
	1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618,
	1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628,
	1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638,
	1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648,
	1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658,
	1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668,
	1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678,
	1679, 1680, 1681, 1682, 1527, 4051, 1276, 2989, 1683, 1445,
	1685, 1686, 1687, 1688, 1689, 1446, 1447, 1988, 1987, 1989,
	1990, 1991, 1556, 1556, 1556, 1556, 1556, 1556, 1540, 1126,
	1772, 3672, 4246, 2563, 726, 3603, 3604, 1696, 1697, 1698,
	1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708,
	1709, 1523, 1524, 1525, 1526, 717, 722, 94, 3012, 3025,
	94, 1537, 4097, 1156, 94, 3400, 3715, 1531, 3346, 3347,
	718, 1552, 1229, 1553, 1554, 1557, 1558, 3556, 167, 3500,
	4136, 3350, 3715, 89, 2637, 179, 1226, 4136, 1088, 2636,
	1239, 1147, 1147, 3346, 3347, 1477, 1474, 1475, 1476, 1481,
	1483, 1480, 3011, 1479, 3046, 1908, 3350, 95, 3188, 2561,
	3576, 4165, 4135, 1473, 3036, 1464, 2939, 3035, 1724, 4135,
	2507, 1095, 1089, 1087, 1730, 2904, 187, 1238, 1759, 1244,
	1245, 1246, 1247, 1046, 1147, 2867, 2869, 1046, 721, 1521,
	1522, 2839, 2154, 1046, 1793, 1147, 1684, 1252, 1232, 3187,
	2899, 126, 684, 1284, 1285, 4164, 1221, 2457, 1520, 3272,
	1517, 2508, 2007, 2664, 1720, 1760, 1063, 2195, 2506, 168,
	173, 170, 176, 177, 178, 180, 182, 183, 184, 185,
	1721, 2415, 2178, 1500, 2196, 186, 188, 189, 190, 1279,
	1265, 2034, 1184, 94, 1146, 1146, 121, 4065, 1170, 3635,
	1150, 1140, 2509, 1237, 1147, 1152, 3568, 2581, 2088, 1153,
	1151, 2015, 2505, 1157, 1907, 1807, 2187, 2523, 3086, 1690,
	1691, 1692, 1693, 1694, 1695, 1740, 2187, 1741, 2673, 106,
	1738, 107, 1486, 1487, 1742, 2006, 4211, 1146, 1487, 3764,
	1045, 3610, 3609, 1140, 1143, 1144, 2548, 1104, 1146, 2664,
	1721, 1137, 1141, 1917, 1140, 1143, 1144, 1728, 1104, 1916,
	3049, 1906, 1137, 1141, 4244, 3048, 2558, 4245, 2556, 4243,
	1158, 109, 1136, 1156, 122, 3049, 1488, 2553, 1771, 4203,
	3048, 2170, 2159, 2160, 2161, 2162, 2172, 2163, 2164, 2165,
	2177, 2173, 2166, 2167, 2174, 2175, 2176, 2168, 2169, 2171,
	4057, 3595, 1884, 1885, 1886, 1058, 3669, 1146, 3670, 2868,
	1488, 2122, 1150, 1140, 1736, 1147, 2560, 1152, 1120, 1216,
	2557, 1153, 1151, 2193, 1900, 2123, 1518, 1519, 2121, 1488,
	1739, 2222, 1762, 1971, 2700, 1910, 1910, 1042, 1725, 4248,
	1893, 1765, 1154, 1044, 1912, 1737, 1222, 2027, 1266, 2035,
	1922, 2181, 1923, 722, 1925, 1927, 1488, 1236, 1931, 1933,
	1935, 1937, 1939, 1251, 4254, 1287, 1798, 1799, 1953, 1961,
	1962, 95, 1867, 3936, 1253, 1967, 1968, 2413, 2414, 1911,
	2660, 2343, 2011, 1220, 2009, 2010, 2008, 2012, 2013, 2014,
	2003, 2120, 2004, 2553, 1875, 2005, 3935, 1488, 1088, 1510,
	1511, 1512, 1513, 1515, 1514, 1516, 1517, 1903, 3926, 4098,
	1890, 1891, 3686, 1889, 2110, 2111, 2108, 2109, 1146, 3685,
	1183, 3958, 1743, 3617, 1180, 1485, 745, 1486, 1487, 1760,
	2214, 980, 981, 982, 3088, 2216, 2555, 2192, 1957, 2221,
	2217, 2107, 3616, 2218, 2219, 2220, 4031, 1914, 2215, 2223,
	2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 4099, 1485,
	4255, 1486, 1487, 2023, 1508, 1509, 1510, 1511, 1512, 1513,
	1515, 1514, 1516, 1517, 1949, 3606, 1996, 1952, 1485, 1954,
	1486, 1487, 3280, 1512, 1513, 1515, 1514, 1516, 1517, 4216,
	1760, 130, 3323, 1219, 1488, 4032, 1994, 1123, 1506, 1122,
	1121, 1502, 1983, 1503, 3312, 1485, 2964, 1486, 1487, 1119,
	2110, 2111, 2643, 2644, 2963, 2962, 2040, 1504, 1518, 1519,
	1501, 2513, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1515,
	1514, 1516, 1517, 3281, 727, 1287, 1287, 1997, 1981, 1488,
	2343, 2036, 2037, 2062, 2340, 192, 1485, 1995, 1486, 1487,
	1980, 87, 1979, 2342, 87, 2041, 2993, 1488, 3283, 1969,
	1963, 1960, 2048, 2049, 2050, 2420, 2421, 1993, 131, 975,
	153, 2669, 2061, 1982, 1959, 1958, 1929, 1735, 3278, 3600,
	3375, 727, 1488, 192, 174, 1494, 1495, 1496, 1497, 1498,
	1499, 1493, 1490, 2946, 2957, 727, 4204, 1451, 3294, 3295,
	2529, 2527, 2528, 2526, 1801, 3279, 131, 1507, 1508, 1509,
	1510, 1511, 1512, 1513, 1515, 1514, 1516, 1517, 164, 2525,
	4060, 2524, 174, 4059, 152, 4035, 2712, 112, 1506, 4034,
	2149, 2149, 2150, 2147, 2147, 1488, 1484, 1760, 111, 3285,
	110, 2888, 4231, 1485, 171, 1486, 1487, 172, 42, 2668,
	2112, 42, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1515,
	1514, 1516, 1517, 4191, 1760, 1760, 103, 1778, 4033, 1896,
	1897, 163, 162, 191, 4214, 1760, 104, 3931, 2233, 2888,
	1760, 4053, 171, 1484, 1760, 172, 2888, 4129, 1485, 2038,
	1486, 1487, 2888, 4108, 2888, 4104, 2042, 3915, 2044, 2045,
	2046, 2047, 4016, 1760, 3963, 2051, 1485, 3293, 1486, 1487,
	1488, 191, 103, 1760, 95, 3914, 1779, 2063, 105, 3296,
	3763, 85, 104, 1506, 85, 3058, 3761, 4144, 1760, 1720,
	2089, 1485, 3682, 1486, 1487, 1719, 2182, 1760, 2119, 3653,
	4050, 1488, 2069, 2070, 1718, 1721, 1488, 1507, 1508, 1509,
	1510, 1511, 1512, 1513, 1515, 1514, 1516, 1517, 2125, 1717,
	2127, 2128, 2129, 2130, 2131, 2132, 2134, 2136, 2137, 2138,
	2139, 2140, 2141, 3614, 2124, 157, 1898, 160, 3599, 1895,
	3385, 158, 159, 1760, 1485, 3962, 1486, 1487, 175, 1488,
	3382, 2257, 2153, 1488, 2126, 3939, 1760, 181, 3315, 2353,
	2888, 3927, 4142, 1760, 3653, 1760, 3919, 2351, 3314, 1488,
	2888, 3651, 2553, 1760, 1548, 3574, 1760, 1488, 2197, 2198,
	2199, 2200, 3040, 2352, 1506, 2973, 175, 2341, 2960, 1531,
	2339, 1716, 2211, 4140, 1760, 181, 1710, 2232, 4009, 1760,
	3282, 1506, 2626, 2652, 2618, 2249, 2714, 2188, 1507, 1508,
	1509, 1510, 1511, 1512, 1513, 1515, 1514, 1516, 1517, 1485,
	2617, 1486, 1487, 2406, 1488, 1507, 1508, 1509, 1510, 1511,
	1512, 1513, 1515, 1514, 1516, 1517, 2350, 2794, 1760, 2356,
	2357, 4007, 1760, 3305, 3304, 4004, 1760, 3302, 3303, 2436,
	1485, 2662, 1486, 1487, 112, 1485, 2575, 1486, 1487, 2574,
	106, 2661, 107, 3300, 3301, 111, 2410, 110, 2353, 3986,
	1760, 3300, 3299, 2466, 105, 105, 2351, 1488, 2914, 1760,
	2636, 3021, 106, 2386, 107, 1488, 166, 1871, 3002, 3918,
	2398, 2387, 2425, 2995, 2996, 3661, 2118, 2065, 1485, 2031,
	1486, 1487, 1485, 1488, 1486, 1487, 2888, 2887, 2906, 2885,
	1488, 2152, 1760, 2935, 1992, 1488, 3541, 1760, 1485, 1984,
	1486, 1487, 1109, 105, 166, 1974, 1485, 1970, 1486, 1487,
	1488, 1966, 1965, 2470, 1964, 2471, 2472, 2473, 2474, 1760,
	1760, 1871, 1870, 2935, 1059, 1780, 2438, 1277, 2460, 2480,
	1813, 1812, 2482, 2483, 2484, 2485, 1109, 2475, 2476, 2477,
	2478, 3267, 2461, 2374, 3571, 2399, 111, 2442, 3237, 3534,
	1760, 2636, 2392, 1485, 2393, 1486, 1487, 3531, 1760, 3567,
	2401, 2936, 161, 2999, 2978, 2914, 2496, 2883, 2913, 2464,
	2465, 2938, 1488, 2554, 3567, 3529, 1760, 2542, 2502, 2906,
	2423, 1488, 3492, 1760, 1484, 4092, 4064, 3490, 1760, 2447,
	2448, 2936, 2446, 1094, 1093, 2888, 2914, 3520, 3302, 2463,
	2462, 2636, 3486, 1760, 3210, 1488, 1485, 2449, 1486, 1487,
	1488, 2794, 3570, 2697, 1485, 2696, 1486, 1487, 1488, 2553,
	1484, 2536, 3286, 1488, 1047, 2512, 3290, 2418, 2539, 2914,
	1149, 3618, 1485, 3289, 1486, 1487, 1488, 2553, 2405, 1485,
	1910, 1486, 1487, 2497, 1485, 2547, 1486, 1487, 2550, 2493,
	2551, 2486, 2488, 2489, 1764, 2511, 3567, 2516, 2515, 1485,
	2377, 1486, 1487, 2152, 3483, 1760, 2090, 3291, 2074, 2017,
	1800, 154, 3287, 3589, 155, 97, 1131, 3288, 1148, 2497,
	1945, 2567, 1130, 2549, 2546, 2545, 4170, 2571, 3619, 3620,
	3621, 2572, 2573, 4111, 3950, 2568, 3377, 3481, 1760, 1767,
	3916, 3951, 3479, 1760, 3776, 167, 3634, 95, 3631, 2510,
	3477, 1760, 179, 3612, 3326, 3475, 1760, 3433, 1488, 1761,
	1763, 1485, 3432, 1486, 1487, 1873, 2495, 1488, 3473, 1760,
	1485, 1488, 1486, 1487, 3373, 2641, 1488, 1946, 1947, 1948,
	3328, 2969, 3324, 167, 1046, 1046, 1046, 2578, 3003, 2492,
	179, 2487, 2481, 187, 1485, 1488, 1486, 1487, 2479, 1485,
	1999, 1486, 1487, 1488, 1541, 1905, 1541, 1485, 1901, 1486,
	1487, 1488, 1485, 2390, 1486, 1487, 1716, 3417, 1869, 123,
	1488, 1714, 2656, 2970, 1221, 1485, 1712, 1486, 1487, 1713,
	1711, 187, 1715, 2611, 4226, 2970, 168, 173, 170, 176,
	177, 178, 180, 182, 183, 184, 185, 1488, 2067, 2353,
	3471, 1760, 186, 188, 189, 190, 1488, 2659, 4224, 3469,
	1760, 3581, 3582, 3467, 1760, 1488, 4198, 4072, 3465, 1760,
	3991, 3584, 1488, 2352, 168, 173, 170, 176, 177, 178,
	180, 182, 183, 184, 185, 1488, 3320, 2628, 1760, 1488,
	186, 188, 189, 190, 3319, 3463, 1760, 3318, 3237, 2982,
	1488, 2634, 2612, 3461, 1760, 4068, 3259, 1485, 1722, 1486,
	1487, 3260, 3459, 1760, 3587, 2068, 1485, 2642, 1486, 1487,
	1485, 1782, 1486, 1487, 3257, 1485, 3586, 1486, 1487, 3258,
	2645, 2646, 2647, 2648, 1488, 3622, 1777, 3256, 2119, 3457,
	1760, 3255, 3952, 2409, 1485, 681, 1486, 1487, 3455, 1760,
	1061, 1488, 1485, 2396, 1486, 1487, 1941, 2649, 1760, 2651,
	1485, 3575, 1486, 1487, 3453, 1760, 1488, 3215, 2654, 1485,
	2655, 1486, 1487, 1488, 3741, 3214, 3740, 3439, 1760, 1488,
	2710, 3415, 1760, 1488, 3261, 4030, 2923, 2924, 3623, 3624,
	3625, 3754, 1781, 2650, 2672, 1488, 1485, 3756, 1486, 1487,
	1488, 1062, 2016, 3227, 3229, 1485, 3563, 1486, 1487, 1942,
	1943, 1944, 3230, 1488, 1485, 3224, 1486, 1487, 1030, 744,
	1488, 1485, 2838, 1486, 1487, 3560, 2859, 1760, 3298, 3739,
	2953, 2657, 2974, 3559, 1485, 2604, 1486, 1487, 1485, 2195,
	1486, 1487, 2603, 2857, 1760, 1488, 2826, 1064, 2602, 1485,
	2708, 1486, 1487, 1187, 2870, 1065, 2196, 2620, 2621, 1760,
	1073, 1488, 2623, 2601, 2600, 2832, 1760, 2115, 2113, 2114,
	2599, 2624, 4205, 1046, 1072, 2809, 1760, 2149, 2873, 2598,
	2147, 1488, 1186, 1485, 3393, 1486, 1487, 2801, 1760, 1488,
	2969, 103, 2792, 1760, 1488, 3052, 1450, 2871, 2911, 2912,
	1485, 104, 1486, 1487, 3009, 2790, 1760, 2436, 131, 3565,
	1046, 2931, 2777, 1760, 105, 1485, 4240, 1486, 1487, 2874,
	2986, 2876, 1485, 103, 1486, 1487, 2420, 2421, 1485, 105,
	1486, 1487, 1485, 104, 1486, 1487, 2118, 2775, 1760, 2615,
	4147, 2910, 1488, 4049, 1485, 3946, 1486, 1487, 3297, 1485,
	2927, 1486, 1487, 2773, 1760, 2402, 3543, 2640, 2073, 1488,
	3213, 2891, 1485, 2072, 1486, 1487, 1488, 110, 3212, 1485,
	1488, 1486, 1487, 2771, 1760, 4015, 4014, 2900, 112, 2929,
	1488, 2769, 1760, 1728, 2861, 111, 2767, 1760, 1488, 111,
	3751, 110, 1488, 3994, 1485, 42, 1486, 1487, 3762, 2881,
	3760, 3759, 3752, 1488, 2928, 3632, 1771, 2930, 1488, 2889,
	1485, 2906, 1486, 1487, 3564, 2949, 3562, 3329, 2903, 2886,
	1721, 2537, 2956, 2958, 1888, 3007, 112, 3553, 1071, 2933,
	1485, 3725, 1486, 1487, 2765, 1760, 2885, 111, 1485, 3116,
	1486, 1487, 2937, 1485, 2698, 1486, 1487, 2940, 2502, 3018,
	2388, 2763, 1760, 1488, 1794, 2947, 1786, 2950, 2761, 1760,
	2190, 2972, 2759, 1760, 4227, 2191, 2975, 2976, 4228, 4227,
	116, 117, 2961, 4048, 4228, 1488, 112, 4036, 3598, 2087,
	2757, 1760, 10, 2085, 2755, 1760, 9, 111, 1488, 110,
	2971, 1485, 1488, 1486, 1487, 2753, 1760, 105, 1488, 3,
	2751, 1760, 1488, 2253, 2983, 2984, 2985, 2979, 1485, 2980,
	1486, 1487, 99, 1, 3015, 1485, 1488, 1486, 1487, 1485,
	2086, 1486, 1487, 8, 1038, 1893, 1453, 3004, 3005, 1485,
	1452, 1486, 1487, 3602, 3062, 3063, 1488, 1485, 4159, 1486,
	1487, 1485, 697, 1486, 1487, 2749, 1760, 2378, 1726, 3014,
	4199, 4155, 1485, 1488, 1486, 1487, 4156, 1485, 1985, 1486,
	1487, 1975, 3664, 2304, 1488, 3947, 3332, 2747, 1760, 2543,
	1488, 2919, 2922, 2923, 2924, 2920, 1488, 2921, 2925, 3041,
	2745, 1760, 1488, 2336, 2743, 1760, 1488, 3630, 3079, 2500,
	3536, 3060, 1488, 1139, 2738, 1760, 156, 2458, 1488, 3044,
	2459, 4124, 1485, 1488, 1486, 1487, 120, 1097, 2734, 1760,
	119, 1142, 1250, 2368, 3097, 3098, 3099, 3100, 3101, 3102,
	3103, 3104, 3105, 3106, 1485, 1488, 1486, 1487, 2732, 1760,
	1761, 2375, 3080, 2538, 3114, 3654, 2954, 1485, 2467, 1486,
	1487, 1485, 1819, 1486, 1487, 2725, 1760, 1485, 3016, 1486,
	1487, 1485, 1817, 1486, 1487, 1818, 2723, 1760, 1816, 1821,
	1820, 4096, 3401, 3923, 2699, 1485, 3499, 1486, 1487, 3636,
	2078, 2400, 734, 1722, 3532, 1488, 2926, 728, 3498, 194,
	1808, 1787, 3118, 2071, 3494, 1485, 1488, 1486, 1487, 1181,
	3430, 3064, 687, 3306, 2576, 3429, 693, 1538, 3174, 3081,
	3050, 2066, 1485, 3051, 1486, 1487, 3211, 2941, 1091, 1083,
	2389, 2875, 1090, 1485, 2994, 1486, 1487, 3421, 3924, 1485,
	2247, 1486, 1487, 3061, 3245, 1485, 3557, 1486, 1487, 3223,
	3225, 1485, 2893, 1486, 1487, 1485, 3228, 1486, 1487, 3181,
	3221, 1485, 3192, 1486, 1487, 4029, 3183, 1485, 3753, 1486,
	1487, 4109, 1485, 2951, 1486, 1487, 2436, 1488, 1783, 3519,
	3107, 2341, 1488, 2341, 2339, 2671, 2339, 3419, 3154, 2185,
	1528, 759, 1488, 2435, 1485, 930, 1486, 1487, 1769, 2965,
	3244, 1488, 87, 2514, 3720, 2436, 2436, 2436, 2436, 2436,
	2105, 3164, 3165, 3166, 3167, 3168, 757, 756, 754, 2877,
	2330, 2331, 2332, 2333, 2334, 2436, 2907, 3192, 2436, 1492,
	1491, 3191, 965, 3182, 3266, 3184, 2865, 2355, 3249, 1795,
	2358, 2359, 2918, 1488, 1485, 2916, 1486, 1487, 3219, 2915,
	2613, 2443, 3203, 3583, 2027, 1485, 3579, 1486, 1487, 3204,
	3206, 3208, 1488, 4151, 2437, 3209, 2433, 3216, 3218, 2855,
	2884, 916, 915, 2438, 2854, 766, 2376, 758, 3231, 3232,
	748, 979, 1488, 914, 2850, 913, 3359, 1488, 3360, 3217,
	3024, 3349, 3374, 2849, 3026, 3250, 2952, 3268, 3253, 1049,
	3269, 3357, 2438, 2438, 2438, 2438, 2438, 3248, 106, 3262,
	107, 1488, 3270, 3251, 3252, 1050, 3254, 1051, 1488, 3370,
	1469, 1745, 2438, 1488, 3276, 2438, 1485, 1748, 1486, 1487,
	2397, 1485, 3309, 1486, 1487, 2848, 1488, 1110, 3398, 3308,
	3307, 1485, 4055, 1486, 1487, 2639, 3427, 3310, 3311, 1744,
	1485, 4062, 1486, 1487, 2847, 3340, 1488, 3648, 3321, 3000,
	2530, 69, 46, 1488, 3361, 3358, 3362, 1488, 4024, 3351,
	2502, 4093, 908, 905, 2846, 3722, 1488, 3723, 3234, 2845,
	3368, 3724, 3177, 3178, 3330, 4075, 4076, 904, 4077, 2242,
	1463, 1488, 1485, 1460, 1486, 1487, 4172, 2080, 98, 1488,
	36, 35, 3389, 2836, 34, 3388, 3386, 3240, 1488, 33,
	2835, 1485, 3240, 1486, 1487, 2834, 32, 3396, 26, 3403,
	3404, 25, 3405, 24, 23, 3407, 22, 3409, 2833, 3411,
	3406, 1485, 29, 1486, 1487, 19, 1485, 21, 1486, 1487,
	20, 18, 3422, 3423, 3424, 3425, 3426, 3343, 2830, 4194,
	4239, 125, 55, 52, 50, 2825, 133, 132, 53, 2818,
	1485, 49, 1486, 1487, 1224, 47, 96, 1485, 2817, 1486,
	1487, 31, 1485, 30, 1486, 1487, 1541, 17, 16, 15,
	1541, 14, 2658, 2816, 13, 1485, 2663, 1486, 1487, 12,
	11, 2815, 7, 6, 39, 38, 3544, 3331, 3546, 37,
	2814, 28, 27, 40, 4, 1485, 3514, 1486, 1487, 2666,
	2987, 2667, 1485, 3518, 1486, 1487, 1485, 2675, 1486, 1487,
	2532, 2677, 2678, 0, 0, 1485, 0, 1486, 1487, 0,
	2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693,
	1485, 2695, 1486, 1487, 3243, 0, 0, 0, 1485, 3397,
	1486, 1487, 0, 0, 0, 0, 0, 1485, 2436, 1486,
	1487, 3549, 0, 0, 2701, 2702, 2703, 2704, 0, 2706,
	2707, 3596, 2709, 3554, 3561, 3545, 2711, 3547, 0, 0,
	2716, 2717, 0, 2718, 0, 1488, 2721, 2722, 2724, 2726,
	2727, 2728, 2729, 2730, 2731, 2733, 2735, 2736, 2737, 2739,
	3352, 2741, 2742, 2744, 2746, 2748, 2750, 2752, 2754, 2756,
	2758, 2760, 2762, 2764, 2766, 2768, 2770, 2772, 2774, 2776,
	2778, 2779, 2780, 3551, 2782, 3588, 2784, 746, 2786, 2787,
	3591, 2789, 2791, 2793, 3361, 3358, 3362, 2796, 3597, 3590,
	3521, 2800, 3523, 3524, 3525, 2805, 2806, 2807, 2808, 3585,
	3566, 1488, 0, 0, 1729, 2438, 3578, 1488, 2819, 2820,
	2821, 2822, 2823, 2824, 3658, 3659, 2828, 2829, 3607, 3608,
	3613, 0, 3615, 0, 2831, 3592, 3593, 2813, 1488, 2837,
	0, 0, 0, 0, 2840, 2841, 2842, 2843, 2844, 0,
	1488, 3391, 3392, 0, 1488, 2851, 2852, 0, 2853, 0,
	1488, 2856, 2858, 2400, 1488, 2860, 0, 0, 0, 0,
	0, 0, 0, 679, 0, 2872, 0, 0, 1488, 0,
	3641, 0, 1488, 0, 3645, 3646, 3647, 1506, 1488, 0,
	0, 3660, 0, 1033, 1485, 2890, 1486, 1487, 1070, 1488,
	0, 1076, 1076, 2812, 0, 0, 2679, 0, 0, 2811,
	0, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1514,
	1516, 1517, 0, 2694, 0, 1488, 0, 0, 0, 0,
	2810, 1488, 0, 0, 0, 3676, 0, 1105, 0, 0,
	0, 0, 2804, 1488, 3687, 0, 2803, 0, 0, 0,
	1488, 0, 2802, 0, 1488, 0, 2799, 0, 0, 0,
	1485, 1488, 1486, 1487, 0, 0, 1485, 0, 1486, 1487,
	2798, 0, 0, 1488, 2797, 0, 0, 1488, 0, 0,
	2795, 3728, 0, 3729, 3730, 3731, 1488, 1485, 0, 1486,
	1487, 2788, 1488, 3738, 0, 0, 3745, 0, 3747, 1485,
	0, 1486, 1487, 1485, 1488, 1486, 1487, 3718, 0, 1485,
	3748, 1486, 1487, 1485, 0, 1486, 1487, 2785, 0, 0,
	0, 3244, 0, 2783, 87, 0, 3244, 1485, 0, 1486,
	1487, 1485, 0, 1486, 1487, 2781, 0, 1485, 0, 1486,
	1487, 0, 2740, 0, 0, 0, 2720, 0, 1485, 0,
	1486, 1487, 0, 2719, 0, 0, 0, 3749, 2149, 3778,
	3681, 2147, 3758, 3768, 3757, 2715, 0, 3770, 0, 2713,
	0, 3765, 0, 3767, 1485, 0, 1486, 1487, 2705, 0,
	1485, 0, 1486, 1487, 2676, 3637, 3638, 0, 0, 0,
	0, 3930, 1485, 2178, 1486, 1487, 2670, 0, 0, 1485,
	3782, 1486, 1487, 1485, 0, 1486, 1487, 0, 0, 0,
	1485, 0, 1486, 1487, 0, 0, 0, 0, 2376, 0,
	0, 42, 1485, 0, 1486, 1487, 1485, 0, 1486, 1487,
	3922, 0, 3921, 0, 0, 1485, 0, 1486, 1487, 3937,
	0, 1485, 0, 1486, 1487, 0, 3949, 0, 3920, 3942,
	0, 3941, 0, 1485, 0, 1486, 1487, 3779, 3780, 0,
	0, 0, 0, 0, 3988, 3989, 0, 0, 3092, 3093,
	3094, 3095, 3096, 3772, 0, 0, 0, 3746, 0, 0,
	3932, 3933, 3934, 0, 0, 0, 2149, 3992, 3111, 2147,
	0, 0, 2170, 2159, 2160, 2161, 2162, 2172, 2163, 2164,
	2165, 2177, 2173, 2166, 2167, 2174, 2175, 2176, 2168, 2169,
	2171, 0, 0, 0, 0, 0, 0, 3995, 0, 4037,
	3244, 3998, 0, 0, 3774, 0, 3240, 0, 0, 0,
	0, 0, 0, 0, 1559, 1560, 1561, 1562, 1563, 1564,
	1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574,
	1575, 1576, 1577, 1579, 1580, 1581, 1582, 1583, 1584, 1585,
	1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595,
	1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605,
	1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615,
	1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625,
	1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635,
	1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645,
	1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655,
	1656, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666,
	1667, 1668, 1669, 1670, 1671, 1672, 1673, 1679, 1680, 1681,
	1682, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704,
	1705, 1706, 1707, 1708, 1709, 3243, 3993, 4038, 4022, 4012,
	3243, 4021, 0, 1488, 0, 0, 4018, 3082, 4020, 4056,
	0, 0, 2919, 2922, 2923, 2924, 2920, 0, 2921, 2925,
	0, 3925, 3581, 3582, 0, 0, 0, 87, 0, 1750,
	3246, 0, 0, 0, 0, 0, 0, 4041, 0, 1750,
	0, 4040, 0, 1758, 0, 0, 1751, 0, 3264, 0,
	0, 0, 0, 1758, 4058, 4045, 1751, 0, 0, 0,
	4061, 0, 0, 0, 0, 3929, 0, 0, 0, 0,
	4063, 2394, 2395, 1757, 1755, 1756, 1752, 0, 1753, 0,
	0, 1746, 1747, 1757, 1755, 1756, 1752, 0, 1753, 0,
	0, 0, 0, 0, 0, 2665, 0, 0, 0, 0,
	0, 1754, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1754, 0, 0, 0, 4081, 0, 0, 4082, 0,
	0, 1225, 0, 1231, 42, 4106, 0, 0, 0, 0,
	87, 0, 0, 0, 0, 0, 0, 0, 4091, 3156,
	0, 3158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4100, 1485, 0, 1486, 1487, 0, 3169, 3170, 3171,
	3172, 0, 0, 4042, 0, 1489, 4112, 0, 4137, 4115,
	4123, 4120, 4117, 4110, 4116, 0, 3395, 3949, 4126, 4114,
	4119, 4118, 0, 0, 0, 1459, 0, 0, 4145, 0,
	0, 0, 0, 0, 3243, 0, 1547, 4150, 3412, 3413,
	0, 3414, 3416, 3418, 0, 4168, 0, 0, 0, 0,
	0, 0, 4158, 4163, 0, 0, 0, 0, 0, 0,
	0, 4178, 4176, 0, 0, 4137, 0, 42, 4189, 3431,
	0, 0, 0, 0, 3434, 0, 3436, 3437, 3438, 3440,
	3441, 3442, 3443, 3444, 3445, 3446, 3447, 3448, 3449, 3450,
	3451, 3452, 3454, 3456, 3458, 3460, 3462, 3464, 3466, 3468,
	3470, 3472, 3474, 3476, 3478, 3480, 3482, 3484, 3485, 3487,
	3488, 3489, 3491, 4209, 4212, 3493, 4193, 3495, 3496, 3497,
	2027, 4221, 3501, 3502, 3503, 3504, 3505, 3506, 3507, 3508,
	3509, 3510, 3511, 2149, 4222, 4225, 2147, 4223, 4233, 4219,
	4218, 3517, 4137, 4047, 4208, 3522, 4188, 4102, 4107, 3526,
	3527, 4241, 3528, 3530, 0, 3533, 3535, 4249, 3537, 3538,
	3539, 3540, 4247, 0, 0, 3240, 0, 0, 3548, 0,
	1028, 0, 0, 2343, 0, 0, 1029, 4066, 4258, 4259,
	3989, 4257, 0, 0, 0, 0, 2148, 0, 0, 0,
	0, 2149, 4256, 4054, 2147, 0, 0, 0, 0, 0,
	0, 0, 0, 3572, 3573, 0, 0, 3577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4184, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4101, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 1025, 1026, 0, 0, 0,
	0, 0, 3652, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1785,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3671, 0, 0,
	3675, 0, 0, 0, 1797, 0, 0, 1874, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1814, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3688, 0, 0, 4206, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1722, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 961, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3711, 0,
	0, 0, 0, 0, 0, 0, 1955, 0, 0, 0,
	0, 3719, 0, 0, 0, 0, 0, 0, 3726, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2032, 0, 0, 0, 0,
	197, 2000, 0, 197, 0, 0, 0, 732, 0, 0,
	0, 0, 738, 0, 0, 0, 0, 0, 2028, 0,
	0, 0, 0, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2039, 0, 0, 0, 0, 197,
	0, 2043, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 0,
	0, 0, 0, 0, 0, 0, 738, 197, 738, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3938, 0, 0,
	0, 0, 0, 0, 0, 0, 3945, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3955, 3956, 3957, 0,
	3959, 0, 3960, 3961, 0, 0, 0, 0, 3964, 3965,
	3966, 3967, 3968, 3969, 3970, 3971, 3972, 3973, 3974, 3975,
	3976, 3977, 3978, 3979, 3980, 3981, 3982, 3983, 3984, 3985,
	0, 3987, 3990, 0, 0, 0, 3709, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3999, 4000, 4001,
	4002, 4003, 4005, 4006, 4008, 4010, 4011, 4013, 0, 0,
	0, 4017, 0, 0, 0, 4019, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4046, 0, 2100, 2101, 2102, 2103, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2093, 0, 0, 2116, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2155, 2156, 0, 0, 0, 0, 2179,
	0, 0, 2183, 2184, 0, 0, 0, 2189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208,
	2209, 2210, 0, 2212, 0, 0, 0, 2234, 2235, 2236,
	2237, 2238, 2239, 2240, 2241, 2243, 0, 2248, 0, 2250,
	2251, 2252, 0, 2254, 2255, 2256, 0, 2258, 2259, 2260,
	2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270,
	2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280,
	2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290,
	2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300,
	2301, 2302, 2303, 2307, 2308, 2309, 2310, 2311, 2312, 2313,
	2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323,
	2324, 2325, 2326, 2327, 2328, 2329, 0, 0, 0, 0,
	0, 2335, 0, 2337, 4028, 2344, 2345, 2346, 2347, 2348,
	2349, 0, 0, 0, 0, 0, 0, 4071, 0, 0,
	0, 0, 0, 0, 2360, 2361, 2362, 2363, 2364, 2365,
	2366, 2367, 0, 2369, 2370, 2371, 2372, 2373, 0, 0,
	0, 4086, 0, 0, 0, 0, 0, 4089, 0, 4090,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4105, 1076, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 4131, 4132,
	0, 0, 0, 0, 0, 0, 0, 4192, 1892, 2416,
	2417, 0, 4139, 4141, 4143, 0, 1837, 0, 0, 0,
	131, 0, 153, 0, 0, 0, 0, 0, 0, 0,
	4149, 0, 192, 0, 0, 2455, 174, 0, 0, 0,
	0, 2422, 4171, 0, 0, 0, 0, 0, 0, 2426,
	0, 2429, 0, 0, 2093, 131, 0, 153, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	164, 174, 0, 0, 0, 0, 152, 0, 0, 0,
	4190, 0, 1722, 0, 0, 0, 0, 0, 0, 0,
	0, 197, 0, 197, 0, 0, 171, 2498, 0, 172,
	0, 0, 0, 0, 0, 164, 0, 0, 0, 0,
	0, 152, 0, 0, 4213, 4215, 4217, 0, 0, 0,
	0, 1896, 1897, 163, 162, 191, 0, 0, 0, 0,
	738, 171, 738, 738, 172, 0, 0, 0, 4070, 0,
	0, 0, 0, 0, 0, 0, 4080, 4238, 0, 0,
	0, 0, 0, 0, 738, 197, 140, 141, 163, 162,
	191, 0, 0, 0, 0, 4250, 4251, 0, 0, 0,
	0, 0, 0, 1824, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1533, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1722, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 1898, 160,
	0, 1895, 0, 158, 159, 0, 0, 0, 0, 0,
	175, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	0, 0, 0, 0, 2093, 0, 0, 1838, 0, 0,
	0, 2588, 157, 138, 160, 145, 137, 0, 158, 159,
	0, 0, 2609, 2610, 0, 175, 2614, 0, 0, 0,
	0, 0, 0, 0, 181, 146, 0, 0, 2619, 0,
	0, 0, 0, 0, 0, 2622, 0, 0, 0, 149,
	147, 142, 143, 144, 148, 0, 0, 0, 0, 0,
	0, 139, 0, 0, 0, 0, 0, 0, 0, 0,
	150, 2625, 0, 1851, 1854, 1855, 1856, 1857, 1858, 1859,
	0, 1860, 1861, 1863, 1864, 1862, 1865, 1866, 1839, 1840,
	1841, 1842, 1822, 1823, 1852, 0, 1825, 0, 1826, 1827,
	1828, 1829, 1830, 1831, 1832, 1833, 1834, 0, 0, 1835,
	1843, 1844, 1845, 1846, 0, 1847, 1848, 1849, 1850, 0,
	0, 1836, 0, 0, 0, 0, 0, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 166, 0, 2674, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2680, 2681, 2682, 2683, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 197, 0, 0, 0,
	738, 738, 0, 0, 0, 0, 0, 1837, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 197,
	1547, 0, 0, 0, 161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 738, 0, 0, 197, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 738, 0, 0, 161,
	0, 0, 0, 197, 0, 0, 0, 738, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 738, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	738, 0, 738, 0, 0, 0, 0, 0, 0, 0,
	738, 0, 0, 1533, 738, 0, 0, 738, 738, 738,
	738, 0, 738, 0, 738, 738, 1853, 738, 738, 738,
	738, 738, 738, 154, 0, 0, 155, 0, 0, 0,
	1533, 738, 738, 1533, 738, 1533, 197, 738, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1824, 0, 197, 167, 154, 0,
	0, 155, 0, 0, 179, 0, 0, 0, 0, 738,
	0, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 738, 0, 0, 738, 1785, 197, 197, 0,
	0, 0, 167, 0, 0, 0, 0, 0, 0, 179,
	0, 0, 0, 0, 197, 187, 0, 0, 0, 0,
	0, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 738,
	0, 0, 0, 0, 0, 0, 2932, 0, 1838, 0,
	187, 0, 0, 0, 0, 0, 0, 0, 168, 173,
	170, 176, 177, 178, 180, 182, 183, 184, 185, 0,
	0, 0, 0, 0, 186, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 168, 173, 170, 176, 177, 178, 180,
	182, 183, 184, 185, 0, 0, 0, 0, 0, 186,
	188, 189, 190, 0, 1851, 1854, 1855, 1856, 1857, 1858,
	1859, 2981, 1860, 1861, 1863, 1864, 1862, 1865, 1866, 1839,
	1840, 1841, 1842, 1822, 1823, 1852, 0, 1825, 0, 1826,
	1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 0, 0,
	1835, 1843, 1844, 1845, 1846, 0, 1847, 1848, 1849, 1850,
	0, 0, 1836, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3029, 3030, 3031,
	3032, 3033, 3034, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 738,
	738, 0, 0, 0, 0, 0, 2093, 3045, 0, 3057,
	0, 0, 0, 0, 738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 197, 0, 0, 0, 0,
	0, 3053, 0, 0, 0, 0, 3083, 3084, 3085, 0,
	0, 3087, 0, 0, 3089, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3108, 3109, 3110, 0, 0, 0,
	0, 0, 0, 3115, 0, 738, 0, 0, 3117, 0,
	0, 3119, 3120, 3121, 0, 1533, 917, 3122, 3123, 0,
	0, 3124, 0, 3125, 0, 0, 0, 0, 0, 0,
	3126, 0, 3127, 1533, 0, 0, 3128, 0, 3129, 0,
	0, 3130, 0, 3131, 0, 3132, 0, 3133, 0, 3134,
	0, 3135, 0, 3136, 0, 3137, 0, 3138, 0, 3139,
	0, 3140, 0, 3141, 0, 3142, 0, 3143, 0, 3144,
	0, 3145, 0, 3146, 0, 3147, 0, 0, 0, 3148,
	0, 3149, 0, 3150, 736, 0, 3151, 1853, 3152, 0,
	3153, 0, 2307, 3155, 0, 0, 3157, 0, 0, 3159,
	3160, 3161, 3162, 0, 0, 0, 0, 3163, 2307, 2307,
	2307, 2307, 2307, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3173, 0, 0, 0, 0, 0, 0,
	0, 3186, 0, 0, 3190, 0, 0, 0, 1101, 0,
	1108, 0, 0, 3193, 3194, 3195, 3196, 3197, 3198, 0,
	0, 0, 3199, 3200, 0, 3201, 0, 3202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2354,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1076, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 86, 44, 45, 88, 0, 960, 0,
	0, 0, 0, 0, 3235, 0, 0, 0, 0, 0,
	0, 0, 92, 0, 197, 0, 48, 76, 77, 738,
	74, 78, 0, 0, 0, 0, 0, 0, 0, 3265,
	0, 0, 75, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 97, 0, 0, 0, 0, 197,
	0, 0, 738, 0, 0, 0, 0, 0, 0, 0,
	715, 0, 0, 0, 62, 0, 737, 0, 0, 0,
	0, 197, 0, 0, 0, 738, 95, 0, 2354, 197,
	0, 197, 0, 197, 197, 0, 0, 0, 0, 3327,
	0, 0, 0, 0, 0, 0, 0, 0, 738, 0,
	0, 0, 0, 0, 0, 0, 0, 3317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	737, 0, 737, 0, 0, 0, 83, 0, 0, 0,
	0, 0, 0, 3355, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3369, 0, 0,
	0, 0, 0, 0, 0, 0, 738, 0, 0, 0,
	0, 0, 0, 738, 738, 738, 197, 0, 3387, 0,
	0, 3390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 738, 0, 3420, 0, 0, 0,
	738, 738, 0, 0, 738, 0, 738, 0, 0, 0,
	0, 0, 738, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3435, 0, 0, 0, 0, 0,
	0, 51, 54, 57, 56, 59, 0, 73, 0, 0,
	82, 79, 0, 0, 0, 0, 0, 738, 0, 0,
	0, 0, 738, 0, 0, 0, 738, 738, 0, 0,
	0, 0, 0, 0, 61, 91, 90, 0, 0, 71,
	72, 58, 0, 0, 0, 0, 0, 80, 81, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 197, 0, 0, 0, 0, 0,
	0, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 197, 0, 0, 197, 0, 197, 0,
	0, 63, 64, 0, 65, 66, 67, 68, 197, 0,
	0, 0, 0, 0, 0, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3550, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 197, 0, 0, 0, 0, 0, 0, 197, 0,
	0, 0, 0, 738, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1028, 0, 0, 0, 60, 0,
	1029, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2148, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3611, 3633, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1533, 0, 2354,
	0, 3626, 0, 3627, 3628, 3629, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3657, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 89, 985,
	986, 987, 988, 989, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015,
	1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025,
	1026, 0, 0, 3677, 0, 3678, 0, 3679, 0, 3680,
	0, 0, 0, 0, 0, 0, 0, 3683, 3684, 0,
	0, 0, 1289, 0, 1289, 1289, 0, 3689, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3690, 0, 3691, 0, 3692, 1458, 3693, 0, 3694,
	0, 3695, 0, 3696, 0, 3697, 0, 3698, 0, 3699,
	0, 3700, 0, 3701, 0, 3702, 0, 3703, 94, 3704,
	0, 3705, 0, 0, 3706, 0, 0, 0, 3707, 0,
	3708, 0, 0, 0, 0, 0, 3710, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3727, 0,
	0, 0, 0, 0, 0, 0, 0, 3732, 0, 3733,
	3734, 0, 3735, 0, 3736, 0, 0, 0, 0, 3737,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 0, 0, 0, 3766, 0, 0, 0,
	197, 0, 0, 0, 0, 0, 0, 0, 0, 3775,
	0, 738, 3777, 0, 0, 70, 0, 0, 0, 0,
	0, 0, 0, 0, 3781, 0, 0, 738, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3917, 0, 0, 0, 737, 1444, 737, 737, 0, 0,
	0, 197, 0, 0, 0, 0, 197, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 737, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1532, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 738, 0, 0, 0, 0,
	0, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 738, 0, 0, 0, 0, 0, 0, 738,
	0, 0, 0, 738, 738, 0, 0, 0, 738, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4027,
	0, 0, 1732, 1733, 1533, 738, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 197, 197, 197,
	197, 197, 197, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1791, 0, 0, 197, 197, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1809, 918,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1868,
	0, 197, 0, 0, 0, 0, 0, 0, 0, 1877,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 738, 0, 0,
	0, 0, 1101, 0, 1904, 0, 0, 0, 0, 0,
	0, 0, 1913, 0, 0, 195, 1915, 0, 680, 1918,
	1919, 1921, 1921, 0, 1921, 0, 1921, 1921, 0, 1930,
	1921, 1921, 1921, 1921, 1921, 0, 0, 0, 680, 0,
	0, 0, 0, 1950, 1951, 0, 1101, 738, 0, 1956,
	0, 0, 0, 0, 1056, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1077, 1077, 0, 0, 0, 0, 0,
	0, 1998, 680, 0, 737, 737, 0, 0, 0, 0,
	0, 0, 0, 0, 2020, 0, 0, 2024, 0, 0,
	0, 0, 0, 0, 0, 0, 4069, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 737, 4067, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	737, 1289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 737, 4083, 0, 0, 4084, 0, 4085, 0, 0,
	0, 737, 738, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 737, 0, 737, 0, 0, 0,
	0, 0, 0, 0, 737, 0, 0, 1532, 737, 0,
	0, 737, 737, 737, 737, 738, 737, 0, 737, 737,
	0, 737, 737, 737, 737, 737, 737, 0, 0, 0,
	197, 0, 0, 738, 1532, 737, 737, 1532, 737, 1532,
	0, 737, 0, 0, 0, 0, 0, 0, 0, 738,
	0, 0, 0, 1533, 0, 0, 738, 738, 1533, 197,
	197, 197, 197, 197, 0, 0, 0, 0, 0, 4169,
	0, 197, 0, 737, 0, 0, 0, 197, 0, 197,
	0, 0, 197, 197, 197, 0, 737, 0, 0, 737,
	0, 0, 0, 0, 0, 0, 0, 0, 4185, 0,
	4186, 0, 4187, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1289, 1289, 0, 0, 0, 0, 197, 0, 0,
	0, 0, 0, 737, 0, 0, 2081, 0, 0, 0,
	738, 0, 0, 1533, 0, 0, 95, 0, 738, 1028,
	0, 0, 0, 197, 966, 1029, 980, 981, 982, 967,
	0, 0, 968, 969, 0, 970, 0, 197, 0, 0,
	0, 0, 4236, 0, 4237, 0, 0, 0, 0, 0,
	0, 975, 0, 983, 984, 0, 0, 0, 197, 0,
	0, 197, 0, 0, 0, 0, 0, 2143, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3363, 3364, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
	1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020,
	1021, 1022, 1023, 1024, 1025, 1026, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 737, 737, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 737, 738,
	0, 0, 0, 0, 0, 0, 0, 3365, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 197, 0, 0, 0,
	0, 1289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 737,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1532,
	0, 0, 0, 0, 0, 0, 0, 0, 2157, 0,
	0, 0, 0, 0, 0, 0, 0, 1532, 3366, 3367,
	0, 2391, 197, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 197, 0, 0, 2404, 0, 680, 0, 680, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 197, 0, 197, 197, 197, 0, 1791, 0, 0,
	1289, 0, 0, 738, 738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1101, 0, 0, 931, 0, 0, 0, 0, 0, 935,
	0, 0, 0, 932, 933, 0, 0, 0, 934, 936,
	680, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 738, 738, 738, 738, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1534, 0,
	0, 0, 0, 737, 0, 0, 0, 0, 1108, 0,
	0, 0, 0, 0, 0, 2519, 2520, 2521, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1101, 0, 0, 0,
	0, 0, 1108, 1913, 0, 0, 1913, 0, 1913, 0,
	0, 0, 0, 737, 2552, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 737, 0, 0, 1101,
	0, 0, 0, 0, 2143, 0, 0, 0, 2143, 2143,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 737,
	0, 0, 737, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 737, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 738,
	0, 738, 0, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1533, 0, 0, 0, 197, 0, 0, 738,
	0, 738, 0, 0, 0, 0, 0, 0, 0, 0,
	737, 0, 0, 0, 0, 0, 0, 737, 737, 737,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2630, 0, 0, 737, 0,
	0, 0, 0, 0, 737, 737, 0, 0, 737, 0,
	737, 0, 0, 0, 0, 0, 737, 0, 0, 738,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 0, 0, 738, 0, 0, 0, 0,
	0, 680, 0, 0, 0, 0, 0, 0, 738, 0,
	0, 737, 0, 0, 0, 0, 737, 0, 0, 0,
	737, 737, 0, 0, 1056, 0, 0, 0, 0, 0,
	0, 1289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 680,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 680, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 738, 0, 0, 0, 0, 0, 0,
	738, 0, 738, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1534, 0,
	0, 738, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 737, 0, 0,
	0, 0, 0, 0, 0, 1534, 0, 0, 1534, 0,
	1534, 680, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1972, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 680, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2026, 680, 0, 0, 0, 0, 0, 0,
	0, 1532, 0, 737, 0, 0, 0, 0, 0, 680,
	0, 0, 0, 0, 0, 0, 680, 0, 0, 0,
	0, 0, 0, 0, 0, 2052, 2053, 680, 680, 680,
	680, 680, 680, 680, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 738, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2878, 0, 0, 0, 197, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2895,
	0, 0, 0, 0, 0, 738, 197, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 738, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 738, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1533, 738, 0, 738, 0, 0, 2977, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 738,
	2354, 0, 0, 0, 2404, 0, 0, 0, 0, 0,
	0, 3001, 0, 0, 0, 1913, 1913, 0, 0, 0,
	3006, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	680, 0, 0, 0, 0, 0, 0, 3017, 0, 0,
	197, 738, 0, 0, 0, 737, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 737, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 738, 0, 0, 0, 0, 0, 0, 0, 0,
	1534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 738, 2945, 0, 1534, 0,
	197, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 738, 0, 738, 0, 0, 2143,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 737,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2143,
	0, 0, 0, 0, 0, 0, 737, 0, 0, 0,
	0, 0, 0, 737, 0, 0, 0, 737, 737, 0,
	0, 0, 737, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1532, 737,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2026, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1972,
	0, 0, 0, 0, 3175, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1077, 1289, 0, 0, 0,
	0, 737, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1056, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1921, 0, 0,
	0, 0, 0, 0, 0, 0, 680, 0, 0, 0,
	0, 0, 0, 2026, 680, 3220, 680, 0, 680, 2445,
	0, 737, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1289, 0, 0, 0, 0, 0, 0, 3247, 1921,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1101, 0, 0, 0, 0, 0, 0, 0,
	2404, 0, 0, 0, 0, 0, 737, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 737, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 737,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 737, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 737, 0, 0, 0, 1532, 0, 680,
	737, 737, 1532, 0, 0, 0, 680, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 680, 680, 0,
	0, 680, 0, 2616, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 680, 0, 0, 0, 0, 0, 0,
	680, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3313, 0, 0, 680, 0, 0, 0,
	0, 0, 0, 2627, 0, 0, 0, 0, 0, 0,
	0, 1868, 0, 0, 737, 0, 0, 1532, 0, 0,
	0, 0, 737, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3394, 0, 0, 0, 0,
	0, 0, 1534, 0, 2026, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2404, 2404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 737, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3665, 3666, 3667, 3668, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3601, 0, 0, 680, 0, 0,
	0, 0, 0, 0, 0, 1972, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 737, 737, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 680, 0, 0, 0,
	0, 680, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3743, 0, 3743, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 737, 737, 737, 737,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3771, 0, 3773, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 680, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3940, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1534,
	1289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 680, 680, 680, 680, 680, 680, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 680, 680, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 737, 0, 737, 680, 0, 0, 0,
	0, 0, 0, 0, 0, 3743, 0, 0, 0, 0,
	0, 0, 3743, 0, 3743, 0, 1532, 0, 0, 0,
	0, 0, 0, 737, 0, 737, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 737, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 737,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 737, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2404, 0, 0, 0, 737, 0, 0,
	0, 0, 0, 0, 737, 0, 737, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2404, 0, 0,
	0, 0, 0, 0, 0, 737, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1077, 0, 680, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1534, 0,
	0, 0, 0, 1534, 680, 680, 680, 680, 680, 0,
	0, 0, 0, 4087, 0, 0, 3263, 0, 0, 0,
	0, 0, 1972, 4095, 680, 0, 0, 680, 3271, 2026,
	0, 0, 0, 0, 2404, 0, 4103, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1289, 1289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 680, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1534, 0,
	0, 0, 0, 0, 0, 737, 0, 0, 680, 0,
	0, 0, 0, 4153, 0, 0, 0, 0, 0, 0,
	0, 0, 680, 0, 3803, 3805, 3804, 3870, 3871, 3872,
	3873, 3874, 3875, 3876, 3806, 3807, 808, 0, 0, 737,
	0, 0, 0, 680, 0, 0, 680, 0, 0, 0,
	0, 0, 0, 4095, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1868, 0, 4153, 0,
	0, 0, 0, 0, 0, 737, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 737, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1532, 737, 0, 737, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 737, 737, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 737, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 680, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 737, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 737,
	0, 0, 0, 0, 0, 0, 0, 680, 3811, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 737, 0,
	737, 0, 0, 3819, 3820, 0, 0, 3895, 3894, 3893,
	0, 0, 3891, 3892, 3890, 0, 680, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 680, 0, 680, 680,
	680, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3896, 931,
	0, 784, 785, 3897, 3898, 935, 3899, 787, 788, 932,
	933, 0, 782, 786, 934, 936, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3800, 3801, 3802, 3808, 3809, 3810, 3821, 3868, 3869,
	3877, 3879, 887, 3878, 3880, 3881, 3882, 3885, 3886, 3887,
	3888, 3883, 3884, 3889, 3783, 3787, 3784, 3785, 3786, 3798,
	3788, 3789, 3790, 3791, 3792, 3793, 3794, 3795, 3796, 3797,
	3799, 3900, 3901, 3902, 3903, 3904, 3905, 3814, 3818, 3817,
	3815, 3816, 3812, 3813, 3840, 3839, 3841, 3842, 3843, 3844,
	3845, 3846, 3848, 3847, 3849, 3850, 3851, 3852, 3853, 3854,
	3822, 3823, 3826, 3827, 3825, 3824, 3828, 3837, 3838, 3829,
	3830, 3831, 3832, 3833, 3834, 3836, 3835, 3855, 3856, 3857,
	3858, 3859, 3861, 3860, 3864, 3865, 3863, 3862, 3867, 3866,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 937, 0, 938, 0, 0, 942, 0,
	0, 0, 944, 943, 0, 945, 907, 906, 0, 0,
	939, 940, 0, 941, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1972, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1534, 0, 0,
	0, 1972, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3906, 3907,
	3908, 3909, 3910, 3911, 3912, 3913, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1972, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1972, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 680, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4125, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1972, 0, 0, 399, 0,
	0, 0, 0, 0, 0, 1427, 1411, 531, 0, 1353,
	1430, 1321, 1340, 1440, 1343, 1346, 1390, 1299, 1368, 419,
	1337, 1325, 1294, 1332, 1295, 1323, 1355, 273, 1320, 1413,
	1372, 1429, 369, 270, 1301, 1292, 206, 508, 1326, 433,
	1342, 205, 1392, 490, 255, 380, 377, 586, 285, 276,
	272, 252, 320, 388, 431, 521, 425, 1436, 373, 1378,
	0, 500, 404, 0, 0, 2026, 1417, 1416, 1347, 1357,
	1419, 1366, 1404, 1352, 1391, 1309, 1377, 1431, 1338, 1387,
	1432, 326, 250, 328, 204, 416, 501, 289, 0, 0,
	0, 0, 4127, 510, 962, 0, 0, 0, 0, 4128,
	0, 0, 0, 0, 240, 0, 0, 247, 0, 0,
	0, 354, 363, 362, 342, 343, 345, 347, 353, 360,
	366, 339, 348, 1334, 1384, 612, 1426, 1335, 1386, 268,
	324, 275, 267, 583, 1437, 1418, 1298, 1365, 1425, 1360,
	599, 0, 0, 231, 1428, 1359, 0, 1389, 0, 1443,
	1293, 1380, 0, 1296, 1300, 1439, 1423, 1329, 278, 0,
	0, 0, 0, 0, 0, 0, 1356, 1367, 1401, 1405,
	1350, 0, 0, 0, 0, 0, 0, 0, 0, 1327,
	0, 1376, 0, 0, 0, 1305, 1297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1354,
	0, 0, 0, 0, 1308, 0, 1328, 1402, 0, 1291,
	300, 1302, 405, 260, 0, 456, 1409, 1422, 1351, 632,
	1424, 1349, 1348, 1396, 1306, 1415, 1341, 368, 1304, 333,
	199, 227, 0, 1339, 415, 464, 476, 1414, 1324, 1333,
	256, 1331, 474, 429, 607, 235, 287, 461, 435, 472,
	443, 290, 1375, 1394, 473, 375, 588, 453, 604, 633,
	634, 266, 409, 618, 525, 626, 651, 228, 263, 423,
	509, 610, 497, 400, 584, 585, 332, 496, 298, 203,
	372, 639, 226, 482, 374, 244, 233, 590, 615, 302,
	254, 292, 459, 646, 215, 520, 601, 241, 486, 0,
	0, 654, 249, 507, 613, 602, 217, 597, 506, 396,
	329, 330, 216, 0, 460, 271, 296, 0, 0, 261,
	418, 592, 593, 259, 655, 230, 625, 222, 1303, 624,
	411, 587, 598, 397, 386, 221, 596, 395, 385, 337,
	358, 359, 283, 310, 450, 378, 451, 309, 311, 407,
	406, 408, 209, 611, 629, 0, 210, 0, 502, 614,
	656, 455, 214, 236, 237, 239, 1319, 282, 286, 294,
	297, 306, 307, 316, 370, 422, 449, 445, 454, 1410,
	582, 605, 619, 631, 637, 638, 640, 641, 642, 643,
	644, 647, 645, 410, 314, 498, 336, 376, 1399, 1442,
	428, 475, 242, 609, 499, 201, 1313, 1318, 1311, 0,
	257, 258, 1381, 578, 1314, 1312, 1370, 1371, 1315, 1433,
	1434, 1435, 1420, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 652, 511, 517, 512, 513, 514, 515, 516, 0,
	518, 1403, 1307, 0, 1316, 1317, 401, 1412, 594, 595,
	675, 387, 489, 606, 338, 352, 355, 344, 364, 0,
	365, 340, 341, 346, 349, 350, 351, 356, 357, 361,
	367, 251, 212, 393, 402, 581, 315, 218, 219, 220,
	527, 528, 529, 530, 622, 623, 627, 207, 465, 466,
	467, 468, 295, 617, 312, 471, 470, 334, 335, 382,
	452, 543, 545, 556, 560, 562, 564, 570, 573, 544,
	546, 557, 561, 563, 565, 571, 574, 533, 535, 537,
	539, 552, 551, 548, 576, 577, 554, 559, 538, 550,
	555, 568, 575, 572, 532, 536, 540, 549, 567, 566,
	547, 558, 569, 553, 541, 534, 542, 1374, 198, 223,
	371, 1438, 457, 291, 653, 621, 487, 616, 208, 225,
	1310, 265, 1322, 1330, 0, 1336, 1344, 1345, 1358, 1361,
	1362, 1363, 1364, 1382, 1383, 1385, 1393, 1395, 1398, 1400,
	1407, 1421, 1441, 200, 202, 211, 224, 234, 238, 245,
	264, 279, 281, 288, 301, 313, 321, 322, 325, 331,
	383, 389, 390, 391, 392, 412, 413, 414, 417, 420,
	421, 424, 426, 427, 430, 434, 438, 439, 440, 442,
	444, 446, 458, 463, 477, 478, 479, 480, 481, 484,
	485, 491, 492, 493, 494, 495, 503, 504, 519, 589,
	591, 608, 628, 635, 483, 304, 305, 447, 448, 317,
	318, 649, 650, 303, 603, 636, 600, 648, 630, 441,
	381, 1373, 1379, 384, 284, 308, 323, 1388, 620, 505,
	229, 469, 293, 253, 1406, 1408, 213, 248, 232, 262,
	277, 280, 327, 394, 403, 432, 437, 299, 274, 246,
	462, 243, 488, 522, 523, 524, 526, 398, 269, 436,
	1369, 1397, 379, 579, 580, 319, 399, 0, 0, 0,
	0, 0, 0, 1427, 1411, 531, 0, 1353, 1430, 1321,
	1340, 1440, 1343, 1346, 1390, 1299, 1368, 419, 1337, 1325,
	1294, 1332, 1295, 1323, 1355, 273, 1320, 1413, 1372, 1429,
	369, 270, 1301, 1292, 206, 508, 1326, 433, 1342, 205,
	1392, 490, 255, 380, 377, 586, 285, 276, 272, 252,
	320, 388, 431, 521, 425, 1436, 373, 1378, 0, 500,
	404, 0, 0, 0, 1417, 1416, 1347, 1357, 1419, 1366,
	1404, 1352, 1391, 1309, 1377, 1431, 1338, 1387, 1432, 326,
	250, 328, 204, 416, 501, 289, 0, 0, 0, 0,
	0, 510, 196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 247, 0, 0, 0, 354,
	363, 362, 342, 343, 345, 347, 353, 360, 366, 339,
	348, 1334, 1384, 612, 1426, 1335, 1386, 268, 324, 275,
	267, 583, 1437, 1418, 1298, 1365, 1425, 1360, 599, 0,
	0, 231, 1428, 1359, 0, 1389, 0, 1443, 1293, 1380,
	0, 1296, 1300, 1439, 1423, 1329, 278, 0, 0, 0,
	0, 0, 0, 0, 1356, 1367, 1401, 1405, 1350, 0,
	0, 0, 0, 0, 0, 3272, 0, 1327, 0, 1376,
	0, 0, 0, 1305, 1297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1354, 0, 0,
	0, 0, 1308, 0, 1328, 1402, 0, 1291, 300, 1302,
	405, 260, 0, 456, 1409, 1422, 1351, 632, 1424, 1349,
	1348, 1396, 1306, 1415, 1341, 368, 1304, 333, 199, 227,
	0, 1339, 415, 464, 476, 1414, 1324, 1333, 256, 1331,
	474, 429, 607, 235, 287, 461, 435, 472, 443, 290,
	1375, 1394, 473, 375, 588, 453, 604, 633, 634, 266,
	409, 618, 525, 626, 651, 228, 263, 423, 509, 610,
	497, 400, 584, 585, 332, 496, 298, 203, 372, 639,
	226, 482, 374, 244, 233, 590, 615, 302, 254, 292,
	459, 646, 215, 520, 601, 241, 486, 0, 0, 654,
	249, 507, 613, 602, 217, 597, 506, 396, 329, 330,
	216, 0, 460, 271, 296, 0, 0, 261, 418, 592,
	593, 259, 655, 230, 625, 222, 1303, 624, 411, 587,
	598, 397, 386, 221, 596, 395, 385, 337, 358, 359,
	283, 310, 450, 378, 451, 309, 311, 407, 406, 408,
	209, 611, 629, 0, 210, 0, 502, 614, 656, 455,
	214, 236, 237, 239, 1319, 282, 286, 294, 297, 306,
	307, 316, 370, 422, 449, 445, 454, 1410, 582, 605,
	619, 631, 637, 638, 640, 641, 642, 643, 644, 647,
	645, 410, 314, 498, 336, 376, 1399, 1442, 428, 475,
	242, 609, 499, 201, 1313, 1318, 1311, 0, 257, 258,
	1381, 578, 1314, 1312, 1370, 1371, 1315, 1433, 1434, 1435,
	1420, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 652,
	511, 517, 512, 513, 514, 515, 516, 0, 518, 1403,
	1307, 0, 1316, 1317, 401, 1412, 594, 595, 675, 387,
	489, 606, 338, 352, 355, 344, 364, 0, 365, 340,
	341, 346, 349, 350, 351, 356, 357, 361, 367, 251,
	212, 393, 402, 581, 315, 218, 219, 220, 527, 528,
	529, 530, 622, 623, 627, 207, 465, 466, 467, 468,
	295, 617, 312, 471, 470, 334, 335, 382, 452, 543,
	545, 556, 560, 562, 564, 570, 573, 544, 546, 557,
	561, 563, 565, 571, 574, 533, 535, 537, 539, 552,
	551, 548, 576, 577, 554, 559, 538, 550, 555, 568,
	575, 572, 532, 536, 540, 549, 567, 566, 547, 558,
	569, 553, 541, 534, 542, 1374, 198, 223, 371, 1438,
	457, 291, 653, 621, 487, 616, 208, 225, 1310, 265,
	1322, 1330, 0, 1336, 1344, 1345, 1358, 1361, 1362, 1363,
	1364, 1382, 1383, 1385, 1393, 1395, 1398, 1400, 1407, 1421,
	1441, 200, 202, 211, 224, 234, 238, 245, 264, 279,
	281, 288, 301, 313, 321, 322, 325, 331, 383, 389,
	390, 391, 392, 412, 413, 414, 417, 420, 421, 424,
	426, 427, 430, 434, 438, 439, 440, 442, 444, 446,
	458, 463, 477, 478, 479, 480, 481, 484, 485, 491,
	492, 493, 494, 495, 503, 504, 519, 589, 591, 608,
	628, 635, 483, 304, 305, 447, 448, 317, 318, 649,
	650, 303, 603, 636, 600, 648, 630, 441, 381, 1373,
	1379, 384, 284, 308, 323, 1388, 620, 505, 229, 469,
	293, 253, 1406, 1408, 213, 248, 232, 262, 277, 280,
	327, 394, 403, 432, 437, 299, 274, 246, 462, 243,
	488, 522, 523, 524, 526, 398, 269, 436, 1369, 1397,
	379, 579, 580, 319, 399, 0, 0, 0, 0, 0,
	0, 1427, 1411, 531, 0, 1353, 1430, 1321, 1340, 1440,
	1343, 1346, 1390, 1299, 1368, 419, 1337, 1325, 1294, 1332,
	1295, 1323, 1355, 273, 1320, 1413, 1372, 1429, 369, 270,
	1301, 1292, 206, 508, 1326, 433, 1342, 205, 1392, 490,
	255, 380, 377, 586, 285, 276, 272, 252, 320, 388,
	431, 521, 425, 1436, 373, 1378, 0, 500, 404, 0,
	0, 0, 1417, 1416, 1347, 1357, 1419, 1366, 1404, 1352,
	1391, 1309, 1377, 1431, 1338, 1387, 1432, 326, 250, 328,
	204, 416, 501, 289, 0, 0, 0, 0, 0, 510,
	727, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 247, 0, 0, 0, 354, 363, 362,
	342, 343, 345, 347, 353, 360, 366, 339, 348, 1334,
	1384, 612, 1426, 1335, 1386, 268, 324, 275, 267, 583,
	1437, 1418, 1298, 1365, 1425, 1360, 599, 0, 0, 231,
	1428, 1359, 0, 1389, 0, 1443, 1293, 1380, 0, 1296,
	1300, 1439, 1423, 1329, 278, 0, 0, 0, 0, 0,
	0, 0, 1356, 1367, 1401, 1405, 1350, 0, 0, 0,
	0, 0, 0, 3233, 0, 1327, 0, 1376, 0, 0,
	0, 1305, 1297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1354, 0, 0, 0, 0,
	1308, 0, 1328, 1402, 0, 1291, 300, 1302, 405, 260,
	0, 456, 1409, 1422, 1351, 632, 1424, 1349, 1348, 1396,
	1306, 1415, 1341, 368, 1304, 333, 199, 227, 0, 1339,
	415, 464, 476, 1414, 1324, 1333, 256, 1331, 474, 429,
	607, 235, 287, 461, 435, 472, 443, 290, 1375, 1394,
	473, 375, 588, 453, 604, 633, 634, 266, 409, 618,
	525, 626, 651, 228, 263, 423, 509, 610, 497, 400,
	584, 585, 332, 496, 298, 203, 372, 639, 226, 482,
	374, 244, 233, 590, 615, 302, 254, 292, 459, 646,
	215, 520, 601, 241, 486, 0, 0, 654, 249, 507,
	613, 602, 217, 597, 506, 396, 329, 330, 216, 0,
	460, 271, 296, 0, 0, 261, 418, 592, 593, 259,
	655, 230, 625, 222, 1303, 624, 411, 587, 598, 397,
	386, 221, 596, 395, 385, 337, 358, 359, 283, 310,
	450, 378, 451, 309, 311, 407, 406, 408, 209, 611,
	629, 0, 210, 0, 502, 614, 656, 455, 214, 236,
	237, 239, 1319, 282, 286, 294, 297, 306, 307, 316,
	370, 422, 449, 445, 454, 1410, 582, 605, 619, 631,
	637, 638, 640, 641, 642, 643, 644, 647, 645, 410,
	314, 498, 336, 376, 1399, 1442, 428, 475, 242, 609,
	499, 201, 1313, 1318, 1311, 0, 257, 258, 1381, 578,
	1314, 1312, 1370, 1371, 1315, 1433, 1434, 1435, 1420, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 652, 511, 517,
	512, 513, 514, 515, 516, 0, 518, 1403, 1307, 0,
	1316, 1317, 401, 1412, 594, 595, 675, 387, 489, 606,
	338, 352, 355, 344, 364, 0, 365, 340, 341, 346,
	349, 350, 351, 356, 357, 361, 367, 251, 212, 393,
	402, 581, 315, 218, 219, 220, 527, 528, 529, 530,
	622, 623, 627, 207, 465, 466, 467, 468, 295, 617,
	312, 471, 470, 334, 335, 382, 452, 543, 545, 556,
	560, 562, 564, 570, 573, 544, 546, 557, 561, 563,
	565, 571, 574, 533, 535, 537, 539, 552, 551, 548,
	576, 577, 554, 559, 538, 550, 555, 568, 575, 572,
	532, 536, 540, 549, 567, 566, 547, 558, 569, 553,
	541, 534, 542, 1374, 198, 223, 371, 1438, 457, 291,
	653, 621, 487, 616, 208, 225, 1310, 265, 1322, 1330,
	0, 1336, 1344, 1345, 1358, 1361, 1362, 1363, 1364, 1382,
	1383, 1385, 1393, 1395, 1398, 1400, 1407, 1421, 1441, 200,
	202, 211, 224, 234, 238, 245, 264, 279, 281, 288,
	301, 313, 321, 322, 325, 331, 383, 389, 390, 391,
	392, 412, 413, 414, 417, 420, 421, 424, 426, 427,
	430, 434, 438, 439, 440, 442, 444, 446, 458, 463,
	477, 478, 479, 480, 481, 484, 485, 491, 492, 493,
	494, 495, 503, 504, 519, 589, 591, 608, 628, 635,
	483, 304, 305, 447, 448, 317, 318, 649, 650, 303,
	603, 636, 600, 648, 630, 441, 381, 1373, 1379, 384,
	284, 308, 323, 1388, 620, 505, 229, 469, 293, 253,
	1406, 1408, 213, 248, 232, 262, 277, 280, 327, 394,
	403, 432, 437, 299, 274, 246, 462, 243, 488, 522,
	523, 524, 526, 398, 269, 436, 1369, 1397, 379, 579,
	580, 319, 399, 0, 0, 0, 0, 0, 0, 1427,
	1411, 531, 0, 1353, 1430, 1321, 1340, 1440, 1343, 1346,
	1390, 1299, 1368, 419, 1337, 1325, 1294, 1332, 1295, 1323,
	1355, 273, 1320, 1413, 1372, 1429, 369, 270, 1301, 1292,
	206, 508, 1326, 433, 1342, 205, 1392, 490, 255, 380,
	377, 586, 285, 276, 272, 252, 320, 388, 431, 521,
	425, 1436, 373, 1378, 0, 500, 404, 0, 0, 0,
	1417, 1416, 1347, 1357, 1419, 1366, 1404, 1352, 1391, 1309,
	1377, 1431, 1338, 1387, 1432, 326, 250, 328, 204, 416,
	501, 289, 0, 0, 0, 0, 0, 510, 962, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 247, 0, 0, 0, 354, 363, 362, 342, 343,
	345, 347, 353, 360, 366, 339, 348, 1334, 1384, 612,
	1426, 1335, 1386, 268, 324, 275, 267, 583, 1437, 1418,
	1298, 1365, 1425, 1360, 599, 0, 0, 231, 1428, 1359,
	0, 1389, 0, 1443, 1293, 1380, 0, 1296, 1300, 1439,
	1423, 1329, 278, 0, 0, 0, 0, 0, 0, 0,
	1356, 1367, 1401, 1405, 1350, 0, 0, 0, 0, 0,
	0, 2424, 0, 1327, 0, 1376, 0, 0, 0, 1305,
	1297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1354, 0, 0, 0, 0, 1308, 0,
	1328, 1402, 0, 1291, 300, 1302, 405, 260, 0, 456,
	1409, 1422, 1351, 632, 1424, 1349, 1348, 1396, 1306, 1415,
	1341, 368, 1304, 333, 199, 227, 0, 1339, 415, 464,
	476, 1414, 1324, 1333, 256, 1331, 474, 429, 607, 235,
	287, 461, 435, 472, 443, 290, 1375, 1394, 473, 375,
	588, 453, 604, 633, 634, 266, 409, 618, 525, 626,
	651, 228, 263, 423, 509, 610, 497, 400, 584, 585,
	332, 496, 298, 203, 372, 639, 226, 482, 374, 244,
	233, 590, 615, 302, 254, 292, 459, 646, 215, 520,
	601, 241, 486, 0, 0, 654, 249, 507, 613, 602,
	217, 597, 506, 396, 329, 330, 216, 0, 460, 271,
	296, 0, 0, 261, 418, 592, 593, 259, 655, 230,
	625, 222, 1303, 624, 411, 587, 598, 397, 386, 221,
	596, 395, 385, 337, 358, 359, 283, 310, 450, 378,
	451, 309, 311, 407, 406, 408, 209, 611, 629, 0,
	210, 0, 502, 614, 656, 455, 214, 236, 237, 239,
	1319, 282, 286, 294, 297, 306, 307, 316, 370, 422,
	449, 445, 454, 1410, 582, 605, 619, 631, 637, 638,
	640, 641, 642, 643, 644, 647, 645, 410, 314, 498,
	336, 376, 1399, 1442, 428, 475, 242, 609, 499, 201,
	1313, 1318, 1311, 0, 257, 258, 1381, 578, 1314, 1312,
	1370, 1371, 1315, 1433, 1434, 1435, 1420, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 652, 511, 517, 512, 513,
	514, 515, 516, 0, 518, 1403, 1307, 0, 1316, 1317,
	401, 1412, 594, 595, 675, 387, 489, 606, 338, 352,
	355, 344, 364, 0, 365, 340, 341, 346, 349, 350,
	351, 356, 357, 361, 367, 251, 212, 393, 402, 581,
	315, 218, 219, 220, 527, 528, 529, 530, 622, 623,
	627, 207, 465, 466, 467, 468, 295, 617, 312, 471,
	470, 334, 335, 382, 452, 543, 545, 556, 560, 562,
	564, 570, 573, 544, 546, 557, 561, 563, 565, 571,
	574, 533, 535, 537, 539, 552, 551, 548, 576, 577,
	554, 559, 538, 550, 555, 568, 575, 572, 532, 536,
	540, 549, 567, 566, 547, 558, 569, 553, 541, 534,
	542, 1374, 198, 223, 371, 1438, 457, 291, 653, 621,
	487, 616, 208, 225, 1310, 265, 1322, 1330, 0, 1336,
	1344, 1345, 1358, 1361, 1362, 1363, 1364, 1382, 1383, 1385,
	1393, 1395, 1398, 1400, 1407, 1421, 1441, 200, 202, 211,
	224, 234, 238, 245, 264, 279, 281, 288, 301, 313,
	321, 322, 325, 331, 383, 389, 390, 391, 392, 412,
	413, 414, 417, 420, 421, 424, 426, 427, 430, 434,
	438, 439, 440, 442, 444, 446, 458, 463, 477, 478,
	479, 480, 481, 484, 485, 491, 492, 493, 494, 495,
	503, 504, 519, 589, 591, 608, 628, 635, 483, 304,
	305, 447, 448, 317, 318, 649, 650, 303, 603, 636,
	600, 648, 630, 441, 381, 1373, 1379, 384, 284, 308,
	323, 1388, 620, 505, 229, 469, 293, 253, 1406, 1408,
	213, 248, 232, 262, 277, 280, 327, 394, 403, 432,
	437, 299, 274, 246, 462, 243, 488, 522, 523, 524,
	526, 398, 269, 436, 1369, 1397, 379, 579, 580, 319,
	399, 0, 0, 0, 0, 0, 0, 1427, 1411, 531,
	0, 1353, 1430, 1321, 1340, 1440, 1343, 1346, 1390, 1299,
	1368, 419, 1337, 1325, 1294, 1332, 1295, 1323, 1355, 273,
	1320, 1413, 1372, 1429, 369, 270, 1301, 1292, 206, 508,
	1326, 433, 1342, 205, 1392, 490, 255, 380, 377, 586,
	285, 276, 272, 252, 320, 388, 431, 521, 425, 1436,
	373, 1378, 0, 500, 404, 0, 0, 0, 1417, 1416,
	1347, 1357, 1419, 1366, 1404, 1352, 1391, 1309, 1377, 1431,
	1338, 1387, 1432, 326, 250, 328, 204, 416, 501, 289,
	0, 95, 0, 0, 0, 510, 727, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 354, 363, 362, 342, 343, 345, 347,
	353, 360, 366, 339, 348, 1334, 1384, 612, 1426, 1335,
	1386, 268, 324, 275, 267, 583, 1437, 1418, 1298, 1365,
	1425, 1360, 599, 0, 0, 231, 1428, 1359, 0, 1389,
	0, 1443, 1293, 1380, 0, 1296, 1300, 1439, 1423, 1329,
	278, 0, 0, 0, 0, 0, 0, 0, 1356, 1367,
	1401, 1405, 1350, 0, 0, 0, 0, 0, 0, 0,
	0, 1327, 0, 1376, 0, 0, 0, 1305, 1297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1354, 0, 0, 0, 0, 1308, 0, 1328, 1402,
	0, 1291, 300, 1302, 405, 260, 0, 456, 1409, 1422,
	1351, 632, 1424, 1349, 1348, 1396, 1306, 1415, 1341, 368,
	1304, 333, 199, 227, 0, 1339, 415, 464, 476, 1414,
	1324, 1333, 256, 1331, 474, 429, 607, 235, 287, 461,
	435, 472, 443, 290, 1375, 1394, 473, 375, 588, 453,
	604, 633, 634, 266, 409, 618, 525, 626, 651, 228,
	263, 423, 509, 610, 497, 400, 584, 585, 332, 496,
	298, 203, 372, 639, 226, 482, 374, 244, 233, 590,
	615, 302, 254, 292, 459, 646, 215, 520, 601, 241,
	486, 0, 0, 654, 249, 507, 613, 602, 217, 597,
	506, 396, 329, 330, 216, 0, 460, 271, 296, 0,
	0, 261, 418, 592, 593, 259, 655, 230, 625, 222,
	1303, 624, 411, 587, 598, 397, 386, 221, 596, 395,
	385, 337, 358, 359, 283, 310, 450, 378, 451, 309,
	311, 407, 406, 408, 209, 611, 629, 0, 210, 0,
	502, 614, 656, 455, 214, 236, 237, 239, 1319, 282,
	286, 294, 297, 306, 307, 316, 370, 422, 449, 445,
	454, 1410, 582, 605, 619, 631, 637, 638, 640, 641,
	642, 643, 644, 647, 645, 410, 314, 498, 336, 376,
	1399, 1442, 428, 475, 242, 609, 499, 201, 1313, 1318,
	1311, 0, 257, 258, 1381, 578, 1314, 1312, 1370, 1371,
	1315, 1433, 1434, 1435, 1420, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 652, 511, 517, 512, 513, 514, 515,
	516, 0, 518, 1403, 1307, 0, 1316, 1317, 401, 1412,
	594, 595, 675, 387, 489, 606, 338, 352, 355, 344,
	364, 0, 365, 340, 341, 346, 349, 350, 351, 356,
	357, 361, 367, 251, 212, 393, 402, 581, 315, 218,
	219, 220, 527, 528, 529, 530, 622, 623, 627, 207,
	465, 466, 467, 468, 295, 617, 312, 471, 470, 334,
	335, 382, 452, 543, 545, 556, 560, 562, 564, 570,
	573, 544, 546, 557, 561, 563, 565, 571, 574, 533,
	535, 537, 539, 552, 551, 548, 576, 577, 554, 559,
	538, 550, 555, 568, 575, 572, 532, 536, 540, 549,
	567, 566, 547, 558, 569, 553, 541, 534, 542, 1374,
	198, 223, 371, 1438, 457, 291, 653, 621, 487, 616,
	208, 225, 1310, 265, 1322, 1330, 0, 1336, 1344, 1345,
	1358, 1361, 1362, 1363, 1364, 1382, 1383, 1385, 1393, 1395,
	1398, 1400, 1407, 1421, 1441, 200, 202, 211, 224, 234,
	238, 245, 264, 279, 281, 288, 301, 313, 321, 322,
	325, 331, 383, 389, 390, 391, 392, 412, 413, 414,
	417, 420, 421, 424, 426, 427, 430, 434, 438, 439,
	440, 442, 444, 446, 458, 463, 477, 478, 479, 480,
	481, 484, 485, 491, 492, 493, 494, 495, 503, 504,
	519, 589, 591, 608, 628, 635, 483, 304, 305, 447,
	448, 317, 318, 649, 650, 303, 603, 636, 600, 648,
	630, 441, 381, 1373, 1379, 384, 284, 308, 323, 1388,
	620, 505, 229, 469, 293, 253, 1406, 1408, 213, 248,
	232, 262, 277, 280, 327, 394, 403, 432, 437, 299,
	274, 246, 462, 243, 488, 522, 523, 524, 526, 398,
	269, 436, 1369, 1397, 379, 579, 580, 319, 399, 0,
	0, 0, 0, 0, 0, 1427, 1411, 531, 0, 1353,
	1430, 1321, 1340, 1440, 1343, 1346, 1390, 1299, 1368, 419,
	1337, 1325, 1294, 1332, 1295, 1323, 1355, 273, 1320, 1413,
	1372, 1429, 369, 270, 1301, 1292, 206, 508, 1326, 433,
	1342, 205, 1392, 490, 255, 380, 377, 586, 285, 276,
	272, 252, 320, 388, 431, 521, 425, 1436, 373, 1378,
	0, 500, 404, 0, 0, 0, 1417, 1416, 1347, 1357,
	1419, 1366, 1404, 1352, 1391, 1309, 1377, 1431, 1338, 1387,
	1432, 326, 250, 328, 204, 416, 501, 289, 0, 0,
	0, 0, 0, 510, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 247, 0, 0,
	0, 354, 363, 362, 342, 343, 345, 347, 353, 360,
	366, 339, 348, 1334, 1384, 612, 1426, 1335, 1386, 268,
	324, 275, 267, 583, 1437, 1418, 1298, 1365, 1425, 1360,
	599, 0, 0, 231, 1428, 1359, 0, 1389, 0, 1443,
	1293, 1380, 0, 1296, 1300, 1439, 1423, 1329, 278, 0,
	0, 0, 0, 0, 0, 0, 1356, 1367, 1401, 1405,
	1350, 0, 0, 0, 0, 0, 0, 0, 0, 1327,
	0, 1376, 0, 0, 0, 1305, 1297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1354,
	0, 0, 0, 0, 1308, 0, 1328, 1402, 0, 1291,
	300, 1302, 405, 260, 0, 456, 1409, 1422, 1351, 632,
	1424, 1349, 1348, 1396, 1306, 1415, 1341, 368, 1304, 333,
	199, 227, 0, 1339, 415, 464, 476, 1414, 1324, 1333,
	256, 1331, 474, 429, 607, 235, 287, 461, 435, 472,
	443, 290, 1375, 1394, 473, 375, 588, 453, 604, 633,
	634, 266, 409, 618, 525, 626, 651, 228, 263, 423,
	509, 610, 497, 400, 584, 585, 332, 496, 298, 203,
	372, 639, 226, 482, 374, 244, 233, 590, 615, 302,
	254, 292, 459, 646, 215, 520, 601, 241, 486, 0,
	0, 654, 249, 507, 613, 602, 217, 597, 506, 396,
	329, 330, 216, 0, 460, 271, 296, 0, 0, 261,
	418, 592, 593, 259, 655, 230, 625, 222, 1303, 624,
	411, 587, 598, 397, 386, 221, 596, 395, 385, 337,
	358, 359, 283, 310, 450, 378, 451, 309, 311, 407,
	406, 408, 209, 611, 629, 0, 210, 0, 502, 614,
	656, 455, 214, 236, 237, 239, 1319, 282, 286, 294,
	297, 306, 307, 316, 370, 422, 449, 445, 454, 1410,
	582, 605, 619, 631, 637, 638, 640, 641, 642, 643,
	644, 647, 645, 410, 314, 498, 336, 376, 1399, 1442,
	428, 475, 242, 609, 499, 201, 1313, 1318, 1311, 0,
	257, 258, 1381, 578, 1314, 1312, 1370, 1371, 1315, 1433,
	1434, 1435, 1420, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 652, 511, 517, 512, 513, 514, 515, 516, 0,
	518, 1403, 1307, 0, 1316, 1317, 401, 1412, 594, 595,
	675, 387, 489, 606, 338, 352, 355, 344, 364, 0,
	365, 340, 341, 346, 349, 350, 351, 356, 357, 361,
	367, 251, 212, 393, 402, 581, 315, 218, 219, 220,
	527, 528, 529, 530, 622, 623, 627, 207, 465, 466,
	467, 468, 295, 617, 312, 471, 470, 334, 335, 382,
	452, 543, 545, 556, 560, 562, 564, 570, 573, 544,
	546, 557, 561, 563, 565, 571, 574, 533, 535, 537,
	539, 552, 551, 548, 576, 577, 554, 559, 538, 550,
	555, 568, 575, 572, 532, 536, 540, 549, 567, 566,
	547, 558, 569, 553, 541, 534, 542, 1374, 198, 223,
	371, 1438, 457, 291, 653, 621, 487, 616, 208, 225,
	1310, 265, 1322, 1330, 0, 1336, 1344, 1345, 1358, 1361,
	1362, 1363, 1364, 1382, 1383, 1385, 1393, 1395, 1398, 1400,
	1407, 1421, 1441, 200, 202, 211, 224, 234, 238, 245,
	264, 279, 281, 288, 301, 313, 321, 322, 325, 331,
	383, 389, 390, 391, 392, 412, 413, 414, 417, 420,
	421, 424, 426, 427, 430, 434, 438, 439, 440, 442,
	444, 446, 458, 463, 477, 478, 479, 480, 481, 484,
	485, 491, 492, 493, 494, 495, 503, 504, 519, 589,
	591, 608, 628, 635, 483, 304, 305, 447, 448, 317,
	318, 649, 650, 303, 603, 636, 600, 648, 630, 441,
	381, 1373, 1379, 384, 284, 308, 323, 1388, 620, 505,
	229, 469, 293, 253, 1406, 1408, 213, 248, 232, 262,
	277, 280, 327, 394, 403, 432, 437, 299, 274, 246,
	462, 243, 488, 522, 523, 524, 526, 398, 269, 436,
	1369, 1397, 379, 579, 580, 319, 399, 0, 0, 0,
	0, 0, 0, 1427, 1411, 531, 0, 1353, 1430, 1321,
	1340, 1440, 1343, 1346, 1390, 1299, 1368, 419, 1337, 1325,
	1294, 1332, 1295, 1323, 1355, 273, 1320, 1413, 1372, 1429,
	369, 270, 1301, 1292, 206, 508, 1326, 433, 1342, 205,
	1392, 490, 255, 380, 377, 586, 285, 276, 272, 252,
	320, 388, 431, 521, 425, 1436, 373, 1378, 0, 500,
	404, 0, 0, 0, 1417, 1416, 1347, 1357, 1419, 1366,
	1404, 1352, 1391, 1309, 1377, 1431, 1338, 1387, 1432, 326,
	250, 328, 204, 416, 501, 289, 0, 0, 0, 0,
	0, 510, 727, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 247, 0, 0, 0, 354,
	363, 362, 342, 343, 345, 347, 353, 360, 366, 339,
	348, 1334, 1384, 612, 1426, 1335, 1386, 268, 324, 275,
	267, 583, 1437, 1418, 1298, 1365, 1425, 1360, 599, 0,
	0, 231, 1428, 1359, 0, 1389, 0, 1443, 1293, 1380,
	0, 1296, 1300, 1439, 1423, 1329, 278, 0, 0, 0,
	0, 0, 0, 0, 1356, 1367, 1401, 1405, 1350, 0,
	0, 0, 0, 0, 0, 0, 0, 1327, 0, 1376,
	0, 0, 0, 1305, 1297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1354, 0, 0,
	0, 0, 1308, 0, 1328, 1402, 0, 1291, 300, 1302,
	405, 260, 0, 456, 1409, 1422, 1351, 632, 1424, 1349,
	1348, 1396, 1306, 1415, 1341, 368, 1304, 333, 199, 227,
	0, 1339, 415, 464, 476, 1414, 1324, 1333, 256, 1331,
	474, 429, 607, 235, 287, 461, 435, 472, 443, 290,
	1375, 1394, 473, 375, 588, 453, 604, 633, 634, 266,
	409, 618, 525, 626, 651, 228, 263, 423, 509, 610,
	497, 400, 584, 585, 332, 496, 298, 203, 372, 639,
	226, 482, 374, 244, 233, 590, 615, 302, 254, 292,
	459, 646, 215, 520, 601, 241, 486, 0, 0, 654,
	249, 507, 613, 602, 217, 597, 506, 396, 329, 330,
	216, 0, 460, 271, 296, 0, 0, 261, 418, 592,
	593, 259, 655, 230, 625, 222, 1303, 624, 411, 587,
	598, 397, 386, 221, 596, 395, 385, 337, 358, 359,
	283, 310, 450, 378, 451, 309, 311, 407, 406, 408,
	209, 611, 629, 0, 210, 0, 502, 614, 656, 455,
	214, 236, 237, 239, 1319, 282, 286, 294, 297, 306,
	307, 316, 370, 422, 449, 445, 454, 1410, 582, 605,
	619, 631, 637, 638, 640, 641, 642, 643, 644, 647,
	645, 410, 314, 498, 336, 376, 1399, 1442, 428, 475,
	242, 609, 499, 201, 1313, 1318, 1311, 0, 257, 258,
	1381, 578, 1314, 1312, 1370, 1371, 1315, 1433, 1434, 1435,
	1420, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 652,
	511, 517, 512, 513, 514, 515, 516, 0, 518, 1403,
	1307, 0, 1316, 1317, 401, 1412, 594, 595, 675, 387,
	489, 606, 338, 352, 355, 344, 364, 0, 365, 340,
	341, 346, 349, 350, 351, 356, 357, 361, 367, 251,
	212, 393, 402, 581, 315, 218, 219, 220, 527, 528,
	529, 530, 622, 623, 627, 207, 465, 466, 467, 468,
	295, 617, 312, 471, 470, 334, 335, 382, 452, 543,
	545, 556, 560, 562, 564, 570, 573, 544, 546, 557,
	561, 563, 565, 571, 574, 533, 535, 537, 539, 552,
	551, 548, 576, 577, 554, 559, 538, 550, 555, 568,
	575, 572, 532, 536, 540, 549, 567, 566, 547, 558,
	569, 553, 541, 534, 542, 1374, 198, 223, 371, 1438,
	457, 291, 653, 621, 487, 616, 208, 225, 1310, 265,
	1322, 1330, 0, 1336, 1344, 1345, 1358, 1361, 1362, 1363,
	1364, 1382, 1383, 1385, 1393, 1395, 1398, 1400, 1407, 1421,
	1441, 200, 202, 211, 224, 234, 238, 245, 264, 279,
	281, 288, 301, 313, 321, 322, 325, 331, 383, 389,
	390, 391, 392, 412, 413, 414, 417, 420, 421, 424,
	426, 427, 430, 434, 438, 439, 440, 442, 444, 446,
	458, 463, 477, 478, 479, 480, 481, 484, 485, 491,
	492, 493, 494, 495, 503, 504, 519, 589, 591, 608,
	628, 635, 483, 304, 305, 447, 448, 317, 318, 649,
	650, 303, 603, 636, 600, 648, 630, 441, 381, 1373,
	1379, 384, 284, 308, 323, 1388, 620, 505, 229, 469,
	293, 253, 1406, 1408, 213, 248, 232, 262, 277, 280,
	327, 394, 403, 432, 437, 299, 274, 246, 462, 243,
	488, 522, 523, 524, 526, 398, 269, 436, 1369, 1397,
	379, 579, 580, 319, 399, 0, 0, 0, 0, 0,
	0, 1427, 1411, 531, 0, 1353, 1430, 1321, 1340, 1440,
	1343, 1346, 1390, 1299, 1368, 419, 1337, 1325, 1294, 1332,
	1295, 1323, 1355, 273, 1320, 1413, 1372, 1429, 369, 270,
	1301, 1292, 206, 508, 1326, 433, 1342, 205, 1392, 490,
	255, 380, 377, 586, 285, 276, 272, 252, 320, 388,
	431, 521, 425, 1436, 373, 1378, 0, 500, 404, 0,
	0, 0, 1417, 1416, 1347, 1357, 1419, 1366, 1404, 1352,
	1391, 1309, 1377, 1431, 1338, 1387, 1432, 326, 250, 328,
	204, 416, 501, 289, 0, 0, 0, 0, 0, 510,
	962, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 247, 0, 0, 0, 354, 363, 362,
	342, 343, 345, 347, 353, 360, 366, 339, 348, 1334,
	1384, 612, 1426, 1335, 1386, 268, 324, 275, 267, 583,
	1437, 1418, 1298, 1365, 1425, 1360, 599, 0, 0, 231,
	1428, 1359, 0, 1389, 0, 1443, 1293, 1380, 0, 1296,
	1300, 1439, 1423, 1329, 278, 0, 0, 0, 0, 0,
	0, 0, 1356, 1367, 1401, 1405, 1350, 0, 0, 0,
	0, 0, 0, 0, 0, 1327, 0, 1376, 0, 0,
	0, 1305, 1297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1354, 0, 0, 0, 0,
	1308, 0, 1328, 1402, 0, 1291, 300, 1302, 405, 260,
	0, 456, 1409, 1422, 1351, 632, 1424, 1349, 1348, 1396,
	1306, 1415, 1341, 368, 1304, 333, 199, 227, 0, 1339,
	415, 464, 476, 1414, 1324, 1333, 256, 1331, 474, 429,
	607, 235, 287, 461, 435, 472, 443, 290, 1375, 1394,
	473, 375, 588, 453, 604, 633, 634, 266, 409, 618,
	525, 626, 651, 228, 263, 423, 509, 610, 497, 400,
	584, 585, 332, 496, 298, 203, 372, 639, 226, 482,
	374, 244, 233, 590, 615, 302, 254, 292, 459, 646,
	215, 520, 601, 241, 486, 0, 0, 654, 249, 507,
	613, 602, 217, 597, 506, 396, 329, 330, 216, 0,
	460, 271, 296, 0, 0, 261, 418, 592, 593, 259,
	655, 230, 625, 222, 1303, 624, 411, 587, 598, 397,
	386, 221, 596, 395, 385, 337, 358, 359, 283, 310,
	450, 378, 451, 309, 311, 407, 406, 408, 209, 611,
	629, 0, 210, 0, 502, 614, 656, 455, 214, 236,
	237, 239, 1319, 282, 286, 294, 297, 306, 307, 316,
	370, 422, 449, 445, 454, 1410, 582, 605, 619, 631,
	637, 638, 640, 641, 642, 643, 644, 647, 645, 410,
	314, 498, 336, 376, 1399, 1442, 428, 475, 242, 609,
	499, 201, 1313, 1318, 1311, 0, 257, 258, 1381, 578,
	1314, 1312, 1370, 1371, 1315, 1433, 1434, 1435, 1420, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 652, 511, 517,
	512, 513, 514, 515, 516, 0, 518, 1403, 1307, 0,
	1316, 1317, 401, 1412, 594, 595, 675, 387, 489, 606,
	338, 352, 355, 344, 364, 0, 365, 340, 341, 346,
	349, 350, 351, 356, 357, 361, 367, 251, 212, 393,
	402, 581, 315, 218, 219, 220, 527, 528, 529, 530,
	622, 623, 627, 207, 465, 466, 467, 468, 295, 617,
	312, 471, 470, 334, 335, 382, 452, 543, 545, 556,
	560, 562, 564, 570, 573, 544, 546, 557, 561, 563,
	565, 571, 574, 533, 535, 537, 539, 552, 551, 548,
	576, 577, 554, 559, 538, 550, 555, 568, 575, 572,
	532, 536, 540, 549, 567, 566, 547, 558, 569, 553,
	541, 534, 542, 1374, 198, 223, 371, 1438, 457, 291,
	653, 621, 487, 616, 208, 225, 1310, 265, 1322, 1330,
	0, 1336, 1344, 1345, 1358, 1361, 1362, 1363, 1364, 1382,
	1383, 1385, 1393, 1395, 1398, 1400, 1407, 1421, 1441, 200,
	202, 211, 224, 234, 238, 245, 264, 279, 281, 288,
	301, 313, 321, 322, 325, 331, 383, 389, 390, 391,
	392, 412, 413, 414, 417, 420, 421, 424, 426, 427,
	430, 434, 438, 439, 440, 442, 444, 446, 458, 463,
	477, 478, 479, 480, 481, 484, 485, 491, 492, 493,
	494, 495, 503, 504, 519, 589, 591, 608, 628, 635,
	483, 304, 305, 447, 448, 317, 318, 649, 650, 303,
	603, 636, 600, 648, 630, 441, 381, 1373, 1379, 384,
	284, 308, 323, 1388, 620, 505, 229, 469, 293, 253,
	1406, 1408, 213, 248, 232, 262, 277, 280, 327, 394,
	403, 432, 437, 299, 274, 246, 462, 243, 488, 522,
	523, 524, 526, 398, 269, 436, 1369, 1397, 379, 579,
	580, 319, 399, 0, 0, 0, 0, 0, 0, 0,
	0, 531, 0, 780, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 419, 0, 0, 0, 767, 0, 0,
	0, 273, 772, 0, 0, 0, 369, 270, 0, 0,
	206, 508, 0, 433, 0, 205, 0, 490, 255, 380,
	377, 586, 285, 276, 272, 252, 320, 388, 431, 521,
	425, 779, 373, 0, 0, 500, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 774, 775, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 250, 328, 204, 416,
	501, 289, 0, 95, 0, 0, 1028, 510, 962, 751,
	928, 966, 1029, 980, 981, 982, 967, 0, 240, 968,
	969, 247, 970, 0, 927, 810, 812, 811, 877, 878,
	879, 880, 881, 882, 883, 813, 814, 808, 975, 612,
	983, 984, 0, 268, 324, 275, 267, 583, 0, 0,
	2244, 2245, 2246, 0, 599, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 747, 764, 0, 778, 0,
	0, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 761,
	762, 0, 0, 0, 0, 922, 0, 763, 0, 0,
	771, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	1024, 1025, 1026, 773, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 405, 260, 0, 456,
	921, 0, 0, 632, 0, 0, 919, 0, 0, 0,
	0, 368, 0, 333, 199, 227, 0, 0, 415, 464,
	476, 0, 0, 0, 972, 0, 474, 429, 607, 235,
	287, 461, 435, 472, 443, 290, 0, 0, 473, 375,
	588, 453, 604, 633, 634, 266, 409, 618, 525, 626,
	651, 228, 263, 423, 509, 610, 497, 400, 584, 585,
	332, 496, 298, 203, 372, 639, 226, 482, 374, 244,
	233, 590, 615, 302, 254, 292, 459, 646, 215, 520,
	601, 241, 486, 0, 0, 654, 249, 507, 613, 602,
	217, 597, 506, 396, 329, 330, 216, 0, 460, 271,
	296, 0, 0, 261, 418, 973, 974, 259, 655, 818,
	625, 222, 0, 624, 411, 587, 598, 397, 386, 221,
	596, 395, 385, 337, 826, 827, 283, 310, 903, 902,
	901, 309, 311, 899, 900, 898, 209, 611, 629, 0,
	210, 0, 502, 614, 656, 455, 214, 236, 237, 239,
	0, 282, 286, 294, 297, 306, 307, 316, 370, 422,
	449, 445, 454, 0, 582, 605, 619, 631, 637, 638,
	640, 641, 642, 643, 644, 647, 645, 410, 314, 498,
	336, 376, 0, 0, 428, 475, 242, 609, 499, 909,
	931, 920, 784, 785, 910, 911, 935, 912, 787, 788,
	932, 933, 781, 782, 786, 934, 936, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 652, 511, 517, 512, 513,
	514, 515, 516, 0, 518, 923, 770, 769, 0, 776,
	777, 0, 806, 807, 809, 815, 816, 817, 828, 875,
	876, 884, 886, 887, 885, 888, 889, 890, 893, 894,
	895, 896, 891, 892, 897, 789, 793, 790, 791, 792,
	804, 794, 795, 796, 797, 798, 799, 800, 801, 802,
	803, 805, 946, 947, 948, 949, 950, 951, 821, 825,
	824, 822, 823, 819, 820, 847, 846, 848, 849, 850,
	851, 852, 853, 855, 854, 856, 857, 858, 859, 860,
	861, 829, 830, 833, 834, 832, 831, 835, 844, 845,
	836, 837, 838, 839, 840, 841, 843, 842, 862, 863,
	864, 865, 866, 868, 867, 871, 872, 870, 869, 874,
	873, 768, 198, 223, 371, 0, 457, 291, 653, 621,
	487, 616, 208, 225, 937, 265, 938, 0, 0, 942,
	0, 0, 0, 944, 943, 0, 945, 907, 906, 0,
	0, 939, 940, 0, 941, 0, 0, 200, 202, 211,
	224, 234, 238, 245, 264, 279, 281, 288, 301, 313,
	321, 322, 325, 331, 383, 389, 390, 391, 392, 412,
	413, 414, 417, 420, 421, 424, 426, 427, 430, 434,
	438, 439, 440, 442, 444, 446, 458, 463, 477, 478,
	479, 480, 481, 484, 485, 491, 492, 493, 494, 495,
	503, 504, 519, 589, 591, 608, 628, 635, 483, 952,
	953, 954, 955, 956, 957, 958, 959, 303, 603, 636,
	600, 648, 630, 441, 381, 0, 0, 384, 284, 308,
	323, 0, 620, 505, 229, 469, 293, 253, 1027, 0,
	213, 248, 232, 262, 277, 280, 327, 394, 403, 432,
	437, 299, 274, 246, 462, 243, 488, 522, 523, 524,
	526, 398, 269, 436, 399, 0, 379, 579, 580, 319,
	0, 0, 0, 531, 0, 780, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 419, 0, 0, 0, 767,
	0, 0, 0, 273, 772, 0, 0, 0, 369, 270,
	0, 0, 206, 508, 0, 433, 0, 205, 0, 490,
	255, 380, 377, 586, 285, 276, 272, 252, 320, 388,
	431, 521, 425, 779, 373, 0, 0, 500, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 774, 775, 0,
	0, 0, 0, 0, 0, 2453, 0, 326, 250, 328,
	204, 416, 501, 289, 0, 95, 0, 0, 1028, 510,
	962, 751, 928, 966, 1029, 980, 981, 982, 967, 0,
	240, 968, 969, 247, 970, 0, 927, 810, 812, 811,
	877, 878, 879, 880, 881, 882, 883, 813, 814, 808,
	975, 612, 983, 984, 2454, 268, 324, 275, 267, 583,
	0, 0, 0, 0, 0, 0, 599, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 747, 764, 0,
	778, 0, 0, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 761, 762, 0, 0, 0, 0, 922, 0, 763,
	0, 0, 771, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1023, 1024, 1025, 1026, 773, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 405, 260,
	0, 456, 921, 0, 0, 632, 0, 0, 919, 0,
	0, 0, 0, 368, 0, 333, 199, 227, 0, 0,
	415, 464, 476, 0, 0, 0, 972, 0, 474, 429,
	607, 235, 287, 461, 435, 472, 443, 290, 0, 0,
	473, 375, 588, 453, 604, 633, 634, 266, 409, 618,
	525, 626, 651, 228, 263, 423, 509, 610, 497, 400,
	584, 585, 332, 496, 298, 203, 372, 639, 226, 482,
	374, 244, 233, 590, 615, 302, 254, 292, 459, 646,
	215, 520, 601, 241, 486, 0, 0, 654, 249, 507,
	613, 602, 217, 597, 506, 396, 329, 330, 216, 0,
	460, 271, 296, 0, 0, 261, 418, 973, 974, 259,
	655, 818, 625, 222, 0, 624, 411, 587, 598, 397,
	386, 221, 596, 395, 385, 337, 826, 827, 283, 310,
	903, 902, 901, 309, 311, 899, 900, 898, 209, 611,
	629, 0, 210, 0, 502, 614, 656, 455, 214, 236,
	237, 239, 0, 282, 286, 294, 297, 306, 307, 316,
	370, 422, 449, 445, 454, 0, 582, 605, 619, 631,
	637, 638, 640, 641, 642, 643, 644, 647, 645, 410,
	314, 498, 336, 376, 0, 0, 428, 475, 242, 609,
	499, 909, 931, 920, 784, 785, 910, 911, 935, 912,
	787, 788, 932, 933, 781, 782, 786, 934, 936, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 652, 511, 517,
	512, 513, 514, 515, 516, 0, 518, 923, 770, 769,
	0, 776, 777, 0, 806, 807, 809, 815, 816, 817,
	828, 875, 876, 884, 886, 887, 885, 888, 889, 890,
	893, 894, 895, 896, 891, 892, 897, 789, 793, 790,
	791, 792, 804, 794, 795, 796, 797, 798, 799, 800,
	801, 802, 803, 805, 946, 947, 948, 949, 950, 951,
	821, 825, 824, 822, 823, 819, 820, 847, 846, 848,
	849, 850, 851, 852, 853, 855, 854, 856, 857, 858,
	859, 860, 861, 829, 830, 833, 834, 832, 831, 835,
	844, 845, 836, 837, 838, 839, 840, 841, 843, 842,
	862, 863, 864, 865, 866, 868, 867, 871, 872, 870,
	869, 874, 873, 768, 198, 223, 371, 0, 457, 291,
	653, 621, 487, 616, 208, 225, 937, 265, 938, 0,
	0, 942, 0, 0, 0, 944, 943, 0, 945, 907,
	906, 0, 0, 939, 940, 0, 941, 0, 0, 200,
	202, 211, 224, 234, 238, 245, 264, 279, 281, 288,
	301, 313, 321, 322, 325, 331, 383, 389, 390, 391,
	392, 412, 413, 414, 417, 420, 421, 424, 426, 427,
	430, 434, 438, 439, 440, 442, 444, 446, 458, 463,
	477, 478, 479, 480, 481, 484, 485, 491, 492, 493,
	494, 495, 503, 504, 519, 589, 591, 608, 628, 635,
	483, 952, 953, 954, 955, 956, 957, 958, 959, 303,
	603, 636, 600, 648, 630, 441, 381, 0, 0, 384,
	284, 308, 323, 0, 620, 505, 229, 469, 293, 253,
	1027, 0, 213, 248, 232, 262, 277, 280, 327, 394,
	403, 432, 437, 299, 274, 246, 462, 243, 488, 522,
	523, 524, 526, 398, 269, 436, 399, 0, 379, 579,
	580, 319, 0, 0, 86, 531, 0, 780, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 419, 0, 0,
	0, 767, 0, 0, 0, 273, 772, 0, 0, 0,
	369, 270, 0, 0, 206, 508, 0, 433, 0, 205,
	0, 490, 255, 380, 377, 586, 285, 276, 272, 252,
	320, 388, 431, 521, 425, 1723, 373, 0, 0, 500,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 774,
	775, 0, 0, 0, 0, 0, 0, 0, 0, 326,
	250, 328, 204, 416, 501, 289, 0, 95, 0, 0,
	1028, 510, 962, 751, 928, 966, 1029, 980, 981, 982,
	967, 0, 240, 968, 969, 247, 970, 0, 927, 810,
	812, 811, 877, 878, 879, 880, 881, 882, 883, 813,
	814, 808, 975, 612, 983, 984, 0, 268, 324, 275,
	267, 583, 0, 0, 0, 0, 0, 0, 599, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 747,
	764, 0, 778, 0, 0, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 761, 762, 0, 0, 0, 0, 922,
	0, 763, 0, 0, 771, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 1025, 1026, 773, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	405, 260, 0, 456, 921, 0, 0, 632, 0, 0,
	919, 0, 0, 0, 0, 368, 0, 333, 199, 227,
	0, 0, 415, 464, 476, 0, 0, 0, 972, 0,
	474, 429, 607, 235, 287, 461, 435, 472, 443, 290,
	0, 0, 473, 375, 588, 453, 604, 633, 634, 266,
	409, 618, 525, 626, 651, 228, 263, 423, 509, 610,
	497, 400, 584, 585, 332, 496, 298, 203, 372, 639,
	226, 482, 374, 244, 233, 590, 615, 302, 254, 292,
	459, 646, 215, 520, 601, 241, 486, 0, 0, 654,
	249, 507, 613, 602, 217, 597, 506, 396, 329, 330,
	216, 0, 460, 271, 296, 0, 0, 261, 418, 973,
	974, 259, 655, 818, 625, 222, 0, 624, 411, 587,
	598, 397, 386, 221, 596, 395, 385, 337, 826, 827,
	283, 310, 903, 902, 901, 309, 311, 899, 900, 898,
	209, 611, 629, 0, 210, 0, 502, 614, 656, 455,
	214, 236, 237, 239, 0, 282, 286, 294, 297, 306,
	307, 316, 370, 422, 449, 445, 454, 0, 582, 605,
	619, 631, 637, 638, 640, 641, 642, 643, 644, 647,
	645, 410, 314, 498, 336, 376, 0, 0, 428, 475,
	242, 609, 499, 909, 931, 920, 784, 785, 910, 911,
	935, 912, 787, 788, 932, 933, 781, 782, 786, 934,
	936, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 652,
	511, 517, 512, 513, 514, 515, 516, 0, 518, 923,
	770, 769, 0, 776, 777, 0, 806, 807, 809, 815,
	816, 817, 828, 875, 876, 884, 886, 887, 885, 888,
	889, 890, 893, 894, 895, 896, 891, 892, 897, 789,
	793, 790, 791, 792, 804, 794, 795, 796, 797, 798,
	799, 800, 801, 802, 803, 805, 946, 947, 948, 949,
	950, 951, 821, 825, 824, 822, 823, 819, 820, 847,
	846, 848, 849, 850, 851, 852, 853, 855, 854, 856,
	857, 858, 859, 860, 861, 829, 830, 833, 834, 832,
	831, 835, 844, 845, 836, 837, 838, 839, 840, 841,
	843, 842, 862, 863, 864, 865, 866, 868, 867, 871,
	872, 870, 869, 874, 873, 768, 198, 223, 371, 94,
	457, 291, 653, 621, 487, 616, 208, 225, 937, 265,
	938, 0, 0, 942, 0, 0, 0, 944, 943, 0,
	945, 907, 906, 0, 0, 939, 940, 0, 941, 0,
	0, 200, 202, 211, 224, 234, 238, 245, 264, 279,
	281, 288, 301, 313, 321, 322, 325, 331, 383, 389,
	390, 391, 392, 412, 413, 414, 417, 420, 421, 424,
	426, 427, 430, 434, 438, 439, 440, 442, 444, 446,
	458, 463, 477, 478, 479, 480, 481, 484, 485, 491,
	492, 493, 494, 495, 503, 504, 519, 589, 591, 608,
	628, 635, 483, 952, 953, 954, 955, 956, 957, 958,
	959, 303, 603, 636, 600, 648, 630, 441, 381, 0,
	0, 384, 284, 308, 323, 0, 620, 505, 229, 469,
	293, 253, 1027, 0, 213, 248, 232, 262, 277, 280,
	327, 394, 403, 432, 437, 299, 274, 246, 462, 243,
	488, 522, 523, 524, 526, 398, 269, 436, 399, 0,
	379, 579, 580, 319, 0, 0, 0, 531, 0, 780,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 419,
	0, 0, 0, 767, 0, 0, 0, 273, 772, 0,
	0, 0, 369, 270, 0, 0, 206, 508, 0, 433,
	0, 205, 0, 490, 255, 380, 377, 586, 285, 276,
	272, 252, 320, 388, 431, 521, 425, 779, 373, 0,
	0, 500, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 774, 775, 0, 0, 0, 0, 0, 0, 0,
	0, 326, 250, 328, 204, 416, 501, 289, 0, 95,
	0, 0, 1028, 510, 962, 751, 928, 966, 1029, 980,
	981, 982, 967, 0, 240, 968, 969, 247, 970, 0,
	927, 810, 812, 811, 877, 878, 879, 880, 881, 882,
	883, 813, 814, 808, 975, 612, 983, 984, 0, 268,
	324, 275, 267, 583, 0, 0, 0, 0, 0, 0,
	599, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 747, 764, 0, 778, 0, 0, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 761, 762, 0, 0, 0,
	0, 922, 0, 763, 0, 0, 771, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 773,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 405, 260, 0, 456, 921, 0, 0, 632,
	0, 0, 919, 0, 0, 0, 0, 368, 0, 333,
	199, 227, 0, 0, 415, 464, 476, 0, 0, 0,
	972, 0, 474, 429, 607, 235, 287, 461, 435, 472,
	443, 290, 4113, 0, 473, 375, 588, 453, 604, 633,
	634, 266, 409, 618, 525, 626, 651, 228, 263, 423,
	509, 610, 497, 400, 584, 585, 332, 496, 298, 203,
	372, 639, 226, 482, 374, 244, 233, 590, 615, 302,
	254, 292, 459, 646, 215, 520, 601, 241, 486, 0,
	0, 654, 249, 507, 613, 602, 217, 597, 506, 396,
	329, 330, 216, 0, 460, 271, 296, 0, 0, 261,
	418, 973, 974, 259, 655, 818, 625, 222, 0, 624,
	411, 587, 598, 397, 386, 221, 596, 395, 385, 337,
	826, 827, 283, 310, 903, 902, 901, 309, 311, 899,
	900, 898, 209, 611, 629, 0, 210, 0, 502, 614,
	656, 455, 214, 236, 237, 239, 0, 282, 286, 294,
	297, 306, 307, 316, 370, 422, 449, 445, 454, 0,
	582, 605, 619, 631, 637, 638, 640, 641, 642, 643,
	644, 647, 645, 410, 314, 498, 336, 376, 0, 0,
	428, 475, 242, 609, 499, 909, 931, 920, 784, 785,
	910, 911, 935, 912, 787, 788, 932, 933, 781, 782,
	786, 934, 936, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 652, 511, 517, 512, 513, 514, 515, 516, 0,
	518, 923, 770, 769, 0, 776, 777, 0, 806, 807,
	809, 815, 816, 817, 828, 875, 876, 884, 886, 887,
	885, 888, 889, 890, 893, 894, 895, 896, 891, 892,
	897, 789, 793, 790, 791, 792, 804, 794, 795, 796,
	797, 798, 799, 800, 801, 802, 803, 805, 946, 947,
	948, 949, 950, 951, 821, 825, 824, 822, 823, 819,
	820, 847, 846, 848, 849, 850, 851, 852, 853, 855,
	854, 856, 857, 858, 859, 860, 861, 829, 830, 833,
	834, 832, 831, 835, 844, 845, 836, 837, 838, 839,
	840, 841, 843, 842, 862, 863, 864, 865, 866, 868,
	867, 871, 872, 870, 869, 874, 873, 768, 198, 223,
	371, 0, 457, 291, 653, 621, 487, 616, 208, 225,
	937, 265, 938, 0, 0, 942, 0, 0, 0, 944,
	943, 0, 945, 907, 906, 0, 0, 939, 940, 0,
	941, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	264, 279, 281, 288, 301, 313, 321, 322, 325, 331,
	383, 389, 390, 391, 392, 412, 413, 414, 417, 420,
	421, 424, 426, 427, 430, 434, 438, 439, 440, 442,
	444, 446, 458, 463, 477, 478, 479, 480, 481, 484,
	485, 491, 492, 493, 494, 495, 503, 504, 519, 589,
	591, 608, 628, 635, 483, 952, 953, 954, 955, 956,
	957, 958, 959, 303, 603, 636, 600, 648, 630, 441,
	381, 0, 0, 384, 284, 308, 323, 0, 620, 505,
	229, 469, 293, 253, 1027, 0, 213, 248, 232, 262,
	277, 280, 327, 394, 403, 432, 437, 299, 274, 246,
	462, 243, 488, 522, 523, 524, 526, 398, 269, 436,
	399, 0, 379, 579, 580, 319, 0, 0, 0, 531,
	0, 780, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 767, 0, 0, 0, 273,
	772, 0, 0, 0, 369, 270, 0, 0, 206, 508,
	0, 433, 0, 205, 0, 490, 255, 380, 377, 586,
	285, 276, 272, 252, 320, 388, 431, 521, 425, 779,
	373, 0, 0, 500, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 774, 775, 0, 0, 0, 0, 0,
	0, 0, 0, 326, 250, 328, 204, 416, 501, 289,
	0, 95, 0, 1760, 1028, 510, 962, 751, 928, 966,
	1029, 980, 981, 982, 967, 0, 240, 968, 969, 247,
	970, 0, 927, 810, 812, 811, 877, 878, 879, 880,
	881, 882, 883, 813, 814, 808, 975, 612, 983, 984,
	0, 268, 324, 275, 267, 583, 0, 0, 0, 0,
	0, 0, 599, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 747, 764, 0, 778, 0, 0, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 761, 762, 0,
	0, 0, 0, 922, 0, 763, 0, 0, 771, 985,
	986, 987, 988, 989, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015,
	1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025,
	1026, 773, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 0, 405, 260, 0, 456, 921, 0,
	0, 632, 0, 0, 919, 0, 0, 0, 0, 368,
	0, 333, 199, 227, 0, 0, 415, 464, 476, 0,
	0, 0, 972, 0, 474, 429, 607, 235, 287, 461,
	435, 472, 443, 290, 0, 0, 473, 375, 588, 453,
	604, 633, 634, 266, 409, 618, 525, 626, 651, 228,
	263, 423, 509, 610, 497, 400, 584, 585, 332, 496,
	298, 203, 372, 639, 226, 482, 374, 244, 233, 590,
	615, 302, 254, 292, 459, 646, 215, 520, 601, 241,
	486, 0, 0, 654, 249, 507, 613, 602, 217, 597,
	506, 396, 329, 330, 216, 0, 460, 271, 296, 0,
	0, 261, 418, 973, 974, 259, 655, 818, 625, 222,
	0, 624, 411, 587, 598, 397, 386, 221, 596, 395,
	385, 337, 826, 827, 283, 310, 903, 902, 901, 309,
	311, 899, 900, 898, 209, 611, 629, 0, 210, 0,
	502, 614, 656, 455, 214, 236, 237, 239, 0, 282,
	286, 294, 297, 306, 307, 316, 370, 422, 449, 445,
	454, 0, 582, 605, 619, 631, 637, 638, 640, 641,
	642, 643, 644, 647, 645, 410, 314, 498, 336, 376,
	0, 0, 428, 475, 242, 609, 499, 909, 931, 920,
	784, 785, 910, 911, 935, 912, 787, 788, 932, 933,
	781, 782, 786, 934, 936, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 652, 511, 517, 512, 513, 514, 515,
	516, 0, 518, 923, 770, 769, 0, 776, 777, 0,
	806, 807, 809, 815, 816, 817, 828, 875, 876, 884,
	886, 887, 885, 888, 889, 890, 893, 894, 895, 896,
	891, 892, 897, 789, 793, 790, 791, 792, 804, 794,
	795, 796, 797, 798, 799, 800, 801, 802, 803, 805,
	946, 947, 948, 949, 950, 951, 821, 825, 824, 822,
	823, 819, 820, 847, 846, 848, 849, 850, 851, 852,
	853, 855, 854, 856, 857, 858, 859, 860, 861, 829,
	830, 833, 834, 832, 831, 835, 844, 845, 836, 837,
	838, 839, 840, 841, 843, 842, 862, 863, 864, 865,
	866, 868, 867, 871, 872, 870, 869, 874, 873, 768,
	198, 223, 371, 0, 457, 291, 653, 621, 487, 616,
	208, 225, 937, 265, 938, 0, 0, 942, 0, 0,
	0, 944, 943, 0, 945, 907, 906, 0, 0, 939,
	940, 0, 941, 0, 0, 200, 202, 211, 224, 234,
	238, 245, 264, 279, 281, 288, 301, 313, 321, 322,
	325, 331, 383, 389, 390, 391, 392, 412, 413, 414,
	417, 420, 421, 424, 426, 427, 430, 434, 438, 439,
	440, 442, 444, 446, 458, 463, 477, 478, 479, 480,
	481, 484, 485, 491, 492, 493, 494, 495, 503, 504,
	519, 589, 591, 608, 628, 635, 483, 952, 953, 954,
	955, 956, 957, 958, 959, 303, 603, 636, 600, 648,
	630, 441, 381, 0, 0, 384, 284, 308, 323, 0,
	620, 505, 229, 469, 293, 253, 1027, 0, 213, 248,
	232, 262, 277, 280, 327, 394, 403, 432, 437, 299,
	274, 246, 462, 243, 488, 522, 523, 524, 526, 398,
	269, 436, 399, 0, 379, 579, 580, 319, 0, 0,
	0, 531, 0, 780, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 419, 0, 0, 0, 767, 0, 0,
	0, 273, 772, 0, 0, 0, 369, 270, 0, 0,
	206, 508, 0, 433, 0, 205, 0, 490, 255, 380,
	377, 586, 285, 276, 272, 252, 320, 388, 431, 521,
	425, 779, 373, 0, 0, 500, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 774, 775, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 250, 328, 204, 416,
	501, 289, 0, 95, 0, 0, 1028, 510, 962, 751,
	928, 966, 1029, 980, 981, 982, 967, 0, 240, 968,
	969, 247, 970, 0, 927, 810, 812, 811, 877, 878,
	879, 880, 881, 882, 883, 813, 814, 808, 975, 612,
	983, 984, 0, 268, 324, 275, 267, 583, 0, 0,
	0, 0, 0, 0, 599, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 747, 764, 0, 778, 0,
	0, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 761,
	762, 1075, 0, 0, 0, 922, 0, 763, 0, 0,
	771, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	1024, 1025, 1026, 773, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 405, 260, 0, 456,
	921, 0, 0, 632, 0, 0, 919, 0, 0, 0,
	0, 368, 0, 333, 199, 227, 0, 0, 415, 464,
	476, 0, 0, 0, 972, 0, 474, 429, 607, 235,
	287, 461, 435, 472, 443, 290, 0, 0, 473, 375,
	588, 453, 604, 633, 634, 266, 409, 618, 525, 626,
	651, 228, 263, 423, 509, 610, 497, 400, 584, 585,
	332, 496, 298, 203, 372, 639, 226, 482, 374, 244,
	233, 590, 615, 302, 254, 292, 459, 646, 215, 520,
	601, 241, 486, 0, 0, 654, 249, 507, 613, 602,
	217, 597, 506, 396, 329, 330, 216, 0, 460, 271,
	296, 0, 0, 261, 418, 973, 974, 259, 655, 818,
	625, 222, 0, 624, 411, 587, 598, 397, 386, 221,
	596, 395, 385, 337, 826, 827, 283, 310, 903, 902,
	901, 309, 311, 899, 900, 898, 209, 611, 629, 0,
	210, 0, 502, 614, 656, 455, 214, 236, 237, 239,
	0, 282, 286, 294, 297, 306, 307, 316, 370, 422,
	449, 445, 454, 0, 582, 605, 619, 631, 637, 638,
	640, 641, 642, 643, 644, 647, 645, 410, 314, 498,
	336, 376, 0, 0, 428, 475, 242, 609, 499, 909,
	931, 920, 784, 785, 910, 911, 935, 912, 787, 788,
	932, 933, 781, 782, 786, 934, 936, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 652, 511, 517, 512, 513,
	514, 515, 516, 0, 518, 923, 770, 769, 0, 776,
	777, 0, 806, 807, 809, 815, 816, 817, 828, 875,
	876, 884, 886, 887, 885, 888, 889, 890, 893, 894,
	895, 896, 891, 892, 897, 789, 793, 790, 791, 792,
	804, 794, 795, 796, 797, 798, 799, 800, 801, 802,
	803, 805, 946, 947, 948, 949, 950, 951, 821, 825,
	824, 822, 823, 819, 820, 847, 846, 848, 849, 850,
	851, 852, 853, 855, 854, 856, 857, 858, 859, 860,
	861, 829, 830, 833, 834, 832, 831, 835, 844, 845,
	836, 837, 838, 839, 840, 841, 843, 842, 862, 863,
	864, 865, 866, 868, 867, 871, 872, 870, 869, 874,
	873, 768, 198, 223, 371, 0, 457, 291, 653, 621,
	487, 616, 208, 225, 937, 265, 938, 0, 0, 942,
	0, 0, 0, 944, 943, 0, 945, 907, 906, 0,
	0, 939, 940, 0, 941, 0, 0, 200, 202, 211,
	224, 234, 238, 245, 264, 279, 281, 288, 301, 313,
	321, 322, 325, 331, 383, 389, 390, 391, 392, 412,
	413, 414, 417, 420, 421, 424, 426, 427, 430, 434,
	438, 439, 440, 442, 444, 446, 458, 463, 477, 478,
	479, 480, 481, 484, 485, 491, 492, 493, 494, 495,
	503, 504, 519, 589, 591, 608, 628, 635, 483, 952,
	953, 954, 955, 956, 957, 958, 959, 303, 603, 636,
	600, 648, 630, 441, 381, 0, 0, 384, 284, 308,
	323, 0, 620, 505, 229, 469, 293, 253, 1027, 0,
	213, 248, 232, 262, 277, 280, 327, 394, 403, 432,
	437, 299, 274, 246, 462, 243, 488, 522, 523, 524,
	526, 398, 269, 436, 399, 0, 379, 579, 580, 319,
	0, 0, 0, 531, 0, 780, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 419, 0, 0, 0, 767,
	0, 0, 0, 273, 772, 0, 0, 0, 369, 270,
	0, 0, 206, 508, 0, 433, 0, 205, 0, 490,
	255, 380, 377, 586, 285, 276, 272, 252, 320, 388,
	431, 521, 425, 779, 373, 0, 0, 500, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 774, 775, 0,
	0, 0, 0, 0, 0, 0, 0, 326, 250, 328,
	204, 416, 501, 289, 0, 95, 0, 0, 1028, 510,
	962, 751, 928, 966, 1029, 980, 981, 982, 967, 0,
	240, 968, 969, 247, 970, 0, 927, 810, 812, 811,
	877, 878, 879, 880, 881, 882, 883, 813, 814, 808,
	975, 612, 983, 984, 0, 268, 324, 275, 267, 583,
	0, 0, 0, 0, 0, 0, 599, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 747, 764, 0,
	778, 0, 0, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 761, 762, 0, 0, 0, 0, 922, 0, 763,
	0, 0, 771, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1023, 1024, 1025, 1026, 773, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 405, 260,
	0, 456, 921, 0, 0, 632, 0, 0, 919, 0,
	0, 0, 0, 368, 0, 333, 199, 227, 0, 0,
	415, 464, 476, 0, 0, 0, 972, 0, 474, 429,
	607, 235, 287, 461, 435, 472, 443, 290, 0, 0,
	473, 375, 588, 453, 604, 633, 634, 266, 409, 618,
	525, 626, 651, 228, 263, 423, 509, 610, 497, 400,
	584, 585, 332, 496, 298, 203, 372, 639, 226, 482,
	374, 244, 233, 590, 615, 302, 254, 292, 459, 646,
	215, 520, 601, 241, 486, 0, 0, 654, 249, 507,
	613, 602, 217, 597, 506, 396, 329, 330, 216, 0,
	460, 271, 296, 0, 0, 261, 418, 973, 974, 259,
	655, 818, 625, 222, 0, 624, 411, 587, 598, 397,
	386, 221, 596, 395, 385, 337, 826, 827, 283, 310,
	903, 902, 901, 309, 311, 899, 900, 898, 209, 611,
	629, 0, 210, 0, 502, 614, 656, 455, 214, 236,
	237, 239, 0, 282, 286, 294, 297, 306, 307, 316,
	370, 422, 449, 445, 454, 0, 582, 605, 619, 631,
	637, 638, 640, 641, 642, 643, 644, 647, 645, 410,
	314, 498, 336, 376, 0, 0, 428, 475, 242, 609,
	499, 909, 931, 920, 784, 785, 910, 911, 935, 912,
	787, 788, 932, 933, 781, 782, 786, 934, 936, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 652, 511, 517,
	512, 513, 514, 515, 516, 0, 518, 923, 770, 769,
	0, 776, 777, 0, 806, 807, 809, 815, 816, 817,
	828, 875, 876, 884, 886, 887, 885, 888, 889, 890,
	893, 894, 895, 896, 891, 892, 897, 789, 793, 790,
	791, 792, 804, 794, 795, 796, 797, 798, 799, 800,
	801, 802, 803, 805, 946, 947, 948, 949, 950, 951,
	821, 825, 824, 822, 823, 819, 820, 847, 846, 848,
	849, 850, 851, 852, 853, 855, 854, 856, 857, 858,
	859, 860, 861, 829, 830, 833, 834, 832, 831, 835,
	844, 845, 836, 837, 838, 839, 840, 841, 843, 842,
	862, 863, 864, 865, 866, 868, 867, 871, 872, 870,
	869, 874, 873, 768, 198, 223, 371, 0, 457, 291,
	653, 621, 487, 616, 208, 225, 937, 265, 938, 0,
	0, 942, 0, 0, 0, 944, 943, 0, 945, 907,
	906, 0, 0, 939, 940, 0, 941, 0, 0, 200,
	202, 211, 224, 234, 238, 245, 264, 279, 281, 288,
	301, 313, 321, 322, 325, 331, 383, 389, 390, 391,
	392, 412, 413, 414, 417, 420, 421, 424, 426, 427,
	430, 434, 438, 439, 440, 442, 444, 446, 458, 463,
	477, 478, 479, 480, 481, 484, 485, 491, 492, 493,
	494, 495, 503, 504, 519, 589, 591, 608, 628, 635,
	483, 952, 953, 954, 955, 956, 957, 958, 959, 303,
	603, 636, 600, 648, 630, 441, 381, 0, 0, 384,
	284, 308, 323, 0, 620, 505, 229, 469, 293, 253,
	1027, 0, 213, 248, 232, 262, 277, 280, 327, 394,
	403, 432, 437, 299, 274, 246, 462, 243, 488, 522,
	523, 524, 526, 398, 269, 436, 399, 0, 379, 579,
	580, 319, 0, 0, 0, 531, 0, 780, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 419, 0, 0,
	0, 767, 0, 0, 0, 273, 772, 0, 0, 0,
	369, 270, 0, 0, 206, 508, 0, 433, 0, 205,
	0, 490, 255, 380, 377, 586, 285, 276, 272, 252,
	320, 388, 431, 521, 425, 779, 373, 0, 0, 500,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 774,
	775, 0, 0, 0, 0, 0, 0, 0, 0, 326,
	250, 328, 204, 416, 501, 289, 0, 95, 0, 0,
	1028, 510, 962, 751, 928, 966, 1029, 980, 981, 982,
	967, 0, 240, 968, 969, 247, 970, 0, 927, 810,
	812, 811, 877, 878, 879, 880, 881, 882, 883, 813,
	814, 808, 975, 612, 983, 984, 0, 268, 324, 275,
	267, 583, 0, 0, 0, 0, 0, 0, 599, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 747,
	764, 0, 778, 0, 0, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 761, 762, 0, 0, 0, 0, 922,
	0, 763, 0, 0, 771, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 1025, 1026, 3189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	405, 260, 0, 456, 921, 0, 0, 632, 0, 0,
	919, 0, 0, 0, 0, 368, 0, 333, 199, 227,
	0, 0, 415, 464, 476, 0, 0, 0, 972, 0,
	474, 429, 607, 235, 287, 461, 435, 472, 443, 290,
	0, 0, 473, 375, 588, 453, 604, 633, 634, 266,
	409, 618, 525, 626, 651, 228, 263, 423, 509, 610,
	497, 400, 584, 585, 332, 496, 298, 203, 372, 639,
	226, 482, 374, 244, 233, 590, 615, 302, 254, 292,
	459, 646, 215, 520, 601, 241, 486, 0, 0, 654,
	249, 507, 613, 602, 217, 597, 506, 396, 329, 330,
	216, 0, 460, 271, 296, 0, 0, 261, 418, 973,
	974, 259, 655, 818, 625, 222, 0, 624, 411, 587,
	598, 397, 386, 221, 596, 395, 385, 337, 826, 827,
	283, 310, 903, 902, 901, 309, 311, 899, 900, 898,
	209, 611, 629, 0, 210, 0, 502, 614, 656, 455,
	214, 236, 237, 239, 0, 282, 286, 294, 297, 306,
	307, 316, 370, 422, 449, 445, 454, 0, 582, 605,
	619, 631, 637, 638, 640, 641, 642, 643, 644, 647,
	645, 410, 314, 498, 336, 376, 0, 0, 428, 475,
	242, 609, 499, 909, 931, 920, 784, 785, 910, 911,
	935, 912, 787, 788, 932, 933, 781, 782, 786, 934,
	936, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 652,
	511, 517, 512, 513, 514, 515, 516, 0, 518, 923,
	770, 769, 0, 776, 777, 0, 806, 807, 809, 815,
	816, 817, 828, 875, 876, 884, 886, 887, 885, 888,
	889, 890, 893, 894, 895, 896, 891, 892, 897, 789,
	793, 790, 791, 792, 804, 794, 795, 796, 797, 798,
	799, 800, 801, 802, 803, 805, 946, 947, 948, 949,
	950, 951, 821, 825, 824, 822, 823, 819, 820, 847,
	846, 848, 849, 850, 851, 852, 853, 855, 854, 856,
	857, 858, 859, 860, 861, 829, 830, 833, 834, 832,
	831, 835, 844, 845, 836, 837, 838, 839, 840, 841,
	843, 842, 862, 863, 864, 865, 866, 868, 867, 871,
	872, 870, 869, 874, 873, 768, 198, 223, 371, 0,
	457, 291, 653, 621, 487, 616, 208, 225, 937, 265,
	938, 0, 0, 942, 0, 0, 0, 944, 943, 0,
	945, 907, 906, 0, 0, 939, 940, 0, 941, 0,
	0, 200, 202, 211, 224, 234, 238, 245, 264, 279,
	281, 288, 301, 313, 321, 322, 325, 331, 383, 389,
	390, 391, 392, 412, 413, 414, 417, 420, 421, 424,
	426, 427, 430, 434, 438, 439, 440, 442, 444, 446,
	458, 463, 477, 478, 479, 480, 481, 484, 485, 491,
	492, 493, 494, 495, 503, 504, 519, 589, 591, 608,
	628, 635, 483, 952, 953, 954, 955, 956, 957, 958,
	959, 303, 603, 636, 600, 648, 630, 441, 381, 0,
	0, 384, 284, 308, 323, 0, 620, 505, 229, 469,
	293, 253, 1027, 0, 213, 248, 232, 262, 277, 280,
	327, 394, 403, 432, 437, 299, 274, 246, 462, 243,
	488, 522, 523, 524, 526, 398, 269, 436, 399, 0,
	379, 579, 580, 319, 0, 0, 0, 531, 0, 780,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 419,
	0, 0, 0, 767, 0, 0, 0, 273, 772, 0,
	0, 0, 369, 270, 0, 0, 206, 508, 0, 433,
	0, 205, 0, 490, 255, 380, 377, 586, 285, 276,
	272, 252, 320, 388, 431, 521, 425, 779, 373, 0,
	0, 500, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 774, 775, 0, 0, 0, 0, 0, 0, 0,
	0, 326, 250, 328, 204, 416, 501, 289, 0, 95,
	0, 0, 1028, 510, 962, 751, 928, 966, 1029, 980,
	981, 982, 967, 0, 240, 968, 969, 247, 970, 0,
	927, 810, 812, 811, 877, 878, 879, 880, 881, 882,
	883, 813, 814, 808, 975, 612, 983, 984, 0, 268,
	324, 275, 267, 583, 0, 0, 0, 0, 0, 0,
	599, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 747, 764, 0, 778, 0, 0, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 761, 762, 0, 0, 0,
	0, 922, 0, 763, 0, 0, 771, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 3185,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 405, 260, 0, 456, 921, 0, 0, 632,
	0, 0, 919, 0, 0, 0, 0, 368, 0, 333,
	199, 227, 0, 0, 415, 464, 476, 0, 0, 0,
	972, 0, 474, 429, 607, 235, 287, 461, 435, 472,
	443, 290, 0, 0, 473, 375, 588, 453, 604, 633,
	634, 266, 409, 618, 525, 626, 651, 228, 263, 423,
	509, 610, 497, 400, 584, 585, 332, 496, 298, 203,
	372, 639, 226, 482, 374, 244, 233, 590, 615, 302,
	254, 292, 459, 646, 215, 520, 601, 241, 486, 0,
	0, 654, 249, 507, 613, 602, 217, 597, 506, 396,
	329, 330, 216, 0, 460, 271, 296, 0, 0, 261,
	418, 973, 974, 259, 655, 818, 625, 222, 0, 624,
	411, 587, 598, 397, 386, 221, 596, 395, 385, 337,
	826, 827, 283, 310, 903, 902, 901, 309, 311, 899,
	900, 898, 209, 611, 629, 0, 210, 0, 502, 614,
	656, 455, 214, 236, 237, 239, 0, 282, 286, 294,
	297, 306, 307, 316, 370, 422, 449, 445, 454, 0,
	582, 605, 619, 631, 637, 638, 640, 641, 642, 643,
	644, 647, 645, 410, 314, 498, 336, 376, 0, 0,
	428, 475, 242, 609, 499, 909, 931, 920, 784, 785,
	910, 911, 935, 912, 787, 788, 932, 933, 781, 782,
	786, 934, 936, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 652, 511, 517, 512, 513, 514, 515, 516, 0,
	518, 923, 770, 769, 0, 776, 777, 0, 806, 807,
	809, 815, 816, 817, 828, 875, 876, 884, 886, 887,
	885, 888, 889, 890, 893, 894, 895, 896, 891, 892,
	897, 789, 793, 790, 791, 792, 804, 794, 795, 796,
	797, 798, 799, 800, 801, 802, 803, 805, 946, 947,
	948, 949, 950, 951, 821, 825, 824, 822, 823, 819,
	820, 847, 846, 848, 849, 850, 851, 852, 853, 855,
	854, 856, 857, 858, 859, 860, 861, 829, 830, 833,
	834, 832, 831, 835, 844, 845, 836, 837, 838, 839,
	840, 841, 843, 842, 862, 863, 864, 865, 866, 868,
	867, 871, 872, 870, 869, 874, 873, 768, 198, 223,
	371, 0, 457, 291, 653, 621, 487, 616, 208, 225,
	937, 265, 938, 0, 0, 942, 0, 0, 0, 944,
	943, 0, 945, 907, 906, 0, 0, 939, 940, 0,
	941, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	264, 279, 281, 288, 301, 313, 321, 322, 325, 331,
	383, 389, 390, 391, 392, 412, 413, 414, 417, 420,
	421, 424, 426, 427, 430, 434, 438, 439, 440, 442,
	444, 446, 458, 463, 477, 478, 479, 480, 481, 484,
	485, 491, 492, 493, 494, 495, 503, 504, 519, 589,
	591, 608, 628, 635, 483, 952, 953, 954, 955, 956,
	957, 958, 959, 303, 603, 636, 600, 648, 630, 441,
	381, 0, 0, 384, 284, 308, 323, 0, 620, 505,
	229, 469, 293, 253, 1027, 0, 213, 248, 232, 262,
	277, 280, 327, 394, 403, 432, 437, 299, 274, 246,
	462, 243, 488, 522, 523, 524, 526, 398, 269, 436,
	399, 0, 379, 579, 580, 319, 0, 0, 0, 531,
	0, 780, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 767, 0, 0, 0, 273,
	772, 0, 0, 0, 369, 270, 0, 0, 206, 508,
	0, 433, 0, 205, 0, 490, 255, 380, 377, 586,
	285, 276, 272, 252, 320, 388, 431, 521, 425, 779,
	373, 0, 0, 500, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 774, 775, 0, 0, 0, 0, 0,
	0, 0, 0, 326, 250, 328, 204, 416, 501, 289,
	0, 95, 0, 0, 1028, 510, 962, 1096, 928, 966,
	1029, 980, 981, 982, 967, 0, 240, 968, 969, 247,
	970, 0, 927, 810, 812, 811, 877, 878, 879, 880,
	881, 882, 883, 813, 814, 808, 975, 612, 983, 984,
	0, 268, 324, 275, 267, 583, 0, 0, 0, 0,
	0, 0, 599, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 764, 0, 778, 0, 0, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 761, 762, 0,
	0, 0, 0, 922, 0, 763, 0, 0, 771, 985,
	986, 987, 988, 989, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015,
	1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025,
	1026, 773, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 0, 405, 260, 0, 456, 921, 0,
	0, 632, 0, 0, 919, 0, 0, 0, 0, 368,
	0, 333, 199, 227, 0, 0, 415, 464, 476, 0,
	0, 0, 972, 0, 474, 429, 607, 235, 287, 461,
	435, 472, 443, 290, 0, 0, 473, 375, 588, 453,
	604, 633, 634, 266, 409, 618, 525, 626, 651, 228,
	263, 423, 509, 610, 497, 400, 584, 585, 332, 496,
	298, 203, 372, 639, 226, 482, 374, 244, 233, 590,
	615, 302, 254, 292, 459, 646, 215, 520, 601, 241,
	486, 0, 0, 654, 249, 507, 613, 602, 217, 597,
	506, 396, 329, 330, 216, 0, 460, 271, 296, 0,
	0, 261, 418, 973, 974, 259, 655, 818, 625, 222,
	0, 624, 411, 587, 598, 397, 386, 221, 596, 395,
	385, 337, 826, 827, 283, 310, 903, 902, 901, 309,
	311, 899, 900, 898, 209, 611, 629, 0, 210, 0,
	502, 614, 656, 455, 214, 236, 237, 239, 0, 282,
	286, 294, 297, 306, 307, 316, 370, 422, 449, 445,
	454, 0, 582, 605, 619, 631, 637, 638, 640, 641,
	642, 643, 644, 647, 645, 410, 314, 498, 336, 376,
	0, 0, 428, 475, 242, 609, 499, 909, 931, 920,
	784, 785, 910, 911, 935, 912, 787, 788, 932, 933,
	781, 782, 786, 934, 936, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 652, 511, 517, 512, 513, 514, 515,
	516, 0, 518, 923, 770, 769, 0, 776, 777, 0,
	806, 807, 809, 815, 816, 817, 828, 875, 876, 884,
	886, 887, 885, 888, 889, 890, 893, 894, 895, 896,
	891, 892, 897, 789, 793, 790, 791, 792, 804, 794,
	795, 796, 797, 798, 799, 800, 801, 802, 803, 805,
	946, 947, 948, 949, 950, 951, 821, 825, 824, 822,
	823, 819, 820, 847, 846, 848, 849, 850, 851, 852,
	853, 855, 854, 856, 857, 858, 859, 860, 861, 829,
	830, 833, 834, 832, 831, 835, 844, 845, 836, 837,
	838, 839, 840, 841, 843, 842, 862, 863, 864, 865,
	866, 868, 867, 871, 872, 870, 869, 874, 873, 768,
	198, 223, 371, 0, 457, 291, 653, 621, 487, 616,
	208, 225, 937, 265, 938, 0, 0, 942, 0, 0,
	0, 944, 943, 0, 945, 907, 906, 0, 0, 939,
	940, 0, 941, 0, 0, 200, 202, 211, 224, 234,
	238, 245, 264, 279, 281, 288, 301, 313, 321, 322,
	325, 331, 383, 389, 390, 391, 392, 412, 413, 414,
	417, 420, 421, 424, 426, 427, 430, 434, 438, 439,
	440, 442, 444, 446, 458, 463, 477, 478, 479, 480,
	481, 484, 485, 491, 492, 493, 494, 495, 503, 504,
	519, 589, 591, 608, 628, 635, 483, 952, 953, 954,
	955, 956, 957, 958, 959, 303, 603, 636, 600, 648,
	630, 441, 381, 0, 0, 384, 284, 308, 323, 0,
	620, 505, 229, 469, 293, 253, 1027, 0, 213, 248,
	232, 262, 277, 280, 327, 394, 403, 432, 437, 299,
	274, 246, 462, 243, 488, 522, 523, 524, 526, 398,
	269, 436, 399, 0, 379, 579, 580, 319, 0, 0,
	0, 531, 0, 780, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 419, 0, 0, 0, 767, 0, 0,
	0, 273, 772, 0, 0, 0, 369, 270, 0, 0,
	206, 508, 0, 433, 0, 205, 0, 490, 255, 380,
	377, 586, 285, 276, 272, 252, 320, 388, 431, 521,
	425, 779, 373, 0, 0, 500, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 774, 775, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 250, 328, 204, 416,
	501, 289, 0, 95, 0, 0, 1028, 510, 962, 1096,
	928, 966, 1029, 980, 981, 982, 967, 0, 240, 968,
	969, 247, 970, 0, 927, 810, 812, 811, 877, 878,
	879, 880, 881, 882, 883, 813, 814, 808, 975, 612,
	983, 984, 0, 268, 324, 275, 267, 583, 0, 0,
	0, 0, 0, 0, 599, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 764, 0, 778, 0,
	0, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 761,
	762, 0, 0, 0, 0, 922, 0, 763, 0, 0,
	771, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	1024, 1025, 1026, 2135, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 405, 260, 0, 456,
	921, 0, 0, 632, 0, 0, 919, 0, 0, 0,
	0, 368, 0, 333, 199, 227, 0, 0, 415, 464,
	476, 0, 0, 0, 972, 0, 474, 429, 607, 235,
	287, 461, 435, 472, 443, 290, 0, 0, 473, 375,
	588, 453, 604, 633, 634, 266, 409, 618, 525, 626,
	651, 228, 263, 423, 509, 610, 497, 400, 584, 585,
	332, 496, 298, 203, 372, 639, 226, 482, 374, 244,
	233, 590, 615, 302, 254, 292, 459, 646, 215, 520,
	601, 241, 486, 0, 0, 654, 249, 507, 613, 602,
	217, 597, 506, 396, 329, 330, 216, 0, 460, 271,
	296, 0, 0, 261, 418, 973, 974, 259, 655, 818,
	625, 222, 0, 624, 411, 587, 598, 397, 386, 221,
	596, 395, 385, 337, 826, 827, 283, 310, 903, 902,
	901, 309, 311, 899, 900, 898, 209, 611, 629, 0,
	210, 0, 502, 614, 656, 455, 214, 236, 237, 239,
	0, 282, 286, 294, 297, 306, 307, 316, 370, 422,
	449, 445, 454, 0, 582, 605, 619, 631, 637, 638,
	640, 641, 642, 643, 644, 647, 645, 410, 314, 498,
	336, 376, 0, 0, 428, 475, 242, 609, 499, 909,
	931, 920, 784, 785, 910, 911, 935, 912, 787, 788,
	932, 933, 781, 782, 786, 934, 936, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 652, 511, 517, 512, 513,
	514, 515, 516, 0, 518, 923, 770, 769, 0, 776,
	777, 0, 806, 807, 809, 815, 816, 817, 828, 875,
	876, 884, 886, 887, 885, 888, 889, 890, 893, 894,
	895, 896, 891, 892, 897, 789, 793, 790, 791, 792,
	804, 794, 795, 796, 797, 798, 799, 800, 801, 802,
	803, 805, 946, 947, 948, 949, 950, 951, 821, 825,
	824, 822, 823, 819, 820, 847, 846, 848, 849, 850,
	851, 852, 853, 855, 854, 856, 857, 858, 859, 860,
	861, 829, 830, 833, 834, 832, 831, 835, 844, 845,
	836, 837, 838, 839, 840, 841, 843, 842, 862, 863,
	864, 865, 866, 868, 867, 871, 872, 870, 869, 874,
	873, 768, 198, 223, 371, 0, 457, 291, 653, 621,
	487, 616, 208, 225, 937, 265, 938, 0, 0, 942,
	0, 0, 0, 944, 943, 0, 945, 907, 906, 0,
	0, 939, 940, 0, 941, 0, 0, 200, 202, 211,
	224, 234, 238, 245, 264, 279, 281, 288, 301, 313,
	321, 322, 325, 331, 383, 389, 390, 391, 392, 412,
	413, 414, 417, 420, 421, 424, 426, 427, 430, 434,
	438, 439, 440, 442, 444, 446, 458, 463, 477, 478,
	479, 480, 481, 484, 485, 491, 492, 493, 494, 495,
	503, 504, 519, 589, 591, 608, 628, 635, 483, 952,
	953, 954, 955, 956, 957, 958, 959, 303, 603, 636,
	600, 648, 630, 441, 381, 0, 0, 384, 284, 308,
	323, 0, 620, 505, 229, 469, 293, 253, 1027, 0,
	213, 248, 232, 262, 277, 280, 327, 394, 403, 432,
	437, 299, 274, 246, 462, 243, 488, 522, 523, 524,
	526, 398, 269, 436, 399, 0, 379, 579, 580, 319,
	0, 0, 0, 531, 0, 780, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 419, 0, 0, 0, 767,
	0, 0, 0, 273, 772, 0, 0, 0, 369, 270,
	0, 0, 206, 508, 0, 433, 0, 205, 0, 490,
	255, 380, 377, 586, 285, 276, 272, 252, 320, 388,
	431, 521, 425, 779, 373, 0, 0, 500, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 774, 775, 0,
	0, 0, 0, 0, 0, 0, 0, 326, 250, 328,
	204, 416, 501, 289, 0, 95, 0, 0, 1028, 510,
	962, 1096, 928, 966, 1029, 980, 981, 982, 967, 0,
	240, 968, 969, 247, 970, 0, 927, 810, 812, 811,
	877, 878, 879, 880, 881, 882, 883, 813, 814, 808,
	975, 612, 983, 984, 0, 268, 324, 275, 267, 583,
	0, 0, 0, 0, 0, 0, 599, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 764, 0,
	778, 0, 0, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 761, 762, 0, 0, 0, 0, 922, 0, 763,
	0, 0, 771, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1023, 1024, 1025, 1026, 2133, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 405, 260,
	0, 456, 921, 0, 0, 632, 0, 0, 919, 0,
	0, 0, 0, 368, 0, 333, 199, 227, 0, 0,
	415, 464, 476, 0, 0, 0, 972, 0, 474, 429,
	607, 235, 287, 461, 435, 472, 443, 290, 0, 0,
	473, 375, 588, 453, 604, 633, 634, 266, 409, 618,
	525, 626, 651, 228, 263, 423, 509, 610, 497, 400,
	584, 585, 332, 496, 298, 203, 372, 639, 226, 482,
	374, 244, 233, 590, 615, 302, 254, 292, 459, 646,
	215, 520, 601, 241, 486, 0, 0, 654, 249, 507,
	613, 602, 217, 597, 506, 396, 329, 330, 216, 0,
	460, 271, 296, 0, 0, 261, 418, 973, 974, 259,
	655, 818, 625, 222, 0, 624, 411, 587, 598, 397,
	386, 221, 596, 395, 385, 337, 826, 827, 283, 310,
	903, 902, 901, 309, 311, 899, 900, 898, 209, 611,
	629, 0, 210, 0, 502, 614, 656, 455, 214, 236,
	237, 239, 0, 282, 286, 294, 297, 306, 307, 316,
	370, 422, 449, 445, 454, 0, 582, 605, 619, 631,
	637, 638, 640, 641, 642, 643, 644, 647, 645, 410,
	314, 498, 336, 376, 0, 0, 428, 475, 242, 609,
	499, 909, 931, 920, 784, 785, 910, 911, 935, 912,
	787, 788, 932, 933, 781, 782, 786, 934, 936, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 652, 511, 517,
	512, 513, 514, 515, 516, 0, 518, 923, 770, 769,
	0, 776, 777, 0, 806, 807, 809, 815, 816, 817,
	828, 875, 876, 884, 886, 887, 885, 888, 889, 890,
	893, 894, 895, 896, 891, 892, 897, 789, 793, 790,
	791, 792, 804, 794, 795, 796, 797, 798, 799, 800,
	801, 802, 803, 805, 946, 947, 948, 949, 950, 951,
	821, 825, 824, 822, 823, 819, 820, 847, 846, 848,
	849, 850, 851, 852, 853, 855, 854, 856, 857, 858,
	859, 860, 861, 829, 830, 833, 834, 832, 831, 835,
	844, 845, 836, 837, 838, 839, 840, 841, 843, 842,
	862, 863, 864, 865, 866, 868, 867, 871, 872, 870,
	869, 874, 873, 768, 198, 223, 371, 0, 457, 291,
	653, 621, 487, 616, 208, 225, 937, 265, 938, 0,
	0, 942, 0, 0, 0, 944, 943, 0, 945, 907,
	906, 0, 0, 939, 940, 0, 941, 0, 0, 200,
	202, 211, 224, 234, 238, 245, 264, 279, 281, 288,
	301, 313, 321, 322, 325, 331, 383, 389, 390, 391,
	392, 412, 413, 414, 417, 420, 421, 424, 426, 427,
	430, 434, 438, 439, 440, 442, 444, 446, 458, 463,
	477, 478, 479, 480, 481, 484, 485, 491, 492, 493,
	494, 495, 503, 504, 519, 589, 591, 608, 628, 635,
	483, 952, 953, 954, 955, 956, 957, 958, 959, 303,
	603, 636, 600, 648, 630, 441, 381, 0, 0, 384,
	284, 308, 323, 0, 620, 505, 229, 469, 293, 253,
	1027, 0, 213, 248, 232, 262, 277, 280, 327, 394,
	403, 432, 437, 299, 274, 246, 462, 243, 488, 522,
	523, 524, 526, 398, 269, 436, 399, 0, 379, 579,
	580, 319, 0, 0, 0, 531, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 419, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	369, 270, 0, 0, 206, 508, 0, 433, 0, 205,
	0, 490, 255, 380, 377, 586, 285, 276, 272, 252,
	320, 388, 431, 521, 425, 0, 373, 0, 0, 500,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 326,
	250, 328, 204, 416, 501, 289, 0, 0, 0, 0,
	0, 510, 727, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 247, 0, 0, 0, 354,
	363, 362, 342, 343, 345, 347, 353, 360, 366, 339,
	348, 0, 0, 612, 0, 0, 0, 268, 324, 275,
	267, 583, 0, 0, 0, 0, 0, 0, 599, 0,
	0, 231, 0, 1147, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	405, 260, 0, 456, 0, 0, 1146, 632, 0, 0,
	0, 0, 0, 1143, 1144, 368, 1104, 333, 199, 227,
	1137, 1141, 415, 464, 476, 0, 0, 0, 256, 0,
	474, 429, 607, 235, 287, 461, 435, 472, 443, 290,
	0, 0, 473, 375, 588, 453, 604, 633, 634, 266,
	409, 618, 525, 626, 651, 228, 263, 423, 509, 610,
	497, 400, 584, 585, 332, 496, 298, 203, 372, 639,
	226, 482, 374, 244, 233, 590, 615, 302, 254, 292,
	459, 646, 215, 520, 601, 241, 486, 0, 0, 654,
	249, 507, 613, 602, 217, 597, 506, 396, 329, 330,
	216, 0, 460, 271, 296, 0, 0, 261, 418, 592,
	593, 259, 655, 230, 625, 222, 0, 624, 411, 587,
	598, 397, 386, 221, 596, 395, 385, 337, 358, 359,
	283, 310, 450, 378, 451, 309, 311, 407, 406, 408,
	209, 611, 629, 0, 210, 0, 502, 614, 656, 455,
	214, 236, 237, 239, 0, 282, 286, 294, 297, 306,
	307, 316, 370, 422, 449, 445, 454, 0, 582, 605,
	619, 631, 637, 638, 640, 641, 642, 643, 644, 647,
	645, 410, 314, 498, 336, 376, 0, 0, 428, 475,
	242, 609, 499, 201, 0, 0, 0, 0, 257, 258,
	0, 578, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 652,
	511, 517, 512, 513, 514, 515, 516, 0, 518, 0,
	0, 0, 0, 0, 401, 0, 594, 595, 675, 387,
	489, 606, 338, 352, 355, 344, 364, 0, 365, 340,
	341, 346, 349, 350, 351, 356, 357, 361, 367, 251,
	212, 393, 402, 581, 315, 218, 219, 220, 527, 528,
	529, 530, 622, 623, 627, 207, 465, 466, 467, 468,
	295, 617, 312, 471, 470, 334, 335, 382, 452, 543,
	545, 556, 560, 562, 564, 570, 573, 544, 546, 557,
	561, 563, 565, 571, 574, 533, 535, 537, 539, 552,
	551, 548, 576, 577, 554, 559, 538, 550, 555, 568,
	575, 572, 532, 536, 540, 549, 567, 566, 547, 558,
	569, 553, 541, 534, 542, 0, 198, 223, 371, 0,
	457, 291, 653, 621, 487, 616, 208, 225, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 202, 211, 224, 234, 238, 245, 264, 279,
	281, 288, 301, 313, 321, 322, 325, 331, 383, 389,
	390, 391, 392, 412, 413, 414, 417, 420, 421, 424,
	426, 427, 430, 434, 438, 439, 440, 442, 444, 446,
	458, 463, 477, 478, 479, 480, 481, 484, 485, 491,
	492, 493, 494, 495, 503, 504, 519, 589, 591, 608,
	628, 635, 483, 304, 305, 447, 448, 317, 318, 649,
	650, 303, 603, 636, 600, 648, 630, 441, 381, 0,
	0, 384, 284, 308, 323, 0, 620, 505, 229, 469,
	293, 253, 0, 0, 213, 248, 232, 262, 277, 280,
	327, 394, 403, 432, 437, 299, 274, 246, 462, 243,
	488, 522, 523, 524, 526, 398, 269, 436, 399, 0,
	379, 579, 580, 319, 0, 0, 86, 531, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 369, 270, 0, 0, 206, 508, 0, 433,
	0, 205, 0, 490, 255, 380, 377, 586, 285, 276,
	272, 252, 320, 388, 431, 521, 425, 97, 373, 0,
	0, 500, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 326, 250, 328, 204, 416, 501, 289, 0, 95,
	0, 0, 0, 510, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 247, 0, 0,
	0, 354, 363, 362, 342, 343, 345, 347, 353, 360,
	366, 339, 348, 0, 0, 612, 0, 0, 0, 268,
	324, 275, 267, 583, 0, 0, 0, 0, 0, 0,
	599, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 405, 260, 0, 456, 0, 0, 0, 632,
	0, 0, 0, 0, 0, 0, 0, 368, 0, 333,
	199, 227, 0, 0, 415, 464, 476, 0, 0, 0,
	256, 0, 474, 429, 607, 235, 287, 461, 435, 472,
	443, 290, 0, 0, 473, 375, 588, 453, 604, 633,
	634, 266, 409, 618, 525, 626, 651, 228, 263, 423,
	509, 610, 497, 400, 584, 585, 332, 496, 298, 203,
	372, 639, 226, 482, 374, 244, 233, 590, 615, 302,
	254, 292, 459, 646, 215, 520, 601, 241, 486, 0,
	0, 654, 249, 507, 613, 602, 217, 597, 506, 396,
	329, 330, 216, 0, 460, 271, 296, 0, 0, 261,
	418, 592, 593, 259, 655, 230, 625, 222, 0, 624,
	411, 587, 598, 397, 386, 221, 596, 395, 385, 337,
	358, 359, 283, 310, 450, 378, 451, 309, 311, 407,
	406, 408, 209, 611, 629, 0, 210, 0, 502, 614,
	656, 455, 214, 236, 237, 239, 0, 282, 286, 294,
	297, 306, 307, 316, 370, 422, 449, 445, 454, 0,
	582, 605, 619, 631, 637, 638, 640, 641, 642, 643,
	644, 647, 645, 410, 314, 498, 336, 376, 0, 0,
	428, 475, 242, 609, 499, 201, 0, 0, 0, 0,
	257, 258, 0, 578, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 652, 511, 517, 512, 513, 514, 515, 516, 0,
	518, 0, 0, 0, 0, 0, 401, 0, 594, 595,
	675, 387, 489, 606, 338, 352, 355, 344, 364, 0,
	365, 340, 341, 346, 349, 350, 351, 356, 357, 361,
	367, 251, 212, 393, 402, 581, 315, 218, 219, 220,
	527, 528, 529, 530, 622, 623, 627, 207, 465, 466,
	467, 468, 295, 617, 312, 471, 470, 334, 335, 382,
	452, 543, 545, 556, 560, 562, 564, 570, 573, 544,
	546, 557, 561, 563, 565, 571, 574, 533, 535, 537,
	539, 552, 551, 548, 576, 577, 554, 559, 538, 550,
	555, 568, 575, 572, 532, 536, 540, 549, 567, 566,
	547, 558, 569, 553, 541, 534, 542, 0, 198, 223,
	371, 94, 457, 291, 653, 621, 487, 616, 208, 225,
	0, 265, 0, 0, 0, 0, 0, 0, 2440, 0,
	0, 2439, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	264, 279, 281, 288, 301, 313, 321, 322, 325, 331,
	383, 389, 390, 391, 392, 412, 413, 414, 417, 420,
	421, 424, 426, 427, 430, 434, 438, 439, 440, 442,
	444, 446, 458, 463, 477, 478, 479, 480, 481, 484,
	485, 491, 492, 493, 494, 495, 503, 504, 519, 589,
	591, 608, 628, 635, 483, 304, 305, 447, 448, 317,
	318, 649, 650, 303, 603, 636, 600, 648, 630, 441,
	381, 0, 0, 384, 284, 308, 323, 0, 620, 505,
	229, 469, 293, 253, 0, 0, 213, 248, 232, 262,
	277, 280, 327, 394, 403, 432, 437, 299, 274, 246,
	462, 243, 488, 522, 523, 524, 526, 398, 269, 436,
	399, 0, 379, 579, 580, 319, 0, 0, 86, 531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 369, 270, 0, 0, 206, 508,
	0, 433, 0, 205, 0, 490, 255, 380, 377, 586,
	285, 276, 272, 252, 320, 388, 431, 521, 425, 97,
	373, 0, 0, 500, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 326, 250, 328, 204, 416, 501, 289,
	0, 95, 0, 1760, 0, 510, 727, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 354, 363, 362, 342, 343, 345, 347,
	353, 360, 366, 339, 348, 0, 0, 612, 0, 0,
	0, 268, 324, 275, 267, 583, 0, 0, 0, 0,
	0, 0, 599, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 0, 405, 260, 0, 456, 0, 0,
	0, 632, 0, 0, 0, 0, 0, 0, 0, 368,
	0, 333, 199, 227, 0, 0, 415, 464, 476, 0,
	0, 0, 256, 0, 474, 429, 607, 235, 287, 461,
	435, 472, 443, 290, 0, 0, 473, 375, 588, 453,
	604, 633, 634, 266, 409, 618, 525, 626, 651, 228,
	263, 423, 509, 610, 497, 400, 584, 585, 332, 496,
	298, 203, 372, 639, 226, 482, 374, 244, 233, 590,
	615, 302, 254, 292, 459, 646, 215, 520, 601, 241,
	486, 0, 0, 654, 249, 507, 613, 602, 217, 597,
	506, 396, 329, 330, 216, 0, 460, 271, 296, 0,
	0, 261, 418, 592, 593, 259, 655, 230, 625, 222,
	0, 624, 411, 587, 598, 397, 386, 221, 596, 395,
	385, 337, 358, 359, 283, 310, 450, 378, 451, 309,
	311, 407, 406, 408, 209, 611, 629, 0, 210, 0,
	502, 614, 656, 455, 214, 236, 237, 239, 0, 282,
	286, 294, 297, 306, 307, 316, 370, 422, 449, 445,
	454, 0, 582, 605, 619, 631, 637, 638, 640, 641,
	642, 643, 644, 647, 645, 410, 314, 498, 336, 376,
	0, 0, 428, 475, 242, 609, 499, 201, 0, 0,
	0, 0, 257, 258, 0, 578, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 652, 511, 517, 512, 513, 514, 515,
	516, 0, 518, 0, 0, 0, 0, 0, 401, 0,
	594, 595, 675, 387, 489, 606, 338, 352, 355, 344,
	364, 0, 365, 340, 341, 346, 349, 350, 351, 356,
	357, 361, 367, 251, 212, 393, 402, 581, 315, 218,
	219, 220, 527, 528, 529, 530, 622, 623, 627, 207,
	465, 466, 467, 468, 295, 617, 312, 471, 470, 334,
	335, 382, 452, 543, 545, 556, 560, 562, 564, 570,
	573, 544, 546, 557, 561, 563, 565, 571, 574, 533,
	535, 537, 539, 552, 551, 548, 576, 577, 554, 559,
	538, 550, 555, 568, 575, 572, 532, 536, 540, 549,
	567, 566, 547, 558, 569, 553, 541, 534, 542, 0,
	198, 223, 371, 94, 457, 291, 653, 621, 487, 616,
	208, 225, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 202, 211, 224, 234,
	238, 245, 264, 279, 281, 288, 301, 313, 321, 322,
	325, 331, 383, 389, 390, 391, 392, 412, 413, 414,
	417, 420, 421, 424, 426, 427, 430, 434, 438, 439,
	440, 442, 444, 446, 458, 463, 477, 478, 479, 480,
	481, 484, 485, 491, 492, 493, 494, 495, 503, 504,
	519, 589, 591, 608, 628, 635, 483, 304, 305, 447,
	448, 317, 318, 649, 650, 303, 603, 636, 600, 648,
	630, 441, 381, 0, 0, 384, 284, 308, 323, 0,
	620, 505, 229, 469, 293, 253, 0, 0, 213, 248,
	232, 262, 277, 280, 327, 394, 403, 432, 437, 299,
	274, 246, 462, 243, 488, 522, 523, 524, 526, 398,
	269, 436, 1788, 0, 379, 579, 580, 319, 0, 0,
	0, 531, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 419, 0, 0, 1790, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 369, 270, 0, 0,
	206, 508, 0, 433, 0, 205, 0, 490, 255, 380,
	377, 586, 285, 276, 272, 252, 320, 388, 431, 521,
	425, 0, 373, 0, 0, 500, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 250, 328, 204, 416,
	501, 289, 0, 0, 0, 0, 1792, 510, 727, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 247, 0, 0, 0, 354, 363, 362, 342, 343,
	345, 347, 353, 360, 366, 339, 348, 0, 0, 612,
	0, 0, 0, 268, 324, 275, 267, 583, 0, 0,
	0, 0, 0, 0, 599, 0, 0, 231, 0, 0,
	0, 1485, 0, 1486, 1487, 0, 0, 0, 0, 0,
	0, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 405, 260, 0, 456,
	0, 0, 0, 632, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 333, 199, 227, 0, 0, 415, 464,
	476, 0, 0, 0, 256, 0, 474, 429, 607, 235,
	287, 461, 435, 472, 443, 290, 0, 0, 473, 375,
	588, 453, 604, 633, 634, 266, 409, 618, 525, 626,
	651, 228, 263, 423, 509, 610, 497, 400, 584, 585,
	332, 496, 298, 203, 372, 639, 226, 482, 374, 244,
	233, 590, 615, 302, 254, 292, 459, 646, 215, 520,
	601, 241, 486, 0, 0, 654, 249, 507, 613, 602,
	217, 597, 506, 396, 329, 330, 216, 0, 460, 271,
	296, 0, 0, 261, 418, 592, 593, 259, 655, 230,
	625, 222, 0, 624, 411, 587, 598, 397, 386, 221,
	596, 395, 385, 337, 358, 359, 283, 310, 450, 378,
	451, 309, 311, 407, 406, 408, 209, 611, 629, 0,
	210, 0, 502, 614, 656, 455, 214, 236, 237, 239,
	0, 282, 286, 294, 297, 306, 307, 316, 370, 422,
	449, 445, 454, 0, 582, 605, 619, 631, 637, 638,
	640, 641, 642, 643, 644, 647, 645, 410, 314, 498,
	336, 376, 0, 0, 428, 475, 242, 609, 499, 201,
	0, 0, 0, 0, 257, 258, 0, 578, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 652, 511, 517, 512, 513,
	514, 515, 516, 0, 518, 0, 0, 0, 0, 0,
	401, 0, 594, 595, 675, 387, 489, 606, 338, 352,
	355, 344, 364, 0, 365, 340, 341, 346, 349, 350,
	351, 356, 357, 361, 367, 251, 212, 393, 402, 581,
	315, 218, 219, 220, 527, 528, 529, 530, 622, 623,
	627, 207, 465, 466, 467, 468, 295, 617, 312, 471,
	470, 334, 335, 382, 452, 543, 545, 556, 560, 562,
	564, 570, 573, 544, 546, 557, 561, 563, 565, 571,
	574, 533, 535, 537, 539, 552, 551, 548, 576, 577,
	554, 559, 538, 550, 555, 568, 575, 572, 532, 536,
	540, 549, 567, 566, 547, 558, 569, 553, 541, 534,
	542, 0, 198, 223, 371, 0, 457, 291, 653, 621,
	487, 616, 208, 225, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 202, 211,
	224, 234, 238, 245, 264, 279, 281, 288, 301, 313,
	321, 322, 325, 331, 383, 389, 390, 391, 392, 412,
	413, 414, 417, 420, 421, 424, 426, 427, 430, 434,
	438, 439, 440, 442, 444, 446, 458, 463, 477, 478,
	479, 480, 481, 484, 485, 491, 492, 493, 494, 495,
	503, 504, 519, 589, 591, 608, 628, 635, 483, 304,
	305, 447, 448, 317, 318, 649, 650, 303, 603, 636,
	600, 648, 630, 441, 381, 0, 0, 384, 284, 308,
	323, 0, 620, 505, 229, 469, 293, 253, 0, 0,
	213, 248, 232, 262, 277, 280, 327, 394, 403, 432,
	437, 299, 274, 246, 462, 243, 488, 522, 523, 524,
	526, 398, 269, 436, 399, 0, 379, 579, 580, 319,
	0, 0, 0, 531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 369, 270,
	0, 0, 206, 508, 0, 433, 0, 205, 0, 490,
	255, 380, 377, 586, 285, 276, 272, 252, 320, 388,
	431, 521, 425, 0, 373, 0, 0, 500, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 326, 250, 328,
	204, 416, 501, 289, 0, 95, 0, 0, 0, 510,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 247, 0, 0, 0, 354, 363, 362,
	342, 343, 345, 347, 353, 360, 366, 339, 348, 0,
	0, 612, 0, 0, 0, 268, 324, 275, 267, 583,
	0, 0, 0, 0, 0, 0, 599, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 405, 260,
	0, 456, 0, 0, 0, 632, 0, 0, 0, 0,
	0, 0, 0, 368, 0, 333, 199, 227, 0, 0,
	415, 464, 476, 0, 0, 0, 256, 0, 474, 429,
	607, 235, 287, 461, 435, 472, 443, 290, 0, 0,
	473, 375, 588, 453, 604, 633, 634, 266, 409, 618,
	525, 626, 651, 228, 263, 423, 509, 610, 497, 400,
	584, 585, 332, 496, 298, 203, 372, 639, 226, 482,
	374, 244, 233, 590, 615, 302, 254, 292, 459, 646,
	215, 520, 601, 241, 486, 0, 0, 654, 249, 507,
	613, 602, 217, 597, 506, 396, 329, 330, 216, 0,
	460, 271, 296, 0, 0, 261, 418, 592, 593, 259,
	655, 230, 625, 222, 0, 624, 411, 587, 598, 397,
	386, 221, 596, 395, 385, 337, 358, 359, 283, 310,
	450, 378, 451, 309, 311, 407, 406, 408, 209, 611,
	629, 0, 210, 0, 502, 614, 656, 455, 214, 236,
	237, 239, 0, 282, 286, 294, 297, 306, 307, 316,
	370, 422, 449, 445, 454, 0, 582, 605, 619, 631,
	637, 638, 640, 641, 642, 643, 644, 647, 645, 410,
	314, 498, 336, 376, 0, 0, 428, 475, 242, 609,
	499, 201, 0, 0, 0, 0, 257, 258, 0, 578,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 652, 511, 517,
	512, 513, 514, 515, 516, 0, 518, 0, 0, 0,
	0, 0, 401, 0, 594, 595, 675, 387, 489, 606,
	338, 352, 355, 344, 364, 0, 365, 340, 341, 346,
	349, 350, 351, 356, 357, 361, 367, 251, 212, 393,
	402, 581, 315, 218, 219, 220, 527, 528, 529, 530,
	622, 623, 627, 207, 465, 466, 467, 468, 295, 617,
	312, 471, 470, 334, 335, 382, 452, 543, 545, 556,
	560, 562, 564, 570, 573, 544, 546, 557, 561, 563,
	565, 571, 574, 533, 535, 537, 539, 552, 551, 548,
	576, 577, 554, 559, 538, 550, 555, 568, 575, 572,
	532, 536, 540, 549, 567, 566, 547, 558, 569, 553,
	541, 534, 542, 0, 198, 223, 371, 0, 457, 291,
	653, 621, 487, 616, 208, 225, 0, 265, 0, 0,
	0, 0, 0, 0, 2440, 0, 0, 2439, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	202, 211, 224, 234, 238, 245, 264, 279, 281, 288,
	301, 313, 321, 322, 325, 331, 383, 389, 390, 391,
	392, 412, 413, 414, 417, 420, 421, 424, 426, 427,
	430, 434, 438, 439, 440, 442, 444, 446, 458, 463,
	477, 478, 479, 480, 481, 484, 485, 491, 492, 493,
	494, 495, 503, 504, 519, 589, 591, 608, 628, 635,
	483, 304, 305, 447, 448, 317, 318, 649, 650, 303,
	603, 636, 600, 648, 630, 441, 381, 0, 0, 384,
	284, 308, 323, 0, 620, 505, 229, 469, 293, 253,
	0, 0, 213, 248, 232, 262, 277, 280, 327, 394,
	403, 432, 437, 299, 274, 246, 462, 243, 488, 522,
	523, 524, 526, 398, 269, 436, 399, 0, 379, 579,
	580, 319, 0, 0, 0, 531, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 419, 0, 0,
	2385, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	369, 270, 0, 0, 206, 508, 0, 433, 0, 205,
	0, 490, 255, 380, 377, 586, 285, 276, 272, 252,
	320, 388, 431, 521, 425, 0, 373, 0, 0, 500,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 326,
	250, 328, 204, 416, 501, 289, 0, 0, 0, 0,
	1973, 510, 196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 247, 0, 0, 0, 354,
	363, 362, 342, 343, 345, 347, 353, 360, 366, 339,
	348, 0, 0, 612, 0, 0, 0, 268, 324, 275,
	267, 583, 0, 0, 0, 0, 0, 0, 599, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	405, 260, 0, 456, 0, 0, 0, 632, 0, 0,
	0, 0, 0, 0, 0, 368, 0, 333, 199, 227,
	0, 0, 415, 464, 476, 0, 0, 0, 256, 0,
	474, 429, 607, 235, 287, 461, 435, 472, 443, 290,
	0, 2383, 473, 375, 588, 453, 604, 633, 634, 266,
	409, 618, 525, 626, 651, 228, 263, 423, 509, 610,
	497, 400, 584, 585, 332, 496, 298, 203, 372, 639,
	226, 482, 374, 244, 233, 590, 615, 302, 254, 292,
	459, 646, 215, 520, 601, 241, 486, 0, 0, 654,
	249, 507, 613, 602, 217, 597, 506, 396, 329, 330,
	216, 0, 460, 271, 296, 0, 0, 261, 418, 592,
	593, 259, 655, 230, 625, 222, 0, 624, 411, 587,
	598, 397, 386, 221, 596, 395, 385, 337, 358, 359,
	283, 310, 450, 378, 451, 309, 311, 407, 406, 408,
	209, 611, 629, 0, 210, 0, 502, 614, 656, 455,
	214, 236, 237, 239, 0, 282, 286, 294, 297, 306,
	307, 316, 370, 422, 449, 445, 454, 0, 582, 605,
	619, 631, 637, 638, 640, 641, 642, 643, 644, 647,
	645, 410, 314, 498, 336, 376, 0, 0, 428, 475,
	242, 609, 499, 201, 0, 0, 0, 0, 257, 258,
	0, 578, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 652,
	511, 517, 512, 513, 514, 515, 516, 0, 518, 0,
	0, 0, 0, 0, 401, 0, 594, 595, 675, 387,
	489, 606, 338, 352, 355, 344, 364, 0, 365, 340,
	341, 346, 349, 350, 351, 356, 357, 361, 367, 251,
	212, 393, 402, 581, 315, 218, 219, 220, 527, 528,
	529, 530, 622, 623, 627, 207, 465, 466, 467, 468,
	295, 617, 312, 471, 470, 334, 335, 382, 452, 543,
	545, 556, 560, 562, 564, 570, 573, 544, 546, 557,
	561, 563, 565, 571, 574, 533, 535, 537, 539, 552,
	551, 548, 576, 577, 554, 559, 538, 550, 555, 568,
	575, 572, 532, 536, 540, 549, 567, 566, 547, 558,
	569, 553, 541, 534, 542, 0, 198, 223, 371, 0,
	457, 291, 653, 621, 487, 616, 208, 225, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 202, 211, 224, 234, 238, 245, 264, 279,
	281, 288, 301, 313, 321, 322, 325, 331, 383, 389,
	390, 391, 392, 412, 413, 414, 417, 420, 421, 424,
	426, 427, 430, 434, 438, 439, 440, 442, 444, 446,
	458, 463, 477, 478, 479, 480, 481, 484, 485, 491,
	492, 493, 494, 495, 503, 504, 519, 589, 591, 608,
	628, 635, 483, 304, 305, 447, 448, 317, 318, 649,
	650, 303, 603, 636, 600, 648, 630, 441, 381, 0,
	0, 384, 284, 308, 323, 0, 620, 505, 229, 469,
	293, 253, 0, 0, 213, 248, 232, 262, 277, 280,
	327, 394, 403, 432, 437, 299, 274, 246, 462, 243,
	488, 522, 523, 524, 526, 398, 269, 436, 399, 0,
	379, 579, 580, 319, 0, 0, 0, 531, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 369, 270, 0, 0, 206, 508, 0, 433,
	0, 205, 0, 490, 255, 380, 377, 586, 285, 276,
	272, 252, 320, 388, 431, 521, 425, 0, 373, 0,
	0, 500, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 326, 250, 328, 204, 416, 501, 289, 0, 0,
	0, 0, 0, 510, 727, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 247, 0, 0,
	0, 354, 363, 362, 342, 343, 345, 347, 353, 360,
	366, 339, 348, 0, 0, 612, 0, 0, 0, 268,
	324, 275, 267, 583, 0, 0, 0, 0, 0, 0,
	599, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 1098, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 405, 260, 0, 456, 0, 0, 0, 632,
	0, 0, 0, 0, 0, 0, 0, 368, 1104, 333,
	199, 227, 1102, 0, 415, 464, 476, 0, 0, 0,
	256, 0, 474, 429, 607, 235, 287, 461, 435, 472,
	443, 290, 0, 0, 473, 375, 588, 453, 604, 633,
	634, 266, 409, 618, 525, 626, 651, 228, 263, 423,
	509, 610, 497, 400, 584, 585, 332, 496, 298, 203,
	372, 639, 226, 482, 374, 244, 233, 590, 615, 302,
	254, 292, 459, 646, 215, 520, 601, 241, 486, 0,
	0, 654, 249, 507, 613, 602, 217, 597, 506, 396,
	329, 330, 216, 0, 460, 271, 296, 0, 0, 261,
	418, 592, 593, 259, 655, 230, 625, 222, 0, 624,
	411, 587, 598, 397, 386, 221, 596, 395, 385, 337,
	358, 359, 283, 310, 450, 378, 451, 309, 311, 407,
	406, 408, 209, 611, 629, 0, 210, 0, 502, 614,
	656, 455, 214, 236, 237, 239, 0, 282, 286, 294,
	297, 306, 307, 316, 370, 422, 449, 445, 454, 0,
	582, 605, 619, 631, 637, 638, 640, 641, 642, 643,
	644, 647, 645, 410, 314, 498, 336, 376, 0, 0,
	428, 475, 242, 609, 499, 201, 0, 0, 0, 0,
	257, 258, 0, 578, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 652, 511, 517, 512, 513, 514, 515, 516, 0,
	518, 0, 0, 0, 0, 0, 401, 0, 594, 595,
	675, 387, 489, 606, 338, 352, 355, 344, 364, 0,
	365, 340, 341, 346, 349, 350, 351, 356, 357, 361,
	367, 251, 212, 393, 402, 581, 315, 218, 219, 220,
	527, 528, 529, 530, 622, 623, 627, 207, 465, 466,
	467, 468, 295, 617, 312, 471, 470, 334, 335, 382,
	452, 543, 545, 556, 560, 562, 564, 570, 573, 544,
	546, 557, 561, 563, 565, 571, 574, 533, 535, 537,
	539, 552, 551, 548, 576, 577, 554, 559, 538, 550,
	555, 568, 575, 572, 532, 536, 540, 549, 567, 566,
	547, 558, 569, 553, 541, 534, 542, 0, 198, 223,
	371, 0, 457, 291, 653, 621, 487, 616, 208, 225,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	264, 279, 281, 288, 301, 313, 321, 322, 325, 331,
	383, 389, 390, 391, 392, 412, 413, 414, 417, 420,
	421, 424, 426, 427, 430, 434, 438, 439, 440, 442,
	444, 446, 458, 463, 477, 478, 479, 480, 481, 484,
	485, 491, 492, 493, 494, 495, 503, 504, 519, 589,
	591, 608, 628, 635, 483, 304, 305, 447, 448, 317,
	318, 649, 650, 303, 603, 636, 600, 648, 630, 441,
	381, 0, 0, 384, 284, 308, 323, 0, 620, 505,
	229, 469, 293, 253, 0, 0, 213, 248, 232, 262,
	277, 280, 327, 394, 403, 432, 437, 299, 274, 246,
	462, 243, 488, 522, 523, 524, 526, 398, 269, 436,
	399, 0, 379, 579, 580, 319, 0, 0, 0, 531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 419, 0, 0, 2385, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 369, 270, 0, 0, 206, 508,
	0, 433, 0, 205, 0, 490, 255, 380, 377, 586,
	285, 276, 272, 252, 320, 388, 431, 521, 425, 0,
	373, 0, 0, 500, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 326, 250, 328, 204, 416, 501, 289,
	0, 0, 0, 0, 1973, 510, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 354, 363, 362, 342, 343, 345, 347,
	353, 360, 366, 339, 348, 0, 0, 612, 0, 0,
	0, 268, 324, 275, 267, 583, 0, 0, 0, 0,
	0, 0, 599, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 0, 405, 260, 0, 456, 0, 0,
	0, 632, 0, 0, 0, 0, 0, 0, 0, 368,
	0, 333, 199, 227, 0, 0, 415, 464, 476, 0,
	0, 0, 256, 0, 474, 429, 607, 235, 287, 461,
	435, 472, 443, 290, 0, 0, 473, 375, 588, 453,
	604, 633, 634, 266, 409, 618, 525, 626, 651, 228,
	263, 423, 509, 610, 497, 400, 584, 585, 332, 496,
	298, 203, 372, 639, 226, 482, 374, 244, 233, 590,
	615, 302, 254, 292, 459, 646, 215, 520, 601, 241,
	486, 0, 0, 654, 249, 507, 613, 602, 217, 597,
	506, 396, 329, 330, 216, 0, 460, 271, 296, 0,
	0, 261, 418, 592, 593, 259, 655, 230, 625, 222,
	0, 624, 411, 587, 598, 397, 386, 221, 596, 395,
	385, 337, 358, 359, 283, 310, 450, 378, 451, 309,
	311, 407, 406, 408, 209, 611, 629, 0, 210, 0,
	502, 614, 656, 455, 214, 236, 237, 239, 0, 282,
	286, 294, 297, 306, 307, 316, 370, 422, 449, 445,
	454, 0, 582, 605, 619, 631, 637, 638, 640, 641,
	642, 643, 644, 647, 645, 410, 314, 498, 336, 376,
	0, 0, 428, 475, 242, 609, 499, 201, 0, 0,
	0, 0, 257, 258, 0, 578, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 652, 511, 517, 512, 513, 514, 515,
	516, 0, 518, 0, 0, 0, 0, 0, 401, 0,
	594, 595, 675, 387, 489, 606, 338, 352, 355, 344,
	364, 0, 365, 340, 341, 346, 349, 350, 351, 356,
	357, 361, 367, 251, 212, 393, 402, 581, 315, 218,
	219, 220, 527, 528, 529, 530, 622, 623, 627, 207,
	465, 466, 467, 468, 295, 617, 312, 471, 470, 334,
	335, 382, 452, 543, 545, 556, 560, 562, 564, 570,
	573, 544, 546, 557, 561, 563, 565, 571, 574, 533,
	535, 537, 539, 552, 551, 548, 576, 577, 554, 559,
	538, 550, 555, 568, 575, 572, 532, 536, 540, 549,
	567, 566, 547, 558, 569, 553, 541, 534, 542, 0,
	198, 223, 371, 0, 457, 291, 653, 621, 487, 616,
	208, 225, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 202, 211, 224, 234,
	238, 245, 264, 279, 281, 288, 301, 313, 321, 322,
	325, 331, 383, 389, 390, 391, 392, 412, 413, 414,
	417, 420, 421, 424, 426, 427, 430, 434, 438, 439,
	440, 442, 444, 446, 458, 463, 477, 478, 479, 480,
	481, 484, 485, 491, 492, 493, 494, 495, 503, 504,
	519, 589, 591, 608, 628, 635, 483, 304, 305, 447,
	448, 317, 318, 649, 650, 303, 603, 636, 600, 648,
	630, 441, 381, 0, 0, 384, 284, 308, 323, 0,
	620, 505, 229, 469, 293, 253, 0, 0, 213, 248,
	232, 262, 277, 280, 327, 394, 403, 432, 437, 299,
	274, 246, 462, 243, 488, 522, 523, 524, 526, 398,
	269, 436, 399, 0, 379, 579, 580, 319, 0, 0,
	0, 531, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 419, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 369, 270, 0, 0,
	206, 508, 0, 433, 0, 205, 0, 490, 255, 380,
	377, 586, 285, 276, 272, 252, 320, 388, 431, 521,
	425, 0, 373, 0, 0, 500, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 250, 328, 204, 416,
	501, 289, 0, 0, 0, 1760, 0, 510, 727, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 247, 0, 0, 0, 354, 363, 362, 342, 343,
	345, 347, 353, 360, 366, 339, 348, 0, 0, 612,
	0, 0, 0, 268, 324, 275, 267, 583, 0, 0,
	0, 0, 0, 0, 599, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 405, 260, 0, 456,
	0, 0, 0, 632, 0, 0, 0, 3744, 0, 0,
	0, 368, 0, 333, 199, 227, 0, 0, 415, 464,
	476, 0, 0, 0, 256, 0, 474, 429, 607, 235,
	287, 461, 435, 472, 443, 290, 0, 0, 473, 375,
	588, 453, 604, 633, 634, 266, 409, 618, 525, 626,
	651, 228, 263, 423, 509, 610, 497, 400, 584, 585,
	332, 496, 298, 203, 372, 639, 226, 482, 374, 244,
	233, 590, 615, 302, 254, 292, 459, 646, 215, 520,
	601, 241, 486, 0, 0, 654, 249, 507, 613, 602,
	217, 597, 506, 396, 329, 330, 216, 0, 460, 271,
	296, 0, 0, 261, 418, 592, 593, 259, 655, 230,
	625, 222, 0, 624, 411, 587, 598, 397, 386, 221,
	596, 395, 385, 337, 358, 359, 283, 310, 450, 378,
	451, 309, 311, 407, 406, 408, 209, 611, 629, 0,
	210, 0, 502, 614, 656, 455, 214, 236, 237, 239,
	0, 282, 286, 294, 297, 306, 307, 316, 370, 422,
	449, 445, 454, 0, 582, 605, 619, 631, 637, 638,
	640, 641, 642, 643, 644, 647, 645, 410, 314, 498,
	336, 376, 0, 0, 428, 475, 242, 609, 499, 201,
	0, 0, 0, 0, 257, 258, 0, 578, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 652, 511, 517, 512, 513,
	514, 515, 516, 0, 518, 0, 0, 0, 0, 0,
	401, 0, 594, 595, 675, 387, 489, 606, 338, 352,
	355, 344, 364, 0, 365, 340, 341, 346, 349, 350,
	351, 356, 357, 361, 367, 251, 212, 393, 402, 581,
	315, 218, 219, 220, 527, 528, 529, 530, 622, 623,
	627, 207, 465, 466, 467, 468, 295, 617, 312, 471,
	470, 334, 335, 382, 452, 543, 545, 556, 560, 562,
	564, 570, 573, 544, 546, 557, 561, 563, 565, 571,
	574, 533, 535, 537, 539, 552, 551, 548, 576, 577,
	554, 559, 538, 550, 555, 568, 575, 572, 532, 536,
	540, 549, 567, 566, 547, 558, 569, 553, 541, 534,
	542, 0, 198, 223, 371, 0, 457, 291, 653, 621,
	487, 616, 208, 225, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 202, 211,
	224, 234, 238, 245, 264, 279, 281, 288, 301, 313,
	321, 322, 325, 331, 383, 389, 390, 391, 392, 412,
	413, 414, 417, 420, 421, 424, 426, 427, 430, 434,
	438, 439, 440, 442, 444, 446, 458, 463, 477, 478,
	479, 480, 481, 484, 485, 491, 492, 493, 494, 495,
	503, 504, 519, 589, 591, 608, 628, 635, 483, 304,
	305, 447, 448, 317, 318, 649, 650, 303, 603, 636,
	600, 648, 630, 441, 381, 0, 0, 384, 284, 308,
	323, 0, 620, 505, 229, 469, 293, 253, 0, 0,
	213, 248, 232, 262, 277, 280, 327, 394, 403, 432,
	437, 299, 274, 246, 462, 243, 488, 522, 523, 524,
	526, 398, 269, 436, 399, 0, 379, 579, 580, 319,
	0, 0, 0, 531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 369, 270,
	0, 0, 206, 508, 0, 433, 0, 205, 0, 490,
	255, 380, 377, 586, 285, 276, 272, 252, 320, 388,
	431, 521, 425, 0, 373, 0, 0, 500, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 326, 250, 328,
	204, 416, 501, 289, 0, 0, 0, 0, 2144, 510,
	727, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 247, 0, 0, 0, 354, 363, 362,
	342, 343, 345, 347, 353, 360, 366, 339, 348, 0,
	0, 612, 0, 0, 0, 268, 324, 275, 267, 583,
	0, 0, 0, 0, 0, 0, 599, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2145, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 405, 260,
	0, 456, 0, 0, 0, 632, 0, 0, 0, 0,
	0, 0, 0, 368, 0, 333, 199, 227, 0, 0,
	415, 464, 476, 0, 0, 0, 256, 0, 474, 429,
	607, 235, 287, 461, 435, 472, 443, 290, 0, 0,
	473, 375, 588, 453, 604, 633, 634, 266, 409, 618,
	525, 626, 651, 228, 263, 423, 509, 610, 497, 400,
	584, 585, 332, 496, 298, 203, 372, 639, 226, 482,
	374, 244, 233, 590, 615, 302, 254, 292, 459, 646,
	215, 520, 601, 241, 486, 0, 0, 654, 249, 507,
	613, 602, 217, 597, 506, 396, 329, 330, 216, 0,
	460, 271, 296, 0, 0, 261, 418, 592, 593, 259,
	655, 230, 625, 222, 0, 624, 411, 587, 598, 397,
	386, 221, 596, 395, 385, 337, 358, 359, 283, 310,
	450, 378, 451, 309, 311, 407, 406, 408, 209, 611,
	629, 0, 210, 0, 502, 614, 656, 455, 214, 236,
	237, 239, 0, 282, 286, 294, 297, 306, 307, 316,
	370, 422, 449, 445, 454, 0, 582, 605, 619, 631,
	637, 638, 640, 641, 642, 643, 644, 647, 645, 410,
	314, 498, 336, 376, 0, 0, 428, 475, 242, 609,
	499, 201, 0, 0, 0, 0, 257, 258, 0, 578,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 652, 511, 517,
	512, 513, 514, 515, 516, 0, 518, 0, 0, 0,
	0, 0, 401, 0, 594, 595, 675, 387, 489, 606,
	338, 352, 355, 344, 364, 0, 365, 340, 341, 346,
	349, 350, 351, 356, 357, 361, 367, 251, 212, 393,
	402, 581, 315, 218, 219, 220, 527, 528, 529, 530,
	622, 623, 627, 207, 465, 466, 467, 468, 295, 617,
	312, 471, 470, 334, 335, 382, 452, 543, 545, 556,
	560, 562, 564, 570, 573, 544, 546, 557, 561, 563,
	565, 571, 574, 533, 535, 537, 539, 552, 551, 548,
	576, 577, 554, 559, 538, 550, 555, 568, 575, 572,
	532, 536, 540, 549, 567, 566, 547, 558, 569, 553,
	541, 534, 542, 0, 198, 223, 371, 0, 457, 291,
	653, 621, 487, 616, 208, 225, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	202, 211, 224, 234, 238, 245, 264, 279, 281, 288,
	301, 313, 321, 322, 325, 331, 383, 389, 390, 391,
	392, 412, 413, 414, 417, 420, 421, 424, 426, 427,
	430, 434, 438, 439, 440, 442, 444, 446, 458, 463,
	477, 478, 479, 480, 481, 484, 485, 491, 492, 493,
	494, 495, 503, 504, 519, 589, 591, 608, 628, 635,
	483, 304, 305, 447, 448, 317, 318, 649, 650, 303,
	603, 636, 600, 648, 630, 441, 381, 0, 0, 384,
	284, 308, 323, 0, 620, 505, 229, 469, 293, 253,
	0, 0, 213, 248, 232, 262, 277, 280, 327, 394,
	403, 432, 437, 299, 274, 246, 462, 243, 488, 522,
	523, 524, 526, 398, 269, 436, 399, 0, 379, 579,
	580, 319, 0, 0, 0, 531, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 419, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	369, 270, 0, 0, 206, 508, 0, 433, 0, 205,
	0, 490, 255, 380, 377, 586, 285, 276, 272, 252,
	320, 388, 431, 521, 425, 0, 373, 0, 0, 500,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 326,
	250, 328, 204, 416, 501, 289, 0, 0, 0, 0,
	2896, 510, 727, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 247, 0, 0, 0, 354,
	363, 362, 342, 343, 345, 347, 353, 360, 366, 339,
	348, 0, 0, 612, 0, 0, 0, 268, 324, 275,
	267, 583, 0, 0, 0, 0, 0, 0, 599, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2897, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	405, 260, 0, 456, 0, 0, 0, 632, 0, 0,
	0, 0, 0, 0, 0, 368, 0, 333, 199, 227,
	0, 0, 415, 464, 476, 0, 0, 0, 256, 0,
	474, 429, 607, 235, 287, 461, 435, 472, 443, 290,
	0, 0, 473, 375, 588, 453, 604, 633, 634, 266,
	409, 618, 525, 626, 651, 228, 263, 423, 509, 610,
	497, 400, 584, 585, 332, 496, 298, 203, 372, 639,
	226, 482, 374, 244, 233, 590, 615, 302, 254, 292,
	459, 646, 215, 520, 601, 241, 486, 0, 0, 654,
	249, 507, 613, 602, 217, 597, 506, 396, 329, 330,
	216, 0, 460, 271, 296, 0, 0, 261, 418, 592,
	593, 259, 655, 230, 625, 222, 0, 624, 411, 587,
	598, 397, 386, 221, 596, 395, 385, 337, 358, 359,
	283, 310, 450, 378, 451, 309, 311, 407, 406, 408,
	209, 611, 629, 0, 210, 0, 502, 614, 656, 455,
	214, 236, 237, 239, 0, 282, 286, 294, 297, 306,
	307, 316, 370, 422, 449, 445, 454, 0, 582, 605,
	619, 631, 637, 638, 640, 641, 642, 643, 644, 647,
	645, 410, 314, 498, 336, 376, 0, 0, 428, 475,
	242, 609, 499, 201, 0, 0, 0, 0, 257, 258,
	0, 578, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 652,
	511, 517, 512, 513, 514, 515, 516, 0, 518, 0,
	0, 0, 0, 0, 401, 0, 594, 595, 675, 387,
	489, 606, 338, 352, 355, 344, 364, 0, 365, 340,
	341, 346, 349, 350, 351, 356, 357, 361, 367, 251,
	212, 393, 402, 581, 315, 218, 219, 220, 527, 528,
	529, 530, 622, 623, 627, 207, 465, 466, 467, 468,
	295, 617, 312, 471, 470, 334, 335, 382, 452, 543,
	545, 556, 560, 562, 564, 570, 573, 544, 546, 557,
	561, 563, 565, 571, 574, 533, 535, 537, 539, 552,
	551, 548, 576, 577, 554, 559, 538, 550, 555, 568,
	575, 572, 532, 536, 540, 549, 567, 566, 547, 558,
	569, 553, 541, 534, 542, 0, 198, 223, 371, 0,
	457, 291, 653, 621, 487, 616, 208, 225, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 202, 211, 224, 234, 238, 245, 264, 279,
	281, 288, 301, 313, 321, 322, 325, 331, 383, 389,
	390, 391, 392, 412, 413, 414, 417, 420, 421, 424,
	426, 427, 430, 434, 438, 439, 440, 442, 444, 446,
	458, 463, 477, 478, 479, 480, 481, 484, 485, 491,
	492, 493, 494, 495, 503, 504, 519, 589, 591, 608,
	628, 635, 483, 304, 305, 447, 448, 317, 318, 649,
	650, 303, 603, 636, 600, 648, 630, 441, 381, 0,
	0, 384, 284, 308, 323, 0, 620, 505, 229, 469,
	293, 253, 0, 0, 213, 248, 232, 262, 277, 280,
	327, 394, 403, 432, 437, 299, 274, 246, 462, 243,
	488, 522, 523, 524, 526, 398, 269, 436, 399, 0,
	379, 579, 580, 319, 0, 0, 0, 531, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 369, 270, 0, 0, 206, 508, 0, 433,
	0, 205, 0, 490, 255, 380, 377, 586, 285, 276,
	272, 252, 320, 388, 431, 521, 425, 0, 373, 0,
	0, 500, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 326, 250, 328, 204, 416, 501, 289, 0, 0,
	0, 0, 0, 510, 727, 0, 0, 0, 0, 2879,
	0, 0, 0, 0, 240, 0, 0, 247, 2880, 0,
	0, 354, 363, 362, 342, 343, 345, 347, 353, 360,
	366, 339, 348, 0, 0, 612, 0, 0, 0, 268,
	324, 275, 267, 583, 0, 0, 0, 0, 0, 0,
	599, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 405, 260, 0, 456, 0, 0, 0, 632,
	0, 0, 0, 0, 0, 0, 0, 368, 0, 333,
	199, 227, 0, 0, 415, 464, 476, 0, 0, 0,
	256, 0, 474, 429, 607, 235, 287, 461, 435, 472,
	443, 290, 0, 0, 473, 375, 588, 453, 604, 633,
	634, 266, 409, 618, 525, 626, 651, 228, 263, 423,
	509, 610, 497, 400, 584, 585, 332, 496, 298, 203,
	372, 639, 226, 482, 374, 244, 233, 590, 615, 302,
	254, 292, 459, 646, 215, 520, 601, 241, 486, 0,
	0, 654, 249, 507, 613, 602, 217, 597, 506, 396,
	329, 330, 216, 0, 460, 271, 296, 0, 0, 261,
	418, 592, 593, 259, 655, 230, 625, 222, 0, 624,
	411, 587, 598, 397, 386, 221, 596, 395, 385, 337,
	358, 359, 283, 310, 450, 378, 451, 309, 311, 407,
	406, 408, 209, 611, 629, 0, 210, 0, 502, 614,
	656, 455, 214, 236, 237, 239, 0, 282, 286, 294,
	297, 306, 307, 316, 370, 422, 449, 445, 454, 0,
	582, 605, 619, 631, 637, 638, 640, 641, 642, 643,
	644, 647, 645, 410, 314, 498, 336, 376, 0, 0,
	428, 475, 242, 609, 499, 201, 0, 0, 0, 0,
	257, 258, 0, 578, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 652, 511, 517, 512, 513, 514, 515, 516, 0,
	518, 0, 0, 0, 0, 0, 401, 0, 594, 595,
	675, 387, 489, 606, 338, 352, 355, 344, 364, 0,
	365, 340, 341, 346, 349, 350, 351, 356, 357, 361,
	367, 251, 212, 393, 402, 581, 315, 218, 219, 220,
	527, 528, 529, 530, 622, 623, 627, 207, 465, 466,
	467, 468, 295, 617, 312, 471, 470, 334, 335, 382,
	452, 543, 545, 556, 560, 562, 564, 570, 573, 544,
	546, 557, 561, 563, 565, 571, 574, 533, 535, 537,
	539, 552, 551, 548, 576, 577, 554, 559, 538, 550,
	555, 568, 575, 572, 532, 536, 540, 549, 567, 566,
	547, 558, 569, 553, 541, 534, 542, 0, 198, 223,
	371, 0, 457, 291, 653, 621, 487, 616, 208, 225,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	264, 279, 281, 288, 301, 313, 321, 322, 325, 331,
	383, 389, 390, 391, 392, 412, 413, 414, 417, 420,
	421, 424, 426, 427, 430, 434, 438, 439, 440, 442,
	444, 446, 458, 463, 477, 478, 479, 480, 481, 484,
	485, 491, 492, 493, 494, 495, 503, 504, 519, 589,
	591, 608, 628, 635, 483, 304, 305, 447, 448, 317,
	318, 649, 650, 303, 603, 636, 600, 648, 630, 441,
	381, 0, 0, 384, 284, 308, 323, 0, 620, 505,
	229, 469, 293, 253, 0, 0, 213, 248, 232, 262,
	277, 280, 327, 394, 403, 432, 437, 299, 274, 246,
	462, 243, 488, 522, 523, 524, 526, 398, 269, 436,
	399, 0, 379, 579, 580, 319, 0, 0, 0, 531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 273,
	1811, 0, 0, 0, 369, 270, 0, 0, 206, 508,
	0, 433, 0, 205, 0, 490, 255, 380, 377, 586,
	285, 276, 272, 252, 320, 388, 431, 521, 425, 0,
	373, 0, 0, 500, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 326, 250, 328, 204, 416, 501, 289,
	0, 0, 0, 0, 1810, 510, 727, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 354, 363, 362, 342, 343, 345, 347,
	353, 360, 366, 339, 348, 0, 0, 612, 0, 0,
	0, 268, 324, 275, 267, 583, 0, 0, 0, 0,
	0, 0, 599, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 0, 405, 260, 0, 456, 0, 0,
	0, 632, 0, 0, 0, 0, 0, 0, 0, 368,
	0, 333, 199, 227, 0, 0, 415, 464, 476, 0,
	0, 0, 256, 0, 474, 429, 607, 235, 287, 461,
	435, 472, 443, 290, 0, 0, 473, 375, 588, 453,
	604, 633, 634, 266, 409, 618, 525, 626, 651, 228,
	263, 423, 509, 610, 497, 400, 584, 585, 332, 496,
	298, 203, 372, 639, 226, 482, 374, 244, 233, 590,
	615, 302, 254, 292, 459, 646, 215, 520, 601, 241,
	486, 0, 0, 654, 249, 507, 613, 602, 217, 597,
	506, 396, 329, 330, 216, 0, 460, 271, 296, 0,
	0, 261, 418, 592, 593, 259, 655, 230, 625, 222,
	0, 624, 411, 587, 598, 397, 386, 221, 596, 395,
	385, 337, 358, 359, 283, 310, 450, 378, 451, 309,
	311, 407, 406, 408, 209, 611, 629, 0, 210, 0,
	502, 614, 656, 455, 214, 236, 237, 239, 0, 282,
	286, 294, 297, 306, 307, 316, 370, 422, 449, 445,
	454, 0, 582, 605, 619, 631, 637, 638, 640, 641,
	642, 643, 644, 647, 645, 410, 314, 498, 336, 376,
	0, 0, 428, 475, 242, 609, 499, 201, 0, 0,
	0, 0, 257, 258, 0, 578, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 652, 511, 517, 512, 513, 514, 515,
	516, 0, 518, 0, 0, 0, 0, 0, 401, 0,
	594, 595, 675, 387, 489, 606, 338, 352, 355, 344,
	364, 0, 365, 340, 341, 346, 349, 350, 351, 356,
	357, 361, 367, 251, 212, 393, 402, 581, 315, 218,
	219, 220, 527, 528, 529, 530, 622, 623, 627, 207,
	465, 466, 467, 468, 295, 617, 312, 471, 470, 334,
	335, 382, 452, 543, 545, 556, 560, 562, 564, 570,
	573, 544, 546, 557, 561, 563, 565, 571, 574, 533,
	535, 537, 539, 552, 551, 548, 576, 577, 554, 559,
	538, 550, 555, 568, 575, 572, 532, 536, 540, 549,
	567, 566, 547, 558, 569, 553, 541, 534, 542, 0,
	198, 223, 371, 0, 457, 291, 653, 621, 487, 616,
	208, 225, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 202, 211, 224, 234,
	238, 245, 264, 279, 281, 288, 301, 313, 321, 322,
	325, 331, 383, 389, 390, 391, 392, 412, 413, 414,
	417, 420, 421, 424, 426, 427, 430, 434, 438, 439,
	440, 442, 444, 446, 458, 463, 477, 478, 479, 480,
	481, 484, 485, 491, 492, 493, 494, 495, 503, 504,
	519, 589, 591, 608, 628, 635, 483, 304, 305, 447,
	448, 317, 318, 649, 650, 303, 603, 636, 600, 648,
	630, 441, 381, 0, 0, 384, 284, 308, 323, 0,
	620, 505, 229, 469, 293, 253, 0, 0, 213, 248,
	232, 262, 277, 280, 327, 394, 403, 432, 437, 299,
	274, 246, 462, 243, 488, 522, 523, 524, 526, 398,
	269, 436, 399, 0, 379, 579, 580, 319, 0, 0,
	0, 531, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 419, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 369, 270, 0, 0,
	206, 508, 0, 433, 0, 205, 0, 490, 255, 380,
	377, 586, 285, 276, 272, 252, 320, 388, 431, 521,
	425, 0, 373, 0, 0, 500, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 250, 328, 204, 416,
	501, 289, 0, 0, 0, 0, 0, 510, 729, 730,
	731, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 247, 0, 0, 0, 354, 363, 362, 342, 343,
	345, 347, 353, 360, 366, 339, 348, 0, 0, 612,
	0, 0, 0, 268, 324, 275, 267, 583, 0, 0,
	0, 0, 0, 0, 599, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 405, 260, 0, 456,
	0, 0, 0, 632, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 333, 199, 227, 0, 0, 415, 464,
	476, 0, 0, 0, 256, 0, 474, 429, 607, 235,
	287, 461, 435, 472, 443, 290, 0, 0, 473, 375,
	588, 453, 604, 633, 634, 266, 409, 618, 525, 626,
	651, 228, 263, 423, 509, 610, 497, 400, 584, 585,
	332, 496, 298, 203, 372, 639, 226, 482, 374, 244,
	233, 590, 615, 302, 254, 292, 459, 646, 215, 520,
	601, 241, 486, 0, 0, 654, 249, 507, 613, 602,
	217, 597, 506, 396, 329, 330, 216, 0, 460, 271,
	296, 0, 0, 261, 418, 592, 593, 259, 655, 230,
	625, 222, 0, 624, 411, 587, 598, 397, 386, 221,
	596, 395, 385, 337, 358, 359, 283, 310, 450, 378,
	451, 309, 311, 407, 406, 408, 209, 611, 629, 0,
	210, 0, 502, 614, 656, 455, 214, 236, 237, 239,
	0, 282, 286, 294, 297, 306, 307, 316, 370, 422,
	449, 445, 454, 0, 582, 605, 619, 631, 637, 638,
	640, 641, 642, 643, 644, 647, 645, 410, 314, 498,
	336, 376, 0, 0, 428, 475, 242, 609, 499, 201,
	0, 0, 0, 0, 257, 258, 0, 578, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 652, 511, 517, 512, 513,
	514, 515, 516, 0, 518, 0, 0, 0, 0, 0,
	401, 0, 594, 595, 675, 387, 489, 606, 338, 352,
	355, 344, 364, 0, 365, 340, 341, 346, 349, 350,
	351, 356, 357, 361, 367, 251, 212, 393, 402, 581,
	315, 218, 219, 220, 527, 528, 529, 530, 622, 623,
	627, 207, 465, 466, 467, 468, 295, 617, 312, 471,
	470, 334, 335, 382, 452, 543, 545, 556, 560, 562,
	564, 570, 573, 544, 546, 557, 561, 563, 565, 571,
	574, 533, 535, 537, 539, 552, 551, 548, 576, 577,
	554, 559, 538, 550, 555, 568, 575, 572, 532, 536,
	540, 549, 567, 566, 547, 558, 569, 553, 541, 534,
	542, 0, 198, 223, 371, 0, 457, 291, 653, 621,
	487, 616, 208, 225, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 202, 211,
	224, 234, 238, 245, 264, 279, 281, 288, 301, 313,
	321, 322, 325, 331, 383, 389, 390, 391, 392, 412,
	413, 414, 417, 420, 421, 424, 426, 427, 430, 434,
	438, 439, 440, 442, 444, 446, 458, 463, 477, 478,
	479, 480, 481, 484, 485, 491, 492, 493, 494, 495,
	503, 504, 519, 589, 591, 608, 628, 635, 483, 304,
	305, 447, 448, 317, 318, 649, 650, 303, 603, 636,
	600, 648, 630, 441, 381, 0, 0, 384, 284, 308,
	323, 0, 620, 505, 229, 469, 293, 253, 0, 0,
	213, 248, 232, 262, 277, 280, 327, 394, 403, 432,
	437, 299, 274, 246, 462, 243, 488, 522, 523, 524,
	526, 398, 269, 436, 399, 0, 379, 579, 580, 319,
	0, 0, 0, 531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 369, 270,
	0, 0, 206, 508, 0, 433, 0, 205, 0, 490,
	255, 380, 377, 586, 285, 276, 272, 252, 320, 388,
	431, 521, 425, 0, 373, 0, 0, 500, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 326, 250, 328,
	204, 416, 501, 289, 0, 0, 0, 0, 0, 510,
	727, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 247, 0, 0, 0, 354, 363, 362,
	342, 343, 345, 347, 353, 360, 366, 339, 348, 0,
	0, 612, 0, 0, 0, 268, 324, 275, 267, 583,
	0, 0, 0, 0, 0, 0, 599, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 405, 260,
	0, 456, 0, 0, 0, 632, 0, 0, 0, 4088,
	0, 0, 0, 368, 0, 333, 199, 227, 0, 0,
	415, 464, 476, 0, 0, 0, 256, 0, 474, 429,
	607, 235, 287, 461, 435, 472, 443, 290, 0, 0,
	473, 375, 588, 453, 604, 633, 634, 266, 409, 618,
	525, 626, 651, 228, 263, 423, 509, 610, 497, 400,
	584, 585, 332, 496, 298, 203, 372, 639, 226, 482,
	374, 244, 233, 590, 615, 302, 254, 292, 459, 646,
	215, 520, 601, 241, 486, 0, 0, 654, 249, 507,
	613, 602, 217, 597, 506, 396, 329, 330, 216, 0,
	460, 271, 296, 0, 0, 261, 418, 592, 593, 259,
	655, 230, 625, 222, 0, 624, 411, 587, 598, 397,
	386, 221, 596, 395, 385, 337, 358, 359, 283, 310,
	450, 378, 451, 309, 311, 407, 406, 408, 209, 611,
	629, 0, 210, 0, 502, 614, 656, 455, 214, 236,
	237, 239, 0, 282, 286, 294, 297, 306, 307, 316,
	370, 422, 449, 445, 454, 0, 582, 605, 619, 631,
	637, 638, 640, 641, 642, 643, 644, 647, 645, 410,
	314, 498, 336, 376, 0, 0, 428, 475, 242, 609,
	499, 201, 0, 0, 0, 0, 257, 258, 0, 578,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 652, 511, 517,
	512, 513, 514, 515, 516, 0, 518, 0, 0, 0,
	0, 0, 401, 0, 594, 595, 675, 387, 489, 606,
	338, 352, 355, 344, 364, 0, 365, 340, 341, 346,
	349, 350, 351, 356, 357, 361, 367, 251, 212, 393,
	402, 581, 315, 218, 219, 220, 527, 528, 529, 530,
	622, 623, 627, 207, 465, 466, 467, 468, 295, 617,
	312, 471, 470, 334, 335, 382, 452, 543, 545, 556,
	560, 562, 564, 570, 573, 544, 546, 557, 561, 563,
	565, 571, 574, 533, 535, 537, 539, 552, 551, 548,
	576, 577, 554, 559, 538, 550, 555, 568, 575, 572,
	532, 536, 540, 549, 567, 566, 547, 558, 569, 553,
	541, 534, 542, 0, 198, 223, 371, 0, 457, 291,
	653, 621, 487, 616, 208, 225, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	202, 211, 224, 234, 238, 245, 264, 279, 281, 288,
	301, 313, 321, 322, 325, 331, 383, 389, 390, 391,
	392, 412, 413, 414, 417, 420, 421, 424, 426, 427,
	430, 434, 438, 439, 440, 442, 444, 446, 458, 463,
	477, 478, 479, 480, 481, 484, 485, 491, 492, 493,
	494, 495, 503, 504, 519, 589, 591, 608, 628, 635,
	483, 304, 305, 447, 448, 317, 318, 649, 650, 303,
	603, 636, 600, 648, 630, 441, 381, 0, 0, 384,
	284, 308, 323, 0, 620, 505, 229, 469, 293, 253,
	0, 0, 213, 248, 232, 262, 277, 280, 327, 394,
	403, 432, 437, 299, 274, 246, 462, 243, 488, 522,
	523, 524, 526, 398, 269, 436, 399, 0, 379, 579,
	580, 319, 0, 0, 0, 531, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 419, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	369, 270, 0, 0, 206, 508, 0, 433, 0, 205,
	0, 490, 255, 380, 377, 586, 285, 276, 272, 252,
	320, 388, 431, 521, 425, 0, 373, 0, 0, 500,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 326,
	250, 328, 204, 416, 501, 289, 0, 0, 0, 0,
	1973, 510, 196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 247, 0, 0, 0, 354,
	363, 362, 342, 343, 345, 347, 353, 360, 366, 339,
	348, 0, 0, 612, 0, 0, 0, 268, 324, 275,
	267, 583, 0, 0, 0, 0, 0, 0, 599, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	405, 260, 0, 456, 0, 0, 0, 632, 0, 0,
	0, 0, 0, 0, 0, 368, 0, 333, 199, 227,
	0, 0, 415, 464, 476, 0, 0, 0, 256, 0,
	474, 429, 607, 235, 287, 461, 435, 472, 443, 290,
	0, 0, 473, 375, 588, 453, 604, 633, 634, 266,
	409, 618, 525, 626, 651, 228, 263, 423, 509, 610,
	497, 400, 584, 585, 332, 496, 298, 203, 372, 639,
	226, 482, 374, 244, 233, 590, 615, 302, 254, 292,
	459, 646, 215, 520, 601, 241, 486, 0, 0, 654,
	249, 507, 613, 602, 217, 597, 506, 396, 329, 330,
	216, 0, 460, 271, 296, 0, 0, 261, 418, 592,
	593, 259, 655, 230, 625, 222, 0, 624, 411, 587,
	598, 397, 386, 221, 596, 395, 385, 337, 358, 359,
	283, 310, 450, 378, 451, 309, 311, 407, 406, 408,
	209, 611, 629, 0, 210, 0, 502, 614, 656, 455,
	214, 236, 237, 239, 0, 282, 286, 294, 297, 306,
	307, 316, 370, 422, 449, 445, 454, 0, 582, 605,
	619, 631, 637, 638, 640, 641, 642, 643, 644, 647,
	645, 410, 314, 498, 336, 376, 0, 0, 428, 475,
	242, 609, 499, 201, 0, 0, 0, 0, 257, 258,
	0, 578, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 652,
	511, 517, 512, 513, 514, 515, 516, 0, 518, 0,
	0, 0, 0, 0, 401, 0, 594, 595, 675, 387,
	489, 606, 338, 352, 355, 344, 364, 0, 365, 340,
	341, 346, 349, 350, 351, 356, 357, 361, 367, 251,
	212, 393, 402, 581, 315, 218, 219, 220, 527, 528,
	529, 530, 622, 623, 627, 207, 465, 466, 467, 468,
	295, 617, 312, 471, 470, 334, 335, 382, 452, 543,
	545, 556, 560, 562, 564, 570, 573, 544, 546, 557,
	561, 563, 565, 571, 574, 533, 535, 537, 539, 552,
	551, 548, 576, 577, 554, 559, 538, 550, 555, 568,
	575, 572, 532, 536, 540, 549, 567, 566, 547, 558,
	569, 553, 541, 534, 542, 0, 198, 223, 371, 0,
	457, 291, 653, 621, 487, 616, 208, 225, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 202, 211, 224, 234, 238, 245, 264, 279,
	281, 288, 301, 313, 321, 322, 325, 331, 383, 389,
	390, 391, 392, 412, 413, 414, 417, 420, 421, 424,
	426, 427, 430, 434, 438, 439, 440, 442, 444, 446,
	458, 463, 477, 478, 479, 480, 481, 484, 485, 491,
	492, 493, 494, 495, 503, 504, 519, 589, 591, 608,
	628, 635, 483, 304, 305, 447, 448, 317, 318, 649,
	650, 303, 603, 636, 600, 648, 630, 441, 381, 0,
	0, 384, 284, 308, 323, 0, 620, 505, 229, 469,
	293, 253, 0, 0, 213, 248, 232, 262, 277, 280,
	327, 394, 403, 432, 437, 299, 274, 246, 462, 243,
	488, 522, 523, 524, 526, 398, 269, 436, 399, 0,
	379, 579, 580, 319, 0, 0, 0, 531, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 369, 270, 0, 0, 206, 508, 0, 433,
	0, 205, 0, 490, 255, 380, 377, 586, 285, 276,
	272, 252, 320, 388, 431, 521, 425, 0, 373, 0,
	0, 500, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 326, 250, 328, 204, 416, 501, 289, 0, 0,
	0, 0, 0, 510, 727, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 247, 0, 0,
	0, 354, 363, 362, 342, 343, 345, 347, 353, 360,
	366, 339, 348, 0, 0, 612, 0, 0, 0, 268,
	324, 275, 267, 583, 0, 0, 0, 0, 0, 0,
	599, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 405, 260, 0, 456, 0, 0, 0, 632,
	0, 0, 0, 3744, 0, 0, 0, 368, 0, 333,
	199, 227, 0, 0, 415, 464, 476, 0, 0, 0,
	256, 0, 474, 429, 607, 235, 287, 461, 435, 472,
	443, 290, 0, 0, 473, 375, 588, 453, 604, 633,
	634, 266, 409, 618, 525, 626, 651, 228, 263, 423,
	509, 610, 497, 400, 584, 585, 332, 496, 298, 203,
	372, 639, 226, 482, 374, 244, 233, 590, 615, 302,
	254, 292, 459, 646, 215, 520, 601, 241, 486, 0,
	0, 654, 249, 507, 613, 602, 217, 597, 506, 396,
	329, 330, 216, 0, 460, 271, 296, 0, 0, 261,
	418, 592, 593, 259, 655, 230, 625, 222, 0, 624,
	411, 587, 598, 397, 386, 221, 596, 395, 385, 337,
	358, 359, 283, 310, 450, 378, 451, 309, 311, 407,
	406, 408, 209, 611, 629, 0, 210, 0, 502, 614,
	656, 455, 214, 236, 237, 239, 0, 282, 286, 294,
	297, 306, 307, 316, 370, 422, 449, 445, 454, 0,
	582, 605, 619, 631, 637, 638, 640, 641, 642, 643,
	644, 647, 645, 410, 314, 498, 336, 376, 0, 0,
	428, 475, 242, 609, 499, 201, 0, 0, 0, 0,
	257, 258, 0, 578, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 652, 511, 517, 512, 513, 514, 515, 516, 0,
	518, 0, 0, 0, 0, 0, 401, 0, 594, 595,
	675, 387, 489, 606, 338, 352, 355, 344, 364, 0,
	365, 340, 341, 346, 349, 350, 351, 356, 357, 361,
	367, 251, 212, 393, 402, 581, 315, 218, 219, 220,
	527, 528, 529, 530, 622, 623, 627, 207, 465, 466,
	467, 468, 295, 617, 312, 471, 470, 334, 335, 382,
	452, 543, 545, 556, 560, 562, 564, 570, 573, 544,
	546, 557, 561, 563, 565, 571, 574, 533, 535, 537,
	539, 552, 551, 548, 576, 577, 554, 559, 538, 550,
	555, 568, 575, 572, 532, 536, 540, 549, 567, 566,
	547, 558, 569, 553, 541, 534, 542, 0, 198, 223,
	371, 0, 457, 291, 653, 621, 487, 616, 208, 225,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	264, 279, 281, 288, 301, 313, 321, 322, 325, 331,
	383, 389, 390, 391, 392, 412, 413, 414, 417, 420,
	421, 424, 426, 427, 430, 434, 438, 439, 440, 442,
	444, 446, 458, 463, 477, 478, 479, 480, 481, 484,
	485, 491, 492, 493, 494, 495, 503, 504, 519, 589,
	591, 608, 628, 635, 483, 304, 305, 447, 448, 317,
	318, 649, 650, 303, 603, 636, 600, 648, 630, 441,
	381, 0, 0, 384, 284, 308, 323, 0, 620, 505,
	229, 469, 293, 253, 0, 0, 213, 248, 232, 262,
	277, 280, 327, 394, 403, 432, 437, 299, 274, 246,
	462, 243, 488, 522, 523, 524, 526, 398, 269, 436,
	399, 0, 379, 579, 580, 319, 0, 0, 0, 531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 369, 270, 0, 0, 206, 508,
	0, 433, 0, 205, 0, 490, 255, 380, 377, 586,
	285, 276, 272, 252, 320, 388, 431, 521, 425, 0,
	373, 0, 0, 500, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 326, 250, 328, 204, 416, 501, 289,
	0, 95, 0, 0, 0, 510, 727, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 354, 363, 362, 342, 343, 345, 347,
	353, 360, 366, 339, 348, 0, 0, 612, 0, 0,
	0, 268, 324, 275, 267, 583, 0, 0, 0, 0,
	0, 0, 599, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 0, 405, 260, 0, 456, 0, 0,
	0, 632, 0, 0, 0, 0, 0, 0, 0, 368,
	0, 333, 199, 227, 0, 0, 415, 464, 476, 0,
	0, 0, 256, 0, 474, 429, 607, 235, 287, 461,
	435, 472, 443, 290, 0, 0, 473, 375, 588, 453,
	604, 633, 634, 266, 409, 618, 525, 626, 651, 228,
	263, 423, 509, 610, 497, 400, 584, 585, 332, 496,
	298, 203, 372, 639, 226, 482, 374, 244, 233, 590,
	615, 302, 254, 292, 459, 646, 215, 520, 601, 241,
	486, 0, 0, 654, 249, 507, 613, 602, 217, 597,
	506, 396, 329, 330, 216, 0, 460, 271, 296, 0,
	0, 261, 418, 592, 593, 259, 655, 230, 625, 222,
	0, 624, 411, 587, 598, 397, 386, 221, 596, 395,
	385, 337, 358, 359, 283, 310, 450, 378, 451, 309,
	311, 407, 406, 408, 209, 611, 629, 0, 210, 0,
	502, 614, 656, 455, 214, 236, 237, 239, 0, 282,
	286, 294, 297, 306, 307, 316, 370, 422, 449, 445,
	454, 0, 582, 605, 619, 631, 637, 638, 640, 641,
	642, 643, 644, 647, 645, 410, 314, 498, 336, 376,
	0, 0, 428, 475, 242, 609, 499, 201, 0, 0,
	0, 0, 257, 258, 0, 578, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 652, 511, 517, 512, 513, 514, 515,
	516, 0, 518, 0, 0, 0, 0, 0, 401, 0,
	594, 595, 675, 387, 489, 606, 338, 352, 355, 344,
	364, 0, 365, 340, 341, 346, 349, 350, 351, 356,
	357, 361, 367, 251, 212, 393, 402, 581, 315, 218,
	219, 220, 527, 528, 529, 530, 622, 623, 627, 207,
	465, 466, 467, 468, 295, 617, 312, 471, 470, 334,
	335, 382, 452, 543, 545, 556, 560, 562, 564, 570,
	573, 544, 546, 557, 561, 563, 565, 571, 574, 533,
	535, 537, 539, 552, 551, 548, 576, 577, 554, 559,
	538, 550, 555, 568, 575, 572, 532, 536, 540, 549,
	567, 566, 547, 558, 569, 553, 541, 534, 542, 0,
	198, 223, 371, 0, 457, 291, 653, 621, 487, 616,
	208, 225, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 202, 211, 224, 234,
	238, 245, 264, 279, 281, 288, 301, 313, 321, 322,
	325, 331, 383, 389, 390, 391, 392, 412, 413, 414,
	417, 420, 421, 424, 426, 427, 430, 434, 438, 439,
	440, 442, 444, 446, 458, 463, 477, 478, 479, 480,
	481, 484, 485, 491, 492, 493, 494, 495, 503, 504,
	519, 589, 591, 608, 628, 635, 483, 304, 305, 447,
	448, 317, 318, 649, 650, 303, 603, 636, 600, 648,
	630, 441, 381, 0, 0, 384, 284, 308, 323, 0,
	620, 505, 229, 469, 293, 253, 0, 0, 213, 248,
	232, 262, 277, 280, 327, 394, 403, 432, 437, 299,
	274, 246, 462, 243, 488, 522, 523, 524, 526, 398,
	269, 436, 399, 0, 379, 579, 580, 319, 0, 0,
	0, 531, 0, 0, 0, 0, 2441, 0, 0, 0,
	0, 0, 0, 419, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 369, 270, 0, 0,
	206, 508, 0, 433, 0, 205, 0, 490, 255, 380,
	377, 586, 285, 276, 272, 252, 320, 388, 431, 521,
	425, 0, 373, 0, 0, 500, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 250, 328, 204, 416,
	501, 289, 0, 0, 0, 0, 0, 510, 196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 247, 0, 0, 0, 354, 363, 362, 342, 343,
	345, 347, 353, 360, 366, 339, 348, 0, 0, 612,
	0, 0, 0, 268, 324, 275, 267, 583, 0, 0,
	0, 0, 0, 0, 599, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 405, 260, 0, 456,
	0, 0, 0, 632, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 333, 199, 227, 0, 0, 415, 464,
	476, 0, 0, 0, 256, 0, 474, 429, 607, 235,
	287, 461, 435, 472, 443, 290, 0, 0, 473, 375,
	588, 453, 604, 633, 634, 266, 409, 618, 525, 626,
	651, 228, 263, 423, 509, 610, 497, 400, 584, 585,
	332, 496, 298, 203, 372, 639, 226, 482, 374, 244,
	233, 590, 615, 302, 254, 292, 459, 646, 215, 520,
	601, 241, 486, 0, 0, 654, 249, 507, 613, 602,
	217, 597, 506, 396, 329, 330, 216, 0, 460, 271,
	296, 0, 0, 261, 418, 592, 593, 259, 655, 230,
	625, 222, 0, 624, 411, 587, 598, 397, 386, 221,
	596, 395, 385, 337, 358, 359, 283, 310, 450, 378,
	451, 309, 311, 407, 406, 408, 209, 611, 629, 0,
	210, 0, 502, 614, 656, 455, 214, 236, 237, 239,
	0, 282, 286, 294, 297, 306, 307, 316, 370, 422,
	449, 445, 454, 0, 582, 605, 619, 631, 637, 638,
	640, 641, 642, 643, 644, 647, 645, 410, 314, 498,
	336, 376, 0, 0, 428, 475, 242, 609, 499, 201,
	0, 0, 0, 0, 257, 258, 0, 578, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 652, 511, 517, 512, 513,
	514, 515, 516, 0, 518, 0, 0, 0, 0, 0,
	401, 0, 594, 595, 675, 387, 489, 606, 338, 352,
	355, 344, 364, 0, 365, 340, 341, 346, 349, 350,
	351, 356, 357, 361, 367, 251, 212, 393, 402, 581,
	315, 218, 219, 220, 527, 528, 529, 530, 622, 623,
	627, 207, 465, 466, 467, 468, 295, 617, 312, 471,
	470, 334, 335, 382, 452, 543, 545, 556, 560, 562,
	564, 570, 573, 544, 546, 557, 561, 563, 565, 571,
	574, 533, 535, 537, 539, 552, 551, 548, 576, 577,
	554, 559, 538, 550, 555, 568, 575, 572, 532, 536,
	540, 549, 567, 566, 547, 558, 569, 553, 541, 534,
	542, 0, 198, 223, 371, 0, 457, 291, 653, 621,
	487, 616, 208, 225, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 202, 211,
	224, 234, 238, 245, 264, 279, 281, 288, 301, 313,
	321, 322, 325, 331, 383, 389, 390, 391, 392, 412,
	413, 414, 417, 420, 421, 424, 426, 427, 430, 434,
	438, 439, 440, 442, 444, 446, 458, 463, 477, 478,
	479, 480, 481, 484, 485, 491, 492, 493, 494, 495,
	503, 504, 519, 589, 591, 608, 628, 635, 483, 304,
	305, 447, 448, 317, 318, 649, 650, 303, 603, 636,
	600, 648, 630, 441, 381, 0, 0, 384, 284, 308,
	323, 0, 620, 505, 229, 469, 293, 253, 0, 0,
	213, 248, 232, 262, 277, 280, 327, 394, 403, 432,
	437, 299, 274, 246, 462, 243, 488, 522, 523, 524,
	526, 398, 269, 436, 399, 0, 379, 579, 580, 319,
	0, 0, 0, 531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 369, 270,
	0, 0, 206, 508, 0, 433, 0, 205, 0, 490,
	255, 380, 377, 586, 285, 276, 272, 252, 320, 388,
	431, 521, 425, 0, 373, 0, 0, 500, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 326, 250, 328,
	204, 416, 501, 289, 0, 0, 0, 0, 1792, 510,
	727, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 247, 0, 0, 0, 354, 363, 362,
	342, 343, 345, 347, 353, 360, 366, 339, 348, 0,
	0, 612, 0, 0, 0, 268, 324, 275, 267, 583,
	0, 0, 0, 0, 0, 0, 599, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 405, 260,
	0, 456, 0, 0, 0, 632, 0, 0, 0, 0,
	0, 0, 0, 368, 0, 333, 199, 227, 0, 0,
	415, 464, 476, 0, 0, 0, 256, 0, 474, 429,
	607, 235, 287, 461, 435, 472, 443, 290, 0, 0,
	473, 375, 588, 453, 604, 633, 634, 266, 409, 618,
	525, 626, 651, 228, 263, 423, 509, 610, 497, 400,
	584, 585, 332, 496, 298, 203, 372, 639, 226, 482,
	374, 244, 233, 590, 615, 302, 254, 292, 459, 646,
	215, 520, 601, 241, 486, 0, 0, 654, 249, 507,
	613, 602, 217, 597, 506, 396, 329, 330, 216, 0,
	460, 271, 296, 0, 0, 261, 418, 592, 593, 259,
	655, 230, 625, 222, 0, 624, 411, 587, 598, 397,
	386, 221, 596, 395, 385, 337, 358, 359, 283, 310,
	450, 378, 451, 309, 311, 407, 406, 408, 209, 611,
	629, 0, 210, 0, 502, 614, 656, 455, 214, 236,
	237, 239, 0, 282, 286, 294, 297, 306, 307, 316,
	370, 422, 449, 445, 454, 0, 582, 605, 619, 631,
	637, 638, 640, 641, 642, 643, 644, 647, 645, 410,
	314, 498, 336, 376, 0, 0, 428, 475, 242, 609,
	499, 201, 0, 0, 0, 0, 257, 258, 0, 578,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 652, 511, 517,
	512, 513, 514, 515, 516, 0, 518, 0, 0, 0,
	0, 0, 401, 0, 594, 595, 675, 387, 489, 606,
	338, 352, 355, 344, 364, 0, 365, 340, 341, 346,
	349, 350, 351, 356, 357, 361, 367, 251, 212, 393,
	402, 581, 315, 218, 219, 220, 527, 528, 529, 530,
	622, 623, 627, 207, 465, 466, 467, 468, 295, 617,
	312, 471, 470, 334, 335, 382, 452, 543, 545, 556,
	560, 562, 564, 570, 573, 544, 546, 557, 561, 563,
	565, 571, 574, 533, 535, 537, 539, 552, 551, 548,
	576, 577, 554, 559, 538, 550, 555, 568, 575, 572,
	532, 536, 540, 549, 567, 566, 547, 558, 569, 553,
	541, 534, 542, 0, 198, 223, 371, 0, 457, 291,
	653, 621, 487, 616, 208, 225, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	202, 211, 224, 234, 238, 245, 264, 279, 281, 288,
	301, 313, 321, 322, 325, 331, 383, 389, 390, 391,
	392, 412, 413, 414, 417, 420, 421, 424, 426, 427,
	430, 434, 438, 439, 440, 442, 444, 446, 458, 463,
	477, 478, 479, 480, 481, 484, 485, 491, 492, 493,
	494, 495, 503, 504, 519, 589, 591, 608, 628, 635,
	483, 304, 305, 447, 448, 317, 318, 649, 650, 303,
	603, 636, 600, 648, 630, 441, 381, 0, 0, 384,
	284, 308, 323, 0, 620, 505, 229, 469, 293, 253,
	0, 0, 213, 248, 232, 262, 277, 280, 327, 394,
	403, 432, 437, 299, 274, 246, 462, 243, 488, 522,
	523, 524, 526, 398, 269, 436, 399, 0, 379, 579,
	580, 319, 0, 0, 0, 531, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 419, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	369, 270, 0, 0, 206, 508, 0, 433, 0, 205,
	0, 490, 255, 380, 377, 586, 285, 276, 272, 252,
	320, 388, 431, 521, 425, 0, 373, 0, 0, 500,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 326,
	250, 328, 204, 416, 501, 289, 0, 0, 0, 0,
	0, 510, 196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 247, 0, 0, 0, 354,
	363, 362, 342, 343, 345, 347, 353, 360, 366, 339,
	348, 0, 0, 612, 0, 0, 0, 268, 324, 275,
	267, 583, 0, 0, 0, 0, 0, 0, 599, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	405, 260, 0, 456, 0, 0, 0, 632, 0, 0,
	0, 0, 0, 0, 0, 368, 0, 333, 199, 227,
	0, 0, 415, 464, 476, 0, 0, 0, 256, 0,
	474, 429, 607, 235, 287, 461, 435, 472, 443, 290,
	0, 0, 473, 375, 588, 453, 604, 633, 634, 266,
	409, 618, 525, 626, 651, 228, 263, 423, 509, 610,
	497, 400, 584, 585, 332, 496, 298, 203, 372, 639,
	226, 482, 374, 244, 233, 590, 615, 302, 254, 292,
	459, 646, 215, 520, 601, 241, 486, 0, 0, 654,
	249, 507, 613, 602, 217, 597, 506, 396, 329, 330,
	216, 0, 460, 271, 296, 0, 0, 261, 418, 592,
	593, 259, 655, 230, 625, 222, 0, 624, 411, 587,
	598, 397, 386, 221, 596, 395, 385, 337, 358, 359,
	283, 310, 450, 378, 451, 309, 311, 407, 406, 408,
	209, 611, 629, 0, 210, 0, 502, 614, 656, 455,
	214, 236, 237, 239, 0, 282, 286, 294, 297, 306,
	307, 316, 370, 422, 449, 445, 454, 0, 582, 605,
	619, 631, 637, 638, 640, 641, 642, 643, 644, 647,
	645, 410, 314, 498, 336, 376, 0, 0, 428, 475,
	242, 609, 499, 201, 0, 0, 0, 0, 257, 258,
	0, 578, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 652,
	511, 517, 512, 513, 514, 515, 516, 0, 518, 0,
	0, 0, 0, 0, 401, 0, 594, 595, 675, 387,
	489, 606, 338, 352, 355, 344, 364, 0, 365, 340,
	341, 346, 349, 350, 351, 356, 357, 361, 367, 251,
	212, 393, 402, 581, 315, 218, 219, 220, 527, 528,
	529, 530, 622, 623, 627, 207, 465, 466, 467, 468,
	295, 617, 312, 471, 470, 334, 335, 382, 452, 543,
	545, 556, 560, 562, 564, 570, 573, 544, 546, 557,
	561, 563, 565, 571, 574, 533, 535, 537, 539, 552,
	551, 548, 576, 577, 554, 559, 538, 550, 555, 568,
	575, 572, 532, 536, 540, 549, 567, 566, 547, 558,
	569, 553, 541, 534, 542, 0, 198, 223, 371, 2091,
	457, 291, 653, 621, 487, 616, 208, 225, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 202, 211, 224, 234, 238, 245, 264, 279,
	281, 288, 301, 313, 321, 322, 325, 331, 383, 389,
	390, 391, 392, 412, 413, 414, 417, 420, 421, 424,
	426, 427, 430, 434, 438, 439, 440, 442, 444, 446,
	458, 463, 477, 478, 479, 480, 481, 484, 485, 491,
	492, 493, 494, 495, 503, 504, 519, 589, 591, 608,
	628, 635, 483, 304, 305, 447, 448, 317, 318, 649,
	650, 303, 603, 636, 600, 648, 630, 441, 381, 0,
	0, 384, 284, 308, 323, 0, 620, 505, 229, 469,
	293, 253, 0, 0, 213, 248, 232, 262, 277, 280,
	327, 394, 403, 432, 437, 299, 274, 246, 462, 243,
	488, 522, 523, 524, 526, 398, 269, 436, 399, 0,
	379, 579, 580, 319, 0, 0, 0, 531, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 369, 270, 0, 0, 206, 508, 0, 433,
	0, 205, 0, 490, 255, 380, 377, 586, 285, 276,
	272, 252, 320, 388, 431, 521, 425, 0, 373, 0,
	0, 500, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 326, 250, 328, 204, 416, 501, 289, 0, 0,
	0, 0, 2082, 510, 727, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 247, 0, 0,
	0, 354, 363, 362, 342, 343, 345, 347, 353, 360,
	366, 339, 348, 0, 0, 612, 0, 0, 0, 268,
	324, 275, 267, 583, 0, 0, 0, 0, 0, 0,
	599, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 405, 260, 0, 456, 0, 0, 0, 632,
	0, 0, 0, 0, 0, 0, 0, 368, 0, 333,
	199, 227, 0, 0, 415, 464, 476, 0, 0, 0,
	256, 0, 474, 429, 607, 235, 287, 461, 435, 472,
	443, 290, 0, 0, 473, 375, 588, 453, 604, 633,
	634, 266, 409, 618, 525, 626, 651, 228, 263, 423,
	509, 610, 497, 400, 584, 585, 332, 496, 298, 203,
	372, 639, 226, 482, 374, 244, 233, 590, 615, 302,
	254, 292, 459, 646, 215, 520, 601, 241, 486, 0,
	0, 654, 249, 507, 613, 602, 217, 597, 506, 396,
	329, 330, 216, 0, 460, 271, 296, 0, 0, 261,
	418, 592, 593, 259, 655, 230, 625, 222, 0, 624,
	411, 587, 598, 397, 386, 221, 596, 395, 385, 337,
	358, 359, 283, 310, 450, 378, 451, 309, 311, 407,
	406, 408, 209, 611, 629, 0, 210, 0, 502, 614,
	656, 455, 214, 236, 237, 239, 0, 282, 286, 294,
	297, 306, 307, 316, 370, 422, 449, 445, 454, 0,
	582, 605, 619, 631, 637, 638, 640, 641, 642, 643,
	644, 647, 645, 410, 314, 498, 336, 376, 0, 0,
	428, 475, 242, 609, 499, 201, 0, 0, 0, 0,
	257, 258, 0, 578, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 652, 511, 517, 512, 513, 514, 515, 516, 0,
	518, 0, 0, 0, 0, 0, 401, 0, 594, 595,
	675, 387, 489, 606, 338, 352, 355, 344, 364, 0,
	365, 340, 341, 346, 349, 350, 351, 356, 357, 361,
	367, 251, 212, 393, 402, 581, 315, 218, 219, 220,
	527, 528, 529, 530, 622, 623, 627, 207, 465, 466,
	467, 468, 295, 617, 312, 471, 470, 334, 335, 382,
	452, 543, 545, 556, 560, 562, 564, 570, 573, 544,
	546, 557, 561, 563, 565, 571, 574, 533, 535, 537,
	539, 552, 551, 548, 576, 577, 554, 559, 538, 550,
	555, 568, 575, 572, 532, 536, 540, 549, 567, 566,
	547, 558, 569, 553, 541, 534, 542, 0, 198, 223,
	371, 0, 457, 291, 653, 621, 487, 616, 208, 225,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	264, 279, 281, 288, 301, 313, 321, 322, 325, 331,
	383, 389, 390, 391, 392, 412, 413, 414, 417, 420,
	421, 424, 426, 427, 430, 434, 438, 439, 440, 442,
	444, 446, 458, 463, 477, 478, 479, 480, 481, 484,
	485, 491, 492, 493, 494, 495, 503, 504, 519, 589,
	591, 608, 628, 635, 483, 304, 305, 447, 448, 317,
	318, 649, 650, 303, 603, 636, 600, 648, 630, 441,
	381, 0, 0, 384, 284, 308, 323, 0, 620, 505,
	229, 469, 293, 253, 0, 0, 213, 248, 232, 262,
	277, 280, 327, 394, 403, 432, 437, 299, 274, 246,
	462, 243, 488, 522, 523, 524, 526, 398, 269, 436,
	399, 0, 379, 579, 580, 319, 0, 0, 0, 531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 369, 270, 0, 1940, 206, 508,
	0, 433, 0, 205, 0, 490, 255, 380, 377, 586,
	285, 276, 272, 252, 320, 388, 431, 521, 425, 0,
	373, 0, 0, 500, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 326, 250, 328, 204, 416, 501, 289,
	0, 0, 0, 0, 0, 510, 727, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 354, 363, 362, 342, 343, 345, 347,
	353, 360, 366, 339, 348, 0, 0, 612, 0, 0,
	0, 268, 324, 275, 267, 583, 0, 0, 0, 0,
	0, 0, 599, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 0, 405, 260, 0, 456, 0, 0,
	0, 632, 0, 0, 0, 0, 0, 0, 0, 368,
	0, 333, 199, 227, 0, 0, 415, 464, 476, 0,
	0, 0, 256, 0, 474, 429, 607, 235, 287, 461,
	435, 472, 443, 290, 0, 0, 473, 375, 588, 453,
	604, 633, 634, 266, 409, 618, 525, 626, 651, 228,
	263, 423, 509, 610, 497, 400, 584, 585, 332, 496,
	298, 203, 372, 639, 226, 482, 374, 244, 233, 590,
	615, 302, 254, 292, 459, 646, 215, 520, 601, 241,
	486, 0, 0, 654, 249, 507, 613, 602, 217, 597,
	506, 396, 329, 330, 216, 0, 460, 271, 296, 0,
	0, 261, 418, 592, 593, 259, 655, 230, 625, 222,
	0, 624, 411, 587, 598, 397, 386, 221, 596, 395,
	385, 337, 358, 359, 283, 310, 450, 378, 451, 309,
	311, 407, 406, 408, 209, 611, 629, 0, 210, 0,
	502, 614, 656, 455, 214, 236, 237, 239, 0, 282,
	286, 294, 297, 306, 307, 316, 370, 422, 449, 445,
	454, 0, 582, 605, 619, 631, 637, 638, 640, 641,
	642, 643, 644, 647, 645, 410, 314, 498, 336, 376,
	0, 0, 428, 475, 242, 609, 499, 201, 0, 0,
	0, 0, 257, 258, 0, 578, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 652, 511, 517, 512, 513, 514, 515,
	516, 0, 518, 0, 0, 0, 0, 0, 401, 0,
	594, 595, 675, 387, 489, 606, 338, 352, 355, 344,
	364, 0, 365, 340, 341, 346, 349, 350, 351, 356,
	357, 361, 367, 251, 212, 393, 402, 581, 315, 218,
	219, 220, 527, 528, 529, 530, 622, 623, 627, 207,
	465, 466, 467, 468, 295, 617, 312, 471, 470, 334,
	335, 382, 452, 543, 545, 556, 560, 562, 564, 570,
	573, 544, 546, 557, 561, 563, 565, 571, 574, 533,
	535, 537, 539, 552, 551, 548, 576, 577, 554, 559,
	538, 550, 555, 568, 575, 572, 532, 536, 540, 549,
	567, 566, 547, 558, 569, 553, 541, 534, 542, 0,
	198, 223, 371, 0, 457, 291, 653, 621, 487, 616,
	208, 225, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 202, 211, 224, 234,
	238, 245, 264, 279, 281, 288, 301, 313, 321, 322,
	325, 331, 383, 389, 390, 391, 392, 412, 413, 414,
	417, 420, 421, 424, 426, 427, 430, 434, 438, 439,
	440, 442, 444, 446, 458, 463, 477, 478, 479, 480,
	481, 484, 485, 491, 492, 493, 494, 495, 503, 504,
	519, 589, 591, 608, 628, 635, 483, 304, 305, 447,
	448, 317, 318, 649, 650, 303, 603, 636, 600, 648,
	630, 441, 381, 0, 0, 384, 284, 308, 323, 0,
	620, 505, 229, 469, 293, 253, 0, 0, 213, 248,
	232, 262, 277, 280, 327, 394, 403, 432, 437, 299,
	274, 246, 462, 243, 488, 522, 523, 524, 526, 398,
	269, 436, 399, 0, 379, 579, 580, 319, 0, 0,
	0, 531, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 419, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 369, 270, 0, 1938,
	206, 508, 0, 433, 0, 205, 0, 490, 255, 380,
	377, 586, 285, 276, 272, 252, 320, 388, 431, 521,
	425, 0, 373, 0, 0, 500, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 250, 328, 204, 416,
	501, 289, 0, 0, 0, 0, 0, 510, 727, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 247, 0, 0, 0, 354, 363, 362, 342, 343,
	345, 347, 353, 360, 366, 339, 348, 0, 0, 612,
	0, 0, 0, 268, 324, 275, 267, 583, 0, 0,
	0, 0, 0, 0, 599, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 405, 260, 0, 456,
	0, 0, 0, 632, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 333, 199, 227, 0, 0, 415, 464,
	476, 0, 0, 0, 256, 0, 474, 429, 607, 235,
	287, 461, 435, 472, 443, 290, 0, 0, 473, 375,
	588, 453, 604, 633, 634, 266, 409, 618, 525, 626,
	651, 228, 263, 423, 509, 610, 497, 400, 584, 585,
	332, 496, 298, 203, 372, 639, 226, 482, 374, 244,
	233, 590, 615, 302, 254, 292, 459, 646, 215, 520,
	601, 241, 486, 0, 0, 654, 249, 507, 613, 602,
	217, 597, 506, 396, 329, 330, 216, 0, 460, 271,
	296, 0, 0, 261, 418, 592, 593, 259, 655, 230,
	625, 222, 0, 624, 411, 587, 598, 397, 386, 221,
	596, 395, 385, 337, 358, 359, 283, 310, 450, 378,
	451, 309, 311, 407, 406, 408, 209, 611, 629, 0,
	210, 0, 502, 614, 656, 455, 214, 236, 237, 239,
	0, 282, 286, 294, 297, 306, 307, 316, 370, 422,
	449, 445, 454, 0, 582, 605, 619, 631, 637, 638,
	640, 641, 642, 643, 644, 647, 645, 410, 314, 498,
	336, 376, 0, 0, 428, 475, 242, 609, 499, 201,
	0, 0, 0, 0, 257, 258, 0, 578, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 652, 511, 517, 512, 513,
	514, 515, 516, 0, 518, 0, 0, 0, 0, 0,
	401, 0, 594, 595, 675, 387, 489, 606, 338, 352,
	355, 344, 364, 0, 365, 340, 341, 346, 349, 350,
	351, 356, 357, 361, 367, 251, 212, 393, 402, 581,
	315, 218, 219, 220, 527, 528, 529, 530, 622, 623,
	627, 207, 465, 466, 467, 468, 295, 617, 312, 471,
	470, 334, 335, 382, 452, 543, 545, 556, 560, 562,
	564, 570, 573, 544, 546, 557, 561, 563, 565, 571,
	574, 533, 535, 537, 539, 552, 551, 548, 576, 577,
	554, 559, 538, 550, 555, 568, 575, 572, 532, 536,
	540, 549, 567, 566, 547, 558, 569, 553, 541, 534,
	542, 0, 198, 223, 371, 0, 457, 291, 653, 621,
	487, 616, 208, 225, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 202, 211,
	224, 234, 238, 245, 264, 279, 281, 288, 301, 313,
	321, 322, 325, 331, 383, 389, 390, 391, 392, 412,
	413, 414, 417, 420, 421, 424, 426, 427, 430, 434,
	438, 439, 440, 442, 444, 446, 458, 463, 477, 478,
	479, 480, 481, 484, 485, 491, 492, 493, 494, 495,
	503, 504, 519, 589, 591, 608, 628, 635, 483, 304,
	305, 447, 448, 317, 318, 649, 650, 303, 603, 636,
	600, 648, 630, 441, 381, 0, 0, 384, 284, 308,
	323, 0, 620, 505, 229, 469, 293, 253, 0, 0,
	213, 248, 232, 262, 277, 280, 327, 394, 403, 432,
	437, 299, 274, 246, 462, 243, 488, 522, 523, 524,
	526, 398, 269, 436, 399, 0, 379, 579, 580, 319,
	0, 0, 0, 531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 369, 270,
	0, 1936, 206, 508, 0, 433, 0, 205, 0, 490,
	255, 380, 377, 586, 285, 276, 272, 252, 320, 388,
	431, 521, 425, 0, 373, 0, 0, 500, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 326, 250, 328,
	204, 416, 501, 289, 0, 0, 0, 0, 0, 510,
	727, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 247, 0, 0, 0, 354, 363, 362,
	342, 343, 345, 347, 353, 360, 366, 339, 348, 0,
	0, 612, 0, 0, 0, 268, 324, 275, 267, 583,
	0, 0, 0, 0, 0, 0, 599, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 405, 260,
	0, 456, 0, 0, 0, 632, 0, 0, 0, 0,
	0, 0, 0, 368, 0, 333, 199, 227, 0, 0,
	415, 464, 476, 0, 0, 0, 256, 0, 474, 429,
	607, 235, 287, 461, 435, 472, 443, 290, 0, 0,
	473, 375, 588, 453, 604, 633, 634, 266, 409, 618,
	525, 626, 651, 228, 263, 423, 509, 610, 497, 400,
	584, 585, 332, 496, 298, 203, 372, 639, 226, 482,
	374, 244, 233, 590, 615, 302, 254, 292, 459, 646,
	215, 520, 601, 241, 486, 0, 0, 654, 249, 507,
	613, 602, 217, 597, 506, 396, 329, 330, 216, 0,
	460, 271, 296, 0, 0, 261, 418, 592, 593, 259,
	655, 230, 625, 222, 0, 624, 411, 587, 598, 397,
	386, 221, 596, 395, 385, 337, 358, 359, 283, 310,
	450, 378, 451, 309, 311, 407, 406, 408, 209, 611,
	629, 0, 210, 0, 502, 614, 656, 455, 214, 236,
	237, 239, 0, 282, 286, 294, 297, 306, 307, 316,
	370, 422, 449, 445, 454, 0, 582, 605, 619, 631,
	637, 638, 640, 641, 642, 643, 644, 647, 645, 410,
	314, 498, 336, 376, 0, 0, 428, 475, 242, 609,
	499, 201, 0, 0, 0, 0, 257, 258, 0, 578,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 652, 511, 517,
	512, 513, 514, 515, 516, 0, 518, 0, 0, 0,
	0, 0, 401, 0, 594, 595, 675, 387, 489, 606,
	338, 352, 355, 344, 364, 0, 365, 340, 341, 346,
	349, 350, 351, 356, 357, 361, 367, 251, 212, 393,
	402, 581, 315, 218, 219, 220, 527, 528, 529, 530,
	622, 623, 627, 207, 465, 466, 467, 468, 295, 617,
	312, 471, 470, 334, 335, 382, 452, 543, 545, 556,
	560, 562, 564, 570, 573, 544, 546, 557, 561, 563,
	565, 571, 574, 533, 535, 537, 539, 552, 551, 548,
	576, 577, 554, 559, 538, 550, 555, 568, 575, 572,
	532, 536, 540, 549, 567, 566, 547, 558, 569, 553,
	541, 534, 542, 0, 198, 223, 371, 0, 457, 291,
	653, 621, 487, 616, 208, 225, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	202, 211, 224, 234, 238, 245, 264, 279, 281, 288,
	301, 313, 321, 322, 325, 331, 383, 389, 390, 391,
	392, 412, 413, 414, 417, 420, 421, 424, 426, 427,
	430, 434, 438, 439, 440, 442, 444, 446, 458, 463,
	477, 478, 479, 480, 481, 484, 485, 491, 492, 493,
	494, 495, 503, 504, 519, 589, 591, 608, 628, 635,
	483, 304, 305, 447, 448, 317, 318, 649, 650, 303,
	603, 636, 600, 648, 630, 441, 381, 0, 0, 384,
	284, 308, 323, 0, 620, 505, 229, 469, 293, 253,
	0, 0, 213, 248, 232, 262, 277, 280, 327, 394,
	403, 432, 437, 299, 274, 246, 462, 243, 488, 522,
	523, 524, 526, 398, 269, 436, 399, 0, 379, 579,
	580, 319, 0, 0, 0, 531, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 419, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	369, 270, 0, 1934, 206, 508, 0, 433, 0, 205,
	0, 490, 255, 380, 377, 586, 285, 276, 272, 252,
	320, 388, 431, 521, 425, 0, 373, 0, 0, 500,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 326,
	250, 328, 204, 416, 501, 289, 0, 0, 0, 0,
	0, 510, 727, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 247, 0, 0, 0, 354,
	363, 362, 342, 343, 345, 347, 353, 360, 366, 339,
	348, 0, 0, 612, 0, 0, 0, 268, 324, 275,
	267, 583, 0, 0, 0, 0, 0, 0, 599, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	405, 260, 0, 456, 0, 0, 0, 632, 0, 0,
	0, 0, 0, 0, 0, 368, 0, 333, 199, 227,
	0, 0, 415, 464, 476, 0, 0, 0, 256, 0,
	474, 429, 607, 235, 287, 461, 435, 472, 443, 290,
	0, 0, 473, 375, 588, 453, 604, 633, 634, 266,
	409, 618, 525, 626, 651, 228, 263, 423, 509, 610,
	497, 400, 584, 585, 332, 496, 298, 203, 372, 639,
	226, 482, 374, 244, 233, 590, 615, 302, 254, 292,
	459, 646, 215, 520, 601, 241, 486, 0, 0, 654,
	249, 507, 613, 602, 217, 597, 506, 396, 329, 330,
	216, 0, 460, 271, 296, 0, 0, 261, 418, 592,
	593, 259, 655, 230, 625, 222, 0, 624, 411, 587,
	598, 397, 386, 221, 596, 395, 385, 337, 358, 359,
	283, 310, 450, 378, 451, 309, 311, 407, 406, 408,
	209, 611, 629, 0, 210, 0, 502, 614, 656, 455,
	214, 236, 237, 239, 0, 282, 286, 294, 297, 306,
	307, 316, 370, 422, 449, 445, 454, 0, 582, 605,
	619, 631, 637, 638, 640, 641, 642, 643, 644, 647,
	645, 410, 314, 498, 336, 376, 0, 0, 428, 475,
	242, 609, 499, 201, 0, 0, 0, 0, 257, 258,
	0, 578, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 652,
	511, 517, 512, 513, 514, 515, 516, 0, 518, 0,
	0, 0, 0, 0, 401, 0, 594, 595, 675, 387,
	489, 606, 338, 352, 355, 344, 364, 0, 365, 340,
	341, 346, 349, 350, 351, 356, 357, 361, 367, 251,
	212, 393, 402, 581, 315, 218, 219, 220, 527, 528,
	529, 530, 622, 623, 627, 207, 465, 466, 467, 468,
	295, 617, 312, 471, 470, 334, 335, 382, 452, 543,
	545, 556, 560, 562, 564, 570, 573, 544, 546, 557,
	561, 563, 565, 571, 574, 533, 535, 537, 539, 552,
	551, 548, 576, 577, 554, 559, 538, 550, 555, 568,
	575, 572, 532, 536, 540, 549, 567, 566, 547, 558,
	569, 553, 541, 534, 542, 0, 198, 223, 371, 0,
	457, 291, 653, 621, 487, 616, 208, 225, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 202, 211, 224, 234, 238, 245, 264, 279,
	281, 288, 301, 313, 321, 322, 325, 331, 383, 389,
	390, 391, 392, 412, 413, 414, 417, 420, 421, 424,
	426, 427, 430, 434, 438, 439, 440, 442, 444, 446,
	458, 463, 477, 478, 479, 480, 481, 484, 485, 491,
	492, 493, 494, 495, 503, 504, 519, 589, 591, 608,
	628, 635, 483, 304, 305, 447, 448, 317, 318, 649,
	650, 303, 603, 636, 600, 648, 630, 441, 381, 0,
	0, 384, 284, 308, 323, 0, 620, 505, 229, 469,
	293, 253, 0, 0, 213, 248, 232, 262, 277, 280,
	327, 394, 403, 432, 437, 299, 274, 246, 462, 243,
	488, 522, 523, 524, 526, 398, 269, 436, 399, 0,
	379, 579, 580, 319, 0, 0, 0, 531, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 369, 270, 0, 1932, 206, 508, 0, 433,
	0, 205, 0, 490, 255, 380, 377, 586, 285, 276,
	272, 252, 320, 388, 431, 521, 425, 0, 373, 0,
	0, 500, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 326, 250, 328, 204, 416, 501, 289, 0, 0,
	0, 0, 0, 510, 727, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 247, 0, 0,
	0, 354, 363, 362, 342, 343, 345, 347, 353, 360,
	366, 339, 348, 0, 0, 612, 0, 0, 0, 268,
	324, 275, 267, 583, 0, 0, 0, 0, 0, 0,
	599, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 405, 260, 0, 456, 0, 0, 0, 632,
	0, 0, 0, 0, 0, 0, 0, 368, 0, 333,
	199, 227, 0, 0, 415, 464, 476, 0, 0, 0,
	256, 0, 474, 429, 607, 235, 287, 461, 435, 472,
	443, 290, 0, 0, 473, 375, 588, 453, 604, 633,
	634, 266, 409, 618, 525, 626, 651, 228, 263, 423,
	509, 610, 497, 400, 584, 585, 332, 496, 298, 203,
	372, 639, 226, 482, 374, 244, 233, 590, 615, 302,
	254, 292, 459, 646, 215, 520, 601, 241, 486, 0,
	0, 654, 249, 507, 613, 602, 217, 597, 506, 396,
	329, 330, 216, 0, 460, 271, 296, 0, 0, 261,
	418, 592, 593, 259, 655, 230, 625, 222, 0, 624,
	411, 587, 598, 397, 386, 221, 596, 395, 385, 337,
	358, 359, 283, 310, 450, 378, 451, 309, 311, 407,
	406, 408, 209, 611, 629, 0, 210, 0, 502, 614,
	656, 455, 214, 236, 237, 239, 0, 282, 286, 294,
	297, 306, 307, 316, 370, 422, 449, 445, 454, 0,
	582, 605, 619, 631, 637, 638, 640, 641, 642, 643,
	644, 647, 645, 410, 314, 498, 336, 376, 0, 0,
	428, 475, 242, 609, 499, 201, 0, 0, 0, 0,
	257, 258, 0, 578, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 652, 511, 517, 512, 513, 514, 515, 516, 0,
	518, 0, 0, 0, 0, 0, 401, 0, 594, 595,
	675, 387, 489, 606, 338, 352, 355, 344, 364, 0,
	365, 340, 341, 346, 349, 350, 351, 356, 357, 361,
	367, 251, 212, 393, 402, 581, 315, 218, 219, 220,
	527, 528, 529, 530, 622, 623, 627, 207, 465, 466,
	467, 468, 295, 617, 312, 471, 470, 334, 335, 382,
	452, 543, 545, 556, 560, 562, 564, 570, 573, 544,
	546, 557, 561, 563, 565, 571, 574, 533, 535, 537,
	539, 552, 551, 548, 576, 577, 554, 559, 538, 550,
	555, 568, 575, 572, 532, 536, 540, 549, 567, 566,
	547, 558, 569, 553, 541, 534, 542, 0, 198, 223,
	371, 0, 457, 291, 653, 621, 487, 616, 208, 225,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	264, 279, 281, 288, 301, 313, 321, 322, 325, 331,
	383, 389, 390, 391, 392, 412, 413, 414, 417, 420,
	421, 424, 426, 427, 430, 434, 438, 439, 440, 442,
	444, 446, 458, 463, 477, 478, 479, 480, 481, 484,
	485, 491, 492, 493, 494, 495, 503, 504, 519, 589,
	591, 608, 628, 635, 483, 304, 305, 447, 448, 317,
	318, 649, 650, 303, 603, 636, 600, 648, 630, 441,
	381, 0, 0, 384, 284, 308, 323, 0, 620, 505,
	229, 469, 293, 253, 0, 0, 213, 248, 232, 262,
	277, 280, 327, 394, 403, 432, 437, 299, 274, 246,
	462, 243, 488, 522, 523, 524, 526, 398, 269, 436,
	399, 0, 379, 579, 580, 319, 0, 0, 0, 531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 369, 270, 0, 1928, 206, 508,
	0, 433, 0, 205, 0, 490, 255, 380, 377, 586,
	285, 276, 272, 252, 320, 388, 431, 521, 425, 0,
	373, 0, 0, 500, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 326, 250, 328, 204, 416, 501, 289,
	0, 0, 0, 0, 0, 510, 727, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 354, 363, 362, 342, 343, 345, 347,
	353, 360, 366, 339, 348, 0, 0, 612, 0, 0,
	0, 268, 324, 275, 267, 583, 0, 0, 0, 0,
	0, 0, 599, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 0, 405, 260, 0, 456, 0, 0,
	0, 632, 0, 0, 0, 0, 0, 0, 0, 368,
	0, 333, 199, 227, 0, 0, 415, 464, 476, 0,
	0, 0, 256, 0, 474, 429, 607, 235, 287, 461,
	435, 472, 443, 290, 0, 0, 473, 375, 588, 453,
	604, 633, 634, 266, 409, 618, 525, 626, 651, 228,
	263, 423, 509, 610, 497, 400, 584, 585, 332, 496,
	298, 203, 372, 639, 226, 482, 374, 244, 233, 590,
	615, 302, 254, 292, 459, 646, 215, 520, 601, 241,
	486, 0, 0, 654, 249, 507, 613, 602, 217, 597,
	506, 396, 329, 330, 216, 0, 460, 271, 296, 0,
	0, 261, 418, 592, 593, 259, 655, 230, 625, 222,
	0, 624, 411, 587, 598, 397, 386, 221, 596, 395,
	385, 337, 358, 359, 283, 310, 450, 378, 451, 309,
	311, 407, 406, 408, 209, 611, 629, 0, 210, 0,
	502, 614, 656, 455, 214, 236, 237, 239, 0, 282,
	286, 294, 297, 306, 307, 316, 370, 422, 449, 445,
	454, 0, 582, 605, 619, 631, 637, 638, 640, 641,
	642, 643, 644, 647, 645, 410, 314, 498, 336, 376,
	0, 0, 428, 475, 242, 609, 499, 201, 0, 0,
	0, 0, 257, 258, 0, 578, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 652, 511, 517, 512, 513, 514, 515,
	516, 0, 518, 0, 0, 0, 0, 0, 401, 0,
	594, 595, 675, 387, 489, 606, 338, 352, 355, 344,
	364, 0, 365, 340, 341, 346, 349, 350, 351, 356,
	357, 361, 367, 251, 212, 393, 402, 581, 315, 218,
	219, 220, 527, 528, 529, 530, 622, 623, 627, 207,
	465, 466, 467, 468, 295, 617, 312, 471, 470, 334,
	335, 382, 452, 543, 545, 556, 560, 562, 564, 570,
	573, 544, 546, 557, 561, 563, 565, 571, 574, 533,
	535, 537, 539, 552, 551, 548, 576, 577, 554, 559,
	538, 550, 555, 568, 575, 572, 532, 536, 540, 549,
	567, 566, 547, 558, 569, 553, 541, 534, 542, 0,
	198, 223, 371, 0, 457, 291, 653, 621, 487, 616,
	208, 225, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 202, 211, 224, 234,
	238, 245, 264, 279, 281, 288, 301, 313, 321, 322,
	325, 331, 383, 389, 390, 391, 392, 412, 413, 414,
	417, 420, 421, 424, 426, 427, 430, 434, 438, 439,
	440, 442, 444, 446, 458, 463, 477, 478, 479, 480,
	481, 484, 485, 491, 492, 493, 494, 495, 503, 504,
	519, 589, 591, 608, 628, 635, 483, 304, 305, 447,
	448, 317, 318, 649, 650, 303, 603, 636, 600, 648,
	630, 441, 381, 0, 0, 384, 284, 308, 323, 0,
	620, 505, 229, 469, 293, 253, 0, 0, 213, 248,
	232, 262, 277, 280, 327, 394, 403, 432, 437, 299,
	274, 246, 462, 243, 488, 522, 523, 524, 526, 398,
	269, 436, 399, 0, 379, 579, 580, 319, 0, 0,
	0, 531, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 419, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 369, 270, 0, 1926,
	206, 508, 0, 433, 0, 205, 0, 490, 255, 380,
	377, 586, 285, 276, 272, 252, 320, 388, 431, 521,
	425, 0, 373, 0, 0, 500, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 250, 328, 204, 416,
	501, 289, 0, 0, 0, 0, 0, 510, 727, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 247, 0, 0, 0, 354, 363, 362, 342, 343,
	345, 347, 353, 360, 366, 339, 348, 0, 0, 612,
	0, 0, 0, 268, 324, 275, 267, 583, 0, 0,
	0, 0, 0, 0, 599, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 405, 260, 0, 456,
	0, 0, 0, 632, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 333, 199, 227, 0, 0, 415, 464,
	476, 0, 0, 0, 256, 0, 474, 429, 607, 235,
	287, 461, 435, 472, 443, 290, 0, 0, 473, 375,
	588, 453, 604, 633, 634, 266, 409, 618, 525, 626,
	651, 228, 263, 423, 509, 610, 497, 400, 584, 585,
	332, 496, 298, 203, 372, 639, 226, 482, 374, 244,
	233, 590, 615, 302, 254, 292, 459, 646, 215, 520,
	601, 241, 486, 0, 0, 654, 249, 507, 613, 602,
	217, 597, 506, 396, 329, 330, 216, 0, 460, 271,
	296, 0, 0, 261, 418, 592, 593, 259, 655, 230,
	625, 222, 0, 624, 411, 587, 598, 397, 386, 221,
	596, 395, 385, 337, 358, 359, 283, 310, 450, 378,
	451, 309, 311, 407, 406, 408, 209, 611, 629, 0,
	210, 0, 502, 614, 656, 455, 214, 236, 237, 239,
	0, 282, 286, 294, 297, 306, 307, 316, 370, 422,
	449, 445, 454, 0, 582, 605, 619, 631, 637, 638,
	640, 641, 642, 643, 644, 647, 645, 410, 314, 498,
	336, 376, 0, 0, 428, 475, 242, 609, 499, 201,
	0, 0, 0, 0, 257, 258, 0, 578, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 652, 511, 517, 512, 513,
	514, 515, 516, 0, 518, 0, 0, 0, 0, 0,
	401, 0, 594, 595, 675, 387, 489, 606, 338, 352,
	355, 344, 364, 0, 365, 340, 341, 346, 349, 350,
	351, 356, 357, 361, 367, 251, 212, 393, 402, 581,
	315, 218, 219, 220, 527, 528, 529, 530, 622, 623,
	627, 207, 465, 466, 467, 468, 295, 617, 312, 471,
	470, 334, 335, 382, 452, 543, 545, 556, 560, 562,
	564, 570, 573, 544, 546, 557, 561, 563, 565, 571,
	574, 533, 535, 537, 539, 552, 551, 548, 576, 577,
	554, 559, 538, 550, 555, 568, 575, 572, 532, 536,
	540, 549, 567, 566, 547, 558, 569, 553, 541, 534,
	542, 0, 198, 223, 371, 0, 457, 291, 653, 621,
	487, 616, 208, 225, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 202, 211,
	224, 234, 238, 245, 264, 279, 281, 288, 301, 313,
	321, 322, 325, 331, 383, 389, 390, 391, 392, 412,
	413, 414, 417, 420, 421, 424, 426, 427, 430, 434,
	438, 439, 440, 442, 444, 446, 458, 463, 477, 478,
	479, 480, 481, 484, 485, 491, 492, 493, 494, 495,
	503, 504, 519, 589, 591, 608, 628, 635, 483, 304,
	305, 447, 448, 317, 318, 649, 650, 303, 603, 636,
	600, 648, 630, 441, 381, 0, 0, 384, 284, 308,
	323, 0, 620, 505, 229, 469, 293, 253, 0, 0,
	213, 248, 232, 262, 277, 280, 327, 394, 403, 432,
	437, 299, 274, 246, 462, 243, 488, 522, 523, 524,
	526, 398, 269, 436, 399, 0, 379, 579, 580, 319,
	0, 0, 0, 531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 369, 270,
	0, 1924, 206, 508, 0, 433, 0, 205, 0, 490,
	255, 380, 377, 586, 285, 276, 272, 252, 320, 388,
	431, 521, 425, 0, 373, 0, 0, 500, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 326, 250, 328,
	204, 416, 501, 289, 0, 0, 0, 0, 0, 510,
	727, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 247, 0, 0, 0, 354, 363, 362,
	342, 343, 345, 347, 353, 360, 366, 339, 348, 0,
	0, 612, 0, 0, 0, 268, 324, 275, 267, 583,
	0, 0, 0, 0, 0, 0, 599, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 405, 260,
	0, 456, 0, 0, 0, 632, 0, 0, 0, 0,
	0, 0, 0, 368, 0, 333, 199, 227, 0, 0,
	415, 464, 476, 0, 0, 0, 256, 0, 474, 429,
	607, 235, 287, 461, 435, 472, 443, 290, 0, 0,
	473, 375, 588, 453, 604, 633, 634, 266, 409, 618,
	525, 626, 651, 228, 263, 423, 509, 610, 497, 400,
	584, 585, 332, 496, 298, 203, 372, 639, 226, 482,
	374, 244, 233, 590, 615, 302, 254, 292, 459, 646,
	215, 520, 601, 241, 486, 0, 0, 654, 249, 507,
	613, 602, 217, 597, 506, 396, 329, 330, 216, 0,
	460, 271, 296, 0, 0, 261, 418, 592, 593, 259,
	655, 230, 625, 222, 0, 624, 411, 587, 598, 397,
	386, 221, 596, 395, 385, 337, 358, 359, 283, 310,
	450, 378, 451, 309, 311, 407, 406, 408, 209, 611,
	629, 0, 210, 0, 502, 614, 656, 455, 214, 236,
	237, 239, 0, 282, 286, 294, 297, 306, 307, 316,
	370, 422, 449, 445, 454, 0, 582, 605, 619, 631,
	637, 638, 640, 641, 642, 643, 644, 647, 645, 410,
	314, 498, 336, 376, 0, 0, 428, 475, 242, 609,
	499, 201, 0, 0, 0, 0, 257, 258, 0, 578,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 652, 511, 517,
	512, 513, 514, 515, 516, 0, 518, 0, 0, 0,
	0, 0, 401, 0, 594, 595, 675, 387, 489, 606,
	338, 352, 355, 344, 364, 0, 365, 340, 341, 346,
	349, 350, 351, 356, 357, 361, 367, 251, 212, 393,
	402, 581, 315, 218, 219, 220, 527, 528, 529, 530,
	622, 623, 627, 207, 465, 466, 467, 468, 295, 617,
	312, 471, 470, 334, 335, 382, 452, 543, 545, 556,
	560, 562, 564, 570, 573, 544, 546, 557, 561, 563,
	565, 571, 574, 533, 535, 537, 539, 552, 551, 548,
	576, 577, 554, 559, 538, 550, 555, 568, 575, 572,
	532, 536, 540, 549, 567, 566, 547, 558, 569, 553,
	541, 534, 542, 0, 198, 223, 371, 0, 457, 291,
	653, 621, 487, 616, 208, 225, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	202, 211, 224, 234, 238, 245, 264, 279, 281, 288,
	301, 313, 321, 322, 325, 331, 383, 389, 390, 391,
	392, 412, 413, 414, 417, 420, 421, 424, 426, 427,
	430, 434, 438, 439, 440, 442, 444, 446, 458, 463,
	477, 478, 479, 480, 481, 484, 485, 491, 492, 493,
	494, 495, 503, 504, 519, 589, 591, 608, 628, 635,
	483, 304, 305, 447, 448, 317, 318, 649, 650, 303,
	603, 636, 600, 648, 630, 441, 381, 0, 0, 384,
	284, 308, 323, 0, 620, 505, 229, 469, 293, 253,
	0, 0, 213, 248, 232, 262, 277, 280, 327, 394,
	403, 432, 437, 299, 274, 246, 462, 243, 488, 522,
	523, 524, 526, 398, 269, 436, 399, 0, 379, 579,
	580, 319, 0, 0, 0, 531, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 419, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	369, 270, 0, 0, 206, 508, 0, 433, 0, 205,
	0, 490, 255, 380, 377, 586, 285, 276, 272, 252,
	320, 388, 431, 521, 425, 0, 373, 0, 0, 500,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 326,
	250, 328, 204, 416, 501, 289, 0, 1899, 0, 0,
	0, 510, 727, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 247, 0, 0, 0, 354,
	363, 362, 342, 343, 345, 347, 353, 360, 366, 339,
	348, 0, 0, 612, 0, 0, 0, 268, 324, 275,
	267, 583, 0, 0, 0, 0, 0, 0, 599, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	405, 260, 0, 456, 0, 0, 0, 632, 0, 0,
	0, 0, 0, 0, 0, 368, 0, 333, 199, 227,
	0, 0, 415, 464, 476, 0, 0, 0, 256, 0,
	474, 429, 607, 235, 287, 461, 435, 472, 443, 290,
	0, 0, 473, 375, 588, 453, 604, 633, 634, 266,
	409, 618, 525, 626, 651, 228, 263, 423, 509, 610,
	497, 400, 584, 585, 332, 496, 298, 203, 372, 639,
	226, 482, 374, 244, 233, 590, 615, 302, 254, 292,
	459, 646, 215, 520, 601, 241, 486, 0, 0, 654,
	249, 507, 613, 602, 217, 597, 506, 396, 329, 330,
	216, 0, 460, 271, 296, 0, 0, 261, 418, 592,
	593, 259, 655, 230, 625, 222, 0, 624, 411, 587,
	598, 397, 386, 221, 596, 395, 385, 337, 358, 359,
	283, 310, 450, 378, 451, 309, 311, 407, 406, 408,
	209, 611, 629, 0, 210, 0, 502, 614, 656, 455,
	214, 236, 237, 239, 0, 282, 286, 294, 297, 306,
	307, 316, 370, 422, 449, 445, 454, 0, 582, 605,
	619, 631, 637, 638, 640, 641, 642, 643, 644, 647,
	645, 410, 314, 498, 336, 376, 0, 0, 428, 475,
	242, 609, 499, 201, 0, 0, 0, 0, 257, 258,
	0, 578, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 652,
	511, 517, 512, 513, 514, 515, 516, 0, 518, 0,
	0, 0, 0, 0, 401, 0, 594, 595, 675, 387,
	489, 606, 338, 352, 355, 344, 364, 0, 365, 340,
	341, 346, 349, 350, 351, 356, 357, 361, 367, 251,
	212, 393, 402, 581, 315, 218, 219, 220, 527, 528,
	529, 530, 622, 623, 627, 207, 465, 466, 467, 468,
	295, 617, 312, 471, 470, 334, 335, 382, 452, 543,
	545, 556, 560, 562, 564, 570, 573, 544, 546, 557,
	561, 563, 565, 571, 574, 533, 535, 537, 539, 552,
	551, 548, 576, 577, 554, 559, 538, 550, 555, 568,
	575, 572, 532, 536, 540, 549, 567, 566, 547, 558,
	569, 553, 541, 534, 542, 0, 198, 223, 371, 0,
	457, 291, 653, 621, 487, 616, 208, 225, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 202, 211, 224, 234, 238, 245, 264, 279,
	281, 288, 301, 313, 321, 322, 325, 331, 383, 389,
	390, 391, 392, 412, 413, 414, 417, 420, 421, 424,
	426, 427, 430, 434, 438, 439, 440, 442, 444, 446,
	458, 463, 477, 478, 479, 480, 481, 484, 485, 491,
	492, 493, 494, 495, 503, 504, 519, 589, 591, 608,
	628, 635, 483, 304, 305, 447, 448, 317, 318, 649,
	650, 303, 603, 636, 600, 648, 630, 441, 381, 0,
	0, 384, 284, 308, 323, 0, 620, 505, 229, 469,
	293, 253, 0, 0, 213, 248, 232, 262, 277, 280,
	327, 394, 403, 432, 437, 299, 274, 246, 462, 243,
	488, 522, 523, 524, 526, 398, 269, 436, 399, 0,
	379, 579, 580, 319, 0, 0, 0, 531, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 0, 1796, 273, 0, 0,
	0, 0, 369, 270, 0, 0, 206, 508, 0, 433,
	0, 205, 0, 490, 255, 380, 377, 586, 285, 276,
	272, 252, 320, 388, 431, 521, 425, 0, 373, 0,
	0, 500, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 326, 250, 328, 204, 416, 501, 289, 0, 0,
	0, 0, 0, 510, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 247, 0, 0,
	0, 354, 363, 362, 342, 343, 345, 347, 353, 360,
	366, 339, 348, 0, 0, 612, 0, 0, 0, 268,
	324, 275, 267, 583, 0, 0, 0, 0, 0, 0,
	599, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 405, 260, 0, 456, 0, 0, 0, 632,
	0, 0, 0, 0, 0, 0, 0, 368, 0, 333,
	199, 227, 0, 0, 415, 464, 476, 0, 0, 0,
	256, 0, 474, 429, 607, 235, 287, 461, 435, 472,
	443, 290, 0, 0, 473, 375, 588, 453, 604, 633,
	634, 266, 409, 618, 525, 626, 651, 228, 263, 423,
	509, 610, 497, 400, 584, 585, 332, 496, 298, 203,
	372, 639, 226, 482, 374, 244, 233, 590, 615, 302,
	254, 292, 459, 646, 215, 520, 601, 241, 486, 0,
	0, 654, 249, 507, 613, 602, 217, 597, 506, 396,
	329, 330, 216, 0, 460, 271, 296, 0, 0, 261,
	418, 592, 593, 259, 655, 230, 625, 222, 0, 624,
	411, 587, 598, 397, 386, 221, 596, 395, 385, 337,
	358, 359, 283, 310, 450, 378, 451, 309, 311, 407,
	406, 408, 209, 611, 629, 0, 210, 0, 502, 614,
	656, 455, 214, 236, 237, 239, 0, 282, 286, 294,
	297, 306, 307, 316, 370, 422, 449, 445, 454, 0,
	582, 605, 619, 631, 637, 638, 640, 641, 642, 643,
	644, 647, 645, 410, 314, 498, 336, 376, 0, 0,
	428, 475, 242, 609, 499, 201, 0, 0, 0, 0,
	257, 258, 0, 578, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 652, 511, 517, 512, 513, 514, 515, 516, 0,
	518, 0, 0, 0, 0, 0, 401, 0, 594, 595,
	675, 387, 489, 606, 338, 352, 355, 344, 364, 0,
	365, 340, 341, 346, 349, 350, 351, 356, 357, 361,
	367, 251, 212, 393, 402, 581, 315, 218, 219, 220,
	527, 528, 529, 530, 622, 623, 627, 207, 465, 466,
	467, 468, 295, 617, 312, 471, 470, 334, 335, 382,
	452, 543, 545, 556, 560, 562, 564, 570, 573, 544,
	546, 557, 561, 563, 565, 571, 574, 533, 535, 537,
	539, 552, 551, 548, 576, 577, 554, 559, 538, 550,
	555, 568, 575, 572, 532, 536, 540, 549, 567, 566,
	547, 558, 569, 553, 541, 534, 542, 0, 198, 223,
	371, 0, 457, 291, 653, 621, 487, 616, 208, 225,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	264, 279, 281, 288, 301, 313, 321, 322, 325, 331,
	383, 389, 390, 391, 392, 412, 413, 414, 417, 420,
	421, 424, 426, 427, 430, 434, 438, 439, 440, 442,
	444, 446, 458, 463, 477, 478, 479, 480, 481, 484,
	485, 491, 492, 493, 494, 495, 503, 504, 519, 589,
	591, 608, 628, 635, 483, 304, 305, 447, 448, 317,
	318, 649, 650, 303, 603, 636, 600, 648, 630, 441,
	381, 0, 0, 384, 284, 308, 323, 0, 620, 505,
	229, 469, 293, 253, 0, 0, 213, 248, 232, 262,
	277, 280, 327, 394, 403, 432, 437, 299, 274, 246,
	462, 243, 488, 522, 523, 524, 526, 398, 269, 436,
	399, 0, 379, 579, 580, 319, 0, 0, 0, 531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 369, 270, 0, 0, 206, 508,
	0, 433, 0, 205, 0, 490, 255, 380, 377, 586,
	285, 276, 272, 252, 320, 388, 431, 521, 425, 0,
	373, 0, 0, 500, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 326, 250, 328, 204, 416, 501, 289,
	0, 95, 0, 0, 0, 510, 962, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 354, 363, 362, 342, 343, 345, 347,
	353, 360, 366, 339, 348, 0, 0, 612, 0, 0,
	0, 268, 324, 275, 267, 583, 0, 0, 0, 0,
	0, 0, 599, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 0, 405, 260, 0, 456, 0, 0,
	0, 632, 0, 0, 0, 0, 0, 0, 0, 368,
	0, 333, 199, 227, 0, 0, 415, 464, 476, 0,
	0, 0, 256, 0, 474, 429, 607, 235, 287, 461,
	435, 472, 443, 290, 0, 0, 473, 375, 588, 453,
	604, 633, 634, 266, 409, 618, 525, 626, 651, 228,
	263, 423, 509, 610, 497, 400, 584, 585, 332, 496,
	298, 203, 372, 639, 226, 482, 374, 244, 233, 590,
	615, 302, 254, 292, 459, 646, 215, 520, 601, 241,
	486, 0, 0, 654, 249, 507, 613, 602, 217, 597,
	506, 396, 329, 330, 216, 0, 460, 271, 296, 0,
	0, 261, 418, 592, 593, 259, 655, 230, 625, 222,
	0, 624, 411, 587, 598, 397, 386, 221, 596, 395,
	385, 337, 358, 359, 283, 310, 450, 378, 451, 309,
	311, 407, 406, 408, 209, 611, 629, 0, 210, 0,
	502, 614, 656, 455, 214, 236, 237, 239, 0, 282,
	286, 294, 297, 306, 307, 316, 370, 422, 449, 445,
	454, 0, 582, 605, 619, 631, 637, 638, 640, 641,
	642, 643, 644, 647, 645, 410, 314, 498, 336, 376,
	0, 0, 428, 475, 242, 609, 499, 201, 0, 0,
	0, 0, 257, 258, 0, 578, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 652, 511, 517, 512, 513, 514, 515,
	516, 0, 518, 0, 0, 0, 0, 0, 401, 0,
	594, 595, 675, 387, 489, 606, 338, 352, 355, 344,
	364, 0, 365, 340, 341, 346, 349, 350, 351, 356,
	357, 361, 367, 251, 212, 393, 402, 581, 315, 218,
	219, 220, 527, 528, 529, 530, 622, 623, 627, 207,
	465, 466, 467, 468, 295, 617, 312, 471, 470, 334,
	335, 382, 452, 543, 545, 556, 560, 562, 564, 570,
	573, 544, 546, 557, 561, 563, 565, 571, 574, 533,
	535, 537, 539, 552, 551, 548, 576, 577, 554, 559,
	538, 550, 555, 568, 575, 572, 532, 536, 540, 549,
	567, 566, 547, 558, 569, 553, 541, 534, 542, 0,
	198, 223, 371, 0, 457, 291, 653, 621, 487, 616,
	208, 225, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 202, 211, 224, 234,
	238, 245, 264, 279, 281, 288, 301, 313, 321, 322,
	325, 331, 383, 389, 390, 391, 392, 412, 413, 414,
	417, 420, 421, 424, 426, 427, 430, 434, 438, 439,
	440, 442, 444, 446, 458, 463, 477, 478, 479, 480,
	481, 484, 485, 491, 492, 493, 494, 495, 503, 504,
	519, 589, 591, 608, 628, 635, 483, 304, 305, 447,
	448, 317, 318, 649, 650, 303, 603, 636, 600, 648,
	630, 441, 381, 0, 0, 384, 284, 308, 323, 0,
	620, 505, 229, 469, 293, 253, 0, 0, 213, 248,
	232, 262, 277, 280, 327, 394, 403, 432, 437, 299,
	274, 246, 462, 243, 488, 522, 523, 524, 526, 398,
	269, 436, 399, 0, 379, 579, 580, 319, 0, 0,
	0, 531, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 419, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 369, 270, 0, 0,
	206, 508, 0, 433, 0, 205, 0, 490, 255, 380,
	377, 586, 285, 276, 272, 252, 320, 388, 431, 521,
	425, 0, 373, 0, 0, 500, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 250, 328, 204, 416,
	501, 289, 0, 0, 0, 0, 0, 510, 196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 247, 0, 0, 0, 354, 363, 362, 342, 343,
	345, 347, 353, 360, 366, 339, 348, 0, 0, 612,
	0, 0, 0, 268, 324, 275, 267, 583, 0, 0,
	0, 0, 0, 0, 599, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1462, 0, 300, 0, 405, 260, 0, 456,
	0, 0, 0, 632, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 333, 199, 227, 0, 0, 415, 464,
	476, 0, 0, 0, 256, 0, 474, 429, 607, 235,
	287, 461, 435, 472, 443, 290, 0, 0, 473, 375,
	588, 453, 604, 633, 634, 266, 409, 618, 525, 626,
	651, 228, 263, 423, 509, 610, 497, 400, 584, 585,
	332, 496, 298, 203, 372, 639, 226, 482, 374, 244,
	233, 590, 615, 302, 254, 292, 459, 646, 215, 520,
	601, 241, 486, 0, 0, 654, 249, 507, 613, 602,
	217, 597, 506, 396, 329, 330, 216, 0, 460, 271,
	296, 0, 0, 261, 418, 592, 593, 259, 655, 230,
	625, 222, 0, 624, 411, 587, 598, 397, 386, 221,
	596, 395, 385, 337, 358, 359, 283, 310, 450, 378,
	451, 309, 311, 407, 406, 408, 209, 611, 629, 0,
	210, 0, 502, 614, 656, 455, 214, 236, 237, 239,
	0, 282, 286, 294, 297, 306, 307, 316, 370, 422,
	449, 445, 454, 0, 582, 605, 619, 631, 637, 638,
	640, 641, 642, 643, 644, 647, 645, 410, 314, 498,
	336, 376, 0, 0, 428, 475, 242, 609, 499, 201,
	0, 0, 0, 0, 257, 258, 0, 578, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 652, 511, 517, 512, 513,
	514, 515, 516, 0, 518, 0, 0, 0, 0, 0,
	401, 0, 594, 595, 675, 387, 489, 606, 338, 352,
	355, 344, 364, 0, 365, 340, 341, 346, 349, 350,
	351, 356, 357, 361, 367, 251, 212, 393, 402, 581,
	315, 218, 219, 220, 527, 528, 529, 530, 622, 623,
	627, 207, 465, 466, 467, 468, 295, 617, 312, 471,
	470, 334, 335, 382, 452, 543, 545, 556, 560, 562,
	564, 570, 573, 544, 546, 557, 561, 563, 565, 571,
	574, 533, 535, 537, 539, 552, 551, 548, 576, 577,
	554, 559, 538, 550, 555, 568, 575, 572, 532, 536,
	540, 549, 567, 566, 547, 558, 569, 553, 541, 534,
	542, 0, 198, 223, 371, 0, 457, 291, 653, 621,
	487, 616, 208, 225, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 202, 211,
	224, 234, 238, 245, 264, 279, 281, 288, 301, 313,
	321, 322, 325, 331, 383, 389, 390, 391, 392, 412,
	413, 414, 417, 420, 421, 424, 426, 427, 430, 434,
	438, 439, 440, 442, 444, 446, 458, 463, 477, 478,
	479, 480, 481, 484, 485, 491, 492, 493, 494, 495,
	503, 504, 519, 589, 591, 608, 628, 635, 483, 304,
	305, 447, 448, 317, 318, 649, 650, 1461, 603, 636,
	600, 648, 630, 441, 381, 0, 0, 384, 284, 308,
	323, 0, 620, 505, 229, 469, 293, 253, 0, 0,
	213, 248, 232, 262, 277, 280, 327, 394, 403, 432,
	437, 299, 274, 246, 462, 243, 488, 522, 523, 524,
	526, 398, 269, 436, 399, 0, 379, 579, 580, 319,
	0, 0, 0, 531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 369, 270,
	0, 0, 206, 508, 0, 433, 0, 205, 0, 490,
	255, 380, 377, 586, 285, 276, 272, 252, 320, 388,
	431, 521, 425, 0, 373, 0, 0, 500, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 326, 250, 328,
	204, 416, 501, 289, 0, 0, 0, 0, 0, 510,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 247, 0, 0, 0, 354, 363, 362,
	342, 343, 345, 347, 353, 360, 366, 339, 348, 0,
	0, 612, 0, 0, 0, 268, 324, 275, 267, 583,
	0, 0, 0, 0, 0, 0, 599, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 405, 260,
	0, 456, 0, 0, 0, 632, 0, 0, 0, 0,
	0, 0, 0, 368, 0, 333, 199, 227, 0, 0,
	415, 464, 476, 0, 0, 0, 256, 0, 474, 429,
	607, 235, 287, 461, 435, 472, 443, 290, 0, 0,
	473, 375, 588, 453, 604, 633, 634, 266, 409, 618,
	525, 626, 651, 228, 263, 423, 509, 610, 497, 400,
	584, 585, 332, 496, 298, 203, 372, 639, 226, 482,
	374, 244, 233, 590, 615, 302, 254, 292, 459, 646,
	215, 520, 601, 241, 486, 0, 0, 654, 249, 507,
	613, 602, 217, 597, 506, 396, 329, 330, 216, 0,
	460, 271, 296, 0, 0, 261, 418, 592, 593, 259,
	655, 230, 625, 222, 0, 624, 411, 587, 598, 397,
	386, 221, 596, 395, 385, 337, 358, 359, 283, 310,
	450, 378, 451, 309, 311, 407, 406, 408, 209, 611,
	629, 0, 210, 0, 502, 614, 656, 455, 214, 236,
	237, 239, 0, 282, 286, 294, 297, 306, 307, 316,
	370, 422, 449, 445, 454, 0, 582, 605, 619, 631,
	637, 638, 640, 641, 642, 643, 644, 647, 645, 410,
	314, 498, 336, 376, 0, 0, 428, 475, 242, 609,
	499, 201, 0, 0, 0, 0, 257, 258, 0, 578,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 652, 511, 517,
	512, 513, 514, 515, 516, 0, 518, 0, 0, 0,
	0, 0, 401, 0, 594, 595, 675, 387, 489, 606,
	338, 352, 355, 344, 364, 0, 365, 340, 341, 346,
	349, 350, 351, 356, 357, 361, 367, 251, 212, 393,
	402, 581, 315, 218, 219, 220, 527, 528, 529, 530,
	622, 623, 627, 207, 465, 466, 467, 468, 295, 617,
	312, 471, 470, 334, 335, 382, 452, 543, 545, 556,
	560, 562, 564, 570, 573, 544, 546, 557, 561, 563,
	565, 571, 574, 533, 535, 537, 539, 552, 551, 548,
	576, 577, 554, 559, 538, 550, 555, 568, 575, 572,
	532, 536, 540, 549, 567, 566, 547, 558, 569, 553,
	541, 534, 542, 0, 198, 223, 371, 0, 457, 291,
	653, 621, 487, 616, 208, 225, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1054, 0, 0, 0, 200,
	202, 211, 224, 234, 238, 245, 264, 279, 281, 288,
	301, 313, 321, 322, 325, 331, 383, 389, 390, 391,
	392, 412, 413, 414, 417, 420, 421, 424, 426, 427,
	430, 434, 438, 439, 440, 442, 444, 446, 458, 463,
	477, 478, 479, 480, 481, 484, 485, 491, 492, 493,
	494, 495, 503, 504, 519, 589, 591, 608, 628, 635,
	483, 304, 305, 447, 448, 317, 318, 649, 650, 303,
	603, 636, 600, 648, 630, 441, 381, 0, 0, 384,
	284, 308, 323, 0, 620, 505, 229, 469, 293, 253,
	0, 0, 213, 248, 232, 262, 277, 280, 327, 394,
	403, 432, 437, 299, 274, 246, 462, 243, 488, 522,
	523, 524, 526, 398, 269, 436, 399, 0, 379, 579,
	580, 319, 0, 0, 0, 531, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 419, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	369, 270, 0, 0, 206, 508, 0, 433, 0, 205,
	0, 490, 255, 380, 377, 586, 285, 276, 272, 252,
	320, 388, 431, 521, 425, 0, 373, 0, 0, 500,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 326,
	250, 328, 204, 416, 501, 289, 0, 0, 0, 0,
	0, 510, 196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 247, 0, 0, 0, 354,
	363, 362, 342, 343, 345, 347, 353, 360, 366, 339,
	348, 0, 0, 612, 0, 0, 0, 268, 324, 275,
	267, 583, 0, 0, 0, 0, 0, 0, 599, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	405, 260, 0, 456, 0, 678, 0, 632, 0, 0,
	0, 0, 0, 0, 0, 368, 0, 333, 199, 227,
	0, 0, 415, 464, 476, 0, 0, 0, 256, 0,
	474, 429, 607, 235, 287, 461, 435, 472, 443, 290,
	0, 0, 473, 375, 588, 453, 604, 633, 634, 266,
	409, 618, 525, 626, 651, 228, 263, 423, 509, 610,
	497, 400, 584, 585, 332, 496, 298, 203, 372, 639,
	226, 482, 374, 244, 233, 590, 615, 302, 254, 292,
	459, 646, 215, 520, 601, 241, 486, 0, 0, 654,
	249, 507, 613, 602, 217, 597, 506, 396, 329, 330,
	216, 0, 460, 271, 296, 0, 0, 261, 418, 592,
	593, 259, 655, 230, 625, 222, 0, 624, 411, 587,
	598, 397, 386, 221, 596, 395, 385, 337, 358, 359,
	283, 310, 450, 378, 451, 309, 311, 407, 406, 408,
	209, 611, 629, 0, 210, 0, 502, 614, 656, 455,
	214, 236, 237, 239, 0, 282, 286, 294, 297, 306,
	307, 316, 370, 422, 449, 445, 454, 0, 582, 605,
	619, 631, 637, 638, 640, 641, 642, 643, 644, 647,
	645, 410, 314, 498, 336, 376, 0, 0, 428, 475,
	242, 609, 499, 201, 0, 0, 0, 0, 257, 258,
	0, 578, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 652,
	511, 517, 512, 513, 514, 515, 516, 0, 518, 0,
	0, 0, 0, 0, 401, 0, 594, 595, 675, 387,
	489, 606, 338, 352, 355, 344, 364, 0, 365, 340,
	341, 346, 349, 350, 351, 356, 357, 361, 367, 251,
	212, 393, 402, 581, 315, 218, 219, 220, 527, 528,
	529, 530, 622, 623, 627, 207, 465, 466, 467, 468,
	295, 617, 312, 471, 470, 334, 335, 382, 452, 543,
	545, 556, 560, 562, 564, 570, 573, 544, 546, 557,
	561, 563, 565, 571, 574, 533, 535, 537, 539, 552,
	551, 548, 576, 577, 554, 559, 538, 550, 555, 568,
	575, 572, 532, 536, 540, 549, 567, 566, 547, 558,
	569, 553, 541, 534, 542, 0, 198, 223, 371, 0,
	457, 291, 653, 621, 487, 616, 208, 225, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 202, 211, 224, 234, 238, 245, 264, 279,
	281, 288, 301, 313, 321, 322, 325, 331, 383, 389,
	390, 391, 392, 412, 413, 414, 417, 420, 421, 424,
	426, 427, 430, 434, 438, 439, 440, 442, 444, 446,
	458, 463, 477, 478, 479, 480, 481, 484, 485, 491,
	492, 493, 494, 495, 503, 504, 519, 589, 591, 608,
	628, 635, 483, 304, 305, 447, 448, 317, 318, 649,
	650, 303, 603, 636, 600, 648, 630, 441, 381, 0,
	0, 384, 284, 308, 323, 0, 620, 505, 229, 469,
	293, 253, 0, 0, 213, 248, 232, 262, 277, 280,
	327, 394, 403, 432, 437, 299, 274, 246, 462, 243,
	488, 522, 523, 524, 526, 398, 269, 436, 399, 0,
	379, 579, 580, 319, 0, 0, 0, 531, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 369, 270, 0, 0, 206, 508, 0, 433,
	0, 205, 0, 490, 255, 380, 377, 586, 285, 276,
	272, 252, 320, 388, 431, 521, 425, 0, 373, 0,
	0, 500, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 326, 250, 328, 204, 416, 501, 289, 0, 0,
	0, 0, 0, 510, 727, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 247, 0, 0,
	0, 354, 363, 362, 342, 343, 345, 347, 353, 360,
	366, 339, 348, 0, 0, 612, 0, 0, 0, 268,
	324, 275, 267, 583, 0, 0, 0, 0, 0, 0,
	599, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 0, 405, 260, 0, 456, 0, 0, 0, 632,
	0, 0, 0, 0, 0, 0, 0, 368, 0, 333,
	199, 227, 0, 0, 415, 464, 476, 0, 0, 0,
	256, 0, 474, 429, 607, 235, 287, 461, 435, 472,
	443, 290, 0, 0, 473, 375, 588, 453, 604, 633,
	634, 266, 409, 618, 525, 626, 651, 228, 263, 423,
	509, 610, 497, 400, 584, 585, 332, 496, 298, 203,
	372, 639, 226, 482, 374, 244, 233, 590, 615, 302,
	254, 292, 459, 646, 215, 520, 601, 241, 486, 0,
	0, 654, 249, 507, 613, 602, 217, 597, 506, 396,
	329, 330, 216, 0, 460, 271, 296, 0, 0, 261,
	418, 592, 593, 259, 655, 230, 625, 222, 0, 624,
	411, 587, 598, 397, 386, 221, 596, 395, 385, 337,
	358, 359, 283, 310, 450, 378, 451, 309, 311, 407,
	406, 408, 209, 611, 629, 0, 210, 0, 502, 614,
	656, 455, 214, 236, 237, 239, 0, 282, 286, 294,
	297, 306, 307, 316, 370, 422, 449, 445, 454, 0,
	582, 605, 619, 631, 637, 638, 640, 641, 642, 643,
	644, 647, 645, 410, 314, 498, 336, 376, 0, 0,
	428, 475, 242, 609, 499, 201, 0, 0, 0, 0,
	257, 258, 0, 578, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 652, 511, 517, 512, 513, 514, 515, 516, 0,
	518, 0, 0, 0, 0, 0, 401, 0, 594, 595,
	675, 387, 489, 606, 338, 352, 355, 344, 364, 0,
	365, 340, 341, 346, 349, 350, 351, 356, 357, 361,
	367, 251, 212, 393, 402, 581, 315, 218, 219, 220,
	527, 528, 529, 530, 622, 623, 627, 207, 465, 466,
	467, 468, 295, 617, 312, 471, 470, 334, 335, 382,
	452, 543, 545, 556, 560, 562, 564, 570, 573, 544,
	546, 557, 561, 563, 565, 571, 574, 533, 535, 537,
	539, 552, 551, 548, 576, 577, 554, 559, 538, 550,
	555, 568, 575, 572, 532, 536, 540, 549, 567, 566,
	547, 558, 569, 553, 541, 534, 542, 0, 198, 223,
	371, 0, 457, 291, 653, 621, 487, 616, 208, 225,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	264, 279, 281, 288, 301, 313, 321, 322, 325, 331,
	383, 389, 390, 391, 392, 4154, 413, 414, 417, 420,
	421, 424, 426, 427, 430, 434, 438, 439, 440, 442,
	444, 446, 458, 463, 477, 478, 479, 480, 481, 484,
	485, 491, 492, 493, 494, 495, 503, 504, 519, 589,
	591, 608, 628, 635, 483, 304, 305, 447, 448, 317,
	318, 649, 650, 303, 603, 636, 600, 648, 630, 441,
	381, 0, 0, 384, 284, 308, 323, 0, 620, 505,
	229, 469, 293, 253, 0, 0, 213, 248, 232, 262,
	277, 280, 327, 394, 403, 432, 437, 299, 274, 246,
	462, 243, 488, 522, 523, 524, 526, 398, 269, 436,
	399, 0, 379, 579, 580, 319, 0, 0, 0, 531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 369, 270, 0, 0, 206, 508,
	0, 433, 0, 205, 0, 490, 255, 380, 377, 586,
	285, 276, 272, 252, 320, 388, 431, 521, 425, 0,
	373, 0, 0, 500, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 326, 250, 328, 204, 416, 501, 289,
	0, 0, 0, 0, 0, 510, 727, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 354, 363, 362, 342, 343, 345, 347,
	353, 360, 366, 339, 348, 0, 0, 612, 0, 0,
	0, 268, 324, 275, 267, 583, 0, 0, 0, 0,
	0, 0, 599, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 0, 405, 260, 0, 456, 0, 0,
	0, 632, 0, 0, 0, 0, 0, 0, 0, 368,
	0, 333, 199, 227, 0, 0, 415, 464, 476, 0,
	0, 0, 256, 0, 474, 429, 607, 235, 287, 461,
	435, 472, 443, 290, 0, 0, 473, 375, 588, 453,
	604, 633, 634, 266, 409, 618, 525, 626, 651, 228,
	263, 423, 509, 610, 497, 400, 584, 585, 332, 496,
	298, 203, 372, 639, 226, 482, 374, 244, 233, 590,
	615, 302, 254, 292, 459, 646, 215, 520, 601, 241,
	486, 0, 0, 654, 249, 507, 613, 602, 217, 597,
	506, 396, 329, 330, 216, 0, 460, 271, 296, 0,
	0, 261, 418, 592, 593, 259, 655, 230, 625, 222,
	0, 624, 411, 587, 598, 397, 386, 221, 596, 395,
	385, 337, 358, 359, 283, 310, 450, 378, 451, 309,
	311, 407, 406, 408, 209, 611, 629, 0, 210, 0,
	502, 614, 656, 455, 214, 236, 237, 239, 0, 282,
	286, 294, 297, 306, 307, 316, 370, 422, 449, 445,
	454, 0, 582, 605, 619, 631, 637, 638, 640, 641,
	642, 643, 644, 647, 645, 410, 314, 498, 336, 376,
	0, 0, 428, 475, 242, 609, 499, 201, 0, 0,
	0, 0, 257, 258, 0, 578, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 652, 511, 517, 512, 513, 514, 515,
	516, 0, 518, 0, 0, 0, 0, 0, 401, 0,
	594, 595, 675, 387, 489, 606, 338, 352, 355, 344,
	364, 0, 365, 340, 341, 346, 349, 350, 351, 356,
	357, 361, 367, 251, 212, 393, 402, 581, 315, 218,
	219, 220, 527, 528, 529, 530, 622, 623, 627, 207,
	465, 466, 467, 468, 295, 617, 312, 471, 470, 334,
	335, 382, 452, 543, 545, 556, 560, 562, 564, 570,
	573, 544, 546, 557, 561, 563, 565, 571, 574, 533,
	535, 537, 539, 552, 551, 548, 576, 577, 554, 559,
	538, 550, 555, 568, 575, 572, 532, 536, 540, 549,
	567, 566, 547, 558, 569, 553, 541, 534, 542, 0,
	198, 223, 371, 0, 457, 291, 653, 621, 487, 616,
	208, 225, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 202, 211, 224, 234,
	238, 245, 264, 279, 281, 288, 301, 313, 321, 322,
	325, 331, 383, 389, 390, 391, 392, 412, 413, 414,
	417, 420, 421, 424, 426, 427, 430, 434, 438, 439,
	440, 442, 444, 446, 458, 463, 477, 478, 479, 480,
	481, 484, 485, 491, 492, 493, 494, 495, 503, 504,
	519, 589, 591, 608, 628, 635, 483, 304, 305, 447,
	448, 317, 318, 649, 650, 303, 603, 636, 600, 648,
	630, 441, 381, 0, 0, 384, 284, 308, 323, 0,
	620, 505, 229, 469, 293, 253, 0, 0, 213, 248,
	232, 262, 277, 280, 327, 394, 403, 432, 437, 299,
	274, 246, 462, 243, 488, 522, 523, 524, 526, 398,
	269, 436, 399, 0, 379, 579, 580, 319, 0, 0,
	0, 531, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 419, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 369, 270, 0, 0,
	206, 508, 0, 433, 0, 205, 0, 490, 255, 380,
	377, 586, 285, 276, 272, 252, 320, 388, 431, 521,
	425, 0, 373, 0, 0, 500, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 250, 328, 204, 416,
	501, 289, 0, 0, 0, 0, 0, 510, 962, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 247, 0, 0, 0, 354, 363, 362, 342, 343,
	345, 347, 353, 360, 366, 339, 348, 0, 0, 612,
	0, 0, 0, 268, 324, 275, 267, 583, 0, 0,
	0, 0, 0, 0, 599, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 405, 260, 0, 456,
	0, 0, 0, 632, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 333, 199, 227, 0, 0, 415, 464,
	476, 0, 0, 0, 256, 0, 474, 429, 607, 235,
	287, 461, 435, 472, 443, 290, 0, 0, 473, 375,
	588, 453, 604, 633, 634, 266, 409, 618, 525, 626,
	651, 228, 263, 423, 509, 610, 497, 400, 584, 585,
	332, 496, 298, 203, 372, 639, 226, 482, 374, 244,
	233, 590, 615, 302, 254, 292, 459, 646, 215, 520,
	601, 241, 486, 0, 0, 654, 249, 507, 613, 602,
	217, 597, 506, 396, 329, 330, 216, 0, 460, 271,
	296, 0, 0, 261, 418, 592, 593, 259, 655, 230,
	625, 222, 0, 624, 411, 587, 598, 397, 386, 221,
	596, 395, 385, 337, 358, 359, 283, 310, 450, 378,
	451, 309, 311, 407, 406, 408, 209, 611, 629, 0,
	210, 0, 502, 614, 656, 455, 214, 236, 237, 239,
	0, 282, 286, 294, 297, 306, 307, 316, 370, 422,
	449, 445, 454, 0, 582, 605, 619, 631, 637, 638,
	640, 641, 642, 643, 644, 647, 645, 410, 314, 498,
	336, 376, 0, 0, 428, 475, 242, 609, 499, 201,
	0, 0, 0, 0, 257, 258, 0, 578, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 652, 511, 517, 512, 513,
	514, 515, 516, 0, 518, 0, 0, 0, 0, 0,
	401, 0, 594, 595, 675, 387, 489, 606, 338, 352,
	355, 344, 364, 0, 365, 340, 341, 346, 349, 350,
	351, 356, 357, 361, 367, 251, 212, 393, 402, 581,
	315, 218, 219, 220, 527, 528, 529, 530, 622, 623,
	627, 207, 465, 466, 467, 468, 295, 617, 312, 471,
	470, 334, 335, 382, 452, 543, 545, 556, 560, 562,
	564, 570, 573, 544, 546, 557, 561, 563, 565, 571,
	574, 533, 535, 537, 539, 552, 551, 548, 576, 577,
	554, 559, 538, 550, 555, 568, 575, 572, 532, 536,
	540, 549, 567, 566, 547, 558, 569, 553, 541, 534,
	542, 0, 198, 223, 371, 0, 457, 291, 653, 621,
	487, 616, 208, 225, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 202, 211,
	224, 234, 238, 245, 264, 279, 281, 288, 301, 313,
	321, 322, 325, 331, 383, 389, 390, 391, 392, 412,
	413, 414, 417, 420, 421, 424, 426, 427, 430, 434,
	438, 439, 440, 442, 444, 446, 458, 463, 477, 478,
	479, 480, 481, 484, 485, 491, 492, 493, 494, 495,
	503, 504, 519, 589, 591, 608, 628, 635, 483, 304,
	305, 447, 448, 317, 318, 649, 650, 303, 603, 636,
	600, 648, 630, 441, 381, 0, 0, 384, 284, 308,
	323, 0, 620, 505, 229, 469, 293, 253, 0, 0,
	213, 248, 232, 262, 277, 280, 327, 394, 403, 432,
	437, 299, 274, 246, 462, 243, 488, 522, 523, 524,
	526, 398, 269, 436, 399, 0, 379, 579, 580, 319,
	0, 0, 0, 531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 369, 270,
	0, 0, 206, 508, 0, 433, 0, 205, 0, 490,
	255, 380, 377, 586, 285, 276, 272, 252, 320, 388,
	431, 521, 425, 0, 373, 0, 0, 500, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 326, 250, 328,
	204, 416, 501, 289, 0, 0, 0, 0, 0, 510,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 247, 0, 0, 0, 354, 363, 362,
	342, 343, 345, 347, 353, 360, 366, 339, 348, 0,
	0, 612, 0, 0, 0, 268, 324, 275, 267, 583,
	0, 0, 0, 0, 0, 0, 599, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 405, 260,
	0, 456, 0, 0, 0, 632, 0, 0, 0, 0,
	0, 0, 0, 368, 0, 333, 199, 227, 0, 0,
	415, 464, 476, 0, 0, 0, 256, 0, 474, 429,
	607, 235, 287, 461, 435, 472, 443, 290, 0, 0,
	473, 375, 588, 453, 604, 633, 634, 266, 409, 618,
	525, 626, 651, 228, 263, 423, 509, 610, 497, 400,
	584, 585, 332, 496, 298, 203, 372, 639, 226, 482,
	374, 244, 233, 590, 615, 302, 254, 292, 459, 646,
	215, 520, 601, 241, 486, 0, 0, 654, 249, 507,
	613, 602, 217, 597, 506, 396, 329, 330, 216, 0,
	460, 271, 296, 0, 0, 261, 418, 592, 593, 259,
	655, 230, 625, 222, 0, 624, 411, 587, 598, 397,
	386, 221, 596, 395, 385, 337, 358, 359, 283, 310,
	450, 378, 451, 309, 311, 407, 406, 408, 209, 611,
	629, 0, 210, 0, 502, 614, 656, 455, 214, 236,
	237, 239, 0, 282, 286, 294, 297, 306, 307, 316,
	370, 422, 449, 445, 454, 0, 582, 605, 619, 631,
	637, 638, 640, 641, 642, 643, 644, 647, 645, 410,
	314, 498, 336, 376, 0, 0, 428, 475, 242, 609,
	499, 201, 0, 0, 0, 0, 257, 258, 0, 578,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 652, 511, 517,
	512, 513, 514, 515, 516, 0, 518, 0, 0, 0,
	0, 0, 401, 0, 594, 595, 675, 387, 489, 606,
	338, 352, 355, 344, 364, 0, 365, 340, 341, 346,
	349, 350, 351, 356, 357, 361, 367, 251, 212, 393,
	402, 581, 315, 218, 219, 220, 527, 528, 529, 530,
	622, 623, 627, 207, 465, 466, 467, 468, 295, 617,
	312, 471, 470, 334, 335, 382, 452, 543, 545, 556,
	560, 562, 564, 570, 573, 544, 546, 557, 561, 563,
	565, 571, 574, 533, 535, 537, 539, 552, 551, 548,
	576, 577, 554, 559, 538, 550, 555, 568, 575, 572,
	532, 536, 540, 549, 567, 566, 547, 558, 569, 553,
	541, 534, 542, 0, 198, 223, 371, 0, 457, 291,
	653, 621, 487, 616, 208, 225, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	202, 211, 224, 234, 238, 245, 264, 279, 281, 288,
	301, 313, 321, 322, 325, 331, 383, 389, 390, 391,
	392, 412, 413, 414, 417, 420, 421, 424, 426, 427,
	430, 434, 438, 439, 440, 442, 444, 446, 458, 463,
	477, 478, 479, 480, 481, 484, 485, 491, 492, 493,
	494, 495, 503, 504, 519, 589, 591, 608, 628, 635,
	483, 304, 305, 447, 448, 317, 318, 649, 650, 303,
	603, 636, 600, 648, 630, 441, 381, 0, 0, 384,
	284, 308, 323, 0, 620, 505, 229, 469, 293, 253,
	0, 0, 213, 248, 232, 262, 277, 280, 327, 394,
	403, 432, 437, 299, 274, 246, 462, 243, 488, 522,
	523, 524, 526, 398, 269, 436, 0, 0, 379, 579,
	580, 319,
}

var yyPact = [...]int{
	-1000, -1000, 6221, -1000, -548, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2427, 2595, -1000, -1000, -1000, -1000, 2584, -1000, 1011,
	2054, -1000, 2404, 5131, -1000, 55080, 512, -1000, 52112, -417,
	870, 238, 35788, -1000, 182, -1000, 174, 53596, 178, -1000,
	-1000, -1000, -1000, -417, 21690, 2298, 35, 34, 55080, -1000,
	-1000, -1000, -1000, -371, 2545, 1982, -1000, 373, -1000, -1000,
	-1000, -1000, -1000, -1000, 51370, -1000, -1000, -1000, 1106, -1000,
	-1000, 2412, 2395, 2264, 900, 2329, -1000, 2473, 1982, -1000,
	21690, 2535, 2363, 20948, 20948, 442, -1000, -1000, 292, -1000,
	-1000, 30594, 55080, 38756, 285, -1000, 2404, -1000, -1000, -1000,
	213, -1000, 341, 1956, -1000, 1950, -1000, 893, 963, 383,
	834, 490, 382, 381, 368, 365, 363, 355, 353, 348,
	391, -1000, 943, 943, -223, -224, 1482, 441, 379, 379,
	1074, 459, 2374, 2345, -1000, -1000, 943, 943, 943, 360,
	943, 943, 943, 943, 322, 321, 943, 943, 943, 943,
	943, 943, 943, 943, 943, 943, 943, 943, 943, 943,
	943, 943, 943, 976, 2404, 307, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 55080, 191, 55080, -1000,
	822, 511, -1000, -1000, -456, 1094, 1094, 78, 1094, 1094,
	1094, 1094, 175, 1019, 33, -1000, 169, 304, 173, 289,
	1082, 189, -1000, -1000, 275, 1082, 1799, -1000, 926, 286,
	184, -1000, 1094, 1094, -1000, 14246, 210, 14246, 14246, 280,
	156, -1000, 2391, -1000, -1000, -1000, -1000, -1000, 1406, -1000,
	-1000, -1000, -1000, -44, 457, -1000, -1000, -1000, -1000, 53596,
	50628, 320, -1000, -1000, 45, 1858, 1400, 21690, 1330, 916,
	-1000, -1000, 1254, 877, -1000, -1000, -1000, -1000, -1000, 811,
	-1000, 23916, 23916, 23916, 23916, -1000, -1000, 1529, 49886, 1529,
	1529, 23916, 1529, 23916, 1529, 1529, 1529, 1529, 21690, 1529,
	1529, 1529, 1529, -1000, 1529, 1529, 1529, 1529, 1529, 1529,
	1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529,
	1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529,
	1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529,
	1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529,
	1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529,
	1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529,
	1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529,
	1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529,
	1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529,
	1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529,
	1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529,
	1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529,
	1529, 1529, 1529, -1000, -1000, -1000, -1000, 1529, 820, 1529,
	1529, 1529, 1529, 1529, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1529, 1529, 1529, 1529, 1529, 1529, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1529, 1529, 1529, 1529,
	1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529,
	-1000, -1000, -1000, 1648, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2048, 1571, 1556, 1547, -1000, 18722, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1529, -1000, -1000,
	-1000, 55080, -1000, 1529, 217, 53596, 53596, 387, 1382, -1000,
	-1000, 2473, 1982, -1000, 2545, 2497, 373, -1000, 3932, 1793,
	1596, 1478, 1982, 1928, 55080, -1000, 1974, 220, -1000, -1000,
	-1000, -357, -358, 2199, 1528, 1797, -1000, -1000, -1000, -1000,
	2226, 21690, -1000, -1000, 2568, -1000, 28368, 818, 2566, 49144,
	-1000, 442, 442, 1944, 420, -5, -1000, -1000, -1000, -1000,
	960, 35046, -1000, -1000, -1000, -1000, -1000, 1804, 55080, -1000,
	-1000, 5532, 53596, -1000, 2053, -1000, 1795, -1000, 2000, 21690,
	2064, 497, 53596, 479, 478, 477, 439, -73, -1000, -1000,
	-1000, -1000, -1000, -1000, 943, 943, 943, -1000, 390, 2531,
	5131, 5096, -1000, -1000, -1000, 48402, 2043, 53596, -1000, 2040,
	-1000, 1020, 865, 850, 850, 53596, -1000, -1000, 54338, 53596,
	1018, 1012, 53596, 53596, 53596, 53596, -1000, 47660, -1000, 46918,
	46176, 1381, 53596, 45434, 44692, 43950, 43208, 42466, -1000, 2252,
	-1000, 2016, -1000, -1000, -1000, 54338, 53596, 53596, 54338, 53596,
	54338, 55080, 53596, -1000, -1000, 336, -1000, -1000, 1380, 1379,
	1366, 943, 943, 1365, 1786, 1784, 1783, 943, 943, 1364,
	1779, 37272, 1777, 265, 1357, 1355, 1343, 1378, 1771, 194,
	1766, 1372, 1352, 1342, 53596, 2035, 55080, -1000, 271, 1060,
	974, 956, 2404, 2282, 1943, 456, 484, 53596, 436, 436,
	53596, -1000, 14994, 55080, 225, -1000, 1751, 21690, -1000, 1083,
	1082, 1082, -1000, -1000, -1000, -1000, -1000, -1000, 1094, 55080,
	1083, -1000, -1000, -1000, 1082, 1094, 55080, 1094, 1094, 1094,
	1094, 1082, 1082, 1082, 1094, 55080, 55080, 55080, 55080, 55080,
	55080, 55080, 55080, 55080, 14246, 926, 1094, -457, -1000, 1749,
	-1000, -1000, -1000, 2160, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 14246, 14246, -1000, -1000, 2467, 2462,
	-1000, -1000, -1000, 1942, -1000, 172, -4, 177, -1000, 41724,
	506, 953, -1000, 506, -1000, -1000, -1000, -1000, -1000, 1940,
	40982, -1000, -458, -459, -460, -461, -1000, -1000, -1000, -465,
	-471, -1000, -1000, -1000, 21690, 21690, 21690, 21690, -261, -1000,
	1194, 23916, 2356, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	21690, 1186, 1062, 23916, 23916, 23916, 23916, 23916, 23916, 23916,
	25400, 24658, 23916, 23916, 23916, 23916, 23916, 23916, -1000, -1000,
	32820, 6516, 6516, 877, 877, 877, 877, -1000, -196, 1937,
	54338, -1000, -1000, -1000, 816, 21690, 21690, 877, -1000, 1344,
	3283, 18722, 21690, 21690, 21690, 21690, 965, 1400, 54338, 21690,
	-1000, 1478, -1000, -1000, -1000, -1000, 1242, -1000, -1000, 1050,
	2342, 2342, 2342, 2342, 21690, 21690, 21690, 21690, 21690, 21690,
	21690, 21690, 21690, 21690, 2342, 21690, 881, 881, 732, 21690,
	21690, 21690, 21690, 21690, 21690, 21690, 21690, 17238, 21690, 21690,
	23916, 21690, 21690, 21690, 1478, 21690, 21690, 21690, 21690, 21690,
	21690, 21690, 21690, 21690, 21690, 21690, 21690, 21690, 21690, 21690,
	21690, 21690, 21690, 21690, 21690, 21690, 21690, 21690, 21690, 21690,
	21690, 21690, 21690, 21690, 21690, 21690, 21690, 21690, 21690, 21690,
	21690, 21690, 21690, 21690, 21690, 21690, 21690, 21690, 21690, 21690,
	21690, 21690, 21690, 21690, 21690, 21690, 21690, 21690, 21690, 21690,
	21690, 21690, 21690, 21690, 21690, 21690, 21690, 21690, 21690, 21690,
	21690, 21690, 21690, 21690, 21690, 21690, 21690, 21690, 21690, 21690,
	21690, 21690, 21690, 21690, 1478, 21690, 1349, 21690, 21690, 21690,
	21690, 21690, 21690, 21690, 16490, 21690, 21690, 21690, 21690, 21690,
	-1000, -1000, -1000, -1000, -1000, -1000, 21690, 21690, 21690, 21690,
	21690, 21690, 21690, 21690, 1478, 21690, 21690, 21690, 21690, 21690,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1526, 1550, 1497, 1529, 21690, -1000, 1934, -1000, -199, 29852,
	21690, 1743, 2562, 2057, 53596, -1000, -1000, -1000, -1000, 2473,
	-1000, 2473, 1526, 3922, 2218, 20948, -1000, -1000, 3922, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1792, -1000, 55080, 1928, 2457, 53596, -1000, 1912,
	-1000, -1000, 1529, -1000, -297, -1000, -300, 2205, 1718, 350,
	-1000, 21690, 21690, 1901, -1000, 1445, 55080, -1000, -261, -1000,
	40240, -1000, -1000, 13498, 55080, 344, 55080, -1000, 29110, 39498,
	602, -1000, -5, 1881, -1000, 14, -10, 17980, 876, -1000,
	-1000, -1000, 1482, 26142, 1843, 876, 95, -1000, -1000, -1000,
	2000, -1000, 2000, 2000, 2000, 2000, 350, 350, 350, 350,
	-1000, -1000, -1000, -1000, -1000, 2033, 2000, 2027, -1000, 2000,
	2000, 2000, 2000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2026, 2026, 2026, 2024, 2024, 2001, 2001, 426, -1000, 21690,
	433, 38756, 2426, 1326, 2191, 271, 439, 1993, 53596, 53596,
	53596, 55080, 970, -1000, 1431, 1413, 1412, -1000, -533, 1895,
	-1000, -1000, 2528, -1000, -1000, 904, 1044, 1041, 851, 53596,
	216, 339, -1000, 416, -1000, 38756, 53596, 1005, 850, 53596,
	-1000, 53596, -1000, -1000, -1000, -1000, -1000, 53596, -1000, -1000,
	1893, -1000, 1911, 1207, 1039, 1091, 1037, 1893, -1000, -1000,
	-197, 1893, -1000, 1893, -1000, 1893, -1000, 1893, -1000, 1893,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 984,
	306, -348, 53596, 216, 454, -1000, 452, 32820, -1000, -1000,
	-1000, 32820, 32820, -1000, -1000, -1000, -1000, 1711, 1708, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -520, 55080,
	-1000, 243, 952, 317, 319, 295, 55080, 422, 2368, 2359,
	2353, 2352, 2337, 2331, 2324, 276, 313, 55080, 55080, 436,
	2147, 55080, 2440, 55080, -1000, -1000, -1000, -1000, -1000, 1672,
	1656, -1000, 1400, 55080, -1000, -1000, 1094, 1094, -1000, -1000,
	55080, 1094, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1094, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 55080, -1000, -1000, -1000,
	-1000, 1654, -1000, 55080, -44, 161, -1000, -1000, 53596, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -112, -1000,
	296, 5, 397, -1000, -1000, -1000, -1000, -1000, 2461, -1000,
	1400, 987, 992, -1000, 1529, -1000, -1000, 1290, -1000, -1000,
	-1000, -1000, -1000, 1529, 1529, 1529, -1000, -1000, -1000, -1000,
	-1000, 1186, 23916, 23916, 23916, 1597, 476, 1384, 1339, 1195,
	1128, 1128, 1210, 23916, 1210, 23916, 882, 882, 882, 882,
	882, -1000, -1000, -1000, -1000, -1000, -1000, 1648, -1000, 1643,
	-1000, 1529, 54338, 1765, 16490, 1262, 1715, 1478, 892, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3919,
	1478, 1858, 1478, 1463, 3550, 975, -1000, 21690, 1478, 3538,
	-1000, -1000, 1478, 1478, 21690, -1000, -1000, 21690, 21690, 21690,
	21690, 2191, 2191, 2191, 2191, 2191, 2191, 2191, 2191, 2191,
	2191, 21690, 2191, 1889, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1887, 2556, 1216, 2191, 2191, 2191, 2191, 3532,
	2191, 2191, 21690, 2292, -1000, -1000, -1000, 1450, 3523, 1580,
	3519, 2191, 2191, -1000, 2191, 3507, 3500, 1478, 2690, 2679,
	2191, 2191, 2191, 2191, 2191, 2662, 2642, 2191, 2191, 2628,
	2191, 3496, 2191, 2618, 2614, 2601, 2579, 2534, 2529, 2518,
	2514, 2496, 2492, 2485, 2468, 2420, 2415, 2407, 2387, 2371,
	2346, 2191, 2191, 2191, 3489, 2191, 3477, 2191, 3471, 2191,
	2191, 3445, 2339, 2326, 1478, 1885, -1000, 3434, 2191, 3428,
	3424, 3410, 2321, 3406, 3400, 3396, 2191, 2191, 2191, 2309,
	3384, 3363, 3357, 3291, 3114, 3105, 3097, 3082, 3073, 2191,
	1497, 1497, 1497, 1497, 1497, 3069, -266, 2191, 1478, -1000,
	-1000, -1000, -1000, -1000, 3062, 2299, 3042, 3029, 3024, 3017,
	1478, 1529, 815, -1000, -1000, 1497, 1478, 1478, 1497, 1497,
	2993, 2988, 2968, 2949, 2907, 2898, 2191, 2191, -1000, 2191,
	2888, 2883, 2277, 2260, 1478, -1000, 1497, 55080, -1000, -449,
	-1000, -13, 962, 1529, -1000, 37272, 1478, -1000, 4152, -1000,
	1190, -1000, -1000, -1000, -1000, -1000, 34304, 1841, -1000, -1000,
	-1000, -1000, 1529, 1760, -1000, -491, 20206, -1000, -1000, -1000,
	350, 58, 33562, 868, 868, 116, 1400, 1400, 21690, -1000,
	-1000, -1000, -1000, -1000, -1000, 799, 2522, 370, 1529, -1000,
	1903, 2626, -1000, -1000, -1000, 2452, 26884, -1000, -1000, 1529,
	1529, 55080, 1875, 1845, -1000, 790, -1000, 1414, 1881, -5,
	-16, -1000, -1000, -1000, -1000, 1400, -1000, 1405, 347, 357,
	-1000, 424, -1000, -1000, -1000, -1000, 2314, 64, -1000, -1000,
	-1000, 899, 350, -1000, -1000, -1000, -1000, -1000, -1000, 1640,
	-1000, 1640, -1000, -1000, -1000, -1000, -1000, 1320, -1000, -1000,
	-1000, -1000, 1319, -1000, -1000, 1311, -1000, -1000, 2812, 2075,
	433, -1000, -1000, 943, 1637, -1000, -1000, 2317, 943, 943,
	53596, -1000, -1000, 1837, 2426, 243, 55080, 2144, -1000, 1993,
	1993, 1993, -1000, 2421, -1000, -1000, -1000, -1000, -1000, -1000,
	-522, 166, 362, -1000, -1000, -1000, 1444, 53596, 1747, -1000,
	214, -1000, 1836, -1000, 53596, -1000, 1741, 2023, 53596, 53596,
	-1000, -1000, -1000, 53596, 1529, -1000, -1000, -1000, -1000, 482,
	2400, 323, -1000, -1000, -286, -1000, -1000, 216, 214, 54338,
	53596, 876, -1000, -1000, -1000, -1000, -1000, -523, 1734, 474,
	228, 515, 55080, 55080, 55080, 55080, 55080, 55080, 782, -1000,
	-1000, 24, -1000, -1000, 195, -1000, -1000, 1634, -1000, -1000,
	-1000, -1000, 195, -1000, -1000, -1000, -1000, -1000, 293, 450,
	-1000, 55080, 55080, 918, -1000, -1000, -1000, -1000, -1000, 1082,
	-1000, -1000, 1082, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2389, 55080, 3, -488, -1000,
	-484, 21690, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1479,
	434, 1384, 23916, 23916, 3283, 3283, 23916, -1000, -1000, -1000,
	332, 332, 32820, -1000, 23916, 21690, -1000, -1000, 21690, 21690,
	21690, 964, -1000, 21690, 1182, -1000, 21690, -1000, -266, 1497,
	2191, 2191, 2191, 2191, -266, -266, -266, -266, -266, -266,
	-266, -266, -266, -266, 1894, -1000, 21690, 21690, 21690, 1478,
	315, -1000, -1000, -1000, -266, 21690, -1000, -1000, 2551, -1000,
	21690, -1000, 32820, 21690, 21690, 21690, -1000, -1000, -1000, 21690,
	21690, -1000, -1000, 21690, -1000, 21690, -1000, -1000, -1000, -1000,
	-1000, -1000, 21690, -1000, 21690, -1000, -1000, -1000, 21690, -1000,
	21690, -1000, -1000, 21690, -1000, 21690, -1000, 21690, -1000, 21690,
	-1000, 21690, -1000, 21690, -1000, 21690, -1000, 21690, -1000, 21690,
	-1000, 21690, -1000, 21690, -1000, 21690, -1000, 21690, -1000, 21690,
	-1000, 21690, -1000, 21690, -1000, 21690, -1000, 21690, -1000, -1000,
	-1000, 21690, -1000, 21690, -1000, 21690, -1000, -1000, 21690, -1000,
	21690, -1000, 21690, -1000, 21690, 21690, -1000, 21690, 21690, 21690,
	-1000, 21690, 21690, 21690, 21690, -1000, -1000, -1000, -1000, 21690,
	21690, 21690, 21690, 21690, 21690, 21690, 21690, 21690, 21690, -1000,
	-1000, -1000, -1000, -1000, -1000, 21690, -1000, 38756, 62, -266,
	1349, 62, 1349, 23174, 824, 783, 22432, -1000, 21690, 15742,
	-1000, -1000, -1000, -1000, -1000, 21690, 21690, 21690, 21690, 21690,
	21690, -1000, -1000, -1000, 21690, 21690, -1000, 21690, -1000, 21690,
	-1000, -1000, -1000, -1000, -1000, 962, -1000, 471, 466, 850,
	53596, -1000, -1000, -1000, -1000, 1878, -1000, 2472, -1000, 2242,
	2234, 2548, 2522, 20948, -1000, 29110, -1000, -1000, 53596, -1000,
	-1000, -407, -1000, 2293, 2280, 868, 868, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 12750, 2473, 21690, 2143, 54338, 1529,
	-1000, 27626, 53596, 54338, 29110, 29110, 29110, 29110, 29110, -1000,
	2196, 2192, -1000, 2179, 2161, 2239, 55080, -1000, 1526, 1732,
	-1000, 21690, 31336, 1825, 29110, -1000, -1000, 29110, 55080, 12002,
	-1000, -1000, 0, -19, -1000, -1000, -1000, -1000, 1482, -1000,
	-1000, 1358, 2450, 2311, -1000, -1000, -1000, -1000, -1000, 1725,
	-1000, 1717, 1872, 1701, 1697, 306, -1000, 2063, 2384, 943,
	943, -1000, 1309, -1000, 1344, 1620, 1610, -1000, -1000, -1000,
	462, -1000, 55080, 2142, 2139, 2131, -1000, -531, 1297, 2017,
	1994, 21690, 2015, 2524, 1869, 53596, -1000, -1000, 54338, -1000,
	274, -1000, 433, 53596, -1000, -1000, -1000, 339, 55080, -1000,
	7431, -1000, -1000, -1000, 214, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 55080, 232, -1000, 2009, 1389, -1000, -1000, 1980,
	-1000, -1000, -1000, -1000, -1000, 207, 192, 1602, 187, 1592,
	-1000, 187, -1000, 55080, 903, 2075, 55080, -1000, -1000, -1000,
	1094, 1094, -1000, -1000, 2378, -1000, 1344, 2191, 23916, 23916,
	-1000, 877, -1000, -1000, 378, -234, 2000, 2000, -1000, 2000,
	2001, -1000, 2000, 148, 2000, 129, 2000, -1000, -1000, 1478,
	1478, -1000, 1497, 2215, 2121, 2801, -1000, 1400, 21690, 2751,
	-1000, -1000, -266, -266, -266, -266, -266, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -82, 2729, 2724,
	2191, -1000, 1997, 1992, -1000, 2191, 21690, 2191, 1478, 2211,
	2191, 2191, 2191, 2191, 2191, 2191, 2191, 2191, 2191, 2191,
	2191, 2191, 2198, 2182, 2173, 2146, 2137, 2129, 2102, 2097,
	2093, 2084, 2002, 1989, 1984, 1976, 1971, 1938, 2191, 2191,
	1876, 2191, 1861, 1856, -1000, 1400, 1497, 2718, 1497, 2191,
	2191, 2712, 299, 2191, 1691, 1691, 1691, 1691, 1691, 1497,
	1497, 1497, 1497, 2191, 53596, -1000, -266, -1000, -1000, -311,
	-320, -1000, 1478, -266, 1871, 23916, 2191, 23916, 23916, 23916,
	2191, 1478, -1000, 1849, 1831, 2708, 1823, 2191, 2624, 2191,
	2191, 2191, 1770, -1000, 2460, 1529, 2460, 1529, 2460, 1626,
	1190, 55080, -1000, -1000, -1000, -1000, 2522, 2537, -1000, 1870,
	-1000, 58, 620, -1000, 2302, 2280, -1000, 2523, 2281, 2521,
	-1000, -1000, -1000, -1000, -1000, 1400, -1000, 2406, 1833, -1000,
	951, 1886, -1000, -1000, 20206, 1629, 2228, 784, 1626, 1930,
	2626, 2106, 2116, 3857, -1000, -1000, -1000, -1000, 2181, -1000,
	2169, -1000, -1000, 1974, -1000, 1947, 344, 29110, 1839, 1839,
	-1000, 548, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1081,
	7431, 2592, -1000, 1590, -1000, 1391, 212, 1280, -1000, -1000,
	943, 943, -1000, 1001, 1000, -1000, 55080, 1988, -1000, 350,
	1585, 350, 1247, -1000, -1000, 1228, -1000, -1000, -1000, -1000,
	1967, 2231, -1000, -1000, -1000, -1000, 55080, -1000, 55080, 55080,
	55080, 1983, 2512, -1000, 21690, 1981, 944, 2702, 53596, 53596,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 445, 943, -501, 312, 301, 943, 943, 943, -538,
	-1000, -1000, 1624, 1618, -1000, -221, -1000, 21690, -1000, -1000,
	-1000, -1000, -1000, 1236, 1236, 1571, 1556, 1547, -1000, 1974,
	-1000, -1000, -1000, 1748, -1000, -1000, -202, 53596, 53596, 53596,
	53596, -1000, -1000, -1000, 1111, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 877, 1478, 346,
	-212, 1478, -1000, -1000, 350, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 21690, -1000, 21690, -1000, 21690,
	1400, 21690, -1000, -1000, -1000, -1000, -1000, 2473, 1544, 21690,
	21690, -1000, 1224, 1217, -266, 2191, -1000, -1000, -1000, 21690,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 21690, -1000, 21690, -1000, 21690, -1000, 21690,
	-1000, 21690, -1000, 21690, -1000, 21690, -1000, 21690, -1000, 21690,
	-1000, 21690, -1000, 21690, -1000, 21690, -1000, 21690, -1000, 21690,
	-1000, 21690, -1000, 21690, -1000, -1000, 21690, -1000, -1000, -1000,
	21690, -1000, 21690, -1000, 21690, -1000, -1000, -1000, 21690, 266,
	332, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1478, 342, -1000, -1000, -1000, 2543, -1000, 1478,
	21690, 3283, -1000, 3283, 3283, 3283, -1000, -1000, -1000, 21690,
	-1000, 21690, 21690, -1000, 21690, -1000, 21690, -1000, -1000, -1000,
	-1000, 21690, 1529, 2284, 38014, 1529, 38014, 1529, 31336, -1000,
	-1000, 2537, 2499, 2509, 2262, 2269, 2269, 2302, -1000, 2508,
	2507, -1000, 1538, 2505, 1532, 998, -1000, 54338, 21690, -1000,
	1529, 37272, -1000, 377, 53596, 1529, 53596, -1000, 2493, -1000,
	-1000, 21690, 1979, -1000, 21690, -1000, -1000, -1000, -1000, 6516,
	2522, 1839, -1000, -1000, 886, -1000, 21690, -1000, 10057, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1527, 1509, -1000,
	-1000, 1975, 21690, -1000, -1000, -1000, 1742, 1619, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1974, -1000, -1000, -1000,
	-1000, 339, -530, 2696, 53596, 1213, -1000, 1614, 1869, 324,
	1529, 1489, 943, 943, 943, 1201, 1178, 37272, 1609, -1000,
	53596, 407, -1000, 339, -1000, -226, -227, 2191, -1000, -1000,
	2447, -1000, -1000, 15742, -1000, -1000, 1969, 1985, -1000, -1000,
	-1000, -1000, 2204, -193, -218, -1000, -1000, 2191, 2191, 2191,
	1235, 1478, -1000, 2191, 2191, 1598, 1517, -1000, -1000, 2191,
	2191, 2191, 2191, 2191, 2191, 2191, 2191, 2191, 2191, 2191,
	2191, 2191, 2191, 2191, 2191, 2191, 2191, 2191, 2191, 1497,
	1723, -1000, 266, 1478, 2115, -1000, -1000, 6516, -1000, -1000,
	2493, 2500, 62, -1000, -1000, 209, 62, 1400, 978, 1478,
	1478, 978, 1699, 2191, 1695, 1652, 2191, 2191, 32078, -1000,
	2483, 2482, 1516, -1000, -1000, 38014, 1516, 38014, 962, 2499,
	-275, 21690, 21690, 2255, 1271, -1000, -1000, -1000, -1000, 1480,
	1441, -1000, 1437, -1000, 2591, -1000, 1400, -1000, 1529, 1529,
	-1000, 531, 1886, -1000, 2473, 1400, 53596, 1400, 55, 2493,
	-1000, 2191, -1000, 1529, 1529, 1529, 1529, 1529, 1529, 1529,
	1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529,
	1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529,
	1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529,
	1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529,
	1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529,
	1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529,
	1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529,
	1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529,
	1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529,
	1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529,
	1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529,
	1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529,
	1529, 1529, 1529, 1529, -1000, -1000, 53596, 2506, -1000, -1000,
	2445, 1553, 164, -1000, 1494, 1869, -1000, -1000, 922, -1000,
	21690, -1000, 37272, 1435, 1432, -1000, -1000, -1000, -1000, -538,
	-1000, -1000, -1000, -1000, -1000, -1000, 373, 1860, -1000, 942,
	53596, 55080, -1000, 2167, -1000, -1000, -1000, -1000, 21690, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 21690, -1000, 1478, 2112,
	-1000, -370, -1000, -502, 21690, -266, -1000, -1000, -266, -1000,
	-1000, -1000, -1000, -1000, 21690, -1000, -1000, 21690, -1000, 21690,
	-1000, -1000, 1516, -1000, -1000, -1000, 36530, -1000, 1516, -1000,
	1516, -1000, -275, -1000, 1859, -1000, 53596, 1400, 375, -1000,
	1234, -1000, -1000, -1000, -1000, -1000, 54338, 53596, 1886, 53596,
	-1000, -1000, 1508, 1478, 1529, 2473, -1000, 1506, -1000, 373,
	-1000, 1968, 1994, -1000, -1000, -1000, 19464, -1000, -1000, -1000,
	-1000, -1000, 249, -200, 15742, 11254, 1500, -1000, -198, 2191,
	1497, -1000, -476, -1000, -1000, -1000, -1000, 303, -1000, -1000,
	1858, -1000, -1000, 1647, 1616, 1541, -1000, -1000, -1000, -1000,
	-1000, -1000, -275, -1000, -1000, 2442, -1000, -230, -1000, -1000,
	1848, 1493, -1000, -1000, -1000, 31336, 52854, -1000, -187, 376,
	-200, 21690, 1961, 1478, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -20, -1000, -1000, 494, -1000, -1000, -1000, 1980,
	-215, -1000, -1000, -1000, 310, -495, -317, -318, 23916, -1000,
	21690, -1000, 21690, -1000, 21690, -1000, 53596, 1529, -1000, -1000,
	-1000, 1477, -1000, 5091, -342, 2111, -1000, -109, -1000, -1000,
	-1000, 1059, 1408, -1000, -1000, -1000, -1000, -1000, -1000, 2305,
	53596, -1000, 417, -1000, -1000, 14994, -202, -219, 990, -1000,
	-1000, -1000, -1000, -1000, 3283, 1488, 1303, 2191, -1000, 53596,
	-1000, 52854, -330, 876, 6516, -1000, 2103, 2079, 2582, -1000,
	-1000, -1000, -1000, -1000, -1000, -545, 1455, 245, -1000, -1000,
	-1000, 310, -338, -1000, 21690, -1000, 21690, -1000, 1478, -1000,
	-1000, 2417, 55, -1000, 2588, -1000, 2577, 907, 907, -1000,
	1144, -545, -1000, -1000, -1000, -1000, 2191, 2191, -1000, -361,
	-1000, -1000, -1000, -1000, -1000, 413, 1240, -1000, -1000, -1000,
	-1000, -1000, 6516, -1000, -1000, -1000, 282, 282, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3230, 3220, 33, 5, 38, 37, 3214, 3213, 3212,
	176, 3211, 3209, 3205, 3204, 3203, 3202, 2650, 2613, 2609,
	3200, 3199, 3194, 3191, 3189, 3188, 3187, 3183, 3181, 43,
	115, 97, 113, 200, 212, 3176, 3175, 170, 165, 196,
	3174, 3171, 3168, 118, 189, 73, 81, 192, 3167, 3166,
	66, 3164, 3163, 3162, 187, 186, 184, 1061, 3161, 178,
	111, 47, 3160, 3159, 3157, 3151, 3150, 3147, 3145, 3142,
	3136, 3134, 3133, 3131, 3128, 3126, 3119, 3114, 3111, 3110,
	284, 3108, 3107, 14, 3106, 70, 3103, 3100, 3099, 3098,
	3097, 6, 3096, 3095, 30, 39, 59, 3093, 3092, 44,
	3091, 3087, 3085, 3083, 3082, 79, 3081, 15, 3078, 35,
	3072, 3071, 126, 3070, 3069, 3068, 40, 3067, 3065, 3061,
	9, 169, 3059, 3056, 140, 3055, 3052, 3048, 167, 202,
	3047, 2275, 3040, 94, 3037, 3031, 3030, 166, 193, 3029,
	123, 3006, 3004, 3002, 152, 3000, 3337, 2998, 2996, 63,
	67, 164, 2995, 2993, 199, 65, 10, 2991, 21, 19,
	2990, 2987, 64, 68, 2985, 112, 2982, 2981, 95, 72,
	2980, 90, 107, 2976, 2974, 27, 8, 2973, 1, 4,
	2, 105, 2966, 2963, 117, 2961, 2960, 2959, 93, 2955,
	2952, 3364, 2949, 83, 135, 96, 78, 2946, 172, 116,
	2942, 2940, 2939, 2936, 2929, 2928, 51, 2927, 2926, 2920,
	141, 1261, 102, 2914, 2908, 147, 344, 130, 52, 133,
	2905, 146, 2903, 208, 75, 2901, 171, 2900, 2899, 138,
	137, 2895, 2889, 55, 168, 195, 2888, 91, 129, 122,
	182, 89, 131, 2883, 2881, 57, 61, 2878, 2875, 2870,
	2866, 181, 2862, 2860, 58, 2859, 54, 2856, 191, 2854,
	306, 71, 2848, 180, 163, 2842, 60, 2841, 2840, 82,
	104, 121, 34, 2839, 157, 161, 127, 162, 2838, 2837,
	53, 2836, 2831, 2827, 194, 312, 2826, 2824, 350, 177,
	143, 150, 84, 2823, 318, 2822, 2819, 2813, 24, 4524,
	6056, 179, 32, 159, 2811, 2810, 7149, 48, 41, 11,
	2809, 210, 2807, 188, 2806, 2802, 2800, 217, 207, 99,
	158, 56, 2796, 2794, 2792, 2791, 42, 2790, 2789, 2788,
	2785, 2782, 2772, 36, 31, 29, 62, 197, 80, 7,
	92, 160, 154, 69, 2768, 2766, 2765, 120, 98, 2763,
	156, 155, 125, 101, 2742, 175, 144, 108, 2741, 87,
	28, 2740, 2737, 2736, 2731, 85, 2730, 2727, 2726, 2723,
	153, 148, 119, 77, 2719, 76, 114, 151, 145, 50,
	2717, 45, 2699, 2696, 26, 190, 25, 2695, 16, 103,
	110, 2693, 6238, 2692, 12, 304, 149, 2691, 2688, 13,
	17, 20, 2686, 2681, 2680, 2678, 136, 2677, 2672, 2668,
	2663, 23, 49, 22, 18, 106, 139, 74, 2660, 2656,
	142, 2654, 2643, 2642, 0, 1038, 128, 2629, 198,
}

//line sql.y:8806
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) groupByUnion() *GroupBy {
	v, _ := st.union.(*GroupBy)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) intPtrUnion() *int {
	v, _ := st.union.(*int)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalType {
	v, _ := st.union.(IntervalType)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) killTypeUnion() KillType {
	v, _ := st.union.(KillType)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) rowAliasUnion() *RowAlias {
	v, _ := st.union.(*RowAlias)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) tableStmtUnion() TableStatement {
	v, _ := st.union.(TableStatement)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 422, 423, 423, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 266, 392, 264, 264, 28, 75, 37, 37, 36,
	36, 39, 39, 38, 31, 31, 31, 32, 32, 32,
	32, 32, 32, 32, 32, 33, 33, 33, 33, 33,
	29, 29, 29, 29, 30, 30, 30, 30, 30, 35,
	35, 15, 16, 34, 34, 34, 17, 17, 110, 110,
	18, 19, 19, 19, 19, 426, 426, 186, 186, 184,
	184, 185, 185, 269, 269, 20, 273, 273, 275, 275,
	275, 275, 265, 265, 265, 21, 21, 274, 274, 276,
	276, 276, 279, 279, 279, 279, 320, 320, 320, 22,
	22, 22, 22, 22, 130, 130, 394, 394, 393, 388,
	388, 387, 387, 386, 391, 391, 390, 390, 389, 41,
	42, 51, 51, 51, 51, 52, 53, 395, 395, 361,
	58, 58, 57, 57, 57, 57, 57, 57, 59, 59,
	55, 55, 54, 54, 56, 56, 363, 363, 349, 349,
	362, 362, 362, 362, 362, 362, 362, 348, 348, 141,
	141, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 410, 410,
	410, 409, 409, 244, 244, 244, 244, 244, 244, 244,
	244, 150, 150, 162, 162, 162, 162, 162, 162, 148,
	148, 149, 147, 147, 147, 155, 155, 155, 155, 155,
	155, 155, 155, 155, 155, 155, 155, 155, 155, 155,
	155, 414, 414, 414, 414, 414, 414, 414, 414, 414,
	414, 414, 414, 414, 414, 414, 414, 414, 414, 414,
	414, 414, 414, 414, 414, 414, 414, 414, 414, 414,
	414, 414, 414, 414, 414, 414, 414, 414, 414, 414,
	414, 414, 414, 161, 161, 156, 156, 156, 158, 158,
	157, 157, 157, 159, 159, 411, 411, 411, 411, 326,
	326, 326, 326, 329, 329, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 328, 328, 328, 328, 328, 328,
	328, 330, 330, 330, 330, 330, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 332, 332, 332, 332, 332, 332, 332,
	332, 347, 347, 336, 336, 341, 341, 342, 342, 343,
	343, 343, 344, 344, 344, 345, 345, 338, 338, 338,
	338, 338, 338, 338, 338, 338, 340, 340, 339, 339,
	339, 350, 375, 375, 374, 374, 372, 372, 372, 372,
	372, 372, 372, 372, 359, 359, 369, 369, 369, 369,
	369, 358, 358, 354, 354, 354, 355, 355, 356, 356,
	353, 353, 357, 357, 371, 371, 370, 370, 351, 351,
	352, 352, 377, 412, 412, 412, 412, 412, 413, 413,
	378, 402, 404, 404, 404, 403, 403, 400, 401, 399,
	399, 399, 399, 399, 85, 85, 85, 292, 292, 293,
	293, 367, 367, 366, 366, 366, 368, 368, 365, 365,
	365, 365, 365, 365, 365, 365, 365, 365, 365, 365,
	365, 365, 365, 365, 365, 365, 365, 365, 365, 365,
	365, 365, 365, 365, 365, 365, 365, 365, 365, 287,
	287, 287, 398, 398, 398, 398, 398, 398, 397, 397,
	397, 364, 364, 364, 364, 396, 396, 60, 60, 224,
	224, 415, 415, 417, 417, 417, 48, 48, 48, 48,
	48, 48, 47, 47, 47, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 43, 49, 49, 44, 44,
	44, 44, 44, 44, 44, 44, 44, 44, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 112, 112, 113, 113, 113, 113, 115, 115,
	115, 380, 380, 61, 61, 3, 3, 174, 176, 177,
	177, 175, 175, 175, 175, 175, 175, 63, 63, 62,
	62, 179, 178, 180, 180, 180, 1, 1, 2, 2,
	4, 4, 385, 385, 385, 385, 385, 385, 385, 385,
	385, 385, 385, 385, 385, 385, 385, 385, 385, 385,
	385, 385, 385, 385, 346, 346, 346, 379, 379, 381,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	118, 117, 117, 116, 119, 119, 119, 119, 119, 119,
	119, 119, 383, 383, 383, 64, 64, 384, 333, 334,
	335, 5, 6, 360, 382, 126, 126, 24, 40, 40,
	25, 25, 25, 25, 26, 26, 65, 68, 68, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 297, 297, 286, 286, 295,
	295, 285, 285, 311, 311, 311, 288, 288, 288, 289,
	289, 408, 408, 408, 282, 282, 67, 67, 67, 312,
	312, 312, 312, 70, 70, 418, 418, 419, 419, 420,
	420, 420, 71, 72, 72, 315, 315, 316, 316, 73,
	74, 86, 86, 86, 86, 86, 87, 87, 87, 87,
	87, 87, 111, 111, 111, 10, 10, 10, 10, 82,
	82, 82, 9, 9, 11, 69, 69, 76, 405, 405,
	406, 407, 407, 407, 407, 77, 79, 27, 27, 27,
	27, 27, 27, 136, 136, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 131, 131, 131,
	125, 125, 427, 80, 81, 81, 129, 129, 129, 122,
	122, 122, 128, 128, 128, 12, 12, 13, 268, 268,
	14, 14, 135, 135, 134, 134, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 132, 132, 133,
	133, 133, 133, 304, 304, 304, 303, 303, 168, 168,
	170, 169, 169, 171, 171, 172, 172, 172, 172, 222,
	222, 194, 194, 261, 261, 262, 262, 260, 260, 267,
	267, 263, 263, 263, 263, 270, 270, 173, 173, 173,
	173, 181, 181, 182, 182, 183, 183, 314, 314, 309,
	309, 309, 308, 308, 187, 187, 187, 189, 188, 188,
	188, 188, 190, 190, 192, 192, 191, 191, 193, 198,
	198, 197, 197, 195, 195, 195, 195, 195, 195, 196,
	196, 196, 196, 199, 199, 146, 146, 146, 146, 146,
	146, 146, 146, 416, 416, 160, 160, 160, 160, 160,
	160, 160, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 251, 251, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 227, 227, 226, 226, 88,
	88, 88, 89, 89, 90, 90, 90, 90, 90, 91,
	91, 91, 91, 91, 91, 91, 93, 93, 92, 92,
	213, 213, 301, 301, 94, 95, 95, 96, 96, 99,
	99, 98, 97, 97, 103, 103, 100, 100, 102, 102,
	101, 104, 104, 105, 106, 106, 283, 283, 200, 200,
	209, 209, 209, 209, 201, 201, 202, 202, 202, 202,
	202, 202, 210, 210, 210, 221, 211, 211, 207, 207,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 165, 165, 165, 165, 232, 232,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 153, 153, 166, 166, 166,
	166, 167, 167, 167, 167, 167, 167, 167, 322, 322,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 428, 428,
	337, 337, 337, 208, 208, 208, 208, 208, 127, 127,
	127, 127, 127, 319, 319, 319, 323, 323, 323, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 324, 324, 230, 230, 123, 123,
	228, 228, 229, 231, 231, 223, 223, 223, 223, 225,
	225, 204, 204, 204, 233, 233, 325, 325, 234, 234,
	107, 108, 108, 109, 109, 235, 235, 237, 236, 236,
	238, 239, 239, 239, 240, 240, 241, 241, 241, 50,
	50, 50, 50, 50, 45, 45, 45, 45, 46, 46,
	46, 46, 138, 138, 138, 138, 140, 140, 139, 139,
	83, 83, 84, 84, 84, 144, 144, 145, 145, 145,
	142, 142, 143, 143, 258, 258, 258, 258, 258, 258,
	258, 242, 242, 242, 249, 249, 249, 245, 245, 247,
	247, 247, 248, 248, 248, 246, 255, 255, 257, 257,
	256, 256, 252, 252, 253, 253, 254, 254, 254, 250,
	250, 203, 203, 203, 203, 203, 259, 259, 259, 259,
	313, 313, 313, 271, 271, 214, 214, 215, 215, 219,
	219, 218, 218, 216, 217, 220, 220, 164, 272, 272,
	280, 277, 277, 278, 278, 305, 305, 305, 281, 281,
	294, 294, 290, 290, 291, 291, 284, 284, 296, 296,
	296, 78, 212, 212, 376, 376, 373, 300, 300, 302,
	302, 306, 306, 310, 310, 307, 307, 8, 421, 421,
	421, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 424, 425, 317, 318, 318, 318,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 1, 2, 3, 2, 3, 0,
	1, 3, 1, 4, 3, 3, 4, 3, 2, 3,
	4, 3, 4, 2, 7, 1, 3, 3, 3, 3,
	1, 2, 1, 1, 3, 2, 3, 3, 2, 3,
	3, 5, 7, 10, 9, 1, 7, 8, 1, 1,
	10, 11, 9, 8, 8, 1, 1, 1, 3, 1,
	3, 1, 3, 0, 4, 3, 1, 3, 3, 3,
	3, 3, 1, 1, 2, 5, 4, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 2,
	2, 6, 12, 2, 0, 2, 0, 2, 1, 0,
	2, 1, 3, 3, 0, 1, 1, 3, 3, 6,
	4, 7, 8, 8, 8, 5, 3, 1, 1, 5,
	0, 1, 1, 1, 1, 2, 2, 2, 0, 1,
	4, 4, 4, 4, 4, 4, 2, 4, 1, 3,
	1, 1, 3, 4, 3, 3, 3, 5, 10, 0,
	2, 0, 2, 3, 5, 3, 4, 2, 3, 2,
	3, 3, 3, 3, 2, 2, 4, 4, 1, 1,
	1, 1, 1, 0, 2, 2, 3, 3, 2, 2,
	2, 1, 1, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 3, 3, 3, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	5, 2, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 3, 0, 5, 1, 3, 0,
	3, 5, 0, 1, 1, 0, 1, 0, 3, 3,
	2, 2, 2, 1, 2, 2, 0, 1, 0, 2,
	2, 5, 0, 1, 1, 2, 1, 3, 2, 1,
	1, 3, 3, 3, 0, 1, 4, 3, 3, 4,
	2, 0, 2, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 0, 1, 1, 3, 3, 4, 3, 1,
	3, 1, 7, 6, 7, 7, 8, 8, 0, 1,
	5, 2, 1, 1, 1, 0, 1, 3, 3, 1,
	1, 2, 2, 2, 0, 1, 1, 1, 2, 0,
	1, 0, 1, 1, 3, 2, 1, 2, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 4, 5, 0,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 1, 1, 0, 1, 0, 1, 0,
	2, 0, 2, 0, 2, 2, 0, 1, 5, 1,
	3, 7, 1, 3, 3, 1, 2, 2, 2, 5,
	5, 5, 6, 8, 5, 5, 4, 4, 4, 6,
	5, 5, 5, 2, 2, 2, 2, 3, 3, 3,
	4, 3, 3, 1, 3, 5, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 3, 4,
	4, 2, 11, 3, 6, 8, 6, 6, 6, 13,
	8, 6, 6, 10, 7, 5, 5, 5, 5, 7,
	5, 5, 5, 5, 5, 7, 7, 5, 5, 5,
	5, 6, 0, 6, 5, 6, 4, 5, 0, 8,
	9, 0, 3, 0, 1, 0, 3, 8, 4, 1,
	3, 3, 6, 7, 7, 8, 4, 0, 1, 0,
	1, 3, 3, 1, 1, 2, 1, 1, 0, 2,
	0, 2, 5, 3, 7, 4, 4, 4, 4, 3,
	3, 3, 7, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 0, 2, 2, 1, 3, 2,
	0, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 1, 3, 3, 0, 2, 2, 2, 2, 2,
	2, 2, 4, 4, 3, 0, 1, 4, 3, 4,
	4, 3, 3, 3, 2, 1, 3, 3, 3, 5,
	7, 7, 6, 5, 3, 2, 4, 5, 5, 3,
	3, 7, 3, 3, 3, 3, 4, 7, 5, 2,
	4, 4, 4, 4, 4, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 4, 2, 2, 4, 4, 4,
	4, 4, 2, 3, 3, 3, 3, 3, 5, 2,
	3, 3, 2, 3, 4, 4, 4, 3, 4, 4,
	5, 3, 5, 3, 5, 0, 1, 0, 1, 0,
	1, 1, 1, 0, 2, 2, 0, 2, 2, 0,
	2, 0, 1, 1, 1, 1, 2, 1, 3, 1,
	1, 1, 1, 1, 3, 0, 1, 1, 3, 3,
	2, 2, 1, 1, 5, 0, 1, 0, 1, 2,
	3, 0, 3, 3, 3, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 4, 4, 4, 2, 2, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 4, 3, 3, 6,
	4, 7, 6, 1, 3, 2, 2, 2, 2, 1,
	1, 1, 3, 2, 1, 1, 1, 0, 1, 1,
	0, 3, 0, 2, 0, 2, 1, 2, 2, 0,
	1, 1, 0, 1, 1, 5, 5, 4, 0, 2,
	4, 4, 0, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	2, 3, 5, 0, 1, 2, 1, 1, 0, 1,
	2, 1, 3, 1, 1, 1, 4, 3, 1, 1,
	2, 3, 7, 0, 3, 0, 1, 1, 3, 1,
	3, 1, 1, 3, 3, 1, 3, 4, 4, 4,
	3, 2, 4, 0, 1, 0, 2, 0, 1, 0,
	1, 2, 1, 1, 1, 2, 2, 1, 2, 3,
	2, 3, 2, 2, 2, 1, 1, 3, 3, 0,
	1, 1, 2, 6, 5, 6, 6, 5, 5, 0,
	2, 3, 3, 0, 2, 3, 3, 3, 2, 3,
	1, 3, 6, 1, 1, 3, 4, 3, 4, 4,
	4, 1, 3, 4, 5, 6, 3, 4, 5, 6,
	3, 4, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 5, 5, 3, 3, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 3, 1, 1, 1, 2, 2,
	2, 2, 1, 1, 2, 7, 7, 6, 6, 2,
	2, 5, 6, 3, 3, 1, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 4, 2, 4, 0, 1, 2, 5,
	0, 3, 0, 1, 4, 4, 2, 1, 0, 0,
	1, 1, 2, 2, 1, 1, 2, 2, 0, 1,
	1, 1, 1, 5, 1, 3, 0, 3, 1, 1,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 4, 8, 8, 6, 8, 6, 5, 4, 10,
	2, 2, 1, 2, 2, 2, 2, 2, 5, 6,
	6, 6, 6, 6, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 8, 4, 8, 8, 6, 5,
	4, 4, 4, 5, 7, 4, 4, 7, 4, 4,
	6, 6, 6, 8, 6, 6, 4, 4, 3, 4,
	6, 6, 4, 4, 6, 4, 6, 4, 4, 4,
	4, 4, 4, 6, 4, 6, 4, 4, 4, 6,
	4, 6, 4, 4, 6, 4, 6, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 4, 4, 6, 4,
	6, 4, 8, 6, 4, 4, 6, 4, 6, 8,
	4, 6, 8, 4, 4, 6, 8, 6, 4, 6,
	6, 8, 10, 7, 8, 8, 9, 4, 4, 4,
	4, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 4, 4, 4, 4, 4, 4, 6, 4, 6,
	5, 9, 6, 9, 8, 6, 8, 8, 8, 6,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	6, 8, 10, 12, 14, 6, 8, 8, 10, 12,
	14, 6, 8, 10, 12, 6, 8, 4, 4, 3,
	4, 6, 6, 4, 6, 4, 6, 8, 0, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	0, 2, 3, 4, 4, 4, 4, 4, 0, 3,
	4, 7, 3, 1, 1, 1, 0, 5, 5, 2,
	3, 1, 2, 2, 1, 2, 1, 2, 2, 1,
	2, 2, 1, 1, 0, 1, 0, 1, 0, 2,
	1, 2, 4, 0, 2, 1, 1, 3, 5, 1,
	1, 1, 2, 2, 0, 4, 0, 2, 0, 2,
	2, 1, 3, 0, 1, 0, 1, 3, 1, 3,
	2, 0, 1, 1, 0, 1, 2, 4, 4, 0,
	2, 2, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 0, 3, 3, 3, 0, 3, 1, 1,
	0, 4, 0, 1, 1, 0, 3, 1, 3, 2,
	1, 1, 0, 1, 2, 3, 4, 2, 3, 4,
	4, 9, 3, 5, 0, 3, 3, 0, 1, 0,
	2, 2, 0, 2, 2, 2, 0, 2, 1, 2,
	3, 3, 0, 2, 1, 2, 3, 4, 3, 0,
	1, 3, 1, 6, 5, 4, 1, 3, 3, 5,
	0, 2, 5, 0, 5, 1, 3, 1, 3, 1,
	3, 1, 2, 3, 4, 1, 1, 1, 1, 3,
	3, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 0, 3, 0, 1, 0, 1,
	1, 5, 0, 1, 0, 1, 2, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -422, -80, -427, -7, -29, -15, -16, -17, -18,
	-19, -20, -21, -22, -23, -24, -25, -26, -65, -68,
	-66, -67, -70, -71, -72, -73, -74, -9, -11, -69,
	-27, -28, -75, -76, -77, -78, -79, -12, -13, -14,
	-8, -32, -31, -30, 13, 14, -110, -36, 35, -41,
	-51, 240, -52, -42, 241, -53, 243, 242, 280, 244,
	397, 273, 83, 330, 331, 333, 334, 335, 336, -111,
	704, 278, 279, 246, 39, 51, 36, 37, 40, 250,
	286, 287, 249, 145, -33, -37, 12, -424, 15, 487,
	275, 274, 31, -34, 597, 95, -35, 63, -81, -423,
	752, -258, -242, 26, 36, 32, -241, -237, -129, -242,
	24, 22, 11, -80, -80, -80, 16, 17, -80, -361,
	-363, 95, 173, 95, -80, -58, -57, -55, -54, -56,
	-59, 34, -48, -49, -385, -47, -44, 245, 242, 290,
	135, 136, 280, 281, 282, 244, 264, 279, 283, 278,
	299, -43, 90, 36, 597, 600, -368, 241, 247, 248,
	243, 488, 138, 137, 84, -365, 392, 631, 722, -59,
	724, 110, 113, 723, 50, 254, 725, 726, 727, 638,
	728, 263, 729, 730, 731, 732, 738, 679, 739, 740,
	741, 139, 11, -80, -310, -306, 100, -299, 594, 266,
	629, 441, 630, 315, 90, 47, 42, 533, 604, 388,
	392, 631, 518, 722, 398, 330, 348, 342, 523, 524,
	525, 371, 363, 595, 632, 605, 318, 267, 303, 716,
	361, 149, 724, 322, 633, 281, 399, 400, 634, 401,
	110, 333, 438, 737, 321, 635, 735, 113, 723, 338,
	88, 517, 57, 719, 326, 50, 276, 446, 447, 359,
	249, 355, 725, 304, 636, 607, 297, 138, 135, 744,
	39, 351, 56, 33, 734, 137, 55, 726, 164, 637,
	727, 638, 403, 378, 710, 54, 404, 282, 639, 93,
	287, 599, 327, 718, 405, 538, 352, 406, 314, 733,
	246, 640, 325, 699, 691, 692, 407, 408, 711, 383,
	379, 384, 540, 641, 430, 522, 409, 695, 696, 751,
	58, 642, 643, 712, 136, 644, 87, 728, 89, 346,
	347, 645, 312, 265, 543, 544, 432, 375, 500, 127,
	507, 508, 120, 121, 503, 122, 509, 123, 128, 510,
	511, 512, 501, 124, 117, 502, 513, 514, 376, 377,
	125, 515, 119, 118, 504, 506, 126, 516, 263, 38,
	410, 596, 316, 64, 320, 291, 433, 52, 381, 748,
	51, 706, 545, 646, 709, 374, 370, 497, 59, 647,
	648, 649, 650, 519, 729, 373, 345, 369, 743, 4,
	309, 492, 520, 730, 68, 248, 386, 385, 387, 298,
	429, 366, 651, 652, 653, 270, 91, 654, 356, 25,
	655, 656, 411, 305, 657, 62, 658, 659, 436, 279,
	660, 60, 731, 45, 661, 284, 745, 732, 662, 663,
	664, 705, 665, 286, 666, 413, 667, 693, 694, 412,
	380, 382, 546, 293, 414, 397, 251, 598, 668, 328,
	350, 283, 736, 669, 271, 534, 535, 536, 537, 717,
	542, 541, 285, 290, 278, 437, 272, 670, 671, 672,
	673, 674, 319, 690, 675, 676, 334, 602, 738, 498,
	49, 677, 678, 679, 680, 681, 313, 308, 431, 440,
	67, 92, 394, 682, 683, 715, 344, 339, 43, 306,
	99, 478, 480, 481, 482, 483, 484, 479, 486, 684,
	331, 61, 739, 740, 741, 300, 742, 526, 527, 528,
	529, 13, 580, 563, 591, 564, 581, 565, 574, 566,
	582, 590, 592, 547, 555, 548, 556, 586, 569, 583,
	575, 568, 567, 589, 572, 576, 549, 557, 587, 573,
	550, 558, 551, 559, 552, 560, 585, 584, 577, 588,
	553, 561, 579, 554, 562, 578, 570, 571, 449, 749,
	750, 521, 416, 139, 310, 311, 53, 367, 292, 685,
	323, 686, 357, 358, 494, 495, 372, 343, 368, 146,
	702, 332, 341, 700, 294, 417, 499, 280, 687, 439,
	307, 389, 131, 340, 395, 324, 603, 539, 299, 418,
	714, 601, 530, 531, 365, 362, 301, 532, 688, 390,
	704, 419, 255, 295, 296, 689, 701, 420, 421, 317,
	422, 423, 424, 425, 426, 428, 329, 427, 703, 697,
	698, 302, 477, 600, 337, 360, 396, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 496, 253, -80, 253, -191,
	-306, -131, 706, 708, 192, -277, 400, -295, 402, 415,
	410, 420, 408, -286, 411, 413, 293, -408, 430, 253,
	417, 240, 403, 412, 421, 422, 317, 428, 423, 329,
	427, 302, 424, 425, 426, -392, 192, 727, 742, 332,
	340, 149, 364, 407, 405, 431, 706, 100, -312, 100,
	101, 102, -299, 332, -315, 337, -300, -392, -299, 335,
	-80, -80, -317, -317, -131, -211, -146, 157, -160, -266,
	-163, 101, -151, -154, -205, -206, -207, -208, -161, -225,
	-264, 181, 182, 189, 158, -221, -164, 29, 593, 489,
	488, 192, 34, 235, 77, 78, 491, 492, 160, 63,
	15, 454, 455, -162, 444, 445, 456, 450, 451, 517,
	519, 520, 521, 518, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 522, 533, 494, 495, 129, 496,
	117, 119, 118, 127, 128, 497, 498, 499, 361, 545,
	546, 540, 543, 544, 542, 541, 376, 377, 500, 563,
	564, 568, 567, 565, 566, 569, 572, 573, 574, 575,
	576, 577, 579, 578, 570, 571, 548, 547, 549, 550,
	551, 552, 553, 554, 556, 555, 557, 558, 559, 560,
	561, 562, 580, 581, 582, 583, 584, 586, 585, 590,
	589, 587, 588, 592, 591, 501, 502, 120, 121, 122,
	123, 124, 125, 126, 503, 506, 504, 505, 507, 508,
	509, 514, 515, 510, 511, 512, 513, 516, 387, 385,
	386, 382, 381, 380, -90, -103, 620, 619, -104, 441,
	446, 447, 449, -152, -153, -166, -167, -300, -306, 258,
	443, 252, 187, 487, -155, -149, -223, 116, 102, -31,
	-220, 442, 452, 453, 457, 448, 458, 606, 608, 623,
	624, 626, 611, 616, 615, 618, 534, 535, 536, 537,
	538, 539, 691, 692, 693, 694, 695, 696, 697, 698,
	-392, -299, 100, -158, -156, -200, 103, 108, 111, 112,
	114, -414, 276, 357, 358, 130, -424, -216, -217, -157,
	105, 106, 107, 132, 133, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 233, 234, 720, 98, 104,
	50, 416, 416, -191, -80, -80, -80, -80, -421, 723,
	598, -235, -129, -237, -33, -31, -424, 12, -80, -31,
	-32, -30, -37, -39, 625, -38, -306, -80, 109, -242,
	-258, 16, 67, 176, 48, 56, -240, -241, -34, -31,
	-146, 23, 41, 27, -133, 183, -146, -306, -133, -284,
	257, -80, -80, -273, -320, 332, -275, 431, 706, 430,
	-265, -278, 100, -264, -277, 429, 101, -362, 173, -348,
	-352, -300, 268, -378, 264, -191, -371, -370, -300, -424,
	-130, -294, 254, 262, 261, 150, -395, 153, 310, 443,
	252, -54, -55, -56, -277, 191, 726, -112, 285, 289,
	96, 96, -352, -351, -350, -396, 289, 268, -377, -369,
	260, 269, -358, 261, 262, -353, 254, 151, -396, -353,
	259, 269, 264, 268, 289, 289, 139, 289, 139, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 284, -359,
	165, -359, 601, 601, -365, -396, 264, 254, -396, -396,
	260, -296, -353, 256, 28, 256, 38, 38, -359, -359,
	-359, -277, 191, -359, -359, -359, -359, 297, 297, -359,
	-359, -359, -359, -359, -359, -359, -359, -359, -359, -359,
	-359, -359, -359, -359, -359, -359, 253, -395, -138, 427,
	317, 90, -57, 299, -40, -191, -294, 254, 255, -395,
	286, -191, 236, 253, 709, -288, 173, 19, -288, -285,
	416, 414, 401, 406, -288, -288, -288, -288, 300, 399,
	-354, 254, 38, 265, 416, 300, 399, 300, 301, 300,
	301, 409, 419, 300, -311, 18, 176, 443, 404, 408,
	293, 253, 294, 255, 418, 301, -311, 98, -289, 173,
	300, 416, 410, 296, -288, -288, -318, -424, -302, -300,
	-298, 245, 41, 156, 28, 30, 159, 192, 142, 23,
	160, 40, 247, 364, 264, 191, 260, 488, 240, 81,
	606, 444, 451, 442, 450, 454, 490, 491, 443, 402,
	34, 17, 608, 31, 274, 27, 44, 185, 242, 163,
	609, 277, 29, 275, 129, 133, 611, 26, 84, 269,
	18, 262, 46, 20, 612, 613, 21, 74, 258, 257,
	176, 254, 79, 15, 235, 32, 172, 75, 614, 151,
	145, 615, 616, 617, 618, 143, 77, 173, 24, 746,
	452, 453, 36, 707, 593, 288, 187, 82, 65, 708,
	157, 448, 619, 620, 130, 621, 134, 85, 713, 153,
	22, 80, 48, 622, 289, 623, 259, 747, 624, 434,
	625, 174, 243, 487, 78, 175, 720, 626, 721, 252,
	415, 12, 493, 35, 273, 261, 73, 72, 141, 76,
	458, 627, 253, 162, 256, 144, 132, 11, 150, 37,
	16, 83, 86, 455, 456, 457, 63, 140, 597, 161,
	19, 628, 435, 155, -392, 709, -318, -318, 300, 341,
	35, 101, -418, -419, -420, 597, 434, 256, -300, -191,
	-86, 699, 244, -87, 705, 41, 251, 146, 38, -136,
	416, -124, 192, 727, 710, 711, 712, 709, 413, 717,
	715, 713, 300, 714, 96, 153, 155, 156, 4, -146,
	172, -201, -202, 171, 165, 166, 167, 168, 169, 170,
	177, 176, 157, 159, 173, -251, 154, 178, 179, 180,
	181, 182, 183, 184, 186, 185, 187, 188, 174, 175,
	191, 238, 239, -154, -154, -154, -154, -221, -227, -226,
	-424, -223, -392, -299, -306, -424, -424, -154, -283, -424,
	-151, -424, -424, -424, -424, -424, -230, -146, -424, -424,
	-428, -424, -428, -428, -428, -337, -424, -337, -337, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, 236, -424, -424, -424, -424, -424,
	-337, -337, -337, -337, -337, -337, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	98, 112, 108, 111, 103, 114, 98, 98, 98, 98,
	-31, -32, -211, 63, -424, -317, -405, -406, -194, -191,
	-424, 317, -300, -300, 286, 105, -240, -34, -31, -235,
	-241, -237, -31, -80, -122, -135, 69, 70, -134, -137,
	27, 44, 74, 76, 99, 72, 73, 71, 41, -425,
	97, -425, -258, -425, 96, -39, -261, 95, 115, -214,
	-219, -217, 720, 653, 683, 653, 683, 67, 49, 98,
	98, 96, 25, -236, -238, -146, 18, -304, 4, -303,
	28, -300, 98, 236, 18, -192, 32, -191, -284, -284,
	96, 100, 332, -274, -276, 432, 434, 165, -305, -300,
	98, 34, 97, 96, -191, -326, -329, -331, -330, -332,
	-327, -328, 361, 362, 192, 365, 367, 368, 369, 370,
	371, 372, 373, 374, 375, 378, 390, 35, 276, 357,
	358, 359, 360, 379, 380, 381, 382, 384, 385, 386,
	387, 342, 363, 595, 343, 344, 345, 346, 347, 348,
	350, 351, 354, 352, 353, 355, 356, -301, -300, 95,
	97, 96, -336, 95, -146, -138, 253, -300, 254, 254,
	254, -291, 258, 487, -359, -359, -359, 284, 23, -47,
	-44, -385, 22, -43, -44, 245, 135, 136, 242, 95,
	-348, 95, -357, -301, -300, 95, 151, 259, 150, -356,
	-353, -356, -357, -300, -223, -300, 151, 151, -300, -300,
	-270, -300, -270, -270, 41, -270, 41, -270, 41, 105,
	-300, -270, 41, -270, 41, -270, 41, -270, 41, -270,
	41, 34, 87, 88, 89, 34, 91, 92, 93, -223,
	-300, -300, -223, -348, -223, -191, -300, -277, 105, 105,
	105, -359, -359, 105, 98, 98, 98, -359, -359, 105,
	98, -308, -306, 98, 98, -397, 270, 314, 316, 105,
	105, 105, 105, 34, 98, -398, 34, 734, 733, 735,
	736, 737, 98, 105, 34, 105, 34, 105, -300, 95,
	-191, -144, 304, 240, 242, 245, 85, 98, 322, 320,
	321, 318, 323, 324, 325, 165, 50, 96, 256, 253,
	-300, -290, 258, -290, -300, -307, -306, -298, -191, 256,
	398, 98, -146, -355, 18, 176, -311, -311, -288, -191,
	-355, -311, -288, -191, -288, -288, -288, -288, -311, -311,
	-311, -288, -306, -306, -191, -191, -191, -191, -191, -191,
	-191, -318, -289, -288, 709, 98, -282, 18, 85, -318,
	-318, -297, 26, 26, 96, 338, 435, 436, -316, 335,
	-82, -300, 98, -10, -29, -18, -17, -19, 165, -10,
	96, 597, -184, -191, 709, 709, 709, 709, 709, 709,
	-146, -146, -146, -146, 621, -209, -416, 157, 132, 133,
	130, 131, -163, 42, 43, 41, -146, -210, -216, -221,
	115, 176, 159, 173, -251, -151, -154, -151, -151, -151,
	-151, -151, -151, 235, -151, 235, -151, -151, -151, -151,
	-151, -151, -319, -300, 98, 192, -159, -158, 114, -414,
	-159, 594, 96, -226, 236, -146, -146, -392, -120, 460,
	461, 462, 463, 465, 466, 467, 470, 471, 475, 476,
	459, 477, 464, 469, 472, 473, 474, 468, 360, -146,
	-212, -211, -212, -146, -146, -228, -229, 161, -223, -146,
	-425, -425, 105, 183, -128, 27, 44, -128, -128, -128,
	-128, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -128, -146, -121, 459, 477, 464, 469, 472, 473,
	474, 468, 360, 478, 479, 480, 481, 482, 483, 484,
	485, 486, -121, -120, -146, -146, -146, -146, -146, -146,
	-146, -146, -88, -146, 142, 143, 144, -211, -146, -151,
	-146, -146, -146, -425, -146, -146, -146, -212, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -391, -390, -389, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-211, -211, -211, -211, -211, -146, -425, -146, -165, -149,
	105, -266, 114, 101, -146, -146, -146, -146, -146, -146,
	-212, -302, -307, -298, -299, -211, -212, -212, -211, -211,
	-146, -146, -146, -146, -146, -146, -146, -146, -425, -146,
	-146, -146, -146, -146, -258, -425, -211, 96, -407, 434,
	435, 707, -309, 289, -308, 28, -212, 98, 18, -268,
	86, -300, -240, -240, 69, 70, 65, -132, -133, -137,
	-425, -38, 28, -260, -300, 96, -424, 646, 646, 68,
	98, -338, -277, 388, 389, 192, -146, -146, 96, -239,
	30, 31, -191, -303, 183, -307, -191, -269, 289, -191,
	-169, -171, -172, -173, -194, -222, -424, -174, -31, 617,
	614, 18, -184, -185, -193, -306, -275, -320, -274, 96,
	433, 435, 436, 85, 134, -146, -339, 191, -367, -366,
	-365, -348, -350, -351, -352, 97, -339, -344, 395, 394,
	-336, -336, -336, -336, -336, -338, -338, -338, -338, 95,
	-336, 95, -336, -336, -336, -336, -341, 95, -341, -341,
	-342, -341, 95, -342, -343, 95, -343, -378, -146, -375,
	-374, -372, -373, 263, 110, 689, 645, 597, 638, 679,
	86, -370, -239, 105, -425, -144, -291, -376, -373, -300,
	-300, -300, -306, 157, 100, 98, 100, 98, 100, 98,
	-113, -61, -1, 746, 747, 748, 96, 23, -349, -348,
	-60, 314, -381, -382, 289, -377, -371, -357, 151, -356,
	-357, -357, -300, 96, 32, 139, 139, 139, 139, 597,
	242, 35, -292, 637, 157, 689, 645, -348, -60, 256,
	256, -319, -319, -319, 98, 98, -287, 742, -184, -140,
	306, 165, 295, 295, 253, 308, 253, 308, -191, 319,
	322, 320, 321, 318, 323, 324, 325, 326, 41, 41,
	41, 41, 41, 41, 41, 307, 309, 311, 297, -191,
	-191, -290, 85, -186, -191, 29, -306, 98, 98, -191,
	-288, -288, -191, -288, -288, -191, 98, -306, -420, 339,
	-300, 375, 700, 702, -124, 434, 96, 597, 26, -125,
	26, -424, -416, 132, 133, -221, -221, -221, -210, -151,
	-154, -151, 156, 277, -151, -151, -424, -223, -425, -302,
	28, 96, 86, -425, 181, 96, -425, -425, 96, 18,
	96, -231, -229, 163, -146, -425, 96, -425, -425, -211,
	-146, -146, -146, -146, -425, -425, -425, -425, -425, -425,
	-425, -425, -425, -425, -211, -425, 96, 96, 18, -323,
	28, -425, -425, -425, -425, 96, -425, -425, -230, -425,
	18, -425, 86, 96, 176, 96, -425, -425, -425, 96,
	96, -425, -425, 96, -425, 96, -425, -425, -425, -425,
	-425, -425, 96, -425, 96, -425, -425, -425, 96, -425,
	96, -425, -425, 96, -425, 96, -425, 96, -425, 96,
	-425, 96, -425, 96, -425, 96, -425, 96, -425, 96,
	-425, 96, -425, 96, -425, 96, -425, 96, -425, 96,
	-425, 96, -425, 96, -425, 96, -425, 96, -425, -425,
	-425, 96, -425, 96, -425, 96, -425, -425, 96, -425,
	96, -425, 96, -425, 96, 96, -425, 96, 96, 96,
	-425, 96, 96, 96, 96, -425, -425, -425, -425, 96,
	96, 96, 96, 96, 96, 96, 96, 96, 96, -425,
	-425, -425, -425, -425, -425, 96, -95, 622, -425, -425,
	96, -425, 96, 96, 96, 96, 96, -425, -424, 236,
	-425, -425, -425, -425, -425, 96, 96, 96, 96, 96,
	96, -425, -425, -425, 96, 96, -425, 96, -425, 96,
	-425, -406, 706, 435, -198, -197, -195, 83, 257, 84,
	-424, -308, -425, -159, -266, -267, -266, -204, -300, 105,
	114, -242, -168, 96, -170, 18, -221, 97, 96, -219,
	-425, -338, -246, -252, -285, -300, 98, 192, -340, 192,
	-340, 388, 389, -238, 236, -199, 19, -203, 35, 63,
	-29, -424, -424, 35, 96, -187, -189, -188, -190, 75,
	79, 81, 76, 77, 78, 82, -314, 28, -31, -169,
	-31, -424, -191, -184, -426, 18, 86, -426, 96, 236,
	-276, -279, 437, 434, 440, -392, 98, -112, 96, -365,
	-352, -243, -141, 46, -345, 396, -338, 605, -338, -347,
	98, -347, 105, 105, 105, 97, -50, -45, -46, 36,
	90, -372, -359, 98, 45, -359, -359, -300, 97, -239,
	-140, -191, 85, -376, -376, -376, 29, -2, 745, 751,
	151, 95, 401, 22, -260, 96, 97, -224, 315, 97,
	-114, -300, 97, 95, -357, -357, -300, -424, 253, 34,
	34, 689, 645, 637, -60, -224, -223, -300, -339, 744,
	743, 97, 255, 313, -145, 454, -142, 98, 100, -191,
	-191, -191, -191, -191, -191, 245, 242, 424, -415, 327,
	98, -415, 298, 256, -184, -191, 96, -85, 272, 267,
	-311, -311, 36, -191, 434, 718, 716, -146, 156, 277,
	-163, -154, -120, -120, -151, -321, 192, 361, 276, 359,
	355, 375, 366, 394, 357, 395, 352, 351, 350, -321,
	-319, -151, -211, -146, -146, -146, 164, -146, 162, -146,
	-96, -95, -425, -425, -425, -425, -425, -96, -96, -96,
	-96, -96, -96, -96, -96, -96, -96, -235, -146, -146,
	-146, -425, 192, 361, -96, -146, 18, -146, -319, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -389, -146, -211, -146, -211, -146,
	-146, -146, -146, -146, -390, -390, -390, -390, -390, -211,
	-211, -211, -211, -146, -424, -300, -99, -98, -97, 672,
	257, -95, -165, -99, -165, 235, -146, 235, 235, 235,
	-146, -212, -302, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -195, -353, 295, -353, 295, -353, -270,
	96, -281, 26, 18, 63, 63, -168, -199, -133, -169,
	-300, -249, 699, -255, 52, -253, -254, 53, -250, 54,
	62, -340, -340, 183, -240, -146, -271, 85, -272, -280,
	-223, -215, -218, -216, -424, -259, -425, -300, -270, -272,
	-171, -172, -172, -171, -172, 75, 75, 75, 80, 75,
	80, 75, -188, -306, -425, -146, -309, 86, -169, -169,
	-193, -306, 183, 434, 438, 439, -365, -413, 130, 157,
	34, 85, 392, 110, -411, 191, 634, 684, 689, 645,
	638, 679, -412, 259, 150, 151, 271, 28, 47, 97,
	96, 97, 96, 97, 97, 96, -293, -292, -46, -45,
	-359, -359, 105, -392, 98, 98, 255, -191, 85, 85,
	85, -115, 749, 105, 95, -3, 90, -146, 95, 23,
	-348, -223, -383, -333, -384, -334, -335, -5, -6, -360,
	-118, 63, 110, -64, 50, 254, 729, 730, 139, -424,
	742, -375, -260, -379, -381, -191, -150, -424, -162, -148,
	-147, -149, -155, 181, 182, 276, 357, 358, -224, -191,
	-139, 304, 312, 95, -143, 101, -394, 86, 295, 392,
	295, 392, 98, -417, 328, 98, -417, -191, -85, -50,
	-191, -288, -288, 36, -392, -425, -163, -154, -127, 176,
	597, -324, 604, -336, -336, -336, -343, -336, 347, -336,
	347, -336, -425, -425, -425, 96, -425, 26, -425, 96,
	-146, 96, -96, -96, -96, -96, -96, -123, 493, 96,
	96, -425, 95, 95, -425, -146, -425, -425, -425, 96,
	-425, -425, -425, -425, -425, -425, -425, -425, -425, -425,
	-425, -425, -425, 96, -425, 96, -425, 96, -425, 96,
	-425, 96, -425, 96, -425, 96, -425, 96, -425, 96,
	-425, 96, -425, 96, -425, 96, -425, 96, -425, 96,
	-425, 96, -425, 96, -425, -425, 96, -425, -425, -425,
	96, -425, 96, -425, 96, -425, -425, -425, 96, -322,
	690, -425, -425, -425, -425, -425, -425, -425, -425, -425,
	-425, -425, -94, -301, -95, 654, 654, -425, -95, -232,
	96, -151, -425, -151, -151, -151, -425, -425, -425, 96,
	-425, 96, 96, -425, 96, -425, 96, -425, -425, -425,
	-425, 96, -196, 26, -424, -196, -424, -196, -425, -266,
	-191, -199, -233, 20, -246, 57, 367, -257, -256, 61,
	53, -254, 23, 55, 23, 33, -271, 96, 165, -313,
	96, 28, -425, -425, 96, 63, 236, -425, -199, -182,
	-181, 85, 86, -183, 85, -181, 75, 75, -261, 96,
	-269, -169, -199, -199, 236, 130, -424, -150, 16, 98,
	98, -392, -410, 733, 734, 34, 105, -359, -359, 151,
	151, -191, 95, -338, 98, -338, 105, 105, 34, 91,
	92, 93, 34, 87, 88, 89, -191, -191, -191, -191,
	-380, 95, 23, -146, 95, 165, 97, -260, -260, 291,
	176, -359, 727, 297, 297, -359, -359, -359, -117, -116,
	749, 97, -425, 96, -346, 597, 600, -146, -156, -156,
	-261, 97, -388, 597, -393, -300, -300, -300, -300, 105,
	107, -425, 595, 82, 598, -425, -338, -146, -146, -146,
	-146, -240, 98, -146, -146, 105, 105, -96, -425, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -211,
	-146, -425, -179, -178, -180, 710, 130, 34, -321, -425,
	-213, 289, -102, -101, -100, 18, -425, -146, -120, -120,
	-120, -120, -146, -146, -146, -146, -146, -146, -424, 75,
	22, 20, -263, -300, 259, -424, -263, -424, -309, -233,
	-234, 21, 23, -247, 59, -245, 58, -245, -256, 23,
	23, 98, 23, 98, 151, -280, -146, -218, -308, 63,
	-29, -300, -215, -300, -235, -146, 95, -146, -159, -199,
	-199, -146, -206, 517, 519, 520, 521, 518, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 522, 533,
	494, 495, 496, 117, 119, 118, 127, 128, 497, 498,
	499, 361, 545, 546, 540, 543, 544, 542, 541, 376,
	377, 500, 563, 564, 568, 567, 565, 566, 569, 572,
	573, 574, 575, 576, 577, 579, 578, 570, 571, 548,
	547, 549, 550, 551, 552, 553, 554, 556, 555, 557,
	558, 559, 560, 561, 562, 580, 581, 582, 583, 584,
	586, 585, 590, 589, 587, 588, 592, 591, 501, 502,
	120, 121, 122, 123, 124, 125, 126, 503, 506, 504,
	507, 508, 509, 514, 515, 510, 511, 512, 513, 516,
	387, 385, 386, 382, 381, 380, 441, 446, 447, 449,
	534, 535, 536, 537, 538, 539, 691, 692, 693, 694,
	695, 696, 697, 698, 98, 98, 95, -146, 97, 97,
	-261, -379, -61, 97, -262, -260, 105, 97, 292, -216,
	-424, 98, -359, -359, -359, 105, 105, -308, -425, 96,
	-300, -412, -381, 601, 601, -425, 28, -387, -386, -302,
	95, 86, 68, 596, 599, -425, -425, -425, 96, -425,
	-425, -425, 97, 97, -425, -425, -425, -425, -425, -425,
	-425, -425, -425, -425, -425, -425, -425, -425, -425, -425,
	-425, -425, -425, -425, -425, -425, 96, -425, -178, -180,
	-425, 85, -159, -235, 23, -99, 314, 316, -99, -425,
	-425, -425, -425, -425, 96, -425, -425, 96, -425, 96,
	-425, -425, -263, -425, 23, 23, 96, -425, -263, -425,
	-263, -198, -234, -109, -108, -107, 628, -146, -211, -248,
	60, 85, 134, 98, 98, 98, 16, -424, -215, 236,
	-313, -240, -260, -176, 401, -235, -425, -260, 97, 28,
	97, 751, 151, 97, -216, -126, -424, 288, -308, 98,
	98, -116, -119, -29, 96, 165, -260, -191, 68, -146,
	-211, -425, 85, 609, 710, -93, -92, -89, 721, 747,
	-211, -95, -95, -146, -146, -146, -425, -300, 259, -425,
	-425, -109, 96, -106, -105, -300, -325, 597, 85, 134,
	-272, -260, -313, -300, 97, -425, -424, -240, 97, -244,
	-29, 95, -3, 288, -333, -384, -334, -335, -5, -6,
	-360, -83, 597, -386, -364, -306, -302, 98, 105, 97,
	597, -425, -425, -91, 159, 719, 687, -156, 235, -425,
	96, -425, 96, -425, 96, -107, 96, 28, 602, -425,
	-309, -177, -175, -300, 651, -403, -402, 593, -413, -409,
	130, 157, 110, -411, 689, 645, 140, 141, -83, -146,
	95, -425, -84, 303, 706, 236, -394, 598, -91, 720,
	665, 640, 665, 640, -151, -146, -146, -146, -105, -424,
	-425, 96, 26, -326, -63, 662, -400, -401, 85, -404,
	407, 661, 682, 130, 98, 97, -260, 264, -307, -388,
	599, 156, -120, -425, 96, -425, 96, -425, -94, -175,
	658, -339, -159, -401, 85, -400, 85, 17, 16, -4,
	750, 97, 305, -91, 665, 640, -146, -146, -425, -62,
	29, -176, -399, 272, 267, 270, 35, -399, 105, -4,
	-425, -425, 662, 266, 34, 130, -159, -179, -178, -178,
}

var yyDef = [...]int{
	892, -2, -2, 894, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	39, 70, 72, 73, 892, 892, 892, 0, 892, 0,
	0, 892, -2, -2, 892, 1653, 0, 892, 0, 887,
	0, -2, 807, 813, 0, 822, -2, 0, 0, 892,
	892, 2294, 2294, 887, 0, 0, 0, 0, 0, 892,
	892, 892, 892, 1658, 1505, 50, 892, 0, 88, 89,
	842, 843, 844, 65, 0, 2292, 85, 892, 893, 1,
	3, 71, 75, 0, 0, 0, 58, 1514, 0, 78,
	0, 0, 896, 0, 0, 1636, 892, 892, 0, 129,
	130, 0, 0, 0, -2, 133, -2, 162, 163, 164,
	0, 169, 612, 529, 581, 527, 566, -2, 515, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 532, 404, 404, 0, 0, -2, 515, 515, 515,
	1638, 0, 0, 0, 563, 466, 404, 404, 404, 0,
	404, 404, 404, 404, 0, 0, 404, 404, 404, 404,
	404, 404, 404, 404, 404, 404, 404, 404, 404, 404,
	404, 404, 404, 1532, 168, 1654, 1651, 1652, 1814, 1815,
	1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825,
	1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835,
	1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845,
	1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855,
	1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865,
	1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875,
	1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885,
	1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895,
	1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905,
	1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915,
	1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925,
	1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935,
	1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945,
	1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955,
	1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965,
	1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975,
	1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985,
	1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995,
	1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,
	2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015,
	2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025,
	2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035,
	2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045,
	2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055,
	2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065,
	2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075,
	2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085,
	2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095,
	2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105,
	2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115,
	2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125,
	2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135,
	2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145,
	2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155,
	2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165,
	2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175,
	2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185,
	2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195,
	2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205,
	2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215,
	2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225,
	2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235,
	2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245,
	2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255,
	2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265,
	2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275,
	2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285,
	2286, 2287, 2288, 2289, 2290, 2291, 0, 1630, 0, 725,
	996, 0, 888, 889, 0, 796, 796, 0, 796, 796,
	796, 796, 0, 0, 0, 739, 0, 0, 0, 0,
	793, 0, 755, 756, 0, 793, 0, 762, 799, 0,
	0, 769, 796, 796, 772, 2295, 0, 2295, 2295, 0,
	0, 1621, 0, 790, 788, 802, 803, 42, 806, 809,
	810, 811, 812, 815, 0, 826, 829, 1647, 1648, 0,
	831, 836, 855, 856, 0, 45, 1156, 0, 1020, 0,
	1031, -2, 1042, 1059, 1060, 1061, 1062, 1063, 1065, 1066,
	1067, 0, 0, 0, 0, 1072, 1073, 0, 0, 0,
	0, 0, 1136, 0, 0, 0, 0, 2017, 1476, 0,
	0, 1438, 1438, 1172, 1438, 1438, 1440, 1440, 1440, 1867,
	2009, 2018, 2197, 1828, 1834, 1835, 1836, 2143, 2144, 2145,
	2146, 2238, 2239, 2243, 1931, 1823, 2210, 2211, 0, 2291,
	1970, 1978, 1979, 1955, 1964, 2003, 2105, 2222, 1846, 1998,
	2068, 1928, 1950, 1951, 2086, 2087, 1974, 1975, 1954, 2149,
	2151, 2167, 2168, 2153, 2155, 2164, 2170, 2175, 2154, 2166,
	2171, 2184, 2188, 2191, 2192, 2193, 2161, 2159, 2172, 2176,
	2178, 2180, 2186, 2189, 2162, 2160, 2173, 2177, 2179, 2181,
	2187, 2190, 2148, 2152, 2156, 2165, 2183, 2163, 2182, 2157,
	2169, 2174, 2185, 2158, 2150, 1968, 1971, 1958, 1959, 1961,
	1963, 1969, 1976, 1982, 1960, 1981, 1980, 0, 1956, 1957,
	1962, 1973, 1977, 1965, 1966, 1967, 1972, 1983, 2024, 2023,
	2022, 2067, 1994, 2066, 0, 0, 0, 0, 0, 1817,
	1873, 1874, 2194, 1360, 1361, 1362, 1363, 0, 0, 0,
	0, 0, 0, 0, 293, 294, 1489, 1490, 44, 1155,
	1617, 1440, 1440, 1440, 1440, 1440, 1440, 1094, 1095, 1096,
	1097, 1098, 1124, 1125, 1131, 1132, 2081, 2082, 2083, 2084,
	1911, 2233, 1920, 1921, 2063, 2064, 1933, 1934, 2265, 2266,
	-2, -2, -2, 235, 236, 237, 238, 239, 240, 241,
	242, 0, 1872, 2208, 2209, 231, 0, 1615, 1616, 298,
	295, 296, 297, 1138, 1139, 251, 252, 253, 254, 255,
	256, 257, 258, 259, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 271, 272, 273, 274, 275,
	276, 277, 278, 279, 280, 281, 282, 283, 284, 285,
	286, 287, 288, 289, 290, 291, 292, 0, 300, 301,
	2294, 0, 865, 0, 0, 0, 0, 0, 0, 1659,
	1660, 1514, 0, 1506, 1505, 63, 0, 892, -2, 0,
	0, 0, 0, 47, 0, 52, 953, 0, 895, 77,
	76, 1554, 1557, 0, 0, 0, 59, 1515, 67, 69,
	1516, 0, 897, 898, 0, 929, 933, 0, 0, 0,
	1637, 1636, 1636, 105, 0, 0, 106, 126, 127, 128,
	0, 0, 112, 113, 1623, 1624, 43, 0, 0, 180,
	181, 0, 1112, 431, 0, 176, 0, 424, 363, 0,
	1532, 0, 0, 0, 0, 0, 1634, 0, 1631, 157,
	158, 165, 166, 167, 404, 404, 404, 578, 0, 0,
	168, 168, 536, 537, 538, 0, 0, -2, 429, 0,
	516, 0, 0, 418, 418, 422, 420, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 555, 0, 556, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 673, 0,
	405, 0, 576, 577, 467, 0, 0, 0, 0, 0,
	0, 0, 0, 1639, 1640, 0, 553, 554, 0, 0,
	0, 404, 404, 0, 0, 0, 0, 404, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 156, 1545, 0,
	0, 0, -2, 0, 717, 0, 0, 0, 1632, 1632,
	0, 724, 0, 0, 0, 729, 0, 0, 730, 0,
	793, 793, 791, 792, 732, 733, 734, 735, 796, 0,
	0, 413, 414, 415, 793, 796, 0, 796, 796, 796,
	796, 793, 793, 793, 796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2295, 799, 796, 0, 763, 0,
	764, 765, 766, 767, 770, 771, 773, 2296, 2297, 1649,
	1650, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669,
	1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679,
	1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689,
	1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699,
	1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709,
	1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719,
	1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729,
	1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739,
	1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749,
	1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759,
	1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769,
	1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779,
	1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789,
	1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799,
	1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809,
	1810, 1811, 1812, 1813, 2295, 2295, 777, 781, 785, 783,
	1622, 808, 814, 816, 817, 0, 0, 827, 830, 849,
	49, 1919, 835, 49, 837, 838, 839, 840, 841, 867,
	868, 873, 0, 0, 0, 0, 879, 880, 881, 0,
	0, 884, 885, 886, 0, 0, 0, 0, 0, 1018,
	0, 0, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1043, 1044,
	0, 0, 0, 1068, 1069, 1070, 1071, 1074, 0, 1085,
	0, 1087, 1485, -2, 0, 0, 0, 1079, 1080, 0,
	0, 0, 1642, 1642, 0, 0, 0, 1477, 0, 0,
	1170, 0, 1171, 1173, 1174, 1175, 0, 1176, 1177, 902,
	902, 902, 902, 902, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 902, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 144, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1642, 0, 0, 1642, 1642, 0, 0,
	223, 224, 225, 226, 227, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	299, 243, 244, 245, 246, 247, 302, 248, 249, 250,
	1155, 0, 0, 892, 0, 46, 857, 858, 0, 979,
	1642, 0, 0, 908, 0, 1657, 57, 66, 68, 1514,
	61, 1514, 0, 912, 0, 0, -2, -2, 913, 914,
	918, 919, 920, 921, 922, 923, 924, 925, 926, 54,
	2293, 55, 0, 74, 0, 48, 0, 0, 79, 80,
	1605, 1609, 0, 1555, 0, 1558, 0, 0, 0, 377,
	1562, 0, 0, 1507, 1508, 1511, 0, 930, 2015, 934,
	0, 936, 937, 0, 0, 103, 0, 995, 0, 0,
	0, 114, 0, 116, 117, 0, 0, 0, 388, 1625,
	1626, 1627, -2, 411, 0, 388, 372, 310, 311, 312,
	363, 314, 363, 363, 363, 363, 377, 377, 377, 377,
	345, 346, 347, 348, 349, 0, 363, 0, 331, 363,
	363, 363, 363, 353, 354, 355, 356, 357, 358, 359,
	360, 315, 316, 317, 318, 319, 320, 321, 322, 323,
	365, 365, 365, 365, 365, 369, 369, 0, 1113, 0,
	392, 0, 1511, 0, 0, 1545, 1634, 1644, 0, 0,
	0, 0, 0, 135, 0, 0, 0, 579, 623, 530,
	567, 580, 0, 533, 534, -2, 0, 0, 515, 0,
	517, 0, 412, 0, -2, 0, 422, 0, 418, 422,
	419, 422, 410, 423, 557, 558, 559, 0, 561, 562,
	653, 965, 0, 0, 0, 0, 0, 659, 660, 661,
	0, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 568, 569, 570, 571, 572, 573, 574, 575, 0,
	0, 0, 0, 517, 0, 564, 0, 0, 468, 469,
	470, 0, 0, 473, 474, 475, 476, 0, 0, 479,
	480, 481, 982, 983, 482, 483, 508, 509, 510, 484,
	485, 486, 487, 488, 489, 490, 502, 503, 504, 505,
	506, 507, 491, 492, 493, 494, 495, 496, 499, 0,
	150, 1536, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1632,
	0, 0, 0, 0, 911, 997, 1655, 1656, 726, 0,
	0, 797, 798, 0, 416, 417, 796, 796, 736, 778,
	0, 796, 740, 779, 741, 743, 742, 744, 757, 758,
	796, 747, 794, 795, 748, 749, 750, 751, 752, 753,
	754, 774, 759, 760, 761, 800, 0, 804, 805, 775,
	776, 0, 786, 0, 0, 0, 820, 821, 0, 828,
	852, 850, 851, 853, 845, 846, 847, 848, 0, 854,
	0, 0, 870, 99, 875, 876, 877, 878, 890, 883,
	1157, 1015, 1016, 1017, 0, 1019, 1025, 0, 1140, 1142,
	1023, 1024, 1027, 0, 0, 0, 1021, 1032, 1152, 1153,
	1154, 0, 0, 0, 0, 0, 1036, 1040, 1045, 1046,
	1047, 1048, 1049, 0, 1050, 0, 1053, 1054, 1055, 1056,
	1057, 1058, 1064, 1453, 1454, 1455, 1083, 303, 304, 0,
	1084, 0, 0, 0, 0, 0, 0, 0, 0, 1400,
	1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410,
	1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1156,
	0, 1643, 0, 0, 0, 1483, 1480, 0, 0, 0,
	1439, 1441, 0, 0, 0, 903, 904, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1420, 1421, 1422, 1423, 1424, 1425,
	1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435,
	1436, 1437, 0, 0, 1456, 0, 0, 0, 0, 0,
	0, 0, 1476, 0, 1089, 1090, 1091, 0, 0, 0,
	0, 0, 0, 1218, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 145, 146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1364,
	1365, 1366, 1367, 41, 0, 0, 0, 0, 0, 0,
	0, 1487, 0, -2, -2, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1389, 0,
	0, 0, 0, 0, 0, 1613, 0, 0, 860, 861,
	863, 0, 999, 0, 980, 0, 0, 866, 0, 907,
	0, 910, 60, 62, 916, 917, 0, 938, 927, 915,
	56, 51, 0, 0, 957, 0, 0, 1556, 1559, 1560,
	377, 1582, 0, 386, 386, 383, 1517, 1518, 0, 1510,
	1512, 1513, 81, 935, 931, 0, 1013, 0, 0, 994,
	0, 941, 943, 944, 945, 977, 0, 948, 949, 0,
	0, 0, 0, 0, 101, 996, 107, 0, 115, 0,
	0, 120, 121, 108, 109, 110, 111, 0, 612, -2,
	463, 182, 184, 185, 186, 177, -2, 375, 373, 374,
	313, 377, 377, 339, 340, 341, 342, 343, 344, 0,
	351, 0, 332, 333, 334, 335, 324, 0, 325, 326,
	327, 367, 0, 328, 329, 0, 330, 430, 0, 1519,
	393, 394, 396, 404, 0, 399, 400, 0, 404, 404,
	0, 425, 426, 0, 1511, 1536, 0, 0, 1645, 1644,
	1644, 1644, 155, 0, 170, 171, 172, 173, 174, 175,
	648, 0, 0, 624, 646, 647, 168, 0, 0, 178,
	519, 518, 0, 680, 0, 428, 0, 0, 422, 422,
	407, 408, 560, 0, 0, 655, 656, 657, 658, 0,
	0, 0, 546, 457, 0, 547, 548, 517, 519, 0,
	0, 388, 471, 472, 477, 478, 497, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 595,
	596, 598, 601, 603, 521, 607, 609, 0, 597, 600,
	602, 604, 521, 608, 610, 1533, 1534, 1535, 0, 0,
	718, 0, 0, 454, 97, 1633, 723, 727, 728, 793,
	746, 780, 793, 738, 745, 768, 782, 784, 818, 819,
	824, 832, 833, 834, 874, 0, 0, 0, 0, 882,
	0, 0, 1026, 1141, 1143, 1028, 1029, 1030, 1033, 0,
	1037, 1041, 0, 0, 0, 0, 0, 1088, 1086, 1487,
	0, 0, 0, 1137, 0, 0, 1160, 1161, 0, 0,
	0, 0, 1481, 0, 0, 1168, 0, 1442, 1118, 0,
	0, 0, 0, 0, 1118, 1118, 1118, 1118, 1118, 1118,
	1118, 1118, 1118, 1118, 1505, 1195, 0, 0, 0, 0,
	0, 1200, 1201, 1202, 1118, 0, 1205, 1206, 0, 1208,
	0, 1209, 0, 0, 0, 0, 1216, 1217, 1219, 0,
	0, 1222, 1223, 0, 1225, 0, 1227, 1228, 1229, 1230,
	1231, 1232, 0, 1234, 0, 1236, 1237, 1238, 0, 1240,
	0, 1242, 1243, 0, 1245, 0, 1247, 0, 1250, 0,
	1253, 0, 1256, 0, 1259, 0, 1262, 0, 1265, 0,
	1268, 0, 1271, 0, 1274, 0, 1277, 0, 1280, 0,
	1283, 0, 1286, 0, 1289, 0, 1292, 0, 1295, 1296,
	1297, 0, 1299, 0, 1301, 0, 1304, 1305, 0, 1307,
	0, 1310, 0, 1313, 0, 0, 1314, 0, 0, 0,
	1318, 0, 0, 0, 0, 1327, 1328, 1329, 1330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1341,
	1342, 1343, 1344, 1345, 1346, 0, 1348, 0, 1119, 0,
	0, 1119, 0, 0, 0, 0, 0, 1158, 1642, 0,
	1443, 1444, 1445, 1446, 1447, 0, 0, 0, 0, 0,
	0, 1387, 1388, 1390, 0, 0, 1393, 0, 1395, 0,
	1614, 859, 862, 864, 951, 1000, 1001, 0, 0, 0,
	0, 981, 1641, 905, 906, 909, 959, 0, 1491, 0,
	0, 938, 1013, 0, 939, 0, 53, 954, 0, 1606,
	1610, 1564, 1563, 1576, 1589, 386, 386, 380, 381, 387,
	382, 384, 385, 1509, 0, 1514, 0, 1603, 0, 892,
	1592, 0, 0, 0, 0, 0, 0, 0, 0, 984,
	0, 0, 987, 0, 0, 0, 0, 978, 949, 0,
	950, 0, -2, 0, 0, 95, 96, 0, 0, 0,
	118, 119, 0, 0, 125, 389, 390, 159, 168, 465,
	183, 438, 0, 0, 309, 376, 336, 337, 338, 0,
	361, 0, 0, 0, 0, 459, 131, 1523, 1522, 404,
	404, 395, 0, 398, 0, 0, 0, 1646, 364, 427,
	0, 149, 0, 0, 0, 0, 1635, 618, 0, 0,
	625, 0, 0, 0, 528, 0, 539, 540, 0, 652,
	-2, 714, 392, 0, 406, 409, 966, 0, 0, 541,
	0, 544, 545, 458, 519, 550, 551, 565, 552, 500,
	501, 498, 0, 0, 1546, 1547, 1552, 1550, 1551, 136,
	586, 588, 592, 587, 591, 0, 0, 0, 523, 0,
	611, 523, 584, 0, 454, 1519, 0, 722, 455, 456,
	796, 796, 869, 100, 0, 872, 0, 0, 0, 0,
	1034, 1038, 1051, 1052, 1448, 1474, 363, 363, 1461, 363,
	369, 1464, 363, 1466, 363, 1469, 363, 1472, 1473, 0,
	0, 1081, 0, 0, 0, 0, 1167, 1484, 0, 0,
	1178, 1117, 1118, 1118, 1118, 1118, 1118, 1184, 1185, 1186,
	1187, 1188, 1189, 1190, 1191, 1192, 1193, 1478, 0, 0,
	0, 1199, 0, 0, 1203, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 147, 148, 0, 0, 0, 0,
	0, 0, 1398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1112, 1116, 0, 1120, 1121, 0,
	0, 1350, 0, 0, 1368, 0, 0, 0, 0, 0,
	0, 0, 1488, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1002, 1009, 0, 1009, 0, 1009, 0,
	0, 0, 1628, 1629, 1492, 1493, 1013, 1494, 928, 940,
	958, 1582, 0, 1575, 0, -2, 1584, 0, 0, 0,
	1590, 378, 379, 932, 82, 1014, 86, 0, 1603, 1618,
	0, 1600, 1607, 1611, 0, 0, 0, 1596, 0, 1013,
	942, 973, 975, 0, 970, 985, 986, 988, 0, 990,
	0, 992, 993, 953, 947, 0, 103, 0, 1013, 1013,
	102, 0, 998, 122, 123, 124, 464, 187, 192, 0,
	0, 0, 197, 0, 199, 0, 0, 0, 204, 205,
	404, 404, 439, 0, 306, 308, 0, 0, 190, 377,
	0, 377, 0, 368, 370, 0, 440, 460, 1520, 1521,
	0, 0, 397, 401, 402, 403, 0, 151, 0, 0,
	0, 621, 0, 649, 0, 0, 0, 0, 0, 0,
	179, 520, 681, 682, 683, 684, 685, 686, 687, 688,
	689, 0, 404, 0, 0, 0, 404, 404, 404, 0,
	706, 391, 0, 0, 677, 674, 542, 0, 221, 222,
	229, 230, 232, 0, 0, 0, 0, 0, 549, 953,
	1537, 1538, 1539, 0, 1549, 1553, 139, 0, 0, 0,
	0, 594, 599, 605, 0, 522, 606, 719, 720, 721,
	98, 731, 737, 871, 891, 1022, 1035, 1039, 0, 0,
	0, 0, 1475, 1459, 377, 1462, 1463, 1465, 1467, 1468,
	1470, 1471, 1077, 1078, 1082, 0, 1164, 0, 1166, 0,
	1482, 0, 1179, 1180, 1181, 1182, 1183, 1514, 0, 0,
	0, 1198, 0, 0, 1118, 0, 1211, 1210, 1212, 0,
	1214, 1215, 1220, 1221, 1224, 1226, 1233, 1235, 1239, 1241,
	1244, 1246, 1248, 0, 1251, 0, 1254, 0, 1257, 0,
	1260, 0, 1263, 0, 1266, 0, 1269, 0, 1272, 0,
	1275, 0, 1278, 0, 1281, 0, 1284, 0, 1287, 0,
	1290, 0, 1293, 0, 1298, 1300, 0, 1303, 1306, 1308,
	0, 1311, 0, 1315, 0, 1317, 1319, 1320, 0, 0,
	0, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339,
	1340, 1347, 0, 1110, 1349, 1122, 1123, 1128, 1352, 0,
	0, 0, 1355, 0, 0, 0, 1359, 1159, 1370, 0,
	1375, 0, 0, 1381, 0, 1385, 0, 1391, 1392, 1394,
	1396, 0, 0, 0, 0, 0, 0, 0, 979, 960,
	64, 1494, 1498, 0, 1569, 1567, 1567, 1577, 1578, 0,
	0, 1585, 0, 0, 0, 0, 87, 0, 0, 1591,
	0, 0, 1612, 0, 0, 0, 0, 104, 1505, 967,
	974, 0, 0, 968, 0, 969, 989, 991, 946, 0,
	1013, 1013, 93, 94, 0, 193, 0, 195, 0, 198,
	200, 201, 202, 208, 209, 210, 203, 0, 0, 305,
	307, 0, 0, 350, 362, 352, 0, 0, 1524, 1525,
	1526, 1527, 1528, 1529, 1530, 1531, 953, 152, 153, 154,
	613, 0, 623, 0, 955, 0, 616, 0, 531, 0,
	0, 0, 404, 404, 404, 0, 0, 0, 0, 691,
	0, 0, 654, 0, 662, 0, 0, 0, 233, 234,
	0, 1548, 585, 0, 137, 138, 0, 0, 590, 524,
	525, 1075, 0, 0, 0, 1076, 1460, 0, 0, 0,
	0, 0, 1479, 0, 0, 0, 0, 1204, 1207, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1323, 0, 0, 0, 643, 644, 0, 1399, 1115,
	1505, 0, 1119, 1129, 1130, 0, 1119, 1369, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1010,
	0, 0, 0, 961, 962, 0, 0, 0, 999, 1498,
	1503, 0, 0, 1572, 0, 1565, 1568, 1566, 1579, 0,
	0, 1586, 0, 1588, 0, 1619, 1620, 1608, 1601, 892,
	1595, 1598, 1600, 1597, 1514, 971, 0, 976, 0, 1505,
	92, 0, 196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 207, 0, 0, 366, 371,
	0, 0, 0, 614, 0, 956, 626, 617, 0, 704,
	0, 708, 0, 0, 0, 711, 712, 713, 690, 0,
	694, 432, 678, 675, 676, 543, 0, 140, 141, 0,
	0, 0, 1449, 0, 1452, 1162, 1165, 1163, 0, 1194,
	1196, 1197, 1457, 1458, 1213, 1249, 1252, 1255, 1258, 1261,
	1264, 1267, 1270, 1273, 1276, 1279, 1282, 1285, 1288, 1291,
	1294, 1302, 1309, 1312, 1316, 1321, 0, 1324, 0, 0,
	1325, 0, 645, 1106, 0, 0, 1126, 1127, 0, 1354,
	1356, 1357, 1358, 1371, 0, 1376, 1377, 0, 1382, 0,
	1386, 1397, 0, 1004, 1011, 1012, 0, 1007, 0, 1008,
	0, 952, 1503, 84, 1504, 1501, 0, 1499, 1496, 1561,
	0, 1570, 1571, 1580, 1581, 1587, 0, 0, 1600, 0,
	1594, 90, 0, 0, 0, 1514, 194, 0, 213, 0,
	622, 0, 625, 615, 702, 703, 0, 715, 707, 709,
	710, 692, -2, 1540, 0, 0, 0, 593, 1450, 0,
	0, 1326, 0, 641, 642, 1114, 1107, 0, 1092, 1093,
	1111, 1351, 1353, 0, 0, 0, 1003, 963, 964, 1005,
	1006, 83, 0, 1500, 1134, 0, 1495, 0, 1573, 1574,
	1604, 0, 1593, 1599, 972, 979, 0, 91, 445, 438,
	1540, 0, 0, 0, 695, 696, 697, 698, 699, 700,
	701, 582, 1542, 142, 143, 0, 512, 513, 514, 136,
	0, 1169, 1322, 1108, 0, 0, 0, 0, 0, 1372,
	0, 1378, 0, 1383, 0, 1502, 0, 0, 1497, 1602,
	627, 0, 629, 0, -2, 433, 446, 0, 188, 214,
	215, 0, 0, 218, 219, 220, 211, 212, 132, 0,
	0, 716, 0, 1543, 1544, 0, 139, 0, 0, 1099,
	1100, 1101, 1102, 1104, 0, 0, 0, 0, 1135, 1112,
	628, 0, 0, 388, 0, 638, 434, 435, 0, 441,
	442, 443, 444, 216, 217, 650, 0, 0, 511, 589,
	1451, 0, 0, 1373, 0, 1379, 0, 1384, 0, 630,
	631, 639, 0, 436, 0, 437, 0, 0, 0, 619,
	0, 650, 1541, 1109, 1103, 1105, 0, 0, 1133, 0,
	640, 636, 447, 449, 450, 0, 0, 448, 651, 620,
	1374, 1380, 0, 451, 452, 453, 632, 633, 634, 635,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 158, 3, 3, 3, 186, 178, 3,
	95, 97, 183, 181, 96, 182, 236, 184, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 752,
	166, 165, 167, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 188, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 154, 3, 189,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 155,
	156, 157, 159, 160, 161, 162, 163, 164, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 179, 180,
	185, 187, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 58022, 697, 58023, 698, 58024, 699,
	58025, 700, 58026, 701, 58027, 702, 58028, 703, 58029, 704,
	58030, 705, 58031, 706, 58032, 707, 58033, 708, 58034, 709,
	58035, 710, 58036, 711, 58037, 712, 58038, 713, 58039, 714,
	58040, 715, 58041, 716, 58042, 717, 58043, 718, 58044, 719,
	58045, 720, 58046, 721, 58047, 722, 58048, 723, 58049, 724,
	58050, 725, 58051, 726, 58052, 727, 58053, 728, 58054, 729,
	58055, 730, 58056, 731, 58057, 732, 58058, 733, 58059, 734,
	58060, 735, 58061, 736, 58062, 737, 58063, 738, 58064, 739,
	58065, 740, 58066, 741, 58067, 742, 58068, 743, 58069, 744,
	58070, 745, 58071, 746, 58072, 747, 58073, 748, 58074, 749,
	58075, 750, 58076, 751, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:632
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:645
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:646
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:650
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:689
		{
			setParseTree(yylex, nil)
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:695
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:701
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:707
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:711
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:717
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:723
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:729
		{
			yyLOCAL = &With{CTEs: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:733
		{
			yyLOCAL = &With{CTEs: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:738
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:742
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:748
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:752
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:758
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion().Select}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:764
		{
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:768
		{
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:772
		{
			setLockIfPossible(yylex, yyDollar[2].tableStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:795
		{
			yyDollar[1].tableStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].tableStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:801
		{
			yyDollar[1].tableStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:806
		{
			yyDollar[1].tableStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].tableStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:812
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].tableStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].tableStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:819
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].tableStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:825
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].tableStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].tableStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:832
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 64:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:836
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:842
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:846
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:850
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:854
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:858
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:864
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:868
		{
			setLockIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:873
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:877
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:883
		{
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:887
		{
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:892
		{
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].selectIntoUnion())
			setLockIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:898
		{
			setLockIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].lockUnion())
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[3].selectIntoUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:904
		{
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:911
		{
			yyLOCAL = &ValuesStatement{Comments: Comments(yyDollar[2].strs).Parsed(), ListArg: ListArg(yyDollar[3].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:915
		{
			yyLOCAL = &ValuesStatement{Comments: Comments(yyDollar[2].strs).Parsed(), Rows: yyDollar[3].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:921
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:927
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:935
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), yyDollar[8].groupByUnion(), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:939
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), yyDollar[7].groupByUnion(), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:943
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:949
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = getAliasedTableExprFromTableName(yyDollar[4].tableName)
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:961
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: getAliasedTableExprFromTableName(yyDollar[4].tableName), Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:973
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:977
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:983
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:989
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:993
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:997
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1001
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1006
		{
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1007
		{
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1011
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1015
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1021
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1025
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1031
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1035
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 103:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1040
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1044
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1050
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1056
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1060
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1066
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1070
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1074
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1078
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1084
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1088
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1092
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1098
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1102
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1108
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1112
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1118
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1122
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1126
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1132
		{
			yyVAL.str = RepeatableReadStr
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1136
		{
			yyVAL.str = ReadCommittedStr
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1140
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1144
		{
			yyVAL.str = SerializableStr
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1150
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1154
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1158
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1164
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1170
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1177
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1186
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].tableStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1190
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1197
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1201
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1206
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1210
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1216
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1221
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1226
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1232
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1237
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1243
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 144:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1248
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1252
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1258
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1262
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1268
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 149:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1274
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1281
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1288
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1293
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeFullText}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1298
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeSpatial}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1303
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeUnique}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1310
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfNotExists: yyDollar[4].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1317
		{
			yyLOCAL = &AlterDatabase{Comments: Comments(yyDollar[2].strs).Parsed()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1328
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1335
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1339
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1345
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1349
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1353
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1357
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1361
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1365
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 168:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1371
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1375
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1381
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1385
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1391
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1395
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1401
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1405
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1411
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1415
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1421
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1425
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1431
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1436
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1441
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1445
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1450
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1454
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1458
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 187:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1469
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1478
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1487
		{
			yyVAL.str = ""
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1491
		{
			yyVAL.str = ""
		}
	case 191:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1500
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1504
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1509
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1514
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1519
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyDollar[1].columnTypeOptionsUnion().DefaultLiteral = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1525
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1530
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1535
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1540
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1545
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1549
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1554
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1558
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1563
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1568
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1573
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 207:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1577
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1583
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1587
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1591
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1597
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1601
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1606
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1610
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1615
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1620
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1625
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1630
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1635
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1640
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1647
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1654
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1658
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1662
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1666
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1670
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1674
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("sysdate"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1684
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1691
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1695
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1701
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1705
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1709
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1713
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1717
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1721
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1725
		{
			yyLOCAL = NewBitLiteral("0b" + yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1729
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1733
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral("0b" + yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1737
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1741
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1745
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1749
		{
			arg := parseBindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: arg}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1754
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1758
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1762
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1768
		{
			yyVAL.str = Armscii8Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1772
		{
			yyVAL.str = ASCIIStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1776
		{
			yyVAL.str = Big5Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1780
		{
			yyVAL.str = UBinaryStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1784
		{
			yyVAL.str = Cp1250Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1788
		{
			yyVAL.str = Cp1251Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1792
		{
			yyVAL.str = Cp1256Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1796
		{
			yyVAL.str = Cp1257Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1800
		{
			yyVAL.str = Cp850Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1804
		{
			yyVAL.str = Cp852Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1808
		{
			yyVAL.str = Cp866Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1812
		{
			yyVAL.str = Cp932Str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1816
		{
			yyVAL.str = Dec8Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1820
		{
			yyVAL.str = EucjpmsStr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1824
		{
			yyVAL.str = EuckrStr
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1828
		{
			yyVAL.str = Gb18030Str
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1832
		{
			yyVAL.str = Gb2312Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1836
		{
			yyVAL.str = GbkStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1840
		{
			yyVAL.str = Geostd8Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1844
		{
			yyVAL.str = GreekStr
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1848
		{
			yyVAL.str = HebrewStr
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1852
		{
			yyVAL.str = Hp8Str
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1856
		{
			yyVAL.str = Keybcs2Str
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1860
		{
			yyVAL.str = Koi8rStr
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1864
		{
			yyVAL.str = Koi8uStr
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1868
		{
			yyVAL.str = Latin1Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1872
		{
			yyVAL.str = Latin2Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1876
		{
			yyVAL.str = Latin5Str
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1880
		{
			yyVAL.str = Latin7Str
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1884
		{
			yyVAL.str = MacceStr
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1888
		{
			yyVAL.str = MacromanStr
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1892
		{
			yyVAL.str = SjisStr
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1896
		{
			yyVAL.str = Swe7Str
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1900
		{
			yyVAL.str = Tis620Str
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1904
		{
			yyVAL.str = Ucs2Str
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1908
		{
			yyVAL.str = UjisStr
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1912
		{
			yyVAL.str = Utf16Str
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1916
		{
			yyVAL.str = Utf16leStr
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1920
		{
			yyVAL.str = Utf32Str
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1924
		{
			yyVAL.str = Utf8mb3Str
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1928
		{
			yyVAL.str = Utf8mb4Str
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1932
		{
			yyVAL.str = Utf8mb3Str
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1942
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1946
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1950
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1956
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1960
		{
			yyLOCAL = AppendString(yyDollar[1].exprUnion(), yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1966
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1970
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1974
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1980
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1984
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1990
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1994
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1998
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2002
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2008
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2019
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].intPtrUnion()
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2024
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2030
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2034
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2038
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2042
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2046
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2050
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2054
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2058
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2062
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2068
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2074
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2080
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2086
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2092
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2098
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2104
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2112
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2116
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2120
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2124
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2128
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2134
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2138
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].intPtrUnion()}
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2144
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2148
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2152
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2156
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2160
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2164
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2168
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2172
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2176
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2180
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2184
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2188
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 350:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2192
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2196
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 352:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2201
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2207
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2211
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2215
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2219
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2223
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2227
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2231
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2235
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2241
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2246
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 363:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *int
//line sql.y:2251
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *int
//line sql.y:2255
		{
			yyLOCAL = ptr.Of(convertStringToInt(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2260
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 366:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2264
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2273
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2277
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2284
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2288
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2294
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2302
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2306
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2310
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2315
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2319
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2324
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2328
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2332
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2336
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2340
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2345
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2350
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2355
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2360
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2366
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2370
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2375
		{
			yyVAL.str = ""
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2379
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2383
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 391:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2389
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2394
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2398
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2404
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2408
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2414
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2418
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2423
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2427
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2431
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2435
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2439
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2443
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2449
		{
			yyVAL.str = ""
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2453
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2459
		{
			yyLOCAL = &IndexInfo{Type: IndexTypePrimary, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY")}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2463
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeSpatial, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2467
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeFullText, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2471
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeUnique, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2475
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeDefault, Name: NewIdentifierCI(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2480
		{
			yyVAL.str = ""
		}
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2484
		{
			yyVAL.str = yyDollar[2].str
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2490
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2494
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2498
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2504
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2508
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2513
		{
			yyVAL.str = ""
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2517
		{
			yyVAL.str = yyDollar[1].str
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2523
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2527
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 422:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2532
		{
			yyVAL.str = ""
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2536
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2542
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2546
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2552
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].intPtrUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2556
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2562
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2566
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2572
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2576
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2582
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2588
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2592
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2596
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2600
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2604
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2609
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2613
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2619
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2625
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2631
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2635
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2639
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2644
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2648
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2654
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2660
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2666
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2670
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2674
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2678
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2682
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2687
		{
			yyVAL.str = ""
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2691
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2695
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2701
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2705
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2710
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2714
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2719
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2723
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2729
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2733
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2737
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2743
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2747
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2753
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2757
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2761
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2765
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2769
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2773
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2777
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2781
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2785
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2789
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2793
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2797
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2801
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2805
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2809
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2813
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2817
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2821
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2825
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2829
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2833
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2837
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2841
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2845
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2849
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2853
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2857
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2861
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2865
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2869
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2873
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2878
		{
			yyVAL.str = ""
		}
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2882
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2886
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2905
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2909
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2913
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2917
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2922
		{
			yyVAL.str = ""
		}
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2928
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2932
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2937
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2941
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2946
		{
			yyVAL.str = ""
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2950
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2955
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2959
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2963
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2968
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2972
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2976
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2980
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2984
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 531:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2988
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2994
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2998
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3002
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3008
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3012
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3016
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3020
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3024
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3028
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3032
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3036
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion(), DefaultLiteral: true}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3040
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3044
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(false)}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3048
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(true)}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3052
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3056
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3060
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3064
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3068
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3072
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3076
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3080
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3084
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3088
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3092
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3096
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3100
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3104
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3108
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3112
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3116
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3120
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3124
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3128
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3134
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3138
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3144
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3148
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3152
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3156
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3160
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3164
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3168
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3172
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3176
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3180
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3186
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3193
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3200
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3207
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3213
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].tableStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3223
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3230
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3237
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3249
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3259
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3263
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3267
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3280
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3290
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3294
		{
			yyLOCAL = &AlterVschema{Action: DropSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3298
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3309
		{
			yyLOCAL = &AlterVschema{
				Action: DropAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3316
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3323
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3330
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3336
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3343
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3351
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3357
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3364
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3370
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3377
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3383
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3392
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3400
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3407
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3413
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3420
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3426
		{
			yyLOCAL = &AlterMigration{
				Type:      SetCutOverThresholdMigrationType,
				UUID:      string(yyDollar[4].str),
				Threshold: yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3435
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3439
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3448
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3456
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3465
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3472
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3480
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3484
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3493
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3504
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3508
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3513
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3517
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3522
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3526
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3532
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3538
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3544
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3548
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3554
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3558
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3564
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3570
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3576
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3582
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3588
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3592
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3596
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3600
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3606
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3612
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3618
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3622
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3626
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3632
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3636
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3641
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3645
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3650
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3654
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3660
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3664
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3668
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3672
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3676
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3680
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3684
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3688
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3692
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3696
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3700
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3704
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3708
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3712
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3716
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3720
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3724
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3728
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3732
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3736
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3740
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3744
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3749
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3753
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3757
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3763
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3767
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3773
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 680:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3778
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3782
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3787
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3792
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3797
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3802
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3807
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3812
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3817
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3822
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3828
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3834
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3838
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3844
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3849
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3853
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3858
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3863
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3868
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3873
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3878
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3883
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3890
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3897
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3904
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3912
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3916
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3922
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3928
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3934
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3940
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3946
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3952
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3958
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3964
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3970
		{
			yyVAL.str = ""
		}
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3974
		{
			yyVAL.str = ""
		}
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3980
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3986
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3990
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 720:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3996
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4000
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4009
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4013
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4019
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4023
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4029
		{
			yyLOCAL = &Analyze{IsLocal: yyDollar[2].booleanUnion(), Table: yyDollar[4].tableName}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4035
		{
			yyLOCAL = &PurgeBinaryLogs{To: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4039
		{
			yyLOCAL = &PurgeBinaryLogs{Before: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4045
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4049
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4053
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4057
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4061
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4065
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4069
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4073
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4077
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4081
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4085
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4089
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4093
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4097
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4101
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4105
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4109
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4113
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4117
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4121
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4125
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4129
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4133
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4137
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4141
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4145
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4149
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4153
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4157
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4161
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4165
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4169
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4173
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4177
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4181
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4185
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4189
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4193
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaKeyspaces}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4197
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4201
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4205
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4209
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4213
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4217
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4224
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4228
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4232
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4236
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4240
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4244
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4248
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4252
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4256
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4260
		{
			yyLOCAL = &Show{&ShowTransactionStatus{TransactionID: string(yyDollar[5].str)}}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4264
		{
			yyLOCAL = &Show{&ShowTransactionStatus{}}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4268
		{
			yyLOCAL = &Show{&ShowTransactionStatus{Keyspace: yyDollar[5].identifierCS.String()}}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4273
		{
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4275
		{
		}
	case 787:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4279
		{
			yyVAL.str = ""
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4283
		{
			yyVAL.str = "extended "
		}
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4289
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4293
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4299
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4303
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 793:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4309
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4313
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4317
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4323
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4327
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4331
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4337
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4341
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4347
		{
			yyVAL.empty = struct{}{}
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4351
		{
			yyVAL.empty = struct{}{}
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4355
		{
			yyVAL.empty = struct{}{}
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4361
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4365
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4371
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4375
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4379
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4386
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4390
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4394
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4398
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4405
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4409
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4414
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4418
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4424
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4428
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4434
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4438
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4442
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4449
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4455
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4459
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4464
		{
			yyVAL.empty = struct{}{}
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4466
		{
			yyVAL.empty = struct{}{}
		}
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4469
		{
			yyVAL.empty = struct{}{}
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4471
		{
			yyVAL.empty = struct{}{}
		}
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4475
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4481
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4486
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4490
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4494
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4498
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4502
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4507
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4511
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4515
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4519
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4523
		{
			yyLOCAL = TraceVExplainType
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4527
		{
			yyLOCAL = KeysVExplainType
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4533
		{
			yyVAL.str = yyDollar[1].str
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4537
		{
			yyVAL.str = yyDollar[1].str
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4541
		{
			yyVAL.str = yyDollar[1].str
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4547
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4551
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4555
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4559
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4564
		{
			yyVAL.str = ""
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4568
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4572
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 852:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4578
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4582
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4588
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4594
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4598
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4604
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4610
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4614
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4620
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4626
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4630
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4634
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4638
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4644
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4650
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4656
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4660
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4664
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4668
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4672
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4676
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4682
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4686
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4692
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4696
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4700
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4704
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4708
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4712
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4716
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4720
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4724
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4728
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4732
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4736
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4741
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4745
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4749
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4754
		{
			yyVAL.str = ""
		}
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4758
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4763
		{
			setAllowComments(yylex, true)
		}
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4767
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4773
		{
			yyVAL.strs = nil
		}
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4777
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4783
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4787
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4791
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4796
		{
			yyVAL.str = ""
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4800
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4804
		{
			yyVAL.str = SQLCacheStr
		}
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4809
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4813
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4817
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4823
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4827
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4837
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4842
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4846
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4852
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4856
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4861
		{
			yyVAL.strs = nil
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4865
		{
			yyVAL.strs = yyDollar[1].strs
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4871
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4875
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4881
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4885
		{
			yyVAL.str = SQLCacheStr
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4889
		{
			yyVAL.str = DistinctStr
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4893
		{
			yyVAL.str = DistinctStr
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4897
		{
			yyVAL.str = HighPriorityStr
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4901
		{
			yyVAL.str = StraightJoinHint
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4905
		{
			yyVAL.str = SQLBufferResultStr
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4909
		{
			yyVAL.str = SQLSmallResultStr
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4913
		{
			yyVAL.str = SQLBigResultStr
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4917
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4921
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4927
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4931
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4937
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4941
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4945
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4949
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4954
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4958
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4962
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4969
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4974
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4978
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4984
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4990
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4994
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5004
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5008
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5012
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5016
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5022
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5026
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5032
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5036
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5041
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5045
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5050
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5054
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5060
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5064
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5070
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5074
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5080
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5084
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5088
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5092
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5098
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5102
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 967:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5115
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5119
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5123
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5127
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5133
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 972:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5135
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 973:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5139
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5141
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 975:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5145
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5147
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 977:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5150
		{
			yyVAL.empty = struct{}{}
		}
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5152
		{
			yyVAL.empty = struct{}{}
		}
	case 979:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5155
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5159
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5163
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5170
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5176
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5180
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5184
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5190
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5196
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5200
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5204
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5208
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5214
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5218
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5228
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5232
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5238
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5242
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5248
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 999:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5253
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5257
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5263
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5267
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 1003:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5273
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5277
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5281
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5285
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5289
		{
			yyLOCAL = &IndexHint{Type: UseVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5293
		{
			yyLOCAL = &IndexHint{Type: IgnoreVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5298
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5302
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5306
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5310
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5316
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5320
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5327
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5331
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5335
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5339
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5343
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5347
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5351
		{
			yyLOCAL = &AssignmentExpr{Left: yyDollar[1].variableUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5355
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5361
		{
		}
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5364
		{
		}
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5369
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5373
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5377
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5381
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5385
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5389
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: All, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5393
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5399
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5403
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5407
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5411
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5415
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5419
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5423
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5427
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5431
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5435
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5439
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5445
		{
		}
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5448
		{
		}
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5454
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5458
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5462
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5466
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5470
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5474
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5478
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAdd, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5482
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinarySub, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5486
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5490
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5494
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5498
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5502
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5506
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5510
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5516
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5520
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5524
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5528
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5532
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5536
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5540
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5544
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5548
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5552
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5556
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5560
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5564
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5568
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5572
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5576
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5580
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5584
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5588
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5592
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5600
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5604
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAddLeft, Date: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion(), Interval: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5608
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5612
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[1].exprUnion(), PathList: []Expr{yyDollar[3].exprUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5616
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: &JSONExtractExpr{JSONDoc: yyDollar[1].exprUnion(), PathList: []Expr{yyDollar[3].exprUnion()}}}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5622
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5626
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5632
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5636
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5642
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5646
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5650
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5656
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5660
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5667
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5671
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5675
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5679
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5683
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5689
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5693
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5697
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5701
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5705
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5709
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5713
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5718
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5722
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5728
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5732
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5737
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5741
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5746
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5750
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5756
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5762
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5766
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5772
		{
			yyLOCAL = yyDollar[1].overClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5776
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5781
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5788
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5794
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5798
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5804
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5808
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5814
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5818
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5823
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5830
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5836
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5840
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5846
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5852
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5856
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1136:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5862
		{
			yyVAL.str = ""
		}
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5866
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5872
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5876
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5883
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5887
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5891
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5895
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5901
		{
			yyLOCAL = yyDollar[1].comparisonExprOperatorUnion()
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5905
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5911
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5915
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5919
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5923
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5927
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5931
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5937
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5941
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5945
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			markBindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5952
		{
			yyLOCAL = &Subquery{yyDollar[1].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5958
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5962
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5972
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5976
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5986
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5990
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5994
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5998
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6002
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6006
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6010
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6014
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6018
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6022
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6026
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6037
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6041
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6047
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6051
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("curdate")}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6055
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6060
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("curtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6065
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6069
		{
			yyLOCAL = &CountStar{OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6073
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6077
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6081
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6085
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6089
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6093
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6097
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6101
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6105
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6109
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6113
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6117
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6121
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6125
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6129
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6133
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6137
		{
			yyLOCAL = &AnyValue{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6141
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprTimestampadd, Date: yyDollar[7].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6145
		{
			yyLOCAL = &TimestampDiffExpr{Unit: yyDollar[3].intervalTypeUnion(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6149
		{
			yyLOCAL = &ExtractFuncExpr{IntervalType: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6153
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6157
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6161
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6165
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6169
		{
			yyLOCAL = &JSONArrayAgg{Expr: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6173
		{
			yyLOCAL = &JSONObjectAgg{Key: yyDollar[3].exprUnion(), Value: yyDollar[5].exprUnion(), OverClause: yyDollar[7].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6177
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, Type: LeadingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6181
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, Type: TrailingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6185
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6189
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6193
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6197
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6201
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6205
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6209
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6213
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6217
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6221
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6225
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6229
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6233
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6237
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6241
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6245
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6249
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6253
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6257
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6261
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6265
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsEmpty, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6269
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsSimple, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6273
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Dimension, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6277
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Envelope, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6281
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: GeometryType, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6285
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6289
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6293
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6297
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6301
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: EndPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6305
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: IsClosed, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6309
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6313
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6317
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: NumPoints, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6321
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: PointN, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6325
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: StartPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6329
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6333
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6337
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6341
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6345
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6349
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6353
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6357
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6361
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6365
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6369
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6373
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6377
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6381
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6385
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6389
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6393
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6397
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6401
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6405
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6409
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6413
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6417
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6421
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6425
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6429
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6433
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6437
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6441
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6445
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6449
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6453
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6457
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6461
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6465
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6469
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6473
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6477
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6481
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6485
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6489
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6493
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6497
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6501
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6505
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6509
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6513
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6517
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6521
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6525
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6529
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6533
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6537
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Area, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6541
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Centroid, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6545
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: ExteriorRing, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6549
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: InteriorRingN, Polygon: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6553
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: NumInteriorRings, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6557
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: GeometryN, GeomColl: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6561
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: NumGeometries, GeomColl: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6565
		{
			yyLOCAL = &GeoHashFromLatLongExpr{Longitude: yyDollar[3].exprUnion(), Latitude: yyDollar[5].exprUnion(), MaxLength: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6569
		{
			yyLOCAL = &GeoHashFromPointExpr{Point: yyDollar[3].exprUnion(), MaxLength: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6573
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LatitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6577
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LongitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6581
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: PointFromHash, GeoHash: yyDollar[3].exprUnion(), SridOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6585
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6589
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6593
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion(), Srid: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6597
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6601
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6605
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion(), Bitmask: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6609
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6613
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6617
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6621
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6625
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6629
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6633
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6637
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6641
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6645
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6649
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6653
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6657
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6661
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6665
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6669
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6673
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6677
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6681
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6685
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6689
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6693
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6697
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6701
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6705
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6709
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6713
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6717
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6721
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6725
		{
			yyLOCAL = &MultiPolygonExpr{PolygonParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6729
		{
			yyLOCAL = &MultiPointExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6733
		{
			yyLOCAL = &MultiLinestringExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6737
		{
			yyLOCAL = &PolygonExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6741
		{
			yyLOCAL = &LineStringExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6745
		{
			yyLOCAL = &PointExpr{XCordinate: yyDollar[3].exprUnion(), YCordinate: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6749
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6753
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6757
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6761
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6765
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6769
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6773
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6777
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6781
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateAdd, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6785
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateSub, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6789
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6793
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6803
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6807
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6811
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6815
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6820
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6824
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6830
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6834
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6838
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6842
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6846
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6851
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6855
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6859
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6863
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6867
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6871
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6876
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6880
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6884
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6888
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6895
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6899
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6905
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6909
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6913
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6917
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6923
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6927
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6931
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6935
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6939
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6943
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6947
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6952
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6956
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6962
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6966
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6970
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6974
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6978
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6982
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6986
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6990
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6994
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6998
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7002
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7006
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7010
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7014
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7018
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7022
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7026
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7030
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7034
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7038
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7044
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7048
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7052
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7056
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7060
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7064
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7068
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7072
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7076
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7080
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7084
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7088
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7092
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7096
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7100
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7104
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7108
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7112
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:7122
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:7126
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:7130
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7140
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7144
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7148
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7152
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7156
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7162
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7166
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7170
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7174
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7178
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7184
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7188
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7192
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7198
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7202
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7206
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7212
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7216
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7220
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7224
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7228
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7234
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7238
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7242
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7246
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7250
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7254
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7258
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7262
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7266
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7270
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7276
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7280
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7285
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7289
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7294
		{
			yyVAL.str = string("")
		}
	case 1479:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7298
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7304
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7308
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1482:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7314
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7319
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7323
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7329
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7333
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7337
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7341
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7347
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7351
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7357
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7366
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7370
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7375
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7379
		{
			yyLOCAL = &GroupBy{Exprs: yyDollar[3].exprsUnion(), WithRollup: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7384
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7388
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7394
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7398
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7404
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7410
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7414
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1503:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7419
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7423
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7428
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7432
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7438
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7444
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7448
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7454
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7459
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7463
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7467
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7472
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7476
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7482
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7486
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7490
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7495
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7499
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7503
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7507
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7511
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7518
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7522
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7526
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7530
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7536
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7540
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7544
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7548
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7553
		{
			yyVAL.str = ""
		}
	case 1533:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7557
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1534:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7561
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7565
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1536:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7570
		{
			yyVAL.str = ""
		}
	case 1537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7574
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7580
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7584
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1540:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7589
		{
			yyVAL.str = ""
		}
	case 1541:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7593
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1542:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7598
		{
			yyVAL.str = "cascaded"
		}
	case 1543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7602
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7606
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1545:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7611
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7615
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7621
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7627
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7633
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7642
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7646
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1552:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7651
		{
			yyVAL.str = ""
		}
	case 1553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7655
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7661
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7665
		{
			yyLOCAL = ForUpdateLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7669
		{
			yyLOCAL = ForUpdateLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7673
		{
			yyLOCAL = ForShareLock
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7677
		{
			yyLOCAL = ForShareLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7681
		{
			yyLOCAL = ForShareLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7685
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7691
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7695
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7699
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7704
		{
			yyVAL.str = ""
		}
	case 1565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7708
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1566:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7712
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1567:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7717
		{
			yyVAL.str = ""
		}
	case 1568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7721
		{
			yyVAL.str = " header"
		}
	case 1569:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7726
		{
			yyVAL.str = ""
		}
	case 1570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7730
		{
			yyVAL.str = " manifest on"
		}
	case 1571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7734
		{
			yyVAL.str = " manifest off"
		}
	case 1572:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7739
		{
			yyVAL.str = ""
		}
	case 1573:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7743
		{
			yyVAL.str = " overwrite on"
		}
	case 1574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7747
		{
			yyVAL.str = " overwrite off"
		}
	case 1575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7753
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1576:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7758
		{
			yyVAL.str = ""
		}
	case 1577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7762
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7768
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7772
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7778
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1581:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7782
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1582:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7787
		{
			yyVAL.str = ""
		}
	case 1583:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7791
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7797
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7801
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1586:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7807
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1587:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7811
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1588:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7815
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1589:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7820
		{
			yyVAL.str = ""
		}
	case 1590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7824
		{
			yyVAL.str = " optionally"
		}
	case 1591:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7837
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion(), RowAlias: yyDollar[3].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7841
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7845
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion(), RowAlias: yyDollar[6].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7849
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion(), RowAlias: yyDollar[5].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7853
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7859
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7863
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7867
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1599:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7871
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7876
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7880
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7884
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7889
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7893
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7899
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7903
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7909
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7913
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7919
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7923
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7929
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7933
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7939
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1614:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7945
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7955
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1618:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7965
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1619:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7969
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7975
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7982
		{
			yyVAL.str = "charset"
		}
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7992
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7996
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8000
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1630:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8009
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:8011
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8014
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:8016
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1634:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8019
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:8021
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1636:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:8024
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:8026
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1638:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8029
		{
			yyVAL.empty = struct{}{}
		}
	case 1639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8031
		{
			yyVAL.empty = struct{}{}
		}
	case 1640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8033
		{
			yyVAL.empty = struct{}{}
		}
	case 1641:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8037
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1642:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:8042
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:8046
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1644:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:8051
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:8053
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:8057
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8063
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8067
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8074
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8080
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8084
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1653:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8090
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8094
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8101
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8107
		{
			yyLOCAL = &Kill{Type: yyDollar[2].killTypeUnion(), ProcesslistID: convertStringToUInt64(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 1658:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8113
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8117
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1660:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8121
		{
			yyLOCAL = QueryType
		}
		yyVAL.union = yyLOCAL
	case 2292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8781
		{
		}
	case 2293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8786
		{
		}
	case 2294:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8790
		{
			skipToEnd(yylex)
		}
	case 2295:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8795
		{
			skipToEnd(yylex)
		}
	case 2296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8799
		{
			skipToEnd(yylex)
		}
	case 2297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8803
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
