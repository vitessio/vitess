// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"

	"vitess.io/vitess/go/ptr"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func markBindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const MULTIPLE_TEXT_LITERAL = 57347
const FUNCTION_CALL_NON_KEYWORD = 57348
const STRING_TYPE_PREFIX_NON_KEYWORD = 57349
const ANY_SOME = 57350
const SELECT_OPTIONS = 57351
const LEX_ERROR = 57352
const UNION = 57353
const SELECT = 57354
const STREAM = 57355
const VSTREAM = 57356
const INSERT = 57357
const UPDATE = 57358
const DELETE = 57359
const FROM = 57360
const WHERE = 57361
const GROUP = 57362
const HAVING = 57363
const ORDER = 57364
const BY = 57365
const LIMIT = 57366
const OFFSET = 57367
const FOR = 57368
const DISTINCT = 57369
const AS = 57370
const EXISTS = 57371
const ASC = 57372
const DESC = 57373
const INTO = 57374
const DUPLICATE = 57375
const DEFAULT = 57376
const SET = 57377
const LOCK = 57378
const UNLOCK = 57379
const KEYS = 57380
const DO = 57381
const CALL = 57382
const ALL = 57383
const ANY = 57384
const SOME = 57385
const DISTINCTROW = 57386
const PARSER = 57387
const GENERATED = 57388
const ALWAYS = 57389
const OUTFILE = 57390
const S3 = 57391
const DATA = 57392
const LOAD = 57393
const LINES = 57394
const TERMINATED = 57395
const ESCAPED = 57396
const ENCLOSED = 57397
const DUMPFILE = 57398
const CSV = 57399
const HEADER = 57400
const MANIFEST = 57401
const OVERWRITE = 57402
const STARTING = 57403
const OPTIONALLY = 57404
const VALUES = 57405
const LAST_INSERT_ID = 57406
const NEXT = 57407
const VALUE = 57408
const SHARE = 57409
const MODE = 57410
const SQL_NO_CACHE = 57411
const SQL_CACHE = 57412
const SQL_CALC_FOUND_ROWS = 57413
const SQL_SMALL_RESULT = 57414
const SQL_BIG_RESULT = 57415
const HIGH_PRIORITY = 57416
const JOIN = 57417
const STRAIGHT_JOIN = 57418
const LEFT = 57419
const RIGHT = 57420
const INNER = 57421
const OUTER = 57422
const CROSS = 57423
const NATURAL = 57424
const USE = 57425
const FORCE = 57426
const ON = 57427
const USING = 57428
const INPLACE = 57429
const COPY = 57430
const INSTANT = 57431
const ALGORITHM = 57432
const NONE = 57433
const SHARED = 57434
const EXCLUSIVE = 57435
const SUBQUERY_AS_EXPR = 57436
const STRING = 57437
const SQL_BUFFER_RESULT = 57438
const ID = 57439
const AT_ID = 57440
const AT_AT_ID = 57441
const HEX = 57442
const NCHAR_STRING = 57443
const INTEGRAL = 57444
const FLOAT = 57445
const DECIMAL = 57446
const HEXNUM = 57447
const COMMENT = 57448
const COMMENT_KEYWORD = 57449
const BITNUM = 57450
const BIT_LITERAL = 57451
const COMPRESSION = 57452
const VALUE_ARG = 57453
const LIST_ARG = 57454
const OFFSET_ARG = 57455
const JSON_PRETTY = 57456
const JSON_STORAGE_SIZE = 57457
const JSON_STORAGE_FREE = 57458
const JSON_CONTAINS = 57459
const JSON_CONTAINS_PATH = 57460
const JSON_EXTRACT = 57461
const JSON_KEYS = 57462
const JSON_OVERLAPS = 57463
const JSON_SEARCH = 57464
const JSON_VALUE = 57465
const JSON_ARRAYAGG = 57466
const JSON_OBJECTAGG = 57467
const EXTRACT = 57468
const NULL = 57469
const UNKNOWN = 57470
const TRUE = 57471
const FALSE = 57472
const OFF = 57473
const DISCARD = 57474
const IMPORT = 57475
const ENABLE = 57476
const DISABLE = 57477
const TABLESPACE = 57478
const VIRTUAL = 57479
const STORED = 57480
const BOTH = 57481
const LEADING = 57482
const TRAILING = 57483
const KILL = 57484
const EMPTY_FROM_CLAUSE = 57485
const LOWER_THAN_CHARSET = 57486
const CHARSET = 57487
const UNIQUE = 57488
const KEY = 57489
const EXPRESSION_PREC_SETTER = 57490
const OR = 57491
const XOR = 57492
const AND = 57493
const NOT = 57494
const BETWEEN = 57495
const CASE = 57496
const WHEN = 57497
const THEN = 57498
const ELSE = 57499
const END = 57500
const LE = 57501
const GE = 57502
const NE = 57503
const NULL_SAFE_EQUAL = 57504
const IS = 57505
const LIKE = 57506
const REGEXP = 57507
const RLIKE = 57508
const IN = 57509
const ASSIGNMENT_OPT = 57510
const SHIFT_LEFT = 57511
const SHIFT_RIGHT = 57512
const DIV = 57513
const MOD = 57514
const UNARY = 57515
const COLLATE = 57516
const BINARY = 57517
const UNDERSCORE_ARMSCII8 = 57518
const UNDERSCORE_ASCII = 57519
const UNDERSCORE_BIG5 = 57520
const UNDERSCORE_BINARY = 57521
const UNDERSCORE_CP1250 = 57522
const UNDERSCORE_CP1251 = 57523
const UNDERSCORE_CP1256 = 57524
const UNDERSCORE_CP1257 = 57525
const UNDERSCORE_CP850 = 57526
const UNDERSCORE_CP852 = 57527
const UNDERSCORE_CP866 = 57528
const UNDERSCORE_CP932 = 57529
const UNDERSCORE_DEC8 = 57530
const UNDERSCORE_EUCJPMS = 57531
const UNDERSCORE_EUCKR = 57532
const UNDERSCORE_GB18030 = 57533
const UNDERSCORE_GB2312 = 57534
const UNDERSCORE_GBK = 57535
const UNDERSCORE_GEOSTD8 = 57536
const UNDERSCORE_GREEK = 57537
const UNDERSCORE_HEBREW = 57538
const UNDERSCORE_HP8 = 57539
const UNDERSCORE_KEYBCS2 = 57540
const UNDERSCORE_KOI8R = 57541
const UNDERSCORE_KOI8U = 57542
const UNDERSCORE_LATIN1 = 57543
const UNDERSCORE_LATIN2 = 57544
const UNDERSCORE_LATIN5 = 57545
const UNDERSCORE_LATIN7 = 57546
const UNDERSCORE_MACCE = 57547
const UNDERSCORE_MACROMAN = 57548
const UNDERSCORE_SJIS = 57549
const UNDERSCORE_SWE7 = 57550
const UNDERSCORE_TIS620 = 57551
const UNDERSCORE_UCS2 = 57552
const UNDERSCORE_UJIS = 57553
const UNDERSCORE_UTF16 = 57554
const UNDERSCORE_UTF16LE = 57555
const UNDERSCORE_UTF32 = 57556
const UNDERSCORE_UTF8 = 57557
const UNDERSCORE_UTF8MB4 = 57558
const UNDERSCORE_UTF8MB3 = 57559
const INTERVAL = 57560
const WINDOW_EXPR = 57561
const JSON_EXTRACT_OP = 57562
const JSON_UNQUOTE_EXTRACT_OP = 57563
const CREATE = 57564
const ALTER = 57565
const DROP = 57566
const RENAME = 57567
const ANALYZE = 57568
const ADD = 57569
const FLUSH = 57570
const CHANGE = 57571
const MODIFY = 57572
const DEALLOCATE = 57573
const REVERT = 57574
const QUERIES = 57575
const SCHEMA = 57576
const TABLE = 57577
const INDEX = 57578
const VIEW = 57579
const TO = 57580
const IGNORE = 57581
const IF = 57582
const PRIMARY = 57583
const COLUMN = 57584
const SPATIAL = 57585
const FULLTEXT = 57586
const KEY_BLOCK_SIZE = 57587
const CHECK = 57588
const INDEXES = 57589
const ACTION = 57590
const CASCADE = 57591
const CONSTRAINT = 57592
const FOREIGN = 57593
const NO = 57594
const REFERENCES = 57595
const RESTRICT = 57596
const SHOW = 57597
const DESCRIBE = 57598
const EXPLAIN = 57599
const DATE = 57600
const ESCAPE = 57601
const REPAIR = 57602
const OPTIMIZE = 57603
const TRUNCATE = 57604
const COALESCE = 57605
const EXCHANGE = 57606
const REBUILD = 57607
const PARTITIONING = 57608
const REMOVE = 57609
const PREPARE = 57610
const EXECUTE = 57611
const MAXVALUE = 57612
const PARTITION = 57613
const REORGANIZE = 57614
const LESS = 57615
const THAN = 57616
const PROCEDURE = 57617
const TRIGGER = 57618
const VINDEX = 57619
const VINDEXES = 57620
const DIRECTORY = 57621
const NAME = 57622
const UPGRADE = 57623
const STATUS = 57624
const VARIABLES = 57625
const WARNINGS = 57626
const CASCADED = 57627
const DEFINER = 57628
const OPTION = 57629
const SQL = 57630
const UNDEFINED = 57631
const SEQUENCE = 57632
const MERGE = 57633
const TEMPORARY = 57634
const TEMPTABLE = 57635
const INVOKER = 57636
const SECURITY = 57637
const FIRST = 57638
const AFTER = 57639
const LAST = 57640
const VITESS_MIGRATION = 57641
const CANCEL = 57642
const RETRY = 57643
const LAUNCH = 57644
const COMPLETE = 57645
const CLEANUP = 57646
const THROTTLE = 57647
const UNTHROTTLE = 57648
const FORCE_CUTOVER = 57649
const EXPIRE = 57650
const RATIO = 57651
const VITESS_THROTTLER = 57652
const BEGIN = 57653
const START = 57654
const TRANSACTION = 57655
const COMMIT = 57656
const ROLLBACK = 57657
const SAVEPOINT = 57658
const RELEASE = 57659
const WORK = 57660
const CONSISTENT = 57661
const SNAPSHOT = 57662
const UNRESOLVED = 57663
const TRANSACTIONS = 57664
const BIT = 57665
const TINYINT = 57666
const SMALLINT = 57667
const MEDIUMINT = 57668
const INT = 57669
const INTEGER = 57670
const BIGINT = 57671
const INTNUM = 57672
const REAL = 57673
const DOUBLE = 57674
const FLOAT_TYPE = 57675
const FLOAT4_TYPE = 57676
const FLOAT8_TYPE = 57677
const DECIMAL_TYPE = 57678
const NUMERIC = 57679
const TIME = 57680
const TIMESTAMP = 57681
const DATETIME = 57682
const YEAR = 57683
const CHAR = 57684
const VARCHAR = 57685
const BOOL = 57686
const CHARACTER = 57687
const VARBINARY = 57688
const NCHAR = 57689
const TEXT = 57690
const TINYTEXT = 57691
const MEDIUMTEXT = 57692
const LONGTEXT = 57693
const BLOB = 57694
const TINYBLOB = 57695
const MEDIUMBLOB = 57696
const LONGBLOB = 57697
const JSON = 57698
const JSON_SCHEMA_VALID = 57699
const JSON_SCHEMA_VALIDATION_REPORT = 57700
const ENUM = 57701
const GEOMETRY = 57702
const POINT = 57703
const LINESTRING = 57704
const POLYGON = 57705
const GEOMCOLLECTION = 57706
const GEOMETRYCOLLECTION = 57707
const MULTIPOINT = 57708
const MULTILINESTRING = 57709
const MULTIPOLYGON = 57710
const ASCII = 57711
const UNICODE = 57712
const VECTOR = 57713
const NULLX = 57714
const AUTO_INCREMENT = 57715
const APPROXNUM = 57716
const SIGNED = 57717
const UNSIGNED = 57718
const ZEROFILL = 57719
const PURGE = 57720
const BEFORE = 57721
const CODE = 57722
const COLLATION = 57723
const COLUMNS = 57724
const DATABASES = 57725
const ENGINES = 57726
const EVENT = 57727
const EXTENDED = 57728
const FIELDS = 57729
const FULL = 57730
const FUNCTION = 57731
const GTID_EXECUTED = 57732
const KEYSPACES = 57733
const OPEN = 57734
const PLUGINS = 57735
const PRIVILEGES = 57736
const PROCESSLIST = 57737
const SCHEMAS = 57738
const TABLES = 57739
const TRIGGERS = 57740
const USER = 57741
const VGTID_EXECUTED = 57742
const VITESS_KEYSPACES = 57743
const VITESS_METADATA = 57744
const VITESS_MIGRATIONS = 57745
const VITESS_REPLICATION_STATUS = 57746
const VITESS_SHARDS = 57747
const VITESS_TABLETS = 57748
const VITESS_TARGET = 57749
const VSCHEMA = 57750
const VITESS_THROTTLED_APPS = 57751
const NAMES = 57752
const GLOBAL = 57753
const SESSION = 57754
const ISOLATION = 57755
const LEVEL = 57756
const READ = 57757
const WRITE = 57758
const ONLY = 57759
const REPEATABLE = 57760
const COMMITTED = 57761
const UNCOMMITTED = 57762
const SERIALIZABLE = 57763
const ADDDATE = 57764
const CURRENT_TIMESTAMP = 57765
const DATABASE = 57766
const CURRENT_DATE = 57767
const CURDATE = 57768
const DATE_ADD = 57769
const DATE_SUB = 57770
const NOW = 57771
const SUBDATE = 57772
const CURTIME = 57773
const CURRENT_TIME = 57774
const LOCALTIME = 57775
const LOCALTIMESTAMP = 57776
const CURRENT_USER = 57777
const UTC_DATE = 57778
const UTC_TIME = 57779
const UTC_TIMESTAMP = 57780
const SYSDATE = 57781
const DAY = 57782
const DAY_HOUR = 57783
const DAY_MICROSECOND = 57784
const DAY_MINUTE = 57785
const DAY_SECOND = 57786
const HOUR = 57787
const HOUR_MICROSECOND = 57788
const HOUR_MINUTE = 57789
const HOUR_SECOND = 57790
const MICROSECOND = 57791
const MINUTE = 57792
const MINUTE_MICROSECOND = 57793
const MINUTE_SECOND = 57794
const MONTH = 57795
const QUARTER = 57796
const SECOND = 57797
const SECOND_MICROSECOND = 57798
const YEAR_MONTH = 57799
const WEEK = 57800
const SQL_TSI_DAY = 57801
const SQL_TSI_WEEK = 57802
const SQL_TSI_HOUR = 57803
const SQL_TSI_MINUTE = 57804
const SQL_TSI_MONTH = 57805
const SQL_TSI_QUARTER = 57806
const SQL_TSI_SECOND = 57807
const SQL_TSI_MICROSECOND = 57808
const SQL_TSI_YEAR = 57809
const REPLACE = 57810
const CONVERT = 57811
const CAST = 57812
const SUBSTR = 57813
const SUBSTRING = 57814
const MID = 57815
const SEPARATOR = 57816
const TIMESTAMPADD = 57817
const TIMESTAMPDIFF = 57818
const WEIGHT_STRING = 57819
const LTRIM = 57820
const RTRIM = 57821
const TRIM = 57822
const JSON_ARRAY = 57823
const JSON_OBJECT = 57824
const JSON_QUOTE = 57825
const JSON_DEPTH = 57826
const JSON_TYPE = 57827
const JSON_LENGTH = 57828
const JSON_VALID = 57829
const JSON_ARRAY_APPEND = 57830
const JSON_ARRAY_INSERT = 57831
const JSON_INSERT = 57832
const JSON_MERGE = 57833
const JSON_MERGE_PATCH = 57834
const JSON_MERGE_PRESERVE = 57835
const JSON_REMOVE = 57836
const JSON_REPLACE = 57837
const JSON_SET = 57838
const JSON_UNQUOTE = 57839
const COUNT = 57840
const AVG = 57841
const MAX = 57842
const MIN = 57843
const SUM = 57844
const GROUP_CONCAT = 57845
const BIT_AND = 57846
const BIT_OR = 57847
const BIT_XOR = 57848
const STD = 57849
const STDDEV = 57850
const STDDEV_POP = 57851
const STDDEV_SAMP = 57852
const VAR_POP = 57853
const VAR_SAMP = 57854
const VARIANCE = 57855
const ANY_VALUE = 57856
const REGEXP_INSTR = 57857
const REGEXP_LIKE = 57858
const REGEXP_REPLACE = 57859
const REGEXP_SUBSTR = 57860
const ExtractValue = 57861
const UpdateXML = 57862
const GET_LOCK = 57863
const RELEASE_LOCK = 57864
const RELEASE_ALL_LOCKS = 57865
const IS_FREE_LOCK = 57866
const IS_USED_LOCK = 57867
const LOCATE = 57868
const POSITION = 57869
const ST_GeometryCollectionFromText = 57870
const ST_GeometryFromText = 57871
const ST_LineStringFromText = 57872
const ST_MultiLineStringFromText = 57873
const ST_MultiPointFromText = 57874
const ST_MultiPolygonFromText = 57875
const ST_PointFromText = 57876
const ST_PolygonFromText = 57877
const ST_GeometryCollectionFromWKB = 57878
const ST_GeometryFromWKB = 57879
const ST_LineStringFromWKB = 57880
const ST_MultiLineStringFromWKB = 57881
const ST_MultiPointFromWKB = 57882
const ST_MultiPolygonFromWKB = 57883
const ST_PointFromWKB = 57884
const ST_PolygonFromWKB = 57885
const ST_AsBinary = 57886
const ST_AsText = 57887
const ST_Dimension = 57888
const ST_Envelope = 57889
const ST_IsSimple = 57890
const ST_IsEmpty = 57891
const ST_GeometryType = 57892
const ST_X = 57893
const ST_Y = 57894
const ST_Latitude = 57895
const ST_Longitude = 57896
const ST_EndPoint = 57897
const ST_IsClosed = 57898
const ST_Length = 57899
const ST_NumPoints = 57900
const ST_StartPoint = 57901
const ST_PointN = 57902
const ST_Area = 57903
const ST_Centroid = 57904
const ST_ExteriorRing = 57905
const ST_InteriorRingN = 57906
const ST_NumInteriorRings = 57907
const ST_NumGeometries = 57908
const ST_GeometryN = 57909
const ST_LongFromGeoHash = 57910
const ST_PointFromGeoHash = 57911
const ST_LatFromGeoHash = 57912
const ST_GeoHash = 57913
const ST_AsGeoJSON = 57914
const ST_GeomFromGeoJSON = 57915
const MATCH = 57916
const AGAINST = 57917
const BOOLEAN = 57918
const LANGUAGE = 57919
const WITH = 57920
const QUERY = 57921
const EXPANSION = 57922
const WITHOUT = 57923
const VALIDATION = 57924
const ROLLUP = 57925
const UNUSED = 57926
const ARRAY = 57927
const BYTE = 57928
const CUME_DIST = 57929
const DESCRIPTION = 57930
const DENSE_RANK = 57931
const EMPTY = 57932
const EXCEPT = 57933
const FIRST_VALUE = 57934
const GROUPING = 57935
const GROUPS = 57936
const JSON_TABLE = 57937
const LAG = 57938
const LAST_VALUE = 57939
const LATERAL = 57940
const LEAD = 57941
const NTH_VALUE = 57942
const NTILE = 57943
const OF = 57944
const OVER = 57945
const PERCENT_RANK = 57946
const RANK = 57947
const RECURSIVE = 57948
const ROW_NUMBER = 57949
const SYSTEM = 57950
const WINDOW = 57951
const ACTIVE = 57952
const ADMIN = 57953
const AUTOEXTEND_SIZE = 57954
const BUCKETS = 57955
const CLONE = 57956
const COLUMN_FORMAT = 57957
const COMPONENT = 57958
const DEFINITION = 57959
const ENFORCED = 57960
const ENGINE_ATTRIBUTE = 57961
const EXCLUDE = 57962
const FOLLOWING = 57963
const GET_MASTER_PUBLIC_KEY = 57964
const HISTOGRAM = 57965
const HISTORY = 57966
const INACTIVE = 57967
const INVISIBLE = 57968
const LOCKED = 57969
const MASTER_COMPRESSION_ALGORITHMS = 57970
const MASTER_PUBLIC_KEY_PATH = 57971
const MASTER_TLS_CIPHERSUITES = 57972
const MASTER_ZSTD_COMPRESSION_LEVEL = 57973
const NESTED = 57974
const NETWORK_NAMESPACE = 57975
const NOWAIT = 57976
const NULLS = 57977
const OJ = 57978
const OLD = 57979
const OPTIONAL = 57980
const ORDINALITY = 57981
const ORGANIZATION = 57982
const OTHERS = 57983
const PARTIAL = 57984
const PATH = 57985
const PERSIST = 57986
const PERSIST_ONLY = 57987
const PRECEDING = 57988
const PRIVILEGE_CHECKS_USER = 57989
const PROCESS = 57990
const RANDOM = 57991
const REFERENCE = 57992
const REQUIRE_ROW_FORMAT = 57993
const RESOURCE = 57994
const RESPECT = 57995
const RESTART = 57996
const RETAIN = 57997
const REUSE = 57998
const ROLE = 57999
const SECONDARY = 58000
const SECONDARY_ENGINE = 58001
const SECONDARY_ENGINE_ATTRIBUTE = 58002
const SECONDARY_LOAD = 58003
const SECONDARY_UNLOAD = 58004
const SIMPLE = 58005
const SKIP = 58006
const SRID = 58007
const THREAD_PRIORITY = 58008
const TIES = 58009
const UNBOUNDED = 58010
const VCPU = 58011
const VISIBLE = 58012
const RETURNING = 58013
const FORMAT_BYTES = 58014
const FORMAT_PICO_TIME = 58015
const PS_CURRENT_THREAD_ID = 58016
const PS_THREAD_ID = 58017
const GTID_SUBSET = 58018
const GTID_SUBTRACT = 58019
const WAIT_FOR_EXECUTED_GTID_SET = 58020
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 58021
const FORMAT = 58022
const TREE = 58023
const VITESS = 58024
const TRADITIONAL = 58025
const VTEXPLAIN = 58026
const VEXPLAIN = 58027
const PLAN = 58028
const LOCAL = 58029
const LOW_PRIORITY = 58030
const NO_WRITE_TO_BINLOG = 58031
const LOGS = 58032
const ERROR = 58033
const GENERAL = 58034
const HOSTS = 58035
const OPTIMIZER_COSTS = 58036
const USER_RESOURCES = 58037
const SLOW = 58038
const CHANNEL = 58039
const RELAY = 58040
const EXPORT = 58041
const CURRENT = 58042
const ROW = 58043
const ROWS = 58044
const AVG_ROW_LENGTH = 58045
const CONNECTION = 58046
const CHECKSUM = 58047
const DELAY_KEY_WRITE = 58048
const ENCRYPTION = 58049
const ENGINE = 58050
const INSERT_METHOD = 58051
const MAX_ROWS = 58052
const MIN_ROWS = 58053
const PACK_KEYS = 58054
const PASSWORD = 58055
const FIXED = 58056
const DYNAMIC = 58057
const COMPRESSED = 58058
const REDUNDANT = 58059
const COMPACT = 58060
const ROW_FORMAT = 58061
const STATS_AUTO_RECALC = 58062
const STATS_PERSISTENT = 58063
const STATS_SAMPLE_PAGES = 58064
const STORAGE = 58065
const MEMORY = 58066
const DISK = 58067
const PARTITIONS = 58068
const LINEAR = 58069
const RANGE = 58070
const LIST = 58071
const SUBPARTITION = 58072
const SUBPARTITIONS = 58073
const HASH = 58074

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"MULTIPLE_TEXT_LITERAL",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"ANY_SOME",
	"SELECT_OPTIONS",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"ALL",
	"ANY",
	"SOME",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"HIGH_PRIORITY",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"SQL_BUFFER_RESULT",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"EXTRACT",
	"NULL",
	"UNKNOWN",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"KILL",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"ASSIGNMENT_OPT",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"FORCE_CUTOVER",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"UNRESOLVED",
	"TRANSACTIONS",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"VECTOR",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"PURGE",
	"BEFORE",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ADDDATE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURDATE",
	"DATE_ADD",
	"DATE_SUB",
	"NOW",
	"SUBDATE",
	"CURTIME",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"SYSDATE",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_HOUR",
	"SQL_TSI_MINUTE",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_SECOND",
	"SQL_TSI_MICROSECOND",
	"SQL_TSI_YEAR",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"MID",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"ANY_VALUE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"ST_GeometryCollectionFromText",
	"ST_GeometryFromText",
	"ST_LineStringFromText",
	"ST_MultiLineStringFromText",
	"ST_MultiPointFromText",
	"ST_MultiPolygonFromText",
	"ST_PointFromText",
	"ST_PolygonFromText",
	"ST_GeometryCollectionFromWKB",
	"ST_GeometryFromWKB",
	"ST_LineStringFromWKB",
	"ST_MultiLineStringFromWKB",
	"ST_MultiPointFromWKB",
	"ST_MultiPolygonFromWKB",
	"ST_PointFromWKB",
	"ST_PolygonFromWKB",
	"ST_AsBinary",
	"ST_AsText",
	"ST_Dimension",
	"ST_Envelope",
	"ST_IsSimple",
	"ST_IsEmpty",
	"ST_GeometryType",
	"ST_X",
	"ST_Y",
	"ST_Latitude",
	"ST_Longitude",
	"ST_EndPoint",
	"ST_IsClosed",
	"ST_Length",
	"ST_NumPoints",
	"ST_StartPoint",
	"ST_PointN",
	"ST_Area",
	"ST_Centroid",
	"ST_ExteriorRing",
	"ST_InteriorRingN",
	"ST_NumInteriorRings",
	"ST_NumGeometries",
	"ST_GeometryN",
	"ST_LongFromGeoHash",
	"ST_PointFromGeoHash",
	"ST_LatFromGeoHash",
	"ST_GeoHash",
	"ST_AsGeoJSON",
	"ST_GeomFromGeoJSON",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ROLLUP",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	16, 49,
	17, 49,
	-2, 40,
	-1, 52,
	1, 160,
	750, 160,
	-2, 168,
	-1, 53,
	148, 168,
	190, 168,
	362, 168,
	-2, 527,
	-1, 61,
	38, 787,
	253, 787,
	264, 787,
	299, 801,
	300, 801,
	-2, 789,
	-1, 66,
	255, 825,
	-2, 823,
	-1, 124,
	252, 1628,
	-2, 134,
	-1, 126,
	1, 161,
	750, 161,
	-2, 168,
	-1, 137,
	149, 412,
	258, 412,
	-2, 516,
	-1, 156,
	148, 168,
	190, 168,
	362, 168,
	-2, 536,
	-1, 749,
	176, 41,
	-2, 43,
	-1, 958,
	95, 1645,
	-2, 1483,
	-1, 959,
	95, 1646,
	235, 1650,
	-2, 1484,
	-1, 960,
	235, 1649,
	-2, 42,
	-1, 1046,
	65, 897,
	-2, 910,
	-1, 1139,
	263, 1110,
	268, 1110,
	-2, 423,
	-1, 1224,
	1, 584,
	750, 584,
	-2, 168,
	-1, 1533,
	235, 1650,
	-2, 1484,
	-1, 1747,
	65, 898,
	-2, 914,
	-1, 1748,
	65, 899,
	-2, 915,
	-1, 1810,
	148, 168,
	190, 168,
	362, 168,
	-2, 462,
	-1, 1892,
	149, 412,
	258, 412,
	-2, 516,
	-1, 1901,
	263, 1111,
	268, 1111,
	-2, 424,
	-1, 2350,
	235, 1654,
	-2, 1648,
	-1, 2351,
	235, 1650,
	-2, 1646,
	-1, 2456,
	148, 168,
	190, 168,
	362, 168,
	-2, 463,
	-1, 2463,
	28, 189,
	-2, 191,
	-1, 2926,
	86, 99,
	96, 99,
	-2, 977,
	-1, 2995,
	725, 705,
	-2, 679,
	-1, 3219,
	55, 1587,
	-2, 1581,
	-1, 4057,
	725, 705,
	-2, 693,
	-1, 4149,
	98, 637,
	104, 637,
	114, 637,
	192, 637,
	193, 637,
	194, 637,
	195, 637,
	196, 637,
	197, 637,
	198, 637,
	199, 637,
	200, 637,
	201, 637,
	202, 637,
	203, 637,
	204, 637,
	205, 637,
	206, 637,
	207, 637,
	208, 637,
	209, 637,
	210, 637,
	211, 637,
	212, 637,
	213, 637,
	214, 637,
	215, 637,
	216, 637,
	217, 637,
	218, 637,
	219, 637,
	220, 637,
	221, 637,
	222, 637,
	223, 637,
	224, 637,
	225, 637,
	226, 637,
	227, 637,
	228, 637,
	229, 637,
	230, 637,
	231, 637,
	232, 637,
	233, 637,
	-2, 2025,
}

const yyPrivate = 57344

const yyLast = 56951

var yyAct = [...]int{
	974, 3708, 3709, 87, 3707, 4147, 4224, 4038, 4128, 3371,
	4237, 4191, 4116, 3657, 4192, 969, 1292, 961, 3271, 2143,
	2022, 2453, 2178, 3278, 2379, 1290, 3507, 4020, 2155, 3943,
	3329, 3320, 3334, 3331, 3330, 3328, 3333, 3332, 2081, 3232,
	4018, 5, 3644, 3349, 2381, 3085, 3286, 2528, 753, 3348,
	3236, 3170, 3233, 3553, 962, 3059, 3750, 3220, 3547, 2408,
	3084, 2491, 2886, 923, 1813, 781, 748, 922, 2424, 1767,
	1870, 2960, 4089, 2962, 747, 3041, 2992, 3378, 2516, 3351,
	3537, 927, 2961, 3575, 42, 2441, 1044, 1171, 87, 2559,
	2496, 165, 1069, 1041, 1101, 1917, 2427, 743, 2429, 2911,
	1076, 3230, 2862, 2878, 2335, 2428, 2303, 2892, 2177, 1044,
	2302, 2139, 3033, 151, 43, 41, 2537, 2089, 1899, 2515,
	2498, 2416, 2576, 2953, 1111, 1134, 1129, 1802, 2928, 1782,
	1728, 102, 2431, 1546, 2183, 106, 107, 2114, 2103, 1471,
	1456, 2018, 1906, 1108, 1105, 1998, 976, 3235, 1140, 2513,
	1109, 763, 2487, 2488, 1137, 1135, 1136, 2899, 1147, 1801,
	1086, 1787, 758, 2409, 750, 1088, 1057, 1043, 1053, 1047,
	3745, 1750, 2860, 1529, 109, 1050, 2210, 2080, 85, 3737,
	1505, 101, 2191, 1280, 3564, 2030, 3508, 1068, 134, 169,
	1071, 129, 1891, 127, 1039, 128, 1220, 135, 93, 1081,
	108, 1051, 1049, 1048, 924, 84, 757, 1288, 1550, 100,
	1266, 4225, 3645, 740, 3317, 1080, 1555, 2530, 2531, 2532,
	2530, 3015, 3014, 4073, 2983, 683, 2574, 3637, 1472, 4174,
	1038, 1059, 3049, 1061, 3050, 4069, 2376, 2377, 2096, 4068,
	2095, 1173, 130, 2094, 1058, 3600, 136, 1102, 1176, 4074,
	3339, 2093, 2092, 2091, 1190, 1191, 1192, 2061, 1195, 1196,
	1197, 1198, 1236, 3336, 1201, 1202, 1203, 1204, 1205, 1206,
	1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216,
	1217, 1095, 1096, 2, 1062, 1040, 741, 3339, 680, 95,
	681, 1042, 4168, 1150, 1126, 95, 2858, 1151, 2627, 3712,
	3216, 2563, 3712, 4195, 1467, 2400, 1113, 1070, 1983, 1055,
	3337, 1237, 1177, 1180, 1181, 751, 130, 1118, 1125, 1184,
	1124, 3174, 1123, 4230, 2888, 4247, 4047, 2985, 113, 114,
	115, 1773, 118, 1193, 725, 124, 1482, 719, 193, 3343,
	4069, 675, 4178, 4190, 1771, 2562, 4215, 3337, 4229, 978,
	979, 980, 975, 738, 739, 1037, 725, 1055, 1094, 1098,
	926, 1774, 1761, 1032, 1033, 1034, 1035, 4177, 1488, 3511,
	1046, 1094, 1098, 926, 1772, 3510, 3343, 3005, 4176, 1127,
	2405, 2404, 719, 3008, 130, 3274, 4021, 2823, 2101, 3397,
	4143, 3939, 978, 979, 980, 3711, 3938, 1175, 3711, 1174,
	1083, 1084, 4129, 4175, 3650, 4205, 719, 3651, 3949, 2634,
	4172, 3669, 1458, 3658, 4117, 4125, 2556, 3948, 2148, 719,
	4152, 3423, 1880, 3268, 3269, 714, 2859, 1273, 2937, 1275,
	3668, 2936, 1117, 3267, 2938, 1119, 3275, 2448, 2449, 3048,
	1484, 86, 86, 2073, 2074, 88, 2631, 1803, 1478, 1804,
	2447, 1470, 3032, 3340, 86, 1261, 1262, 4157, 2561, 86,
	1256, 3277, 1030, 1285, 2902, 1029, 1244, 1272, 1274, 4039,
	2507, 1245, 1257, 699, 2949, 2466, 2465, 4155, 4133, 2632,
	1122, 3272, 1229, 1230, 3375, 1250, 697, 4161, 4162, 719,
	3340, 3373, 2903, 97, 2501, 1472, 3288, 3289, 2895, 2896,
	3288, 3289, 3405, 4156, 719, 97, 719, 3273, 719, 2378,
	3764, 1219, 3403, 1468, 1232, 1244, 1485, 1451, 1486, 1487,
	1245, 4133, 3106, 2072, 95, 95, 694, 2026, 1243, 2625,
	1242, 733, 2412, 1799, 1122, 709, 1114, 95, 1120, 2076,
	737, 3279, 95, 1116, 1115, 731, 3379, 2412, 1194, 3034,
	704, 720, 3991, 1973, 3992, 2993, 1732, 4196, 2538, 3018,
	3366, 707, 1277, 1263, 717, 2601, 2577, 2602, 3367, 2603,
	1258, 2583, 718, 1264, 4227, 1457, 1284, 1270, 4197, 1999,
	3376, 1271, 1283, 1251, 1259, 1260, 2581, 3374, 1087, 1450,
	1282, 1276, 1120, 1265, 1225, 3036, 720, 1974, 3923, 1975,
	2541, 3639, 3638, 1482, 2604, 3287, 1200, 1199, 2579, 3287,
	1149, 3635, 1160, 3022, 1130, 3023, 1269, 3290, 1131, 3290,
	720, 3290, 1735, 2628, 3716, 2629, 2584, 2425, 2580, 1884,
	1131, 4248, 684, 720, 686, 700, 1170, 722, 1169, 721,
	690, 2582, 688, 692, 701, 693, 2500, 687, 1520, 698,
	1506, 1168, 689, 702, 703, 706, 710, 711, 712, 708,
	705, 3550, 696, 723, 2986, 1167, 1166, 1165, 2027, 1164,
	1121, 1520, 3394, 1163, 1507, 1508, 1509, 1510, 1511, 1512,
	1513, 1515, 1514, 1516, 1517, 1097, 1091, 1089, 1162, 1157,
	3107, 1106, 2019, 1082, 4169, 4202, 1143, 1106, 1097, 1091,
	1089, 1104, 1106, 720, 2590, 2586, 2588, 2589, 2587, 2591,
	2592, 2593, 1142, 1148, 1289, 1478, 1289, 1289, 720, 1179,
	720, 2514, 720, 3037, 1121, 1142, 3634, 2410, 2411, 1178,
	2567, 2566, 2015, 1459, 3053, 3173, 1878, 1187, 3310, 3017,
	1877, 3276, 2410, 2411, 1477, 1474, 1475, 1476, 1481, 1483,
	1480, 1876, 1479, 3003, 3201, 2016, 1874, 2649, 1235, 674,
	4170, 1161, 1473, 1800, 1521, 1522, 1044, 1530, 1535, 1536,
	4034, 1539, 1541, 1542, 1543, 1544, 1545, 3589, 1548, 1549,
	1551, 1551, 3571, 1551, 1551, 1556, 1556, 1556, 1559, 1560,
	1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570,
	1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580,
	1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590,
	1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600,
	1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610,
	1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620,
	1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630,
	1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640,
	1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650,
	1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660,
	1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670,
	1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680,
	1681, 1682, 1059, 1128, 1278, 89, 1683, 1527, 1685, 1686,
	1687, 1688, 1689, 1448, 1449, 4046, 2984, 3341, 3342, 4131,
	1556, 1556, 1556, 1556, 1556, 1556, 1540, 2560, 724, 4092,
	3345, 3667, 3598, 3599, 2951, 1696, 1697, 1698, 1699, 1700,
	1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 715,
	1059, 4130, 1090, 1447, 3341, 3342, 1466, 3020, 2987, 3551,
	1149, 1531, 4131, 3710, 716, 1090, 3710, 3345, 2633, 2504,
	95, 2933, 1228, 3280, 1158, 2219, 3007, 3284, 2632, 1552,
	4160, 1553, 1554, 1231, 3283, 4241, 1240, 1723, 1246, 1247,
	1248, 1249, 1557, 1558, 4130, 1985, 1984, 1986, 1987, 1988,
	1241, 1477, 1474, 1475, 1476, 1481, 1483, 1480, 1254, 1479,
	2505, 1149, 1286, 1287, 94, 94, 1725, 2503, 3285, 1473,
	3006, 2898, 1731, 3281, 4159, 1760, 1905, 94, 3282, 2863,
	2865, 1044, 94, 3040, 1186, 1044, 2558, 3031, 1223, 1149,
	3030, 1044, 3495, 2835, 2151, 3182, 1721, 1791, 1684, 1234,
	1770, 2506, 3181, 2893, 1730, 1149, 2003, 682, 2454, 1520,
	1517, 2502, 126, 1148, 1761, 1523, 1524, 1525, 1526, 2192,
	3266, 2660, 1500, 1267, 2211, 1537, 1065, 121, 2031, 2213,
	1722, 2175, 3395, 2218, 2214, 1281, 2193, 2215, 2216, 2217,
	4060, 2119, 2212, 2220, 2221, 2222, 2223, 2224, 2225, 2226,
	2227, 2228, 1172, 3630, 3199, 2120, 1518, 1519, 2118, 2004,
	1239, 3563, 1739, 677, 1148, 2578, 1743, 2085, 2012, 1152,
	1142, 1805, 1043, 1159, 1154, 3060, 1741, 1742, 1155, 1153,
	106, 107, 3080, 1031, 2184, 1904, 1690, 1691, 1692, 1693,
	1694, 1695, 1148, 2184, 2976, 2669, 4206, 2660, 3043, 1156,
	1722, 1487, 1729, 3042, 122, 2555, 1149, 3759, 1148, 1486,
	1487, 2553, 4052, 1152, 1142, 3605, 1715, 3604, 1154, 109,
	2545, 1914, 1155, 1153, 1913, 1903, 1160, 1107, 1158, 4093,
	2167, 2156, 2157, 2158, 2159, 2169, 2160, 2161, 2162, 2174,
	2170, 2163, 2164, 2171, 2172, 2173, 2165, 2166, 2168, 1122,
	1218, 4198, 2864, 3043, 1881, 1882, 1883, 2550, 3042, 3062,
	2000, 1488, 2001, 4026, 4249, 2002, 4239, 1737, 3590, 4240,
	1763, 4238, 1897, 1253, 2190, 2550, 1060, 1740, 4094, 1738,
	1268, 1761, 1726, 1040, 1255, 2032, 4243, 1890, 1968, 2189,
	1149, 2024, 2557, 1919, 1766, 1920, 1042, 1922, 1924, 1488,
	2554, 1928, 1930, 1932, 1934, 1936, 1909, 1224, 1993, 1148,
	95, 1185, 4027, 1238, 1222, 1182, 1950, 1289, 2552, 1991,
	2340, 1958, 1959, 1796, 1797, 2417, 2418, 1964, 1965, 1908,
	2117, 1865, 3072, 3071, 3070, 1149, 3664, 3064, 3665, 3068,
	3931, 3063, 3930, 3061, 1907, 1907, 3370, 1488, 3066, 1873,
	1512, 1513, 1515, 1514, 1516, 1517, 3921, 3065, 3681, 3680,
	4250, 1888, 1488, 3612, 3611, 1887, 1900, 3601, 3318, 1744,
	1886, 2107, 2108, 2105, 2106, 3306, 3067, 3069, 2008, 1992,
	2006, 2007, 2005, 2009, 2010, 2011, 2107, 2108, 2639, 2640,
	1990, 1954, 2958, 1148, 2957, 1911, 2956, 2104, 2510, 1142,
	1145, 1146, 1994, 1106, 978, 979, 980, 1139, 1143, 1485,
	1980, 1486, 1487, 2020, 1510, 1511, 1512, 1513, 1515, 1514,
	1516, 1517, 1946, 1221, 1978, 1949, 1977, 1951, 1138, 1494,
	1495, 1496, 1497, 1498, 1499, 1493, 1490, 1976, 1148, 1121,
	1966, 1506, 1879, 3052, 1142, 1145, 1146, 1485, 1106, 1486,
	1487, 1960, 1139, 1143, 130, 1761, 1125, 1957, 1124, 1956,
	1123, 1955, 1926, 1453, 1736, 1507, 1508, 1509, 1510, 1511,
	1512, 1513, 1515, 1514, 1516, 1517, 1488, 725, 2037, 2340,
	3595, 1979, 725, 2337, 1799, 2884, 4226, 1289, 1289, 2940,
	4199, 725, 2339, 2033, 2034, 1485, 4055, 1486, 1487, 4054,
	2696, 2059, 1506, 87, 3082, 4030, 87, 2038, 973, 2526,
	1485, 2525, 1486, 1487, 2045, 2046, 2047, 2524, 192, 2523,
	2522, 1506, 2521, 4029, 2058, 1776, 1507, 1508, 1509, 1510,
	1511, 1512, 1513, 1515, 1514, 1516, 1517, 1488, 4028, 1506,
	3926, 131, 1502, 2710, 1503, 1507, 1508, 1509, 1510, 1511,
	1512, 1513, 1515, 1514, 1516, 1517, 3910, 174, 1504, 1518,
	1519, 1501, 3909, 1507, 1508, 1509, 1510, 1511, 1512, 1513,
	1515, 1514, 1516, 1517, 1777, 2708, 1488, 2146, 2146, 2144,
	2144, 3758, 2147, 3756, 42, 1484, 1761, 42, 1508, 1509,
	1510, 1511, 1512, 1513, 1515, 1514, 1516, 1517, 2109, 3677,
	2656, 1720, 2035, 2942, 1723, 1761, 1488, 1719, 1506, 2039,
	2648, 2041, 2042, 2043, 2044, 103, 1718, 171, 2048, 2658,
	172, 105, 4186, 1761, 1485, 104, 1486, 1487, 1506, 2657,
	2060, 4048, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1515,
	1514, 1516, 1517, 2884, 1761, 3958, 191, 2230, 1488, 1484,
	1761, 2244, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1515,
	1514, 1516, 1517, 1721, 1507, 1508, 1509, 1510, 1511, 1512,
	1513, 1515, 1514, 1516, 1517, 2884, 4124, 3957, 85, 1488,
	3609, 85, 3594, 2086, 3380, 1485, 1761, 1486, 1487, 3377,
	112, 3309, 2179, 2116, 2066, 2067, 3308, 1722, 4211, 1761,
	3914, 111, 2967, 110, 2884, 4103, 3913, 2175, 2122, 2954,
	2124, 2125, 2126, 2127, 2128, 2129, 2131, 2133, 2134, 2135,
	2136, 2137, 2138, 2121, 1485, 1717, 1486, 1487, 1710, 103,
	2622, 2327, 2328, 2329, 2330, 2331, 2884, 4099, 3656, 104,
	3953, 2350, 1488, 192, 2150, 2349, 2614, 2254, 2352, 2613,
	2348, 2355, 2356, 1488, 1485, 2572, 1486, 1487, 1488, 2571,
	175, 4011, 1761, 1780, 1488, 1548, 131, 2706, 2407, 181,
	2384, 4209, 1761, 3648, 4045, 1531, 1761, 2994, 2665, 1227,
	2336, 1233, 174, 2194, 2195, 2196, 2197, 2062, 2373, 1488,
	2028, 2338, 1989, 2185, 2229, 2246, 1485, 2208, 1486, 1487,
	1761, 3934, 1761, 2884, 3922, 2972, 2167, 2156, 2157, 2158,
	2159, 2169, 2160, 2161, 2162, 2174, 2170, 2163, 2164, 2171,
	2172, 2173, 2165, 2166, 2168, 3648, 1761, 1485, 1981, 1486,
	1487, 1971, 2347, 2373, 1779, 2353, 2354, 2433, 2884, 3646,
	2550, 1761, 171, 1461, 1967, 172, 1761, 2462, 2350, 1963,
	4139, 1761, 2422, 1962, 106, 107, 2664, 2348, 3569, 1761,
	2123, 1488, 2790, 1761, 2900, 1488, 3299, 3298, 3296, 3297,
	1488, 191, 3294, 3295, 3231, 2463, 106, 107, 1961, 1488,
	2383, 4137, 1761, 3294, 3293, 3562, 1488, 2395, 2908, 1761,
	1485, 1488, 1486, 1487, 2115, 1778, 1488, 166, 2632, 3016,
	3562, 1485, 105, 1486, 1487, 1279, 1485, 3566, 1486, 1487,
	1111, 1058, 1485, 1488, 1486, 1487, 1869, 2997, 2435, 2990,
	2991, 2884, 2883, 111, 2472, 2473, 2474, 2475, 3261, 2467,
	1488, 2468, 2469, 2470, 2471, 1061, 1484, 1485, 2632, 1486,
	1487, 2908, 2457, 1111, 2371, 2477, 2458, 4087, 2479, 2480,
	2481, 2482, 4059, 4135, 1761, 2439, 1058, 4004, 1761, 2149,
	1761, 2396, 4002, 1761, 1488, 2929, 2493, 1761, 2389, 2884,
	2390, 3999, 1761, 2908, 2398, 3565, 2402, 2461, 3981, 1761,
	1488, 2900, 2539, 3536, 1761, 175, 3515, 2499, 3529, 1761,
	2420, 1869, 1868, 3296, 181, 1811, 1810, 1484, 1488, 2444,
	2445, 1095, 1096, 3204, 2443, 3526, 1761, 2460, 2459, 1485,
	1488, 1486, 1487, 1485, 2929, 1486, 1487, 1045, 1485, 2551,
	1486, 1487, 3524, 1761, 1488, 2446, 2907, 1485, 1488, 1486,
	1487, 2536, 2509, 2930, 1485, 2881, 1486, 1487, 3613, 1485,
	1488, 1486, 1487, 2932, 1485, 1488, 1486, 1487, 2790, 105,
	2494, 2693, 2483, 2485, 2486, 2490, 3487, 1761, 3562, 2512,
	2508, 1485, 2544, 1486, 1487, 2547, 2692, 2548, 97, 2520,
	1488, 2550, 3485, 1761, 1488, 2533, 2415, 1765, 1485, 2374,
	1486, 1487, 2930, 2550, 2564, 2494, 2543, 2908, 2546, 2542,
	1150, 4200, 2632, 2149, 1151, 3614, 3615, 3616, 2087, 2071,
	95, 3321, 3481, 1761, 1907, 2014, 2568, 2565, 1488, 1798,
	2569, 2570, 1485, 2879, 1486, 1487, 3478, 1761, 1488, 1769,
	3476, 1761, 166, 1133, 1762, 1764, 1132, 95, 1485, 4165,
	1486, 1487, 3474, 1761, 1488, 4106, 167, 3472, 1761, 3945,
	1768, 3911, 2637, 179, 3771, 1942, 1485, 1488, 1486, 1487,
	3629, 1044, 1044, 1044, 2575, 3626, 3607, 1488, 1485, 3428,
	1486, 1487, 3470, 1761, 3427, 3372, 3468, 1761, 1488, 1871,
	2492, 1541, 1485, 1541, 1486, 1487, 1485, 3368, 1486, 1487,
	1488, 3323, 3319, 2998, 187, 2489, 1795, 2484, 1485, 2652,
	1486, 1487, 2478, 1485, 1488, 1486, 1487, 2476, 2607, 1488,
	3466, 1761, 1943, 1944, 1945, 1812, 2964, 1996, 2350, 3617,
	3464, 1761, 2349, 1902, 1488, 1898, 1867, 2655, 1485, 1488,
	1486, 1487, 1485, 123, 1486, 1487, 3584, 168, 173, 170,
	176, 177, 178, 180, 182, 183, 184, 185, 1223, 3462,
	1761, 3576, 3577, 186, 188, 189, 190, 2963, 3946, 3460,
	1761, 2507, 2624, 1488, 2675, 2387, 1485, 4221, 1486, 1487,
	3458, 1761, 3618, 3619, 3620, 4219, 1485, 2630, 1486, 1487,
	4193, 2690, 3456, 1761, 2064, 3412, 4067, 3986, 3579, 1488,
	4063, 3315, 1485, 2638, 1486, 1487, 3454, 1761, 1952, 3314,
	3313, 3452, 1761, 3231, 2977, 1485, 2644, 1486, 1487, 1488,
	1938, 2964, 2641, 2642, 2643, 1485, 3531, 1486, 1487, 2608,
	2116, 3450, 1761, 3582, 3581, 3253, 1485, 3251, 1486, 1487,
	3254, 3250, 3252, 1997, 2645, 3249, 2647, 3736, 1485, 3735,
	1486, 1487, 1488, 679, 1775, 2650, 3947, 2651, 2406, 1488,
	2025, 2065, 1485, 1488, 1486, 1487, 1761, 1485, 2393, 1486,
	1487, 3221, 3223, 1939, 1940, 1941, 2036, 2668, 3749, 1063,
	3224, 167, 1485, 2040, 1486, 1487, 3570, 1485, 179, 1486,
	1487, 3448, 1761, 3209, 2051, 2052, 2053, 2054, 2055, 2056,
	2057, 1488, 3734, 4025, 3208, 2616, 2617, 3751, 1488, 2834,
	2619, 3434, 1761, 1488, 2653, 3255, 3558, 2917, 2918, 2620,
	3555, 1485, 3218, 1486, 1487, 2013, 1488, 742, 3554, 187,
	1064, 1028, 1488, 2704, 1066, 3292, 2947, 2968, 1189, 2822,
	2192, 2866, 1067, 1488, 3410, 1761, 2600, 1485, 1488, 1486,
	1487, 2855, 1761, 1488, 1075, 2853, 1761, 2193, 2599, 2598,
	1044, 2146, 2597, 2144, 2596, 2869, 2595, 1485, 1074, 1486,
	1487, 2594, 168, 173, 170, 176, 177, 178, 180, 182,
	183, 184, 185, 1188, 3388, 2905, 2906, 2867, 186, 188,
	189, 190, 2963, 3527, 2433, 3046, 2646, 1044, 2925, 1452,
	1485, 4043, 1486, 1487, 3004, 2828, 1761, 1485, 1488, 1486,
	1487, 1485, 131, 1486, 1487, 2112, 2110, 2111, 2805, 1761,
	2870, 1488, 2872, 2904, 2797, 1761, 1488, 2885, 3560, 2417,
	2418, 2115, 1488, 103, 103, 2788, 1761, 105, 1488, 105,
	2786, 1761, 4235, 104, 104, 2773, 1761, 3311, 2611, 1485,
	3538, 1486, 1487, 1488, 4142, 4044, 1485, 3941, 1486, 1487,
	3291, 1485, 2636, 1486, 1487, 2857, 42, 1729, 1488, 2921,
	2399, 2070, 1488, 3207, 1485, 2922, 1486, 1487, 2924, 2894,
	1485, 3206, 1486, 1487, 2069, 110, 2877, 111, 2950, 2952,
	2923, 1485, 4010, 1486, 1487, 2090, 1485, 4009, 1486, 1487,
	3493, 1485, 1488, 1486, 1487, 2897, 3989, 3757, 2943, 1722,
	112, 2882, 3002, 2771, 1761, 3755, 2927, 1488, 2769, 1761,
	3754, 111, 3746, 110, 2767, 1761, 3747, 3627, 112, 2931,
	2765, 1761, 3559, 3557, 2934, 3324, 2499, 2534, 1488, 111,
	3548, 110, 2941, 1488, 2944, 2763, 1761, 2187, 2966, 105,
	3013, 1885, 2188, 2969, 2970, 112, 1485, 2900, 1486, 1487,
	2761, 1761, 2955, 1488, 2759, 1761, 111, 3720, 1073, 1485,
	2881, 1486, 1487, 3110, 1485, 2694, 1486, 1487, 2965, 2385,
	1485, 1792, 1486, 1487, 1488, 1784, 1485, 4222, 1486, 1487,
	2250, 1488, 4223, 2973, 3489, 2974, 3, 2978, 2979, 2980,
	112, 1485, 3010, 1486, 1487, 1488, 4031, 1890, 3593, 2757,
	1761, 111, 2084, 110, 1761, 10, 1485, 99, 1486, 1487,
	1485, 105, 1486, 1487, 2999, 3000, 4223, 4222, 116, 117,
	2755, 1761, 1, 1036, 2082, 2753, 1761, 9, 1455, 3056,
	3057, 3009, 2083, 1454, 3076, 8, 3597, 4154, 695, 2375,
	1485, 1488, 1486, 1487, 1727, 2751, 1761, 1488, 4194, 4150,
	4151, 1982, 1972, 3659, 1488, 1485, 2301, 1486, 1487, 3942,
	2333, 3035, 3327, 3073, 2540, 3054, 2749, 1761, 1488, 3625,
	2497, 1141, 1488, 2747, 1761, 3038, 1485, 156, 1486, 1487,
	1488, 1485, 2455, 1486, 1487, 2456, 4119, 2745, 1761, 120,
	2365, 3091, 3092, 3093, 3094, 3095, 3096, 3097, 3098, 3099,
	3100, 1485, 1099, 1486, 1487, 119, 1144, 1252, 1762, 2372,
	2535, 3108, 3649, 2948, 2464, 1817, 1815, 1816, 1814, 1819,
	3074, 3011, 1485, 1818, 1486, 1487, 4091, 3396, 2695, 1485,
	3494, 1486, 1487, 2743, 1761, 2075, 732, 2920, 726, 2741,
	1761, 1488, 194, 1485, 1806, 1486, 1487, 3918, 1785, 2397,
	2068, 1183, 685, 3300, 2573, 691, 2403, 1488, 1538, 2063,
	2739, 1761, 3205, 2935, 2734, 1761, 3150, 3058, 3152, 1093,
	3112, 1488, 2730, 1761, 3168, 3075, 3044, 1085, 2386, 3045,
	2871, 1092, 3919, 3239, 3163, 3164, 3165, 3166, 1488, 1485,
	2989, 1486, 1487, 3552, 3217, 1485, 3219, 1486, 1487, 2419,
	2887, 3222, 1485, 1488, 1486, 1487, 3215, 2423, 4024, 2426,
	3748, 3186, 2090, 4104, 2945, 1781, 1485, 3514, 1486, 1487,
	1485, 3175, 1486, 1487, 2667, 2182, 1528, 2432, 1485, 3177,
	1486, 1487, 2433, 2728, 1761, 3101, 928, 1056, 3715, 2102,
	2336, 1488, 2336, 755, 754, 752, 2873, 3148, 2901, 2721,
	1761, 2338, 1492, 2338, 3238, 1491, 87, 1488, 2511, 2433,
	2433, 2433, 2433, 2433, 3631, 1488, 963, 3158, 3159, 3160,
	3161, 3162, 2861, 1793, 3186, 2912, 2910, 2909, 2609, 2433,
	3425, 3176, 2433, 3178, 2440, 3578, 3574, 4146, 2434, 1485,
	2430, 1486, 1487, 3185, 2880, 2719, 1761, 3243, 1488, 914,
	2024, 3260, 913, 1488, 764, 1485, 756, 1486, 1487, 746,
	977, 912, 3203, 2435, 3197, 3055, 911, 1488, 3354, 1485,
	3355, 1486, 1487, 3019, 3369, 3021, 2946, 3365, 3213, 1469,
	3212, 3210, 1746, 3424, 1749, 1488, 1485, 1047, 1486, 1487,
	2435, 2435, 2435, 2435, 2435, 744, 3344, 3225, 3226, 3416,
	2394, 1485, 3242, 1486, 1487, 1488, 3352, 3414, 3245, 3246,
	2435, 3248, 1112, 2435, 3244, 106, 107, 3247, 3264, 3256,
	1049, 1048, 3198, 3200, 3202, 3262, 3393, 4050, 3263, 2635,
	3422, 1488, 1745, 4057, 3270, 3302, 3211, 1488, 3335, 1485,
	2851, 1486, 1487, 3643, 3316, 3303, 2959, 2995, 2527, 3301,
	1058, 3304, 3305, 1488, 69, 1485, 46, 1486, 1487, 2850,
	1488, 2090, 4019, 1485, 4088, 1486, 1487, 906, 2585, 3356,
	903, 3353, 3717, 3357, 3718, 3719, 2499, 2846, 3171, 2605,
	2606, 1488, 3172, 2610, 4070, 3325, 3363, 3228, 3346, 4071,
	902, 4072, 2239, 1465, 1462, 2615, 1485, 2845, 1486, 1487,
	1488, 1485, 2618, 1486, 1487, 4167, 1072, 3234, 2077, 1078,
	1078, 3384, 3234, 3381, 3383, 1485, 98, 1486, 1487, 3391,
	36, 35, 34, 2844, 33, 32, 3401, 26, 2621, 2843,
	25, 3398, 3399, 1485, 3400, 1486, 1487, 3402, 1488, 3404,
	24, 3406, 23, 22, 29, 2842, 19, 3417, 3418, 3419,
	3420, 3421, 2841, 1485, 21, 1486, 1487, 2913, 2916, 2917,
	2918, 2914, 20, 2915, 2919, 18, 3338, 3576, 3577, 4189,
	4234, 125, 55, 2832, 52, 50, 133, 132, 53, 1485,
	1541, 1486, 1487, 49, 1541, 1485, 2654, 1486, 1487, 1226,
	2659, 47, 2831, 96, 31, 30, 17, 16, 3326, 15,
	3539, 1485, 3541, 1486, 1487, 14, 13, 12, 1485, 11,
	1486, 1487, 7, 2662, 6, 2663, 3509, 39, 38, 37,
	28, 2671, 27, 3513, 40, 2673, 2674, 4, 2982, 1485,
	2830, 1486, 1487, 2529, 2680, 2681, 2682, 2683, 2684, 2685,
	2686, 2687, 2688, 2689, 0, 2691, 0, 1488, 1485, 0,
	1486, 1487, 0, 0, 0, 0, 3237, 0, 0, 0,
	0, 1723, 2433, 0, 0, 0, 0, 1488, 2697, 2698,
	2699, 2700, 0, 2702, 2703, 3591, 2705, 3556, 3549, 3544,
	2707, 3540, 0, 3542, 2712, 2713, 1485, 2714, 1486, 1487,
	2717, 2718, 2720, 2722, 2723, 2724, 2725, 2726, 2727, 2729,
	2731, 2732, 2733, 2735, 3347, 2737, 2738, 2740, 2742, 2744,
	2746, 2748, 2750, 2752, 2754, 2756, 2758, 2760, 2762, 2764,
	2766, 2768, 2770, 2772, 2774, 2775, 2776, 3583, 2778, 3585,
	2780, 3580, 2782, 2783, 3561, 2785, 2787, 2789, 3356, 2829,
	3353, 2792, 3357, 2435, 3516, 2796, 3518, 3519, 3520, 2801,
	2802, 2803, 2804, 3608, 3592, 3610, 3386, 3387, 3586, 2826,
	1488, 0, 2815, 2816, 2817, 2818, 2819, 2820, 3546, 3392,
	2824, 2825, 3602, 3603, 1488, 0, 0, 0, 2827, 1488,
	0, 0, 0, 2833, 1488, 0, 0, 0, 2836, 2837,
	2838, 2839, 2840, 0, 0, 1485, 0, 1486, 1487, 2847,
	2848, 3573, 2849, 0, 1488, 2852, 2854, 2397, 1488, 2856,
	0, 0, 1488, 3653, 3654, 1485, 0, 1486, 1487, 2868,
	3587, 3588, 1488, 0, 0, 3636, 1488, 0, 0, 3640,
	3641, 3642, 0, 0, 3655, 0, 1488, 0, 0, 0,
	0, 1488, 0, 0, 0, 1488, 0, 2913, 2916, 2917,
	2918, 2914, 2821, 2915, 2919, 0, 0, 0, 0, 3671,
	0, 0, 0, 0, 0, 0, 2814, 0, 0, 1488,
	0, 2813, 0, 1488, 0, 0, 2812, 0, 0, 0,
	0, 0, 0, 1488, 0, 0, 0, 1488, 0, 0,
	3682, 0, 0, 0, 0, 0, 2811, 0, 0, 0,
	2810, 0, 0, 2926, 2809, 1488, 0, 0, 1485, 1488,
	1486, 1487, 3704, 0, 2808, 0, 0, 1488, 2807, 0,
	0, 0, 1485, 0, 1486, 1487, 0, 1485, 2806, 1486,
	1487, 0, 1485, 2800, 1486, 1487, 0, 2799, 3733, 0,
	0, 3740, 0, 3742, 0, 3723, 0, 3724, 3725, 3726,
	0, 3713, 1485, 0, 1486, 1487, 1485, 0, 1486, 1487,
	1485, 2798, 1486, 1487, 0, 2795, 3238, 0, 3743, 87,
	1485, 3238, 1486, 1487, 1485, 2794, 1486, 1487, 2975, 2793,
	0, 0, 0, 0, 1485, 1488, 1486, 1487, 0, 1485,
	0, 1486, 1487, 1485, 0, 1486, 1487, 2791, 1488, 0,
	2146, 2784, 2144, 1488, 3773, 3744, 3753, 3765, 3752, 2781,
	3676, 3763, 1488, 0, 0, 3760, 3762, 1485, 0, 1486,
	1487, 1485, 0, 1486, 1487, 0, 0, 1488, 0, 3632,
	3633, 1485, 0, 1486, 1487, 1485, 3925, 1486, 1487, 0,
	0, 0, 3777, 0, 3024, 3025, 3026, 3027, 3028, 3029,
	42, 0, 0, 1485, 0, 1486, 1487, 1485, 0, 1486,
	1487, 0, 0, 0, 0, 1485, 0, 1486, 1487, 0,
	0, 0, 2090, 3039, 0, 3917, 3916, 2779, 0, 0,
	0, 0, 0, 0, 3944, 0, 0, 3932, 0, 0,
	2777, 3915, 3937, 3936, 0, 2736, 0, 3047, 0, 0,
	0, 0, 0, 0, 2716, 0, 0, 0, 0, 3983,
	3984, 3086, 3087, 3088, 3089, 3090, 0, 0, 3767, 2715,
	0, 3741, 0, 0, 0, 3927, 3928, 3929, 2146, 0,
	2144, 3105, 3987, 1485, 0, 1486, 1487, 0, 0, 0,
	0, 1489, 0, 3774, 3775, 0, 1485, 0, 1486, 1487,
	0, 1485, 0, 1486, 1487, 0, 0, 0, 0, 0,
	1485, 0, 1486, 1487, 4032, 3238, 0, 3234, 3769, 3990,
	4023, 0, 1547, 3993, 0, 1485, 0, 1486, 1487, 1559,
	1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569,
	1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1579, 1580,
	1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590,
	1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600,
	1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610,
	1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620,
	1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630,
	1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640,
	1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650,
	1651, 1652, 1653, 1654, 1655, 1656, 1658, 1659, 1660, 1661,
	1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671,
	1672, 1673, 1679, 1680, 1681, 1682, 1696, 1697, 1698, 1699,
	1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709,
	3988, 1058, 4033, 4007, 1488, 4017, 4016, 0, 3237, 1751,
	4013, 0, 4015, 3237, 4051, 1488, 0, 0, 0, 0,
	1488, 0, 0, 1759, 0, 3920, 1752, 0, 0, 0,
	0, 3240, 87, 0, 0, 0, 0, 0, 1723, 1488,
	0, 0, 4035, 0, 0, 0, 1751, 4036, 0, 3258,
	0, 2391, 2392, 1758, 1756, 1757, 1753, 0, 1754, 4040,
	1759, 1488, 4053, 1752, 0, 0, 0, 4056, 0, 0,
	4058, 0, 0, 0, 0, 0, 0, 0, 3924, 0,
	0, 1755, 0, 0, 0, 0, 0, 0, 1747, 1748,
	1758, 1756, 1757, 1753, 4065, 1754, 2711, 0, 0, 0,
	0, 0, 4075, 0, 0, 0, 0, 2709, 0, 0,
	0, 0, 2701, 42, 0, 0, 0, 0, 1755, 0,
	0, 0, 0, 0, 0, 0, 4076, 0, 0, 4077,
	4101, 2672, 3312, 0, 0, 87, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4086, 0,
	0, 0, 1485, 2666, 1486, 1487, 0, 0, 3350, 1783,
	0, 4095, 0, 1485, 1723, 1486, 1487, 4037, 1485, 4107,
	1486, 1487, 3364, 4105, 0, 3944, 4121, 3390, 4110, 4118,
	4115, 4112, 4111, 4109, 4114, 4113, 0, 1485, 0, 1486,
	1487, 0, 3382, 0, 0, 3385, 0, 1872, 0, 3407,
	3408, 0, 3409, 3411, 3413, 4140, 0, 3237, 4163, 1485,
	0, 1486, 1487, 4153, 0, 4145, 42, 4132, 4158, 0,
	0, 0, 0, 0, 4171, 0, 0, 0, 4173, 0,
	3426, 0, 0, 4184, 0, 3429, 1488, 3431, 3432, 3433,
	3435, 3436, 3437, 3438, 3439, 3440, 3441, 3442, 3443, 3444,
	3445, 3446, 3447, 3449, 3451, 3453, 3455, 3457, 3459, 3461,
	3463, 3465, 3467, 3469, 3471, 3473, 3475, 3477, 3479, 3480,
	3482, 3483, 3484, 3486, 4132, 4204, 3488, 2024, 3490, 3491,
	3492, 4203, 4214, 3496, 3497, 3498, 3499, 3500, 3501, 3502,
	3503, 3504, 3505, 3506, 4220, 2146, 4218, 2144, 4207, 4217,
	4216, 4213, 3512, 4188, 4183, 4228, 3517, 4042, 4097, 0,
	3521, 3522, 0, 3523, 3525, 4236, 3528, 3530, 4102, 3532,
	3533, 3534, 3535, 4244, 4242, 2029, 3234, 0, 2661, 3543,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4061, 0, 4253, 4254, 3984, 4252, 0, 0, 0,
	0, 4132, 0, 2146, 0, 2144, 0, 4251, 0, 0,
	3545, 0, 0, 0, 3567, 3568, 4049, 0, 3572, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1485, 0, 1486, 1487, 4179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4096, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 959, 0, 0, 3606, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3621, 0, 0, 3622, 3623,
	3624, 0, 0, 0, 3647, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 197, 0,
	0, 197, 0, 0, 0, 730, 0, 0, 0, 0,
	736, 0, 0, 0, 0, 0, 0, 0, 0, 3666,
	0, 197, 3670, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 197, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3683, 0, 0, 0,
	0, 4201, 0, 0, 736, 197, 736, 0, 0, 0,
	2097, 2098, 2099, 2100, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2113, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3706, 2152, 2153, 0, 0, 0, 0, 2176, 0, 0,
	2180, 2181, 0, 3714, 0, 2186, 0, 0, 0, 0,
	3721, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207,
	0, 2209, 0, 0, 0, 2231, 2232, 2233, 2234, 2235,
	2236, 2237, 2238, 2240, 0, 2245, 0, 2247, 2248, 2249,
	0, 2251, 2252, 2253, 1835, 2255, 2256, 2257, 2258, 2259,
	2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269,
	2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279,
	2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289,
	2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299,
	2300, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312,
	2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322,
	2323, 2324, 2325, 2326, 0, 0, 0, 0, 0, 2332,
	0, 2334, 0, 2341, 2342, 2343, 2344, 2345, 2346, 3933,
	0, 0, 0, 0, 0, 0, 0, 0, 3940, 0,
	0, 0, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364,
	0, 2366, 2367, 2368, 2369, 2370, 0, 0, 3950, 3951,
	3952, 0, 3954, 0, 3955, 3956, 0, 0, 0, 0,
	3959, 3960, 3961, 3962, 3963, 3964, 3965, 3966, 3967, 3968,
	3969, 3970, 3971, 3972, 3973, 3974, 3975, 3976, 3977, 3978,
	3979, 3980, 1078, 3982, 3985, 0, 0, 0, 0, 0,
	1822, 0, 0, 0, 0, 0, 0, 0, 0, 3994,
	3995, 3996, 3997, 3998, 4000, 4001, 4003, 4005, 4006, 4008,
	192, 0, 0, 4012, 0, 2413, 2414, 4014, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 0, 153, 0, 0, 0, 0,
	0, 2452, 0, 0, 0, 0, 0, 0, 0, 174,
	0, 0, 4041, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1836, 0, 0, 0, 0, 0,
	0, 0, 0, 164, 0, 0, 0, 0, 0, 152,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2495, 0, 0, 0, 0, 0, 171,
	0, 0, 172, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 140, 141, 163, 162, 191, 1849,
	1852, 1853, 1854, 1855, 1856, 1857, 0, 1858, 1859, 1861,
	1862, 1860, 1863, 1864, 1837, 1838, 1839, 1840, 1820, 1821,
	1850, 0, 1823, 0, 1824, 1825, 1826, 1827, 1828, 1829,
	1830, 1831, 1832, 0, 0, 1833, 1841, 1842, 1843, 1844,
	0, 1845, 1846, 1847, 1848, 0, 0, 1834, 0, 0,
	0, 0, 0, 0, 0, 0, 4187, 0, 0, 0,
	0, 0, 0, 0, 0, 1835, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	138, 160, 145, 137, 0, 158, 159, 0, 0, 0,
	0, 4062, 175, 0, 0, 0, 0, 0, 0, 4066,
	0, 181, 146, 0, 0, 0, 0, 197, 0, 197,
	0, 0, 0, 0, 0, 0, 149, 147, 142, 143,
	144, 148, 0, 4081, 0, 0, 0, 0, 139, 4084,
	0, 4085, 0, 0, 0, 0, 0, 150, 0, 0,
	0, 0, 0, 0, 0, 0, 736, 0, 736, 736,
	0, 0, 0, 0, 4100, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	736, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	4126, 4127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4134, 4136, 4138, 0, 0, 1533,
	0, 1822, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4144, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4166, 0, 0, 0, 0, 166,
	0, 0, 1851, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2670, 0, 4185, 0, 0, 0, 0, 0, 0, 0,
	2676, 2677, 2678, 2679, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1836, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4208, 4210, 4212, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1547, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 161, 0, 0, 0, 4233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4245, 4246, 0,
	1849, 1852, 1853, 1854, 1855, 1856, 1857, 0, 1858, 1859,
	1861, 1862, 1860, 1863, 1864, 1837, 1838, 1839, 1840, 1820,
	1821, 1850, 0, 1823, 0, 1824, 1825, 1826, 1827, 1828,
	1829, 1830, 1831, 1832, 0, 0, 1833, 1841, 1842, 1843,
	1844, 0, 1845, 1846, 1847, 1848, 0, 0, 1834, 0,
	0, 0, 1533, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 154, 0, 0, 155, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 0, 0, 0, 736, 736, 167, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 197, 0, 0, 0, 0,
	0, 1783, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 736, 0, 0, 197, 0, 187, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 736, 0, 0, 0,
	0, 0, 0, 197, 0, 0, 0, 736, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 168,
	173, 170, 176, 177, 178, 180, 182, 183, 184, 185,
	736, 0, 736, 0, 0, 186, 188, 189, 190, 0,
	736, 0, 0, 1533, 736, 0, 0, 736, 736, 736,
	736, 0, 736, 0, 736, 736, 0, 736, 736, 736,
	736, 736, 736, 1851, 0, 0, 0, 0, 0, 0,
	1533, 736, 736, 1533, 736, 1533, 197, 736, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 197, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 736,
	0, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 736, 0, 0, 736, 0, 197, 197, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 197, 0, 0, 0, 0, 0,
	0, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 736,
	0, 0, 0, 3051, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3077, 3078, 3079, 0, 0, 3081, 0, 0, 3083, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3102, 3103,
	3104, 0, 0, 0, 0, 0, 0, 3109, 0, 0,
	0, 0, 3111, 0, 0, 3113, 3114, 3115, 0, 0,
	0, 3116, 3117, 0, 0, 3118, 0, 3119, 0, 0,
	0, 0, 0, 0, 3120, 0, 3121, 0, 0, 0,
	3122, 0, 3123, 0, 0, 3124, 0, 3125, 0, 3126,
	0, 3127, 0, 3128, 0, 3129, 0, 3130, 0, 3131,
	0, 3132, 0, 3133, 0, 3134, 0, 3135, 0, 3136,
	0, 3137, 0, 3138, 0, 3139, 0, 3140, 0, 3141,
	0, 0, 0, 3142, 0, 3143, 0, 3144, 0, 0,
	3145, 0, 3146, 0, 3147, 0, 2304, 3149, 0, 0,
	3151, 0, 0, 3153, 3154, 3155, 3156, 0, 0, 736,
	736, 3157, 2304, 2304, 2304, 2304, 2304, 0, 0, 0,
	0, 0, 0, 0, 736, 0, 0, 3167, 0, 0,
	0, 0, 0, 197, 0, 3180, 0, 0, 3184, 0,
	0, 0, 0, 0, 0, 0, 0, 3187, 3188, 3189,
	3190, 3191, 3192, 0, 0, 0, 3193, 3194, 0, 3195,
	0, 3196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 736, 0, 1078, 0, 0, 0, 0,
	0, 0, 0, 1533, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3229, 0, 0, 0,
	0, 1533, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3259, 0, 0, 0, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2988, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 0,
	153, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 174, 0, 0, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1889, 0,
	0, 0, 3322, 0, 0, 0, 0, 0, 0, 0,
	131, 0, 153, 0, 0, 0, 0, 0, 164, 0,
	0, 0, 0, 0, 152, 0, 174, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 172, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2351, 0, 0,
	164, 0, 0, 0, 0, 0, 152, 0, 0, 1893,
	1894, 163, 162, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 172,
	0, 0, 0, 0, 0, 0, 0, 0, 3415, 0,
	0, 0, 0, 197, 0, 0, 0, 0, 736, 0,
	0, 1893, 1894, 163, 162, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3430, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 197, 0,
	0, 736, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 197, 0, 0,
	0, 736, 0, 0, 2351, 197, 0, 197, 0, 197,
	197, 0, 0, 0, 157, 1895, 160, 0, 1892, 0,
	158, 159, 0, 0, 736, 0, 0, 175, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 1895, 160, 0,
	1892, 0, 158, 159, 0, 0, 0, 0, 0, 175,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 0,
	0, 0, 736, 0, 0, 0, 0, 0, 0, 736,
	736, 736, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 958, 736,
	0, 0, 0, 0, 0, 736, 736, 0, 0, 736,
	0, 736, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 736, 0, 166, 0, 0, 736, 0, 0,
	713, 736, 736, 0, 0, 3628, 735, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 166, 0, 3652, 197,
	0, 0, 0, 0, 0, 0, 197, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 197, 197, 0,
	735, 197, 735, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 197, 0, 0, 0, 0, 0, 0,
	197, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	161, 0, 0, 0, 0, 0, 3672, 915, 3673, 0,
	3674, 0, 3675, 0, 0, 0, 197, 0, 0, 0,
	3678, 3679, 0, 197, 0, 0, 0, 0, 736, 0,
	3684, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 161, 0, 3685, 0, 3686, 0, 3687, 0,
	3688, 0, 3689, 0, 3690, 0, 3691, 0, 3692, 0,
	3693, 0, 3694, 0, 3695, 0, 3696, 0, 3697, 0,
	3698, 0, 3699, 0, 3700, 734, 0, 3701, 0, 0,
	0, 3702, 0, 3703, 0, 0, 0, 0, 0, 3705,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1533, 0, 2351, 0, 0, 0, 0, 154,
	0, 3722, 155, 0, 0, 0, 0, 0, 0, 0,
	3727, 0, 3728, 3729, 0, 3730, 0, 3731, 0, 1103,
	0, 1110, 3732, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	179, 154, 0, 0, 155, 0, 0, 0, 0, 3761,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3770, 0, 0, 3772, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 3776, 0, 0,
	0, 187, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3912, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 168, 173, 170, 176, 177, 178,
	180, 182, 183, 184, 185, 0, 0, 0, 0, 0,
	186, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 168, 173, 170, 176,
	177, 178, 180, 182, 183, 184, 185, 0, 0, 0,
	0, 0, 186, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 197, 0, 0,
	0, 0, 0, 0, 0, 197, 0, 0, 0, 0,
	0, 0, 4022, 0, 0, 0, 736, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 736, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 86, 44, 45, 88,
	0, 0, 0, 0, 0, 0, 197, 0, 0, 0,
	0, 197, 0, 0, 0, 92, 0, 0, 0, 48,
	76, 77, 0, 74, 78, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 75, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 97, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 62, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 95,
	736, 0, 0, 0, 0, 0, 197, 0, 0, 0,
	0, 0, 0, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 0, 0, 0, 736, 0, 0, 0, 736, 736,
	0, 0, 0, 736, 0, 0, 0, 0, 0, 83,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1533,
	736, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 197, 197, 197, 197, 197, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4064,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	197, 197, 735, 1446, 735, 735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 197, 735, 0, 0, 0,
	0, 0, 0, 0, 0, 4078, 0, 0, 4079, 0,
	4080, 0, 0, 51, 54, 57, 56, 59, 0, 73,
	0, 736, 82, 79, 0, 1532, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 61, 91, 90, 0,
	0, 71, 72, 58, 0, 0, 0, 0, 0, 80,
	81, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 63, 64, 0, 65, 66, 67, 68, 0,
	0, 0, 4164, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1291, 0, 1291, 1291, 0, 0, 0, 0, 0,
	0, 4180, 0, 4181, 0, 4182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1460, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 60,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 736, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 736, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4231, 0, 4232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1532, 736,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 197, 0, 0, 736, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 89,
	0, 736, 0, 0, 0, 1533, 0, 0, 736, 736,
	1533, 197, 197, 197, 197, 197, 0, 0, 0, 0,
	0, 0, 0, 197, 0, 0, 0, 0, 0, 197,
	0, 197, 735, 735, 197, 197, 197, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 735, 0, 0,
	197, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 735, 736, 0, 0, 1533, 0, 0, 0,
	0, 736, 0, 735, 0, 0, 197, 0, 0, 94,
	0, 0, 0, 735, 0, 0, 0, 0, 0, 0,
	197, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 735, 0, 735, 0,
	197, 0, 0, 197, 0, 0, 735, 0, 0, 1532,
	735, 0, 0, 735, 735, 735, 735, 0, 735, 0,
	735, 735, 0, 735, 735, 735, 735, 735, 735, 0,
	0, 0, 0, 0, 0, 0, 1532, 735, 735, 1532,
	735, 1532, 0, 735, 0, 0, 0, 0, 0, 0,
	0, 1733, 1734, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 735, 70, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 735, 0,
	0, 735, 0, 0, 0, 0, 1789, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1807, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 0, 0, 0, 0, 0, 0, 0,
	0, 736, 1875, 0, 0, 735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1103, 0, 1901, 0, 0,
	0, 0, 0, 0, 0, 1910, 0, 0, 197, 1912,
	0, 0, 1915, 1916, 1918, 1918, 0, 1918, 0, 1918,
	1918, 0, 1927, 1918, 1918, 1918, 1918, 1918, 0, 0,
	0, 0, 0, 0, 0, 0, 1947, 1948, 0, 1103,
	0, 0, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 197, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1995, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2017, 0, 0,
	2021, 0, 0, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 916, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 197, 0, 0, 197, 197, 197, 0,
	0, 0, 0, 0, 0, 0, 736, 736, 0, 0,
	0, 0, 0, 0, 1291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 735, 735, 0, 0, 0,
	0, 0, 0, 0, 0, 1026, 0, 0, 2340, 195,
	735, 1027, 678, 0, 0, 0, 0, 0, 0, 0,
	0, 2145, 0, 0, 0, 736, 736, 736, 736, 0,
	0, 0, 678, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1054, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1079, 1079, 735,
	0, 0, 0, 0, 0, 0, 678, 0, 0, 1532,
	0, 0, 0, 0, 0, 0, 0, 0, 2154, 0,
	0, 0, 0, 0, 0, 0, 0, 1532, 0, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	1024, 1026, 0, 0, 0, 0, 0, 1027, 0, 0,
	0, 0, 0, 0, 1291, 1291, 0, 2145, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2078,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 736, 0, 736, 0, 197, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1533, 0, 0, 0, 197,
	0, 0, 736, 0, 736, 0, 0, 0, 2140, 0,
	0, 0, 0, 735, 0, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 0, 0, 0,
	0, 0, 736, 0, 735, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 197, 0, 0, 736, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 0, 0, 735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 735, 0, 0,
	735, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	735, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 736, 0, 0, 0,
	0, 0, 1291, 736, 0, 736, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 735, 0,
	0, 0, 0, 0, 736, 735, 735, 735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2388, 0, 735, 0, 0, 0, 0,
	0, 735, 735, 0, 0, 735, 0, 735, 0, 0,
	0, 0, 0, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2401, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1789, 0, 735, 1291,
	0, 0, 0, 735, 0, 0, 0, 735, 735, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1103,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 736, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1110, 0, 0,
	197, 0, 0, 0, 2517, 2518, 2519, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 736, 197,
	0, 0, 0, 0, 1103, 0, 0, 0, 0, 0,
	1110, 1910, 0, 0, 1910, 0, 1910, 0, 0, 0,
	0, 0, 2549, 0, 735, 0, 0, 0, 678, 0,
	678, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1103, 0, 0,
	0, 0, 2140, 0, 736, 0, 2140, 2140, 0, 0,
	0, 0, 0, 0, 736, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1533, 736, 0, 736, 0, 0,
	0, 0, 678, 0, 0, 0, 0, 0, 1532, 0,
	735, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 736, 2351, 0, 0, 0, 0, 0, 0,
	1534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 197, 736, 0, 0, 0, 0, 0,
	0, 0, 0, 95, 0, 0, 1026, 0, 0, 0,
	0, 964, 1027, 978, 979, 980, 965, 0, 0, 966,
	967, 0, 968, 2626, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 736, 0, 0, 0, 973, 0,
	981, 982, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 736, 0,
	0, 0, 0, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 736, 0, 736,
	0, 0, 0, 0, 0, 0, 0, 0, 3358, 3359,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1291,
	983, 984, 985, 986, 987, 988, 989, 990, 991, 992,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012,
	1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022,
	1023, 1024, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1534, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 735, 3360, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 735, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 678, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2939, 0, 0, 1054, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3361, 3362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 678, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 678, 0, 735, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 735, 0, 0, 0, 0, 0, 0,
	735, 0, 0, 0, 735, 735, 0, 0, 0, 735,
	0, 2874, 0, 0, 1534, 0, 0, 0, 929, 0,
	0, 0, 0, 0, 933, 1532, 735, 2889, 930, 931,
	0, 0, 0, 932, 934, 0, 0, 0, 0, 0,
	0, 1534, 0, 0, 1534, 0, 1534, 678, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1969, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 678, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2023, 678,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 678, 0, 735, 0, 0,
	0, 0, 678, 0, 0, 2971, 0, 0, 0, 0,
	0, 2049, 2050, 678, 678, 678, 678, 678, 678, 678,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2401, 0, 0, 0, 0, 0, 0, 2996,
	0, 0, 0, 1910, 1910, 0, 0, 735, 3001, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3012, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2140, 0, 0, 0,
	0, 0, 735, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 735, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 735, 2140, 0, 0, 0,
	0, 0, 0, 0, 678, 0, 0, 0, 0, 0,
	0, 0, 0, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 735, 0, 0,
	0, 1532, 0, 0, 735, 735, 1532, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1534, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3307, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3169, 0, 0, 0, 0, 0, 0, 0, 735,
	0, 0, 1532, 1291, 0, 0, 0, 735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1918, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3214, 0, 0, 0, 0, 0, 0, 3389,
	0, 0, 0, 0, 0, 0, 1291, 0, 0, 0,
	0, 0, 0, 3241, 1918, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2023, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1969, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1103, 0,
	1079, 0, 0, 0, 0, 0, 2401, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 735, 0, 1054,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 678, 0,
	0, 0, 0, 0, 0, 2023, 678, 0, 678, 0,
	678, 2442, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3596, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 735, 735, 0, 0, 1866, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 735, 735, 735, 735, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	678, 0, 0, 0, 0, 0, 0, 678, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 678, 678,
	0, 0, 678, 0, 2612, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 678, 0, 0, 0, 0, 0,
	0, 678, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 678, 0, 0,
	0, 0, 0, 0, 2623, 0, 0, 0, 0, 0,
	0, 2401, 2401, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3660, 3661, 3662, 3663, 0, 0, 0, 0, 735, 0,
	735, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1534, 0, 2023, 0, 0, 0, 0,
	0, 1532, 0, 0, 0, 0, 0, 0, 735, 0,
	735, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 735, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 735, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3738, 0, 3738,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3766, 0, 3768,
	0, 0, 735, 0, 0, 0, 0, 0, 0, 735,
	0, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	735, 0, 0, 0, 0, 0, 0, 0, 678, 0,
	0, 0, 0, 0, 0, 0, 1969, 2401, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3935, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 678, 0, 0,
	0, 0, 678, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3738, 0, 0, 0, 0, 0, 0, 3738, 0,
	3738, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	735, 0, 0, 0, 0, 0, 0, 678, 0, 0,
	0, 0, 0, 0, 2981, 0, 0, 0, 0, 2401,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 735, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 678, 678, 678, 678, 678, 678, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	735, 678, 678, 0, 0, 0, 0, 0, 0, 0,
	735, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1532, 735, 0, 735, 0, 0, 678, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 735, 735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2401,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	735, 0, 0, 2401, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3798, 3800, 3799, 3865, 3866,
	3867, 3868, 3869, 3870, 3871, 3801, 3802, 806, 0, 0,
	735, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 735, 0, 0, 0, 0, 4082,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4090,
	0, 0, 0, 735, 0, 735, 0, 0, 0, 0,
	2401, 0, 4098, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1291, 1291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4148,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1079, 0, 678, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4090,
	0, 0, 0, 0, 0, 0, 1534, 0, 0, 0,
	0, 1534, 678, 678, 678, 678, 678, 0, 0, 0,
	0, 0, 0, 2401, 3257, 0, 0, 0, 0, 0,
	1969, 0, 678, 0, 0, 678, 3265, 2023, 0, 0,
	0, 0, 1866, 0, 4148, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3806, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 678, 3814, 3815, 0, 0, 3890, 3889, 3888, 0,
	0, 3886, 3887, 3885, 0, 0, 0, 1534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 678, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 678, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 678, 0, 0, 678, 0, 0, 3891, 929, 0,
	782, 783, 3892, 3893, 933, 3894, 785, 786, 930, 931,
	0, 780, 784, 932, 934, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3795, 3796, 3797, 3803, 3804, 3805, 3816, 3863, 3864, 3872,
	3874, 885, 3873, 3875, 3876, 3877, 3880, 3881, 3882, 3883,
	3878, 3879, 3884, 3778, 3782, 3779, 3780, 3781, 3793, 3783,
	3784, 3785, 3786, 3787, 3788, 3789, 3790, 3791, 3792, 3794,
	3895, 3896, 3897, 3898, 3899, 3900, 3809, 3813, 3812, 3810,
	3811, 3807, 3808, 3835, 3834, 3836, 3837, 3838, 3839, 3840,
	3841, 3843, 3842, 3844, 3845, 3846, 3847, 3848, 3849, 3817,
	3818, 3821, 3822, 3820, 3819, 3823, 3832, 3833, 3824, 3825,
	3826, 3827, 3828, 3829, 3831, 3830, 3850, 3851, 3852, 3853,
	3854, 3856, 3855, 3859, 3860, 3858, 3857, 3862, 3861, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 678,
	0, 0, 935, 0, 936, 0, 0, 940, 0, 0,
	0, 942, 941, 0, 943, 905, 904, 0, 0, 937,
	938, 0, 939, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 678, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 678, 0, 0, 3901, 3902, 3903,
	3904, 3905, 3906, 3907, 3908, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 678, 0, 0, 678, 678, 678,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1969, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1534, 0, 0, 0,
	1969, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1969, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1969, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	678, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1534, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4120, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1969, 0, 0, 398, 0, 0,
	0, 0, 0, 0, 1429, 1413, 530, 0, 1355, 1432,
	1323, 1342, 1442, 1345, 1348, 1392, 1301, 1370, 418, 1339,
	1327, 1296, 1334, 1297, 1325, 1357, 272, 1322, 1415, 1374,
	1431, 368, 269, 1303, 1294, 206, 507, 1328, 432, 1344,
	205, 1394, 489, 254, 379, 376, 585, 284, 275, 271,
	252, 319, 387, 430, 520, 424, 1438, 372, 1380, 0,
	499, 403, 0, 0, 2023, 1419, 1418, 1349, 1359, 1421,
	1368, 1406, 1354, 1393, 1311, 1379, 1433, 1340, 1389, 1434,
	325, 250, 327, 204, 415, 500, 288, 0, 0, 0,
	0, 4122, 509, 960, 0, 0, 0, 0, 4123, 0,
	0, 0, 0, 240, 0, 0, 247, 0, 0, 0,
	353, 362, 361, 341, 342, 344, 346, 352, 359, 365,
	338, 347, 1336, 1386, 610, 1428, 1337, 1388, 267, 323,
	274, 266, 582, 1439, 1420, 1300, 1367, 1427, 1362, 0,
	0, 231, 1430, 1361, 0, 1391, 0, 1445, 1295, 1382,
	0, 1298, 1302, 1441, 1425, 1331, 277, 0, 0, 0,
	0, 0, 0, 0, 1358, 1369, 1403, 1407, 1352, 0,
	0, 0, 0, 0, 0, 0, 0, 1329, 0, 1378,
	0, 0, 0, 1307, 1299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1356, 0, 0,
	0, 0, 1310, 0, 1330, 1404, 0, 1293, 299, 1304,
	404, 259, 0, 455, 1411, 1424, 1353, 630, 1426, 1351,
	1350, 1398, 1308, 1417, 1343, 367, 1306, 332, 199, 227,
	0, 1341, 414, 463, 475, 1416, 1326, 1335, 255, 1333,
	473, 428, 605, 235, 286, 460, 434, 471, 442, 289,
	1377, 1396, 472, 374, 587, 452, 602, 631, 632, 265,
	408, 616, 524, 624, 649, 228, 262, 422, 508, 608,
	496, 399, 583, 584, 331, 495, 297, 203, 371, 637,
	226, 481, 373, 244, 233, 589, 613, 301, 291, 458,
	644, 215, 519, 599, 241, 485, 0, 0, 652, 249,
	506, 611, 600, 217, 596, 505, 395, 328, 329, 216,
	0, 459, 270, 295, 0, 0, 260, 417, 591, 592,
	258, 653, 230, 623, 222, 1305, 622, 410, 586, 597,
	396, 385, 221, 595, 394, 384, 336, 357, 358, 282,
	309, 449, 377, 450, 308, 310, 406, 405, 407, 209,
	609, 627, 0, 210, 0, 501, 612, 654, 454, 214,
	236, 237, 239, 1321, 281, 285, 293, 296, 305, 306,
	315, 369, 421, 448, 444, 453, 1412, 581, 603, 617,
	629, 635, 636, 638, 639, 640, 641, 642, 645, 643,
	409, 313, 497, 335, 375, 1401, 1444, 427, 474, 242,
	607, 498, 201, 1315, 1320, 1313, 0, 256, 257, 1383,
	577, 1316, 1314, 1372, 1373, 1317, 1435, 1436, 1437, 1422,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 669, 670, 671, 672, 650, 510,
	516, 511, 512, 513, 514, 515, 0, 517, 1405, 1309,
	0, 1318, 1319, 400, 1414, 593, 594, 673, 386, 488,
	604, 337, 351, 354, 343, 363, 0, 364, 339, 340,
	345, 348, 349, 350, 355, 356, 360, 366, 251, 212,
	392, 401, 580, 314, 218, 219, 220, 526, 527, 528,
	529, 620, 621, 625, 207, 464, 465, 466, 467, 294,
	615, 311, 470, 469, 333, 334, 381, 451, 542, 544,
	555, 559, 561, 563, 569, 572, 543, 545, 556, 560,
	562, 564, 570, 573, 532, 534, 536, 538, 551, 550,
	547, 575, 576, 553, 558, 537, 549, 554, 567, 574,
	571, 531, 535, 539, 548, 566, 565, 546, 557, 568,
	552, 540, 533, 541, 1376, 198, 223, 370, 1440, 456,
	290, 651, 619, 486, 614, 208, 225, 1312, 264, 1324,
	1332, 0, 1338, 1346, 1347, 1360, 1363, 1364, 1365, 1366,
	1384, 1385, 1387, 1395, 1397, 1400, 1402, 1409, 1423, 1443,
	200, 202, 211, 224, 234, 238, 245, 263, 278, 280,
	287, 300, 312, 320, 321, 324, 330, 382, 388, 389,
	390, 391, 411, 412, 413, 416, 419, 420, 423, 425,
	426, 429, 433, 437, 438, 439, 441, 443, 445, 457,
	462, 476, 477, 478, 479, 480, 483, 484, 490, 491,
	492, 493, 494, 502, 503, 518, 588, 590, 606, 626,
	633, 482, 303, 304, 446, 447, 316, 317, 647, 648,
	302, 601, 634, 598, 646, 628, 440, 380, 1375, 1381,
	383, 283, 307, 322, 1390, 618, 504, 229, 468, 292,
	253, 1408, 1410, 213, 248, 232, 261, 276, 279, 326,
	393, 402, 431, 436, 298, 273, 246, 461, 243, 487,
	521, 522, 523, 525, 397, 268, 435, 1371, 1399, 378,
	578, 579, 318, 398, 0, 0, 0, 0, 0, 0,
	1429, 1413, 530, 0, 1355, 1432, 1323, 1342, 1442, 1345,
	1348, 1392, 1301, 1370, 418, 1339, 1327, 1296, 1334, 1297,
	1325, 1357, 272, 1322, 1415, 1374, 1431, 368, 269, 1303,
	1294, 206, 507, 1328, 432, 1344, 205, 1394, 489, 254,
	379, 376, 585, 284, 275, 271, 252, 319, 387, 430,
	520, 424, 1438, 372, 1380, 0, 499, 403, 0, 0,
	0, 1419, 1418, 1349, 1359, 1421, 1368, 1406, 1354, 1393,
	1311, 1379, 1433, 1340, 1389, 1434, 325, 250, 327, 204,
	415, 500, 288, 0, 0, 0, 0, 0, 509, 196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 247, 0, 0, 0, 353, 362, 361, 341,
	342, 344, 346, 352, 359, 365, 338, 347, 1336, 1386,
	610, 1428, 1337, 1388, 267, 323, 274, 266, 582, 1439,
	1420, 1300, 1367, 1427, 1362, 0, 0, 231, 1430, 1361,
	0, 1391, 0, 1445, 1295, 1382, 0, 1298, 1302, 1441,
	1425, 1331, 277, 0, 0, 0, 0, 0, 0, 0,
	1358, 1369, 1403, 1407, 1352, 0, 0, 0, 0, 0,
	0, 3266, 0, 1329, 0, 1378, 0, 0, 0, 1307,
	1299, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1356, 0, 0, 0, 0, 1310, 0,
	1330, 1404, 0, 1293, 299, 1304, 404, 259, 0, 455,
	1411, 1424, 1353, 630, 1426, 1351, 1350, 1398, 1308, 1417,
	1343, 367, 1306, 332, 199, 227, 0, 1341, 414, 463,
	475, 1416, 1326, 1335, 255, 1333, 473, 428, 605, 235,
	286, 460, 434, 471, 442, 289, 1377, 1396, 472, 374,
	587, 452, 602, 631, 632, 265, 408, 616, 524, 624,
	649, 228, 262, 422, 508, 608, 496, 399, 583, 584,
	331, 495, 297, 203, 371, 637, 226, 481, 373, 244,
	233, 589, 613, 301, 291, 458, 644, 215, 519, 599,
	241, 485, 0, 0, 652, 249, 506, 611, 600, 217,
	596, 505, 395, 328, 329, 216, 0, 459, 270, 295,
	0, 0, 260, 417, 591, 592, 258, 653, 230, 623,
	222, 1305, 622, 410, 586, 597, 396, 385, 221, 595,
	394, 384, 336, 357, 358, 282, 309, 449, 377, 450,
	308, 310, 406, 405, 407, 209, 609, 627, 0, 210,
	0, 501, 612, 654, 454, 214, 236, 237, 239, 1321,
	281, 285, 293, 296, 305, 306, 315, 369, 421, 448,
	444, 453, 1412, 581, 603, 617, 629, 635, 636, 638,
	639, 640, 641, 642, 645, 643, 409, 313, 497, 335,
	375, 1401, 1444, 427, 474, 242, 607, 498, 201, 1315,
	1320, 1313, 0, 256, 257, 1383, 577, 1316, 1314, 1372,
	1373, 1317, 1435, 1436, 1437, 1422, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	669, 670, 671, 672, 650, 510, 516, 511, 512, 513,
	514, 515, 0, 517, 1405, 1309, 0, 1318, 1319, 400,
	1414, 593, 594, 673, 386, 488, 604, 337, 351, 354,
	343, 363, 0, 364, 339, 340, 345, 348, 349, 350,
	355, 356, 360, 366, 251, 212, 392, 401, 580, 314,
	218, 219, 220, 526, 527, 528, 529, 620, 621, 625,
	207, 464, 465, 466, 467, 294, 615, 311, 470, 469,
	333, 334, 381, 451, 542, 544, 555, 559, 561, 563,
	569, 572, 543, 545, 556, 560, 562, 564, 570, 573,
	532, 534, 536, 538, 551, 550, 547, 575, 576, 553,
	558, 537, 549, 554, 567, 574, 571, 531, 535, 539,
	548, 566, 565, 546, 557, 568, 552, 540, 533, 541,
	1376, 198, 223, 370, 1440, 456, 290, 651, 619, 486,
	614, 208, 225, 1312, 264, 1324, 1332, 0, 1338, 1346,
	1347, 1360, 1363, 1364, 1365, 1366, 1384, 1385, 1387, 1395,
	1397, 1400, 1402, 1409, 1423, 1443, 200, 202, 211, 224,
	234, 238, 245, 263, 278, 280, 287, 300, 312, 320,
	321, 324, 330, 382, 388, 389, 390, 391, 411, 412,
	413, 416, 419, 420, 423, 425, 426, 429, 433, 437,
	438, 439, 441, 443, 445, 457, 462, 476, 477, 478,
	479, 480, 483, 484, 490, 491, 492, 493, 494, 502,
	503, 518, 588, 590, 606, 626, 633, 482, 303, 304,
	446, 447, 316, 317, 647, 648, 302, 601, 634, 598,
	646, 628, 440, 380, 1375, 1381, 383, 283, 307, 322,
	1390, 618, 504, 229, 468, 292, 253, 1408, 1410, 213,
	248, 232, 261, 276, 279, 326, 393, 402, 431, 436,
	298, 273, 246, 461, 243, 487, 521, 522, 523, 525,
	397, 268, 435, 1371, 1399, 378, 578, 579, 318, 398,
	0, 0, 0, 0, 0, 0, 1429, 1413, 530, 0,
	1355, 1432, 1323, 1342, 1442, 1345, 1348, 1392, 1301, 1370,
	418, 1339, 1327, 1296, 1334, 1297, 1325, 1357, 272, 1322,
	1415, 1374, 1431, 368, 269, 1303, 1294, 206, 507, 1328,
	432, 1344, 205, 1394, 489, 254, 379, 376, 585, 284,
	275, 271, 252, 319, 387, 430, 520, 424, 1438, 372,
	1380, 0, 499, 403, 0, 0, 0, 1419, 1418, 1349,
	1359, 1421, 1368, 1406, 1354, 1393, 1311, 1379, 1433, 1340,
	1389, 1434, 325, 250, 327, 204, 415, 500, 288, 0,
	0, 0, 0, 0, 509, 725, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 247, 0,
	0, 0, 353, 362, 361, 341, 342, 344, 346, 352,
	359, 365, 338, 347, 1336, 1386, 610, 1428, 1337, 1388,
	267, 323, 274, 266, 582, 1439, 1420, 1300, 1367, 1427,
	1362, 0, 0, 231, 1430, 1361, 0, 1391, 0, 1445,
	1295, 1382, 0, 1298, 1302, 1441, 1425, 1331, 277, 0,
	0, 0, 0, 0, 0, 0, 1358, 1369, 1403, 1407,
	1352, 0, 0, 0, 0, 0, 0, 3227, 0, 1329,
	0, 1378, 0, 0, 0, 1307, 1299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1356,
	0, 0, 0, 0, 1310, 0, 1330, 1404, 0, 1293,
	299, 1304, 404, 259, 0, 455, 1411, 1424, 1353, 630,
	1426, 1351, 1350, 1398, 1308, 1417, 1343, 367, 1306, 332,
	199, 227, 0, 1341, 414, 463, 475, 1416, 1326, 1335,
	255, 1333, 473, 428, 605, 235, 286, 460, 434, 471,
	442, 289, 1377, 1396, 472, 374, 587, 452, 602, 631,
	632, 265, 408, 616, 524, 624, 649, 228, 262, 422,
	508, 608, 496, 399, 583, 584, 331, 495, 297, 203,
	371, 637, 226, 481, 373, 244, 233, 589, 613, 301,
	291, 458, 644, 215, 519, 599, 241, 485, 0, 0,
	652, 249, 506, 611, 600, 217, 596, 505, 395, 328,
	329, 216, 0, 459, 270, 295, 0, 0, 260, 417,
	591, 592, 258, 653, 230, 623, 222, 1305, 622, 410,
	586, 597, 396, 385, 221, 595, 394, 384, 336, 357,
	358, 282, 309, 449, 377, 450, 308, 310, 406, 405,
	407, 209, 609, 627, 0, 210, 0, 501, 612, 654,
	454, 214, 236, 237, 239, 1321, 281, 285, 293, 296,
	305, 306, 315, 369, 421, 448, 444, 453, 1412, 581,
	603, 617, 629, 635, 636, 638, 639, 640, 641, 642,
	645, 643, 409, 313, 497, 335, 375, 1401, 1444, 427,
	474, 242, 607, 498, 201, 1315, 1320, 1313, 0, 256,
	257, 1383, 577, 1316, 1314, 1372, 1373, 1317, 1435, 1436,
	1437, 1422, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	650, 510, 516, 511, 512, 513, 514, 515, 0, 517,
	1405, 1309, 0, 1318, 1319, 400, 1414, 593, 594, 673,
	386, 488, 604, 337, 351, 354, 343, 363, 0, 364,
	339, 340, 345, 348, 349, 350, 355, 356, 360, 366,
	251, 212, 392, 401, 580, 314, 218, 219, 220, 526,
	527, 528, 529, 620, 621, 625, 207, 464, 465, 466,
	467, 294, 615, 311, 470, 469, 333, 334, 381, 451,
	542, 544, 555, 559, 561, 563, 569, 572, 543, 545,
	556, 560, 562, 564, 570, 573, 532, 534, 536, 538,
	551, 550, 547, 575, 576, 553, 558, 537, 549, 554,
	567, 574, 571, 531, 535, 539, 548, 566, 565, 546,
	557, 568, 552, 540, 533, 541, 1376, 198, 223, 370,
	1440, 456, 290, 651, 619, 486, 614, 208, 225, 1312,
	264, 1324, 1332, 0, 1338, 1346, 1347, 1360, 1363, 1364,
	1365, 1366, 1384, 1385, 1387, 1395, 1397, 1400, 1402, 1409,
	1423, 1443, 200, 202, 211, 224, 234, 238, 245, 263,
	278, 280, 287, 300, 312, 320, 321, 324, 330, 382,
	388, 389, 390, 391, 411, 412, 413, 416, 419, 420,
	423, 425, 426, 429, 433, 437, 438, 439, 441, 443,
	445, 457, 462, 476, 477, 478, 479, 480, 483, 484,
	490, 491, 492, 493, 494, 502, 503, 518, 588, 590,
	606, 626, 633, 482, 303, 304, 446, 447, 316, 317,
	647, 648, 302, 601, 634, 598, 646, 628, 440, 380,
	1375, 1381, 383, 283, 307, 322, 1390, 618, 504, 229,
	468, 292, 253, 1408, 1410, 213, 248, 232, 261, 276,
	279, 326, 393, 402, 431, 436, 298, 273, 246, 461,
	243, 487, 521, 522, 523, 525, 397, 268, 435, 1371,
	1399, 378, 578, 579, 318, 398, 0, 0, 0, 0,
	0, 0, 1429, 1413, 530, 0, 1355, 1432, 1323, 1342,
	1442, 1345, 1348, 1392, 1301, 1370, 418, 1339, 1327, 1296,
	1334, 1297, 1325, 1357, 272, 1322, 1415, 1374, 1431, 368,
	269, 1303, 1294, 206, 507, 1328, 432, 1344, 205, 1394,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 1438, 372, 1380, 0, 499, 403,
	0, 0, 0, 1419, 1418, 1349, 1359, 1421, 1368, 1406,
	1354, 1393, 1311, 1379, 1433, 1340, 1389, 1434, 325, 250,
	327, 204, 415, 500, 288, 0, 0, 0, 0, 0,
	509, 960, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	1336, 1386, 610, 1428, 1337, 1388, 267, 323, 274, 266,
	582, 1439, 1420, 1300, 1367, 1427, 1362, 0, 0, 231,
	1430, 1361, 0, 1391, 0, 1445, 1295, 1382, 0, 1298,
	1302, 1441, 1425, 1331, 277, 0, 0, 0, 0, 0,
	0, 0, 1358, 1369, 1403, 1407, 1352, 0, 0, 0,
	0, 0, 0, 2421, 0, 1329, 0, 1378, 0, 0,
	0, 1307, 1299, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1356, 0, 0, 0, 0,
	1310, 0, 1330, 1404, 0, 1293, 299, 1304, 404, 259,
	0, 455, 1411, 1424, 1353, 630, 1426, 1351, 1350, 1398,
	1308, 1417, 1343, 367, 1306, 332, 199, 227, 0, 1341,
	414, 463, 475, 1416, 1326, 1335, 255, 1333, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 1377, 1396,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 591, 592, 258, 653,
	230, 623, 222, 1305, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 357, 358, 282, 309, 449,
	377, 450, 308, 310, 406, 405, 407, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 1321, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 1412, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 1401, 1444, 427, 474, 242, 607, 498,
	201, 1315, 1320, 1313, 0, 256, 257, 1383, 577, 1316,
	1314, 1372, 1373, 1317, 1435, 1436, 1437, 1422, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 1405, 1309, 0, 1318,
	1319, 400, 1414, 593, 594, 673, 386, 488, 604, 337,
	351, 354, 343, 363, 0, 364, 339, 340, 345, 348,
	349, 350, 355, 356, 360, 366, 251, 212, 392, 401,
	580, 314, 218, 219, 220, 526, 527, 528, 529, 620,
	621, 625, 207, 464, 465, 466, 467, 294, 615, 311,
	470, 469, 333, 334, 381, 451, 542, 544, 555, 559,
	561, 563, 569, 572, 543, 545, 556, 560, 562, 564,
	570, 573, 532, 534, 536, 538, 551, 550, 547, 575,
	576, 553, 558, 537, 549, 554, 567, 574, 571, 531,
	535, 539, 548, 566, 565, 546, 557, 568, 552, 540,
	533, 541, 1376, 198, 223, 370, 1440, 456, 290, 651,
	619, 486, 614, 208, 225, 1312, 264, 1324, 1332, 0,
	1338, 1346, 1347, 1360, 1363, 1364, 1365, 1366, 1384, 1385,
	1387, 1395, 1397, 1400, 1402, 1409, 1423, 1443, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	303, 304, 446, 447, 316, 317, 647, 648, 302, 601,
	634, 598, 646, 628, 440, 380, 1375, 1381, 383, 283,
	307, 322, 1390, 618, 504, 229, 468, 292, 253, 1408,
	1410, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 1371, 1399, 378, 578, 579,
	318, 398, 0, 0, 0, 0, 0, 0, 1429, 1413,
	530, 0, 1355, 1432, 1323, 1342, 1442, 1345, 1348, 1392,
	1301, 1370, 418, 1339, 1327, 1296, 1334, 1297, 1325, 1357,
	272, 1322, 1415, 1374, 1431, 368, 269, 1303, 1294, 206,
	507, 1328, 432, 1344, 205, 1394, 489, 254, 379, 376,
	585, 284, 275, 271, 252, 319, 387, 430, 520, 424,
	1438, 372, 1380, 0, 499, 403, 0, 0, 0, 1419,
	1418, 1349, 1359, 1421, 1368, 1406, 1354, 1393, 1311, 1379,
	1433, 1340, 1389, 1434, 325, 250, 327, 204, 415, 500,
	288, 0, 95, 0, 0, 0, 509, 725, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	247, 0, 0, 0, 353, 362, 361, 341, 342, 344,
	346, 352, 359, 365, 338, 347, 1336, 1386, 610, 1428,
	1337, 1388, 267, 323, 274, 266, 582, 1439, 1420, 1300,
	1367, 1427, 1362, 0, 0, 231, 1430, 1361, 0, 1391,
	0, 1445, 1295, 1382, 0, 1298, 1302, 1441, 1425, 1331,
	277, 0, 0, 0, 0, 0, 0, 0, 1358, 1369,
	1403, 1407, 1352, 0, 0, 0, 0, 0, 0, 0,
	0, 1329, 0, 1378, 0, 0, 0, 1307, 1299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1356, 0, 0, 0, 0, 1310, 0, 1330, 1404,
	0, 1293, 299, 1304, 404, 259, 0, 455, 1411, 1424,
	1353, 630, 1426, 1351, 1350, 1398, 1308, 1417, 1343, 367,
	1306, 332, 199, 227, 0, 1341, 414, 463, 475, 1416,
	1326, 1335, 255, 1333, 473, 428, 605, 235, 286, 460,
	434, 471, 442, 289, 1377, 1396, 472, 374, 587, 452,
	602, 631, 632, 265, 408, 616, 524, 624, 649, 228,
	262, 422, 508, 608, 496, 399, 583, 584, 331, 495,
	297, 203, 371, 637, 226, 481, 373, 244, 233, 589,
	613, 301, 291, 458, 644, 215, 519, 599, 241, 485,
	0, 0, 652, 249, 506, 611, 600, 217, 596, 505,
	395, 328, 329, 216, 0, 459, 270, 295, 0, 0,
	260, 417, 591, 592, 258, 653, 230, 623, 222, 1305,
	622, 410, 586, 597, 396, 385, 221, 595, 394, 384,
	336, 357, 358, 282, 309, 449, 377, 450, 308, 310,
	406, 405, 407, 209, 609, 627, 0, 210, 0, 501,
	612, 654, 454, 214, 236, 237, 239, 1321, 281, 285,
	293, 296, 305, 306, 315, 369, 421, 448, 444, 453,
	1412, 581, 603, 617, 629, 635, 636, 638, 639, 640,
	641, 642, 645, 643, 409, 313, 497, 335, 375, 1401,
	1444, 427, 474, 242, 607, 498, 201, 1315, 1320, 1313,
	0, 256, 257, 1383, 577, 1316, 1314, 1372, 1373, 1317,
	1435, 1436, 1437, 1422, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 669, 670,
	671, 672, 650, 510, 516, 511, 512, 513, 514, 515,
	0, 517, 1405, 1309, 0, 1318, 1319, 400, 1414, 593,
	594, 673, 386, 488, 604, 337, 351, 354, 343, 363,
	0, 364, 339, 340, 345, 348, 349, 350, 355, 356,
	360, 366, 251, 212, 392, 401, 580, 314, 218, 219,
	220, 526, 527, 528, 529, 620, 621, 625, 207, 464,
	465, 466, 467, 294, 615, 311, 470, 469, 333, 334,
	381, 451, 542, 544, 555, 559, 561, 563, 569, 572,
	543, 545, 556, 560, 562, 564, 570, 573, 532, 534,
	536, 538, 551, 550, 547, 575, 576, 553, 558, 537,
	549, 554, 567, 574, 571, 531, 535, 539, 548, 566,
	565, 546, 557, 568, 552, 540, 533, 541, 1376, 198,
	223, 370, 1440, 456, 290, 651, 619, 486, 614, 208,
	225, 1312, 264, 1324, 1332, 0, 1338, 1346, 1347, 1360,
	1363, 1364, 1365, 1366, 1384, 1385, 1387, 1395, 1397, 1400,
	1402, 1409, 1423, 1443, 200, 202, 211, 224, 234, 238,
	245, 263, 278, 280, 287, 300, 312, 320, 321, 324,
	330, 382, 388, 389, 390, 391, 411, 412, 413, 416,
	419, 420, 423, 425, 426, 429, 433, 437, 438, 439,
	441, 443, 445, 457, 462, 476, 477, 478, 479, 480,
	483, 484, 490, 491, 492, 493, 494, 502, 503, 518,
	588, 590, 606, 626, 633, 482, 303, 304, 446, 447,
	316, 317, 647, 648, 302, 601, 634, 598, 646, 628,
	440, 380, 1375, 1381, 383, 283, 307, 322, 1390, 618,
	504, 229, 468, 292, 253, 1408, 1410, 213, 248, 232,
	261, 276, 279, 326, 393, 402, 431, 436, 298, 273,
	246, 461, 243, 487, 521, 522, 523, 525, 397, 268,
	435, 1371, 1399, 378, 578, 579, 318, 398, 0, 0,
	0, 0, 0, 0, 1429, 1413, 530, 0, 1355, 1432,
	1323, 1342, 1442, 1345, 1348, 1392, 1301, 1370, 418, 1339,
	1327, 1296, 1334, 1297, 1325, 1357, 272, 1322, 1415, 1374,
	1431, 368, 269, 1303, 1294, 206, 507, 1328, 432, 1344,
	205, 1394, 489, 254, 379, 376, 585, 284, 275, 271,
	252, 319, 387, 430, 520, 424, 1438, 372, 1380, 0,
	499, 403, 0, 0, 0, 1419, 1418, 1349, 1359, 1421,
	1368, 1406, 1354, 1393, 1311, 1379, 1433, 1340, 1389, 1434,
	325, 250, 327, 204, 415, 500, 288, 0, 0, 0,
	0, 0, 509, 196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 247, 0, 0, 0,
	353, 362, 361, 341, 342, 344, 346, 352, 359, 365,
	338, 347, 1336, 1386, 610, 1428, 1337, 1388, 267, 323,
	274, 266, 582, 1439, 1420, 1300, 1367, 1427, 1362, 0,
	0, 231, 1430, 1361, 0, 1391, 0, 1445, 1295, 1382,
	0, 1298, 1302, 1441, 1425, 1331, 277, 0, 0, 0,
	0, 0, 0, 0, 1358, 1369, 1403, 1407, 1352, 0,
	0, 0, 0, 0, 0, 0, 0, 1329, 0, 1378,
	0, 0, 0, 1307, 1299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1356, 0, 0,
	0, 0, 1310, 0, 1330, 1404, 0, 1293, 299, 1304,
	404, 259, 0, 455, 1411, 1424, 1353, 630, 1426, 1351,
	1350, 1398, 1308, 1417, 1343, 367, 1306, 332, 199, 227,
	0, 1341, 414, 463, 475, 1416, 1326, 1335, 255, 1333,
	473, 428, 605, 235, 286, 460, 434, 471, 442, 289,
	1377, 1396, 472, 374, 587, 452, 602, 631, 632, 265,
	408, 616, 524, 624, 649, 228, 262, 422, 508, 608,
	496, 399, 583, 584, 331, 495, 297, 203, 371, 637,
	226, 481, 373, 244, 233, 589, 613, 301, 291, 458,
	644, 215, 519, 599, 241, 485, 0, 0, 652, 249,
	506, 611, 600, 217, 596, 505, 395, 328, 329, 216,
	0, 459, 270, 295, 0, 0, 260, 417, 591, 592,
	258, 653, 230, 623, 222, 1305, 622, 410, 586, 597,
	396, 385, 221, 595, 394, 384, 336, 357, 358, 282,
	309, 449, 377, 450, 308, 310, 406, 405, 407, 209,
	609, 627, 0, 210, 0, 501, 612, 654, 454, 214,
	236, 237, 239, 1321, 281, 285, 293, 296, 305, 306,
	315, 369, 421, 448, 444, 453, 1412, 581, 603, 617,
	629, 635, 636, 638, 639, 640, 641, 642, 645, 643,
	409, 313, 497, 335, 375, 1401, 1444, 427, 474, 242,
	607, 498, 201, 1315, 1320, 1313, 0, 256, 257, 1383,
	577, 1316, 1314, 1372, 1373, 1317, 1435, 1436, 1437, 1422,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 669, 670, 671, 672, 650, 510,
	516, 511, 512, 513, 514, 515, 0, 517, 1405, 1309,
	0, 1318, 1319, 400, 1414, 593, 594, 673, 386, 488,
	604, 337, 351, 354, 343, 363, 0, 364, 339, 340,
	345, 348, 349, 350, 355, 356, 360, 366, 251, 212,
	392, 401, 580, 314, 218, 219, 220, 526, 527, 528,
	529, 620, 621, 625, 207, 464, 465, 466, 467, 294,
	615, 311, 470, 469, 333, 334, 381, 451, 542, 544,
	555, 559, 561, 563, 569, 572, 543, 545, 556, 560,
	562, 564, 570, 573, 532, 534, 536, 538, 551, 550,
	547, 575, 576, 553, 558, 537, 549, 554, 567, 574,
	571, 531, 535, 539, 548, 566, 565, 546, 557, 568,
	552, 540, 533, 541, 1376, 198, 223, 370, 1440, 456,
	290, 651, 619, 486, 614, 208, 225, 1312, 264, 1324,
	1332, 0, 1338, 1346, 1347, 1360, 1363, 1364, 1365, 1366,
	1384, 1385, 1387, 1395, 1397, 1400, 1402, 1409, 1423, 1443,
	200, 202, 211, 224, 234, 238, 245, 263, 278, 280,
	287, 300, 312, 320, 321, 324, 330, 382, 388, 389,
	390, 391, 411, 412, 413, 416, 419, 420, 423, 425,
	426, 429, 433, 437, 438, 439, 441, 443, 445, 457,
	462, 476, 477, 478, 479, 480, 483, 484, 490, 491,
	492, 493, 494, 502, 503, 518, 588, 590, 606, 626,
	633, 482, 303, 304, 446, 447, 316, 317, 647, 648,
	302, 601, 634, 598, 646, 628, 440, 380, 1375, 1381,
	383, 283, 307, 322, 1390, 618, 504, 229, 468, 292,
	253, 1408, 1410, 213, 248, 232, 261, 276, 279, 326,
	393, 402, 431, 436, 298, 273, 246, 461, 243, 487,
	521, 522, 523, 525, 397, 268, 435, 1371, 1399, 378,
	578, 579, 318, 398, 0, 0, 0, 0, 0, 0,
	1429, 1413, 530, 0, 1355, 1432, 1323, 1342, 1442, 1345,
	1348, 1392, 1301, 1370, 418, 1339, 1327, 1296, 1334, 1297,
	1325, 1357, 272, 1322, 1415, 1374, 1431, 368, 269, 1303,
	1294, 206, 507, 1328, 432, 1344, 205, 1394, 489, 254,
	379, 376, 585, 284, 275, 271, 252, 319, 387, 430,
	520, 424, 1438, 372, 1380, 0, 499, 403, 0, 0,
	0, 1419, 1418, 1349, 1359, 1421, 1368, 1406, 1354, 1393,
	1311, 1379, 1433, 1340, 1389, 1434, 325, 250, 327, 204,
	415, 500, 288, 0, 0, 0, 0, 0, 509, 725,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 247, 0, 0, 0, 353, 362, 361, 341,
	342, 344, 346, 352, 359, 365, 338, 347, 1336, 1386,
	610, 1428, 1337, 1388, 267, 323, 274, 266, 582, 1439,
	1420, 1300, 1367, 1427, 1362, 0, 0, 231, 1430, 1361,
	0, 1391, 0, 1445, 1295, 1382, 0, 1298, 1302, 1441,
	1425, 1331, 277, 0, 0, 0, 0, 0, 0, 0,
	1358, 1369, 1403, 1407, 1352, 0, 0, 0, 0, 0,
	0, 0, 0, 1329, 0, 1378, 0, 0, 0, 1307,
	1299, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1356, 0, 0, 0, 0, 1310, 0,
	1330, 1404, 0, 1293, 299, 1304, 404, 259, 0, 455,
	1411, 1424, 1353, 630, 1426, 1351, 1350, 1398, 1308, 1417,
	1343, 367, 1306, 332, 199, 227, 0, 1341, 414, 463,
	475, 1416, 1326, 1335, 255, 1333, 473, 428, 605, 235,
	286, 460, 434, 471, 442, 289, 1377, 1396, 472, 374,
	587, 452, 602, 631, 632, 265, 408, 616, 524, 624,
	649, 228, 262, 422, 508, 608, 496, 399, 583, 584,
	331, 495, 297, 203, 371, 637, 226, 481, 373, 244,
	233, 589, 613, 301, 291, 458, 644, 215, 519, 599,
	241, 485, 0, 0, 652, 249, 506, 611, 600, 217,
	596, 505, 395, 328, 329, 216, 0, 459, 270, 295,
	0, 0, 260, 417, 591, 592, 258, 653, 230, 623,
	222, 1305, 622, 410, 586, 597, 396, 385, 221, 595,
	394, 384, 336, 357, 358, 282, 309, 449, 377, 450,
	308, 310, 406, 405, 407, 209, 609, 627, 0, 210,
	0, 501, 612, 654, 454, 214, 236, 237, 239, 1321,
	281, 285, 293, 296, 305, 306, 315, 369, 421, 448,
	444, 453, 1412, 581, 603, 617, 629, 635, 636, 638,
	639, 640, 641, 642, 645, 643, 409, 313, 497, 335,
	375, 1401, 1444, 427, 474, 242, 607, 498, 201, 1315,
	1320, 1313, 0, 256, 257, 1383, 577, 1316, 1314, 1372,
	1373, 1317, 1435, 1436, 1437, 1422, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	669, 670, 671, 672, 650, 510, 516, 511, 512, 513,
	514, 515, 0, 517, 1405, 1309, 0, 1318, 1319, 400,
	1414, 593, 594, 673, 386, 488, 604, 337, 351, 354,
	343, 363, 0, 364, 339, 340, 345, 348, 349, 350,
	355, 356, 360, 366, 251, 212, 392, 401, 580, 314,
	218, 219, 220, 526, 527, 528, 529, 620, 621, 625,
	207, 464, 465, 466, 467, 294, 615, 311, 470, 469,
	333, 334, 381, 451, 542, 544, 555, 559, 561, 563,
	569, 572, 543, 545, 556, 560, 562, 564, 570, 573,
	532, 534, 536, 538, 551, 550, 547, 575, 576, 553,
	558, 537, 549, 554, 567, 574, 571, 531, 535, 539,
	548, 566, 565, 546, 557, 568, 552, 540, 533, 541,
	1376, 198, 223, 370, 1440, 456, 290, 651, 619, 486,
	614, 208, 225, 1312, 264, 1324, 1332, 0, 1338, 1346,
	1347, 1360, 1363, 1364, 1365, 1366, 1384, 1385, 1387, 1395,
	1397, 1400, 1402, 1409, 1423, 1443, 200, 202, 211, 224,
	234, 238, 245, 263, 278, 280, 287, 300, 312, 320,
	321, 324, 330, 382, 388, 389, 390, 391, 411, 412,
	413, 416, 419, 420, 423, 425, 426, 429, 433, 437,
	438, 439, 441, 443, 445, 457, 462, 476, 477, 478,
	479, 480, 483, 484, 490, 491, 492, 493, 494, 502,
	503, 518, 588, 590, 606, 626, 633, 482, 303, 304,
	446, 447, 316, 317, 647, 648, 302, 601, 634, 598,
	646, 628, 440, 380, 1375, 1381, 383, 283, 307, 322,
	1390, 618, 504, 229, 468, 292, 253, 1408, 1410, 213,
	248, 232, 261, 276, 279, 326, 393, 402, 431, 436,
	298, 273, 246, 461, 243, 487, 521, 522, 523, 525,
	397, 268, 435, 1371, 1399, 378, 578, 579, 318, 398,
	0, 0, 0, 0, 0, 0, 1429, 1413, 530, 0,
	1355, 1432, 1323, 1342, 1442, 1345, 1348, 1392, 1301, 1370,
	418, 1339, 1327, 1296, 1334, 1297, 1325, 1357, 272, 1322,
	1415, 1374, 1431, 368, 269, 1303, 1294, 206, 507, 1328,
	432, 1344, 205, 1394, 489, 254, 379, 376, 585, 284,
	275, 271, 252, 319, 387, 430, 520, 424, 1438, 372,
	1380, 0, 499, 403, 0, 0, 0, 1419, 1418, 1349,
	1359, 1421, 1368, 1406, 1354, 1393, 1311, 1379, 1433, 1340,
	1389, 1434, 325, 250, 327, 204, 415, 500, 288, 0,
	0, 0, 0, 0, 509, 960, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 247, 0,
	0, 0, 353, 362, 361, 341, 342, 344, 346, 352,
	359, 365, 338, 347, 1336, 1386, 610, 1428, 1337, 1388,
	267, 323, 274, 266, 582, 1439, 1420, 1300, 1367, 1427,
	1362, 0, 0, 231, 1430, 1361, 0, 1391, 0, 1445,
	1295, 1382, 0, 1298, 1302, 1441, 1425, 1331, 277, 0,
	0, 0, 0, 0, 0, 0, 1358, 1369, 1403, 1407,
	1352, 0, 0, 0, 0, 0, 0, 0, 0, 1329,
	0, 1378, 0, 0, 0, 1307, 1299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1356,
	0, 0, 0, 0, 1310, 0, 1330, 1404, 0, 1293,
	299, 1304, 404, 259, 0, 455, 1411, 1424, 1353, 630,
	1426, 1351, 1350, 1398, 1308, 1417, 1343, 367, 1306, 332,
	199, 227, 0, 1341, 414, 463, 475, 1416, 1326, 1335,
	255, 1333, 473, 428, 605, 235, 286, 460, 434, 471,
	442, 289, 1377, 1396, 472, 374, 587, 452, 602, 631,
	632, 265, 408, 616, 524, 624, 649, 228, 262, 422,
	508, 608, 496, 399, 583, 584, 331, 495, 297, 203,
	371, 637, 226, 481, 373, 244, 233, 589, 613, 301,
	291, 458, 644, 215, 519, 599, 241, 485, 0, 0,
	652, 249, 506, 611, 600, 217, 596, 505, 395, 328,
	329, 216, 0, 459, 270, 295, 0, 0, 260, 417,
	591, 592, 258, 653, 230, 623, 222, 1305, 622, 410,
	586, 597, 396, 385, 221, 595, 394, 384, 336, 357,
	358, 282, 309, 449, 377, 450, 308, 310, 406, 405,
	407, 209, 609, 627, 0, 210, 0, 501, 612, 654,
	454, 214, 236, 237, 239, 1321, 281, 285, 293, 296,
	305, 306, 315, 369, 421, 448, 444, 453, 1412, 581,
	603, 617, 629, 635, 636, 638, 639, 640, 641, 642,
	645, 643, 409, 313, 497, 335, 375, 1401, 1444, 427,
	474, 242, 607, 498, 201, 1315, 1320, 1313, 0, 256,
	257, 1383, 577, 1316, 1314, 1372, 1373, 1317, 1435, 1436,
	1437, 1422, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	650, 510, 516, 511, 512, 513, 514, 515, 0, 517,
	1405, 1309, 0, 1318, 1319, 400, 1414, 593, 594, 673,
	386, 488, 604, 337, 351, 354, 343, 363, 0, 364,
	339, 340, 345, 348, 349, 350, 355, 356, 360, 366,
	251, 212, 392, 401, 580, 314, 218, 219, 220, 526,
	527, 528, 529, 620, 621, 625, 207, 464, 465, 466,
	467, 294, 615, 311, 470, 469, 333, 334, 381, 451,
	542, 544, 555, 559, 561, 563, 569, 572, 543, 545,
	556, 560, 562, 564, 570, 573, 532, 534, 536, 538,
	551, 550, 547, 575, 576, 553, 558, 537, 549, 554,
	567, 574, 571, 531, 535, 539, 548, 566, 565, 546,
	557, 568, 552, 540, 533, 541, 1376, 198, 223, 370,
	1440, 456, 290, 651, 619, 486, 614, 208, 225, 1312,
	264, 1324, 1332, 0, 1338, 1346, 1347, 1360, 1363, 1364,
	1365, 1366, 1384, 1385, 1387, 1395, 1397, 1400, 1402, 1409,
	1423, 1443, 200, 202, 211, 224, 234, 238, 245, 263,
	278, 280, 287, 300, 312, 320, 321, 324, 330, 382,
	388, 389, 390, 391, 411, 412, 413, 416, 419, 420,
	423, 425, 426, 429, 433, 437, 438, 439, 441, 443,
	445, 457, 462, 476, 477, 478, 479, 480, 483, 484,
	490, 491, 492, 493, 494, 502, 503, 518, 588, 590,
	606, 626, 633, 482, 303, 304, 446, 447, 316, 317,
	647, 648, 302, 601, 634, 598, 646, 628, 440, 380,
	1375, 1381, 383, 283, 307, 322, 1390, 618, 504, 229,
	468, 292, 253, 1408, 1410, 213, 248, 232, 261, 276,
	279, 326, 393, 402, 431, 436, 298, 273, 246, 461,
	243, 487, 521, 522, 523, 525, 397, 268, 435, 1371,
	1399, 378, 578, 579, 318, 398, 0, 0, 0, 0,
	0, 0, 0, 0, 530, 0, 778, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	765, 0, 0, 0, 272, 770, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 777, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 772, 773,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 95, 0, 0, 1026,
	509, 960, 749, 926, 964, 1027, 978, 979, 980, 965,
	0, 240, 966, 967, 247, 968, 0, 925, 808, 810,
	809, 875, 876, 877, 878, 879, 880, 881, 811, 812,
	806, 973, 610, 981, 982, 0, 267, 323, 274, 266,
	582, 0, 0, 2241, 2242, 2243, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 745, 762, 0,
	776, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 759, 760, 0, 0, 0, 0, 920, 0, 761,
	0, 0, 769, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 771, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 919, 0, 0, 630, 0, 0, 917, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 970, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 971, 972, 258, 653,
	816, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 824, 825, 282, 309, 901,
	900, 899, 308, 310, 897, 898, 896, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	907, 929, 918, 782, 783, 908, 909, 933, 910, 785,
	786, 930, 931, 779, 780, 784, 932, 934, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 921, 768, 767, 0,
	774, 775, 0, 804, 805, 807, 813, 814, 815, 826,
	873, 874, 882, 884, 885, 883, 886, 887, 888, 891,
	892, 893, 894, 889, 890, 895, 787, 791, 788, 789,
	790, 802, 792, 793, 794, 795, 796, 797, 798, 799,
	800, 801, 803, 944, 945, 946, 947, 948, 949, 819,
	823, 822, 820, 821, 817, 818, 845, 844, 846, 847,
	848, 849, 850, 851, 853, 852, 854, 855, 856, 857,
	858, 859, 827, 828, 831, 832, 830, 829, 833, 842,
	843, 834, 835, 836, 837, 838, 839, 841, 840, 860,
	861, 862, 863, 864, 866, 865, 869, 870, 868, 867,
	872, 871, 766, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 935, 264, 936, 0, 0,
	940, 0, 0, 0, 942, 941, 0, 943, 905, 904,
	0, 0, 937, 938, 0, 939, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	950, 951, 952, 953, 954, 955, 956, 957, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 1025,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 778, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	765, 0, 0, 0, 272, 770, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 777, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 772, 773,
	0, 0, 0, 0, 0, 0, 2450, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 95, 0, 0, 1026,
	509, 960, 749, 926, 964, 1027, 978, 979, 980, 965,
	0, 240, 966, 967, 247, 968, 0, 925, 808, 810,
	809, 875, 876, 877, 878, 879, 880, 881, 811, 812,
	806, 973, 610, 981, 982, 2451, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 745, 762, 0,
	776, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 759, 760, 0, 0, 0, 0, 920, 0, 761,
	0, 0, 769, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 771, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 919, 0, 0, 630, 0, 0, 917, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 970, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 971, 972, 258, 653,
	816, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 824, 825, 282, 309, 901,
	900, 899, 308, 310, 897, 898, 896, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	907, 929, 918, 782, 783, 908, 909, 933, 910, 785,
	786, 930, 931, 779, 780, 784, 932, 934, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 921, 768, 767, 0,
	774, 775, 0, 804, 805, 807, 813, 814, 815, 826,
	873, 874, 882, 884, 885, 883, 886, 887, 888, 891,
	892, 893, 894, 889, 890, 895, 787, 791, 788, 789,
	790, 802, 792, 793, 794, 795, 796, 797, 798, 799,
	800, 801, 803, 944, 945, 946, 947, 948, 949, 819,
	823, 822, 820, 821, 817, 818, 845, 844, 846, 847,
	848, 849, 850, 851, 853, 852, 854, 855, 856, 857,
	858, 859, 827, 828, 831, 832, 830, 829, 833, 842,
	843, 834, 835, 836, 837, 838, 839, 841, 840, 860,
	861, 862, 863, 864, 866, 865, 869, 870, 868, 867,
	872, 871, 766, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 935, 264, 936, 0, 0,
	940, 0, 0, 0, 942, 941, 0, 943, 905, 904,
	0, 0, 937, 938, 0, 939, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	950, 951, 952, 953, 954, 955, 956, 957, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 1025,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 86, 530, 0, 778, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	765, 0, 0, 0, 272, 770, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 1724, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 772, 773,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 95, 0, 0, 1026,
	509, 960, 749, 926, 964, 1027, 978, 979, 980, 965,
	0, 240, 966, 967, 247, 968, 0, 925, 808, 810,
	809, 875, 876, 877, 878, 879, 880, 881, 811, 812,
	806, 973, 610, 981, 982, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 745, 762, 0,
	776, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 759, 760, 0, 0, 0, 0, 920, 0, 761,
	0, 0, 769, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 771, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 919, 0, 0, 630, 0, 0, 917, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 970, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 971, 972, 258, 653,
	816, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 824, 825, 282, 309, 901,
	900, 899, 308, 310, 897, 898, 896, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	907, 929, 918, 782, 783, 908, 909, 933, 910, 785,
	786, 930, 931, 779, 780, 784, 932, 934, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 921, 768, 767, 0,
	774, 775, 0, 804, 805, 807, 813, 814, 815, 826,
	873, 874, 882, 884, 885, 883, 886, 887, 888, 891,
	892, 893, 894, 889, 890, 895, 787, 791, 788, 789,
	790, 802, 792, 793, 794, 795, 796, 797, 798, 799,
	800, 801, 803, 944, 945, 946, 947, 948, 949, 819,
	823, 822, 820, 821, 817, 818, 845, 844, 846, 847,
	848, 849, 850, 851, 853, 852, 854, 855, 856, 857,
	858, 859, 827, 828, 831, 832, 830, 829, 833, 842,
	843, 834, 835, 836, 837, 838, 839, 841, 840, 860,
	861, 862, 863, 864, 866, 865, 869, 870, 868, 867,
	872, 871, 766, 198, 223, 370, 94, 456, 290, 651,
	619, 486, 614, 208, 225, 935, 264, 936, 0, 0,
	940, 0, 0, 0, 942, 941, 0, 943, 905, 904,
	0, 0, 937, 938, 0, 939, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	950, 951, 952, 953, 954, 955, 956, 957, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 1025,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 778, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	765, 0, 0, 0, 272, 770, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 777, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 772, 773,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 95, 0, 0, 1026,
	509, 960, 749, 926, 964, 1027, 978, 979, 980, 965,
	0, 240, 966, 967, 247, 968, 0, 925, 808, 810,
	809, 875, 876, 877, 878, 879, 880, 881, 811, 812,
	806, 973, 610, 981, 982, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 745, 762, 0,
	776, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 759, 760, 0, 0, 0, 0, 920, 0, 761,
	0, 0, 769, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 771, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 919, 0, 0, 630, 0, 0, 917, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 970, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 4108, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 971, 972, 258, 653,
	816, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 824, 825, 282, 309, 901,
	900, 899, 308, 310, 897, 898, 896, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	907, 929, 918, 782, 783, 908, 909, 933, 910, 785,
	786, 930, 931, 779, 780, 784, 932, 934, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 921, 768, 767, 0,
	774, 775, 0, 804, 805, 807, 813, 814, 815, 826,
	873, 874, 882, 884, 885, 883, 886, 887, 888, 891,
	892, 893, 894, 889, 890, 895, 787, 791, 788, 789,
	790, 802, 792, 793, 794, 795, 796, 797, 798, 799,
	800, 801, 803, 944, 945, 946, 947, 948, 949, 819,
	823, 822, 820, 821, 817, 818, 845, 844, 846, 847,
	848, 849, 850, 851, 853, 852, 854, 855, 856, 857,
	858, 859, 827, 828, 831, 832, 830, 829, 833, 842,
	843, 834, 835, 836, 837, 838, 839, 841, 840, 860,
	861, 862, 863, 864, 866, 865, 869, 870, 868, 867,
	872, 871, 766, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 935, 264, 936, 0, 0,
	940, 0, 0, 0, 942, 941, 0, 943, 905, 904,
	0, 0, 937, 938, 0, 939, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	950, 951, 952, 953, 954, 955, 956, 957, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 1025,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 778, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	765, 0, 0, 0, 272, 770, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 777, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 772, 773,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 95, 0, 1761, 1026,
	509, 960, 749, 926, 964, 1027, 978, 979, 980, 965,
	0, 240, 966, 967, 247, 968, 0, 925, 808, 810,
	809, 875, 876, 877, 878, 879, 880, 881, 811, 812,
	806, 973, 610, 981, 982, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 745, 762, 0,
	776, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 759, 760, 0, 0, 0, 0, 920, 0, 761,
	0, 0, 769, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 771, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 919, 0, 0, 630, 0, 0, 917, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 970, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 971, 972, 258, 653,
	816, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 824, 825, 282, 309, 901,
	900, 899, 308, 310, 897, 898, 896, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	907, 929, 918, 782, 783, 908, 909, 933, 910, 785,
	786, 930, 931, 779, 780, 784, 932, 934, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 921, 768, 767, 0,
	774, 775, 0, 804, 805, 807, 813, 814, 815, 826,
	873, 874, 882, 884, 885, 883, 886, 887, 888, 891,
	892, 893, 894, 889, 890, 895, 787, 791, 788, 789,
	790, 802, 792, 793, 794, 795, 796, 797, 798, 799,
	800, 801, 803, 944, 945, 946, 947, 948, 949, 819,
	823, 822, 820, 821, 817, 818, 845, 844, 846, 847,
	848, 849, 850, 851, 853, 852, 854, 855, 856, 857,
	858, 859, 827, 828, 831, 832, 830, 829, 833, 842,
	843, 834, 835, 836, 837, 838, 839, 841, 840, 860,
	861, 862, 863, 864, 866, 865, 869, 870, 868, 867,
	872, 871, 766, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 935, 264, 936, 0, 0,
	940, 0, 0, 0, 942, 941, 0, 943, 905, 904,
	0, 0, 937, 938, 0, 939, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	950, 951, 952, 953, 954, 955, 956, 957, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 1025,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 778, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	765, 0, 0, 0, 272, 770, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 777, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 772, 773,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 95, 0, 0, 1026,
	509, 960, 749, 926, 964, 1027, 978, 979, 980, 965,
	0, 240, 966, 967, 247, 968, 0, 925, 808, 810,
	809, 875, 876, 877, 878, 879, 880, 881, 811, 812,
	806, 973, 610, 981, 982, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 745, 762, 0,
	776, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 759, 760, 1077, 0, 0, 0, 920, 0, 761,
	0, 0, 769, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 771, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 919, 0, 0, 630, 0, 0, 917, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 970, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 971, 972, 258, 653,
	816, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 824, 825, 282, 309, 901,
	900, 899, 308, 310, 897, 898, 896, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	907, 929, 918, 782, 783, 908, 909, 933, 910, 785,
	786, 930, 931, 779, 780, 784, 932, 934, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 921, 768, 767, 0,
	774, 775, 0, 804, 805, 807, 813, 814, 815, 826,
	873, 874, 882, 884, 885, 883, 886, 887, 888, 891,
	892, 893, 894, 889, 890, 895, 787, 791, 788, 789,
	790, 802, 792, 793, 794, 795, 796, 797, 798, 799,
	800, 801, 803, 944, 945, 946, 947, 948, 949, 819,
	823, 822, 820, 821, 817, 818, 845, 844, 846, 847,
	848, 849, 850, 851, 853, 852, 854, 855, 856, 857,
	858, 859, 827, 828, 831, 832, 830, 829, 833, 842,
	843, 834, 835, 836, 837, 838, 839, 841, 840, 860,
	861, 862, 863, 864, 866, 865, 869, 870, 868, 867,
	872, 871, 766, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 935, 264, 936, 0, 0,
	940, 0, 0, 0, 942, 941, 0, 943, 905, 904,
	0, 0, 937, 938, 0, 939, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	950, 951, 952, 953, 954, 955, 956, 957, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 1025,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 778, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	765, 0, 0, 0, 272, 770, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 777, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 772, 773,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 95, 0, 0, 1026,
	509, 960, 749, 926, 964, 1027, 978, 979, 980, 965,
	0, 240, 966, 967, 247, 968, 0, 925, 808, 810,
	809, 875, 876, 877, 878, 879, 880, 881, 811, 812,
	806, 973, 610, 981, 982, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 745, 762, 0,
	776, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 759, 760, 0, 0, 0, 0, 920, 0, 761,
	0, 0, 769, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 771, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 919, 0, 0, 630, 0, 0, 917, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 970, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 971, 972, 258, 653,
	816, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 824, 825, 282, 309, 901,
	900, 899, 308, 310, 897, 898, 896, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	907, 929, 918, 782, 783, 908, 909, 933, 910, 785,
	786, 930, 931, 779, 780, 784, 932, 934, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 921, 768, 767, 0,
	774, 775, 0, 804, 805, 807, 813, 814, 815, 826,
	873, 874, 882, 884, 885, 883, 886, 887, 888, 891,
	892, 893, 894, 889, 890, 895, 787, 791, 788, 789,
	790, 802, 792, 793, 794, 795, 796, 797, 798, 799,
	800, 801, 803, 944, 945, 946, 947, 948, 949, 819,
	823, 822, 820, 821, 817, 818, 845, 844, 846, 847,
	848, 849, 850, 851, 853, 852, 854, 855, 856, 857,
	858, 859, 827, 828, 831, 832, 830, 829, 833, 842,
	843, 834, 835, 836, 837, 838, 839, 841, 840, 860,
	861, 862, 863, 864, 866, 865, 869, 870, 868, 867,
	872, 871, 766, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 935, 264, 936, 0, 0,
	940, 0, 0, 0, 942, 941, 0, 943, 905, 904,
	0, 0, 937, 938, 0, 939, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	950, 951, 952, 953, 954, 955, 956, 957, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 1025,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 778, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	765, 0, 0, 0, 272, 770, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 777, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 772, 773,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 95, 0, 0, 1026,
	509, 960, 749, 926, 964, 1027, 978, 979, 980, 965,
	0, 240, 966, 967, 247, 968, 0, 925, 808, 810,
	809, 875, 876, 877, 878, 879, 880, 881, 811, 812,
	806, 973, 610, 981, 982, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 745, 762, 0,
	776, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 759, 760, 0, 0, 0, 0, 920, 0, 761,
	0, 0, 769, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 3183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 919, 0, 0, 630, 0, 0, 917, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 970, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 971, 972, 258, 653,
	816, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 824, 825, 282, 309, 901,
	900, 899, 308, 310, 897, 898, 896, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	907, 929, 918, 782, 783, 908, 909, 933, 910, 785,
	786, 930, 931, 779, 780, 784, 932, 934, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 921, 768, 767, 0,
	774, 775, 0, 804, 805, 807, 813, 814, 815, 826,
	873, 874, 882, 884, 885, 883, 886, 887, 888, 891,
	892, 893, 894, 889, 890, 895, 787, 791, 788, 789,
	790, 802, 792, 793, 794, 795, 796, 797, 798, 799,
	800, 801, 803, 944, 945, 946, 947, 948, 949, 819,
	823, 822, 820, 821, 817, 818, 845, 844, 846, 847,
	848, 849, 850, 851, 853, 852, 854, 855, 856, 857,
	858, 859, 827, 828, 831, 832, 830, 829, 833, 842,
	843, 834, 835, 836, 837, 838, 839, 841, 840, 860,
	861, 862, 863, 864, 866, 865, 869, 870, 868, 867,
	872, 871, 766, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 935, 264, 936, 0, 0,
	940, 0, 0, 0, 942, 941, 0, 943, 905, 904,
	0, 0, 937, 938, 0, 939, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	950, 951, 952, 953, 954, 955, 956, 957, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 1025,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 778, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	765, 0, 0, 0, 272, 770, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 777, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 772, 773,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 95, 0, 0, 1026,
	509, 960, 749, 926, 964, 1027, 978, 979, 980, 965,
	0, 240, 966, 967, 247, 968, 0, 925, 808, 810,
	809, 875, 876, 877, 878, 879, 880, 881, 811, 812,
	806, 973, 610, 981, 982, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 745, 762, 0,
	776, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 759, 760, 0, 0, 0, 0, 920, 0, 761,
	0, 0, 769, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 3179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 919, 0, 0, 630, 0, 0, 917, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 970, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 971, 972, 258, 653,
	816, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 824, 825, 282, 309, 901,
	900, 899, 308, 310, 897, 898, 896, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	907, 929, 918, 782, 783, 908, 909, 933, 910, 785,
	786, 930, 931, 779, 780, 784, 932, 934, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 921, 768, 767, 0,
	774, 775, 0, 804, 805, 807, 813, 814, 815, 826,
	873, 874, 882, 884, 885, 883, 886, 887, 888, 891,
	892, 893, 894, 889, 890, 895, 787, 791, 788, 789,
	790, 802, 792, 793, 794, 795, 796, 797, 798, 799,
	800, 801, 803, 944, 945, 946, 947, 948, 949, 819,
	823, 822, 820, 821, 817, 818, 845, 844, 846, 847,
	848, 849, 850, 851, 853, 852, 854, 855, 856, 857,
	858, 859, 827, 828, 831, 832, 830, 829, 833, 842,
	843, 834, 835, 836, 837, 838, 839, 841, 840, 860,
	861, 862, 863, 864, 866, 865, 869, 870, 868, 867,
	872, 871, 766, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 935, 264, 936, 0, 0,
	940, 0, 0, 0, 942, 941, 0, 943, 905, 904,
	0, 0, 937, 938, 0, 939, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	950, 951, 952, 953, 954, 955, 956, 957, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 1025,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 778, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	765, 0, 0, 0, 272, 770, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 777, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 772, 773,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 95, 0, 0, 1026,
	509, 960, 1098, 926, 964, 1027, 978, 979, 980, 965,
	0, 240, 966, 967, 247, 968, 0, 925, 808, 810,
	809, 875, 876, 877, 878, 879, 880, 881, 811, 812,
	806, 973, 610, 981, 982, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 762, 0,
	776, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 759, 760, 0, 0, 0, 0, 920, 0, 761,
	0, 0, 769, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 771, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 919, 0, 0, 630, 0, 0, 917, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 970, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 971, 972, 258, 653,
	816, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 824, 825, 282, 309, 901,
	900, 899, 308, 310, 897, 898, 896, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	907, 929, 918, 782, 783, 908, 909, 933, 910, 785,
	786, 930, 931, 779, 780, 784, 932, 934, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 921, 768, 767, 0,
	774, 775, 0, 804, 805, 807, 813, 814, 815, 826,
	873, 874, 882, 884, 885, 883, 886, 887, 888, 891,
	892, 893, 894, 889, 890, 895, 787, 791, 788, 789,
	790, 802, 792, 793, 794, 795, 796, 797, 798, 799,
	800, 801, 803, 944, 945, 946, 947, 948, 949, 819,
	823, 822, 820, 821, 817, 818, 845, 844, 846, 847,
	848, 849, 850, 851, 853, 852, 854, 855, 856, 857,
	858, 859, 827, 828, 831, 832, 830, 829, 833, 842,
	843, 834, 835, 836, 837, 838, 839, 841, 840, 860,
	861, 862, 863, 864, 866, 865, 869, 870, 868, 867,
	872, 871, 766, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 935, 264, 936, 0, 0,
	940, 0, 0, 0, 942, 941, 0, 943, 905, 904,
	0, 0, 937, 938, 0, 939, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	950, 951, 952, 953, 954, 955, 956, 957, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 1025,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 778, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	765, 0, 0, 0, 272, 770, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 777, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 772, 773,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 95, 0, 0, 1026,
	509, 960, 1098, 926, 964, 1027, 978, 979, 980, 965,
	0, 240, 966, 967, 247, 968, 0, 925, 808, 810,
	809, 875, 876, 877, 878, 879, 880, 881, 811, 812,
	806, 973, 610, 981, 982, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 762, 0,
	776, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 759, 760, 0, 0, 0, 0, 920, 0, 761,
	0, 0, 769, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 2132, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 919, 0, 0, 630, 0, 0, 917, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 970, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 971, 972, 258, 653,
	816, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 824, 825, 282, 309, 901,
	900, 899, 308, 310, 897, 898, 896, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	907, 929, 918, 782, 783, 908, 909, 933, 910, 785,
	786, 930, 931, 779, 780, 784, 932, 934, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 921, 768, 767, 0,
	774, 775, 0, 804, 805, 807, 813, 814, 815, 826,
	873, 874, 882, 884, 885, 883, 886, 887, 888, 891,
	892, 893, 894, 889, 890, 895, 787, 791, 788, 789,
	790, 802, 792, 793, 794, 795, 796, 797, 798, 799,
	800, 801, 803, 944, 945, 946, 947, 948, 949, 819,
	823, 822, 820, 821, 817, 818, 845, 844, 846, 847,
	848, 849, 850, 851, 853, 852, 854, 855, 856, 857,
	858, 859, 827, 828, 831, 832, 830, 829, 833, 842,
	843, 834, 835, 836, 837, 838, 839, 841, 840, 860,
	861, 862, 863, 864, 866, 865, 869, 870, 868, 867,
	872, 871, 766, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 935, 264, 936, 0, 0,
	940, 0, 0, 0, 942, 941, 0, 943, 905, 904,
	0, 0, 937, 938, 0, 939, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	950, 951, 952, 953, 954, 955, 956, 957, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 1025,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 778, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	765, 0, 0, 0, 272, 770, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 777, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 772, 773,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 95, 0, 0, 1026,
	509, 960, 1098, 926, 964, 1027, 978, 979, 980, 965,
	0, 240, 966, 967, 247, 968, 0, 925, 808, 810,
	809, 875, 876, 877, 878, 879, 880, 881, 811, 812,
	806, 973, 610, 981, 982, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 762, 0,
	776, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 759, 760, 0, 0, 0, 0, 920, 0, 761,
	0, 0, 769, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 2130, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 919, 0, 0, 630, 0, 0, 917, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 970, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 971, 972, 258, 653,
	816, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 824, 825, 282, 309, 901,
	900, 899, 308, 310, 897, 898, 896, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	907, 929, 918, 782, 783, 908, 909, 933, 910, 785,
	786, 930, 931, 779, 780, 784, 932, 934, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 921, 768, 767, 0,
	774, 775, 0, 804, 805, 807, 813, 814, 815, 826,
	873, 874, 882, 884, 885, 883, 886, 887, 888, 891,
	892, 893, 894, 889, 890, 895, 787, 791, 788, 789,
	790, 802, 792, 793, 794, 795, 796, 797, 798, 799,
	800, 801, 803, 944, 945, 946, 947, 948, 949, 819,
	823, 822, 820, 821, 817, 818, 845, 844, 846, 847,
	848, 849, 850, 851, 853, 852, 854, 855, 856, 857,
	858, 859, 827, 828, 831, 832, 830, 829, 833, 842,
	843, 834, 835, 836, 837, 838, 839, 841, 840, 860,
	861, 862, 863, 864, 866, 865, 869, 870, 868, 867,
	872, 871, 766, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 935, 264, 936, 0, 0,
	940, 0, 0, 0, 942, 941, 0, 943, 905, 904,
	0, 0, 937, 938, 0, 939, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	950, 951, 952, 953, 954, 955, 956, 957, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 1025,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 0, 0, 0, 0,
	509, 725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 610, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 1149, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 0, 0, 1148, 630, 0, 0, 0, 0,
	0, 1145, 1146, 367, 1106, 332, 199, 227, 1139, 1143,
	414, 463, 475, 0, 0, 0, 255, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 591, 592, 258, 653,
	230, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 357, 358, 282, 309, 449,
	377, 450, 308, 310, 406, 405, 407, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	201, 0, 0, 0, 0, 256, 257, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 0, 0, 0, 0,
	0, 400, 0, 593, 594, 673, 386, 488, 604, 337,
	351, 354, 343, 363, 0, 364, 339, 340, 345, 348,
	349, 350, 355, 356, 360, 366, 251, 212, 392, 401,
	580, 314, 218, 219, 220, 526, 527, 528, 529, 620,
	621, 625, 207, 464, 465, 466, 467, 294, 615, 311,
	470, 469, 333, 334, 381, 451, 542, 544, 555, 559,
	561, 563, 569, 572, 543, 545, 556, 560, 562, 564,
	570, 573, 532, 534, 536, 538, 551, 550, 547, 575,
	576, 553, 558, 537, 549, 554, 567, 574, 571, 531,
	535, 539, 548, 566, 565, 546, 557, 568, 552, 540,
	533, 541, 0, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	303, 304, 446, 447, 316, 317, 647, 648, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 0,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 0, 0, 0, 1717,
	509, 960, 0, 0, 1714, 0, 0, 0, 0, 1712,
	0, 240, 1713, 1711, 247, 1716, 0, 925, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 610, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 0, 0, 0, 630, 0, 0, 0, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 255, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 591, 592, 258, 653,
	230, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 357, 358, 282, 309, 449,
	377, 450, 308, 310, 406, 405, 407, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	201, 0, 0, 0, 0, 256, 257, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 0, 0, 0, 0,
	0, 400, 0, 593, 594, 673, 386, 488, 604, 337,
	351, 354, 343, 363, 0, 364, 339, 340, 345, 348,
	349, 350, 355, 356, 360, 366, 251, 212, 392, 401,
	580, 314, 218, 219, 220, 526, 527, 528, 529, 620,
	621, 625, 207, 464, 465, 466, 467, 294, 615, 311,
	470, 469, 333, 334, 381, 451, 542, 544, 555, 559,
	561, 563, 569, 572, 543, 545, 556, 560, 562, 564,
	570, 573, 532, 534, 536, 538, 551, 550, 547, 575,
	576, 553, 558, 537, 549, 554, 567, 574, 571, 531,
	535, 539, 548, 566, 565, 546, 557, 568, 552, 540,
	533, 541, 0, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	303, 304, 446, 447, 316, 317, 647, 648, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 0,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 86, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 97, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 95, 0, 0, 0,
	509, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 610, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 0, 0, 0, 630, 0, 0, 0, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 255, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 591, 592, 258, 653,
	230, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 357, 358, 282, 309, 449,
	377, 450, 308, 310, 406, 405, 407, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	201, 0, 0, 0, 0, 256, 257, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 0, 0, 0, 0,
	0, 400, 0, 593, 594, 673, 386, 488, 604, 337,
	351, 354, 343, 363, 0, 364, 339, 340, 345, 348,
	349, 350, 355, 356, 360, 366, 251, 212, 392, 401,
	580, 314, 218, 219, 220, 526, 527, 528, 529, 620,
	621, 625, 207, 464, 465, 466, 467, 294, 615, 311,
	470, 469, 333, 334, 381, 451, 542, 544, 555, 559,
	561, 563, 569, 572, 543, 545, 556, 560, 562, 564,
	570, 573, 532, 534, 536, 538, 551, 550, 547, 575,
	576, 553, 558, 537, 549, 554, 567, 574, 571, 531,
	535, 539, 548, 566, 565, 546, 557, 568, 552, 540,
	533, 541, 0, 198, 223, 370, 94, 456, 290, 651,
	619, 486, 614, 208, 225, 0, 264, 0, 0, 0,
	0, 0, 0, 2437, 0, 0, 2436, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	303, 304, 446, 447, 316, 317, 647, 648, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 0,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 86, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 97, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 95, 0, 1761, 0,
	509, 725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 610, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 0, 0, 0, 630, 0, 0, 0, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 255, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 591, 592, 258, 653,
	230, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 357, 358, 282, 309, 449,
	377, 450, 308, 310, 406, 405, 407, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	201, 0, 0, 0, 0, 256, 257, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 0, 0, 0, 0,
	0, 400, 0, 593, 594, 673, 386, 488, 604, 337,
	351, 354, 343, 363, 0, 364, 339, 340, 345, 348,
	349, 350, 355, 356, 360, 366, 251, 212, 392, 401,
	580, 314, 218, 219, 220, 526, 527, 528, 529, 620,
	621, 625, 207, 464, 465, 466, 467, 294, 615, 311,
	470, 469, 333, 334, 381, 451, 542, 544, 555, 559,
	561, 563, 569, 572, 543, 545, 556, 560, 562, 564,
	570, 573, 532, 534, 536, 538, 551, 550, 547, 575,
	576, 553, 558, 537, 549, 554, 567, 574, 571, 531,
	535, 539, 548, 566, 565, 546, 557, 568, 552, 540,
	533, 541, 0, 198, 223, 370, 94, 456, 290, 651,
	619, 486, 614, 208, 225, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	303, 304, 446, 447, 316, 317, 647, 648, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 0,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 1786, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 1788,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 0, 0, 0, 1790,
	509, 725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 610, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 1485, 0, 1486, 1487, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 0, 0, 0, 630, 0, 0, 0, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 255, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 591, 592, 258, 653,
	230, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 357, 358, 282, 309, 449,
	377, 450, 308, 310, 406, 405, 407, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	201, 0, 0, 0, 0, 256, 257, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 0, 0, 0, 0,
	0, 400, 0, 593, 594, 673, 386, 488, 604, 337,
	351, 354, 343, 363, 0, 364, 339, 340, 345, 348,
	349, 350, 355, 356, 360, 366, 251, 212, 392, 401,
	580, 314, 218, 219, 220, 526, 527, 528, 529, 620,
	621, 625, 207, 464, 465, 466, 467, 294, 615, 311,
	470, 469, 333, 334, 381, 451, 542, 544, 555, 559,
	561, 563, 569, 572, 543, 545, 556, 560, 562, 564,
	570, 573, 532, 534, 536, 538, 551, 550, 547, 575,
	576, 553, 558, 537, 549, 554, 567, 574, 571, 531,
	535, 539, 548, 566, 565, 546, 557, 568, 552, 540,
	533, 541, 0, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	303, 304, 446, 447, 316, 317, 647, 648, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 0,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 95, 0, 0, 0,
	509, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 610, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 0, 0, 0, 630, 0, 0, 0, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 255, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 591, 592, 258, 653,
	230, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 357, 358, 282, 309, 449,
	377, 450, 308, 310, 406, 405, 407, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	201, 0, 0, 0, 0, 256, 257, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 0, 0, 0, 0,
	0, 400, 0, 593, 594, 673, 386, 488, 604, 337,
	351, 354, 343, 363, 0, 364, 339, 340, 345, 348,
	349, 350, 355, 356, 360, 366, 251, 212, 392, 401,
	580, 314, 218, 219, 220, 526, 527, 528, 529, 620,
	621, 625, 207, 464, 465, 466, 467, 294, 615, 311,
	470, 469, 333, 334, 381, 451, 542, 544, 555, 559,
	561, 563, 569, 572, 543, 545, 556, 560, 562, 564,
	570, 573, 532, 534, 536, 538, 551, 550, 547, 575,
	576, 553, 558, 537, 549, 554, 567, 574, 571, 531,
	535, 539, 548, 566, 565, 546, 557, 568, 552, 540,
	533, 541, 0, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 0, 264, 0, 0, 0,
	0, 0, 0, 2437, 0, 0, 2436, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	303, 304, 446, 447, 316, 317, 647, 648, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 0,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 2382,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 0, 0, 0, 1970,
	509, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 610, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 0, 0, 0, 630, 0, 0, 0, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 255, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 2380,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 591, 592, 258, 653,
	230, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 357, 358, 282, 309, 449,
	377, 450, 308, 310, 406, 405, 407, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	201, 0, 0, 0, 0, 256, 257, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 0, 0, 0, 0,
	0, 400, 0, 593, 594, 673, 386, 488, 604, 337,
	351, 354, 343, 363, 0, 364, 339, 340, 345, 348,
	349, 350, 355, 356, 360, 366, 251, 212, 392, 401,
	580, 314, 218, 219, 220, 526, 527, 528, 529, 620,
	621, 625, 207, 464, 465, 466, 467, 294, 615, 311,
	470, 469, 333, 334, 381, 451, 542, 544, 555, 559,
	561, 563, 569, 572, 543, 545, 556, 560, 562, 564,
	570, 573, 532, 534, 536, 538, 551, 550, 547, 575,
	576, 553, 558, 537, 549, 554, 567, 574, 571, 531,
	535, 539, 548, 566, 565, 546, 557, 568, 552, 540,
	533, 541, 0, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	303, 304, 446, 447, 316, 317, 647, 648, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 0,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 0, 0, 0, 0,
	509, 725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 610, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 1100, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 0, 0, 0, 630, 0, 0, 0, 0,
	0, 0, 0, 367, 1106, 332, 199, 227, 1104, 0,
	414, 463, 475, 0, 0, 0, 255, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 591, 592, 258, 653,
	230, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 357, 358, 282, 309, 449,
	377, 450, 308, 310, 406, 405, 407, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	201, 0, 0, 0, 0, 256, 257, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 0, 0, 0, 0,
	0, 400, 0, 593, 594, 673, 386, 488, 604, 337,
	351, 354, 343, 363, 0, 364, 339, 340, 345, 348,
	349, 350, 355, 356, 360, 366, 251, 212, 392, 401,
	580, 314, 218, 219, 220, 526, 527, 528, 529, 620,
	621, 625, 207, 464, 465, 466, 467, 294, 615, 311,
	470, 469, 333, 334, 381, 451, 542, 544, 555, 559,
	561, 563, 569, 572, 543, 545, 556, 560, 562, 564,
	570, 573, 532, 534, 536, 538, 551, 550, 547, 575,
	576, 553, 558, 537, 549, 554, 567, 574, 571, 531,
	535, 539, 548, 566, 565, 546, 557, 568, 552, 540,
	533, 541, 0, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	303, 304, 446, 447, 316, 317, 647, 648, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 0,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 2382,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 0, 0, 0, 1970,
	509, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 610, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 0, 0, 0, 630, 0, 0, 0, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 255, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 591, 592, 258, 653,
	230, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 357, 358, 282, 309, 449,
	377, 450, 308, 310, 406, 405, 407, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	201, 0, 0, 0, 0, 256, 257, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 0, 0, 0, 0,
	0, 400, 0, 593, 594, 673, 386, 488, 604, 337,
	351, 354, 343, 363, 0, 364, 339, 340, 345, 348,
	349, 350, 355, 356, 360, 366, 251, 212, 392, 401,
	580, 314, 218, 219, 220, 526, 527, 528, 529, 620,
	621, 625, 207, 464, 465, 466, 467, 294, 615, 311,
	470, 469, 333, 334, 381, 451, 542, 544, 555, 559,
	561, 563, 569, 572, 543, 545, 556, 560, 562, 564,
	570, 573, 532, 534, 536, 538, 551, 550, 547, 575,
	576, 553, 558, 537, 549, 554, 567, 574, 571, 531,
	535, 539, 548, 566, 565, 546, 557, 568, 552, 540,
	533, 541, 0, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	303, 304, 446, 447, 316, 317, 647, 648, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 0,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 0, 0, 1761, 0,
	509, 725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 610, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 0, 0, 0, 630, 0, 0, 0, 3739,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 255, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 591, 592, 258, 653,
	230, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 357, 358, 282, 309, 449,
	377, 450, 308, 310, 406, 405, 407, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	201, 0, 0, 0, 0, 256, 257, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 0, 0, 0, 0,
	0, 400, 0, 593, 594, 673, 386, 488, 604, 337,
	351, 354, 343, 363, 0, 364, 339, 340, 345, 348,
	349, 350, 355, 356, 360, 366, 251, 212, 392, 401,
	580, 314, 218, 219, 220, 526, 527, 528, 529, 620,
	621, 625, 207, 464, 465, 466, 467, 294, 615, 311,
	470, 469, 333, 334, 381, 451, 542, 544, 555, 559,
	561, 563, 569, 572, 543, 545, 556, 560, 562, 564,
	570, 573, 532, 534, 536, 538, 551, 550, 547, 575,
	576, 553, 558, 537, 549, 554, 567, 574, 571, 531,
	535, 539, 548, 566, 565, 546, 557, 568, 552, 540,
	533, 541, 0, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	303, 304, 446, 447, 316, 317, 647, 648, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 0,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 0, 0, 0, 2141,
	509, 725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 610, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2142, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 0, 0, 0, 630, 0, 0, 0, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 255, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 591, 592, 258, 653,
	230, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 357, 358, 282, 309, 449,
	377, 450, 308, 310, 406, 405, 407, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	201, 0, 0, 0, 0, 256, 257, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 0, 0, 0, 0,
	0, 400, 0, 593, 594, 673, 386, 488, 604, 337,
	351, 354, 343, 363, 0, 364, 339, 340, 345, 348,
	349, 350, 355, 356, 360, 366, 251, 212, 392, 401,
	580, 314, 218, 219, 220, 526, 527, 528, 529, 620,
	621, 625, 207, 464, 465, 466, 467, 294, 615, 311,
	470, 469, 333, 334, 381, 451, 542, 544, 555, 559,
	561, 563, 569, 572, 543, 545, 556, 560, 562, 564,
	570, 573, 532, 534, 536, 538, 551, 550, 547, 575,
	576, 553, 558, 537, 549, 554, 567, 574, 571, 531,
	535, 539, 548, 566, 565, 546, 557, 568, 552, 540,
	533, 541, 0, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	303, 304, 446, 447, 316, 317, 647, 648, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 0,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 0, 0, 0, 2890,
	509, 725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 610, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2891, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 0, 0, 0, 630, 0, 0, 0, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 255, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 591, 592, 258, 653,
	230, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 357, 358, 282, 309, 449,
	377, 450, 308, 310, 406, 405, 407, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	201, 0, 0, 0, 0, 256, 257, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 0, 0, 0, 0,
	0, 400, 0, 593, 594, 673, 386, 488, 604, 337,
	351, 354, 343, 363, 0, 364, 339, 340, 345, 348,
	349, 350, 355, 356, 360, 366, 251, 212, 392, 401,
	580, 314, 218, 219, 220, 526, 527, 528, 529, 620,
	621, 625, 207, 464, 465, 466, 467, 294, 615, 311,
	470, 469, 333, 334, 381, 451, 542, 544, 555, 559,
	561, 563, 569, 572, 543, 545, 556, 560, 562, 564,
	570, 573, 532, 534, 536, 538, 551, 550, 547, 575,
	576, 553, 558, 537, 549, 554, 567, 574, 571, 531,
	535, 539, 548, 566, 565, 546, 557, 568, 552, 540,
	533, 541, 0, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	303, 304, 446, 447, 316, 317, 647, 648, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 0,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 0, 0, 0, 0,
	509, 725, 0, 0, 0, 0, 2875, 0, 0, 0,
	0, 240, 0, 0, 247, 2876, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 610, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 0, 0, 0, 630, 0, 0, 0, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 255, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 591, 592, 258, 653,
	230, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 357, 358, 282, 309, 449,
	377, 450, 308, 310, 406, 405, 407, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	201, 0, 0, 0, 0, 256, 257, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 0, 0, 0, 0,
	0, 400, 0, 593, 594, 673, 386, 488, 604, 337,
	351, 354, 343, 363, 0, 364, 339, 340, 345, 348,
	349, 350, 355, 356, 360, 366, 251, 212, 392, 401,
	580, 314, 218, 219, 220, 526, 527, 528, 529, 620,
	621, 625, 207, 464, 465, 466, 467, 294, 615, 311,
	470, 469, 333, 334, 381, 451, 542, 544, 555, 559,
	561, 563, 569, 572, 543, 545, 556, 560, 562, 564,
	570, 573, 532, 534, 536, 538, 551, 550, 547, 575,
	576, 553, 558, 537, 549, 554, 567, 574, 571, 531,
	535, 539, 548, 566, 565, 546, 557, 568, 552, 540,
	533, 541, 0, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	303, 304, 446, 447, 316, 317, 647, 648, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 0,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 272, 1809, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 0, 0, 0, 1808,
	509, 725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 610, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 0, 0, 0, 630, 0, 0, 0, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 255, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 591, 592, 258, 653,
	230, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 357, 358, 282, 309, 449,
	377, 450, 308, 310, 406, 405, 407, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	201, 0, 0, 0, 0, 256, 257, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 0, 0, 0, 0,
	0, 400, 0, 593, 594, 673, 386, 488, 604, 337,
	351, 354, 343, 363, 0, 364, 339, 340, 345, 348,
	349, 350, 355, 356, 360, 366, 251, 212, 392, 401,
	580, 314, 218, 219, 220, 526, 527, 528, 529, 620,
	621, 625, 207, 464, 465, 466, 467, 294, 615, 311,
	470, 469, 333, 334, 381, 451, 542, 544, 555, 559,
	561, 563, 569, 572, 543, 545, 556, 560, 562, 564,
	570, 573, 532, 534, 536, 538, 551, 550, 547, 575,
	576, 553, 558, 537, 549, 554, 567, 574, 571, 531,
	535, 539, 548, 566, 565, 546, 557, 568, 552, 540,
	533, 541, 0, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	303, 304, 446, 447, 316, 317, 647, 648, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 0,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 0, 0, 0, 0,
	509, 727, 728, 729, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 610, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 0, 0, 0, 630, 0, 0, 0, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 255, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 591, 592, 258, 653,
	230, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 357, 358, 282, 309, 449,
	377, 450, 308, 310, 406, 405, 407, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	201, 0, 0, 0, 0, 256, 257, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 0, 0, 0, 0,
	0, 400, 0, 593, 594, 673, 386, 488, 604, 337,
	351, 354, 343, 363, 0, 364, 339, 340, 345, 348,
	349, 350, 355, 356, 360, 366, 251, 212, 392, 401,
	580, 314, 218, 219, 220, 526, 527, 528, 529, 620,
	621, 625, 207, 464, 465, 466, 467, 294, 615, 311,
	470, 469, 333, 334, 381, 451, 542, 544, 555, 559,
	561, 563, 569, 572, 543, 545, 556, 560, 562, 564,
	570, 573, 532, 534, 536, 538, 551, 550, 547, 575,
	576, 553, 558, 537, 549, 554, 567, 574, 571, 531,
	535, 539, 548, 566, 565, 546, 557, 568, 552, 540,
	533, 541, 0, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	303, 304, 446, 447, 316, 317, 647, 648, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 0,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 0, 0, 0, 0,
	509, 725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 610, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 0, 0, 0, 630, 0, 0, 0, 4083,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 255, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 591, 592, 258, 653,
	230, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 357, 358, 282, 309, 449,
	377, 450, 308, 310, 406, 405, 407, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	201, 0, 0, 0, 0, 256, 257, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 0, 0, 0, 0,
	0, 400, 0, 593, 594, 673, 386, 488, 604, 337,
	351, 354, 343, 363, 0, 364, 339, 340, 345, 348,
	349, 350, 355, 356, 360, 366, 251, 212, 392, 401,
	580, 314, 218, 219, 220, 526, 527, 528, 529, 620,
	621, 625, 207, 464, 465, 466, 467, 294, 615, 311,
	470, 469, 333, 334, 381, 451, 542, 544, 555, 559,
	561, 563, 569, 572, 543, 545, 556, 560, 562, 564,
	570, 573, 532, 534, 536, 538, 551, 550, 547, 575,
	576, 553, 558, 537, 549, 554, 567, 574, 571, 531,
	535, 539, 548, 566, 565, 546, 557, 568, 552, 540,
	533, 541, 0, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	303, 304, 446, 447, 316, 317, 647, 648, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 0,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 0, 0, 0, 1970,
	509, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 610, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 0, 0, 0, 630, 0, 0, 0, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 255, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 591, 592, 258, 653,
	230, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 357, 358, 282, 309, 449,
	377, 450, 308, 310, 406, 405, 407, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	201, 0, 0, 0, 0, 256, 257, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 0, 0, 0, 0,
	0, 400, 0, 593, 594, 673, 386, 488, 604, 337,
	351, 354, 343, 363, 0, 364, 339, 340, 345, 348,
	349, 350, 355, 356, 360, 366, 251, 212, 392, 401,
	580, 314, 218, 219, 220, 526, 527, 528, 529, 620,
	621, 625, 207, 464, 465, 466, 467, 294, 615, 311,
	470, 469, 333, 334, 381, 451, 542, 544, 555, 559,
	561, 563, 569, 572, 543, 545, 556, 560, 562, 564,
	570, 573, 532, 534, 536, 538, 551, 550, 547, 575,
	576, 553, 558, 537, 549, 554, 567, 574, 571, 531,
	535, 539, 548, 566, 565, 546, 557, 568, 552, 540,
	533, 541, 0, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	303, 304, 446, 447, 316, 317, 647, 648, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 0,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 0, 0, 0, 0,
	509, 725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 610, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 0, 0, 0, 630, 0, 0, 0, 3739,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 255, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 591, 592, 258, 653,
	230, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 357, 358, 282, 309, 449,
	377, 450, 308, 310, 406, 405, 407, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	201, 0, 0, 0, 0, 256, 257, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 0, 0, 0, 0,
	0, 400, 0, 593, 594, 673, 386, 488, 604, 337,
	351, 354, 343, 363, 0, 364, 339, 340, 345, 348,
	349, 350, 355, 356, 360, 366, 251, 212, 392, 401,
	580, 314, 218, 219, 220, 526, 527, 528, 529, 620,
	621, 625, 207, 464, 465, 466, 467, 294, 615, 311,
	470, 469, 333, 334, 381, 451, 542, 544, 555, 559,
	561, 563, 569, 572, 543, 545, 556, 560, 562, 564,
	570, 573, 532, 534, 536, 538, 551, 550, 547, 575,
	576, 553, 558, 537, 549, 554, 567, 574, 571, 531,
	535, 539, 548, 566, 565, 546, 557, 568, 552, 540,
	533, 541, 0, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	303, 304, 446, 447, 316, 317, 647, 648, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 0,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 95, 0, 0, 0,
	509, 725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 610, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 0, 0, 0, 630, 0, 0, 0, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 255, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 591, 592, 258, 653,
	230, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 357, 358, 282, 309, 449,
	377, 450, 308, 310, 406, 405, 407, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	201, 0, 0, 0, 0, 256, 257, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 0, 0, 0, 0,
	0, 400, 0, 593, 594, 673, 386, 488, 604, 337,
	351, 354, 343, 363, 0, 364, 339, 340, 345, 348,
	349, 350, 355, 356, 360, 366, 251, 212, 392, 401,
	580, 314, 218, 219, 220, 526, 527, 528, 529, 620,
	621, 625, 207, 464, 465, 466, 467, 294, 615, 311,
	470, 469, 333, 334, 381, 451, 542, 544, 555, 559,
	561, 563, 569, 572, 543, 545, 556, 560, 562, 564,
	570, 573, 532, 534, 536, 538, 551, 550, 547, 575,
	576, 553, 558, 537, 549, 554, 567, 574, 571, 531,
	535, 539, 548, 566, 565, 546, 557, 568, 552, 540,
	533, 541, 0, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	303, 304, 446, 447, 316, 317, 647, 648, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 0,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 0, 0, 0, 2438,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 0, 0, 0, 0,
	509, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 610, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 0, 0, 0, 630, 0, 0, 0, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 255, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 591, 592, 258, 653,
	230, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 357, 358, 282, 309, 449,
	377, 450, 308, 310, 406, 405, 407, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	201, 0, 0, 0, 0, 256, 257, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 0, 0, 0, 0,
	0, 400, 0, 593, 594, 673, 386, 488, 604, 337,
	351, 354, 343, 363, 0, 364, 339, 340, 345, 348,
	349, 350, 355, 356, 360, 366, 251, 212, 392, 401,
	580, 314, 218, 219, 220, 526, 527, 528, 529, 620,
	621, 625, 207, 464, 465, 466, 467, 294, 615, 311,
	470, 469, 333, 334, 381, 451, 542, 544, 555, 559,
	561, 563, 569, 572, 543, 545, 556, 560, 562, 564,
	570, 573, 532, 534, 536, 538, 551, 550, 547, 575,
	576, 553, 558, 537, 549, 554, 567, 574, 571, 531,
	535, 539, 548, 566, 565, 546, 557, 568, 552, 540,
	533, 541, 0, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	303, 304, 446, 447, 316, 317, 647, 648, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 0,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 0, 0, 0, 1790,
	509, 725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 610, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 0, 0, 0, 630, 0, 0, 0, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 255, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 591, 592, 258, 653,
	230, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 357, 358, 282, 309, 449,
	377, 450, 308, 310, 406, 405, 407, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	201, 0, 0, 0, 0, 256, 257, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 0, 0, 0, 0,
	0, 400, 0, 593, 594, 673, 386, 488, 604, 337,
	351, 354, 343, 363, 0, 364, 339, 340, 345, 348,
	349, 350, 355, 356, 360, 366, 251, 212, 392, 401,
	580, 314, 218, 219, 220, 526, 527, 528, 529, 620,
	621, 625, 207, 464, 465, 466, 467, 294, 615, 311,
	470, 469, 333, 334, 381, 451, 542, 544, 555, 559,
	561, 563, 569, 572, 543, 545, 556, 560, 562, 564,
	570, 573, 532, 534, 536, 538, 551, 550, 547, 575,
	576, 553, 558, 537, 549, 554, 567, 574, 571, 531,
	535, 539, 548, 566, 565, 546, 557, 568, 552, 540,
	533, 541, 0, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	303, 304, 446, 447, 316, 317, 647, 648, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 0,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 0, 0, 0, 0,
	509, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 610, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 0, 0, 0, 630, 0, 0, 0, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 255, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 591, 592, 258, 653,
	230, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 357, 358, 282, 309, 449,
	377, 450, 308, 310, 406, 405, 407, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	201, 0, 0, 0, 0, 256, 257, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 0, 0, 0, 0,
	0, 400, 0, 593, 594, 673, 386, 488, 604, 337,
	351, 354, 343, 363, 0, 364, 339, 340, 345, 348,
	349, 350, 355, 356, 360, 366, 251, 212, 392, 401,
	580, 314, 218, 219, 220, 526, 527, 528, 529, 620,
	621, 625, 207, 464, 465, 466, 467, 294, 615, 311,
	470, 469, 333, 334, 381, 451, 542, 544, 555, 559,
	561, 563, 569, 572, 543, 545, 556, 560, 562, 564,
	570, 573, 532, 534, 536, 538, 551, 550, 547, 575,
	576, 553, 558, 537, 549, 554, 567, 574, 571, 531,
	535, 539, 548, 566, 565, 546, 557, 568, 552, 540,
	533, 541, 0, 198, 223, 370, 2088, 456, 290, 651,
	619, 486, 614, 208, 225, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	303, 304, 446, 447, 316, 317, 647, 648, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 0,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 0, 0, 0, 2079,
	509, 725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 610, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 0, 0, 0, 630, 0, 0, 0, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 255, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 591, 592, 258, 653,
	230, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 357, 358, 282, 309, 449,
	377, 450, 308, 310, 406, 405, 407, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	201, 0, 0, 0, 0, 256, 257, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 0, 0, 0, 0,
	0, 400, 0, 593, 594, 673, 386, 488, 604, 337,
	351, 354, 343, 363, 0, 364, 339, 340, 345, 348,
	349, 350, 355, 356, 360, 366, 251, 212, 392, 401,
	580, 314, 218, 219, 220, 526, 527, 528, 529, 620,
	621, 625, 207, 464, 465, 466, 467, 294, 615, 311,
	470, 469, 333, 334, 381, 451, 542, 544, 555, 559,
	561, 563, 569, 572, 543, 545, 556, 560, 562, 564,
	570, 573, 532, 534, 536, 538, 551, 550, 547, 575,
	576, 553, 558, 537, 549, 554, 567, 574, 571, 531,
	535, 539, 548, 566, 565, 546, 557, 568, 552, 540,
	533, 541, 0, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	303, 304, 446, 447, 316, 317, 647, 648, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 0,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 368,
	269, 0, 1937, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 0, 0, 0, 0,
	509, 725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 610, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 0, 0, 0, 630, 0, 0, 0, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 255, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 591, 592, 258, 653,
	230, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 357, 358, 282, 309, 449,
	377, 450, 308, 310, 406, 405, 407, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	201, 0, 0, 0, 0, 256, 257, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 0, 0, 0, 0,
	0, 400, 0, 593, 594, 673, 386, 488, 604, 337,
	351, 354, 343, 363, 0, 364, 339, 340, 345, 348,
	349, 350, 355, 356, 360, 366, 251, 212, 392, 401,
	580, 314, 218, 219, 220, 526, 527, 528, 529, 620,
	621, 625, 207, 464, 465, 466, 467, 294, 615, 311,
	470, 469, 333, 334, 381, 451, 542, 544, 555, 559,
	561, 563, 569, 572, 543, 545, 556, 560, 562, 564,
	570, 573, 532, 534, 536, 538, 551, 550, 547, 575,
	576, 553, 558, 537, 549, 554, 567, 574, 571, 531,
	535, 539, 548, 566, 565, 546, 557, 568, 552, 540,
	533, 541, 0, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	303, 304, 446, 447, 316, 317, 647, 648, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 0,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 368,
	269, 0, 1935, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 0, 0, 0, 0,
	509, 725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 610, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 0, 0, 0, 630, 0, 0, 0, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 255, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 591, 592, 258, 653,
	230, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 357, 358, 282, 309, 449,
	377, 450, 308, 310, 406, 405, 407, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	201, 0, 0, 0, 0, 256, 257, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 0, 0, 0, 0,
	0, 400, 0, 593, 594, 673, 386, 488, 604, 337,
	351, 354, 343, 363, 0, 364, 339, 340, 345, 348,
	349, 350, 355, 356, 360, 366, 251, 212, 392, 401,
	580, 314, 218, 219, 220, 526, 527, 528, 529, 620,
	621, 625, 207, 464, 465, 466, 467, 294, 615, 311,
	470, 469, 333, 334, 381, 451, 542, 544, 555, 559,
	561, 563, 569, 572, 543, 545, 556, 560, 562, 564,
	570, 573, 532, 534, 536, 538, 551, 550, 547, 575,
	576, 553, 558, 537, 549, 554, 567, 574, 571, 531,
	535, 539, 548, 566, 565, 546, 557, 568, 552, 540,
	533, 541, 0, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	303, 304, 446, 447, 316, 317, 647, 648, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 0,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 368,
	269, 0, 1933, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 0, 0, 0, 0,
	509, 725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 610, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 0, 0, 0, 630, 0, 0, 0, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 255, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 591, 592, 258, 653,
	230, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 357, 358, 282, 309, 449,
	377, 450, 308, 310, 406, 405, 407, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	201, 0, 0, 0, 0, 256, 257, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 0, 0, 0, 0,
	0, 400, 0, 593, 594, 673, 386, 488, 604, 337,
	351, 354, 343, 363, 0, 364, 339, 340, 345, 348,
	349, 350, 355, 356, 360, 366, 251, 212, 392, 401,
	580, 314, 218, 219, 220, 526, 527, 528, 529, 620,
	621, 625, 207, 464, 465, 466, 467, 294, 615, 311,
	470, 469, 333, 334, 381, 451, 542, 544, 555, 559,
	561, 563, 569, 572, 543, 545, 556, 560, 562, 564,
	570, 573, 532, 534, 536, 538, 551, 550, 547, 575,
	576, 553, 558, 537, 549, 554, 567, 574, 571, 531,
	535, 539, 548, 566, 565, 546, 557, 568, 552, 540,
	533, 541, 0, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	303, 304, 446, 447, 316, 317, 647, 648, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 0,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 368,
	269, 0, 1931, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 0, 0, 0, 0,
	509, 725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 610, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 0, 0, 0, 630, 0, 0, 0, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 255, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 591, 592, 258, 653,
	230, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 357, 358, 282, 309, 449,
	377, 450, 308, 310, 406, 405, 407, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	201, 0, 0, 0, 0, 256, 257, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 0, 0, 0, 0,
	0, 400, 0, 593, 594, 673, 386, 488, 604, 337,
	351, 354, 343, 363, 0, 364, 339, 340, 345, 348,
	349, 350, 355, 356, 360, 366, 251, 212, 392, 401,
	580, 314, 218, 219, 220, 526, 527, 528, 529, 620,
	621, 625, 207, 464, 465, 466, 467, 294, 615, 311,
	470, 469, 333, 334, 381, 451, 542, 544, 555, 559,
	561, 563, 569, 572, 543, 545, 556, 560, 562, 564,
	570, 573, 532, 534, 536, 538, 551, 550, 547, 575,
	576, 553, 558, 537, 549, 554, 567, 574, 571, 531,
	535, 539, 548, 566, 565, 546, 557, 568, 552, 540,
	533, 541, 0, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	303, 304, 446, 447, 316, 317, 647, 648, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 0,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 368,
	269, 0, 1929, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 0, 0, 0, 0,
	509, 725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 610, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 0, 0, 0, 630, 0, 0, 0, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 255, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 591, 592, 258, 653,
	230, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 357, 358, 282, 309, 449,
	377, 450, 308, 310, 406, 405, 407, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	201, 0, 0, 0, 0, 256, 257, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 0, 0, 0, 0,
	0, 400, 0, 593, 594, 673, 386, 488, 604, 337,
	351, 354, 343, 363, 0, 364, 339, 340, 345, 348,
	349, 350, 355, 356, 360, 366, 251, 212, 392, 401,
	580, 314, 218, 219, 220, 526, 527, 528, 529, 620,
	621, 625, 207, 464, 465, 466, 467, 294, 615, 311,
	470, 469, 333, 334, 381, 451, 542, 544, 555, 559,
	561, 563, 569, 572, 543, 545, 556, 560, 562, 564,
	570, 573, 532, 534, 536, 538, 551, 550, 547, 575,
	576, 553, 558, 537, 549, 554, 567, 574, 571, 531,
	535, 539, 548, 566, 565, 546, 557, 568, 552, 540,
	533, 541, 0, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	303, 304, 446, 447, 316, 317, 647, 648, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 0,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 368,
	269, 0, 1925, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 0, 0, 0, 0,
	509, 725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 610, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 0, 0, 0, 630, 0, 0, 0, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 255, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 591, 592, 258, 653,
	230, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 357, 358, 282, 309, 449,
	377, 450, 308, 310, 406, 405, 407, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	201, 0, 0, 0, 0, 256, 257, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 0, 0, 0, 0,
	0, 400, 0, 593, 594, 673, 386, 488, 604, 337,
	351, 354, 343, 363, 0, 364, 339, 340, 345, 348,
	349, 350, 355, 356, 360, 366, 251, 212, 392, 401,
	580, 314, 218, 219, 220, 526, 527, 528, 529, 620,
	621, 625, 207, 464, 465, 466, 467, 294, 615, 311,
	470, 469, 333, 334, 381, 451, 542, 544, 555, 559,
	561, 563, 569, 572, 543, 545, 556, 560, 562, 564,
	570, 573, 532, 534, 536, 538, 551, 550, 547, 575,
	576, 553, 558, 537, 549, 554, 567, 574, 571, 531,
	535, 539, 548, 566, 565, 546, 557, 568, 552, 540,
	533, 541, 0, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	303, 304, 446, 447, 316, 317, 647, 648, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 0,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 368,
	269, 0, 1923, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 0, 0, 0, 0,
	509, 725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 610, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 0, 0, 0, 630, 0, 0, 0, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 255, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 591, 592, 258, 653,
	230, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 357, 358, 282, 309, 449,
	377, 450, 308, 310, 406, 405, 407, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	201, 0, 0, 0, 0, 256, 257, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 0, 0, 0, 0,
	0, 400, 0, 593, 594, 673, 386, 488, 604, 337,
	351, 354, 343, 363, 0, 364, 339, 340, 345, 348,
	349, 350, 355, 356, 360, 366, 251, 212, 392, 401,
	580, 314, 218, 219, 220, 526, 527, 528, 529, 620,
	621, 625, 207, 464, 465, 466, 467, 294, 615, 311,
	470, 469, 333, 334, 381, 451, 542, 544, 555, 559,
	561, 563, 569, 572, 543, 545, 556, 560, 562, 564,
	570, 573, 532, 534, 536, 538, 551, 550, 547, 575,
	576, 553, 558, 537, 549, 554, 567, 574, 571, 531,
	535, 539, 548, 566, 565, 546, 557, 568, 552, 540,
	533, 541, 0, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	303, 304, 446, 447, 316, 317, 647, 648, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 0,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 368,
	269, 0, 1921, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 0, 0, 0, 0,
	509, 725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 610, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 0, 0, 0, 630, 0, 0, 0, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 255, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 591, 592, 258, 653,
	230, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 357, 358, 282, 309, 449,
	377, 450, 308, 310, 406, 405, 407, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	201, 0, 0, 0, 0, 256, 257, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 0, 0, 0, 0,
	0, 400, 0, 593, 594, 673, 386, 488, 604, 337,
	351, 354, 343, 363, 0, 364, 339, 340, 345, 348,
	349, 350, 355, 356, 360, 366, 251, 212, 392, 401,
	580, 314, 218, 219, 220, 526, 527, 528, 529, 620,
	621, 625, 207, 464, 465, 466, 467, 294, 615, 311,
	470, 469, 333, 334, 381, 451, 542, 544, 555, 559,
	561, 563, 569, 572, 543, 545, 556, 560, 562, 564,
	570, 573, 532, 534, 536, 538, 551, 550, 547, 575,
	576, 553, 558, 537, 549, 554, 567, 574, 571, 531,
	535, 539, 548, 566, 565, 546, 557, 568, 552, 540,
	533, 541, 0, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	303, 304, 446, 447, 316, 317, 647, 648, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 0,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 1896, 0, 0, 0,
	509, 725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 610, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 0, 0, 0, 630, 0, 0, 0, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 255, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 591, 592, 258, 653,
	230, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 357, 358, 282, 309, 449,
	377, 450, 308, 310, 406, 405, 407, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	201, 0, 0, 0, 0, 256, 257, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 0, 0, 0, 0,
	0, 400, 0, 593, 594, 673, 386, 488, 604, 337,
	351, 354, 343, 363, 0, 364, 339, 340, 345, 348,
	349, 350, 355, 356, 360, 366, 251, 212, 392, 401,
	580, 314, 218, 219, 220, 526, 527, 528, 529, 620,
	621, 625, 207, 464, 465, 466, 467, 294, 615, 311,
	470, 469, 333, 334, 381, 451, 542, 544, 555, 559,
	561, 563, 569, 572, 543, 545, 556, 560, 562, 564,
	570, 573, 532, 534, 536, 538, 551, 550, 547, 575,
	576, 553, 558, 537, 549, 554, 567, 574, 571, 531,
	535, 539, 548, 566, 565, 546, 557, 568, 552, 540,
	533, 541, 0, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	303, 304, 446, 447, 316, 317, 647, 648, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 0,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 1794, 272, 0, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 0, 0, 0, 0,
	509, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 610, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 0, 0, 0, 630, 0, 0, 0, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 255, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 591, 592, 258, 653,
	230, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 357, 358, 282, 309, 449,
	377, 450, 308, 310, 406, 405, 407, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	201, 0, 0, 0, 0, 256, 257, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 0, 0, 0, 0,
	0, 400, 0, 593, 594, 673, 386, 488, 604, 337,
	351, 354, 343, 363, 0, 364, 339, 340, 345, 348,
	349, 350, 355, 356, 360, 366, 251, 212, 392, 401,
	580, 314, 218, 219, 220, 526, 527, 528, 529, 620,
	621, 625, 207, 464, 465, 466, 467, 294, 615, 311,
	470, 469, 333, 334, 381, 451, 542, 544, 555, 559,
	561, 563, 569, 572, 543, 545, 556, 560, 562, 564,
	570, 573, 532, 534, 536, 538, 551, 550, 547, 575,
	576, 553, 558, 537, 549, 554, 567, 574, 571, 531,
	535, 539, 548, 566, 565, 546, 557, 568, 552, 540,
	533, 541, 0, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	303, 304, 446, 447, 316, 317, 647, 648, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 0,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 95, 0, 0, 0,
	509, 960, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 610, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 0, 0, 0, 630, 0, 0, 0, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 255, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 591, 592, 258, 653,
	230, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 357, 358, 282, 309, 449,
	377, 450, 308, 310, 406, 405, 407, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	201, 0, 0, 0, 0, 256, 257, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 0, 0, 0, 0,
	0, 400, 0, 593, 594, 673, 386, 488, 604, 337,
	351, 354, 343, 363, 0, 364, 339, 340, 345, 348,
	349, 350, 355, 356, 360, 366, 251, 212, 392, 401,
	580, 314, 218, 219, 220, 526, 527, 528, 529, 620,
	621, 625, 207, 464, 465, 466, 467, 294, 615, 311,
	470, 469, 333, 334, 381, 451, 542, 544, 555, 559,
	561, 563, 569, 572, 543, 545, 556, 560, 562, 564,
	570, 573, 532, 534, 536, 538, 551, 550, 547, 575,
	576, 553, 558, 537, 549, 554, 567, 574, 571, 531,
	535, 539, 548, 566, 565, 546, 557, 568, 552, 540,
	533, 541, 0, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	303, 304, 446, 447, 316, 317, 647, 648, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 0,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 0, 0, 0, 0,
	509, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 610, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1464, 0, 299, 0, 404, 259,
	0, 455, 0, 0, 0, 630, 0, 0, 0, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 255, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 591, 592, 258, 653,
	230, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 357, 358, 282, 309, 449,
	377, 450, 308, 310, 406, 405, 407, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	201, 0, 0, 0, 0, 256, 257, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 0, 0, 0, 0,
	0, 400, 0, 593, 594, 673, 386, 488, 604, 337,
	351, 354, 343, 363, 0, 364, 339, 340, 345, 348,
	349, 350, 355, 356, 360, 366, 251, 212, 392, 401,
	580, 314, 218, 219, 220, 526, 527, 528, 529, 620,
	621, 625, 207, 464, 465, 466, 467, 294, 615, 311,
	470, 469, 333, 334, 381, 451, 542, 544, 555, 559,
	561, 563, 569, 572, 543, 545, 556, 560, 562, 564,
	570, 573, 532, 534, 536, 538, 551, 550, 547, 575,
	576, 553, 558, 537, 549, 554, 567, 574, 571, 531,
	535, 539, 548, 566, 565, 546, 557, 568, 552, 540,
	533, 541, 0, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	303, 304, 446, 447, 316, 317, 647, 648, 1463, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 0,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 0, 0, 0, 0,
	509, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 610, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 0, 0, 0, 630, 0, 0, 0, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 255, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 591, 592, 258, 653,
	230, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 357, 358, 282, 309, 449,
	377, 450, 308, 310, 406, 405, 407, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	201, 0, 0, 0, 0, 256, 257, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 0, 0, 0, 0,
	0, 400, 0, 593, 594, 673, 386, 488, 604, 337,
	351, 354, 343, 363, 0, 364, 339, 340, 345, 348,
	349, 350, 355, 356, 360, 366, 251, 212, 392, 401,
	580, 314, 218, 219, 220, 526, 527, 528, 529, 620,
	621, 625, 207, 464, 465, 466, 467, 294, 615, 311,
	470, 469, 333, 334, 381, 451, 542, 544, 555, 559,
	561, 563, 569, 572, 543, 545, 556, 560, 562, 564,
	570, 573, 532, 534, 536, 538, 551, 550, 547, 575,
	576, 553, 558, 537, 549, 554, 567, 574, 571, 531,
	535, 539, 548, 566, 565, 546, 557, 568, 552, 540,
	533, 541, 0, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1052, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	303, 304, 446, 447, 316, 317, 647, 648, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 0,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 0, 0, 0, 0,
	509, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 610, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 0, 676, 0, 630, 0, 0, 0, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 255, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 591, 592, 258, 653,
	230, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 357, 358, 282, 309, 449,
	377, 450, 308, 310, 406, 405, 407, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	201, 0, 0, 0, 0, 256, 257, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 0, 0, 0, 0,
	0, 400, 0, 593, 594, 673, 386, 488, 604, 337,
	351, 354, 343, 363, 0, 364, 339, 340, 345, 348,
	349, 350, 355, 356, 360, 366, 251, 212, 392, 401,
	580, 314, 218, 219, 220, 526, 527, 528, 529, 620,
	621, 625, 207, 464, 465, 466, 467, 294, 615, 311,
	470, 469, 333, 334, 381, 451, 542, 544, 555, 559,
	561, 563, 569, 572, 543, 545, 556, 560, 562, 564,
	570, 573, 532, 534, 536, 538, 551, 550, 547, 575,
	576, 553, 558, 537, 549, 554, 567, 574, 571, 531,
	535, 539, 548, 566, 565, 546, 557, 568, 552, 540,
	533, 541, 0, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	303, 304, 446, 447, 316, 317, 647, 648, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 0,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 0, 0, 0, 0,
	509, 725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 610, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 0, 0, 0, 630, 0, 0, 0, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 255, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 591, 592, 258, 653,
	230, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 357, 358, 282, 309, 449,
	377, 450, 308, 310, 406, 405, 407, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	201, 0, 0, 0, 0, 256, 257, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 0, 0, 0, 0,
	0, 400, 0, 593, 594, 673, 386, 488, 604, 337,
	351, 354, 343, 363, 0, 364, 339, 340, 345, 348,
	349, 350, 355, 356, 360, 366, 251, 212, 392, 401,
	580, 314, 218, 219, 220, 526, 527, 528, 529, 620,
	621, 625, 207, 464, 465, 466, 467, 294, 615, 311,
	470, 469, 333, 334, 381, 451, 542, 544, 555, 559,
	561, 563, 569, 572, 543, 545, 556, 560, 562, 564,
	570, 573, 532, 534, 536, 538, 551, 550, 547, 575,
	576, 553, 558, 537, 549, 554, 567, 574, 571, 531,
	535, 539, 548, 566, 565, 546, 557, 568, 552, 540,
	533, 541, 0, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	4149, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	303, 304, 446, 447, 316, 317, 647, 648, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 0,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 0, 0, 0, 0,
	509, 725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 610, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 0, 0, 0, 630, 0, 0, 0, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 255, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 591, 592, 258, 653,
	230, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 357, 358, 282, 309, 449,
	377, 450, 308, 310, 406, 405, 407, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	201, 0, 0, 0, 0, 256, 257, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 0, 0, 0, 0,
	0, 400, 0, 593, 594, 673, 386, 488, 604, 337,
	351, 354, 343, 363, 0, 364, 339, 340, 345, 348,
	349, 350, 355, 356, 360, 366, 251, 212, 392, 401,
	580, 314, 218, 219, 220, 526, 527, 528, 529, 620,
	621, 625, 207, 464, 465, 466, 467, 294, 615, 311,
	470, 469, 333, 334, 381, 451, 542, 544, 555, 559,
	561, 563, 569, 572, 543, 545, 556, 560, 562, 564,
	570, 573, 532, 534, 536, 538, 551, 550, 547, 575,
	576, 553, 558, 537, 549, 554, 567, 574, 571, 531,
	535, 539, 548, 566, 565, 546, 557, 568, 552, 540,
	533, 541, 0, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	303, 304, 446, 447, 316, 317, 647, 648, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 0,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 0, 0, 0, 0,
	509, 960, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 610, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 0, 0, 0, 630, 0, 0, 0, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 255, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 591, 592, 258, 653,
	230, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 357, 358, 282, 309, 449,
	377, 450, 308, 310, 406, 405, 407, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	201, 0, 0, 0, 0, 256, 257, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 0, 0, 0, 0,
	0, 400, 0, 593, 594, 673, 386, 488, 604, 337,
	351, 354, 343, 363, 0, 364, 339, 340, 345, 348,
	349, 350, 355, 356, 360, 366, 251, 212, 392, 401,
	580, 314, 218, 219, 220, 526, 527, 528, 529, 620,
	621, 625, 207, 464, 465, 466, 467, 294, 615, 311,
	470, 469, 333, 334, 381, 451, 542, 544, 555, 559,
	561, 563, 569, 572, 543, 545, 556, 560, 562, 564,
	570, 573, 532, 534, 536, 538, 551, 550, 547, 575,
	576, 553, 558, 537, 549, 554, 567, 574, 571, 531,
	535, 539, 548, 566, 565, 546, 557, 568, 552, 540,
	533, 541, 0, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	303, 304, 446, 447, 316, 317, 647, 648, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 0,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 398, 0, 378, 578, 579,
	318, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 0, 0, 0, 0,
	509, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 610, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 404, 259,
	0, 455, 0, 0, 0, 630, 0, 0, 0, 0,
	0, 0, 0, 367, 0, 332, 199, 227, 0, 0,
	414, 463, 475, 0, 0, 0, 255, 0, 473, 428,
	605, 235, 286, 460, 434, 471, 442, 289, 0, 0,
	472, 374, 587, 452, 602, 631, 632, 265, 408, 616,
	524, 624, 649, 228, 262, 422, 508, 608, 496, 399,
	583, 584, 331, 495, 297, 203, 371, 637, 226, 481,
	373, 244, 233, 589, 613, 301, 291, 458, 644, 215,
	519, 599, 241, 485, 0, 0, 652, 249, 506, 611,
	600, 217, 596, 505, 395, 328, 329, 216, 0, 459,
	270, 295, 0, 0, 260, 417, 591, 592, 258, 653,
	230, 623, 222, 0, 622, 410, 586, 597, 396, 385,
	221, 595, 394, 384, 336, 357, 358, 282, 309, 449,
	377, 450, 308, 310, 406, 405, 407, 209, 609, 627,
	0, 210, 0, 501, 612, 654, 454, 214, 236, 237,
	239, 0, 281, 285, 293, 296, 305, 306, 315, 369,
	421, 448, 444, 453, 0, 581, 603, 617, 629, 635,
	636, 638, 639, 640, 641, 642, 645, 643, 409, 313,
	497, 335, 375, 0, 0, 427, 474, 242, 607, 498,
	201, 0, 0, 0, 0, 256, 257, 0, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 650, 510, 516, 511,
	512, 513, 514, 515, 0, 517, 0, 0, 0, 0,
	0, 400, 0, 593, 594, 673, 386, 488, 604, 337,
	351, 354, 343, 363, 0, 364, 339, 340, 345, 348,
	349, 350, 355, 356, 360, 366, 251, 212, 392, 401,
	580, 314, 218, 219, 220, 526, 527, 528, 529, 620,
	621, 625, 207, 464, 465, 466, 467, 294, 615, 311,
	470, 469, 333, 334, 381, 451, 542, 544, 555, 559,
	561, 563, 569, 572, 543, 545, 556, 560, 562, 564,
	570, 573, 532, 534, 536, 538, 551, 550, 547, 575,
	576, 553, 558, 537, 549, 554, 567, 574, 571, 531,
	535, 539, 548, 566, 565, 546, 557, 568, 552, 540,
	533, 541, 0, 198, 223, 370, 0, 456, 290, 651,
	619, 486, 614, 208, 225, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 263, 278, 280, 287, 300,
	312, 320, 321, 324, 330, 382, 388, 389, 390, 391,
	411, 412, 413, 416, 419, 420, 423, 425, 426, 429,
	433, 437, 438, 439, 441, 443, 445, 457, 462, 476,
	477, 478, 479, 480, 483, 484, 490, 491, 492, 493,
	494, 502, 503, 518, 588, 590, 606, 626, 633, 482,
	303, 304, 446, 447, 316, 317, 647, 648, 302, 601,
	634, 598, 646, 628, 440, 380, 0, 0, 383, 283,
	307, 322, 0, 618, 504, 229, 468, 292, 253, 0,
	0, 213, 248, 232, 261, 276, 279, 326, 393, 402,
	431, 436, 298, 273, 246, 461, 243, 487, 521, 522,
	523, 525, 397, 268, 435, 0, 0, 378, 578, 579,
	318,
}

var yyPact = [...]int{
	-1000, -1000, 6764, -1000, -541, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2447, 2629, -1000, -1000, -1000, -1000, 2652, -1000, 992,
	2088, -1000, 2418, 4759, -1000, 56201, 507, -1000, 53241, -416,
	876, 234, 36961, -1000, 215, -1000, 196, 54721, 207, -1000,
	-1000, -1000, -1000, -416, 22161, 2321, 51, 48, 56201, -1000,
	-1000, -1000, -1000, -366, 2584, 1965, -1000, 442, -1000, -1000,
	-1000, -1000, -1000, -1000, 52501, -1000, -1000, 242, 1127, -1000,
	-1000, 2445, 2448, 2303, 911, 2326, -1000, 2501, 1965, -1000,
	22161, 2585, 2367, 21421, 21421, 437, -1000, -1000, 258, -1000,
	-1000, 31781, 56201, 39921, 283, -1000, 2418, -1000, -1000, -1000,
	189, -1000, 330, 1990, -1000, 1987, -1000, 1100, 871, 401,
	845, 473, 400, 385, 381, 379, 378, 377, 363, 350,
	353, -1000, 948, 948, -200, -202, 1692, 466, 453, 453,
	1016, 482, 2385, 2340, -1000, -1000, 948, 948, 948, 358,
	948, 948, 948, 948, 311, 310, 948, 948, 948, 948,
	948, 948, 948, 948, 948, 948, 948, 948, 948, 948,
	948, 948, 948, 958, 2418, 296, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 56201, 229, 56201, -1000, 824, 506,
	-1000, -1000, -445, 1101, 1101, 116, 1101, 1101, 1101, 1101,
	186, 980, 46, -1000, 173, 285, 156, 294, 1065, 175,
	-1000, -1000, 262, 1065, 1767, -1000, 923, 291, 168, -1000,
	1101, 1101, -1000, 14737, 256, 14737, 14737, 290, 178, -1000,
	2404, -1000, -1000, -1000, -1000, -1000, 1322, -1000, -1000, -1000,
	-1000, -20, 478, -1000, -1000, -1000, -1000, 54721, 51761, 263,
	-1000, -1000, 37, 1800, 1217, 22161, 1225, 906, -1000, -1000,
	1346, 879, -1000, -1000, -1000, -1000, -1000, 527, -1000, 24381,
	24381, 24381, 24381, -1000, -1000, 1992, 51021, 1992, 1992, 24381,
	1992, 24381, 1992, 1992, 1992, 1992, 22161, 1992, 1992, 1992,
	1992, -1000, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
	1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
	1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
	1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
	1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
	1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
	1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
	1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
	1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
	1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
	1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
	1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
	1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
	1992, -1000, -1000, -1000, -1000, 1992, 823, 1992, 1992, 1992,
	1992, 1992, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1992,
	1992, 1992, 1992, 1992, 1992, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1992, 1992, 1992, 1992, 1992, 1992,
	1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, -1000, -1000,
	-1000, 1590, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 27341,
	1478, 1469, 1463, -1000, 19201, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1992, -1000, -1000, -1000, 56201,
	-1000, 1992, 240, 54721, 54721, 337, 1319, -1000, -1000, 2501,
	1965, -1000, 2584, 2539, 442, -1000, 3929, 2557, 1549, 1468,
	1965, 1941, 56201, -1000, 2005, -1000, 1983, -1000, -1000, 1992,
	-1000, -1000, -1000, -307, -320, 2227, 1436, 1757, -1000, -1000,
	-1000, -1000, 1698, 22161, -1000, -1000, 2607, -1000, 29561, 822,
	2603, 50281, -1000, 437, 437, 1973, 433, 17, -1000, -1000,
	-1000, -1000, 967, 36221, -1000, -1000, -1000, -1000, -1000, 1859,
	56201, -1000, -1000, 4559, 54721, -1000, 2081, -1000, 1855, -1000,
	2034, 22161, 2108, 504, 54721, 498, 487, 483, -1000, -63,
	-1000, -1000, -1000, -1000, -1000, -1000, 948, 948, 948, -1000,
	346, 2568, 4759, 5956, -1000, -1000, -1000, 49541, 2080, 54721,
	-1000, 2078, -1000, 1035, 887, 899, 899, 54721, -1000, -1000,
	55461, 54721, 1034, 1031, 54721, 54721, 54721, 54721, -1000, 48801,
	-1000, 48061, 47321, 1317, 54721, 46581, 45841, 45101, 44361, 43621,
	-1000, 2226, -1000, 2071, -1000, -1000, -1000, 55461, 54721, 54721,
	55461, 54721, 55461, 56201, 54721, -1000, -1000, 360, -1000, -1000,
	1316, 1314, 1312, 948, 948, 1306, 1740, 1715, 1711, 948,
	948, 1295, 1706, 38441, 1693, 284, 1292, 1281, 1279, 1336,
	1690, 274, 1654, 1245, 1234, 1257, 54721, 2072, 56201, -1000,
	276, 981, 1021, 964, 2418, 2315, 1969, 477, 503, 54721,
	435, 435, 54721, -1000, 15483, 56201, 272, -1000, 1652, 22161,
	-1000, 1070, 1065, 1065, -1000, -1000, -1000, -1000, -1000, -1000,
	1101, 56201, 1070, -1000, -1000, -1000, 1065, 1101, 56201, 1101,
	1101, 1101, 1101, 1065, 1065, 1065, 1101, 56201, 56201, 56201,
	56201, 56201, 56201, 56201, 56201, 56201, 14737, 923, 1101, -450,
	-1000, 1649, -1000, -1000, -1000, 2216, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 14737, 14737, -1000, -1000,
	2498, 2485, -1000, -1000, -1000, 1963, -1000, 187, 10, 206,
	-1000, 42881, 430, 963, -1000, 430, -1000, -1000, -1000, 1962,
	42141, -1000, -454, -455, -456, -464, -1000, -1000, -1000, -467,
	-469, -1000, -1000, -1000, 22161, 22161, 22161, 22161, -231, -1000,
	1201, 24381, 2414, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	22161, 1175, 943, 24381, 24381, 24381, 24381, 24381, 24381, 24381,
	25861, 25121, 24381, 24381, 24381, 24381, 24381, 24381, -1000, -1000,
	34001, 7743, 7743, 879, 879, 879, 879, -1000, -174, 1957,
	55461, -1000, -1000, -1000, 819, 22161, 22161, 879, -1000, 1337,
	1309, 19201, 22161, 22161, 22161, 22161, 984, 1217, 55461, 22161,
	-1000, 1468, -1000, -1000, -1000, -1000, 1144, -1000, -1000, 1052,
	2353, 2353, 2353, 2353, 22161, 22161, 22161, 22161, 22161, 22161,
	22161, 22161, 22161, 22161, 2353, 22161, 627, 627, 733, 22161,
	22161, 22161, 22161, 22161, 22161, 22161, 22161, 17721, 22161, 22161,
	24381, 22161, 22161, 22161, 1468, 22161, 22161, 22161, 22161, 22161,
	22161, 22161, 22161, 22161, 22161, 22161, 22161, 22161, 22161, 22161,
	22161, 22161, 22161, 22161, 22161, 22161, 22161, 22161, 22161, 22161,
	22161, 22161, 22161, 22161, 22161, 22161, 22161, 22161, 22161, 22161,
	22161, 22161, 22161, 22161, 22161, 22161, 22161, 22161, 22161, 22161,
	22161, 22161, 22161, 22161, 22161, 22161, 22161, 22161, 22161, 22161,
	22161, 22161, 22161, 22161, 22161, 22161, 22161, 22161, 22161, 22161,
	22161, 22161, 22161, 22161, 22161, 22161, 22161, 22161, 22161, 22161,
	22161, 22161, 22161, 22161, 1468, 22161, 1338, 22161, 22161, 22161,
	22161, 22161, 22161, 22161, 16975, 22161, 22161, 22161, 22161, 22161,
	-1000, -1000, -1000, -1000, -1000, -1000, 22161, 22161, 22161, 22161,
	22161, 22161, 22161, 22161, 1468, 22161, 22161, 22161, 22161, 22161,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1639, 1663, 1513, 194, 22161, -1000, 1943, -1000, -196,
	31041, 22161, 1632, 2601, 2129, 54721, -1000, -1000, -1000, -1000,
	2501, -1000, 2501, 1639, 3892, 2243, 21421, -1000, -1000, 3892,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1830, -1000, 56201, 1941, 2482, 54721, -487,
	20681, -1000, -263, -1000, -264, 2230, 1630, 356, -1000, 22161,
	22161, 1940, -1000, 1255, 56201, -1000, -231, -1000, 41401, -1000,
	-1000, 13991, 56201, 339, 56201, -1000, 30301, 40661, 271, -1000,
	17, 1889, -1000, 19, 4, 18461, 878, -1000, -1000, -1000,
	1692, 26601, 1710, 878, 83, -1000, -1000, -1000, 2034, -1000,
	2034, 2034, 2034, 2034, 356, 356, 356, 356, -1000, -1000,
	-1000, -1000, -1000, 2062, 2034, 2057, -1000, 2034, 2034, 2034,
	2034, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2052, 2052,
	2052, 2050, 2050, 2035, 2035, 439, -1000, 22161, 384, 39921,
	2439, 1253, 1318, 276, 464, 2125, 54721, 54721, 54721, 464,
	-1000, 1382, 1379, 1371, -1000, -527, 1939, -1000, -1000, 2554,
	-1000, -1000, 1145, 1049, 1047, 915, 54721, 245, 312, -1000,
	428, -1000, 39921, 54721, 1030, 899, 54721, -1000, 54721, -1000,
	-1000, -1000, -1000, -1000, 54721, -1000, -1000, 1935, -1000, 1947,
	1139, 1032, 1121, 1026, 1935, -1000, -1000, -179, 1935, -1000,
	1935, -1000, 1935, -1000, 1935, -1000, 1935, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1011, 302, -342, 54721,
	245, 476, -1000, 475, 34001, -1000, -1000, -1000, 34001, 34001,
	-1000, -1000, -1000, -1000, 1621, 1617, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -514, 56201, -1000, 261, 961,
	314, 334, 319, 56201, 387, 2370, 2365, 2363, 2361, 2358,
	2357, 2345, 259, 308, 56201, 56201, 435, 2184, 56201, 2459,
	56201, -1000, -1000, -1000, -1000, -1000, 1611, 1608, -1000, 1217,
	56201, -1000, -1000, 1101, 1101, -1000, -1000, 56201, 1101, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1101, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 56201, -1000, -1000, -1000, -1000, 1592, -1000,
	56201, -20, 192, -1000, -1000, 54721, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -75, -1000, 304, 14, 383,
	-1000, -1000, -1000, -1000, -1000, 2476, -1000, 1217, 1015, 1006,
	-1000, 1992, -1000, -1000, 1216, -1000, -1000, -1000, -1000, -1000,
	1992, 1992, 1992, -1000, -1000, -1000, -1000, -1000, 1175, 24381,
	24381, 24381, 1415, 481, 1435, 1447, 1370, 1194, 1194, 1128,
	24381, 1128, 24381, 883, 883, 883, 883, 883, -1000, -1000,
	-1000, -1000, -1000, -1000, 1590, -1000, 1587, -1000, 1992, 55461,
	1823, 16975, 1532, 1493, 1468, 901, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 4142, 1468, 1800, 1468,
	1720, 3967, 993, -1000, 22161, 1468, 3945, -1000, -1000, 1468,
	1468, 22161, -1000, -1000, 22161, 22161, 22161, 22161, 1318, 1318,
	1318, 1318, 1318, 1318, 1318, 1318, 1318, 1318, 22161, 1318,
	1930, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1915,
	2597, 1432, 1318, 1318, 1318, 1318, 3926, 1318, 1318, 22161,
	1709, -1000, -1000, -1000, 1449, 3921, 1328, 3910, 1318, 1318,
	-1000, 1318, 3623, 3608, 1468, 2849, 2803, 1318, 1318, 1318,
	1318, 1318, 2787, 2726, 1318, 1318, 2718, 1318, 3599, 1318,
	2714, 2693, 2687, 2641, 2627, 2620, 2599, 2579, 2574, 2553,
	2508, 2504, 2489, 2474, 2468, 2462, 2457, 2389, 1318, 1318,
	1318, 3594, 1318, 3581, 1318, 3513, 1318, 1318, 3505, 2384,
	2379, 1468, 1912, -1000, 3501, 1318, 3483, 3479, 3469, 2368,
	3465, 3441, 3437, 1318, 1318, 1318, 2362, 3432, 3422, 3418,
	3408, 3404, 3400, 3380, 3375, 3370, 1318, 1513, 1513, 1513,
	1513, 1513, 3356, -233, 1318, 1468, -1000, -1000, -1000, -1000,
	-1000, 3263, 2349, 3243, 3134, 3096, 3077, 1468, 1992, 818,
	-1000, -1000, 1513, 1468, 1468, 1513, 1513, 3056, 3049, 3033,
	3027, 3001, 2981, 1318, 1318, -1000, 1318, 2963, 2944, 2299,
	2295, 1468, -1000, 1513, 56201, -1000, -408, -1000, -7, 956,
	1992, -1000, 38441, 1468, -1000, 7607, -1000, 1179, -1000, -1000,
	-1000, -1000, -1000, 35481, 1977, -1000, -1000, -1000, -1000, 1992,
	1785, -1000, -1000, -1000, -1000, -1000, -1000, 356, 67, 34741,
	872, 872, 112, 1217, 1217, 22161, -1000, -1000, -1000, -1000,
	-1000, -1000, 796, 2578, 429, 1992, -1000, 1951, 3372, -1000,
	-1000, -1000, 2481, 28081, -1000, -1000, 1992, 1992, 56201, 1956,
	1907, -1000, 746, -1000, 1344, 1889, 17, -4, -1000, -1000,
	-1000, -1000, 1217, -1000, 1351, 342, 1467, -1000, 434, -1000,
	-1000, -1000, -1000, 2330, 80, -1000, -1000, -1000, 341, 356,
	-1000, -1000, -1000, -1000, -1000, -1000, 1571, -1000, 1571, -1000,
	-1000, -1000, -1000, -1000, 1251, -1000, -1000, -1000, -1000, 1249,
	-1000, -1000, 1247, -1000, -1000, 2949, 2171, 384, -1000, -1000,
	948, 1564, -1000, -1000, 2332, 948, 948, 54721, -1000, -1000,
	1668, 2439, 261, 56201, 998, 2169, -1000, 2125, 2125, 2125,
	56201, -1000, -1000, -1000, -1000, -1000, -1000, -519, 177, 569,
	-1000, -1000, -1000, 5914, 54721, 1783, -1000, 241, -1000, 1640,
	-1000, 54721, -1000, 1780, 2048, 54721, 54721, -1000, -1000, -1000,
	54721, 1992, -1000, -1000, -1000, -1000, 501, 2410, 343, -1000,
	-1000, -252, -1000, -1000, 245, 241, 55461, 54721, 878, -1000,
	-1000, -1000, -1000, -1000, -520, 1762, 485, 247, 515, 56201,
	56201, 56201, 56201, 56201, 56201, 806, -1000, -1000, 30, -1000,
	-1000, 224, -1000, -1000, -1000, -1000, -1000, -1000, 224, -1000,
	-1000, -1000, -1000, -1000, 298, 468, -1000, 56201, 56201, 947,
	-1000, -1000, -1000, -1000, -1000, 1065, -1000, -1000, 1065, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2399, 56201, 7, -484, -1000, -480, 22161, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1248, 458, 1435, 24381, 24381,
	1309, 1309, 24381, -1000, -1000, -1000, 944, 944, 34001, -1000,
	24381, 22161, -1000, -1000, 22161, 22161, 22161, 979, -1000, 22161,
	1303, -1000, 22161, -1000, -233, 1513, 1318, 1318, 1318, 1318,
	-233, -233, -233, -233, -233, -233, -233, -233, -233, -233,
	1861, -1000, 22161, 22161, 22161, 1468, 331, -1000, -1000, -1000,
	-233, 22161, -1000, -1000, 2595, -1000, 22161, -1000, 34001, 22161,
	22161, 22161, -1000, -1000, -1000, 22161, 22161, -1000, -1000, 22161,
	-1000, 22161, -1000, -1000, -1000, -1000, -1000, -1000, 22161, -1000,
	22161, -1000, -1000, -1000, 22161, -1000, 22161, -1000, -1000, 22161,
	-1000, 22161, -1000, 22161, -1000, 22161, -1000, 22161, -1000, 22161,
	-1000, 22161, -1000, 22161, -1000, 22161, -1000, 22161, -1000, 22161,
	-1000, 22161, -1000, 22161, -1000, 22161, -1000, 22161, -1000, 22161,
	-1000, 22161, -1000, 22161, -1000, -1000, -1000, 22161, -1000, 22161,
	-1000, 22161, -1000, -1000, 22161, -1000, 22161, -1000, 22161, -1000,
	22161, 22161, -1000, 22161, 22161, 22161, -1000, 22161, 22161, 22161,
	22161, -1000, -1000, -1000, -1000, 22161, 22161, 22161, 22161, 22161,
	22161, 22161, 22161, 22161, 22161, -1000, -1000, -1000, -1000, -1000,
	-1000, 22161, -1000, 39921, 65, -233, 1338, 65, 1338, 23641,
	828, 821, 22901, -1000, 22161, 16229, -1000, -1000, -1000, -1000,
	-1000, 22161, 22161, 22161, 22161, 22161, 22161, -1000, -1000, -1000,
	22161, 22161, -1000, 22161, -1000, 22161, -1000, -1000, -1000, -1000,
	-1000, 956, -1000, 820, 460, 899, 54721, -1000, -1000, -1000,
	-1000, 1867, -1000, 2495, -1000, 2281, 2270, 2592, 2578, 21421,
	-1000, 30301, -1000, -1000, 54721, -397, -1000, 2310, 2258, 872,
	872, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 13245, 2501,
	22161, 2168, 55461, 194, -1000, 28821, 54721, 55461, 30301, 30301,
	30301, 30301, 30301, -1000, 2210, 2206, -1000, 2202, 2200, 2280,
	56201, -1000, 1639, 1752, -1000, 22161, 32521, 1802, 30301, -1000,
	-1000, 30301, 56201, 12499, -1000, -1000, 1, -13, -1000, -1000,
	-1000, -1000, 1692, -1000, -1000, 351, 2472, 2328, -1000, -1000,
	-1000, -1000, -1000, 1747, -1000, 1736, 1857, 1732, 1730, 302,
	-1000, 2076, 2396, 948, 948, -1000, 1230, -1000, 1337, 1558,
	1553, -1000, -1000, -1000, 484, -1000, 2458, 56201, 2165, 2164,
	2156, -1000, -533, 1223, 2047, 1971, 22161, 2046, 2552, 1833,
	54721, -1000, -1000, 55461, -1000, 200, -1000, 384, 54721, -1000,
	-1000, -1000, 312, 56201, -1000, 8368, -1000, -1000, -1000, 241,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 56201, 257, -1000,
	2042, 1205, -1000, -1000, 2039, -1000, -1000, -1000, -1000, -1000,
	197, 190, 1551, 220, 1546, 220, -1000, 56201, 892, 2171,
	56201, -1000, -1000, -1000, 1101, 1101, -1000, -1000, 2388, -1000,
	1337, 1318, 24381, 24381, -1000, 879, -1000, -1000, 497, -213,
	2034, 2034, -1000, 2034, 2035, -1000, 2034, 167, 2034, 157,
	2034, -1000, -1000, 1468, 1468, -1000, 1513, 2288, 2209, 2911,
	-1000, 1217, 22161, 2903, -1000, -1000, -233, -233, -233, -233,
	-233, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -70, 2887, 2834, 1318, -1000, 2029, 2024, -1000, 1318,
	22161, 1318, 1468, 2255, 1318, 1318, 1318, 1318, 1318, 1318,
	1318, 1318, 1318, 1318, 1318, 1318, 2235, 2175, 2155, 2150,
	2136, 2124, 2113, 2103, 2074, 2064, 2030, 2026, 2001, 1996,
	1984, 1980, 1318, 1318, 1966, 1318, 1936, 1920, -1000, 1217,
	1513, 2538, 1513, 1318, 1318, 2444, 364, 1318, 1726, 1726,
	1726, 1726, 1726, 1513, 1513, 1513, 1513, 1318, 54721, -1000,
	-233, -1000, -1000, -277, -283, -1000, 1468, -233, 1850, 24381,
	1318, 24381, 24381, 24381, 1318, 1468, -1000, 1886, 1869, 2337,
	1852, 1318, 2170, 1318, 1318, 1318, 1847, -1000, 2464, 1992,
	2464, 1992, 2464, 1704, 1179, 56201, -1000, -1000, -1000, -1000,
	2578, 2560, -1000, 1837, -1000, 67, 604, -1000, 2307, 2258,
	-1000, 2550, 2301, 2549, -1000, -1000, -1000, -1000, -1000, 1217,
	-1000, 2435, 1749, -1000, 957, 1839, -1000, -1000, 20681, 1722,
	2263, 547, 1704, 1922, 3372, 2116, 2153, 3082, -1000, -1000,
	-1000, -1000, 2199, -1000, 2198, -1000, -1000, 2005, -1000, 2090,
	339, 30301, 1805, 1805, -1000, 542, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1098, 8368, 2632, -1000, 1544, -1000, 1342,
	211, 1222, -1000, -1000, 948, 948, -1000, 1027, 1025, -1000,
	56201, 2021, -1000, 356, 1542, 356, 1219, -1000, -1000, 1218,
	-1000, -1000, -1000, -1000, 1964, 2135, -1000, -1000, -1000, -1000,
	56201, -1000, -1000, 56201, 56201, 56201, 2020, 2544, -1000, 22161,
	2015, 949, 2817, 54721, 54721, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 436, 948, -498, 306,
	305, 948, 948, 948, -535, -1000, -1000, 1702, 1689, -1000,
	-191, -1000, 22161, -1000, -1000, -1000, -1000, -1000, 1259, 1259,
	1478, 1469, 1463, -1000, 2005, -1000, -1000, -1000, 1601, -1000,
	-1000, -182, 54721, 54721, 54721, 54721, -1000, -1000, -1000, 1191,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 879, 1468, 348, -185, 1468, -1000, -1000, 356,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	22161, -1000, 22161, -1000, 22161, 1217, 22161, -1000, -1000, -1000,
	-1000, -1000, 2501, 1461, 22161, 22161, -1000, 1214, 1213, -233,
	1318, -1000, -1000, -1000, 22161, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 22161, -1000,
	22161, -1000, 22161, -1000, 22161, -1000, 22161, -1000, 22161, -1000,
	22161, -1000, 22161, -1000, 22161, -1000, 22161, -1000, 22161, -1000,
	22161, -1000, 22161, -1000, 22161, -1000, 22161, -1000, 22161, -1000,
	-1000, 22161, -1000, -1000, -1000, 22161, -1000, 22161, -1000, 22161,
	-1000, -1000, -1000, 22161, 265, 944, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1468, 336, -1000,
	-1000, -1000, 2589, -1000, 1468, 22161, 1309, -1000, 1309, 1309,
	1309, -1000, -1000, -1000, 22161, -1000, 22161, 22161, -1000, 22161,
	-1000, 22161, -1000, -1000, -1000, -1000, 22161, 1992, 2267, 39181,
	1992, 39181, 1992, 32521, -1000, -1000, 2560, 2541, 2543, 2259,
	2289, 2289, 2307, -1000, 2537, 2532, -1000, 1445, 2524, 1443,
	1017, -1000, 55461, 22161, -1000, 1992, 38441, -1000, 447, 54721,
	1992, 54721, -1000, 2505, -1000, -1000, 22161, 2009, -1000, 22161,
	-1000, -1000, -1000, -1000, 7743, 2578, 1805, -1000, -1000, 898,
	-1000, 22161, -1000, 10258, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1424, 1418, -1000, -1000, 2006, 22161, -1000, -1000,
	-1000, 1569, 1563, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2005, -1000, -1000, -1000, -1000, 312, -524, 2700, 54721,
	1211, -1000, 1667, 1833, 307, 1992, 1402, 948, 948, 948,
	1197, 1195, 38441, 1665, -1000, 54721, 349, -1000, 312, -1000,
	-203, -208, 1318, -1000, -1000, 2469, -1000, -1000, 16229, -1000,
	-1000, 2004, 2122, -1000, -1000, -1000, -1000, 2228, -177, -189,
	-1000, -1000, 1318, 1318, 1318, 1604, 1468, -1000, 1318, 1318,
	1540, 1508, -1000, -1000, 1318, 1318, 1318, 1318, 1318, 1318,
	1318, 1318, 1318, 1318, 1318, 1318, 1318, 1318, 1318, 1318,
	1318, 1318, 1318, 1318, 1513, 1842, -1000, 265, 1468, 2152,
	-1000, -1000, 7743, -1000, -1000, 2505, 2523, 65, -1000, -1000,
	239, 65, 1217, 977, 1468, 1468, 977, 1835, 1318, 1826,
	1821, 1318, 1318, 33261, -1000, 2514, 2509, 1625, -1000, -1000,
	39181, 1625, 39181, 956, 2541, -240, 22161, 22161, 2283, 1138,
	-1000, -1000, -1000, -1000, 1400, 1385, -1000, 1367, -1000, 2630,
	-1000, 1217, -1000, 1992, 194, -1000, 535, 1839, -1000, 2501,
	1217, 54721, 1217, 70, 2505, -1000, 1318, -1000, 1992, 1992,
	1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
	1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
	1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
	1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
	1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
	1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
	1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
	1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
	1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
	1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
	1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
	1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
	1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, -1000,
	-1000, 54721, 2344, -1000, -1000, 2467, 1637, 176, -1000, 1494,
	1833, -1000, -1000, 885, -1000, 22161, -1000, 38441, 1361, 1358,
	-1000, -1000, -1000, -1000, -535, -1000, -1000, -1000, -1000, -1000,
	-1000, 442, 1816, -1000, 936, 54721, 56201, -1000, 2172, -1000,
	-1000, -1000, -1000, 22161, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 22161, -1000, 1468, 2151, -1000, -368, -1000, -496, 22161,
	-233, -1000, -1000, -233, -1000, -1000, -1000, -1000, -1000, 22161,
	-1000, -1000, 22161, -1000, 22161, -1000, -1000, 1625, -1000, -1000,
	-1000, 37701, -1000, 1625, -1000, 1625, -1000, -240, -1000, 1811,
	-1000, 54721, 1217, 344, -1000, 1104, -1000, -1000, -1000, -1000,
	-1000, 55461, 54721, 1839, 54721, -1000, -1000, 1600, 1468, 1992,
	2501, -1000, 1568, -1000, 442, -1000, 2000, 1971, -1000, -1000,
	-1000, 19941, -1000, -1000, -1000, -1000, -1000, 237, -181, 16229,
	11753, 1539, -1000, -180, 1318, 1513, -1000, -473, -1000, -1000,
	-1000, -1000, 244, -1000, -1000, 1800, -1000, -1000, 1817, 1745,
	1714, -1000, -1000, -1000, -1000, -1000, -1000, -240, -1000, -1000,
	2466, -1000, -210, -1000, -1000, 1764, 1507, -1000, -1000, -1000,
	32521, 53981, -1000, -171, 347, -181, 22161, 1994, 1468, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -10, -1000, -1000,
	525, -1000, -1000, -1000, 2039, -186, -1000, -1000, -1000, 287,
	-489, -260, -296, 24381, -1000, 22161, -1000, 22161, -1000, 22161,
	-1000, 54721, 1992, -1000, -1000, -1000, 1486, -1000, 4930, -317,
	2145, -1000, -102, -1000, -1000, -1000, 1081, 1352, -1000, -1000,
	-1000, -1000, -1000, -1000, 1954, 54721, -1000, 432, -1000, -1000,
	15483, -182, -192, 1001, -1000, -1000, -1000, -1000, -1000, 1309,
	1635, 1562, 1318, -1000, 54721, -1000, 53981, -310, 878, 7743,
	-1000, 2140, 2132, 2650, -1000, -1000, -1000, -1000, -1000, -1000,
	-537, 1349, 270, -1000, -1000, -1000, 287, -315, -1000, 22161,
	-1000, 22161, -1000, 1468, -1000, -1000, 2453, 70, -1000, 2616,
	-1000, 2610, 960, 960, -1000, 1141, -537, -1000, -1000, -1000,
	-1000, 1318, 1318, -1000, -335, -1000, -1000, -1000, -1000, -1000,
	366, 1190, -1000, -1000, -1000, -1000, -1000, 7743, -1000, -1000,
	-1000, 268, 268, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3233, 3228, 31, 6, 37, 36, 3227, 3224, 3222,
	177, 3220, 3219, 3218, 3217, 3214, 3212, 2682, 2674, 2652,
	3209, 3207, 3206, 3205, 3199, 3197, 3196, 3195, 3194, 38,
	114, 81, 115, 205, 198, 3193, 3191, 175, 168, 201,
	3189, 3183, 3178, 113, 192, 82, 73, 197, 3177, 3176,
	71, 3175, 3174, 3172, 195, 193, 191, 1072, 3171, 189,
	116, 47, 3170, 3169, 3166, 3165, 3162, 3154, 3146, 3144,
	3143, 3142, 3140, 3130, 3127, 3125, 3124, 3122, 3121, 3120,
	283, 3116, 3108, 12, 3105, 75, 3094, 3093, 3092, 3091,
	3090, 8, 3089, 3084, 26, 45, 60, 3082, 3078, 51,
	3075, 3074, 3072, 3070, 3067, 72, 3064, 27, 3062, 40,
	3056, 3054, 126, 3048, 3047, 3044, 42, 3043, 3038, 3033,
	28, 176, 3032, 3030, 139, 3029, 3027, 3026, 182, 200,
	3012, 2293, 3000, 100, 2984, 2982, 2979, 171, 196, 2977,
	122, 2976, 2975, 2974, 145, 2973, 2995, 2970, 2968, 63,
	79, 164, 2966, 2961, 315, 67, 54, 2960, 17, 19,
	2959, 2956, 65, 66, 2954, 104, 2952, 2949, 103, 96,
	2944, 105, 98, 2940, 2938, 5, 7, 2937, 1, 4,
	2, 83, 2936, 2935, 117, 2934, 2928, 2927, 99, 2926,
	2925, 1064, 2923, 85, 132, 102, 80, 2922, 172, 157,
	2916, 2905, 2902, 2898, 2896, 2895, 48, 2894, 2893, 2889,
	137, 22, 108, 2888, 2887, 147, 352, 146, 50, 166,
	2886, 151, 2877, 204, 76, 206, 173, 2876, 2875, 134,
	133, 2874, 2867, 58, 170, 194, 2865, 93, 129, 121,
	187, 92, 131, 2864, 2863, 56, 62, 2860, 2858, 2856,
	2851, 180, 2850, 2846, 57, 2844, 53, 2843, 181, 2833,
	305, 69, 2832, 179, 162, 2831, 74, 2830, 2828, 68,
	95, 101, 39, 2827, 159, 165, 127, 163, 2819, 2813,
	52, 2812, 2809, 2808, 199, 324, 2805, 2804, 311, 183,
	141, 149, 89, 2803, 306, 2802, 2801, 2800, 16, 4352,
	6407, 186, 25, 161, 2798, 2794, 7653, 20, 44, 24,
	2792, 210, 2788, 184, 2787, 2786, 2785, 213, 207, 111,
	160, 55, 2780, 2778, 2777, 2776, 64, 2773, 2769, 2768,
	2767, 2766, 2765, 35, 34, 33, 70, 216, 59, 21,
	107, 153, 152, 61, 2764, 2763, 2762, 123, 94, 2760,
	156, 155, 125, 158, 2757, 185, 142, 118, 2756, 87,
	32, 2755, 2752, 2739, 2736, 91, 2735, 2732, 2727, 2721,
	150, 143, 120, 78, 2720, 90, 119, 148, 144, 49,
	2719, 43, 2714, 2712, 30, 188, 29, 2709, 13, 106,
	110, 2706, 6248, 2703, 9, 317, 154, 2702, 2701, 10,
	11, 14, 2700, 2699, 2698, 2694, 130, 2689, 2688, 2687,
	2686, 23, 46, 18, 15, 112, 138, 77, 2683, 2678,
	140, 2673, 2672, 2657, 0, 1035, 128, 2636, 208,
}

//line sql.y:8791
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) groupByUnion() *GroupBy {
	v, _ := st.union.(*GroupBy)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) intPtrUnion() *int {
	v, _ := st.union.(*int)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalType {
	v, _ := st.union.(IntervalType)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) killTypeUnion() KillType {
	v, _ := st.union.(KillType)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) rowAliasUnion() *RowAlias {
	v, _ := st.union.(*RowAlias)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 422, 423, 423, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 266, 392, 264, 264, 28, 75, 37, 37, 36,
	36, 39, 39, 38, 31, 31, 31, 32, 32, 32,
	32, 32, 32, 32, 32, 33, 33, 33, 33, 33,
	29, 29, 29, 29, 30, 30, 30, 30, 30, 35,
	35, 15, 16, 34, 34, 34, 17, 17, 110, 110,
	18, 19, 19, 19, 19, 426, 426, 186, 186, 184,
	184, 185, 185, 269, 269, 20, 273, 273, 275, 275,
	275, 275, 265, 265, 265, 21, 21, 274, 274, 276,
	276, 276, 279, 279, 279, 279, 320, 320, 320, 22,
	22, 22, 22, 22, 130, 130, 394, 394, 393, 388,
	388, 387, 387, 386, 391, 391, 390, 390, 389, 41,
	42, 51, 51, 51, 51, 52, 53, 395, 395, 361,
	58, 58, 57, 57, 57, 57, 57, 57, 59, 59,
	55, 55, 54, 54, 56, 56, 363, 363, 349, 349,
	362, 362, 362, 362, 362, 362, 362, 348, 348, 141,
	141, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 410, 410,
	410, 409, 409, 244, 244, 244, 244, 244, 244, 244,
	244, 150, 150, 162, 162, 162, 162, 162, 162, 148,
	148, 149, 147, 147, 147, 155, 155, 155, 155, 155,
	155, 155, 155, 155, 155, 155, 155, 155, 155, 155,
	155, 155, 414, 414, 414, 414, 414, 414, 414, 414,
	414, 414, 414, 414, 414, 414, 414, 414, 414, 414,
	414, 414, 414, 414, 414, 414, 414, 414, 414, 414,
	414, 414, 414, 414, 414, 414, 414, 414, 414, 414,
	414, 414, 414, 414, 161, 161, 156, 156, 156, 158,
	158, 157, 157, 157, 159, 159, 411, 411, 411, 411,
	326, 326, 326, 326, 329, 329, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 328, 328, 328, 328, 328,
	328, 328, 330, 330, 330, 330, 330, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 332, 332, 332, 332, 332, 332,
	332, 332, 347, 347, 336, 336, 341, 341, 342, 342,
	343, 343, 343, 344, 344, 344, 345, 345, 338, 338,
	338, 338, 338, 338, 338, 338, 338, 340, 340, 339,
	339, 339, 350, 375, 375, 374, 374, 372, 372, 372,
	372, 372, 372, 372, 372, 359, 359, 369, 369, 369,
	369, 369, 358, 358, 354, 354, 354, 355, 355, 356,
	356, 353, 353, 357, 357, 371, 371, 370, 370, 351,
	351, 352, 352, 377, 412, 412, 412, 412, 412, 413,
	413, 378, 402, 404, 404, 404, 403, 403, 400, 401,
	399, 399, 399, 399, 399, 85, 85, 85, 292, 292,
	293, 293, 367, 367, 366, 366, 366, 368, 368, 365,
	365, 365, 365, 365, 365, 365, 365, 365, 365, 365,
	365, 365, 365, 365, 365, 365, 365, 365, 365, 365,
	365, 365, 365, 365, 365, 365, 365, 365, 365, 365,
	287, 287, 287, 398, 398, 398, 398, 398, 398, 397,
	397, 397, 364, 364, 364, 364, 396, 396, 60, 60,
	224, 224, 415, 415, 417, 417, 417, 48, 48, 48,
	48, 48, 48, 47, 47, 47, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 43, 43, 49, 49, 44,
	44, 44, 44, 44, 44, 44, 44, 44, 44, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 112, 112, 113, 113, 113, 113, 115, 115,
	115, 380, 380, 61, 61, 3, 3, 174, 176, 177,
	177, 175, 175, 175, 175, 175, 175, 63, 63, 62,
	62, 179, 178, 180, 180, 180, 1, 1, 2, 2,
	4, 4, 385, 385, 385, 385, 385, 385, 385, 385,
	385, 385, 385, 385, 385, 385, 385, 385, 385, 385,
	385, 385, 385, 385, 346, 346, 346, 379, 379, 381,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	118, 117, 117, 116, 119, 119, 119, 119, 119, 119,
	119, 119, 383, 383, 383, 64, 64, 384, 333, 334,
	335, 5, 6, 360, 382, 126, 126, 24, 40, 40,
	25, 25, 25, 25, 26, 26, 65, 68, 68, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 297, 297, 286, 286, 295,
	295, 285, 285, 311, 311, 311, 288, 288, 288, 289,
	289, 408, 408, 408, 282, 282, 67, 67, 67, 312,
	312, 312, 312, 70, 70, 418, 418, 419, 419, 420,
	420, 420, 71, 72, 72, 315, 315, 316, 316, 73,
	74, 86, 86, 86, 86, 86, 87, 87, 87, 87,
	111, 111, 111, 10, 10, 10, 10, 82, 82, 82,
	9, 9, 11, 69, 69, 76, 405, 405, 406, 407,
	407, 407, 407, 77, 79, 27, 27, 27, 27, 27,
	27, 136, 136, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 131, 131, 131, 125, 125,
	427, 80, 81, 81, 129, 129, 129, 122, 122, 122,
	128, 128, 128, 12, 12, 13, 268, 268, 14, 14,
	135, 135, 134, 134, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 132, 132, 133, 133, 133,
	133, 304, 304, 304, 303, 303, 168, 168, 170, 169,
	169, 171, 171, 172, 172, 172, 172, 222, 222, 194,
	194, 261, 261, 262, 262, 260, 260, 267, 267, 263,
	263, 263, 263, 270, 270, 173, 173, 173, 173, 181,
	181, 182, 182, 183, 183, 314, 314, 309, 309, 309,
	308, 308, 187, 187, 187, 189, 188, 188, 188, 188,
	190, 190, 192, 192, 191, 191, 193, 198, 198, 197,
	197, 195, 195, 195, 195, 195, 195, 196, 196, 196,
	196, 199, 199, 146, 146, 146, 146, 146, 146, 146,
	146, 416, 416, 160, 160, 160, 160, 160, 160, 160,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 251, 251, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 227, 227, 226, 226, 88, 88, 88,
	89, 89, 90, 90, 90, 90, 90, 91, 91, 91,
	91, 91, 91, 91, 93, 93, 92, 92, 213, 213,
	301, 301, 94, 95, 95, 96, 96, 99, 99, 98,
	97, 97, 103, 103, 100, 100, 102, 102, 101, 104,
	104, 105, 106, 106, 283, 283, 200, 200, 209, 209,
	209, 209, 201, 201, 202, 202, 202, 202, 202, 202,
	210, 210, 210, 221, 211, 211, 207, 207, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 165, 165, 165, 165, 232, 232, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 153, 153, 166, 166, 166, 166, 167,
	167, 167, 167, 167, 167, 167, 322, 322, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 428, 428, 337, 337,
	337, 208, 208, 208, 208, 208, 127, 127, 127, 127,
	127, 319, 319, 319, 323, 323, 323, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 324, 324, 230, 230, 123, 123, 228, 228,
	229, 231, 231, 223, 223, 223, 223, 225, 225, 204,
	204, 204, 233, 233, 325, 325, 234, 234, 107, 108,
	108, 109, 109, 235, 235, 237, 236, 236, 238, 239,
	239, 239, 240, 240, 241, 241, 241, 50, 50, 50,
	50, 50, 45, 45, 45, 45, 46, 46, 46, 46,
	138, 138, 138, 138, 140, 140, 139, 139, 83, 83,
	84, 84, 84, 144, 144, 145, 145, 145, 142, 142,
	143, 143, 258, 258, 258, 258, 258, 258, 258, 242,
	242, 242, 249, 249, 249, 245, 245, 247, 247, 247,
	248, 248, 248, 246, 255, 255, 257, 257, 256, 256,
	252, 252, 253, 253, 254, 254, 254, 250, 250, 203,
	203, 203, 203, 203, 259, 259, 259, 259, 313, 313,
	313, 271, 271, 214, 214, 215, 215, 219, 219, 218,
	218, 216, 217, 220, 220, 164, 272, 272, 280, 277,
	277, 278, 278, 305, 305, 305, 281, 281, 294, 294,
	290, 290, 291, 291, 284, 284, 296, 296, 296, 78,
	212, 212, 376, 376, 373, 300, 300, 302, 302, 306,
	306, 310, 310, 307, 307, 8, 421, 421, 421, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 424, 425,
	317, 318, 318, 318,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 1, 2, 3, 2, 3, 0,
	1, 3, 1, 4, 3, 3, 4, 3, 2, 3,
	4, 3, 4, 2, 7, 1, 3, 3, 3, 3,
	1, 2, 1, 1, 3, 2, 3, 3, 2, 2,
	2, 5, 7, 10, 9, 1, 7, 8, 1, 1,
	10, 11, 9, 8, 8, 1, 1, 1, 3, 1,
	3, 1, 3, 0, 4, 3, 1, 3, 3, 3,
	3, 3, 1, 1, 2, 5, 4, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 2,
	2, 6, 12, 2, 0, 2, 0, 2, 1, 0,
	2, 1, 3, 3, 0, 1, 1, 3, 3, 6,
	4, 7, 8, 8, 8, 6, 3, 1, 1, 5,
	0, 1, 1, 1, 1, 2, 2, 2, 0, 1,
	4, 4, 4, 4, 4, 4, 2, 4, 1, 3,
	1, 1, 3, 4, 3, 3, 3, 5, 10, 0,
	2, 0, 2, 3, 5, 3, 4, 2, 3, 2,
	3, 3, 3, 3, 2, 2, 4, 4, 1, 1,
	1, 1, 1, 0, 2, 2, 3, 3, 2, 2,
	2, 1, 1, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	3, 1, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	2, 2, 1, 2, 2, 2, 2, 3, 3, 3,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 5, 2, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 3, 0, 5, 1, 3,
	0, 3, 5, 0, 1, 1, 0, 1, 0, 3,
	3, 2, 2, 2, 1, 2, 2, 0, 1, 0,
	2, 2, 5, 0, 1, 1, 2, 1, 3, 2,
	1, 1, 3, 3, 3, 0, 1, 4, 3, 3,
	4, 2, 0, 2, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 3, 3, 4, 3,
	1, 3, 1, 7, 6, 7, 7, 8, 8, 0,
	1, 5, 2, 1, 1, 1, 0, 1, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 1, 1, 2,
	0, 1, 0, 1, 1, 3, 2, 1, 2, 3,
	3, 3, 4, 4, 3, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 4, 5,
	0, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 1, 1, 0, 1, 0, 1,
	0, 2, 0, 2, 0, 2, 2, 0, 1, 5,
	1, 3, 7, 1, 3, 3, 1, 2, 2, 2,
	5, 5, 5, 6, 8, 5, 5, 4, 4, 4,
	6, 5, 5, 5, 2, 2, 2, 2, 3, 3,
	3, 4, 3, 3, 1, 3, 5, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 3,
	4, 4, 2, 11, 3, 6, 8, 6, 6, 6,
	13, 8, 6, 6, 10, 7, 5, 5, 5, 5,
	7, 5, 5, 5, 5, 5, 7, 7, 5, 5,
	5, 5, 0, 6, 5, 6, 4, 5, 0, 8,
	9, 0, 3, 0, 1, 0, 3, 8, 4, 1,
	3, 3, 6, 7, 7, 8, 4, 0, 1, 0,
	1, 3, 3, 1, 1, 2, 1, 1, 0, 2,
	0, 2, 5, 3, 7, 4, 4, 4, 4, 3,
	3, 3, 7, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 0, 2, 2, 1, 3, 2,
	0, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 1, 3, 3, 0, 2, 2, 2, 2, 2,
	2, 2, 4, 4, 3, 0, 1, 4, 3, 4,
	4, 3, 3, 3, 2, 1, 3, 3, 3, 5,
	7, 7, 6, 5, 3, 2, 4, 5, 5, 3,
	3, 7, 3, 3, 3, 3, 4, 7, 5, 2,
	4, 4, 4, 4, 4, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 4, 2, 2, 4, 4, 4,
	4, 4, 2, 3, 3, 3, 3, 3, 5, 2,
	3, 3, 2, 3, 4, 4, 4, 3, 4, 4,
	5, 3, 5, 3, 5, 0, 1, 0, 1, 0,
	1, 1, 1, 0, 2, 2, 0, 2, 2, 0,
	2, 0, 1, 1, 1, 1, 2, 1, 3, 1,
	1, 1, 1, 1, 3, 0, 1, 1, 3, 3,
	2, 2, 1, 1, 5, 0, 1, 0, 1, 2,
	3, 0, 3, 3, 3, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	4, 4, 4, 2, 2, 3, 1, 3, 2, 1,
	2, 1, 2, 2, 4, 3, 3, 6, 4, 7,
	6, 1, 3, 2, 2, 2, 2, 1, 1, 1,
	3, 2, 1, 1, 1, 0, 1, 1, 0, 3,
	0, 2, 0, 2, 1, 2, 2, 0, 1, 1,
	0, 1, 1, 5, 5, 4, 0, 2, 4, 4,
	0, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 2, 3,
	5, 0, 1, 2, 1, 1, 0, 1, 2, 1,
	3, 1, 1, 1, 4, 3, 1, 1, 2, 3,
	7, 0, 3, 0, 1, 1, 3, 1, 3, 1,
	1, 3, 3, 1, 3, 4, 4, 4, 3, 2,
	4, 0, 1, 0, 2, 0, 1, 0, 1, 2,
	1, 1, 1, 2, 2, 1, 2, 3, 2, 3,
	2, 2, 2, 1, 1, 3, 3, 0, 1, 1,
	2, 6, 5, 6, 6, 5, 5, 0, 2, 3,
	3, 0, 2, 3, 3, 3, 2, 3, 1, 3,
	6, 1, 1, 3, 4, 3, 4, 4, 4, 1,
	3, 4, 5, 6, 3, 4, 5, 6, 3, 4,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 5,
	5, 3, 3, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 3, 1, 1, 1, 2, 2, 2, 2,
	1, 1, 2, 7, 7, 6, 6, 2, 2, 5,
	6, 3, 3, 1, 3, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 4, 2, 4, 0, 1, 2, 5, 0, 3,
	0, 1, 4, 4, 2, 1, 0, 0, 1, 1,
	2, 2, 1, 1, 2, 2, 0, 1, 1, 1,
	1, 5, 1, 3, 0, 3, 1, 1, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 6, 4, 4,
	8, 8, 6, 8, 6, 5, 4, 10, 2, 2,
	1, 2, 2, 2, 2, 2, 5, 6, 6, 6,
	6, 6, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 8, 4, 8, 8, 6, 5, 4, 4,
	4, 5, 7, 4, 4, 7, 4, 4, 6, 6,
	6, 8, 6, 6, 4, 4, 3, 4, 6, 6,
	4, 4, 6, 4, 6, 4, 4, 4, 4, 4,
	4, 6, 4, 6, 4, 4, 4, 6, 4, 6,
	4, 4, 6, 4, 6, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 4, 4, 6, 4, 6, 4,
	8, 6, 4, 4, 6, 4, 6, 8, 4, 6,
	8, 4, 4, 6, 8, 6, 4, 6, 6, 8,
	10, 7, 8, 8, 9, 4, 4, 4, 4, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 4,
	4, 4, 4, 4, 4, 6, 4, 6, 5, 9,
	6, 9, 8, 6, 8, 8, 8, 6, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 6, 8,
	10, 12, 14, 6, 8, 8, 10, 12, 14, 6,
	8, 10, 12, 6, 8, 4, 4, 3, 4, 6,
	6, 4, 6, 4, 6, 8, 0, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 0, 2,
	3, 4, 4, 4, 4, 4, 0, 3, 4, 7,
	3, 1, 1, 1, 0, 5, 5, 2, 3, 1,
	2, 2, 1, 2, 1, 2, 2, 1, 2, 2,
	1, 1, 0, 1, 0, 1, 0, 2, 1, 2,
	4, 0, 2, 1, 1, 3, 5, 1, 1, 1,
	2, 2, 0, 4, 0, 2, 0, 2, 2, 1,
	3, 0, 1, 0, 1, 3, 1, 3, 2, 0,
	1, 1, 0, 1, 2, 4, 4, 0, 2, 2,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	0, 3, 3, 3, 0, 3, 1, 1, 0, 4,
	0, 1, 1, 0, 3, 1, 3, 2, 1, 1,
	0, 1, 2, 3, 4, 2, 3, 4, 4, 9,
	3, 5, 0, 3, 3, 0, 1, 0, 2, 2,
	0, 2, 2, 2, 0, 2, 1, 2, 3, 3,
	0, 2, 1, 2, 3, 4, 3, 0, 1, 3,
	1, 6, 5, 4, 1, 3, 3, 5, 0, 2,
	5, 0, 5, 1, 3, 1, 3, 1, 3, 1,
	2, 3, 4, 1, 1, 1, 1, 3, 3, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 0, 3, 0, 1, 0, 1, 1, 5,
	0, 1, 0, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -422, -80, -427, -7, -29, -15, -16, -17, -18,
	-19, -20, -21, -22, -23, -24, -25, -26, -65, -68,
	-66, -67, -70, -71, -72, -73, -74, -9, -11, -69,
	-27, -28, -75, -76, -77, -78, -79, -12, -13, -14,
	-8, -32, -31, -30, 13, 14, -110, -36, 35, -41,
	-51, 239, -52, -42, 240, -53, 242, 241, 279, 243,
	395, 272, 83, 328, 329, 331, 332, 333, 334, -111,
	702, 277, 278, 245, 39, 51, 36, 37, 40, 249,
	285, 286, 248, 145, -33, -37, 12, -424, 15, 485,
	274, 273, 31, -34, 595, 95, -35, 63, -81, -423,
	750, -258, -242, 26, 36, 32, -241, -237, -129, -242,
	24, 22, 11, -80, -80, -80, 16, 17, -80, -361,
	-363, 95, 172, 95, -80, -58, -57, -55, -54, -56,
	-59, 34, -48, -49, -385, -47, -44, 244, 241, 289,
	135, 136, 279, 280, 281, 243, 263, 278, 282, 277,
	298, -43, 90, 36, 595, 598, -368, 240, 246, 247,
	242, 486, 138, 137, 84, -365, 390, 629, 720, -59,
	722, 110, 113, 721, 50, 253, 723, 724, 725, 636,
	726, 262, 727, 728, 729, 730, 736, 677, 737, 738,
	739, 139, 11, -80, -310, -306, 100, -299, 592, 265,
	627, 439, 628, 314, 90, 47, 42, 531, 602, 386,
	390, 629, 516, 720, 396, 328, 346, 340, 521, 522,
	523, 369, 361, 593, 630, 603, 317, 266, 302, 714,
	359, 148, 722, 321, 631, 280, 397, 398, 632, 399,
	110, 331, 436, 735, 320, 633, 733, 113, 721, 336,
	88, 515, 57, 717, 50, 275, 444, 445, 357, 248,
	353, 723, 303, 634, 605, 296, 138, 135, 742, 39,
	349, 56, 33, 732, 137, 55, 724, 163, 635, 725,
	636, 401, 376, 708, 54, 402, 281, 637, 93, 286,
	597, 325, 716, 403, 536, 350, 404, 313, 731, 245,
	638, 324, 697, 689, 690, 405, 406, 709, 381, 377,
	382, 538, 639, 428, 520, 407, 693, 694, 749, 58,
	640, 641, 710, 136, 642, 87, 726, 89, 344, 345,
	643, 311, 264, 541, 542, 430, 373, 498, 127, 505,
	506, 120, 121, 501, 122, 507, 123, 128, 508, 509,
	510, 499, 124, 117, 500, 511, 512, 374, 375, 125,
	513, 119, 118, 502, 504, 126, 514, 262, 38, 408,
	594, 315, 64, 319, 290, 431, 52, 379, 746, 51,
	704, 543, 644, 707, 372, 368, 495, 59, 645, 646,
	647, 648, 517, 727, 371, 343, 367, 741, 4, 308,
	490, 518, 728, 68, 247, 384, 383, 385, 297, 427,
	364, 649, 650, 651, 269, 91, 652, 354, 25, 653,
	654, 409, 304, 655, 62, 656, 657, 434, 278, 658,
	60, 729, 45, 659, 283, 743, 730, 660, 661, 662,
	703, 663, 285, 664, 411, 665, 691, 692, 410, 378,
	380, 544, 292, 412, 395, 250, 596, 666, 326, 348,
	282, 734, 667, 270, 532, 533, 534, 535, 715, 540,
	539, 284, 289, 277, 435, 271, 668, 669, 670, 671,
	672, 318, 688, 673, 674, 332, 600, 736, 496, 49,
	675, 676, 677, 678, 679, 312, 307, 429, 438, 67,
	92, 392, 680, 681, 713, 342, 337, 43, 305, 99,
	476, 478, 479, 480, 481, 482, 477, 484, 682, 329,
	61, 737, 738, 739, 299, 740, 524, 525, 526, 527,
	13, 578, 561, 589, 562, 579, 563, 572, 564, 580,
	588, 590, 545, 553, 546, 554, 584, 567, 581, 573,
	566, 565, 587, 570, 574, 547, 555, 585, 571, 548,
	556, 549, 557, 550, 558, 583, 582, 575, 586, 551,
	559, 577, 552, 560, 576, 568, 569, 447, 747, 748,
	519, 414, 139, 309, 310, 53, 365, 291, 683, 322,
	684, 355, 356, 492, 493, 370, 341, 366, 700, 330,
	339, 698, 293, 415, 497, 279, 685, 437, 306, 387,
	131, 338, 393, 323, 601, 537, 298, 416, 712, 599,
	528, 529, 363, 360, 300, 530, 686, 388, 702, 417,
	254, 294, 295, 687, 699, 418, 419, 316, 420, 421,
	422, 423, 424, 426, 327, 425, 701, 695, 696, 301,
	475, 598, 335, 358, 394, 457, 458, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 494, 252, -80, 252, -191, -306, -131,
	704, 706, 191, -277, 398, -295, 400, 413, 408, 418,
	406, -286, 409, 411, 292, -408, 428, 252, 415, 239,
	401, 410, 419, 420, 316, 426, 421, 327, 425, 301,
	422, 423, 424, -392, 191, 725, 740, 330, 338, 148,
	362, 405, 403, 429, 704, 100, -312, 100, 101, 102,
	-299, 330, -315, 335, -300, -392, -299, 333, -80, -80,
	-317, -317, -131, -211, -146, 156, -160, -266, -163, 101,
	-151, -154, -205, -206, -207, -208, -161, -225, -264, 180,
	181, 188, 157, -221, -164, 29, 591, 487, 486, 191,
	34, 234, 77, 78, 489, 490, 159, 63, 15, 452,
	453, -162, 442, 443, 454, 448, 449, 515, 517, 518,
	519, 516, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 520, 531, 492, 493, 129, 494, 117, 119,
	118, 127, 128, 495, 496, 497, 359, 543, 544, 538,
	541, 542, 540, 539, 374, 375, 498, 561, 562, 566,
	565, 563, 564, 567, 570, 571, 572, 573, 574, 575,
	577, 576, 568, 569, 546, 545, 547, 548, 549, 550,
	551, 552, 554, 553, 555, 556, 557, 558, 559, 560,
	578, 579, 580, 581, 582, 584, 583, 588, 587, 585,
	586, 590, 589, 499, 500, 120, 121, 122, 123, 124,
	125, 126, 501, 504, 502, 503, 505, 506, 507, 512,
	513, 508, 509, 510, 511, 514, 385, 383, 384, 380,
	379, 378, -90, -103, 618, 617, -104, 439, 444, 445,
	447, -152, -153, -166, -167, -300, -306, 257, 441, 251,
	186, 485, -155, -149, -223, 116, 102, -31, -220, 440,
	450, 451, 455, 446, 456, 604, 606, 621, 622, 624,
	609, 614, 613, 616, 532, 533, 534, 535, 536, 537,
	689, 690, 691, 692, 693, 694, 695, 696, -392, -299,
	100, -158, -156, -200, 103, 108, 111, 112, 114, -414,
	275, 355, 356, 130, -424, -216, -217, -157, 105, 106,
	107, 132, 133, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 718, 98, 104, 50, 414,
	414, -191, -80, -80, -80, -80, -421, 721, 596, -235,
	-129, -237, -33, -31, -424, 12, -80, -31, -32, -30,
	-37, -39, 623, -38, -306, 115, -214, -219, -217, 718,
	109, -242, -258, 16, 67, 175, 48, 56, -240, -241,
	-34, -31, -146, 23, 41, 27, -133, 182, -146, -306,
	-133, -284, 256, -80, -80, -273, -320, 330, -275, 429,
	704, 428, -265, -278, 100, -264, -277, 427, 101, -362,
	172, -348, -352, -300, 267, -378, 263, -191, -371, -370,
	-300, -424, -130, -294, 253, 261, 260, 149, -395, 152,
	309, 441, 251, -54, -55, -56, -277, 190, 724, -112,
	284, 288, 96, 96, -352, -351, -350, -396, 288, 267,
	-377, -369, 259, 268, -358, 260, 261, -353, 253, 150,
	-396, -353, 258, 268, 263, 267, 288, 288, 139, 288,
	139, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	283, -359, 164, -359, 599, 599, -365, -396, 263, 253,
	-396, -396, 259, -296, -353, 255, 28, 255, 38, 38,
	-359, -359, -359, -277, 190, -359, -359, -359, -359, 296,
	296, -359, -359, -359, -359, -359, -359, -359, -359, -359,
	-359, -359, -359, -359, -359, -359, -359, -359, 252, -395,
	-138, 425, 316, 90, -57, 298, -40, -191, -294, 253,
	254, -395, 285, -191, 235, 252, 707, -288, 172, 19,
	-288, -285, 414, 412, 399, 404, -288, -288, -288, -288,
	299, 397, -354, 253, 38, 264, 414, 299, 397, 299,
	300, 299, 300, 407, 417, 299, -311, 18, 175, 441,
	402, 406, 292, 252, 293, 254, 416, 300, -311, 98,
	-289, 172, 299, 414, 408, 295, -288, -288, -318, -424,
	-302, -300, -298, 244, 41, 155, 28, 30, 158, 191,
	142, 23, 159, 40, 246, 362, 263, 190, 259, 486,
	239, 81, 604, 442, 449, 440, 448, 452, 488, 489,
	441, 400, 34, 17, 606, 31, 273, 27, 44, 184,
	241, 162, 607, 276, 29, 274, 129, 133, 609, 26,
	84, 268, 18, 261, 46, 20, 610, 611, 21, 74,
	257, 256, 175, 253, 79, 15, 234, 32, 171, 75,
	612, 150, 145, 613, 614, 615, 616, 143, 77, 172,
	24, 744, 450, 451, 36, 705, 591, 287, 186, 82,
	65, 706, 156, 446, 617, 618, 130, 619, 134, 85,
	711, 152, 22, 80, 48, 620, 288, 621, 258, 745,
	622, 432, 623, 173, 242, 485, 78, 174, 718, 624,
	719, 251, 413, 12, 491, 35, 272, 260, 73, 72,
	141, 76, 456, 625, 252, 161, 255, 144, 132, 11,
	149, 37, 16, 83, 86, 453, 454, 455, 63, 140,
	595, 160, 19, 626, 433, 154, -392, 707, -318, -318,
	299, 339, 35, 101, -418, -419, -420, 595, 432, 255,
	-300, -191, -86, 697, 243, -87, 703, 41, 250, -136,
	414, -124, 191, 725, 708, 709, 710, 707, 411, 715,
	713, 711, 299, 712, 96, 152, 154, 155, 4, -146,
	171, -201, -202, 170, 164, 165, 166, 167, 168, 169,
	176, 175, 156, 158, 172, -251, 153, 177, 178, 179,
	180, 181, 182, 183, 185, 184, 186, 187, 173, 174,
	190, 237, 238, -154, -154, -154, -154, -221, -227, -226,
	-424, -223, -392, -299, -306, -424, -424, -154, -283, -424,
	-151, -424, -424, -424, -424, -424, -230, -146, -424, -424,
	-428, -424, -428, -428, -428, -337, -424, -337, -337, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, 235, -424, -424, -424, -424, -424,
	-337, -337, -337, -337, -337, -337, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	98, 112, 108, 111, 103, -225, 114, 98, 98, 98,
	98, -31, -32, -211, 63, -424, -317, -405, -406, -194,
	-191, -424, 316, -300, -300, 285, 105, -240, -34, -31,
	-235, -241, -237, -31, -80, -122, -135, 69, 70, -134,
	-137, 27, 44, 74, 76, 99, 72, 73, 71, 41,
	-425, 97, -425, -258, -425, 96, -39, -261, 95, 96,
	-424, 651, 681, 651, 681, 67, 49, 98, 98, 96,
	25, -236, -238, -146, 18, -304, 4, -303, 28, -300,
	98, 235, 18, -192, 32, -191, -284, -284, 96, 100,
	330, -274, -276, 430, 432, 164, -305, -300, 98, 34,
	97, 96, -191, -326, -329, -331, -330, -332, -327, -328,
	359, 360, 191, 363, 365, 366, 367, 368, 369, 370,
	371, 372, 373, 376, 388, 35, 275, 355, 356, 357,
	358, 377, 378, 379, 380, 382, 383, 384, 385, 340,
	361, 593, 341, 342, 343, 344, 345, 346, 348, 349,
	352, 350, 351, 353, 354, -301, -300, 95, 97, 96,
	-336, 95, -146, -138, 252, -300, 253, 253, 253, -80,
	485, -359, -359, -359, 283, 23, -47, -44, -385, 22,
	-43, -44, 244, 135, 136, 241, 95, -348, 95, -357,
	-301, -300, 95, 150, 258, 149, -356, -353, -356, -357,
	-300, -223, -300, 150, 150, -300, -300, -270, -300, -270,
	-270, 41, -270, 41, -270, 41, 105, -300, -270, 41,
	-270, 41, -270, 41, -270, 41, -270, 41, 34, 87,
	88, 89, 34, 91, 92, 93, -223, -300, -300, -223,
	-348, -223, -191, -300, -277, 105, 105, 105, -359, -359,
	105, 98, 98, 98, -359, -359, 105, 98, -308, -306,
	98, 98, -397, 269, 313, 315, 105, 105, 105, 105,
	34, 98, -398, 34, 732, 731, 733, 734, 735, 98,
	105, 34, 105, 34, 105, -300, 95, -191, -144, 303,
	239, 241, 244, 85, 98, 321, 319, 320, 317, 322,
	323, 324, 164, 50, 96, 255, 252, -300, -290, 257,
	-290, -300, -307, -306, -298, -191, 255, 396, 98, -146,
	-355, 18, 175, -311, -311, -288, -191, -355, -311, -288,
	-191, -288, -288, -288, -288, -311, -311, -311, -288, -306,
	-306, -191, -191, -191, -191, -191, -191, -191, -318, -289,
	-288, 707, 98, -282, 18, 85, -318, -318, -297, 26,
	26, 96, 336, 433, 434, -316, 333, -82, -300, 98,
	-10, -29, -18, -17, -19, 164, -10, 96, 595, -184,
	-191, 707, 707, 707, 707, 707, 707, -146, -146, -146,
	-146, 619, -209, -416, 156, 132, 133, 130, 131, -163,
	42, 43, 41, -146, -210, -216, -221, 115, 175, 158,
	172, -251, -151, -154, -151, -151, -151, -151, -151, -151,
	234, -151, 234, -151, -151, -151, -151, -151, -151, -319,
	-300, 98, 191, -159, -158, 114, -414, -159, 592, 96,
	-226, 235, -146, -146, -392, -120, 458, 459, 460, 461,
	463, 464, 465, 468, 469, 473, 474, 457, 475, 462,
	467, 470, 471, 472, 466, 358, -146, -212, -211, -212,
	-146, -146, -228, -229, 160, -223, -146, -425, -425, 105,
	182, -128, 27, 44, -128, -128, -128, -128, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -128, -146,
	-121, 457, 475, 462, 467, 470, 471, 472, 466, 358,
	476, 477, 478, 479, 480, 481, 482, 483, 484, -121,
	-120, -146, -146, -146, -146, -146, -146, -146, -146, -88,
	-146, 142, 143, 144, -211, -146, -151, -146, -146, -146,
	-425, -146, -146, -146, -212, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -391, -390, -389, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -211, -211, -211,
	-211, -211, -146, -425, -146, -165, -149, 105, -266, 114,
	101, -146, -146, -146, -146, -146, -146, -212, -302, -307,
	-298, -299, -211, -212, -212, -211, -211, -146, -146, -146,
	-146, -146, -146, -146, -146, -425, -146, -146, -146, -146,
	-146, -258, -425, -211, 96, -407, 432, 433, 705, -309,
	288, -308, 28, -212, 98, 18, -268, 86, -300, -240,
	-240, 69, 70, 65, -132, -133, -137, -425, -38, 28,
	-260, -300, -219, -425, 644, 644, 68, 98, -338, -277,
	386, 387, 191, -146, -146, 96, -239, 30, 31, -191,
	-303, 182, -307, -191, -269, 288, -191, -169, -171, -172,
	-173, -194, -222, -424, -174, -31, 615, 612, 18, -184,
	-185, -193, -306, -275, -320, -274, 96, 431, 433, 434,
	85, 134, -146, -339, 190, -367, -366, -365, -348, -350,
	-351, -352, 97, -339, -344, 393, 392, -336, -336, -336,
	-336, -336, -338, -338, -338, -338, 95, -336, 95, -336,
	-336, -336, -336, -341, 95, -341, -341, -342, -341, 95,
	-342, -343, 95, -343, -378, -146, -375, -374, -372, -373,
	262, 110, 687, 643, 595, 636, 677, 86, -370, -239,
	105, -425, -144, -291, 257, -376, -373, -300, -300, -300,
	-291, 100, 98, 100, 98, 100, 98, -113, -61, -1,
	744, 745, 746, 96, 23, -349, -348, -60, 313, -381,
	-382, 288, -377, -371, -357, 150, -356, -357, -357, -300,
	96, 32, 139, 139, 139, 139, 595, 241, 35, -292,
	635, 156, 687, 643, -348, -60, 255, 255, -319, -319,
	-319, 98, 98, -287, 740, -184, -140, 305, 164, 294,
	294, 252, 307, 252, 307, -191, 318, 321, 319, 320,
	317, 322, 323, 324, 41, 41, 41, 41, 41, 41,
	41, 306, 308, 310, 296, -191, -191, -290, 85, -186,
	-191, 29, -306, 98, 98, -191, -288, -288, -191, -288,
	-288, -191, 98, -306, -420, 337, -300, 373, 698, 700,
	-124, 432, 96, 595, 26, -125, 26, -424, -416, 132,
	133, -221, -221, -221, -210, -151, -154, -151, 155, 276,
	-151, -151, -424, -223, -425, -302, 28, 96, 86, -425,
	180, 96, -425, -425, 96, 18, 96, -231, -229, 162,
	-146, -425, 96, -425, -425, -211, -146, -146, -146, -146,
	-425, -425, -425, -425, -425, -425, -425, -425, -425, -425,
	-211, -425, 96, 96, 18, -323, 28, -425, -425, -425,
	-425, 96, -425, -425, -230, -425, 18, -425, 86, 96,
	175, 96, -425, -425, -425, 96, 96, -425, -425, 96,
	-425, 96, -425, -425, -425, -425, -425, -425, 96, -425,
	96, -425, -425, -425, 96, -425, 96, -425, -425, 96,
	-425, 96, -425, 96, -425, 96, -425, 96, -425, 96,
	-425, 96, -425, 96, -425, 96, -425, 96, -425, 96,
	-425, 96, -425, 96, -425, 96, -425, 96, -425, 96,
	-425, 96, -425, 96, -425, -425, -425, 96, -425, 96,
	-425, 96, -425, -425, 96, -425, 96, -425, 96, -425,
	96, 96, -425, 96, 96, 96, -425, 96, 96, 96,
	96, -425, -425, -425, -425, 96, 96, 96, 96, 96,
	96, 96, 96, 96, 96, -425, -425, -425, -425, -425,
	-425, 96, -95, 620, -425, -425, 96, -425, 96, 96,
	96, 96, 96, -425, -424, 235, -425, -425, -425, -425,
	-425, 96, 96, 96, 96, 96, 96, -425, -425, -425,
	96, 96, -425, 96, -425, 96, -425, -406, 704, 433,
	-198, -197, -195, 83, 256, 84, -424, -308, -425, -159,
	-266, -267, -266, -204, -300, 105, 114, -242, -168, 96,
	-170, 18, -221, 97, 96, -338, -246, -252, -285, -300,
	98, 191, -340, 191, -340, 386, 387, -238, 235, -199,
	19, -203, 35, 63, -29, -424, -424, 35, 96, -187,
	-189, -188, -190, 75, 79, 81, 76, 77, 78, 82,
	-314, 28, -31, -169, -31, -424, -191, -184, -426, 18,
	86, -426, 96, 235, -276, -279, 435, 432, 438, -392,
	98, -112, 96, -365, -352, -243, -141, 46, -345, 394,
	-338, 603, -338, -347, 98, -347, 105, 105, 105, 97,
	-50, -45, -46, 36, 90, -372, -359, 98, 45, -359,
	-359, -300, 97, -239, -140, -191, 156, 85, -376, -376,
	-376, -306, -2, 743, 749, 150, 95, 399, 22, -260,
	96, 97, -224, 314, 97, -114, -300, 97, 95, -357,
	-357, -300, -424, 252, 34, 34, 687, 643, 635, -60,
	-224, -223, -300, -339, 742, 741, 97, 254, 312, -145,
	452, -142, 98, 100, -191, -191, -191, -191, -191, -191,
	244, 241, 422, -415, 325, -415, 297, 255, -184, -191,
	96, -85, 271, 266, -311, -311, 36, -191, 432, 716,
	714, -146, 155, 276, -163, -154, -120, -120, -151, -321,
	191, 359, 275, 357, 353, 373, 364, 392, 355, 393,
	350, 349, 348, -321, -319, -151, -211, -146, -146, -146,
	163, -146, 161, -146, -96, -95, -425, -425, -425, -425,
	-425, -96, -96, -96, -96, -96, -96, -96, -96, -96,
	-96, -235, -146, -146, -146, -425, 191, 359, -96, -146,
	18, -146, -319, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -389, -146,
	-211, -146, -211, -146, -146, -146, -146, -146, -390, -390,
	-390, -390, -390, -211, -211, -211, -211, -146, -424, -300,
	-99, -98, -97, 670, 256, -95, -165, -99, -165, 234,
	-146, 234, 234, 234, -146, -212, -302, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -195, -353, 294,
	-353, 294, -353, -270, 96, -281, 26, 18, 63, 63,
	-168, -199, -133, -169, -300, -249, 697, -255, 52, -253,
	-254, 53, -250, 54, 62, -340, -340, 182, -240, -146,
	-271, 85, -272, -280, -223, -215, -218, -216, -424, -259,
	-425, -300, -270, -272, -171, -172, -172, -171, -172, 75,
	75, 75, 80, 75, 80, 75, -188, -306, -425, -146,
	-309, 86, -169, -169, -193, -306, 182, 432, 436, 437,
	-365, -413, 130, 156, 34, 85, 390, 110, -411, 190,
	632, 682, 687, 643, 636, 677, -412, 258, 149, 150,
	270, 28, 47, 97, 96, 97, 96, 97, 97, 96,
	-293, -292, -46, -45, -359, -359, 105, -392, 98, 98,
	254, 29, -191, 85, 85, 85, -115, 747, 105, 95,
	-3, 90, -146, 95, 23, -348, -223, -383, -333, -384,
	-334, -335, -5, -6, -360, -118, 63, 110, -64, 50,
	253, 727, 728, 139, -424, 740, -375, -260, -379, -381,
	-191, -150, -424, -162, -148, -147, -149, -155, 180, 181,
	275, 355, 356, -224, -191, -139, 303, 311, 95, -143,
	101, -394, 86, 294, 390, 294, 390, 98, -417, 326,
	98, -417, -191, -85, -50, -191, -288, -288, 36, -392,
	-425, -163, -154, -127, 175, 595, -324, 602, -336, -336,
	-336, -343, -336, 345, -336, 345, -336, -425, -425, -425,
	96, -425, 26, -425, 96, -146, 96, -96, -96, -96,
	-96, -96, -123, 491, 96, 96, -425, 95, 95, -425,
	-146, -425, -425, -425, 96, -425, -425, -425, -425, -425,
	-425, -425, -425, -425, -425, -425, -425, -425, 96, -425,
	96, -425, 96, -425, 96, -425, 96, -425, 96, -425,
	96, -425, 96, -425, 96, -425, 96, -425, 96, -425,
	96, -425, 96, -425, 96, -425, 96, -425, 96, -425,
	-425, 96, -425, -425, -425, 96, -425, 96, -425, 96,
	-425, -425, -425, 96, -322, 688, -425, -425, -425, -425,
	-425, -425, -425, -425, -425, -425, -425, -94, -301, -95,
	652, 652, -425, -95, -232, 96, -151, -425, -151, -151,
	-151, -425, -425, -425, 96, -425, 96, 96, -425, 96,
	-425, 96, -425, -425, -425, -425, 96, -196, 26, -424,
	-196, -424, -196, -425, -266, -191, -199, -233, 20, -246,
	57, 365, -257, -256, 61, 53, -254, 23, 55, 23,
	33, -271, 96, 164, -313, 96, 28, -425, -425, 96,
	63, 235, -425, -199, -182, -181, 85, 86, -183, 85,
	-181, 75, 75, -261, 96, -269, -169, -199, -199, 235,
	130, -424, -150, 16, 98, 98, -392, -410, 731, 732,
	34, 105, -359, -359, 150, 150, -191, 95, -338, 98,
	-338, 105, 105, 34, 91, 92, 93, 34, 87, 88,
	89, -191, -191, -191, -191, -380, 95, 23, -146, 95,
	164, 97, -260, -260, 290, 175, -359, 725, 296, 296,
	-359, -359, -359, -117, -116, 747, 97, -425, 96, -346,
	595, 598, -146, -156, -156, -261, 97, -388, 595, -393,
	-300, -300, -300, -300, 105, 107, -425, 593, 82, 596,
	-425, -338, -146, -146, -146, -146, -240, 98, -146, -146,
	105, 105, -96, -425, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -211, -146, -425, -179, -178, -180,
	708, 130, 34, -321, -425, -213, 288, -102, -101, -100,
	18, -425, -146, -120, -120, -120, -120, -146, -146, -146,
	-146, -146, -146, -424, 75, 22, 20, -263, -300, 258,
	-424, -263, -424, -309, -233, -234, 21, 23, -247, 59,
	-245, 58, -245, -256, 23, 23, 98, 23, 98, 150,
	-280, -146, -218, -308, 63, -29, -300, -215, -300, -235,
	-146, 95, -146, -159, -199, -199, -146, -206, 515, 517,
	518, 519, 516, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 520, 531, 492, 493, 494, 117, 119,
	118, 127, 128, 495, 496, 497, 359, 543, 544, 538,
	541, 542, 540, 539, 374, 375, 498, 561, 562, 566,
	565, 563, 564, 567, 570, 571, 572, 573, 574, 575,
	577, 576, 568, 569, 546, 545, 547, 548, 549, 550,
	551, 552, 554, 553, 555, 556, 557, 558, 559, 560,
	578, 579, 580, 581, 582, 584, 583, 588, 587, 585,
	586, 590, 589, 499, 500, 120, 121, 122, 123, 124,
	125, 126, 501, 504, 502, 505, 506, 507, 512, 513,
	508, 509, 510, 511, 514, 385, 383, 384, 380, 379,
	378, 439, 444, 445, 447, 532, 533, 534, 535, 536,
	537, 689, 690, 691, 692, 693, 694, 695, 696, 98,
	98, 95, -146, 97, 97, -261, -379, -61, 97, -262,
	-260, 105, 97, 291, -216, -424, 98, -359, -359, -359,
	105, 105, -308, -425, 96, -300, -412, -381, 599, 599,
	-425, 28, -387, -386, -302, 95, 86, 68, 594, 597,
	-425, -425, -425, 96, -425, -425, -425, 97, 97, -425,
	-425, -425, -425, -425, -425, -425, -425, -425, -425, -425,
	-425, -425, -425, -425, -425, -425, -425, -425, -425, -425,
	-425, 96, -425, -178, -180, -425, 85, -159, -235, 23,
	-99, 313, 315, -99, -425, -425, -425, -425, -425, 96,
	-425, -425, 96, -425, 96, -425, -425, -263, -425, 23,
	23, 96, -425, -263, -425, -263, -198, -234, -109, -108,
	-107, 626, -146, -211, -248, 60, 85, 134, 98, 98,
	98, 16, -424, -215, 235, -313, -240, -260, -176, 399,
	-235, -425, -260, 97, 28, 97, 749, 150, 97, -216,
	-126, -424, 287, -308, 98, 98, -116, -119, -29, 96,
	164, -260, -191, 68, -146, -211, -425, 85, 607, 708,
	-93, -92, -89, 719, 745, -211, -95, -95, -146, -146,
	-146, -425, -300, 258, -425, -425, -109, 96, -106, -105,
	-300, -325, 595, 85, 134, -272, -260, -313, -300, 97,
	-425, -424, -240, 97, -244, -29, 95, -3, 287, -333,
	-384, -334, -335, -5, -6, -360, -83, 595, -386, -364,
	-306, -302, 98, 105, 97, 595, -425, -425, -91, 158,
	717, 685, -156, 234, -425, 96, -425, 96, -425, 96,
	-107, 96, 28, 600, -425, -309, -177, -175, -300, 649,
	-403, -402, 591, -413, -409, 130, 156, 110, -411, 687,
	643, 140, 141, -83, -146, 95, -425, -84, 302, 704,
	235, -394, 596, -91, 718, 663, 638, 663, 638, -151,
	-146, -146, -146, -105, -424, -425, 96, 26, -326, -63,
	660, -400, -401, 85, -404, 405, 659, 680, 130, 98,
	97, -260, 263, -307, -388, 597, 155, -120, -425, 96,
	-425, 96, -425, -94, -175, 656, -339, -159, -401, 85,
	-400, 85, 17, 16, -4, 748, 97, 304, -91, 663,
	638, -146, -146, -425, -62, 29, -176, -399, 271, 266,
	269, 35, -399, 105, -4, -425, -425, 660, 265, 34,
	130, -159, -179, -178, -178,
}

var yyDef = [...]int{
	890, -2, -2, 892, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	39, 70, 72, 73, 890, 890, 890, 0, 890, 0,
	0, 890, -2, -2, 890, 1651, 0, 890, 0, 885,
	0, -2, 807, 813, 0, 822, -2, 0, 0, 890,
	890, 2290, 2290, 885, 0, 0, 0, 0, 0, 890,
	890, 890, 890, 1656, 1503, 50, 890, 0, 88, 89,
	840, 841, 842, 65, 0, 2288, 85, 0, 891, 1,
	3, 71, 75, 0, 0, 0, 58, 1512, 0, 78,
	0, 0, 894, 0, 0, 1634, 890, 890, 0, 129,
	130, 0, 0, 0, -2, 133, -2, 162, 163, 164,
	0, 169, 612, 530, 582, 528, 567, -2, 516, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 533, 405, 405, 0, 0, -2, 516, 516, 516,
	1636, 0, 0, 0, 564, 467, 405, 405, 405, 0,
	405, 405, 405, 405, 0, 0, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 1530, 168, 1652, 1649, 1650, 1812, 1813,
	1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823,
	1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833,
	1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843,
	1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853,
	1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863,
	1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873,
	1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883,
	1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893,
	1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903,
	1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913,
	1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923,
	1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933,
	1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943,
	1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953,
	1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963,
	1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973,
	1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983,
	1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993,
	1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003,
	2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013,
	2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023,
	2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033,
	2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043,
	2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053,
	2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063,
	2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073,
	2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083,
	2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093,
	2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103,
	2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113,
	2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123,
	2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133,
	2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143,
	2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153,
	2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163,
	2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173,
	2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183,
	2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193,
	2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203,
	2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213,
	2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223,
	2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233,
	2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243,
	2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253,
	2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263,
	2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273,
	2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283,
	2284, 2285, 2286, 2287, 0, 1628, 0, 725, 994, 0,
	886, 887, 0, 796, 796, 0, 796, 796, 796, 796,
	0, 0, 0, 739, 0, 0, 0, 0, 793, 0,
	755, 756, 0, 793, 0, 762, 799, 0, 0, 769,
	796, 796, 772, 2291, 0, 2291, 2291, 0, 0, 1619,
	0, 790, 788, 802, 803, 42, 806, 809, 810, 811,
	812, 815, 0, 826, 829, 1645, 1646, 0, 831, 836,
	853, 854, 0, 45, 1154, 0, 1018, 0, 1029, -2,
	1040, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 0,
	0, 0, 0, 1070, 1071, 0, 0, 0, 0, 0,
	1134, 0, 0, 0, 0, 2014, 1474, 0, 0, 1436,
	1436, 1170, 1436, 1436, 1438, 1438, 1438, 1865, 2006, 2015,
	2194, 1826, 1832, 1833, 1834, 2140, 2141, 2142, 2143, 2234,
	2235, 2239, 1928, 1821, 2207, 2208, 0, 2287, 1967, 1975,
	1976, 1952, 1961, 2000, 2102, 2218, 1844, 1995, 2065, 1925,
	1947, 1948, 2083, 2084, 1971, 1972, 1951, 2146, 2148, 2164,
	2165, 2150, 2152, 2161, 2167, 2172, 2151, 2163, 2168, 2181,
	2185, 2188, 2189, 2190, 2158, 2156, 2169, 2173, 2175, 2177,
	2183, 2186, 2159, 2157, 2170, 2174, 2176, 2178, 2184, 2187,
	2145, 2149, 2153, 2162, 2180, 2160, 2179, 2154, 2166, 2171,
	2182, 2155, 2147, 1965, 1968, 1955, 1956, 1958, 1960, 1966,
	1973, 1979, 1957, 1978, 1977, 0, 1953, 1954, 1959, 1970,
	1974, 1962, 1963, 1964, 1969, 1980, 2021, 2020, 2019, 2064,
	1991, 2063, 0, 0, 0, 0, 0, 1815, 1870, 1871,
	2191, 1358, 1359, 1360, 1361, 0, 0, 0, 0, 0,
	0, 0, 294, 295, 1487, 1488, 44, 1153, 1615, 1438,
	1438, 1438, 1438, 1438, 1438, 1092, 1093, 1094, 1095, 1096,
	1122, 1123, 1129, 1130, 2078, 2079, 2080, 2081, 1908, 2229,
	1917, 1918, 2060, 2061, 1930, 1931, 2261, 2262, -2, -2,
	-2, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	1869, 2205, 2206, 231, 0, 1613, 1614, 299, 296, 297,
	298, 1136, 1137, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274, 275, 276, 277, 278,
	279, 280, 281, 282, 283, 284, 285, 286, 287, 288,
	289, 290, 291, 292, 293, 0, 301, 302, 2290, 0,
	863, 0, 0, 0, 0, 0, 0, 1657, 1658, 1512,
	0, 1504, 1503, 63, 0, 890, -2, 0, 0, 0,
	0, 47, 0, 52, 951, 79, 80, 1603, 1607, 0,
	893, 77, 76, 1552, 1555, 0, 0, 0, 59, 1513,
	67, 69, 1514, 0, 895, 896, 0, 927, 931, 0,
	0, 0, 1635, 1634, 1634, 105, 0, 0, 106, 126,
	127, 128, 0, 0, 112, 113, 1621, 1622, 43, 0,
	0, 180, 181, 0, 1110, 432, 0, 176, 0, 425,
	364, 0, 1530, 0, 0, 0, 0, 0, 890, 0,
	1629, 157, 158, 165, 166, 167, 405, 405, 405, 579,
	0, 0, 168, 168, 537, 538, 539, 0, 0, -2,
	430, 0, 517, 0, 0, 419, 419, 423, 421, 422,
	0, 0, 0, 0, 0, 0, 0, 0, 556, 0,
	557, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	673, 0, 406, 0, 577, 578, 468, 0, 0, 0,
	0, 0, 0, 0, 0, 1637, 1638, 0, 554, 555,
	0, 0, 0, 405, 405, 0, 0, 0, 0, 405,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 156,
	1543, 0, 0, 0, -2, 0, 717, 0, 0, 0,
	1630, 1630, 0, 724, 0, 0, 0, 729, 0, 0,
	730, 0, 793, 793, 791, 792, 732, 733, 734, 735,
	796, 0, 0, 414, 415, 416, 793, 796, 0, 796,
	796, 796, 796, 793, 793, 793, 796, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2291, 799, 796, 0,
	763, 0, 764, 765, 766, 767, 770, 771, 773, 2292,
	2293, 1647, 1648, 1659, 1660, 1661, 1662, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685,
	1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695,
	1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705,
	1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715,
	1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725,
	1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735,
	1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745,
	1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755,
	1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765,
	1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775,
	1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785,
	1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795,
	1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805,
	1806, 1807, 1808, 1809, 1810, 1811, 2291, 2291, 777, 781,
	785, 783, 1620, 808, 814, 816, 817, 0, 0, 827,
	830, 847, 49, 1916, 835, 49, 837, 838, 839, 865,
	866, 871, 0, 0, 0, 0, 877, 878, 879, 0,
	0, 882, 883, 884, 0, 0, 0, 0, 0, 1016,
	0, 0, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1041, 1042,
	0, 0, 0, 1066, 1067, 1068, 1069, 1072, 0, 1083,
	0, 1085, 1483, -2, 0, 0, 0, 1077, 1078, 0,
	0, 0, 1640, 1640, 0, 0, 0, 1475, 0, 0,
	1168, 0, 1169, 1171, 1172, 1173, 0, 1174, 1175, 900,
	900, 900, 900, 900, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 900, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 144, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1640, 0, 0, 1640, 1640, 0, 0,
	223, 224, 225, 226, 227, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 243, 244, 245, 246, 247, 248, 303, 249, 250,
	251, 1153, 0, 0, 0, 0, 46, 855, 856, 0,
	977, 1640, 0, 0, 906, 0, 1655, 57, 66, 68,
	1512, 61, 1512, 0, 910, 0, 0, -2, -2, 911,
	912, 916, 917, 918, 919, 920, 921, 922, 923, 924,
	54, 2289, 55, 0, 74, 0, 48, 0, 0, 0,
	0, 1553, 0, 1556, 0, 0, 0, 378, 1560, 0,
	0, 1505, 1506, 1509, 0, 928, 2012, 932, 0, 934,
	935, 0, 0, 103, 0, 993, 0, 0, 0, 114,
	0, 116, 117, 0, 0, 0, 389, 1623, 1624, 1625,
	-2, 412, 0, 389, 373, 311, 312, 313, 364, 315,
	364, 364, 364, 364, 378, 378, 378, 378, 346, 347,
	348, 349, 350, 0, 364, 0, 332, 364, 364, 364,
	364, 354, 355, 356, 357, 358, 359, 360, 361, 316,
	317, 318, 319, 320, 321, 322, 323, 324, 366, 366,
	366, 366, 366, 370, 370, 0, 1111, 0, 393, 0,
	1509, 0, 0, 1543, 1632, 1642, 0, 0, 0, 1632,
	135, 0, 0, 0, 580, 623, 531, 568, 581, 0,
	534, 535, -2, 0, 0, 516, 0, 518, 0, 413,
	0, -2, 0, 423, 0, 419, 423, 420, 423, 411,
	424, 558, 559, 560, 0, 562, 563, 653, 963, 0,
	0, 0, 0, 0, 659, 660, 661, 0, 663, 664,
	665, 666, 667, 668, 669, 670, 671, 672, 569, 570,
	571, 572, 573, 574, 575, 576, 0, 0, 0, 0,
	518, 0, 565, 0, 0, 469, 470, 471, 0, 0,
	474, 475, 476, 477, 0, 0, 480, 481, 482, 980,
	981, 483, 484, 509, 510, 511, 485, 486, 487, 488,
	489, 490, 491, 503, 504, 505, 506, 507, 508, 492,
	493, 494, 495, 496, 497, 500, 0, 150, 1534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1630, 0, 0, 0,
	0, 909, 995, 1653, 1654, 726, 0, 0, 797, 798,
	0, 417, 418, 796, 796, 736, 778, 0, 796, 740,
	779, 741, 743, 742, 744, 757, 758, 796, 747, 794,
	795, 748, 749, 750, 751, 752, 753, 754, 774, 759,
	760, 761, 800, 0, 804, 805, 775, 776, 0, 786,
	0, 0, 0, 820, 821, 0, 828, 850, 848, 849,
	851, 843, 844, 845, 846, 0, 852, 0, 0, 868,
	99, 873, 874, 875, 876, 888, 881, 1155, 1013, 1014,
	1015, 0, 1017, 1023, 0, 1138, 1140, 1021, 1022, 1025,
	0, 0, 0, 1019, 1030, 1150, 1151, 1152, 0, 0,
	0, 0, 0, 1034, 1038, 1043, 1044, 1045, 1046, 1047,
	0, 1048, 0, 1051, 1052, 1053, 1054, 1055, 1056, 1062,
	1451, 1452, 1453, 1081, 304, 305, 0, 1082, 0, 0,
	0, 0, 0, 0, 0, 0, 1398, 1399, 1400, 1401,
	1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411,
	1412, 1413, 1414, 1415, 1416, 1417, 1154, 0, 1641, 0,
	0, 0, 1481, 1478, 0, 0, 0, 1437, 1439, 0,
	0, 0, 901, 902, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426,
	1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 0,
	0, 1454, 0, 0, 0, 0, 0, 0, 0, 1474,
	0, 1087, 1088, 1089, 0, 0, 0, 0, 0, 0,
	1216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 145, 146, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1362, 1363, 1364, 1365,
	41, 0, 0, 0, 0, 0, 0, 0, 1485, 0,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1387, 0, 0, 0, 0,
	0, 0, 1611, 0, 0, 858, 859, 861, 0, 997,
	0, 978, 0, 0, 864, 0, 905, 0, 908, 60,
	62, 914, 915, 0, 936, 925, 913, 56, 51, 0,
	0, 955, 1604, 1608, 1554, 1557, 1558, 378, 1580, 0,
	387, 387, 384, 1515, 1516, 0, 1508, 1510, 1511, 81,
	933, 929, 0, 1011, 0, 0, 992, 0, 939, 941,
	942, 943, 975, 0, 946, 947, 0, 0, 0, 0,
	0, 101, 994, 107, 0, 115, 0, 0, 120, 121,
	108, 109, 110, 111, 0, 612, -2, 464, 182, 184,
	185, 186, 177, -2, 376, 374, 375, 314, 378, 378,
	340, 341, 342, 343, 344, 345, 0, 352, 0, 333,
	334, 335, 336, 325, 0, 326, 327, 328, 368, 0,
	329, 330, 0, 331, 431, 0, 1517, 394, 395, 397,
	405, 0, 400, 401, 0, 405, 405, 0, 426, 427,
	0, 1509, 1534, 0, 0, 0, 1643, 1642, 1642, 1642,
	0, 170, 171, 172, 173, 174, 175, 648, 0, 0,
	624, 646, 647, 168, 0, 0, 178, 520, 519, 0,
	680, 0, 429, 0, 0, 423, 423, 408, 409, 561,
	0, 0, 655, 656, 657, 658, 0, 0, 0, 547,
	458, 0, 548, 549, 518, 520, 0, 0, 389, 472,
	473, 478, 479, 498, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 596, 597, 599, 602,
	604, 522, 608, 610, 598, 601, 603, 605, 522, 609,
	611, 1531, 1532, 1533, 0, 0, 718, 0, 0, 455,
	97, 1631, 723, 727, 728, 793, 746, 780, 793, 738,
	745, 768, 782, 784, 818, 819, 824, 832, 833, 834,
	872, 0, 0, 0, 0, 880, 0, 0, 1024, 1139,
	1141, 1026, 1027, 1028, 1031, 0, 1035, 1039, 0, 0,
	0, 0, 0, 1086, 1084, 1485, 0, 0, 0, 1135,
	0, 0, 1158, 1159, 0, 0, 0, 0, 1479, 0,
	0, 1166, 0, 1440, 1116, 0, 0, 0, 0, 0,
	1116, 1116, 1116, 1116, 1116, 1116, 1116, 1116, 1116, 1116,
	1503, 1193, 0, 0, 0, 0, 0, 1198, 1199, 1200,
	1116, 0, 1203, 1204, 0, 1206, 0, 1207, 0, 0,
	0, 0, 1214, 1215, 1217, 0, 0, 1220, 1221, 0,
	1223, 0, 1225, 1226, 1227, 1228, 1229, 1230, 0, 1232,
	0, 1234, 1235, 1236, 0, 1238, 0, 1240, 1241, 0,
	1243, 0, 1245, 0, 1248, 0, 1251, 0, 1254, 0,
	1257, 0, 1260, 0, 1263, 0, 1266, 0, 1269, 0,
	1272, 0, 1275, 0, 1278, 0, 1281, 0, 1284, 0,
	1287, 0, 1290, 0, 1293, 1294, 1295, 0, 1297, 0,
	1299, 0, 1302, 1303, 0, 1305, 0, 1308, 0, 1311,
	0, 0, 1312, 0, 0, 0, 1316, 0, 0, 0,
	0, 1325, 1326, 1327, 1328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1339, 1340, 1341, 1342, 1343,
	1344, 0, 1346, 0, 1117, 0, 0, 1117, 0, 0,
	0, 0, 0, 1156, 1640, 0, 1441, 1442, 1443, 1444,
	1445, 0, 0, 0, 0, 0, 0, 1385, 1386, 1388,
	0, 0, 1391, 0, 1393, 0, 1612, 857, 860, 862,
	949, 998, 999, 0, 0, 0, 0, 979, 1639, 903,
	904, 907, 957, 0, 1489, 0, 0, 936, 1011, 0,
	937, 0, 53, 952, 0, 1562, 1561, 1574, 1587, 387,
	387, 381, 382, 388, 383, 385, 386, 1507, 0, 1512,
	0, 1601, 0, 0, 1590, 0, 0, 0, 0, 0,
	0, 0, 0, 982, 0, 0, 985, 0, 0, 0,
	0, 976, 947, 0, 948, 0, -2, 0, 0, 95,
	96, 0, 0, 0, 118, 119, 0, 0, 125, 390,
	391, 159, 168, 466, 183, 439, 0, 0, 310, 377,
	337, 338, 339, 0, 362, 0, 0, 0, 0, 460,
	131, 1521, 1520, 405, 405, 396, 0, 399, 0, 0,
	0, 1644, 365, 428, 0, 149, 0, 0, 0, 0,
	0, 155, 618, 0, 0, 625, 0, 0, 0, 529,
	0, 540, 541, 0, 652, -2, 714, 393, 0, 407,
	410, 964, 0, 0, 542, 0, 545, 546, 459, 520,
	551, 552, 566, 553, 501, 502, 499, 0, 0, 1544,
	1545, 1550, 1548, 1549, 136, 587, 589, 593, 588, 592,
	0, 0, 0, 524, 0, 524, 585, 0, 455, 1517,
	0, 722, 456, 457, 796, 796, 867, 100, 0, 870,
	0, 0, 0, 0, 1032, 1036, 1049, 1050, 1446, 1472,
	364, 364, 1459, 364, 370, 1462, 364, 1464, 364, 1467,
	364, 1470, 1471, 0, 0, 1079, 0, 0, 0, 0,
	1165, 1482, 0, 0, 1176, 1115, 1116, 1116, 1116, 1116,
	1116, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190,
	1191, 1476, 0, 0, 0, 1197, 0, 0, 1201, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 147, 148,
	0, 0, 0, 0, 0, 0, 1396, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1110, 1114,
	0, 1118, 1119, 0, 0, 1348, 0, 0, 1366, 0,
	0, 0, 0, 0, 0, 0, 1486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1000, 1007, 0,
	1007, 0, 1007, 0, 0, 0, 1626, 1627, 1490, 1491,
	1011, 1492, 926, 938, 956, 1580, 0, 1573, 0, -2,
	1582, 0, 0, 0, 1588, 379, 380, 930, 82, 1012,
	86, 0, 1601, 1616, 0, 1598, 1605, 1609, 0, 0,
	0, 1594, 0, 1011, 940, 971, 973, 0, 968, 983,
	984, 986, 0, 988, 0, 990, 991, 951, 945, 0,
	103, 0, 1011, 1011, 102, 0, 996, 122, 123, 124,
	465, 187, 192, 0, 0, 0, 197, 0, 199, 0,
	0, 0, 204, 205, 405, 405, 440, 0, 307, 309,
	0, 0, 190, 378, 0, 378, 0, 369, 371, 0,
	441, 461, 1518, 1519, 0, 0, 398, 402, 403, 404,
	0, 1633, 151, 0, 0, 0, 621, 0, 649, 0,
	0, 0, 0, 0, 0, 179, 521, 681, 682, 683,
	684, 685, 686, 687, 688, 689, 0, 405, 0, 0,
	0, 405, 405, 405, 0, 706, 392, 0, 0, 677,
	674, 543, 0, 221, 222, 229, 230, 232, 0, 0,
	0, 0, 0, 550, 951, 1535, 1536, 1537, 0, 1547,
	1551, 139, 0, 0, 0, 0, 595, 600, 606, 0,
	523, 607, 719, 720, 721, 98, 731, 737, 869, 889,
	1020, 1033, 1037, 0, 0, 0, 0, 1473, 1457, 378,
	1460, 1461, 1463, 1465, 1466, 1468, 1469, 1075, 1076, 1080,
	0, 1162, 0, 1164, 0, 1480, 0, 1177, 1178, 1179,
	1180, 1181, 1512, 0, 0, 0, 1196, 0, 0, 1116,
	0, 1209, 1208, 1210, 0, 1212, 1213, 1218, 1219, 1222,
	1224, 1231, 1233, 1237, 1239, 1242, 1244, 1246, 0, 1249,
	0, 1252, 0, 1255, 0, 1258, 0, 1261, 0, 1264,
	0, 1267, 0, 1270, 0, 1273, 0, 1276, 0, 1279,
	0, 1282, 0, 1285, 0, 1288, 0, 1291, 0, 1296,
	1298, 0, 1301, 1304, 1306, 0, 1309, 0, 1313, 0,
	1315, 1317, 1318, 0, 0, 0, 1329, 1330, 1331, 1332,
	1333, 1334, 1335, 1336, 1337, 1338, 1345, 0, 1108, 1347,
	1120, 1121, 1126, 1350, 0, 0, 0, 1353, 0, 0,
	0, 1357, 1157, 1368, 0, 1373, 0, 0, 1379, 0,
	1383, 0, 1389, 1390, 1392, 1394, 0, 0, 0, 0,
	0, 0, 0, 977, 958, 64, 1492, 1496, 0, 1567,
	1565, 1565, 1575, 1576, 0, 0, 1583, 0, 0, 0,
	0, 87, 0, 0, 1589, 0, 0, 1610, 0, 0,
	0, 0, 104, 1503, 965, 972, 0, 0, 966, 0,
	967, 987, 989, 944, 0, 1011, 1011, 93, 94, 0,
	193, 0, 195, 0, 198, 200, 201, 202, 208, 209,
	210, 203, 0, 0, 306, 308, 0, 0, 351, 363,
	353, 0, 0, 1522, 1523, 1524, 1525, 1526, 1527, 1528,
	1529, 951, 152, 153, 154, 613, 0, 623, 0, 953,
	0, 616, 0, 532, 0, 0, 0, 405, 405, 405,
	0, 0, 0, 0, 691, 0, 0, 654, 0, 662,
	0, 0, 0, 233, 234, 0, 1546, 586, 0, 137,
	138, 0, 0, 591, 525, 526, 1073, 0, 0, 0,
	1074, 1458, 0, 0, 0, 0, 0, 1477, 0, 0,
	0, 0, 1202, 1205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1321, 0, 0, 0,
	643, 644, 0, 1397, 1113, 1503, 0, 1117, 1127, 1128,
	0, 1117, 1367, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1008, 0, 0, 0, 959, 960,
	0, 0, 0, 997, 1496, 1501, 0, 0, 1570, 0,
	1563, 1566, 1564, 1577, 0, 0, 1584, 0, 1586, 0,
	1617, 1618, 1606, 1599, 0, 1593, 1596, 1598, 1595, 1512,
	969, 0, 974, 0, 1503, 92, 0, 196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 206,
	207, 0, 0, 367, 372, 0, 0, 0, 614, 0,
	954, 626, 617, 0, 704, 0, 708, 0, 0, 0,
	711, 712, 713, 690, 0, 694, 433, 678, 675, 676,
	544, 0, 140, 141, 0, 0, 0, 1447, 0, 1450,
	1160, 1163, 1161, 0, 1192, 1194, 1195, 1455, 1456, 1211,
	1247, 1250, 1253, 1256, 1259, 1262, 1265, 1268, 1271, 1274,
	1277, 1280, 1283, 1286, 1289, 1292, 1300, 1307, 1310, 1314,
	1319, 0, 1322, 0, 0, 1323, 0, 645, 1104, 0,
	0, 1124, 1125, 0, 1352, 1354, 1355, 1356, 1369, 0,
	1374, 1375, 0, 1380, 0, 1384, 1395, 0, 1002, 1009,
	1010, 0, 1005, 0, 1006, 0, 950, 1501, 84, 1502,
	1499, 0, 1497, 1494, 1559, 0, 1568, 1569, 1578, 1579,
	1585, 0, 0, 1598, 0, 1592, 90, 0, 0, 0,
	1512, 194, 0, 213, 0, 622, 0, 625, 615, 702,
	703, 0, 715, 707, 709, 710, 692, -2, 1538, 0,
	0, 0, 594, 1448, 0, 0, 1324, 0, 641, 642,
	1112, 1105, 0, 1090, 1091, 1109, 1349, 1351, 0, 0,
	0, 1001, 961, 962, 1003, 1004, 83, 0, 1498, 1132,
	0, 1493, 0, 1571, 1572, 1602, 0, 1591, 1597, 970,
	977, 0, 91, 446, 439, 1538, 0, 0, 0, 695,
	696, 697, 698, 699, 700, 701, 583, 1540, 142, 143,
	0, 513, 514, 515, 136, 0, 1167, 1320, 1106, 0,
	0, 0, 0, 0, 1370, 0, 1376, 0, 1381, 0,
	1500, 0, 0, 1495, 1600, 627, 0, 629, 0, -2,
	434, 447, 0, 188, 214, 215, 0, 0, 218, 219,
	220, 211, 212, 132, 0, 0, 716, 0, 1541, 1542,
	0, 139, 0, 0, 1097, 1098, 1099, 1100, 1102, 0,
	0, 0, 0, 1133, 1110, 628, 0, 0, 389, 0,
	638, 435, 436, 0, 442, 443, 444, 445, 216, 217,
	650, 0, 0, 512, 590, 1449, 0, 0, 1371, 0,
	1377, 0, 1382, 0, 630, 631, 639, 0, 437, 0,
	438, 0, 0, 0, 619, 0, 650, 1539, 1107, 1101,
	1103, 0, 0, 1131, 0, 640, 636, 448, 450, 451,
	0, 0, 449, 651, 620, 1372, 1378, 0, 452, 453,
	454, 632, 633, 634, 635,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 157, 3, 3, 3, 185, 177, 3,
	95, 97, 182, 180, 96, 181, 235, 183, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 750,
	165, 164, 166, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 187, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 153, 3, 188,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 154, 155,
	156, 158, 159, 160, 161, 162, 163, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 178, 179, 184,
	186, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 233, 234, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 58022, 697, 58023, 698, 58024, 699,
	58025, 700, 58026, 701, 58027, 702, 58028, 703, 58029, 704,
	58030, 705, 58031, 706, 58032, 707, 58033, 708, 58034, 709,
	58035, 710, 58036, 711, 58037, 712, 58038, 713, 58039, 714,
	58040, 715, 58041, 716, 58042, 717, 58043, 718, 58044, 719,
	58045, 720, 58046, 721, 58047, 722, 58048, 723, 58049, 724,
	58050, 725, 58051, 726, 58052, 727, 58053, 728, 58054, 729,
	58055, 730, 58056, 731, 58057, 732, 58058, 733, 58059, 734,
	58060, 735, 58061, 736, 58062, 737, 58063, 738, 58064, 739,
	58065, 740, 58066, 741, 58067, 742, 58068, 743, 58069, 744,
	58070, 745, 58071, 746, 58072, 747, 58073, 748, 58074, 749,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:631
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:644
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:645
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:649
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:688
		{
			setParseTree(yylex, nil)
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:694
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:700
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:706
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:710
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:716
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:722
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:728
		{
			yyLOCAL = &With{CTEs: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:732
		{
			yyLOCAL = &With{CTEs: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:737
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:741
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:747
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:751
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:757
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion().Select}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:763
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:767
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:771
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:794
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:800
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:805
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:811
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:818
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:824
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:831
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 64:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:835
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:841
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:845
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:849
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:853
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:857
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:863
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:867
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:872
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:876
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:882
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:886
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:891
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:897
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:903
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:910
		{
			yyLOCAL = &ValuesStatement{ListArg: ListArg(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:914
		{
			yyLOCAL = &ValuesStatement{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:920
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:926
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:934
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), yyDollar[8].groupByUnion(), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:938
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), yyDollar[7].groupByUnion(), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:942
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:948
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = getAliasedTableExprFromTableName(yyDollar[4].tableName)
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:960
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: getAliasedTableExprFromTableName(yyDollar[4].tableName), Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:972
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:976
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:982
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:988
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:992
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:996
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1000
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1005
		{
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1006
		{
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1010
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1014
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1020
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1024
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1030
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1034
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 103:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1039
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1043
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1049
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1055
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1059
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1065
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1069
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1073
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1077
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1083
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1087
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1091
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1097
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1101
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1107
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1111
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1117
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1121
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1125
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1131
		{
			yyVAL.str = RepeatableReadStr
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1135
		{
			yyVAL.str = ReadCommittedStr
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1139
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1143
		{
			yyVAL.str = SerializableStr
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1149
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1153
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1157
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1163
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1169
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1176
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1185
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1189
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1196
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1200
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1205
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1209
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1215
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1220
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1225
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1231
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1236
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1242
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 144:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1247
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1251
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1257
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1261
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1267
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 149:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1273
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1280
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1287
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1292
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeFullText}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1297
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeSpatial}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1302
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeUnique}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1309
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1316
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1327
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1334
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1338
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1344
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1348
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1352
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1356
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1360
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1364
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 168:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1370
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1374
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1380
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1384
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1390
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1394
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1400
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1404
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1410
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1414
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1420
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1424
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1430
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1435
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1440
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1444
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1449
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1453
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1457
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 187:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1468
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1477
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1486
		{
			yyVAL.str = ""
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1490
		{
			yyVAL.str = ""
		}
	case 191:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1499
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1503
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1508
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1513
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1518
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyDollar[1].columnTypeOptionsUnion().DefaultLiteral = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1524
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1529
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1534
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1539
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1544
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1548
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1553
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1557
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1562
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1567
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1572
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 207:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1576
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1582
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1586
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1590
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1596
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1600
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1605
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1609
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1614
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1619
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1624
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1629
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1634
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1639
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1646
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1653
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1657
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1661
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1665
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1669
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1673
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("sysdate"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1683
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1690
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1694
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1700
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1704
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1708
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1712
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1716
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1720
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1724
		{
			yyLOCAL = NewBitLiteral("0b" + yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1728
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1732
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral("0b" + yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1736
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1740
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1744
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1748
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1752
		{
			arg := parseBindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: arg}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1757
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1761
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1765
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1771
		{
			yyVAL.str = Armscii8Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1775
		{
			yyVAL.str = ASCIIStr
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1779
		{
			yyVAL.str = Big5Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1783
		{
			yyVAL.str = UBinaryStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1787
		{
			yyVAL.str = Cp1250Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1791
		{
			yyVAL.str = Cp1251Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1795
		{
			yyVAL.str = Cp1256Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1799
		{
			yyVAL.str = Cp1257Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1803
		{
			yyVAL.str = Cp850Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1807
		{
			yyVAL.str = Cp852Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1811
		{
			yyVAL.str = Cp866Str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1815
		{
			yyVAL.str = Cp932Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1819
		{
			yyVAL.str = Dec8Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1823
		{
			yyVAL.str = EucjpmsStr
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1827
		{
			yyVAL.str = EuckrStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1831
		{
			yyVAL.str = Gb18030Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1835
		{
			yyVAL.str = Gb2312Str
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1839
		{
			yyVAL.str = GbkStr
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1843
		{
			yyVAL.str = Geostd8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1847
		{
			yyVAL.str = GreekStr
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1851
		{
			yyVAL.str = HebrewStr
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1855
		{
			yyVAL.str = Hp8Str
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1859
		{
			yyVAL.str = Keybcs2Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1863
		{
			yyVAL.str = Koi8rStr
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1867
		{
			yyVAL.str = Koi8uStr
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1871
		{
			yyVAL.str = Latin1Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1875
		{
			yyVAL.str = Latin2Str
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1879
		{
			yyVAL.str = Latin5Str
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1883
		{
			yyVAL.str = Latin7Str
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1887
		{
			yyVAL.str = MacceStr
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1891
		{
			yyVAL.str = MacromanStr
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1895
		{
			yyVAL.str = SjisStr
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1899
		{
			yyVAL.str = Swe7Str
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1903
		{
			yyVAL.str = Tis620Str
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1907
		{
			yyVAL.str = Ucs2Str
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1911
		{
			yyVAL.str = UjisStr
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1915
		{
			yyVAL.str = Utf16Str
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1919
		{
			yyVAL.str = Utf16leStr
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1923
		{
			yyVAL.str = Utf32Str
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1927
		{
			yyVAL.str = Utf8mb3Str
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1931
		{
			yyVAL.str = Utf8mb4Str
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1935
		{
			yyVAL.str = Utf8mb3Str
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1945
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1949
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1953
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1959
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1963
		{
			yyLOCAL = AppendString(yyDollar[1].exprUnion(), yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1969
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1973
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1977
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1983
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1987
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1993
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1997
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2001
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2005
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2011
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2022
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].intPtrUnion()
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2027
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2033
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2037
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2041
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2045
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2049
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2053
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2057
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2061
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2065
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2071
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2077
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2083
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2089
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2095
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2101
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2107
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2115
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2119
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2123
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2127
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2131
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2137
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2141
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].intPtrUnion()}
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2147
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2151
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2155
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2159
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2163
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2167
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2171
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2175
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2179
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2183
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2187
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2191
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 351:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2195
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2199
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 353:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2204
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2210
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2214
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2218
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2222
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2226
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2230
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2234
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2238
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2244
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2249
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 364:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *int
//line sql.y:2254
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *int
//line sql.y:2258
		{
			yyLOCAL = ptr.Of(convertStringToInt(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2263
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2267
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2276
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2280
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2287
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2291
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2297
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2305
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2309
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2313
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2318
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2322
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2327
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2331
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2335
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2339
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2343
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2348
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2353
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2358
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2363
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 387:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2369
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2373
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2378
		{
			yyVAL.str = ""
		}
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2382
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2386
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 392:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2392
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2397
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2401
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2407
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2411
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2417
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2421
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2426
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2430
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2434
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2438
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2442
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2446
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2452
		{
			yyVAL.str = ""
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2456
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2462
		{
			yyLOCAL = &IndexInfo{Type: IndexTypePrimary, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY")}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2466
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeSpatial, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2470
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeFullText, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2474
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeUnique, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2478
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeDefault, Name: NewIdentifierCI(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2483
		{
			yyVAL.str = ""
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2487
		{
			yyVAL.str = yyDollar[2].str
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2493
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2497
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2501
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2507
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2511
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2516
		{
			yyVAL.str = ""
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2520
		{
			yyVAL.str = yyDollar[1].str
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2526
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2530
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 423:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2535
		{
			yyVAL.str = ""
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2539
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2545
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2549
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2555
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].intPtrUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2559
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2565
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2569
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2575
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2579
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2585
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2591
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2595
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2599
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2603
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2607
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2612
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2616
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2622
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2628
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2634
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2638
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2642
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2647
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2651
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2657
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2663
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2669
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2673
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2677
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2681
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2685
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2690
		{
			yyVAL.str = ""
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2694
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2698
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2704
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2708
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2713
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2717
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2722
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2726
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2732
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2736
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2740
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2746
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2750
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2756
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2760
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2764
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2768
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2772
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2776
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2780
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2784
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2788
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2792
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2796
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2800
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2804
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2808
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2812
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2816
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2820
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2824
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2828
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2832
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2836
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2840
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2844
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2848
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2852
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2856
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2860
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2864
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2868
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2872
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2876
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2881
		{
			yyVAL.str = ""
		}
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2885
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2889
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2908
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2912
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2916
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2920
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2925
		{
			yyVAL.str = ""
		}
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2931
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2935
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2940
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2944
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2949
		{
			yyVAL.str = ""
		}
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2953
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2958
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2962
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2966
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2971
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2975
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2979
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2983
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2987
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 532:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2991
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2997
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3001
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3005
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3011
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3015
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3019
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3023
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3027
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3031
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3035
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3039
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion(), DefaultLiteral: true}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3043
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3047
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(false)}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3051
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(true)}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3055
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3059
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3063
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3067
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3071
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3075
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3079
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3083
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3087
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3091
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3095
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3099
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3103
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3107
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3111
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3115
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3119
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3123
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3127
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3131
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3137
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3141
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3147
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3151
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3155
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3159
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3163
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3167
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3171
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3175
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3179
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3183
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3189
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3196
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3203
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3210
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3216
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3226
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3233
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3240
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3252
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3262
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3266
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3270
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3283
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3293
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3297
		{
			yyLOCAL = &AlterVschema{Action: DropSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3301
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3312
		{
			yyLOCAL = &AlterVschema{
				Action: DropAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3319
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3326
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3333
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3339
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3346
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3354
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3360
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3367
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3373
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3380
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3386
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3395
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3403
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3410
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3416
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3423
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3430
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3434
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3443
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3451
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3460
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3467
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3475
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3479
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3488
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3499
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3503
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3508
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3512
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3517
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3521
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3527
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3533
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3539
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3543
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3549
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3553
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3559
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3565
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3571
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3577
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3583
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3587
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3591
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3595
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3601
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3607
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3613
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3617
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3621
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3627
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3631
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3636
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3640
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3645
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3649
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3655
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3659
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3663
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3667
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3671
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3675
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3679
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3683
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3687
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3691
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3695
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3699
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3703
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3707
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3711
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3715
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3719
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3723
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3727
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3731
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3735
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3739
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3744
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3748
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3752
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3758
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3762
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3768
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 680:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3773
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3777
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3782
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3787
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3792
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3797
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3802
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3807
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3812
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3817
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3823
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3829
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3833
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3839
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3844
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3848
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3853
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3858
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3863
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3868
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3873
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3878
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3885
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3892
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3899
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3907
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3911
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3917
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3923
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3929
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3935
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3941
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3947
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3953
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3959
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3965
		{
			yyVAL.str = ""
		}
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3969
		{
			yyVAL.str = ""
		}
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3975
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3981
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3985
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 720:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3991
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3995
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4004
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4008
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4014
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4018
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4024
		{
			yyLOCAL = &Analyze{IsLocal: yyDollar[2].booleanUnion(), Table: yyDollar[4].tableName}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4030
		{
			yyLOCAL = &PurgeBinaryLogs{To: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4034
		{
			yyLOCAL = &PurgeBinaryLogs{Before: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4040
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4044
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4048
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4052
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4056
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4060
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4064
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4068
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4072
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4076
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4080
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4084
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4088
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4092
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4096
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4100
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4104
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4108
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4112
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4116
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4120
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4124
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4128
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4132
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4136
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4140
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4144
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4148
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4152
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4156
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4160
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4164
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4168
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4172
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4176
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4180
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4184
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4188
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaKeyspaces}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4192
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4196
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4200
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4204
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4208
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4212
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4219
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4223
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4227
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4231
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4235
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4239
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4243
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4247
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4251
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4255
		{
			yyLOCAL = &Show{&ShowTransactionStatus{TransactionID: string(yyDollar[5].str)}}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4259
		{
			yyLOCAL = &Show{&ShowTransactionStatus{}}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4263
		{
			yyLOCAL = &Show{&ShowTransactionStatus{Keyspace: yyDollar[5].identifierCS.String()}}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4268
		{
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4270
		{
		}
	case 787:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4274
		{
			yyVAL.str = ""
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4278
		{
			yyVAL.str = "extended "
		}
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4284
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4288
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4294
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4298
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 793:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4304
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4308
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4312
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4318
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4322
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4326
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4332
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4336
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4342
		{
			yyVAL.empty = struct{}{}
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4346
		{
			yyVAL.empty = struct{}{}
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4350
		{
			yyVAL.empty = struct{}{}
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4356
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4360
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4366
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4370
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4374
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4381
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4385
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4389
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4393
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4400
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4404
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4409
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4413
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4419
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4423
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4429
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4433
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4437
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4444
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4450
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4454
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4459
		{
			yyVAL.empty = struct{}{}
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4461
		{
			yyVAL.empty = struct{}{}
		}
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4464
		{
			yyVAL.empty = struct{}{}
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4466
		{
			yyVAL.empty = struct{}{}
		}
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4470
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4476
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4481
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4485
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4489
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4493
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4497
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4502
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4506
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4510
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4514
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4520
		{
			yyVAL.str = yyDollar[1].str
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4524
		{
			yyVAL.str = yyDollar[1].str
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4528
		{
			yyVAL.str = yyDollar[1].str
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4534
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4538
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4542
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4546
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4551
		{
			yyVAL.str = ""
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4555
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4559
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 850:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4565
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4569
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4575
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4581
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4585
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4591
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4597
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4601
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4607
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4613
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4617
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4621
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4625
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4631
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4637
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4643
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4647
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4651
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4655
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4659
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4663
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4669
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4673
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4679
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4683
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4687
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4691
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4695
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4699
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4703
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4707
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4711
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4715
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4719
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4723
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 885:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4728
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4732
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4736
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4741
		{
			yyVAL.str = ""
		}
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4745
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4750
		{
			setAllowComments(yylex, true)
		}
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4754
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4760
		{
			yyVAL.strs = nil
		}
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4764
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4770
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4774
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4778
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4783
		{
			yyVAL.str = ""
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4787
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4791
		{
			yyVAL.str = SQLCacheStr
		}
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4796
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4800
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4804
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4810
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4814
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4824
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4829
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4833
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4839
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4843
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4848
		{
			yyVAL.strs = nil
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4852
		{
			yyVAL.strs = yyDollar[1].strs
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4858
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4862
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4868
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4872
		{
			yyVAL.str = SQLCacheStr
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4876
		{
			yyVAL.str = DistinctStr
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4880
		{
			yyVAL.str = DistinctStr
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4884
		{
			yyVAL.str = HighPriorityStr
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4888
		{
			yyVAL.str = StraightJoinHint
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4892
		{
			yyVAL.str = SQLBufferResultStr
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4896
		{
			yyVAL.str = SQLSmallResultStr
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4900
		{
			yyVAL.str = SQLBigResultStr
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4904
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4908
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4914
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4918
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4924
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4928
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4932
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4936
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4941
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4945
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4949
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4956
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4961
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4965
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4971
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4977
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4981
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4991
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4995
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4999
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5003
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5009
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5013
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5019
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5023
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5028
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5032
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5037
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5041
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5047
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5051
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5057
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5061
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5067
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5071
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5075
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5079
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5085
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5089
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 965:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5102
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5106
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5110
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5114
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5120
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 970:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5122
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 971:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5126
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5128
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 973:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5132
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5134
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 975:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5137
		{
			yyVAL.empty = struct{}{}
		}
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5139
		{
			yyVAL.empty = struct{}{}
		}
	case 977:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5142
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5146
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5150
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5157
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5163
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5167
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5171
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5177
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5183
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5187
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5191
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5195
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5201
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5205
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5215
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5219
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5225
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5229
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5235
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 997:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5240
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5244
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5250
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5254
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 1001:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5260
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5264
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5268
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5272
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5276
		{
			yyLOCAL = &IndexHint{Type: UseVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5280
		{
			yyLOCAL = &IndexHint{Type: IgnoreVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5285
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5289
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5293
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5297
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5303
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5307
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5314
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5318
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5322
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5326
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5330
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5334
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5338
		{
			yyLOCAL = &AssignmentExpr{Left: yyDollar[1].variableUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5342
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5348
		{
		}
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5351
		{
		}
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5356
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5360
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5364
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5368
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5372
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5376
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: All, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5380
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5386
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5390
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5394
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5398
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5402
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5406
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5410
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5414
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5418
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5422
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5426
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5432
		{
		}
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5435
		{
		}
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5441
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5445
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5449
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5453
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5457
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5461
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5465
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAdd, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5469
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinarySub, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5473
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5477
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5481
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5485
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5489
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5493
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5497
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5503
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5507
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5511
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5515
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5519
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5523
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5527
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5531
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5535
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5539
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5543
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5547
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5551
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5555
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5559
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5563
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5567
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5571
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5575
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5579
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5587
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5591
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAddLeft, Date: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion(), Interval: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5595
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5599
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5603
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5609
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5613
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5619
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5623
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5629
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5633
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5637
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5643
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5647
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5654
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5658
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5662
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5666
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5670
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5676
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5680
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5684
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5688
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5692
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5696
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5700
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5705
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5709
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5715
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5719
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5724
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5728
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5733
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5737
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1112:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5743
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5749
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5753
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5759
		{
			yyLOCAL = yyDollar[1].overClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5763
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5768
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5775
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5781
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5785
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5791
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5795
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5801
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5805
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5810
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5817
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5823
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5827
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5833
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5839
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5843
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1134:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5849
		{
			yyVAL.str = ""
		}
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5853
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5859
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5863
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5870
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5874
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5878
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5882
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5888
		{
			yyLOCAL = yyDollar[1].comparisonExprOperatorUnion()
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5892
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5898
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5902
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5906
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5910
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5914
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5918
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5924
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5928
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5932
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			markBindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5939
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5945
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5949
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5959
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5963
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5973
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5977
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5981
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5985
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5989
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5993
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5997
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6001
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6005
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6009
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6013
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6024
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6028
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6034
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6038
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("curdate")}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6042
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6047
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("curtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6052
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6056
		{
			yyLOCAL = &CountStar{OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6060
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6064
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6068
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6072
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6076
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6080
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6084
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6088
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6092
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6096
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6100
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6104
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6108
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6112
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6116
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6120
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6124
		{
			yyLOCAL = &AnyValue{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6128
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprTimestampadd, Date: yyDollar[7].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6132
		{
			yyLOCAL = &TimestampDiffExpr{Unit: yyDollar[3].intervalTypeUnion(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6136
		{
			yyLOCAL = &ExtractFuncExpr{IntervalType: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6140
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6144
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6148
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6152
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6156
		{
			yyLOCAL = &JSONArrayAgg{Expr: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6160
		{
			yyLOCAL = &JSONObjectAgg{Key: yyDollar[3].exprUnion(), Value: yyDollar[5].exprUnion(), OverClause: yyDollar[7].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6164
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, Type: LeadingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6168
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, Type: TrailingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6172
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6176
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6180
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6184
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6188
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6192
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6196
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6200
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6204
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6208
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6212
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6216
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6220
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6224
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6228
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6232
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6236
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6240
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6244
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6248
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6252
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsEmpty, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6256
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsSimple, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6260
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Dimension, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6264
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Envelope, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6268
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: GeometryType, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6272
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6276
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6280
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6284
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6288
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: EndPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6292
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: IsClosed, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6296
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6300
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6304
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: NumPoints, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6308
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: PointN, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6312
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: StartPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6316
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6320
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6324
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6328
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6332
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6336
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6340
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6344
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6348
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6352
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6356
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6360
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6364
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6368
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6372
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6376
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6380
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6384
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6388
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6392
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6396
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6400
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6404
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6408
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6412
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6416
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6420
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6424
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6428
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6432
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6436
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6440
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6444
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6448
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6452
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6456
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6460
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6464
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6468
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6472
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6476
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6480
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6484
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6488
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6492
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6496
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6500
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6504
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6508
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6512
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6516
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6520
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6524
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Area, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6528
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Centroid, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6532
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: ExteriorRing, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6536
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: InteriorRingN, Polygon: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6540
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: NumInteriorRings, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6544
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: GeometryN, GeomColl: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6548
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: NumGeometries, GeomColl: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6552
		{
			yyLOCAL = &GeoHashFromLatLongExpr{Longitude: yyDollar[3].exprUnion(), Latitude: yyDollar[5].exprUnion(), MaxLength: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6556
		{
			yyLOCAL = &GeoHashFromPointExpr{Point: yyDollar[3].exprUnion(), MaxLength: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6560
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LatitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6564
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LongitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6568
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: PointFromHash, GeoHash: yyDollar[3].exprUnion(), SridOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6572
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6576
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6580
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion(), Srid: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6584
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6588
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6592
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion(), Bitmask: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6596
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6600
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6604
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6608
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6612
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6616
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6620
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6624
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6628
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6632
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6636
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6640
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6644
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6648
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6652
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6656
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6660
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6664
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6668
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6672
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6676
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6680
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6684
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6688
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6692
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6696
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6700
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6704
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6708
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6712
		{
			yyLOCAL = &MultiPolygonExpr{PolygonParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6716
		{
			yyLOCAL = &MultiPointExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6720
		{
			yyLOCAL = &MultiLinestringExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6724
		{
			yyLOCAL = &PolygonExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6728
		{
			yyLOCAL = &LineStringExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6732
		{
			yyLOCAL = &PointExpr{XCordinate: yyDollar[3].exprUnion(), YCordinate: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6736
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6740
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6744
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6748
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6752
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6756
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6760
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6764
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6768
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateAdd, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6772
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateSub, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6776
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6780
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6790
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6794
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6798
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6802
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6807
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6811
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6817
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6821
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6825
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6829
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6833
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6838
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6842
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6846
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6850
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6854
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6858
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6863
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6867
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6871
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6875
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6882
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6886
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6892
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6896
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6900
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6904
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6910
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6914
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6918
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6922
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6926
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6930
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6934
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6939
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6943
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6949
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6953
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6957
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6961
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6965
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6969
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6973
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6977
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6981
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6985
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6989
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6993
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6997
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7001
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7005
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7009
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7013
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7017
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7021
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7025
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7031
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7035
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7039
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7043
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7047
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7051
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7055
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7059
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7063
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7067
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7071
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7075
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7079
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7083
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7087
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7091
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7095
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7099
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:7109
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:7113
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:7117
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7127
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7131
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7135
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7139
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7143
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7149
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7153
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7157
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7161
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7165
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7171
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7175
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7179
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1454:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7185
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7189
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7193
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7199
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7203
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7207
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7211
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7215
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7221
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7225
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7229
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7233
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7237
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7241
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7245
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7249
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7253
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7257
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7263
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7267
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7272
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7276
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7281
		{
			yyVAL.str = string("")
		}
	case 1477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7285
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 1478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7291
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7295
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1480:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7301
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7306
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7310
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7316
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7320
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7324
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7328
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7334
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7338
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7344
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7353
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7357
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7362
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7366
		{
			yyLOCAL = &GroupBy{Exprs: yyDollar[3].exprsUnion(), WithRollup: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7371
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7375
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7381
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7385
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7391
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7397
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7401
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1501:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7406
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7410
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7415
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7419
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7425
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7431
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7435
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7441
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7446
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7450
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7454
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7459
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7463
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7469
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7473
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7477
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7482
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7486
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7490
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7494
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7498
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7505
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7509
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7513
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7517
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7523
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7527
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7531
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7535
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7540
		{
			yyVAL.str = ""
		}
	case 1531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7544
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1532:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7548
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1533:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7552
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1534:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7557
		{
			yyVAL.str = ""
		}
	case 1535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7561
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7567
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7571
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1538:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7576
		{
			yyVAL.str = ""
		}
	case 1539:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7580
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1540:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7585
		{
			yyVAL.str = "cascaded"
		}
	case 1541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7589
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7593
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1543:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7598
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7602
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7608
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7614
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7620
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7629
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7633
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1550:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7638
		{
			yyVAL.str = ""
		}
	case 1551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7642
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7648
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7652
		{
			yyLOCAL = ForUpdateLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7656
		{
			yyLOCAL = ForUpdateLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7660
		{
			yyLOCAL = ForShareLock
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7664
		{
			yyLOCAL = ForShareLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7668
		{
			yyLOCAL = ForShareLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7672
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7678
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7682
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7686
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7691
		{
			yyVAL.str = ""
		}
	case 1563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7695
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7699
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1565:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7704
		{
			yyVAL.str = ""
		}
	case 1566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7708
		{
			yyVAL.str = " header"
		}
	case 1567:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7713
		{
			yyVAL.str = ""
		}
	case 1568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7717
		{
			yyVAL.str = " manifest on"
		}
	case 1569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7721
		{
			yyVAL.str = " manifest off"
		}
	case 1570:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7726
		{
			yyVAL.str = ""
		}
	case 1571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7730
		{
			yyVAL.str = " overwrite on"
		}
	case 1572:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7734
		{
			yyVAL.str = " overwrite off"
		}
	case 1573:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7740
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1574:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7745
		{
			yyVAL.str = ""
		}
	case 1575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7749
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7755
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7759
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1578:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7765
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1579:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7769
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1580:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7774
		{
			yyVAL.str = ""
		}
	case 1581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7778
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7784
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1583:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7788
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7794
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1585:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7798
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1586:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7802
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1587:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7807
		{
			yyVAL.str = ""
		}
	case 1588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7811
		{
			yyVAL.str = " optionally"
		}
	case 1589:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7824
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion(), RowAlias: yyDollar[3].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7828
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7832
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion(), RowAlias: yyDollar[6].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7836
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion(), RowAlias: yyDollar[5].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7840
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7846
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7850
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7854
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1597:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7858
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1598:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7863
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7867
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7871
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7876
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7880
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7886
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7890
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7896
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7900
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7906
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7910
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7916
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7920
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7926
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7932
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7942
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7952
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1617:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7956
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7962
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1620:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7969
		{
			yyVAL.str = "charset"
		}
	case 1623:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7979
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7983
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7987
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1628:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7996
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7998
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1630:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8001
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:8003
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8006
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:8008
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1634:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:8011
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:8013
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1636:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8016
		{
			yyVAL.empty = struct{}{}
		}
	case 1637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8018
		{
			yyVAL.empty = struct{}{}
		}
	case 1638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8020
		{
			yyVAL.empty = struct{}{}
		}
	case 1639:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8024
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1640:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:8029
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:8033
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1642:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:8038
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:8040
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:8044
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8050
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8054
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8061
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8067
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8071
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1651:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8077
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8081
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8088
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8094
		{
			yyLOCAL = &Kill{Type: yyDollar[2].killTypeUnion(), ProcesslistID: convertStringToUInt64(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 1656:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8100
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8104
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1658:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8108
		{
			yyLOCAL = QueryType
		}
		yyVAL.union = yyLOCAL
	case 2288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8766
		{
		}
	case 2289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8771
		{
		}
	case 2290:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8775
		{
			skipToEnd(yylex)
		}
	case 2291:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8780
		{
			skipToEnd(yylex)
		}
	case 2292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8784
		{
			skipToEnd(yylex)
		}
	case 2293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8788
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
