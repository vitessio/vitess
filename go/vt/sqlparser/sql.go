// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const ALGORITHM = 57422
const NONE = 57423
const SHARED = 57424
const EXCLUSIVE = 57425
const SUBQUERY_AS_EXPR = 57426
const ID = 57427
const AT_ID = 57428
const AT_AT_ID = 57429
const HEX = 57430
const STRING = 57431
const NCHAR_STRING = 57432
const INTEGRAL = 57433
const FLOAT = 57434
const DECIMAL = 57435
const HEXNUM = 57436
const VALUE_ARG = 57437
const LIST_ARG = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BIT_LITERAL = 57441
const COMPRESSION = 57442
const JSON_PRETTY = 57443
const JSON_STORAGE_SIZE = 57444
const JSON_STORAGE_FREE = 57445
const JSON_CONTAINS = 57446
const JSON_CONTAINS_PATH = 57447
const JSON_EXTRACT = 57448
const JSON_KEYS = 57449
const JSON_OVERLAPS = 57450
const JSON_SEARCH = 57451
const JSON_VALUE = 57452
const EXTRACT = 57453
const NULL = 57454
const TRUE = 57455
const FALSE = 57456
const OFF = 57457
const DISCARD = 57458
const IMPORT = 57459
const ENABLE = 57460
const DISABLE = 57461
const TABLESPACE = 57462
const VIRTUAL = 57463
const STORED = 57464
const BOTH = 57465
const LEADING = 57466
const TRAILING = 57467
const EMPTY_FROM_CLAUSE = 57468
const LOWER_THAN_CHARSET = 57469
const CHARSET = 57470
const UNIQUE = 57471
const KEY = 57472
const EXPRESSION_PREC_SETTER = 57473
const OR = 57474
const XOR = 57475
const AND = 57476
const NOT = 57477
const BETWEEN = 57478
const CASE = 57479
const WHEN = 57480
const THEN = 57481
const ELSE = 57482
const END = 57483
const LE = 57484
const GE = 57485
const NE = 57486
const NULL_SAFE_EQUAL = 57487
const IS = 57488
const LIKE = 57489
const REGEXP = 57490
const IN = 57491
const SHIFT_LEFT = 57492
const SHIFT_RIGHT = 57493
const DIV = 57494
const MOD = 57495
const UNARY = 57496
const COLLATE = 57497
const BINARY = 57498
const UNDERSCORE_ARMSCII8 = 57499
const UNDERSCORE_ASCII = 57500
const UNDERSCORE_BIG5 = 57501
const UNDERSCORE_BINARY = 57502
const UNDERSCORE_CP1250 = 57503
const UNDERSCORE_CP1251 = 57504
const UNDERSCORE_CP1256 = 57505
const UNDERSCORE_CP1257 = 57506
const UNDERSCORE_CP850 = 57507
const UNDERSCORE_CP852 = 57508
const UNDERSCORE_CP866 = 57509
const UNDERSCORE_CP932 = 57510
const UNDERSCORE_DEC8 = 57511
const UNDERSCORE_EUCJPMS = 57512
const UNDERSCORE_EUCKR = 57513
const UNDERSCORE_GB18030 = 57514
const UNDERSCORE_GB2312 = 57515
const UNDERSCORE_GBK = 57516
const UNDERSCORE_GEOSTD8 = 57517
const UNDERSCORE_GREEK = 57518
const UNDERSCORE_HEBREW = 57519
const UNDERSCORE_HP8 = 57520
const UNDERSCORE_KEYBCS2 = 57521
const UNDERSCORE_KOI8R = 57522
const UNDERSCORE_KOI8U = 57523
const UNDERSCORE_LATIN1 = 57524
const UNDERSCORE_LATIN2 = 57525
const UNDERSCORE_LATIN5 = 57526
const UNDERSCORE_LATIN7 = 57527
const UNDERSCORE_MACCE = 57528
const UNDERSCORE_MACROMAN = 57529
const UNDERSCORE_SJIS = 57530
const UNDERSCORE_SWE7 = 57531
const UNDERSCORE_TIS620 = 57532
const UNDERSCORE_UCS2 = 57533
const UNDERSCORE_UJIS = 57534
const UNDERSCORE_UTF16 = 57535
const UNDERSCORE_UTF16LE = 57536
const UNDERSCORE_UTF32 = 57537
const UNDERSCORE_UTF8 = 57538
const UNDERSCORE_UTF8MB4 = 57539
const INTERVAL = 57540
const JSON_EXTRACT_OP = 57541
const JSON_UNQUOTE_EXTRACT_OP = 57542
const CREATE = 57543
const ALTER = 57544
const DROP = 57545
const RENAME = 57546
const ANALYZE = 57547
const ADD = 57548
const FLUSH = 57549
const CHANGE = 57550
const MODIFY = 57551
const DEALLOCATE = 57552
const REVERT = 57553
const SCHEMA = 57554
const TABLE = 57555
const INDEX = 57556
const VIEW = 57557
const TO = 57558
const IGNORE = 57559
const IF = 57560
const PRIMARY = 57561
const COLUMN = 57562
const SPATIAL = 57563
const FULLTEXT = 57564
const KEY_BLOCK_SIZE = 57565
const CHECK = 57566
const INDEXES = 57567
const ACTION = 57568
const CASCADE = 57569
const CONSTRAINT = 57570
const FOREIGN = 57571
const NO = 57572
const REFERENCES = 57573
const RESTRICT = 57574
const SHOW = 57575
const DESCRIBE = 57576
const EXPLAIN = 57577
const DATE = 57578
const ESCAPE = 57579
const REPAIR = 57580
const OPTIMIZE = 57581
const TRUNCATE = 57582
const COALESCE = 57583
const EXCHANGE = 57584
const REBUILD = 57585
const PARTITIONING = 57586
const REMOVE = 57587
const PREPARE = 57588
const EXECUTE = 57589
const MAXVALUE = 57590
const PARTITION = 57591
const REORGANIZE = 57592
const LESS = 57593
const THAN = 57594
const PROCEDURE = 57595
const TRIGGER = 57596
const VINDEX = 57597
const VINDEXES = 57598
const DIRECTORY = 57599
const NAME = 57600
const UPGRADE = 57601
const STATUS = 57602
const VARIABLES = 57603
const WARNINGS = 57604
const CASCADED = 57605
const DEFINER = 57606
const OPTION = 57607
const SQL = 57608
const UNDEFINED = 57609
const SEQUENCE = 57610
const MERGE = 57611
const TEMPORARY = 57612
const TEMPTABLE = 57613
const INVOKER = 57614
const SECURITY = 57615
const FIRST = 57616
const AFTER = 57617
const LAST = 57618
const VITESS_MIGRATION = 57619
const CANCEL = 57620
const RETRY = 57621
const COMPLETE = 57622
const CLEANUP = 57623
const BEGIN = 57624
const START = 57625
const TRANSACTION = 57626
const COMMIT = 57627
const ROLLBACK = 57628
const SAVEPOINT = 57629
const RELEASE = 57630
const WORK = 57631
const BIT = 57632
const TINYINT = 57633
const SMALLINT = 57634
const MEDIUMINT = 57635
const INT = 57636
const INTEGER = 57637
const BIGINT = 57638
const INTNUM = 57639
const REAL = 57640
const DOUBLE = 57641
const FLOAT_TYPE = 57642
const DECIMAL_TYPE = 57643
const NUMERIC = 57644
const TIME = 57645
const TIMESTAMP = 57646
const DATETIME = 57647
const YEAR = 57648
const CHAR = 57649
const VARCHAR = 57650
const BOOL = 57651
const CHARACTER = 57652
const VARBINARY = 57653
const NCHAR = 57654
const TEXT = 57655
const TINYTEXT = 57656
const MEDIUMTEXT = 57657
const LONGTEXT = 57658
const BLOB = 57659
const TINYBLOB = 57660
const MEDIUMBLOB = 57661
const LONGBLOB = 57662
const JSON = 57663
const JSON_SCHEMA_VALID = 57664
const JSON_SCHEMA_VALIDATION_REPORT = 57665
const ENUM = 57666
const GEOMETRY = 57667
const POINT = 57668
const LINESTRING = 57669
const POLYGON = 57670
const GEOMETRYCOLLECTION = 57671
const MULTIPOINT = 57672
const MULTILINESTRING = 57673
const MULTIPOLYGON = 57674
const ASCII = 57675
const UNICODE = 57676
const NULLX = 57677
const AUTO_INCREMENT = 57678
const APPROXNUM = 57679
const SIGNED = 57680
const UNSIGNED = 57681
const ZEROFILL = 57682
const CODE = 57683
const COLLATION = 57684
const COLUMNS = 57685
const DATABASES = 57686
const ENGINES = 57687
const EVENT = 57688
const EXTENDED = 57689
const FIELDS = 57690
const FULL = 57691
const FUNCTION = 57692
const GTID_EXECUTED = 57693
const KEYSPACES = 57694
const OPEN = 57695
const PLUGINS = 57696
const PRIVILEGES = 57697
const PROCESSLIST = 57698
const SCHEMAS = 57699
const TABLES = 57700
const TRIGGERS = 57701
const USER = 57702
const VGTID_EXECUTED = 57703
const VITESS_KEYSPACES = 57704
const VITESS_METADATA = 57705
const VITESS_MIGRATIONS = 57706
const VITESS_REPLICATION_STATUS = 57707
const VITESS_SHARDS = 57708
const VITESS_TABLETS = 57709
const VITESS_TARGET = 57710
const VSCHEMA = 57711
const NAMES = 57712
const GLOBAL = 57713
const SESSION = 57714
const ISOLATION = 57715
const LEVEL = 57716
const READ = 57717
const WRITE = 57718
const ONLY = 57719
const REPEATABLE = 57720
const COMMITTED = 57721
const UNCOMMITTED = 57722
const SERIALIZABLE = 57723
const CURRENT_TIMESTAMP = 57724
const DATABASE = 57725
const CURRENT_DATE = 57726
const NOW = 57727
const CURRENT_TIME = 57728
const LOCALTIME = 57729
const LOCALTIMESTAMP = 57730
const CURRENT_USER = 57731
const UTC_DATE = 57732
const UTC_TIME = 57733
const UTC_TIMESTAMP = 57734
const DAY = 57735
const DAY_HOUR = 57736
const DAY_MICROSECOND = 57737
const DAY_MINUTE = 57738
const DAY_SECOND = 57739
const HOUR = 57740
const HOUR_MICROSECOND = 57741
const HOUR_MINUTE = 57742
const HOUR_SECOND = 57743
const MICROSECOND = 57744
const MINUTE = 57745
const MINUTE_MICROSECOND = 57746
const MINUTE_SECOND = 57747
const MONTH = 57748
const QUARTER = 57749
const SECOND = 57750
const SECOND_MICROSECOND = 57751
const YEAR_MONTH = 57752
const WEEK = 57753
const REPLACE = 57754
const CONVERT = 57755
const CAST = 57756
const SUBSTR = 57757
const SUBSTRING = 57758
const GROUP_CONCAT = 57759
const SEPARATOR = 57760
const TIMESTAMPADD = 57761
const TIMESTAMPDIFF = 57762
const WEIGHT_STRING = 57763
const LTRIM = 57764
const RTRIM = 57765
const TRIM = 57766
const JSON_ARRAY = 57767
const JSON_OBJECT = 57768
const JSON_QUOTE = 57769
const JSON_DEPTH = 57770
const JSON_TYPE = 57771
const JSON_LENGTH = 57772
const JSON_VALID = 57773
const JSON_ARRAY_APPEND = 57774
const JSON_ARRAY_INSERT = 57775
const JSON_INSERT = 57776
const JSON_MERGE = 57777
const JSON_MERGE_PATCH = 57778
const JSON_MERGE_PRESERVE = 57779
const JSON_REMOVE = 57780
const JSON_REPLACE = 57781
const JSON_SET = 57782
const JSON_UNQUOTE = 57783
const MATCH = 57784
const AGAINST = 57785
const BOOLEAN = 57786
const LANGUAGE = 57787
const WITH = 57788
const QUERY = 57789
const EXPANSION = 57790
const WITHOUT = 57791
const VALIDATION = 57792
const UNUSED = 57793
const ARRAY = 57794
const CUME_DIST = 57795
const DESCRIPTION = 57796
const DENSE_RANK = 57797
const EMPTY = 57798
const EXCEPT = 57799
const FIRST_VALUE = 57800
const GROUPING = 57801
const GROUPS = 57802
const JSON_TABLE = 57803
const LAG = 57804
const LAST_VALUE = 57805
const LATERAL = 57806
const LEAD = 57807
const NTH_VALUE = 57808
const NTILE = 57809
const OF = 57810
const OVER = 57811
const PERCENT_RANK = 57812
const RANK = 57813
const RECURSIVE = 57814
const ROW_NUMBER = 57815
const SYSTEM = 57816
const WINDOW = 57817
const ACTIVE = 57818
const ADMIN = 57819
const AUTOEXTEND_SIZE = 57820
const BUCKETS = 57821
const CLONE = 57822
const COMPONENT = 57823
const DEFINITION = 57824
const ENFORCED = 57825
const ENGINE_ATTRIBUTE = 57826
const EXCLUDE = 57827
const FOLLOWING = 57828
const GEOMCOLLECTION = 57829
const GET_MASTER_PUBLIC_KEY = 57830
const HISTOGRAM = 57831
const HISTORY = 57832
const INACTIVE = 57833
const INVISIBLE = 57834
const LOCKED = 57835
const MASTER_COMPRESSION_ALGORITHMS = 57836
const MASTER_PUBLIC_KEY_PATH = 57837
const MASTER_TLS_CIPHERSUITES = 57838
const MASTER_ZSTD_COMPRESSION_LEVEL = 57839
const NESTED = 57840
const NETWORK_NAMESPACE = 57841
const NOWAIT = 57842
const NULLS = 57843
const OJ = 57844
const OLD = 57845
const OPTIONAL = 57846
const ORDINALITY = 57847
const ORGANIZATION = 57848
const OTHERS = 57849
const PARTIAL = 57850
const PATH = 57851
const PERSIST = 57852
const PERSIST_ONLY = 57853
const PRECEDING = 57854
const PRIVILEGE_CHECKS_USER = 57855
const PROCESS = 57856
const RANDOM = 57857
const REFERENCE = 57858
const REQUIRE_ROW_FORMAT = 57859
const RESOURCE = 57860
const RESPECT = 57861
const RESTART = 57862
const RETAIN = 57863
const REUSE = 57864
const ROLE = 57865
const SECONDARY = 57866
const SECONDARY_ENGINE = 57867
const SECONDARY_ENGINE_ATTRIBUTE = 57868
const SECONDARY_LOAD = 57869
const SECONDARY_UNLOAD = 57870
const SIMPLE = 57871
const SKIP = 57872
const SRID = 57873
const THREAD_PRIORITY = 57874
const TIES = 57875
const UNBOUNDED = 57876
const VCPU = 57877
const VISIBLE = 57878
const RETURNING = 57879
const FORMAT = 57880
const TREE = 57881
const VITESS = 57882
const TRADITIONAL = 57883
const LOCAL = 57884
const LOW_PRIORITY = 57885
const NO_WRITE_TO_BINLOG = 57886
const LOGS = 57887
const ERROR = 57888
const GENERAL = 57889
const HOSTS = 57890
const OPTIMIZER_COSTS = 57891
const USER_RESOURCES = 57892
const SLOW = 57893
const CHANNEL = 57894
const RELAY = 57895
const EXPORT = 57896
const AVG_ROW_LENGTH = 57897
const CONNECTION = 57898
const CHECKSUM = 57899
const DELAY_KEY_WRITE = 57900
const ENCRYPTION = 57901
const ENGINE = 57902
const INSERT_METHOD = 57903
const MAX_ROWS = 57904
const MIN_ROWS = 57905
const PACK_KEYS = 57906
const PASSWORD = 57907
const FIXED = 57908
const DYNAMIC = 57909
const COMPRESSED = 57910
const REDUNDANT = 57911
const COMPACT = 57912
const ROW_FORMAT = 57913
const STATS_AUTO_RECALC = 57914
const STATS_PERSISTENT = 57915
const STATS_SAMPLE_PAGES = 57916
const STORAGE = 57917
const MEMORY = 57918
const DISK = 57919
const PARTITIONS = 57920
const LINEAR = 57921
const RANGE = 57922
const LIST = 57923
const SUBPARTITION = 57924
const SUBPARTITIONS = 57925
const HASH = 57926

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	602, 145,
	-2, 153,
	-1, 48,
	131, 153,
	171, 153,
	327, 153,
	-2, 474,
	-1, 55,
	35, 689,
	231, 689,
	242, 689,
	277, 703,
	278, 703,
	-2, 691,
	-1, 60,
	233, 716,
	-2, 714,
	-1, 114,
	230, 1240,
	-2, 119,
	-1, 116,
	1, 146,
	602, 146,
	-2, 153,
	-1, 127,
	132, 366,
	236, 366,
	-2, 468,
	-1, 146,
	131, 153,
	171, 153,
	327, 153,
	-2, 483,
	-1, 686,
	215, 1261,
	-2, 1257,
	-1, 687,
	215, 1262,
	-2, 1258,
	-1, 761,
	59, 784,
	-2, 799,
	-1, 798,
	147, 1664,
	-2, 112,
	-1, 799,
	147, 1507,
	-2, 113,
	-1, 805,
	147, 1590,
	-2, 1234,
	-1, 953,
	147, 1437,
	-2, 1231,
	-1, 994,
	241, 41,
	246, 41,
	-2, 377,
	-1, 1074,
	1, 522,
	602, 522,
	-2, 153,
	-1, 1311,
	59, 785,
	-2, 804,
	-1, 1312,
	59, 786,
	-2, 805,
	-1, 1365,
	131, 153,
	171, 153,
	327, 153,
	-2, 415,
	-1, 1444,
	132, 366,
	236, 366,
	-2, 468,
	-1, 1453,
	241, 42,
	246, 42,
	-2, 378,
	-1, 1755,
	215, 1266,
	-2, 1260,
	-1, 1838,
	131, 153,
	171, 153,
	327, 153,
	-2, 416,
	-1, 1845,
	25, 174,
	-2, 176,
	-1, 2085,
	86, 39,
	-2, 841,
	-1, 2137,
	77, 94,
	86, 94,
	-2, 861,
	-1, 2204,
	577, 617,
	-2, 604,
	-1, 2337,
	49, 1202,
	-2, 1196,
	-1, 2546,
	86, 39,
	-2, 842,
	-1, 2584,
	7, 53,
	18, 53,
	20, 53,
	87, 53,
	-2, 833,
	-1, 2896,
	22, 1592,
	32, 1592,
	172, 1592,
	253, 1592,
	307, 1592,
	308, 1592,
	309, 1592,
	310, 1592,
	311, 1592,
	312, 1592,
	313, 1592,
	315, 1592,
	316, 1592,
	317, 1592,
	318, 1592,
	319, 1592,
	320, 1592,
	321, 1592,
	322, 1592,
	323, 1592,
	324, 1592,
	325, 1592,
	326, 1592,
	328, 1592,
	330, 1592,
	331, 1592,
	332, 1592,
	333, 1592,
	334, 1592,
	335, 1592,
	336, 1592,
	337, 1592,
	338, 1592,
	341, 1592,
	342, 1592,
	343, 1592,
	344, 1592,
	345, 1592,
	346, 1592,
	347, 1592,
	348, 1592,
	349, 1592,
	461, 1592,
	-2, 562,
}

const yyPrivate = 57344

const yyLast = 41820

var yyAct = [...]int{
	686, 2828, 2676, 2948, 2296, 2925, 2924, 2956, 1789, 2894,
	2675, 1835, 2674, 1368, 2477, 2878, 1769, 2390, 2651, 2397,
	1137, 2039, 2433, 2689, 2781, 776, 680, 1771, 754, 3,
	695, 96, 2351, 2348, 1290, 2804, 2073, 688, 2460, 2399,
	1905, 679, 37, 1326, 2459, 604, 2352, 2349, 689, 2555,
	2258, 186, 2694, 2295, 186, 601, 569, 186, 2549, 2108,
	2294, 677, 584, 1793, 186, 678, 630, 2462, 1808, 2575,
	2338, 2346, 186, 1868, 2541, 2100, 2169, 2131, 2241, 2201,
	1086, 1873, 1893, 2170, 602, 2171, 1422, 186, 155, 1824,
	600, 1812, 803, 2120, 777, 1313, 38, 2092, 2075, 956,
	141, 1665, 596, 1725, 1914, 1813, 1749, 1947, 756, 584,
	1655, 36, 584, 186, 584, 1800, 1875, 1613, 2163, 758,
	989, 762, 984, 1467, 1892, 2139, 1335, 613, 1815, 800,
	1357, 1024, 95, 1222, 1293, 1677, 1158, 1632, 1562, 779,
	1558, 995, 1724, 963, 960, 91, 1458, 1890, 1544, 964,
	1864, 990, 991, 1356, 1340, 1354, 1721, 768, 1135, 1567,
	1417, 1129, 119, 159, 117, 118, 608, 1070, 1443, 124,
	790, 125, 1115, 766, 76, 1762, 764, 97, 85, 591,
	1451, 1229, 1225, 98, 2837, 2194, 992, 89, 2949, 2451,
	2430, 763, 1002, 1907, 1908, 1909, 1907, 2220, 2219, 1945,
	2192, 2634, 2448, 1529, 784, 8, 789, 2249, 2250, 765,
	77, 120, 90, 188, 189, 190, 7, 126, 573, 6,
	1752, 2859, 1620, 1619, 188, 189, 190, 1618, 1617, 1794,
	2858, 1616, 957, 1615, 2679, 1029, 770, 1766, 1767, 1598,
	2679, 1159, 594, 1607, 595, 592, 2449, 2913, 2071, 2334,
	2529, 2928, 757, 2965, 755, 2102, 573, 2923, 982, 2939,
	2414, 2610, 1625, 973, 797, 2777, 1159, 771, 2455, 968,
	2776, 2644, 1028, 1027, 2645, 1026, 778, 2964, 2888, 980,
	120, 979, 978, 78, 2952, 541, 2854, 1985, 1040, 1041,
	1042, 78, 1045, 1046, 1047, 1048, 1320, 570, 1051, 1052,
	1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062,
	1063, 1064, 1065, 1066, 1067, 1005, 2937, 102, 2678, 2652,
	2859, 1006, 2879, 78, 2678, 1933, 80, 2887, 2853, 78,
	2257, 2899, 182, 2511, 1030, 1031, 1032, 1432, 804, 2148,
	2707, 2072, 2147, 557, 2386, 2149, 1169, 1037, 120, 2248,
	981, 1983, 1358, 2111, 1359, 555, 121, 1982, 104, 105,
	87, 108, 2228, 1829, 114, 1105, 2227, 183, 87, 164,
	536, 1169, 2387, 2388, 1830, 1831, 2452, 1132, 2112, 1884,
	748, 747, 1122, 1093, 1124, 2829, 2160, 2552, 1094, 1043,
	750, 751, 752, 753, 1073, 552, 761, 1110, 1111, 1106,
	87, 2195, 1093, 1878, 565, 1768, 87, 1094, 2502, 1099,
	2929, 2153, 1848, 1847, 574, 1092, 573, 1091, 573, 562,
	2500, 573, 1121, 1123, 792, 793, 161, 1606, 162, 2284,
	582, 2930, 586, 1297, 580, 2479, 1959, 1956, 1958, 1957,
	1550, 1165, 2202, 2472, 1157, 1915, 1191, 1069, 181, 2223,
	1948, 2473, 574, 2951, 972, 1545, 1044, 974, 1108, 1109,
	1126, 1608, 1609, 1610, 1114, 1075, 1165, 2786, 1192, 1193,
	1194, 1195, 1196, 1197, 1198, 1200, 1199, 1201, 1202, 1131,
	1107, 1519, 1953, 2236, 542, 2636, 544, 558, 1112, 576,
	1100, 575, 548, 2635, 546, 550, 559, 551, 1113, 545,
	1964, 556, 1707, 1050, 547, 560, 561, 563, 566, 567,
	568, 564, 1049, 554, 577, 1119, 2480, 2481, 1950, 1120,
	977, 87, 1079, 1080, 1952, 1520, 2914, 1521, 1961, 1125,
	1962, 2764, 1963, 2632, 1013, 985, 186, 1954, 186, 986,
	1300, 186, 1877, 977, 1068, 1011, 1918, 1809, 986, 1436,
	1022, 977, 1118, 969, 1082, 1021, 165, 1983, 1020, 1019,
	971, 970, 1018, 1017, 1016, 171, 1951, 1015, 1023, 1010,
	584, 1139, 584, 584, 2403, 961, 2966, 1004, 975, 961,
	998, 2285, 2935, 959, 1203, 1203, 1103, 584, 584, 1699,
	1688, 1689, 1690, 1691, 1701, 1692, 1693, 1694, 1706, 1702,
	1695, 1696, 1703, 1704, 1705, 1697, 1698, 1700, 1072, 975,
	2960, 2240, 574, 961, 574, 1457, 997, 574, 1151, 2076,
	2078, 2413, 1559, 1089, 1891, 1095, 1096, 1097, 1098, 1004,
	37, 1164, 1161, 1162, 1163, 1168, 1170, 1167, 791, 1166,
	1795, 1796, 2237, 1551, 2631, 1939, 1160, 1133, 1134, 1555,
	1145, 1033, 2836, 2193, 2212, 2423, 1164, 1161, 1162, 1163,
	1168, 1170, 1167, 983, 1166, 1004, 2553, 2253, 1997, 2222,
	1430, 1160, 1429, 1428, 2825, 1003, 2196, 1014, 156, 1556,
	2225, 997, 1000, 1001, 578, 961, 2259, 1039, 1012, 994,
	998, 976, 1426, 540, 1206, 1207, 1208, 1209, 1140, 535,
	1071, 2842, 571, 1935, 1214, 2235, 1217, 1549, 2234, 2591,
	993, 1204, 1205, 2571, 976, 2243, 2852, 572, 2144, 1456,
	2242, 2107, 976, 2063, 2453, 2454, 1761, 1003, 1984, 1836,
	1141, 1142, 1007, 997, 1127, 1344, 1269, 2456, 86, 1288,
	2393, 1084, 1008, 1210, 81, 116, 86, 1203, 186, 1202,
	2385, 1116, 584, 584, 773, 1531, 1530, 1532, 1533, 1534,
	1130, 2848, 1009, 1003, 1025, 1881, 2677, 2261, 186, 2243,
	1088, 2627, 2677, 2787, 2242, 1004, 111, 1004, 86, 2077,
	1301, 1568, 1102, 2565, 86, 2394, 1304, 584, 1949, 756,
	1306, 186, 1552, 1104, 1154, 1004, 584, 1303, 77, 1090,
	1081, 1307, 584, 1882, 1360, 1152, 1078, 758, 1153, 1289,
	2396, 1880, 1227, 1155, 1228, 1231, 800, 1678, 2277, 1175,
	157, 1678, 2958, 2011, 2391, 2959, 169, 2957, 2185, 2271,
	2270, 2269, 2263, 1174, 2267, 1932, 2262, 2703, 2260, 1173,
	1174, 2401, 2402, 2265, 1637, 1883, 112, 2602, 2392, 1546,
	2601, 1547, 2264, 1305, 1548, 1879, 1922, 95, 1638, 1639,
	1636, 1466, 1283, 1275, 1276, 1277, 1278, 1279, 177, 2266,
	2268, 1289, 1465, 1003, 1455, 1003, 1294, 1930, 1007, 997,
	2398, 997, 1000, 1001, 1013, 961, 1011, 2931, 1008, 994,
	998, 1934, 1927, 1003, 1117, 1038, 1927, 158, 163, 160,
	166, 167, 168, 170, 172, 173, 174, 175, 98, 2592,
	1087, 1345, 2967, 176, 178, 179, 180, 188, 189, 190,
	2864, 1657, 1175, 2904, 1569, 1355, 1291, 2818, 2962, 1931,
	1074, 1539, 1175, 1929, 1302, 755, 2772, 2902, 2932, 1322,
	757, 1325, 2007, 1175, 87, 2400, 2906, 2907, 2771, 1191,
	1172, 2252, 1173, 1174, 2401, 2402, 186, 2403, 1635, 2279,
	1418, 2903, 2865, 1350, 1351, 1175, 1801, 1802, 2762, 2819,
	1427, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1200, 1199,
	1201, 1202, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1200,
	1199, 1201, 1202, 584, 1538, 1453, 2968, 1175, 1989, 1990,
	1991, 1658, 2667, 1462, 2797, 1320, 2666, 1464, 2609, 2608,
	584, 584, 1537, 584, 2006, 584, 584, 2431, 584, 584,
	584, 584, 584, 584, 2419, 804, 1197, 1198, 1200, 1199,
	1201, 1202, 2167, 584, 795, 2166, 1887, 186, 1500, 1540,
	687, 1193, 1194, 1195, 1196, 1197, 1198, 1200, 1199, 1201,
	1202, 1524, 1523, 1172, 186, 1173, 1174, 1522, 2400, 700,
	701, 702, 2395, 1172, 1512, 1173, 1174, 584, 1175, 186,
	2403, 1627, 1629, 1630, 1172, 1536, 1173, 1174, 1308, 2040,
	1557, 1514, 1506, 584, 1526, 186, 2508, 2845, 1503, 1442,
	1502, 187, 1449, 2844, 187, 1628, 1172, 187, 1173, 1174,
	1320, 186, 585, 1501, 187, 1476, 2822, 1682, 186, 2821,
	2820, 1683, 187, 1433, 1434, 1435, 2767, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 584, 187, 1172, 1329,
	1173, 1174, 1497, 2702, 1469, 1425, 1470, 1175, 1472, 1474,
	584, 584, 1478, 1480, 1482, 1484, 1486, 1525, 1460, 585,
	2700, 1320, 585, 187, 585, 1452, 1439, 1440, 186, 1438,
	1195, 1196, 1197, 1198, 1200, 1199, 1201, 1202, 2476, 188,
	189, 190, 1463, 2599, 2663, 1504, 1505, 1564, 1330, 2606,
	1572, 1510, 1511, 1461, 1175, 2598, 2422, 1576, 2421, 1578,
	1579, 1580, 1581, 1459, 1459, 2176, 1585, 1495, 1496, 1172,
	2164, 1173, 1174, 1285, 1656, 1943, 1175, 1942, 1597, 1659,
	1663, 1792, 1175, 1633, 1774, 1599, 2028, 1668, 584, 2506,
	1320, 1565, 1560, 1179, 1180, 1181, 1182, 1183, 1184, 1185,
	1177, 1535, 1527, 584, 584, 1662, 1662, 980, 120, 979,
	978, 1175, 1660, 1660, 1640, 1517, 1642, 1643, 1644, 1645,
	1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1513,
	1509, 1574, 1175, 1498, 1570, 1571, 2048, 1320, 1172, 1631,
	1173, 1174, 1175, 1508, 1641, 188, 189, 190, 1575, 1722,
	1191, 1175, 1996, 1507, 1595, 1582, 1583, 1584, 1596, 1320,
	1753, 1431, 1331, 1128, 1144, 2933, 186, 1320, 1603, 1604,
	2794, 584, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1200,
	1199, 1201, 1202, 2793, 1634, 1172, 92, 1173, 1174, 188,
	189, 190, 92, 2151, 2833, 186, 2756, 93, 584, 94,
	1779, 1722, 1780, 93, 94, 2002, 2755, 1172, 186, 1173,
	1174, 1175, 584, 1172, 2001, 1173, 1174, 186, 2650, 186,
	2109, 186, 186, 584, 2203, 1320, 584, 2380, 1333, 188,
	189, 190, 1755, 1903, 2760, 1753, 1983, 584, 2098, 2950,
	2919, 1320, 1172, 800, 1173, 1174, 800, 2181, 1757, 1758,
	1845, 1320, 1844, 95, 188, 189, 190, 1320, 1901, 2098,
	2885, 1679, 1320, 1172, 2347, 1173, 1174, 2098, 2872, 2098,
	2868, 1175, 95, 1172, 2564, 1173, 1174, 2564, 1754, 1785,
	2566, 1175, 1172, 1171, 1173, 1174, 2920, 2847, 1175, 2860,
	1320, 2117, 584, 1332, 2098, 2838, 1389, 2098, 1811, 1894,
	1895, 1896, 1664, 2117, 1898, 1900, 1902, 1755, 2525, 1670,
	1671, 2642, 2835, 1854, 1855, 1856, 1857, 2525, 1320, 584,
	2098, 2763, 2409, 1773, 1839, 584, 1462, 1175, 2322, 1462,
	1849, 1462, 1850, 1851, 1852, 1853, 1840, 1926, 770, 1822,
	2642, 1320, 1172, 1828, 1173, 1174, 2098, 2640, 1860, 1861,
	1862, 1863, 1787, 1806, 2628, 1927, 1320, 1843, 1175, 1916,
	1870, 1756, 2109, 2586, 1759, 1760, 1804, 584, 1191, 1656,
	2527, 2569, 1320, 1876, 1175, 1656, 1656, 1827, 1826, 188,
	189, 190, 1175, 1899, 1171, 1320, 2033, 1320, 1842, 1841,
	1192, 1193, 1194, 1195, 1196, 1197, 1198, 1200, 1199, 1201,
	1202, 1784, 1172, 2116, 1173, 1174, 1175, 1998, 1886, 2523,
	2411, 2410, 1172, 186, 1173, 1174, 2407, 2408, 1913, 1172,
	186, 1173, 1174, 2407, 2406, 186, 186, 2117, 1320, 186,
	2140, 186, 1871, 2564, 1866, 1867, 1377, 2033, 186, 2017,
	2514, 1885, 1998, 1320, 1889, 186, 187, 2016, 187, 1897,
	100, 187, 804, 1983, 2221, 804, 2513, 2117, 1172, 1927,
	1173, 1174, 101, 1910, 1919, 2168, 1936, 1871, 1920, 1421,
	2206, 186, 1937, 100, 1923, 99, 584, 2199, 2200, 1938,
	585, 1799, 585, 585, 94, 1940, 1941, 1324, 2057, 1172,
	101, 1173, 1174, 2141, 2140, 1764, 1175, 585, 585, 2098,
	2097, 100, 2143, 99, 1005, 1172, 1921, 1173, 1174, 1924,
	1006, 1925, 1611, 1172, 1554, 1173, 1174, 1390, 1998, 2094,
	1459, 1974, 1975, 1352, 1191, 988, 1977, 1187, 987, 1188,
	1946, 1421, 1420, 1633, 94, 1978, 2910, 1172, 1175, 1173,
	1174, 2875, 1320, 1189, 1190, 1186, 1192, 1193, 1194, 1195,
	1196, 1197, 1198, 1200, 1199, 1201, 1202, 2141, 1366, 1365,
	1175, 760, 1928, 1993, 87, 1995, 1983, 1967, 2434, 1175,
	1320, 1403, 1406, 1407, 1408, 1409, 1410, 1411, 2056, 1412,
	1413, 1414, 1415, 1416, 1391, 1392, 1393, 1394, 1375, 1376,
	1404, 1998, 1378, 1994, 1379, 1380, 1381, 1382, 1383, 1384,
	1385, 1386, 1387, 1175, 2783, 1388, 1395, 1396, 1397, 1398,
	1399, 1400, 1401, 1402, 1175, 1327, 2611, 2753, 1981, 1927,
	2055, 2714, 2626, 1175, 2623, 2604, 2517, 1172, 2516, 1173,
	1174, 1423, 1869, 2474, 1634, 186, 2436, 2432, 87, 2207,
	1175, 2916, 2054, 186, 1992, 1175, 1865, 1859, 584, 1858,
	2082, 2053, 2069, 1542, 584, 1454, 2086, 1450, 187, 1491,
	1419, 113, 585, 585, 2173, 584, 2612, 2613, 2614, 1172,
	2080, 1173, 1174, 1073, 1175, 2478, 1662, 2784, 187, 1884,
	1175, 2172, 2010, 1660, 1175, 2052, 1777, 1601, 186, 2576,
	2577, 1172, 186, 1173, 1174, 2020, 2051, 585, 2945, 2943,
	1172, 187, 1173, 1174, 2886, 2050, 585, 2150, 2113, 1492,
	1493, 1494, 585, 1175, 2926, 2857, 2802, 2582, 2026, 1175,
	37, 2579, 2049, 2428, 1755, 1405, 2099, 2043, 2173, 2133,
	2427, 1175, 2426, 2347, 1172, 2186, 1173, 1174, 1968, 1791,
	2371, 2369, 2126, 2127, 2615, 1172, 2370, 1173, 1174, 1602,
	2581, 2095, 2000, 2367, 1172, 584, 1173, 1174, 2368, 2366,
	2365, 186, 2042, 1294, 2008, 1328, 2041, 1175, 186, 2070,
	1754, 1172, 2693, 1173, 1174, 1175, 1172, 1783, 1173, 1174,
	2570, 1175, 584, 2327, 2161, 2162, 2096, 1488, 2326, 584,
	2198, 2616, 2617, 1462, 1462, 2038, 2106, 2154, 584, 2132,
	2091, 2037, 2817, 2695, 2557, 1172, 2336, 1173, 1174, 2138,
	2218, 1172, 2556, 1173, 1174, 1172, 2560, 1173, 1174, 2142,
	2217, 186, 186, 186, 186, 186, 670, 1876, 1553, 2145,
	2152, 2155, 774, 746, 1489, 1490, 1318, 1314, 186, 186,
	775, 2060, 2061, 2684, 1172, 2683, 1173, 1174, 2165, 2036,
	1172, 1315, 1173, 1174, 186, 1318, 1314, 2034, 2405, 2339,
	2341, 2174, 1172, 2030, 1173, 1174, 187, 2183, 2342, 2158,
	1315, 1035, 2177, 1656, 2182, 1034, 1781, 1782, 1317, 2175,
	1316, 1442, 2488, 92, 2178, 2179, 2172, 2216, 583, 2187,
	2188, 2189, 2246, 2682, 93, 1311, 1312, 1317, 1172, 1316,
	1173, 1174, 1674, 585, 1143, 2214, 1172, 2276, 1173, 1174,
	756, 2215, 1172, 2213, 1173, 1174, 1675, 121, 2562, 94,
	585, 585, 2272, 585, 2954, 585, 585, 2424, 585, 585,
	585, 585, 585, 585, 584, 802, 1801, 1802, 958, 1662,
	965, 1662, 1971, 585, 1662, 2834, 1660, 187, 1660, 1662,
	584, 1660, 2255, 2779, 2316, 2238, 1660, 2254, 2404, 2309,
	2310, 2311, 2312, 2130, 187, 186, 1788, 2302, 1960, 584,
	2256, 2299, 2303, 2208, 2209, 782, 783, 585, 584, 187,
	2542, 1987, 99, 2273, 2809, 584, 584, 2808, 186, 186,
	186, 186, 186, 585, 2701, 187, 2699, 2698, 2316, 2691,
	186, 2624, 1175, 2561, 2344, 186, 2559, 2290, 186, 2353,
	186, 187, 2437, 186, 186, 186, 2244, 2325, 187, 2245,
	2359, 1911, 2329, 1437, 2379, 2324, 762, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 585, 781, 92, 2315,
	100, 101, 2330, 2317, 101, 94, 1307, 2133, 2420, 93,
	585, 585, 100, 2690, 99, 100, 2550, 186, 2109, 2328,
	2094, 2331, 2304, 2305, 2306, 2307, 2308, 2286, 187, 2018,
	584, 2947, 2946, 2321, 1775, 2297, 182, 2297, 584, 2360,
	2297, 764, 2363, 186, 2029, 2297, 2458, 2381, 101, 1346,
	2382, 1337, 2372, 186, 2361, 2362, 763, 2364, 95, 100,
	121, 99, 2946, 2383, 106, 107, 103, 1564, 186, 2358,
	94, 186, 2389, 164, 2947, 2823, 2376, 2377, 2597, 772,
	88, 2489, 1, 2901, 553, 2416, 2415, 1765, 585, 1292,
	2927, 2897, 2898, 1172, 1528, 1173, 1174, 1518, 2653, 2318,
	2319, 2320, 1723, 585, 585, 2780, 2466, 2442, 2350, 2440,
	2465, 1917, 2622, 2350, 1874, 996, 146, 1837, 2457, 1876,
	2122, 2125, 2126, 2127, 2123, 2469, 2124, 2128, 1838, 2438,
	161, 2881, 162, 110, 2417, 2418, 954, 109, 2447, 999,
	1101, 1912, 2643, 2159, 2522, 1846, 2484, 2483, 2444, 2443,
	2441, 1372, 181, 584, 186, 2486, 2487, 1370, 1371, 1369,
	1374, 1373, 2019, 2528, 1605, 581, 187, 2498, 2492, 2129,
	184, 585, 1361, 2491, 1338, 1036, 2495, 2496, 543, 2497,
	2412, 1944, 2499, 549, 2501, 1215, 2503, 1600, 2323, 2146,
	2122, 2125, 2126, 2127, 2123, 187, 2124, 2128, 585, 2439,
	2576, 2577, 801, 794, 1776, 2084, 2355, 2554, 187, 2335,
	2337, 186, 585, 2101, 2340, 2333, 2816, 187, 2548, 187,
	2692, 187, 187, 585, 2543, 2544, 585, 2873, 2156, 2600,
	1334, 2009, 1676, 1816, 186, 1626, 606, 585, 2558, 2551,
	605, 603, 2087, 2110, 1178, 690, 2074, 2583, 1347, 2573,
	2563, 2121, 2119, 2118, 186, 1969, 1823, 186, 186, 186,
	165, 2578, 2574, 2580, 2893, 1818, 1814, 584, 584, 171,
	2093, 2589, 2590, 614, 607, 2629, 2630, 599, 2587, 2594,
	2464, 2224, 2475, 2226, 2157, 2466, 2471, 1156, 2588, 2465,
	2595, 2596, 585, 1310, 593, 967, 1673, 2785, 2840, 1986,
	2605, 2510, 2607, 1309, 1686, 1687, 2429, 2204, 1904, 584,
	584, 584, 584, 63, 41, 1714, 588, 2912, 1147, 585,
	788, 32, 31, 30, 29, 585, 28, 23, 22, 21,
	20, 19, 25, 18, 17, 16, 2450, 2922, 2953, 115,
	50, 47, 45, 123, 2649, 122, 2647, 2648, 48, 44,
	1076, 42, 27, 26, 15, 14, 802, 13, 802, 802,
	12, 11, 10, 9, 5, 4, 2662, 585, 35, 34,
	33, 1150, 24, 1146, 1148, 2, 186, 2446, 2445, 2658,
	2191, 1906, 156, 0, 1662, 0, 1662, 0, 0, 0,
	2659, 1660, 2687, 1660, 0, 0, 0, 0, 0, 0,
	584, 0, 584, 0, 0, 0, 0, 0, 0, 2671,
	2680, 2633, 0, 187, 2670, 2637, 2638, 2639, 0, 0,
	187, 2716, 0, 2353, 0, 187, 187, 2353, 2708, 187,
	0, 187, 2712, 2710, 2697, 756, 2696, 2688, 187, 0,
	37, 0, 2704, 2706, 0, 187, 0, 1662, 0, 0,
	0, 0, 0, 0, 1660, 0, 0, 584, 0, 0,
	0, 0, 0, 0, 0, 2761, 0, 0, 0, 0,
	186, 187, 0, 2720, 0, 0, 585, 2717, 2718, 0,
	0, 0, 1286, 584, 0, 0, 0, 0, 0, 2765,
	0, 0, 2757, 0, 0, 2759, 0, 2773, 2758, 0,
	0, 0, 0, 2782, 0, 0, 0, 2800, 0, 0,
	2774, 2775, 584, 0, 2803, 2799, 584, 584, 0, 0,
	2297, 0, 2297, 0, 157, 0, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 1298, 1299,
	1662, 0, 2813, 0, 0, 584, 0, 1660, 0, 0,
	0, 2810, 2811, 2827, 2812, 0, 2815, 0, 0, 0,
	0, 2350, 0, 0, 2353, 0, 0, 0, 2826, 0,
	2824, 0, 177, 1342, 0, 0, 2830, 0, 0, 756,
	0, 0, 802, 0, 584, 0, 0, 0, 1362, 0,
	0, 0, 2832, 0, 0, 0, 2768, 2769, 2770, 186,
	0, 158, 163, 160, 166, 167, 168, 170, 172, 173,
	174, 175, 0, 0, 584, 186, 0, 176, 178, 179,
	180, 2839, 2849, 0, 0, 0, 2843, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 2846,
	0, 0, 0, 187, 0, 0, 0, 0, 585, 0,
	0, 37, 0, 0, 585, 0, 584, 0, 0, 0,
	0, 0, 0, 0, 0, 585, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 584, 584,
	0, 0, 0, 0, 0, 0, 2871, 2866, 187, 0,
	2876, 584, 187, 0, 2874, 0, 0, 0, 2782, 2882,
	186, 584, 2880, 0, 0, 0, 37, 2889, 0, 0,
	0, 0, 0, 0, 0, 0, 2892, 0, 0, 0,
	2908, 2900, 0, 2905, 0, 0, 0, 0, 0, 0,
	2915, 0, 0, 0, 0, 0, 0, 0, 0, 2921,
	0, 584, 0, 0, 0, 0, 0, 0, 0, 2934,
	584, 0, 0, 0, 0, 585, 0, 2941, 0, 2938,
	2942, 187, 2944, 2940, 2936, 0, 0, 0, 187, 0,
	0, 0, 0, 2955, 0, 0, 0, 0, 0, 958,
	0, 0, 585, 1662, 2963, 2961, 0, 0, 0, 585,
	1660, 671, 1286, 0, 0, 0, 1468, 1468, 585, 1468,
	2969, 1468, 1468, 2800, 1477, 1468, 1468, 1468, 1468, 1468,
	2971, 2972, 2970, 0, 0, 0, 0, 1286, 1286, 958,
	2350, 187, 187, 187, 187, 187, 1662, 0, 0, 0,
	0, 0, 0, 1660, 0, 0, 0, 0, 187, 187,
	0, 0, 185, 0, 0, 539, 0, 0, 579, 0,
	0, 0, 0, 1541, 187, 539, 0, 0, 0, 0,
	0, 0, 0, 539, 0, 0, 0, 0, 0, 1561,
	0, 0, 0, 0, 0, 0, 0, 0, 769, 0,
	2722, 2724, 2723, 2733, 2734, 2735, 2736, 2737, 2738, 2739,
	636, 0, 0, 0, 787, 0, 787, 0, 0, 0,
	0, 0, 0, 0, 539, 0, 0, 0, 0, 0,
	0, 0, 802, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 802, 802, 0, 0,
	0, 0, 0, 0, 585, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	585, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 585,
	0, 0, 0, 0, 0, 0, 0, 0, 585, 0,
	0, 0, 0, 0, 0, 585, 585, 0, 187, 187,
	187, 187, 187, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 1669, 187, 0, 0, 187, 0,
	187, 1286, 0, 187, 187, 187, 0, 0, 0, 1684,
	1685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 802, 187, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	585, 0, 0, 0, 0, 0, 0, 0, 585, 0,
	0, 0, 0, 187, 1319, 0, 0, 1778, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 187, 0, 0, 1790, 2728, 2729, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1342, 0,
	0, 802, 0, 0, 0, 0, 0, 0, 0, 802,
	0, 0, 802, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 958, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 681, 0, 631, 685, 633,
	682, 683, 0, 629, 632, 684, 0, 0, 0, 0,
	0, 0, 0, 585, 187, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 965, 0,
	0, 0, 634, 635, 2721, 2725, 2726, 2727, 2730, 2731,
	2732, 2740, 2742, 659, 2741, 2743, 2744, 2745, 2748, 2749,
	2750, 2751, 2746, 2747, 2752, 958, 0, 0, 0, 0,
	0, 965, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 0, 0, 958, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 187, 187, 187,
	0, 0, 0, 0, 0, 0, 0, 585, 585, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 539, 0, 539,
	0, 0, 539, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 585,
	585, 585, 585, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 121, 0, 143,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	164, 0, 1980, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 153, 0, 0, 0, 0, 142, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	585, 0, 585, 0, 0, 0, 0, 161, 0, 162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 130, 131, 152, 151, 181,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 585, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 585, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 539,
	0, 0, 0, 0, 0, 0, 0, 0, 802, 0,
	0, 0, 585, 0, 0, 0, 585, 585, 0, 769,
	0, 0, 0, 0, 1790, 147, 128, 154, 135, 127,
	2088, 148, 149, 0, 0, 0, 0, 165, 0, 0,
	0, 2103, 539, 0, 0, 585, 171, 136, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 139, 137, 132, 133, 134, 138, 0, 0, 0,
	0, 0, 0, 129, 0, 0, 0, 0, 0, 0,
	0, 0, 140, 0, 585, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 585, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1389, 0, 0,
	0, 2180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 585, 0, 1790, 156,
	0, 0, 0, 0, 0, 2205, 0, 0, 0, 0,
	0, 0, 0, 0, 2210, 0, 0, 0, 585, 585,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 585, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 585, 0, 0, 0, 0, 0, 539, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 150, 0, 0, 0,
	0, 585, 0, 0, 0, 0, 0, 0, 0, 0,
	585, 0, 0, 0, 0, 0, 0, 1287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1377, 0, 144,
	0, 0, 145, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1287, 1287, 0, 1286, 0, 1286, 539, 0,
	1286, 0, 0, 0, 0, 1286, 0, 0, 0, 0,
	0, 157, 0, 0, 0, 1515, 0, 169, 1321, 1323,
	802, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	539, 0, 0, 0, 0, 0, 1468, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1563, 0, 0, 0,
	0, 0, 0, 0, 0, 2332, 0, 0, 1390, 177,
	0, 0, 539, 0, 802, 0, 0, 0, 1286, 539,
	0, 2357, 1468, 1286, 0, 0, 0, 0, 1586, 1587,
	539, 539, 539, 539, 539, 539, 539, 0, 158, 163,
	160, 166, 167, 168, 170, 172, 173, 174, 175, 0,
	0, 0, 0, 0, 176, 178, 179, 180, 0, 0,
	0, 0, 1403, 1406, 1407, 1408, 1409, 1410, 1411, 539,
	1412, 1413, 1414, 1415, 1416, 1391, 1392, 1393, 1394, 1375,
	1376, 1404, 0, 1378, 0, 1379, 1380, 1381, 1382, 1383,
	1384, 1385, 1386, 1387, 0, 0, 1388, 1395, 1396, 1397,
	1398, 1399, 1400, 1401, 1402, 0, 958, 0, 0, 1286,
	0, 0, 0, 0, 1790, 0, 0, 0, 0, 0,
	0, 0, 0, 787, 0, 0, 0, 0, 0, 0,
	787, 787, 0, 0, 0, 0, 1287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	787, 1563, 787, 787, 787, 787, 787, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1515, 0, 0,
	0, 0, 0, 0, 0, 0, 1405, 0, 0, 0,
	0, 0, 787, 0, 182, 0, 0, 0, 0, 2332,
	0, 0, 0, 0, 0, 2197, 769, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 121, 539,
	143, 0, 0, 0, 0, 0, 1563, 0, 539, 0,
	539, 164, 539, 1825, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 78, 39, 40,
	80, 0, 153, 1295, 0, 0, 0, 142, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 84, 0, 0,
	0, 43, 69, 70, 0, 67, 71, 0, 161, 0,
	162, 0, 0, 0, 68, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1445, 1446, 152, 151,
	181, 0, 0, 1790, 1790, 0, 0, 538, 0, 0,
	0, 0, 0, 56, 0, 0, 0, 587, 0, 786,
	0, 0, 0, 0, 87, 749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2654, 2655, 2656, 2657, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 962, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 597, 0, 0,
	1286, 1680, 1286, 0, 0, 1681, 147, 1447, 154, 0,
	1444, 0, 148, 149, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 539, 0, 0, 171, 0, 780,
	0, 539, 0, 0, 0, 0, 539, 539, 0, 0,
	539, 1286, 1972, 0, 0, 0, 2709, 0, 2711, 539,
	0, 0, 0, 0, 0, 0, 539, 0, 0, 0,
	0, 0, 0, 0, 1321, 1763, 0, 46, 49, 52,
	51, 54, 0, 66, 0, 0, 75, 72, 0, 0,
	0, 0, 539, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1786, 0, 55,
	83, 82, 0, 1790, 64, 65, 53, 697, 79, 0,
	0, 0, 73, 74, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 802,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	156, 0, 0, 0, 0, 0, 0, 0, 57, 58,
	0, 59, 60, 61, 62, 787, 0, 0, 2806, 0,
	0, 0, 2806, 2806, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 759, 0, 79, 0, 0,
	0, 1790, 0, 0, 0, 0, 0, 0, 0, 1888,
	0, 0, 0, 0, 0, 759, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 150, 0, 0,
	0, 966, 0, 0, 0, 0, 0, 0, 0, 0,
	1790, 0, 787, 787, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1563, 0, 0, 539, 0, 0, 0,
	144, 0, 0, 145, 1515, 0, 0, 0, 0, 0,
	1790, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 157, 0, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 539,
	1286, 0, 2867, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 86, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 802, 802, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 2890, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2895, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	163, 160, 166, 167, 168, 170, 172, 173, 174, 175,
	0, 0, 539, 0, 0, 176, 178, 179, 180, 2190,
	0, 0, 0, 0, 0, 0, 0, 1790, 0, 0,
	0, 0, 0, 0, 0, 0, 2895, 0, 0, 1077,
	0, 1083, 0, 0, 1085, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 539, 539, 539, 539, 539, 0, 0, 1999,
	0, 0, 0, 2003, 0, 2004, 2005, 0, 0, 539,
	539, 0, 0, 0, 2013, 0, 0, 2014, 2015, 0,
	0, 0, 0, 0, 0, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	787, 0, 0, 0, 2021, 2022, 2023, 2024, 2025, 0,
	2027, 0, 0, 0, 0, 0, 2031, 0, 2032, 0,
	0, 0, 2035, 0, 0, 0, 0, 0, 0, 0,
	2044, 2045, 2046, 2047, 0, 0, 0, 0, 0, 0,
	1287, 0, 1287, 2058, 2059, 1287, 0, 0, 1176, 0,
	1287, 2064, 2065, 2066, 2067, 2068, 0, 1786, 0, 0,
	0, 0, 0, 0, 787, 0, 0, 0, 2081, 0,
	0, 0, 0, 0, 0, 0, 1223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 539, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1287, 0, 0, 0, 0, 1287, 539,
	539, 539, 539, 539, 0, 0, 0, 0, 0, 0,
	0, 2373, 0, 0, 0, 0, 539, 0, 0, 1515,
	0, 539, 0, 0, 539, 2384, 1563, 597, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1349, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 539, 0,
	0, 0, 0, 0, 0, 0, 0, 1136, 0, 1136,
	1136, 0, 0, 0, 1287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 539, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 539, 0, 0, 0, 0, 0,
	0, 1336, 0, 0, 0, 0, 0, 0, 0, 539,
	0, 0, 539, 759, 1211, 1212, 1213, 0, 1216, 0,
	1218, 1219, 1220, 1221, 0, 1224, 1226, 1226, 0, 1226,
	1230, 1230, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239,
	1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249,
	1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259,
	1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 0,
	1270, 1271, 1272, 1273, 1274, 0, 0, 0, 0, 1230,
	1230, 1230, 1230, 1230, 2283, 0, 0, 0, 0, 0,
	0, 182, 0, 0, 0, 539, 0, 0, 0, 0,
	0, 0, 1441, 0, 2298, 0, 0, 0, 0, 1367,
	0, 0, 0, 0, 0, 121, 0, 143, 0, 0,
	0, 0, 0, 0, 0, 2313, 2314, 0, 164, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1296, 0, 0,
	0, 0, 539, 759, 0, 0, 0, 759, 0, 153,
	0, 0, 0, 759, 142, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 539, 0, 0, 0, 2356,
	0, 0, 0, 0, 0, 161, 1424, 162, 0, 0,
	1499, 0, 0, 0, 0, 539, 2374, 2375, 539, 539,
	539, 0, 0, 1445, 1446, 152, 151, 181, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1543, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1573, 0, 0, 0, 0, 0,
	0, 1577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1287, 0, 1287, 0, 0,
	0, 0, 0, 147, 1447, 154, 0, 1444, 1566, 148,
	149, 1614, 0, 0, 0, 165, 2490, 1515, 0, 0,
	0, 0, 0, 2494, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1287, 2504, 2505, 2507,
	2509, 0, 0, 0, 0, 0, 0, 2515, 0, 0,
	0, 0, 2519, 2520, 2521, 0, 0, 0, 0, 2524,
	0, 0, 0, 0, 0, 2526, 0, 0, 2530, 2531,
	2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 0, 0,
	2540, 0, 0, 0, 0, 0, 2545, 0, 0, 0,
	0, 1621, 1622, 1623, 1624, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1515, 0, 0, 0, 0, 0, 0, 0, 2567,
	2568, 0, 0, 2572, 0, 0, 0, 0, 0, 0,
	0, 0, 1666, 1667, 0, 0, 0, 156, 0, 0,
	1672, 2584, 2585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1708, 1709, 1710, 1711, 1712,
	1713, 1715, 1719, 1720, 597, 1726, 1727, 1728, 1729, 1730,
	1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740,
	1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 0, 0,
	0, 1803, 0, 0, 0, 0, 0, 0, 0, 0,
	1807, 0, 1810, 0, 0, 1614, 0, 0, 0, 0,
	0, 0, 0, 0, 150, 0, 597, 0, 0, 0,
	0, 0, 0, 1136, 2641, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1136, 1136, 0,
	1515, 0, 0, 0, 0, 0, 0, 144, 0, 0,
	145, 0, 1797, 1798, 0, 0, 539, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	1834, 0, 0, 2668, 0, 169, 0, 2669, 0, 0,
	0, 0, 0, 2673, 0, 1287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1872,
	0, 1515, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 163, 160, 166,
	167, 168, 170, 172, 173, 174, 175, 0, 0, 0,
	0, 0, 176, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1614, 0, 0, 0,
	0, 0, 0, 1955, 0, 0, 0, 0, 1965, 1966,
	0, 2778, 1970, 0, 0, 0, 0, 0, 0, 0,
	0, 1973, 0, 0, 0, 2788, 2789, 2790, 1976, 2791,
	2792, 0, 0, 0, 0, 2795, 0, 2796, 0, 2798,
	2801, 0, 0, 0, 0, 0, 2805, 0, 1817, 0,
	0, 0, 0, 0, 1979, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2831, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 966,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2851, 0, 966, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2856, 0, 0, 0, 0, 2861,
	0, 0, 0, 0, 0, 2862, 2863, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2869, 0, 0, 0, 0, 2012, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1223, 0, 0, 0, 0, 0,
	0, 0, 2911, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2917, 0, 0, 0, 2918, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 0, 0, 0, 0, 2137, 691, 698, 699, 700,
	701, 702, 692, 694, 0, 0, 0, 693, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	696, 703, 704, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1336,
	0, 0, 0, 1988, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2184, 0, 2467, 2468, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 705, 706,
	707, 708, 709, 710, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 741, 742, 743, 744, 745, 0,
	0, 0, 0, 0, 2229, 2230, 2231, 2232, 2233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1614, 2239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2062, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2079, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 759, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2114, 2115, 2251, 0,
	0, 0, 0, 0, 0, 2134, 0, 2135, 2136, 0,
	0, 0, 0, 0, 0, 0, 2274, 2275, 0, 0,
	0, 2278, 0, 0, 0, 0, 2280, 2281, 2282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2287, 2288,
	2289, 0, 0, 1726, 2291, 0, 2292, 2293, 0, 0,
	0, 2300, 2301, 0, 0, 0, 0, 0, 0, 1726,
	1726, 1726, 1726, 1726, 597, 597, 597, 597, 0, 0,
	0, 0, 0, 0, 681, 0, 0, 685, 0, 682,
	683, 0, 0, 0, 684, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2211, 0, 0, 2345,
	0, 0, 0, 0, 0, 0, 0, 87, 0, 0,
	2425, 0, 0, 691, 698, 699, 700, 701, 702, 692,
	694, 0, 0, 0, 693, 0, 2378, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2461, 696, 703, 704,
	0, 0, 0, 0, 0, 0, 2470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2482, 0, 0, 2485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2467, 2468, 2435, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 705, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2547, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1817, 0, 0, 0, 0, 0, 0, 2512,
	0, 0, 0, 0, 0, 0, 2518, 0, 0, 0,
	2354, 0, 79, 0, 0, 1817, 1817, 1817, 1817, 1817,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2134, 759, 0, 0, 0, 1817, 0, 0,
	1817, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2603, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 597, 0, 0, 2618, 0, 0,
	2619, 2620, 2621, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2083, 0, 0, 698, 699, 0, 0, 0, 0, 1661,
	0, 0, 2463, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2625, 0, 0, 2493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2646, 705, 706, 707, 708, 709, 710,
	711, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 0, 2660, 0, 2661, 0,
	0, 0, 0, 2664, 2665, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 698, 699, 0, 2672, 0, 0,
	1661, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1817, 0,
	0, 0, 0, 0, 0, 2705, 0, 0, 0, 0,
	0, 2593, 0, 0, 0, 0, 2713, 0, 0, 2715,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2719, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2754, 705, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2814, 597, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2850, 2681,
	0, 2685, 2686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2354, 0, 79, 0, 2354, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 597, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2855, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2766, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 597, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2909, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2354, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1235,
	1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245,
	1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255,
	1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266,
	1267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2841, 0, 0, 0, 0, 0, 0, 0,
	0, 358, 0, 0, 936, 921, 459, 79, 867, 939,
	836, 855, 949, 858, 861, 903, 815, 881, 376, 852,
	807, 840, 810, 847, 811, 838, 869, 249, 835, 923,
	885, 938, 331, 246, 817, 841, 390, 857, 197, 905,
	433, 233, 341, 338, 466, 261, 252, 248, 232, 287,
	348, 388, 453, 382, 945, 335, 891, 2870, 443, 361,
	0, 0, 79, 871, 927, 879, 917, 866, 904, 825,
	890, 940, 853, 900, 941, 293, 231, 196, 373, 444,
	265, 0, 0, 0, 0, 188, 189, 190, 0, 2883,
	0, 2884, 0, 0, 0, 0, 0, 0, 222, 0,
	229, 316, 325, 324, 305, 306, 308, 310, 315, 322,
	328, 849, 897, 935, 850, 899, 244, 291, 251, 243,
	463, 946, 926, 814, 878, 934, 0, 0, 214, 937,
	873, 0, 902, 0, 952, 809, 893, 0, 812, 816,
	948, 930, 844, 254, 0, 0, 0, 0, 0, 0,
	0, 870, 880, 914, 864, 0, 0, 0, 0, 0,
	0, 0, 842, 0, 889, 0, 0, 0, 821, 813,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 868, 0, 0, 0, 824, 0, 843, 915, 0,
	806, 274, 818, 362, 236, 0, 919, 929, 865, 497,
	933, 863, 862, 909, 822, 925, 856, 330, 820, 299,
	192, 210, 0, 854, 372, 414, 420, 924, 839, 848,
	234, 846, 418, 386, 481, 218, 263, 411, 392, 416,
	399, 266, 888, 907, 417, 336, 468, 406, 478, 498,
	499, 242, 366, 488, 457, 494, 511, 211, 239, 380,
	450, 484, 440, 359, 464, 465, 298, 439, 272, 195,
	334, 504, 209, 426, 226, 216, 202, 452, 476, 223,
	430, 0, 0, 513, 204, 474, 449, 355, 295, 296,
	203, 0, 410, 247, 270, 237, 375, 471, 472, 235,
	514, 213, 493, 206, 1138, 492, 368, 467, 475, 356,
	346, 205, 473, 354, 345, 301, 320, 321, 259, 281,
	404, 339, 405, 282, 364, 363, 365, 198, 485, 0,
	199, 0, 445, 486, 515, 219, 220, 221, 834, 258,
	262, 269, 271, 277, 278, 285, 332, 379, 403, 401,
	407, 920, 462, 479, 489, 496, 502, 503, 505, 506,
	507, 508, 509, 510, 367, 284, 441, 300, 337, 912,
	951, 385, 419, 224, 483, 442, 829, 833, 827, 894,
	828, 883, 884, 830, 942, 943, 944, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 916, 823, 0, 831,
	832, 0, 922, 931, 932, 534, 347, 432, 480, 302,
	314, 317, 307, 326, 0, 327, 303, 304, 309, 311,
	312, 313, 318, 319, 323, 329, 887, 191, 207, 333,
	947, 408, 267, 512, 491, 487, 808, 826, 241, 837,
	845, 0, 851, 859, 860, 872, 874, 875, 876, 877,
	895, 896, 898, 906, 908, 911, 913, 918, 928, 950,
	193, 194, 200, 208, 217, 227, 240, 255, 257, 264,
	275, 280, 283, 288, 289, 292, 297, 343, 349, 350,
	351, 352, 369, 370, 371, 374, 377, 378, 381, 383,
	384, 387, 391, 395, 396, 397, 398, 400, 402, 409,
	413, 421, 422, 423, 424, 425, 428, 429, 434, 435,
	436, 437, 438, 446, 447, 451, 469, 470, 482, 495,
	500, 427, 276, 477, 501, 0, 342, 886, 892, 344,
	260, 279, 290, 901, 490, 448, 212, 415, 268, 201,
	230, 215, 238, 253, 256, 294, 353, 360, 389, 394,
	273, 250, 228, 412, 225, 431, 454, 455, 456, 458,
	357, 245, 393, 882, 910, 340, 460, 461, 286, 358,
	0, 0, 936, 921, 459, 0, 867, 939, 836, 855,
	949, 858, 861, 903, 815, 881, 376, 852, 807, 840,
	810, 847, 811, 838, 869, 249, 835, 923, 885, 938,
	331, 246, 817, 841, 390, 857, 197, 905, 433, 233,
	341, 338, 466, 261, 252, 248, 232, 287, 348, 388,
	453, 382, 945, 335, 891, 0, 443, 361, 0, 0,
	0, 871, 927, 879, 917, 866, 904, 825, 890, 940,
	853, 900, 941, 293, 231, 196, 373, 444, 265, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 229, 316,
	325, 324, 305, 306, 308, 310, 315, 322, 328, 849,
	897, 935, 850, 899, 244, 291, 251, 243, 463, 946,
	926, 814, 878, 934, 0, 0, 214, 937, 873, 0,
	902, 0, 952, 809, 893, 0, 812, 816, 948, 930,
	844, 254, 0, 0, 0, 0, 0, 0, 0, 870,
	880, 914, 864, 0, 0, 0, 0, 0, 2385, 0,
	842, 0, 889, 0, 0, 0, 821, 813, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 868,
	0, 0, 0, 824, 0, 843, 915, 0, 806, 274,
	818, 362, 236, 0, 919, 929, 865, 497, 933, 863,
	862, 909, 822, 925, 856, 330, 820, 299, 192, 210,
	0, 854, 372, 414, 420, 924, 839, 848, 234, 846,
	418, 386, 481, 218, 263, 411, 392, 416, 399, 266,
	888, 907, 417, 336, 468, 406, 478, 498, 499, 242,
	366, 488, 457, 494, 511, 211, 239, 380, 450, 484,
	440, 359, 464, 465, 298, 439, 272, 195, 334, 504,
	209, 426, 226, 216, 202, 452, 476, 223, 430, 0,
	0, 513, 204, 474, 449, 355, 295, 296, 203, 0,
	410, 247, 270, 237, 375, 471, 472, 235, 514, 213,
	493, 206, 1138, 492, 368, 467, 475, 356, 346, 205,
	473, 354, 345, 301, 320, 321, 259, 281, 404, 339,
	405, 282, 364, 363, 365, 198, 485, 0, 199, 0,
	445, 486, 515, 219, 220, 221, 834, 258, 262, 269,
	271, 277, 278, 285, 332, 379, 403, 401, 407, 920,
	462, 479, 489, 496, 502, 503, 505, 506, 507, 508,
	509, 510, 367, 284, 441, 300, 337, 912, 951, 385,
	419, 224, 483, 442, 829, 833, 827, 894, 828, 883,
	884, 830, 942, 943, 944, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 916, 823, 0, 831, 832, 0,
	922, 931, 932, 534, 347, 432, 480, 302, 314, 317,
	307, 326, 0, 327, 303, 304, 309, 311, 312, 313,
	318, 319, 323, 329, 887, 191, 207, 333, 947, 408,
	267, 512, 491, 487, 808, 826, 241, 837, 845, 0,
	851, 859, 860, 872, 874, 875, 876, 877, 895, 896,
	898, 906, 908, 911, 913, 918, 928, 950, 193, 194,
	200, 208, 217, 227, 240, 255, 257, 264, 275, 280,
	283, 288, 289, 292, 297, 343, 349, 350, 351, 352,
	369, 370, 371, 374, 377, 378, 381, 383, 384, 387,
	391, 395, 396, 397, 398, 400, 402, 409, 413, 421,
	422, 423, 424, 425, 428, 429, 434, 435, 436, 437,
	438, 446, 447, 451, 469, 470, 482, 495, 500, 427,
	276, 477, 501, 0, 342, 886, 892, 344, 260, 279,
	290, 901, 490, 448, 212, 415, 268, 201, 230, 215,
	238, 253, 256, 294, 353, 360, 389, 394, 273, 250,
	228, 412, 225, 431, 454, 455, 456, 458, 357, 245,
	393, 882, 910, 340, 460, 461, 286, 358, 0, 0,
	936, 921, 459, 0, 867, 939, 836, 855, 949, 858,
	861, 903, 815, 881, 376, 852, 807, 840, 810, 847,
	811, 838, 869, 249, 835, 923, 885, 938, 331, 246,
	817, 841, 390, 857, 197, 905, 433, 233, 341, 338,
	466, 261, 252, 248, 232, 287, 348, 388, 453, 382,
	945, 335, 891, 0, 443, 361, 0, 0, 0, 871,
	927, 879, 917, 866, 904, 825, 890, 940, 853, 900,
	941, 293, 231, 196, 373, 444, 265, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 229, 316, 325, 324,
	305, 306, 308, 310, 315, 322, 328, 849, 897, 935,
	850, 899, 244, 291, 251, 243, 463, 946, 926, 814,
	878, 934, 0, 0, 214, 937, 873, 0, 902, 0,
	952, 809, 893, 0, 812, 816, 948, 930, 844, 254,
	0, 0, 0, 0, 0, 0, 0, 870, 880, 914,
	864, 0, 0, 0, 0, 0, 2343, 0, 842, 0,
	889, 0, 0, 0, 821, 813, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 868, 0, 0,
	0, 824, 0, 843, 915, 0, 806, 274, 818, 362,
	236, 0, 919, 929, 865, 497, 933, 863, 862, 909,
	822, 925, 856, 330, 820, 299, 192, 210, 0, 854,
	372, 414, 420, 924, 839, 848, 234, 846, 418, 386,
	481, 218, 263, 411, 392, 416, 399, 266, 888, 907,
	417, 336, 468, 406, 478, 498, 499, 242, 366, 488,
	457, 494, 511, 211, 239, 380, 450, 484, 440, 359,
	464, 465, 298, 439, 272, 195, 334, 504, 209, 426,
	226, 216, 202, 452, 476, 223, 430, 0, 0, 513,
	204, 474, 449, 355, 295, 296, 203, 0, 410, 247,
	270, 237, 375, 471, 472, 235, 514, 213, 493, 206,
	1138, 492, 368, 467, 475, 356, 346, 205, 473, 354,
	345, 301, 320, 321, 259, 281, 404, 339, 405, 282,
	364, 363, 365, 198, 485, 0, 199, 0, 445, 486,
	515, 219, 220, 221, 834, 258, 262, 269, 271, 277,
	278, 285, 332, 379, 403, 401, 407, 920, 462, 479,
	489, 496, 502, 503, 505, 506, 507, 508, 509, 510,
	367, 284, 441, 300, 337, 912, 951, 385, 419, 224,
	483, 442, 829, 833, 827, 894, 828, 883, 884, 830,
	942, 943, 944, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 916, 823, 0, 831, 832, 0, 922, 931,
	932, 534, 347, 432, 480, 302, 314, 317, 307, 326,
	0, 327, 303, 304, 309, 311, 312, 313, 318, 319,
	323, 329, 887, 191, 207, 333, 947, 408, 267, 512,
	491, 487, 808, 826, 241, 837, 845, 0, 851, 859,
	860, 872, 874, 875, 876, 877, 895, 896, 898, 906,
	908, 911, 913, 918, 928, 950, 193, 194, 200, 208,
	217, 227, 240, 255, 257, 264, 275, 280, 283, 288,
	289, 292, 297, 343, 349, 350, 351, 352, 369, 370,
	371, 374, 377, 378, 381, 383, 384, 387, 391, 395,
	396, 397, 398, 400, 402, 409, 413, 421, 422, 423,
	424, 425, 428, 429, 434, 435, 436, 437, 438, 446,
	447, 451, 469, 470, 482, 495, 500, 427, 276, 477,
	501, 0, 342, 886, 892, 344, 260, 279, 290, 901,
	490, 448, 212, 415, 268, 201, 230, 215, 238, 253,
	256, 294, 353, 360, 389, 394, 273, 250, 228, 412,
	225, 431, 454, 455, 456, 458, 357, 245, 393, 882,
	910, 340, 460, 461, 286, 358, 0, 0, 936, 921,
	459, 0, 867, 939, 836, 855, 949, 858, 861, 903,
	815, 881, 376, 852, 807, 840, 810, 847, 811, 838,
	869, 249, 835, 923, 885, 938, 331, 246, 817, 841,
	390, 857, 197, 905, 433, 233, 341, 338, 466, 261,
	252, 248, 232, 287, 348, 388, 453, 382, 945, 335,
	891, 0, 443, 361, 0, 0, 0, 871, 927, 879,
	917, 866, 904, 825, 890, 940, 853, 900, 941, 293,
	231, 196, 373, 444, 265, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 229, 316, 325, 324, 305, 306,
	308, 310, 315, 322, 328, 849, 897, 935, 850, 899,
	244, 291, 251, 243, 463, 946, 926, 814, 878, 934,
	0, 0, 214, 937, 873, 0, 902, 0, 952, 809,
	893, 0, 812, 816, 948, 930, 844, 254, 0, 0,
	0, 0, 0, 0, 0, 870, 880, 914, 864, 0,
	0, 0, 0, 0, 1805, 0, 842, 0, 889, 0,
	0, 0, 821, 813, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 868, 0, 0, 0, 824,
	0, 843, 915, 0, 806, 274, 818, 362, 236, 0,
	919, 929, 865, 497, 933, 863, 862, 909, 822, 925,
	856, 330, 820, 299, 192, 210, 0, 854, 372, 414,
	420, 924, 839, 848, 234, 846, 418, 386, 481, 218,
	263, 411, 392, 416, 399, 266, 888, 907, 417, 336,
	468, 406, 478, 498, 499, 242, 366, 488, 457, 494,
	511, 211, 239, 380, 450, 484, 440, 359, 464, 465,
	298, 439, 272, 195, 334, 504, 209, 426, 226, 216,
	202, 452, 476, 223, 430, 0, 0, 513, 204, 474,
	449, 355, 295, 296, 203, 0, 410, 247, 270, 237,
	375, 471, 472, 235, 514, 213, 493, 206, 1138, 492,
	368, 467, 475, 356, 346, 205, 473, 354, 345, 301,
	320, 321, 259, 281, 404, 339, 405, 282, 364, 363,
	365, 198, 485, 0, 199, 0, 445, 486, 515, 219,
	220, 221, 834, 258, 262, 269, 271, 277, 278, 285,
	332, 379, 403, 401, 407, 920, 462, 479, 489, 496,
	502, 503, 505, 506, 507, 508, 509, 510, 367, 284,
	441, 300, 337, 912, 951, 385, 419, 224, 483, 442,
	829, 833, 827, 894, 828, 883, 884, 830, 942, 943,
	944, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	916, 823, 0, 831, 832, 0, 922, 931, 932, 534,
	347, 432, 480, 302, 314, 317, 307, 326, 0, 327,
	303, 304, 309, 311, 312, 313, 318, 319, 323, 329,
	887, 191, 207, 333, 947, 408, 267, 512, 491, 487,
	808, 826, 241, 837, 845, 0, 851, 859, 860, 872,
	874, 875, 876, 877, 895, 896, 898, 906, 908, 911,
	913, 918, 928, 950, 193, 194, 200, 208, 217, 227,
	240, 255, 257, 264, 275, 280, 283, 288, 289, 292,
	297, 343, 349, 350, 351, 352, 369, 370, 371, 374,
	377, 378, 381, 383, 384, 387, 391, 395, 396, 397,
	398, 400, 402, 409, 413, 421, 422, 423, 424, 425,
	428, 429, 434, 435, 436, 437, 438, 446, 447, 451,
	469, 470, 482, 495, 500, 427, 276, 477, 501, 0,
	342, 886, 892, 344, 260, 279, 290, 901, 490, 448,
	212, 415, 268, 201, 230, 215, 238, 253, 256, 294,
	353, 360, 389, 394, 273, 250, 228, 412, 225, 431,
	454, 455, 456, 458, 357, 245, 393, 882, 910, 340,
	460, 461, 286, 358, 0, 0, 936, 921, 459, 0,
	867, 939, 836, 855, 949, 858, 861, 903, 815, 881,
	376, 852, 807, 840, 810, 847, 811, 838, 869, 249,
	835, 923, 885, 938, 331, 246, 817, 841, 390, 857,
	197, 905, 433, 233, 341, 338, 466, 261, 252, 248,
	232, 287, 348, 388, 453, 382, 945, 335, 891, 0,
	443, 361, 0, 0, 0, 871, 927, 879, 917, 866,
	904, 825, 890, 940, 853, 900, 941, 293, 231, 196,
	373, 444, 265, 0, 87, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 229, 316, 325, 324, 305, 306, 308, 310,
	315, 322, 328, 849, 897, 935, 850, 899, 244, 291,
	251, 243, 463, 946, 926, 814, 878, 934, 0, 0,
	214, 937, 873, 0, 902, 0, 952, 809, 893, 0,
	812, 816, 948, 930, 844, 254, 0, 0, 0, 0,
	0, 0, 0, 870, 880, 914, 864, 0, 0, 0,
	0, 0, 0, 0, 842, 0, 889, 0, 0, 0,
	821, 813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 868, 0, 0, 0, 824, 0, 843,
	915, 0, 806, 274, 818, 362, 236, 0, 919, 929,
	865, 497, 933, 863, 862, 909, 822, 925, 856, 330,
	820, 299, 192, 210, 0, 854, 372, 414, 420, 924,
	839, 848, 234, 846, 418, 386, 481, 218, 263, 411,
	392, 416, 399, 266, 888, 907, 417, 336, 468, 406,
	478, 498, 499, 242, 366, 488, 457, 494, 511, 211,
	239, 380, 450, 484, 440, 359, 464, 465, 298, 439,
	272, 195, 334, 504, 209, 426, 226, 216, 202, 452,
	476, 223, 430, 0, 0, 513, 204, 474, 449, 355,
	295, 296, 203, 0, 410, 247, 270, 237, 375, 471,
	472, 235, 514, 213, 493, 206, 1138, 492, 368, 467,
	475, 356, 346, 205, 473, 354, 345, 301, 320, 321,
	259, 281, 404, 339, 405, 282, 364, 363, 365, 198,
	485, 0, 199, 0, 445, 486, 515, 219, 220, 221,
	834, 258, 262, 269, 271, 277, 278, 285, 332, 379,
	403, 401, 407, 920, 462, 479, 489, 496, 502, 503,
	505, 506, 507, 508, 509, 510, 367, 284, 441, 300,
	337, 912, 951, 385, 419, 224, 483, 442, 829, 833,
	827, 894, 828, 883, 884, 830, 942, 943, 944, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 916, 823,
	0, 831, 832, 0, 922, 931, 932, 534, 347, 432,
	480, 302, 314, 317, 307, 326, 0, 327, 303, 304,
	309, 311, 312, 313, 318, 319, 323, 329, 887, 191,
	207, 333, 947, 408, 267, 512, 491, 487, 808, 826,
	241, 837, 845, 0, 851, 859, 860, 872, 874, 875,
	876, 877, 895, 896, 898, 906, 908, 911, 913, 918,
	928, 950, 193, 194, 200, 208, 217, 227, 240, 255,
	257, 264, 275, 280, 283, 288, 289, 292, 297, 343,
	349, 350, 351, 352, 369, 370, 371, 374, 377, 378,
	381, 383, 384, 387, 391, 395, 396, 397, 398, 400,
	402, 409, 413, 421, 422, 423, 424, 425, 428, 429,
	434, 435, 436, 437, 438, 446, 447, 451, 469, 470,
	482, 495, 500, 427, 276, 477, 501, 0, 342, 886,
	892, 344, 260, 279, 290, 901, 490, 448, 212, 415,
	268, 201, 230, 215, 238, 253, 256, 294, 353, 360,
	389, 394, 273, 250, 228, 412, 225, 431, 454, 455,
	456, 458, 357, 245, 393, 882, 910, 340, 460, 461,
	286, 358, 0, 0, 936, 921, 459, 0, 867, 939,
	836, 855, 949, 858, 861, 903, 815, 881, 376, 852,
	807, 840, 810, 847, 811, 838, 869, 249, 835, 923,
	885, 938, 331, 246, 817, 841, 390, 857, 197, 905,
	433, 233, 341, 338, 466, 261, 252, 248, 232, 287,
	348, 388, 453, 382, 945, 335, 891, 0, 443, 361,
	0, 0, 0, 871, 927, 879, 917, 866, 904, 825,
	890, 940, 853, 900, 941, 293, 231, 196, 373, 444,
	265, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	229, 316, 325, 324, 305, 306, 308, 310, 315, 322,
	328, 849, 897, 935, 850, 899, 244, 291, 251, 243,
	463, 946, 926, 814, 878, 934, 0, 0, 214, 937,
	873, 0, 902, 0, 952, 809, 893, 0, 812, 816,
	948, 930, 844, 254, 0, 0, 0, 0, 0, 0,
	0, 870, 880, 914, 864, 0, 0, 0, 0, 0,
	0, 0, 842, 0, 889, 0, 0, 0, 821, 813,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 868, 0, 0, 0, 824, 0, 843, 915, 0,
	806, 274, 818, 362, 236, 0, 919, 929, 865, 497,
	933, 863, 862, 909, 822, 925, 856, 330, 820, 299,
	192, 210, 0, 854, 372, 414, 420, 924, 839, 848,
	234, 846, 418, 386, 481, 218, 263, 411, 392, 416,
	399, 266, 888, 907, 417, 336, 468, 406, 478, 498,
	499, 242, 366, 488, 457, 494, 511, 211, 239, 380,
	450, 484, 440, 359, 464, 465, 298, 439, 272, 195,
	334, 504, 209, 426, 226, 216, 202, 452, 476, 223,
	430, 0, 0, 513, 204, 474, 449, 355, 295, 296,
	203, 0, 410, 247, 270, 237, 375, 471, 472, 235,
	514, 213, 493, 206, 1138, 492, 368, 467, 475, 356,
	346, 205, 473, 354, 345, 301, 320, 321, 259, 281,
	404, 339, 405, 282, 364, 363, 365, 198, 485, 0,
	199, 0, 445, 486, 515, 219, 220, 221, 834, 258,
	262, 269, 271, 277, 278, 285, 332, 379, 403, 401,
	407, 920, 462, 479, 489, 496, 502, 503, 505, 506,
	507, 508, 509, 510, 367, 284, 441, 300, 337, 912,
	951, 385, 419, 224, 483, 442, 829, 833, 827, 894,
	828, 883, 884, 830, 942, 943, 944, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 916, 823, 0, 831,
	832, 0, 922, 931, 932, 534, 347, 432, 480, 302,
	314, 317, 307, 326, 0, 327, 303, 304, 309, 311,
	312, 313, 318, 319, 323, 329, 887, 191, 207, 333,
	947, 408, 267, 512, 491, 487, 808, 826, 241, 837,
	845, 0, 851, 859, 860, 872, 874, 875, 876, 877,
	895, 896, 898, 906, 908, 911, 913, 918, 928, 950,
	193, 194, 200, 208, 217, 227, 240, 255, 257, 264,
	275, 280, 283, 288, 289, 292, 297, 343, 349, 350,
	351, 352, 369, 370, 371, 374, 377, 378, 381, 383,
	384, 387, 391, 395, 396, 397, 398, 400, 402, 409,
	413, 421, 422, 423, 424, 425, 428, 429, 434, 435,
	436, 437, 438, 446, 447, 451, 469, 470, 482, 495,
	500, 427, 276, 477, 501, 0, 342, 886, 892, 344,
	260, 279, 290, 901, 490, 448, 212, 415, 268, 201,
	230, 215, 238, 253, 256, 294, 353, 360, 389, 394,
	273, 250, 228, 412, 225, 431, 454, 455, 456, 458,
	357, 245, 393, 882, 910, 340, 460, 461, 286, 358,
	0, 0, 936, 921, 459, 0, 867, 939, 836, 855,
	949, 858, 861, 903, 815, 881, 376, 852, 807, 840,
	810, 847, 811, 838, 869, 249, 835, 923, 885, 938,
	331, 246, 817, 841, 390, 857, 197, 905, 433, 233,
	341, 338, 466, 261, 252, 248, 232, 287, 348, 388,
	453, 382, 945, 335, 891, 0, 443, 361, 0, 0,
	0, 871, 927, 879, 917, 866, 904, 825, 890, 940,
	853, 900, 941, 293, 231, 196, 373, 444, 265, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 229, 316,
	325, 324, 305, 306, 308, 310, 315, 322, 328, 849,
	897, 935, 850, 899, 244, 291, 251, 243, 463, 946,
	926, 814, 878, 934, 0, 0, 953, 937, 873, 0,
	902, 0, 952, 809, 893, 0, 812, 816, 948, 930,
	844, 254, 0, 0, 0, 0, 0, 0, 0, 870,
	880, 914, 864, 0, 0, 0, 0, 0, 0, 0,
	842, 0, 889, 0, 0, 0, 821, 813, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 868,
	0, 0, 0, 824, 0, 843, 915, 0, 806, 274,
	818, 362, 236, 0, 919, 929, 865, 497, 933, 863,
	862, 909, 822, 925, 856, 330, 820, 299, 192, 210,
	0, 854, 372, 414, 420, 924, 839, 848, 234, 846,
	418, 386, 481, 218, 263, 411, 392, 416, 399, 266,
	888, 907, 417, 336, 468, 406, 478, 498, 499, 242,
	366, 488, 457, 494, 511, 211, 239, 380, 450, 484,
	440, 359, 464, 465, 298, 439, 272, 195, 334, 504,
	209, 426, 226, 216, 202, 452, 476, 223, 430, 0,
	0, 513, 204, 474, 449, 355, 295, 296, 203, 0,
	410, 247, 270, 237, 375, 471, 472, 235, 514, 213,
	493, 206, 819, 492, 368, 467, 475, 356, 346, 205,
	473, 354, 345, 301, 320, 321, 259, 281, 404, 339,
	405, 282, 364, 363, 365, 198, 485, 0, 199, 0,
	445, 486, 515, 219, 220, 221, 834, 258, 262, 269,
	271, 277, 278, 285, 332, 379, 403, 401, 407, 920,
	462, 479, 489, 496, 502, 503, 505, 506, 507, 508,
	509, 510, 805, 799, 798, 300, 337, 912, 951, 385,
	419, 224, 483, 442, 829, 833, 827, 894, 828, 883,
	884, 830, 942, 943, 944, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 916, 823, 0, 831, 832, 0,
	922, 931, 932, 534, 347, 432, 480, 302, 314, 317,
	307, 326, 0, 327, 303, 304, 309, 311, 312, 313,
	318, 319, 323, 329, 887, 191, 207, 333, 947, 408,
	267, 512, 491, 487, 808, 826, 241, 837, 845, 0,
	851, 859, 860, 872, 874, 875, 876, 877, 895, 896,
	898, 906, 908, 911, 913, 918, 928, 950, 193, 194,
	200, 208, 217, 227, 240, 255, 257, 264, 275, 280,
	283, 288, 289, 292, 297, 343, 349, 350, 351, 352,
	369, 370, 371, 374, 377, 378, 381, 383, 384, 387,
	391, 395, 396, 397, 398, 400, 402, 409, 413, 421,
	422, 423, 424, 425, 428, 429, 434, 435, 436, 437,
	438, 446, 447, 451, 469, 470, 482, 495, 500, 427,
	276, 477, 501, 0, 342, 886, 892, 344, 260, 279,
	290, 901, 490, 448, 212, 415, 268, 201, 230, 215,
	238, 253, 256, 294, 353, 360, 389, 394, 273, 250,
	228, 412, 225, 431, 454, 455, 456, 458, 357, 245,
	393, 882, 910, 340, 460, 461, 286, 358, 0, 0,
	936, 921, 459, 0, 867, 939, 836, 855, 949, 858,
	861, 903, 815, 881, 376, 852, 807, 840, 810, 847,
	811, 838, 869, 249, 835, 923, 885, 938, 331, 246,
	817, 841, 390, 857, 197, 905, 433, 233, 341, 338,
	466, 261, 252, 248, 232, 287, 348, 388, 453, 382,
	945, 335, 891, 0, 443, 361, 0, 0, 0, 871,
	927, 879, 917, 866, 904, 825, 890, 940, 853, 900,
	941, 293, 231, 196, 373, 444, 265, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 229, 316, 325, 324,
	305, 306, 308, 310, 315, 322, 328, 849, 897, 935,
	850, 899, 244, 291, 251, 243, 463, 946, 926, 814,
	878, 934, 0, 0, 953, 937, 873, 0, 902, 0,
	952, 809, 893, 0, 812, 816, 948, 930, 844, 254,
	0, 0, 0, 0, 0, 0, 0, 870, 880, 914,
	864, 0, 0, 0, 0, 0, 0, 0, 842, 0,
	889, 0, 0, 0, 821, 813, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 868, 0, 0,
	0, 824, 0, 843, 915, 0, 806, 274, 818, 362,
	236, 0, 919, 929, 865, 497, 933, 863, 862, 909,
	822, 925, 856, 330, 820, 299, 192, 210, 0, 854,
	372, 414, 420, 924, 839, 848, 234, 846, 418, 386,
	481, 218, 263, 411, 392, 416, 399, 266, 888, 907,
	417, 336, 468, 406, 478, 498, 499, 242, 366, 488,
	457, 494, 511, 211, 239, 380, 450, 484, 440, 359,
	464, 465, 298, 439, 272, 195, 334, 504, 209, 426,
	226, 216, 202, 452, 1353, 223, 430, 0, 0, 513,
	204, 474, 449, 355, 295, 296, 203, 0, 410, 247,
	270, 237, 375, 471, 472, 235, 514, 213, 493, 206,
	819, 492, 368, 467, 475, 356, 346, 205, 473, 354,
	345, 301, 320, 321, 259, 281, 404, 339, 405, 282,
	364, 363, 365, 198, 485, 0, 199, 0, 445, 486,
	515, 219, 220, 221, 834, 258, 262, 269, 271, 277,
	278, 285, 332, 379, 403, 401, 407, 920, 462, 479,
	489, 496, 502, 503, 505, 506, 507, 508, 509, 510,
	805, 799, 798, 300, 337, 912, 951, 385, 419, 224,
	483, 442, 829, 833, 827, 894, 828, 883, 884, 830,
	942, 943, 944, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 916, 823, 0, 831, 832, 0, 922, 931,
	932, 534, 347, 432, 480, 302, 314, 317, 307, 326,
	0, 327, 303, 304, 309, 311, 312, 313, 318, 319,
	323, 329, 887, 191, 207, 333, 947, 408, 267, 512,
	491, 487, 808, 826, 241, 837, 845, 0, 851, 859,
	860, 872, 874, 875, 876, 877, 895, 896, 898, 906,
	908, 911, 913, 918, 928, 950, 193, 194, 200, 208,
	217, 227, 240, 255, 257, 264, 275, 280, 283, 288,
	289, 292, 297, 343, 349, 350, 351, 352, 369, 370,
	371, 374, 377, 378, 381, 383, 384, 387, 391, 395,
	396, 397, 398, 400, 402, 409, 413, 421, 422, 423,
	424, 425, 428, 429, 434, 435, 436, 437, 438, 446,
	447, 451, 469, 470, 482, 495, 500, 427, 276, 477,
	501, 0, 342, 886, 892, 344, 260, 279, 290, 901,
	490, 448, 212, 415, 268, 201, 230, 215, 238, 253,
	256, 294, 353, 360, 389, 394, 273, 250, 228, 412,
	225, 431, 454, 455, 456, 458, 357, 245, 393, 882,
	910, 340, 460, 461, 286, 358, 0, 0, 936, 921,
	459, 0, 867, 939, 836, 855, 949, 858, 861, 903,
	815, 881, 376, 852, 807, 840, 810, 847, 811, 838,
	869, 249, 835, 923, 885, 938, 331, 246, 817, 841,
	390, 857, 197, 905, 433, 233, 341, 338, 466, 261,
	252, 248, 232, 287, 348, 388, 453, 382, 945, 335,
	891, 0, 443, 361, 0, 0, 0, 871, 927, 879,
	917, 866, 904, 825, 890, 940, 853, 900, 941, 293,
	231, 196, 373, 444, 265, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 229, 316, 325, 324, 305, 306,
	308, 310, 315, 322, 328, 849, 897, 935, 850, 899,
	244, 291, 251, 243, 463, 946, 926, 814, 878, 934,
	0, 0, 953, 937, 873, 0, 902, 0, 952, 809,
	893, 0, 812, 816, 948, 930, 844, 254, 0, 0,
	0, 0, 0, 0, 0, 870, 880, 914, 864, 0,
	0, 0, 0, 0, 0, 0, 842, 0, 889, 0,
	0, 0, 821, 813, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 868, 0, 0, 0, 824,
	0, 843, 915, 0, 806, 274, 818, 362, 236, 0,
	919, 929, 865, 497, 933, 863, 862, 909, 822, 925,
	856, 330, 820, 299, 192, 210, 0, 854, 372, 414,
	420, 924, 839, 848, 234, 846, 418, 386, 481, 218,
	263, 411, 392, 416, 399, 266, 888, 907, 417, 336,
	468, 406, 478, 498, 499, 242, 366, 488, 457, 494,
	511, 211, 239, 380, 450, 484, 440, 359, 464, 465,
	298, 439, 272, 195, 334, 504, 209, 426, 226, 216,
	202, 452, 796, 223, 430, 0, 0, 513, 204, 474,
	449, 355, 295, 296, 203, 0, 410, 247, 270, 237,
	375, 471, 472, 235, 514, 213, 493, 206, 819, 492,
	368, 467, 475, 356, 346, 205, 473, 354, 345, 301,
	320, 321, 259, 281, 404, 339, 405, 282, 364, 363,
	365, 198, 485, 0, 199, 0, 445, 486, 515, 219,
	220, 221, 834, 258, 262, 269, 271, 277, 278, 285,
	332, 379, 403, 401, 407, 920, 462, 479, 489, 496,
	502, 503, 505, 506, 507, 508, 509, 510, 805, 799,
	798, 300, 337, 912, 951, 385, 419, 224, 483, 442,
	829, 833, 827, 894, 828, 883, 884, 830, 942, 943,
	944, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	916, 823, 0, 831, 832, 0, 922, 931, 932, 534,
	347, 432, 480, 302, 314, 317, 307, 326, 0, 327,
	303, 304, 309, 311, 312, 313, 318, 319, 323, 329,
	887, 191, 207, 333, 947, 408, 267, 512, 491, 487,
	808, 826, 241, 837, 845, 0, 851, 859, 860, 872,
	874, 875, 876, 877, 895, 896, 898, 906, 908, 911,
	913, 918, 928, 950, 193, 194, 200, 208, 217, 227,
	240, 255, 257, 264, 275, 280, 283, 288, 289, 292,
	297, 343, 349, 350, 351, 352, 369, 370, 371, 374,
	377, 378, 381, 383, 384, 387, 391, 395, 396, 397,
	398, 400, 402, 409, 413, 421, 422, 423, 424, 425,
	428, 429, 434, 435, 436, 437, 438, 446, 447, 451,
	469, 470, 482, 495, 500, 427, 276, 477, 501, 0,
	342, 886, 892, 344, 260, 279, 290, 901, 490, 448,
	212, 415, 268, 201, 230, 215, 238, 253, 256, 294,
	353, 360, 389, 394, 273, 250, 228, 412, 225, 431,
	454, 455, 456, 458, 357, 245, 393, 882, 910, 340,
	460, 461, 286, 358, 0, 0, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 0, 1750, 0, 615, 0, 0, 0, 249,
	620, 0, 0, 0, 331, 246, 0, 1751, 390, 0,
	197, 0, 433, 233, 341, 338, 466, 261, 252, 248,
	232, 287, 348, 388, 453, 382, 627, 335, 0, 0,
	443, 361, 0, 0, 0, 0, 0, 622, 623, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 231, 196,
	373, 444, 265, 0, 87, 0, 0, 188, 189, 190,
	691, 698, 699, 700, 701, 702, 692, 694, 0, 0,
	222, 693, 229, 638, 640, 639, 649, 650, 651, 652,
	653, 654, 655, 636, 696, 703, 704, 0, 244, 291,
	251, 243, 463, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 598, 612,
	0, 626, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	609, 610, 785, 0, 0, 0, 675, 0, 611, 0,
	0, 619, 705, 706, 707, 708, 709, 710, 711, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 727, 728, 729, 730, 731, 732,
	733, 734, 735, 736, 737, 738, 739, 740, 741, 742,
	743, 744, 745, 621, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 362, 236, 0, 674, 0,
	0, 497, 0, 0, 672, 0, 0, 0, 0, 330,
	0, 299, 192, 210, 0, 0, 372, 414, 420, 0,
	0, 0, 234, 0, 418, 386, 481, 218, 263, 411,
	392, 416, 399, 266, 0, 0, 417, 336, 468, 406,
	478, 498, 499, 242, 366, 488, 457, 494, 511, 211,
	239, 380, 450, 484, 440, 359, 464, 465, 298, 439,
	272, 195, 334, 504, 209, 426, 226, 216, 202, 452,
	476, 223, 430, 0, 0, 513, 204, 474, 449, 355,
	295, 296, 203, 0, 410, 247, 270, 237, 375, 471,
	472, 235, 514, 213, 493, 206, 0, 492, 368, 467,
	475, 356, 346, 205, 473, 354, 345, 301, 644, 645,
	259, 281, 404, 339, 405, 282, 364, 363, 365, 198,
	485, 0, 199, 0, 445, 486, 515, 219, 220, 221,
	0, 258, 262, 269, 271, 277, 278, 285, 332, 379,
	403, 401, 407, 0, 462, 479, 489, 496, 502, 503,
	505, 506, 507, 508, 509, 510, 367, 284, 441, 300,
	337, 0, 0, 385, 419, 224, 483, 442, 681, 673,
	631, 685, 633, 682, 683, 628, 629, 632, 684, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 676, 618,
	617, 0, 624, 625, 0, 634, 635, 637, 641, 642,
	643, 646, 647, 648, 656, 658, 659, 657, 660, 661,
	662, 665, 666, 667, 668, 663, 664, 669, 616, 191,
	207, 333, 0, 408, 267, 512, 491, 487, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 227, 240, 255,
	257, 264, 275, 280, 283, 288, 289, 292, 297, 343,
	349, 350, 351, 352, 369, 370, 371, 374, 377, 378,
	381, 383, 384, 387, 391, 395, 396, 397, 398, 400,
	402, 409, 413, 421, 422, 423, 424, 425, 428, 429,
	434, 435, 436, 437, 438, 446, 447, 451, 469, 470,
	482, 495, 500, 427, 276, 477, 501, 0, 342, 0,
	0, 344, 260, 279, 290, 0, 490, 448, 212, 415,
	268, 201, 230, 215, 238, 253, 256, 294, 353, 360,
	389, 394, 273, 250, 228, 412, 225, 431, 454, 455,
	456, 458, 357, 245, 393, 0, 358, 340, 460, 461,
	286, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 615, 0,
	0, 0, 249, 620, 0, 0, 0, 331, 246, 0,
	0, 390, 0, 197, 0, 433, 233, 341, 338, 466,
	261, 252, 248, 232, 287, 348, 388, 453, 382, 627,
	335, 0, 0, 443, 361, 0, 0, 0, 0, 0,
	622, 623, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 231, 196, 373, 444, 265, 0, 87, 0, 0,
	188, 189, 190, 691, 698, 699, 700, 701, 702, 692,
	694, 0, 0, 222, 693, 229, 638, 640, 639, 649,
	650, 651, 652, 653, 654, 655, 636, 696, 703, 704,
	0, 244, 291, 251, 243, 463, 0, 0, 1716, 1717,
	1718, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 598, 612, 0, 626, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 609, 610, 0, 0, 0, 0, 675,
	0, 611, 0, 0, 619, 705, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 621, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 362, 236,
	0, 674, 0, 0, 497, 0, 0, 672, 0, 0,
	0, 0, 330, 0, 299, 192, 210, 0, 0, 372,
	414, 420, 0, 0, 0, 234, 0, 418, 386, 481,
	218, 263, 411, 392, 416, 399, 266, 0, 0, 417,
	336, 468, 406, 478, 498, 499, 242, 366, 488, 457,
	494, 511, 211, 239, 380, 450, 484, 440, 359, 464,
	465, 298, 439, 272, 195, 334, 504, 209, 426, 226,
	216, 202, 452, 476, 223, 430, 0, 0, 513, 204,
	474, 449, 355, 295, 296, 203, 0, 410, 247, 270,
	237, 375, 471, 472, 235, 514, 213, 493, 206, 0,
	492, 368, 467, 475, 356, 346, 205, 473, 354, 345,
	301, 644, 645, 259, 281, 404, 339, 405, 282, 364,
	363, 365, 198, 485, 0, 199, 0, 445, 486, 515,
	219, 220, 221, 0, 258, 262, 269, 271, 277, 278,
	285, 332, 379, 403, 401, 407, 0, 462, 479, 489,
	496, 502, 503, 505, 506, 507, 508, 509, 510, 367,
	284, 441, 300, 337, 0, 0, 385, 419, 224, 483,
	442, 681, 673, 631, 685, 633, 682, 683, 628, 629,
	632, 684, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 676, 618, 617, 0, 624, 625, 0, 634, 635,
	637, 641, 642, 643, 646, 647, 648, 656, 658, 659,
	657, 660, 661, 662, 665, 666, 667, 668, 663, 664,
	669, 616, 191, 207, 333, 0, 408, 267, 512, 491,
	487, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	227, 240, 255, 257, 264, 275, 280, 283, 288, 289,
	292, 297, 343, 349, 350, 351, 352, 369, 370, 371,
	374, 377, 378, 381, 383, 384, 387, 391, 395, 396,
	397, 398, 400, 402, 409, 413, 421, 422, 423, 424,
	425, 428, 429, 434, 435, 436, 437, 438, 446, 447,
	451, 469, 470, 482, 495, 500, 427, 276, 477, 501,
	0, 342, 0, 0, 344, 260, 279, 290, 0, 490,
	448, 212, 415, 268, 201, 230, 215, 238, 253, 256,
	294, 353, 360, 389, 394, 273, 250, 228, 412, 225,
	431, 454, 455, 456, 458, 357, 245, 393, 0, 358,
	340, 460, 461, 286, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 615, 0, 0, 0, 249, 620, 0, 0, 0,
	331, 246, 0, 0, 390, 0, 197, 0, 433, 233,
	341, 338, 466, 261, 252, 248, 232, 287, 348, 388,
	453, 382, 627, 335, 0, 0, 443, 361, 0, 0,
	0, 0, 0, 622, 623, 0, 0, 0, 0, 0,
	0, 1832, 0, 293, 231, 196, 373, 444, 265, 0,
	87, 0, 0, 188, 189, 190, 691, 698, 699, 700,
	701, 702, 692, 694, 0, 0, 222, 693, 229, 638,
	640, 639, 649, 650, 651, 652, 653, 654, 655, 636,
	696, 703, 704, 1833, 244, 291, 251, 243, 463, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 598, 612, 0, 626, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 609, 610, 0, 0,
	0, 0, 675, 0, 611, 0, 0, 619, 705, 706,
	707, 708, 709, 710, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 741, 742, 743, 744, 745, 621,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 362, 236, 0, 674, 0, 0, 497, 0, 0,
	672, 0, 0, 0, 0, 330, 0, 299, 192, 210,
	0, 0, 372, 414, 420, 0, 0, 0, 234, 0,
	418, 386, 481, 218, 263, 411, 392, 416, 399, 266,
	0, 0, 417, 336, 468, 406, 478, 498, 499, 242,
	366, 488, 457, 494, 511, 211, 239, 380, 450, 484,
	440, 359, 464, 465, 298, 439, 272, 195, 334, 504,
	209, 426, 226, 216, 202, 452, 476, 223, 430, 0,
	0, 513, 204, 474, 449, 355, 295, 296, 203, 0,
	410, 247, 270, 237, 375, 471, 472, 235, 514, 213,
	493, 206, 0, 492, 368, 467, 475, 356, 346, 205,
	473, 354, 345, 301, 644, 645, 259, 281, 404, 339,
	405, 282, 364, 363, 365, 198, 485, 0, 199, 0,
	445, 486, 515, 219, 220, 221, 0, 258, 262, 269,
	271, 277, 278, 285, 332, 379, 403, 401, 407, 0,
	462, 479, 489, 496, 502, 503, 505, 506, 507, 508,
	509, 510, 367, 284, 441, 300, 337, 0, 0, 385,
	419, 224, 483, 442, 681, 673, 631, 685, 633, 682,
	683, 628, 629, 632, 684, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 676, 618, 617, 0, 624, 625,
	0, 634, 635, 637, 641, 642, 643, 646, 647, 648,
	656, 658, 659, 657, 660, 661, 662, 665, 666, 667,
	668, 663, 664, 669, 616, 191, 207, 333, 0, 408,
	267, 512, 491, 487, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 227, 240, 255, 257, 264, 275, 280,
	283, 288, 289, 292, 297, 343, 349, 350, 351, 352,
	369, 370, 371, 374, 377, 378, 381, 383, 384, 387,
	391, 395, 396, 397, 398, 400, 402, 409, 413, 421,
	422, 423, 424, 425, 428, 429, 434, 435, 436, 437,
	438, 446, 447, 451, 469, 470, 482, 495, 500, 427,
	276, 477, 501, 0, 342, 0, 0, 344, 260, 279,
	290, 0, 490, 448, 212, 415, 268, 201, 230, 215,
	238, 253, 256, 294, 353, 360, 389, 394, 273, 250,
	228, 412, 225, 431, 454, 455, 456, 458, 357, 245,
	393, 0, 0, 340, 460, 461, 286, 358, 0, 0,
	0, 78, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 615,
	0, 0, 0, 249, 620, 0, 0, 0, 331, 246,
	0, 0, 390, 0, 197, 0, 433, 233, 341, 338,
	466, 261, 252, 248, 232, 287, 348, 388, 453, 382,
	627, 335, 0, 0, 443, 361, 0, 0, 0, 0,
	0, 622, 623, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 231, 196, 373, 444, 265, 0, 87, 0,
	0, 188, 189, 190, 691, 698, 699, 700, 701, 702,
	692, 694, 0, 0, 222, 693, 229, 638, 640, 639,
	649, 650, 651, 652, 653, 654, 655, 636, 696, 703,
	704, 0, 244, 291, 251, 243, 463, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 598, 612, 0, 626, 0, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 609, 610, 0, 0, 0, 0,
	675, 0, 611, 0, 0, 619, 705, 706, 707, 708,
	709, 710, 711, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 745, 621, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 362,
	236, 0, 674, 0, 0, 497, 0, 0, 672, 0,
	0, 0, 0, 330, 0, 299, 192, 210, 0, 0,
	372, 414, 420, 0, 0, 0, 234, 0, 418, 386,
	481, 218, 263, 411, 392, 416, 399, 266, 0, 0,
	417, 336, 468, 406, 478, 498, 499, 242, 366, 488,
	457, 494, 511, 211, 239, 380, 450, 484, 440, 359,
	464, 465, 298, 439, 272, 195, 334, 504, 209, 426,
	226, 216, 202, 452, 476, 223, 430, 0, 0, 513,
	204, 474, 449, 355, 295, 296, 203, 0, 410, 247,
	270, 237, 375, 471, 472, 235, 514, 213, 493, 206,
	0, 492, 368, 467, 475, 356, 346, 205, 473, 354,
	345, 301, 644, 645, 259, 281, 404, 339, 405, 282,
	364, 363, 365, 198, 485, 0, 199, 0, 445, 486,
	515, 219, 220, 221, 0, 258, 262, 269, 271, 277,
	278, 285, 332, 379, 403, 401, 407, 0, 462, 479,
	489, 496, 502, 503, 505, 506, 507, 508, 509, 510,
	367, 284, 441, 300, 337, 0, 0, 385, 419, 224,
	483, 442, 681, 673, 631, 685, 633, 682, 683, 628,
	629, 632, 684, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 676, 618, 617, 0, 624, 625, 0, 634,
	635, 637, 641, 642, 643, 646, 647, 648, 656, 658,
	659, 657, 660, 661, 662, 665, 666, 667, 668, 663,
	664, 669, 616, 191, 207, 333, 86, 408, 267, 512,
	491, 487, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 227, 240, 255, 257, 264, 275, 280, 283, 288,
	289, 292, 297, 343, 349, 350, 351, 352, 369, 370,
	371, 374, 377, 378, 381, 383, 384, 387, 391, 395,
	396, 397, 398, 400, 402, 409, 413, 421, 422, 423,
	424, 425, 428, 429, 434, 435, 436, 437, 438, 446,
	447, 451, 469, 470, 482, 495, 500, 427, 276, 477,
	501, 0, 342, 0, 0, 344, 260, 279, 290, 0,
	490, 448, 212, 415, 268, 201, 230, 215, 238, 253,
	256, 294, 353, 360, 389, 394, 273, 250, 228, 412,
	225, 431, 454, 455, 456, 458, 357, 245, 393, 0,
	358, 340, 460, 461, 286, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 615, 0, 0, 0, 249, 620, 0, 0,
	0, 331, 246, 0, 0, 390, 0, 197, 0, 433,
	233, 341, 338, 466, 261, 252, 248, 232, 287, 348,
	388, 453, 382, 627, 335, 0, 0, 443, 361, 0,
	0, 0, 0, 0, 622, 623, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 231, 196, 373, 444, 265,
	0, 87, 0, 0, 188, 189, 190, 691, 698, 699,
	700, 701, 702, 692, 694, 0, 0, 222, 693, 229,
	638, 640, 639, 649, 650, 651, 652, 653, 654, 655,
	636, 696, 703, 704, 0, 244, 291, 251, 243, 463,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 598, 612, 0, 626, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 609, 610, 0,
	0, 0, 0, 675, 0, 611, 0, 0, 619, 705,
	706, 707, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	621, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 362, 236, 0, 674, 0, 0, 497, 0,
	0, 672, 0, 0, 0, 0, 330, 0, 299, 192,
	210, 0, 0, 372, 414, 420, 0, 0, 0, 234,
	0, 418, 386, 481, 218, 263, 411, 392, 416, 399,
	266, 2877, 0, 417, 336, 468, 406, 478, 498, 499,
	242, 366, 488, 457, 494, 511, 211, 239, 380, 450,
	484, 440, 359, 464, 465, 298, 439, 272, 195, 334,
	504, 209, 426, 226, 216, 202, 452, 476, 223, 430,
	0, 0, 513, 204, 474, 449, 355, 295, 296, 203,
	0, 410, 247, 270, 237, 375, 471, 472, 235, 514,
	213, 493, 206, 0, 492, 368, 467, 475, 356, 346,
	205, 473, 354, 345, 301, 644, 645, 259, 281, 404,
	339, 405, 282, 364, 363, 365, 198, 485, 0, 199,
	0, 445, 486, 515, 219, 220, 221, 0, 258, 262,
	269, 271, 277, 278, 285, 332, 379, 403, 401, 407,
	0, 462, 479, 489, 496, 502, 503, 505, 506, 507,
	508, 509, 510, 367, 284, 441, 300, 337, 0, 0,
	385, 419, 224, 483, 442, 681, 673, 631, 685, 633,
	682, 683, 628, 629, 632, 684, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 676, 618, 617, 0, 624,
	625, 0, 634, 635, 637, 641, 642, 643, 646, 647,
	648, 656, 658, 659, 657, 660, 661, 662, 665, 666,
	667, 668, 663, 664, 669, 616, 191, 207, 333, 0,
	408, 267, 512, 491, 487, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 227, 240, 255, 257, 264, 275,
	280, 283, 288, 289, 292, 297, 343, 349, 350, 351,
	352, 369, 370, 371, 374, 377, 378, 381, 383, 384,
	387, 391, 395, 396, 397, 398, 400, 402, 409, 413,
	421, 422, 423, 424, 425, 428, 429, 434, 435, 436,
	437, 438, 446, 447, 451, 469, 470, 482, 495, 500,
	427, 276, 477, 501, 0, 342, 0, 0, 344, 260,
	279, 290, 0, 490, 448, 212, 415, 268, 201, 230,
	215, 238, 253, 256, 294, 353, 360, 389, 394, 273,
	250, 228, 412, 225, 431, 454, 455, 456, 458, 357,
	245, 393, 0, 358, 340, 460, 461, 286, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 615, 0, 0, 0, 249,
	620, 0, 0, 0, 331, 246, 0, 0, 390, 0,
	197, 0, 433, 233, 341, 338, 466, 261, 252, 248,
	232, 287, 348, 388, 453, 382, 627, 335, 0, 0,
	443, 361, 0, 0, 0, 0, 0, 622, 623, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 231, 196,
	373, 444, 265, 0, 87, 0, 1320, 188, 189, 190,
	691, 698, 699, 700, 701, 702, 692, 694, 0, 0,
	222, 693, 229, 638, 640, 639, 649, 650, 651, 652,
	653, 654, 655, 636, 696, 703, 704, 0, 244, 291,
	251, 243, 463, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 598, 612,
	0, 626, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	609, 610, 0, 0, 0, 0, 675, 0, 611, 0,
	0, 619, 705, 706, 707, 708, 709, 710, 711, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 727, 728, 729, 730, 731, 732,
	733, 734, 735, 736, 737, 738, 739, 740, 741, 742,
	743, 744, 745, 621, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 362, 236, 0, 674, 0,
	0, 497, 0, 0, 672, 0, 0, 0, 0, 330,
	0, 299, 192, 210, 0, 0, 372, 414, 420, 0,
	0, 0, 234, 0, 418, 386, 481, 218, 263, 411,
	392, 416, 399, 266, 0, 0, 417, 336, 468, 406,
	478, 498, 499, 242, 366, 488, 457, 494, 511, 211,
	239, 380, 450, 484, 440, 359, 464, 465, 298, 439,
	272, 195, 334, 504, 209, 426, 226, 216, 202, 452,
	476, 223, 430, 0, 0, 513, 204, 474, 449, 355,
	295, 296, 203, 0, 410, 247, 270, 237, 375, 471,
	472, 235, 514, 213, 493, 206, 0, 492, 368, 467,
	475, 356, 346, 205, 473, 354, 345, 301, 644, 645,
	259, 281, 404, 339, 405, 282, 364, 363, 365, 198,
	485, 0, 199, 0, 445, 486, 515, 219, 220, 221,
	0, 258, 262, 269, 271, 277, 278, 285, 332, 379,
	403, 401, 407, 0, 462, 479, 489, 496, 502, 503,
	505, 506, 507, 508, 509, 510, 367, 284, 441, 300,
	337, 0, 0, 385, 419, 224, 483, 442, 681, 673,
	631, 685, 633, 682, 683, 628, 629, 632, 684, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 676, 618,
	617, 0, 624, 625, 0, 634, 635, 637, 641, 642,
	643, 646, 647, 648, 656, 658, 659, 657, 660, 661,
	662, 665, 666, 667, 668, 663, 664, 669, 616, 191,
	207, 333, 0, 408, 267, 512, 491, 487, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 227, 240, 255,
	257, 264, 275, 280, 283, 288, 289, 292, 297, 343,
	349, 350, 351, 352, 369, 370, 371, 374, 377, 378,
	381, 383, 384, 387, 391, 395, 396, 397, 398, 400,
	402, 409, 413, 421, 422, 423, 424, 425, 428, 429,
	434, 435, 436, 437, 438, 446, 447, 451, 469, 470,
	482, 495, 500, 427, 276, 477, 501, 0, 342, 0,
	0, 344, 260, 279, 290, 0, 490, 448, 212, 415,
	268, 201, 230, 215, 238, 253, 256, 294, 353, 360,
	389, 394, 273, 250, 228, 412, 225, 431, 454, 455,
	456, 458, 357, 245, 393, 0, 358, 340, 460, 461,
	286, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 615, 0,
	0, 0, 249, 620, 0, 0, 0, 331, 246, 0,
	0, 390, 0, 197, 0, 433, 233, 341, 338, 466,
	261, 252, 248, 232, 287, 348, 388, 453, 382, 627,
	335, 0, 0, 443, 361, 0, 0, 0, 0, 0,
	622, 623, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 231, 196, 373, 444, 265, 0, 87, 0, 0,
	188, 189, 190, 691, 698, 699, 700, 701, 702, 692,
	694, 0, 0, 222, 693, 229, 638, 640, 639, 649,
	650, 651, 652, 653, 654, 655, 636, 696, 703, 704,
	0, 244, 291, 251, 243, 463, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 598, 612, 0, 626, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 609, 610, 785, 0, 0, 0, 675,
	0, 611, 0, 0, 619, 705, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 621, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 362, 236,
	0, 674, 0, 0, 497, 0, 0, 672, 0, 0,
	0, 0, 330, 0, 299, 192, 210, 0, 0, 372,
	414, 420, 0, 0, 0, 234, 0, 418, 386, 481,
	218, 263, 411, 392, 416, 399, 266, 0, 0, 417,
	336, 468, 406, 478, 498, 499, 242, 366, 488, 457,
	494, 511, 211, 239, 380, 450, 484, 440, 359, 464,
	465, 298, 439, 272, 195, 334, 504, 209, 426, 226,
	216, 202, 452, 476, 223, 430, 0, 0, 513, 204,
	474, 449, 355, 295, 296, 203, 0, 410, 247, 270,
	237, 375, 471, 472, 235, 514, 213, 493, 206, 0,
	492, 368, 467, 475, 356, 346, 205, 473, 354, 345,
	301, 644, 645, 259, 281, 404, 339, 405, 282, 364,
	363, 365, 198, 485, 0, 199, 0, 445, 486, 515,
	219, 220, 221, 0, 258, 262, 269, 271, 277, 278,
	285, 332, 379, 403, 401, 407, 0, 462, 479, 489,
	496, 502, 503, 505, 506, 507, 508, 509, 510, 367,
	284, 441, 300, 337, 0, 0, 385, 419, 224, 483,
	442, 681, 673, 631, 685, 633, 682, 683, 628, 629,
	632, 684, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 676, 618, 617, 0, 624, 625, 0, 634, 635,
	637, 641, 642, 643, 646, 647, 648, 656, 658, 659,
	657, 660, 661, 662, 665, 666, 667, 668, 663, 664,
	669, 616, 191, 207, 333, 0, 408, 267, 512, 491,
	487, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	227, 240, 255, 257, 264, 275, 280, 283, 288, 289,
	292, 297, 343, 349, 350, 351, 352, 369, 370, 371,
	374, 377, 378, 381, 383, 384, 387, 391, 395, 396,
	397, 398, 400, 402, 409, 413, 421, 422, 423, 424,
	425, 428, 429, 434, 435, 436, 437, 438, 446, 447,
	451, 469, 470, 482, 495, 500, 427, 276, 477, 501,
	0, 342, 0, 0, 344, 260, 279, 290, 0, 490,
	448, 212, 415, 268, 201, 230, 215, 238, 253, 256,
	294, 353, 360, 389, 394, 273, 250, 228, 412, 225,
	431, 454, 455, 456, 458, 357, 245, 393, 0, 358,
	340, 460, 461, 286, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 615, 0, 0, 0, 249, 620, 0, 0, 0,
	331, 246, 0, 0, 390, 0, 197, 0, 433, 233,
	341, 338, 466, 261, 252, 248, 232, 287, 348, 388,
	453, 382, 627, 335, 0, 0, 443, 361, 0, 0,
	0, 0, 0, 622, 623, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 231, 196, 373, 444, 265, 0,
	87, 0, 0, 188, 189, 190, 691, 698, 699, 700,
	701, 702, 692, 694, 0, 0, 222, 693, 229, 638,
	640, 639, 649, 650, 651, 652, 653, 654, 655, 636,
	696, 703, 704, 0, 244, 291, 251, 243, 463, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 598, 612, 0, 626, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 609, 610, 0, 0,
	0, 0, 675, 0, 611, 0, 0, 619, 705, 706,
	707, 708, 709, 710, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 741, 742, 743, 744, 745, 621,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 362, 236, 0, 674, 0, 0, 497, 0, 0,
	672, 0, 0, 0, 0, 330, 0, 299, 192, 210,
	0, 0, 372, 414, 420, 0, 0, 0, 234, 0,
	418, 386, 481, 218, 263, 411, 392, 416, 399, 266,
	0, 0, 417, 336, 468, 406, 478, 498, 499, 242,
	366, 488, 457, 494, 511, 211, 239, 380, 450, 484,
	440, 359, 464, 465, 298, 439, 272, 195, 334, 504,
	209, 426, 226, 216, 202, 452, 476, 223, 430, 0,
	0, 513, 204, 474, 449, 355, 295, 296, 203, 0,
	410, 247, 270, 237, 375, 471, 472, 235, 514, 213,
	493, 206, 0, 492, 368, 467, 475, 356, 346, 205,
	473, 354, 345, 301, 644, 645, 259, 281, 404, 339,
	405, 282, 364, 363, 365, 198, 485, 0, 199, 0,
	445, 486, 515, 219, 220, 221, 0, 258, 262, 269,
	271, 277, 278, 285, 332, 379, 403, 401, 407, 0,
	462, 479, 489, 496, 502, 503, 505, 506, 507, 508,
	509, 510, 367, 284, 441, 300, 337, 0, 0, 385,
	419, 224, 483, 442, 681, 673, 631, 685, 633, 682,
	683, 628, 629, 632, 684, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 676, 618, 617, 0, 624, 625,
	0, 634, 635, 637, 641, 642, 643, 646, 647, 648,
	656, 658, 659, 657, 660, 661, 662, 665, 666, 667,
	668, 663, 664, 669, 616, 191, 207, 333, 0, 408,
	267, 512, 491, 487, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 227, 240, 255, 257, 264, 275, 280,
	283, 288, 289, 292, 297, 343, 349, 350, 351, 352,
	369, 370, 371, 374, 377, 378, 381, 383, 384, 387,
	391, 395, 396, 397, 398, 400, 402, 409, 413, 421,
	422, 423, 424, 425, 428, 429, 434, 435, 436, 437,
	438, 446, 447, 451, 469, 470, 482, 495, 500, 427,
	276, 477, 501, 0, 342, 0, 0, 344, 260, 279,
	290, 0, 490, 448, 212, 415, 268, 201, 230, 215,
	238, 253, 256, 294, 353, 360, 389, 394, 273, 250,
	228, 412, 225, 431, 454, 455, 456, 458, 357, 245,
	393, 0, 358, 340, 460, 461, 286, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 615, 0, 0, 0, 249, 620,
	0, 0, 0, 331, 246, 0, 0, 390, 0, 197,
	0, 433, 233, 341, 338, 466, 261, 252, 248, 232,
	287, 348, 388, 453, 382, 627, 335, 0, 0, 443,
	361, 0, 0, 0, 0, 0, 622, 623, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 231, 196, 373,
	444, 265, 0, 87, 0, 0, 188, 189, 190, 691,
	698, 699, 700, 701, 702, 692, 694, 0, 0, 222,
	693, 229, 638, 640, 639, 649, 650, 651, 652, 653,
	654, 655, 636, 696, 703, 704, 0, 244, 291, 251,
	243, 463, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 612, 0,
	626, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 609,
	610, 0, 0, 0, 0, 675, 0, 611, 0, 0,
	619, 705, 706, 707, 708, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	744, 745, 621, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 362, 236, 0, 674, 0, 0,
	497, 0, 0, 672, 0, 0, 0, 0, 330, 0,
	299, 192, 210, 0, 0, 372, 414, 420, 0, 0,
	0, 234, 0, 418, 386, 481, 218, 263, 411, 392,
	416, 399, 266, 0, 0, 417, 336, 468, 406, 478,
	498, 499, 242, 366, 488, 457, 494, 511, 211, 239,
	380, 450, 484, 440, 359, 464, 465, 298, 439, 272,
	195, 334, 504, 209, 426, 226, 216, 202, 452, 476,
	223, 430, 0, 0, 513, 204, 474, 449, 355, 295,
	296, 203, 0, 410, 247, 270, 237, 375, 471, 472,
	235, 514, 213, 493, 206, 0, 492, 368, 467, 475,
	356, 346, 205, 473, 354, 345, 301, 644, 645, 259,
	281, 404, 339, 405, 282, 364, 363, 365, 198, 485,
	0, 199, 0, 445, 486, 515, 219, 220, 221, 0,
	258, 262, 269, 271, 277, 278, 285, 332, 379, 403,
	401, 407, 0, 462, 479, 489, 496, 502, 503, 505,
	506, 507, 508, 509, 510, 367, 284, 441, 300, 337,
	0, 0, 385, 419, 224, 483, 442, 681, 673, 631,
	685, 633, 682, 683, 628, 629, 632, 684, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 676, 618, 617,
	0, 624, 625, 0, 634, 635, 637, 641, 642, 643,
	646, 647, 648, 656, 658, 659, 657, 660, 661, 662,
	665, 666, 667, 668, 663, 664, 669, 616, 191, 207,
	333, 0, 408, 267, 512, 491, 487, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 227, 240, 255, 257,
	264, 275, 280, 283, 288, 289, 292, 297, 343, 349,
	350, 351, 352, 369, 370, 371, 374, 377, 378, 381,
	383, 384, 387, 391, 395, 396, 397, 398, 400, 402,
	409, 413, 421, 422, 423, 424, 425, 428, 429, 434,
	435, 436, 437, 438, 446, 447, 451, 469, 470, 482,
	495, 500, 427, 276, 477, 501, 0, 342, 0, 0,
	344, 260, 279, 290, 0, 490, 448, 212, 415, 268,
	201, 230, 215, 238, 253, 256, 294, 353, 360, 389,
	394, 273, 250, 228, 412, 225, 431, 454, 455, 456,
	458, 357, 245, 393, 0, 358, 340, 460, 461, 286,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 331, 246, 0, 0,
	390, 0, 197, 0, 433, 233, 341, 338, 466, 261,
	252, 248, 232, 287, 348, 388, 453, 382, 0, 335,
	0, 0, 443, 361, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	231, 196, 373, 444, 265, 0, 0, 0, 0, 188,
	189, 190, 0, 698, 699, 0, 0, 0, 0, 1661,
	0, 0, 222, 0, 229, 316, 325, 324, 305, 306,
	308, 310, 315, 322, 328, 0, 0, 0, 0, 0,
	244, 291, 251, 243, 463, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 705, 706, 707, 708, 709, 710,
	711, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 362, 236, 0,
	0, 0, 0, 497, 0, 0, 0, 0, 0, 0,
	0, 330, 0, 299, 192, 210, 0, 0, 372, 414,
	420, 0, 0, 0, 234, 0, 418, 386, 481, 218,
	263, 411, 392, 416, 399, 266, 0, 0, 417, 336,
	468, 406, 478, 498, 499, 242, 366, 488, 457, 494,
	511, 211, 239, 380, 450, 484, 440, 359, 464, 465,
	298, 439, 272, 195, 334, 504, 209, 426, 226, 216,
	202, 452, 476, 223, 430, 0, 0, 513, 204, 474,
	449, 355, 295, 296, 203, 0, 410, 247, 270, 237,
	375, 471, 472, 235, 514, 213, 493, 206, 0, 492,
	368, 467, 475, 356, 346, 205, 473, 354, 345, 301,
	320, 321, 259, 281, 404, 339, 405, 282, 364, 363,
	365, 198, 485, 0, 199, 0, 445, 486, 515, 219,
	220, 221, 0, 258, 262, 269, 271, 277, 278, 285,
	332, 379, 403, 401, 407, 0, 462, 479, 489, 496,
	502, 503, 505, 506, 507, 508, 509, 510, 367, 284,
	441, 300, 337, 0, 0, 385, 419, 224, 483, 442,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 534,
	347, 432, 480, 302, 314, 317, 307, 326, 0, 327,
	303, 304, 309, 311, 312, 313, 318, 319, 323, 329,
	0, 191, 207, 333, 0, 408, 267, 512, 491, 487,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 227,
	240, 255, 257, 264, 275, 280, 283, 288, 289, 292,
	297, 343, 349, 350, 351, 352, 369, 370, 371, 374,
	377, 378, 381, 383, 384, 387, 391, 395, 396, 397,
	398, 400, 402, 409, 413, 421, 422, 423, 424, 425,
	428, 429, 434, 435, 436, 437, 438, 446, 447, 451,
	469, 470, 482, 495, 500, 427, 276, 477, 501, 0,
	342, 0, 0, 344, 260, 279, 290, 0, 490, 448,
	212, 415, 268, 201, 230, 215, 238, 253, 256, 294,
	353, 360, 389, 394, 273, 250, 228, 412, 225, 431,
	454, 455, 456, 458, 357, 245, 393, 0, 358, 340,
	460, 461, 286, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 331,
	246, 0, 0, 390, 0, 197, 0, 433, 233, 341,
	338, 466, 261, 252, 248, 232, 287, 348, 388, 453,
	382, 0, 335, 0, 0, 443, 361, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 231, 196, 373, 444, 265, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 229, 316, 325,
	324, 305, 306, 308, 310, 315, 322, 328, 0, 0,
	0, 0, 0, 244, 291, 251, 243, 463, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 1004, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	362, 236, 0, 0, 0, 1003, 497, 0, 0, 0,
	0, 0, 1000, 1001, 330, 961, 299, 192, 210, 994,
	998, 372, 414, 420, 0, 0, 0, 234, 0, 418,
	386, 481, 218, 263, 411, 392, 416, 399, 266, 0,
	0, 417, 336, 468, 406, 478, 498, 499, 242, 366,
	488, 457, 494, 511, 211, 239, 380, 450, 484, 440,
	359, 464, 465, 298, 439, 272, 195, 334, 504, 209,
	426, 226, 216, 202, 452, 476, 223, 430, 0, 0,
	513, 204, 474, 449, 355, 295, 296, 203, 0, 410,
	247, 270, 237, 375, 471, 472, 235, 514, 213, 493,
	206, 0, 492, 368, 467, 475, 356, 346, 205, 473,
	354, 345, 301, 320, 321, 259, 281, 404, 339, 405,
	282, 364, 363, 365, 198, 485, 0, 199, 0, 445,
	486, 515, 219, 220, 221, 0, 258, 262, 269, 271,
	277, 278, 285, 332, 379, 403, 401, 407, 0, 462,
	479, 489, 496, 502, 503, 505, 506, 507, 508, 509,
	510, 367, 284, 441, 300, 337, 0, 0, 385, 419,
	224, 483, 442, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 534, 347, 432, 480, 302, 314, 317, 307,
	326, 0, 327, 303, 304, 309, 311, 312, 313, 318,
	319, 323, 329, 0, 191, 207, 333, 0, 408, 267,
	512, 491, 487, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 227, 240, 255, 257, 264, 275, 280, 283,
	288, 289, 292, 297, 343, 349, 350, 351, 352, 369,
	370, 371, 374, 377, 378, 381, 383, 384, 387, 391,
	395, 396, 397, 398, 400, 402, 409, 413, 421, 422,
	423, 424, 425, 428, 429, 434, 435, 436, 437, 438,
	446, 447, 451, 469, 470, 482, 495, 500, 427, 276,
	477, 501, 0, 342, 0, 0, 344, 260, 279, 290,
	0, 490, 448, 212, 415, 268, 201, 230, 215, 238,
	253, 256, 294, 353, 360, 389, 394, 273, 250, 228,
	412, 225, 431, 454, 455, 456, 458, 357, 245, 393,
	0, 0, 340, 460, 461, 286, 358, 0, 0, 0,
	78, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 331, 246, 0,
	0, 390, 0, 197, 0, 433, 233, 341, 338, 466,
	261, 252, 248, 232, 287, 348, 388, 453, 382, 0,
	335, 0, 0, 443, 361, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 231, 196, 373, 444, 265, 0, 87, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 229, 316, 325, 324, 305,
	306, 308, 310, 315, 322, 328, 0, 0, 0, 0,
	0, 244, 291, 251, 243, 463, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 362, 236,
	0, 0, 0, 0, 497, 0, 0, 0, 0, 0,
	0, 0, 330, 0, 299, 192, 210, 0, 0, 372,
	414, 420, 0, 0, 0, 234, 0, 418, 386, 481,
	218, 263, 411, 392, 416, 399, 266, 0, 0, 417,
	336, 468, 406, 478, 498, 499, 242, 366, 488, 457,
	494, 511, 211, 239, 380, 450, 484, 440, 359, 464,
	465, 298, 439, 272, 195, 334, 504, 209, 426, 226,
	216, 202, 452, 476, 223, 430, 0, 0, 513, 204,
	474, 449, 355, 295, 296, 203, 0, 410, 247, 270,
	237, 375, 471, 472, 235, 514, 213, 493, 206, 0,
	492, 368, 467, 475, 356, 346, 205, 473, 354, 345,
	301, 320, 321, 259, 281, 404, 339, 405, 282, 364,
	363, 365, 198, 485, 0, 199, 0, 445, 486, 515,
	219, 220, 221, 0, 258, 262, 269, 271, 277, 278,
	285, 332, 379, 403, 401, 407, 0, 462, 479, 489,
	496, 502, 503, 505, 506, 507, 508, 509, 510, 367,
	284, 441, 300, 337, 0, 0, 385, 419, 224, 483,
	442, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	534, 347, 432, 480, 302, 314, 317, 307, 326, 0,
	327, 303, 304, 309, 311, 312, 313, 318, 319, 323,
	329, 0, 191, 207, 333, 86, 408, 267, 512, 491,
	487, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	1820, 0, 0, 1819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	227, 240, 255, 257, 264, 275, 280, 283, 288, 289,
	292, 297, 343, 349, 350, 351, 352, 369, 370, 371,
	374, 377, 378, 381, 383, 384, 387, 391, 395, 396,
	397, 398, 400, 402, 409, 413, 421, 422, 423, 424,
	425, 428, 429, 434, 435, 436, 437, 438, 446, 447,
	451, 469, 470, 482, 495, 500, 427, 276, 477, 501,
	0, 342, 0, 0, 344, 260, 279, 290, 0, 490,
	448, 212, 415, 268, 201, 230, 215, 238, 253, 256,
	294, 353, 360, 389, 394, 273, 250, 228, 412, 225,
	431, 454, 455, 456, 458, 357, 245, 393, 0, 1339,
	340, 460, 461, 286, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	1341, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	331, 246, 0, 0, 390, 0, 197, 0, 433, 233,
	341, 338, 466, 261, 252, 248, 232, 287, 348, 388,
	453, 382, 0, 335, 0, 0, 443, 361, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 231, 196, 373, 444, 265, 0,
	0, 0, 0, 188, 189, 190, 0, 1343, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 229, 316,
	325, 324, 305, 306, 308, 310, 315, 322, 328, 0,
	0, 0, 0, 0, 244, 291, 251, 243, 463, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	1172, 0, 1173, 1174, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 362, 236, 0, 0, 0, 0, 497, 0, 0,
	0, 0, 0, 0, 0, 330, 0, 299, 192, 210,
	0, 0, 372, 414, 420, 0, 0, 0, 234, 0,
	418, 386, 481, 218, 263, 411, 392, 416, 399, 266,
	0, 0, 417, 336, 468, 406, 478, 498, 499, 242,
	366, 488, 457, 494, 511, 211, 239, 380, 450, 484,
	440, 359, 464, 465, 298, 439, 272, 195, 334, 504,
	209, 426, 226, 216, 202, 452, 476, 223, 430, 0,
	0, 513, 204, 474, 449, 355, 295, 296, 203, 0,
	410, 247, 270, 237, 375, 471, 472, 235, 514, 213,
	493, 206, 0, 492, 368, 467, 475, 356, 346, 205,
	473, 354, 345, 301, 320, 321, 259, 281, 404, 339,
	405, 282, 364, 363, 365, 198, 485, 0, 199, 0,
	445, 486, 515, 219, 220, 221, 0, 258, 262, 269,
	271, 277, 278, 285, 332, 379, 403, 401, 407, 0,
	462, 479, 489, 496, 502, 503, 505, 506, 507, 508,
	509, 510, 367, 284, 441, 300, 337, 0, 0, 385,
	419, 224, 483, 442, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 534, 347, 432, 480, 302, 314, 317,
	307, 326, 0, 327, 303, 304, 309, 311, 312, 313,
	318, 319, 323, 329, 0, 191, 207, 333, 0, 408,
	267, 512, 491, 487, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 227, 240, 255, 257, 264, 275, 280,
	283, 288, 289, 292, 297, 343, 349, 350, 351, 352,
	369, 370, 371, 374, 377, 378, 381, 383, 384, 387,
	391, 395, 396, 397, 398, 400, 402, 409, 413, 421,
	422, 423, 424, 425, 428, 429, 434, 435, 436, 437,
	438, 446, 447, 451, 469, 470, 482, 495, 500, 427,
	276, 477, 501, 0, 342, 0, 0, 344, 260, 279,
	290, 0, 490, 448, 212, 415, 268, 201, 230, 215,
	238, 253, 256, 294, 353, 360, 389, 394, 273, 250,
	228, 412, 225, 431, 454, 455, 456, 458, 357, 245,
	393, 0, 358, 340, 460, 461, 286, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 331, 246, 0, 0, 390, 0, 197,
	0, 433, 233, 341, 338, 466, 261, 252, 248, 232,
	287, 348, 388, 453, 382, 0, 335, 0, 0, 443,
	361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 231, 196, 373,
	444, 265, 0, 0, 0, 0, 188, 189, 190, 1282,
	1285, 0, 0, 0, 0, 1281, 1284, 0, 0, 222,
	1280, 229, 316, 325, 324, 305, 306, 308, 310, 315,
	322, 328, 0, 0, 0, 0, 0, 244, 291, 251,
	243, 463, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 362, 236, 0, 0, 0, 0,
	497, 0, 0, 0, 0, 0, 0, 0, 330, 0,
	299, 192, 210, 0, 0, 372, 414, 420, 0, 0,
	0, 234, 0, 418, 386, 481, 218, 263, 411, 392,
	416, 399, 266, 0, 0, 417, 336, 468, 406, 478,
	498, 499, 242, 366, 488, 457, 494, 511, 211, 239,
	380, 450, 484, 440, 359, 464, 465, 298, 439, 272,
	195, 334, 504, 209, 426, 226, 216, 202, 452, 476,
	223, 430, 0, 0, 513, 204, 474, 449, 355, 295,
	296, 203, 0, 410, 247, 270, 237, 375, 471, 472,
	235, 514, 213, 493, 206, 0, 492, 368, 467, 475,
	356, 346, 205, 473, 354, 345, 301, 320, 321, 259,
	281, 404, 339, 405, 282, 364, 363, 365, 198, 485,
	0, 199, 0, 445, 486, 515, 219, 220, 221, 0,
	258, 262, 269, 271, 277, 278, 285, 332, 379, 403,
	401, 407, 0, 462, 479, 489, 496, 502, 503, 505,
	506, 507, 508, 509, 510, 367, 284, 441, 300, 337,
	0, 0, 385, 419, 224, 483, 442, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 534, 347, 432, 480,
	302, 314, 317, 307, 326, 0, 327, 303, 304, 309,
	311, 312, 313, 318, 319, 323, 329, 0, 191, 207,
	333, 0, 408, 267, 512, 491, 487, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 227, 240, 255, 257,
	264, 275, 280, 283, 288, 289, 292, 297, 343, 349,
	350, 351, 352, 369, 370, 371, 374, 377, 378, 381,
	383, 384, 387, 391, 395, 396, 397, 398, 400, 402,
	409, 413, 421, 422, 423, 424, 425, 428, 429, 434,
	435, 436, 437, 438, 446, 447, 451, 469, 470, 482,
	495, 500, 427, 276, 477, 501, 0, 342, 0, 0,
	344, 260, 279, 290, 0, 490, 448, 212, 415, 268,
	201, 230, 215, 238, 253, 256, 294, 353, 360, 389,
	394, 273, 250, 228, 412, 225, 431, 454, 455, 456,
	458, 357, 245, 393, 0, 0, 340, 460, 461, 286,
	358, 0, 0, 0, 78, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 331, 246, 0, 0, 390, 0, 197, 0, 433,
	233, 341, 338, 466, 261, 252, 248, 232, 287, 348,
	388, 453, 382, 0, 335, 0, 0, 443, 361, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 231, 196, 373, 444, 265,
	0, 87, 0, 1320, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 229,
	316, 325, 324, 305, 306, 308, 310, 315, 322, 328,
	0, 0, 0, 0, 0, 244, 291, 251, 243, 463,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 362, 236, 0, 0, 0, 0, 497, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 299, 192,
	210, 0, 0, 372, 414, 420, 0, 0, 0, 234,
	0, 418, 386, 481, 218, 263, 411, 392, 416, 399,
	266, 0, 0, 417, 336, 468, 406, 478, 498, 499,
	242, 366, 488, 457, 494, 511, 211, 239, 380, 450,
	484, 440, 359, 464, 465, 298, 439, 272, 195, 334,
	504, 209, 426, 226, 216, 202, 452, 476, 223, 430,
	0, 0, 513, 204, 474, 449, 355, 295, 296, 203,
	0, 410, 247, 270, 237, 375, 471, 472, 235, 514,
	213, 493, 206, 0, 492, 368, 467, 475, 356, 346,
	205, 473, 354, 345, 301, 320, 321, 259, 281, 404,
	339, 405, 282, 364, 363, 365, 198, 485, 0, 199,
	0, 445, 486, 515, 219, 220, 221, 0, 258, 262,
	269, 271, 277, 278, 285, 332, 379, 403, 401, 407,
	0, 462, 479, 489, 496, 502, 503, 505, 506, 507,
	508, 509, 510, 367, 284, 441, 300, 337, 0, 0,
	385, 419, 224, 483, 442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 534, 347, 432, 480, 302, 314,
	317, 307, 326, 0, 327, 303, 304, 309, 311, 312,
	313, 318, 319, 323, 329, 0, 191, 207, 333, 86,
	408, 267, 512, 491, 487, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 227, 240, 255, 257, 264, 275,
	280, 283, 288, 289, 292, 297, 343, 349, 350, 351,
	352, 369, 370, 371, 374, 377, 378, 381, 383, 384,
	387, 391, 395, 396, 397, 398, 400, 402, 409, 413,
	421, 422, 423, 424, 425, 428, 429, 434, 435, 436,
	437, 438, 446, 447, 451, 469, 470, 482, 495, 500,
	427, 276, 477, 501, 0, 342, 0, 0, 344, 260,
	279, 290, 0, 490, 448, 212, 415, 268, 201, 230,
	215, 238, 253, 256, 294, 353, 360, 389, 394, 273,
	250, 228, 412, 225, 431, 454, 455, 456, 458, 357,
	245, 393, 0, 358, 340, 460, 461, 286, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 331, 246, 0, 0, 390, 0,
	197, 0, 433, 233, 341, 338, 466, 261, 252, 248,
	232, 287, 348, 388, 453, 382, 0, 335, 0, 0,
	443, 361, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 231, 196,
	373, 444, 265, 0, 87, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 229, 316, 325, 324, 305, 306, 308, 310,
	315, 322, 328, 0, 0, 0, 0, 0, 244, 291,
	251, 243, 463, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 362, 236, 0, 0, 0,
	0, 497, 0, 0, 0, 0, 0, 0, 0, 330,
	0, 299, 192, 210, 0, 0, 372, 414, 420, 0,
	0, 0, 234, 0, 418, 386, 481, 218, 263, 411,
	392, 416, 399, 266, 0, 0, 417, 336, 468, 406,
	478, 498, 499, 242, 366, 488, 457, 494, 511, 211,
	239, 380, 450, 484, 440, 359, 464, 465, 298, 439,
	272, 195, 334, 504, 209, 426, 226, 216, 202, 452,
	476, 223, 430, 0, 0, 513, 204, 474, 449, 355,
	295, 296, 203, 0, 410, 247, 270, 237, 375, 471,
	472, 235, 514, 213, 493, 206, 0, 492, 368, 467,
	475, 356, 346, 205, 473, 354, 345, 301, 320, 321,
	259, 281, 404, 339, 405, 282, 364, 363, 365, 198,
	485, 0, 199, 0, 445, 486, 515, 219, 220, 221,
	0, 258, 262, 269, 271, 277, 278, 285, 332, 379,
	403, 401, 407, 0, 462, 479, 489, 496, 502, 503,
	505, 506, 507, 508, 509, 510, 367, 284, 441, 300,
	337, 0, 0, 385, 419, 224, 483, 442, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 534, 347, 432,
	480, 302, 314, 317, 307, 326, 0, 327, 303, 304,
	309, 311, 312, 313, 318, 319, 323, 329, 0, 191,
	207, 333, 0, 408, 267, 512, 491, 487, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 1820, 0, 0,
	1819, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 227, 240, 255,
	257, 264, 275, 280, 283, 288, 289, 292, 297, 343,
	349, 350, 351, 352, 369, 370, 371, 374, 377, 378,
	381, 383, 384, 387, 391, 395, 396, 397, 398, 400,
	402, 409, 413, 421, 422, 423, 424, 425, 428, 429,
	434, 435, 436, 437, 438, 446, 447, 451, 469, 470,
	482, 495, 500, 427, 276, 477, 501, 0, 342, 0,
	0, 344, 260, 279, 290, 0, 490, 448, 212, 415,
	268, 201, 230, 215, 238, 253, 256, 294, 353, 360,
	389, 394, 273, 250, 228, 412, 225, 431, 454, 455,
	456, 458, 357, 245, 393, 0, 358, 340, 460, 461,
	286, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 1772, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 331, 246, 0,
	0, 390, 0, 197, 0, 433, 233, 341, 338, 466,
	261, 252, 248, 232, 287, 348, 388, 453, 382, 0,
	335, 0, 0, 443, 361, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 231, 196, 373, 444, 265, 0, 0, 0, 0,
	188, 189, 190, 0, 1516, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 229, 316, 325, 324, 305,
	306, 308, 310, 315, 322, 328, 0, 0, 0, 0,
	0, 244, 291, 251, 243, 463, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 362, 236,
	0, 0, 0, 0, 497, 0, 0, 0, 0, 0,
	0, 0, 330, 0, 299, 192, 210, 0, 0, 372,
	414, 420, 0, 0, 0, 234, 0, 418, 386, 481,
	218, 263, 411, 392, 416, 399, 266, 0, 1770, 417,
	336, 468, 406, 478, 498, 499, 242, 366, 488, 457,
	494, 511, 211, 239, 380, 450, 484, 440, 359, 464,
	465, 298, 439, 272, 195, 334, 504, 209, 426, 226,
	216, 202, 452, 476, 223, 430, 0, 0, 513, 204,
	474, 449, 355, 295, 296, 203, 0, 410, 247, 270,
	237, 375, 471, 472, 235, 514, 213, 493, 206, 0,
	492, 368, 467, 475, 356, 346, 205, 473, 354, 345,
	301, 320, 321, 259, 281, 404, 339, 405, 282, 364,
	363, 365, 198, 485, 0, 199, 0, 445, 486, 515,
	219, 220, 221, 0, 258, 262, 269, 271, 277, 278,
	285, 332, 379, 403, 401, 407, 0, 462, 479, 489,
	496, 502, 503, 505, 506, 507, 508, 509, 510, 367,
	284, 441, 300, 337, 0, 0, 385, 419, 224, 483,
	442, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	534, 347, 432, 480, 302, 314, 317, 307, 326, 0,
	327, 303, 304, 309, 311, 312, 313, 318, 319, 323,
	329, 0, 191, 207, 333, 0, 408, 267, 512, 491,
	487, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	227, 240, 255, 257, 264, 275, 280, 283, 288, 289,
	292, 297, 343, 349, 350, 351, 352, 369, 370, 371,
	374, 377, 378, 381, 383, 384, 387, 391, 395, 396,
	397, 398, 400, 402, 409, 413, 421, 422, 423, 424,
	425, 428, 429, 434, 435, 436, 437, 438, 446, 447,
	451, 469, 470, 482, 495, 500, 427, 276, 477, 501,
	0, 342, 0, 0, 344, 260, 279, 290, 0, 490,
	448, 212, 415, 268, 201, 230, 215, 238, 253, 256,
	294, 353, 360, 389, 394, 273, 250, 228, 412, 225,
	431, 454, 455, 456, 458, 357, 245, 393, 0, 358,
	340, 460, 461, 286, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	331, 246, 0, 0, 390, 0, 197, 0, 433, 233,
	341, 338, 466, 261, 252, 248, 232, 287, 348, 388,
	453, 382, 0, 335, 0, 0, 443, 361, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 231, 196, 373, 444, 265, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 229, 316,
	325, 324, 305, 306, 308, 310, 315, 322, 328, 0,
	0, 0, 0, 0, 244, 291, 251, 243, 463, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	955, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 362, 236, 0, 0, 0, 0, 497, 0, 0,
	0, 0, 0, 0, 0, 330, 961, 299, 192, 210,
	959, 0, 372, 414, 420, 0, 0, 0, 234, 0,
	418, 386, 481, 218, 263, 411, 392, 416, 399, 266,
	0, 0, 417, 336, 468, 406, 478, 498, 499, 242,
	366, 488, 457, 494, 511, 211, 239, 380, 450, 484,
	440, 359, 464, 465, 298, 439, 272, 195, 334, 504,
	209, 426, 226, 216, 202, 452, 476, 223, 430, 0,
	0, 513, 204, 474, 449, 355, 295, 296, 203, 0,
	410, 247, 270, 237, 375, 471, 472, 235, 514, 213,
	493, 206, 0, 492, 368, 467, 475, 356, 346, 205,
	473, 354, 345, 301, 320, 321, 259, 281, 404, 339,
	405, 282, 364, 363, 365, 198, 485, 0, 199, 0,
	445, 486, 515, 219, 220, 221, 0, 258, 262, 269,
	271, 277, 278, 285, 332, 379, 403, 401, 407, 0,
	462, 479, 489, 496, 502, 503, 505, 506, 507, 508,
	509, 510, 367, 284, 441, 300, 337, 0, 0, 385,
	419, 224, 483, 442, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 534, 347, 432, 480, 302, 314, 317,
	307, 326, 0, 327, 303, 304, 309, 311, 312, 313,
	318, 319, 323, 329, 0, 191, 207, 333, 0, 408,
	267, 512, 491, 487, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 227, 240, 255, 257, 264, 275, 280,
	283, 288, 289, 292, 297, 343, 349, 350, 351, 352,
	369, 370, 371, 374, 377, 378, 381, 383, 384, 387,
	391, 395, 396, 397, 398, 400, 402, 409, 413, 421,
	422, 423, 424, 425, 428, 429, 434, 435, 436, 437,
	438, 446, 447, 451, 469, 470, 482, 495, 500, 427,
	276, 477, 501, 0, 342, 0, 0, 344, 260, 279,
	290, 0, 490, 448, 212, 415, 268, 201, 230, 215,
	238, 253, 256, 294, 353, 360, 389, 394, 273, 250,
	228, 412, 225, 431, 454, 455, 456, 458, 357, 245,
	393, 0, 358, 340, 460, 461, 286, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 1772, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 331, 246, 0, 0, 390, 0, 197,
	0, 433, 233, 341, 338, 466, 261, 252, 248, 232,
	287, 348, 388, 453, 382, 0, 335, 0, 0, 443,
	361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 231, 196, 373,
	444, 265, 0, 0, 0, 0, 188, 189, 190, 0,
	1516, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 229, 316, 325, 324, 305, 306, 308, 310, 315,
	322, 328, 0, 0, 0, 0, 0, 244, 291, 251,
	243, 463, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 362, 236, 0, 0, 0, 0,
	497, 0, 0, 0, 0, 0, 0, 0, 330, 0,
	299, 192, 210, 0, 0, 372, 414, 420, 0, 0,
	0, 234, 0, 418, 386, 481, 218, 263, 411, 392,
	416, 399, 266, 0, 0, 417, 336, 468, 406, 478,
	498, 499, 242, 366, 488, 457, 494, 511, 211, 239,
	380, 450, 484, 440, 359, 464, 465, 298, 439, 272,
	195, 334, 504, 209, 426, 226, 216, 202, 452, 476,
	223, 430, 0, 0, 513, 204, 474, 449, 355, 295,
	296, 203, 0, 410, 247, 270, 237, 375, 471, 472,
	235, 514, 213, 493, 206, 0, 492, 368, 467, 475,
	356, 346, 205, 473, 354, 345, 301, 320, 321, 259,
	281, 404, 339, 405, 282, 364, 363, 365, 198, 485,
	0, 199, 0, 445, 486, 515, 219, 220, 221, 0,
	258, 262, 269, 271, 277, 278, 285, 332, 379, 403,
	401, 407, 0, 462, 479, 489, 496, 502, 503, 505,
	506, 507, 508, 509, 510, 367, 284, 441, 300, 337,
	0, 0, 385, 419, 224, 483, 442, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 534, 347, 432, 480,
	302, 314, 317, 307, 326, 0, 327, 303, 304, 309,
	311, 312, 313, 318, 319, 323, 329, 0, 191, 207,
	333, 0, 408, 267, 512, 491, 487, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 227, 240, 255, 257,
	264, 275, 280, 283, 288, 289, 292, 297, 343, 349,
	350, 351, 352, 369, 370, 371, 374, 377, 378, 381,
	383, 384, 387, 391, 395, 396, 397, 398, 400, 402,
	409, 413, 421, 422, 423, 424, 425, 428, 429, 434,
	435, 436, 437, 438, 446, 447, 451, 469, 470, 482,
	495, 500, 427, 276, 477, 501, 0, 342, 0, 0,
	344, 260, 279, 290, 0, 490, 448, 212, 415, 268,
	201, 230, 215, 238, 253, 256, 294, 353, 360, 389,
	394, 273, 250, 228, 412, 225, 431, 454, 455, 456,
	458, 357, 245, 393, 0, 358, 340, 460, 461, 286,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 331, 246, 0, 0,
	390, 0, 197, 0, 433, 233, 341, 338, 466, 261,
	252, 248, 232, 287, 348, 388, 453, 382, 0, 335,
	0, 0, 443, 361, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	231, 196, 373, 444, 265, 0, 0, 0, 1320, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 229, 316, 325, 324, 305, 306,
	308, 310, 315, 322, 328, 0, 0, 0, 0, 0,
	244, 291, 251, 243, 463, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 362, 236, 0,
	0, 0, 0, 497, 0, 0, 0, 2807, 0, 0,
	0, 330, 0, 299, 192, 210, 0, 0, 372, 414,
	420, 0, 0, 0, 234, 0, 418, 386, 481, 218,
	263, 411, 392, 416, 399, 266, 0, 0, 417, 336,
	468, 406, 478, 498, 499, 242, 366, 488, 457, 494,
	511, 211, 239, 380, 450, 484, 440, 359, 464, 465,
	298, 439, 272, 195, 334, 504, 209, 426, 226, 216,
	202, 452, 476, 223, 430, 0, 0, 513, 204, 474,
	449, 355, 295, 296, 203, 0, 410, 247, 270, 237,
	375, 471, 472, 235, 514, 213, 493, 206, 0, 492,
	368, 467, 475, 356, 346, 205, 473, 354, 345, 301,
	320, 321, 259, 281, 404, 339, 405, 282, 364, 363,
	365, 198, 485, 0, 199, 0, 445, 486, 515, 219,
	220, 221, 0, 258, 262, 269, 271, 277, 278, 285,
	332, 379, 403, 401, 407, 0, 462, 479, 489, 496,
	502, 503, 505, 506, 507, 508, 509, 510, 367, 284,
	441, 300, 337, 0, 0, 385, 419, 224, 483, 442,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 534,
	347, 432, 480, 302, 314, 317, 307, 326, 0, 327,
	303, 304, 309, 311, 312, 313, 318, 319, 323, 329,
	0, 191, 207, 333, 0, 408, 267, 512, 491, 487,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 227,
	240, 255, 257, 264, 275, 280, 283, 288, 289, 292,
	297, 343, 349, 350, 351, 352, 369, 370, 371, 374,
	377, 378, 381, 383, 384, 387, 391, 395, 396, 397,
	398, 400, 402, 409, 413, 421, 422, 423, 424, 425,
	428, 429, 434, 435, 436, 437, 438, 446, 447, 451,
	469, 470, 482, 495, 500, 427, 276, 477, 501, 0,
	342, 0, 0, 344, 260, 279, 290, 0, 490, 448,
	212, 415, 268, 201, 230, 215, 238, 253, 256, 294,
	353, 360, 389, 394, 273, 250, 228, 412, 225, 431,
	454, 455, 456, 458, 357, 245, 393, 0, 358, 340,
	460, 461, 286, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 331,
	246, 0, 0, 390, 0, 197, 0, 433, 233, 341,
	338, 466, 261, 252, 248, 232, 287, 348, 388, 453,
	382, 0, 335, 0, 0, 443, 361, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 231, 196, 373, 444, 265, 0, 0,
	0, 0, 188, 189, 190, 0, 2104, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 229, 316, 325,
	324, 305, 306, 308, 310, 315, 322, 328, 0, 0,
	0, 0, 0, 244, 291, 251, 243, 463, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2105, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	362, 236, 0, 0, 0, 0, 497, 0, 0, 0,
	0, 0, 0, 0, 330, 0, 299, 192, 210, 0,
	0, 372, 414, 420, 0, 0, 0, 234, 0, 418,
	386, 481, 218, 263, 411, 392, 416, 399, 266, 0,
	0, 417, 336, 468, 406, 478, 498, 499, 242, 366,
	488, 457, 494, 511, 211, 239, 380, 450, 484, 440,
	359, 464, 465, 298, 439, 272, 195, 334, 504, 209,
	426, 226, 216, 202, 452, 476, 223, 430, 0, 0,
	513, 204, 474, 449, 355, 295, 296, 203, 0, 410,
	247, 270, 237, 375, 471, 472, 235, 514, 213, 493,
	206, 0, 492, 368, 467, 475, 356, 346, 205, 473,
	354, 345, 301, 320, 321, 259, 281, 404, 339, 405,
	282, 364, 363, 365, 198, 485, 0, 199, 0, 445,
	486, 515, 219, 220, 221, 0, 258, 262, 269, 271,
	277, 278, 285, 332, 379, 403, 401, 407, 0, 462,
	479, 489, 496, 502, 503, 505, 506, 507, 508, 509,
	510, 367, 284, 441, 300, 337, 0, 0, 385, 419,
	224, 483, 442, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 534, 347, 432, 480, 302, 314, 317, 307,
	326, 0, 327, 303, 304, 309, 311, 312, 313, 318,
	319, 323, 329, 0, 191, 207, 333, 0, 408, 267,
	512, 491, 487, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 227, 240, 255, 257, 264, 275, 280, 283,
	288, 289, 292, 297, 343, 349, 350, 351, 352, 369,
	370, 371, 374, 377, 378, 381, 383, 384, 387, 391,
	395, 396, 397, 398, 400, 402, 409, 413, 421, 422,
	423, 424, 425, 428, 429, 434, 435, 436, 437, 438,
	446, 447, 451, 469, 470, 482, 495, 500, 427, 276,
	477, 501, 0, 342, 0, 0, 344, 260, 279, 290,
	0, 490, 448, 212, 415, 268, 201, 230, 215, 238,
	253, 256, 294, 353, 360, 389, 394, 273, 250, 228,
	412, 225, 431, 454, 455, 456, 458, 357, 245, 393,
	0, 358, 340, 460, 461, 286, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 331, 246, 0, 0, 390, 0, 197, 0,
	433, 233, 341, 338, 466, 261, 252, 248, 232, 287,
	348, 388, 453, 382, 0, 335, 0, 0, 443, 361,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 231, 196, 373, 444,
	265, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 2089, 0, 0, 0, 2090, 0, 0, 222, 0,
	229, 316, 325, 324, 305, 306, 308, 310, 315, 322,
	328, 0, 0, 0, 0, 0, 244, 291, 251, 243,
	463, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 362, 236, 0, 0, 0, 0, 497,
	0, 0, 0, 0, 0, 0, 0, 330, 0, 299,
	192, 210, 0, 0, 372, 414, 420, 0, 0, 0,
	234, 0, 418, 386, 481, 218, 263, 411, 392, 416,
	399, 266, 0, 0, 417, 336, 468, 406, 478, 498,
	499, 242, 366, 488, 457, 494, 511, 211, 239, 380,
	450, 484, 440, 359, 464, 465, 298, 439, 272, 195,
	334, 504, 209, 426, 226, 216, 202, 452, 476, 223,
	430, 0, 0, 513, 204, 474, 449, 355, 295, 296,
	203, 0, 410, 247, 270, 237, 375, 471, 472, 235,
	514, 213, 493, 206, 0, 492, 368, 467, 475, 356,
	346, 205, 473, 354, 345, 301, 320, 321, 259, 281,
	404, 339, 405, 282, 364, 363, 365, 198, 485, 0,
	199, 0, 445, 486, 515, 219, 220, 221, 0, 258,
	262, 269, 271, 277, 278, 285, 332, 379, 403, 401,
	407, 0, 462, 479, 489, 496, 502, 503, 505, 506,
	507, 508, 509, 510, 367, 284, 441, 300, 337, 0,
	0, 385, 419, 224, 483, 442, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 534, 347, 432, 480, 302,
	314, 317, 307, 326, 0, 327, 303, 304, 309, 311,
	312, 313, 318, 319, 323, 329, 0, 191, 207, 333,
	0, 408, 267, 512, 491, 487, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 227, 240, 255, 257, 264,
	275, 280, 283, 288, 289, 292, 297, 343, 349, 350,
	351, 352, 369, 370, 371, 374, 377, 378, 381, 383,
	384, 387, 391, 395, 396, 397, 398, 400, 402, 409,
	413, 421, 422, 423, 424, 425, 428, 429, 434, 435,
	436, 437, 438, 446, 447, 451, 469, 470, 482, 495,
	500, 427, 276, 477, 501, 0, 342, 0, 0, 344,
	260, 279, 290, 0, 490, 448, 212, 415, 268, 201,
	230, 215, 238, 253, 256, 294, 353, 360, 389, 394,
	273, 250, 228, 412, 225, 431, 454, 455, 456, 458,
	357, 245, 393, 0, 358, 340, 460, 461, 286, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 1364, 0, 0, 0, 331, 246, 0, 0, 390,
	0, 197, 0, 433, 233, 341, 338, 466, 261, 252,
	248, 232, 287, 348, 388, 453, 382, 0, 335, 0,
	0, 443, 361, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 231,
	196, 373, 444, 265, 0, 0, 0, 0, 188, 189,
	190, 0, 1363, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 229, 316, 325, 324, 305, 306, 308,
	310, 315, 322, 328, 0, 0, 0, 0, 0, 244,
	291, 251, 243, 463, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 362, 236, 0, 0,
	0, 0, 497, 0, 0, 0, 0, 0, 0, 0,
	330, 0, 299, 192, 210, 0, 0, 372, 414, 420,
	0, 0, 0, 234, 0, 418, 386, 481, 218, 263,
	411, 392, 416, 399, 266, 0, 0, 417, 336, 468,
	406, 478, 498, 499, 242, 366, 488, 457, 494, 511,
	211, 239, 380, 450, 484, 440, 359, 464, 465, 298,
	439, 272, 195, 334, 504, 209, 426, 226, 216, 202,
	452, 476, 223, 430, 0, 0, 513, 204, 474, 449,
	355, 295, 296, 203, 0, 410, 247, 270, 237, 375,
	471, 472, 235, 514, 213, 493, 206, 0, 492, 368,
	467, 475, 356, 346, 205, 473, 354, 345, 301, 320,
	321, 259, 281, 404, 339, 405, 282, 364, 363, 365,
	198, 485, 0, 199, 0, 445, 486, 515, 219, 220,
	221, 0, 258, 262, 269, 271, 277, 278, 285, 332,
	379, 403, 401, 407, 0, 462, 479, 489, 496, 502,
	503, 505, 506, 507, 508, 509, 510, 367, 284, 441,
	300, 337, 0, 0, 385, 419, 224, 483, 442, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 534, 347,
	432, 480, 302, 314, 317, 307, 326, 0, 327, 303,
	304, 309, 311, 312, 313, 318, 319, 323, 329, 0,
	191, 207, 333, 0, 408, 267, 512, 491, 487, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 227, 240,
	255, 257, 264, 275, 280, 283, 288, 289, 292, 297,
	343, 349, 350, 351, 352, 369, 370, 371, 374, 377,
	378, 381, 383, 384, 387, 391, 395, 396, 397, 398,
	400, 402, 409, 413, 421, 422, 423, 424, 425, 428,
	429, 434, 435, 436, 437, 438, 446, 447, 451, 469,
	470, 482, 495, 500, 427, 276, 477, 501, 0, 342,
	0, 0, 344, 260, 279, 290, 0, 490, 448, 212,
	415, 268, 201, 230, 215, 238, 253, 256, 294, 353,
	360, 389, 394, 273, 250, 228, 412, 225, 431, 454,
	455, 456, 458, 357, 245, 393, 0, 358, 340, 460,
	461, 286, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 331, 246,
	0, 0, 390, 0, 197, 0, 433, 233, 341, 338,
	466, 261, 252, 248, 232, 287, 348, 388, 453, 382,
	0, 335, 0, 0, 443, 361, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 231, 196, 373, 444, 265, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 229, 316, 325, 324,
	305, 306, 308, 310, 315, 322, 328, 0, 0, 0,
	0, 0, 244, 291, 251, 243, 463, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 362,
	236, 0, 0, 0, 0, 497, 0, 0, 0, 2891,
	0, 0, 0, 330, 0, 299, 192, 210, 0, 0,
	372, 414, 420, 0, 0, 0, 234, 0, 418, 386,
	481, 218, 263, 411, 392, 416, 399, 266, 0, 0,
	417, 336, 468, 406, 478, 498, 499, 242, 366, 488,
	457, 494, 511, 211, 239, 380, 450, 484, 440, 359,
	464, 465, 298, 439, 272, 195, 334, 504, 209, 426,
	226, 216, 202, 452, 476, 223, 430, 0, 0, 513,
	204, 474, 449, 355, 295, 296, 203, 0, 410, 247,
	270, 237, 375, 471, 472, 235, 514, 213, 493, 206,
	0, 492, 368, 467, 475, 356, 346, 205, 473, 354,
	345, 301, 320, 321, 259, 281, 404, 339, 405, 282,
	364, 363, 365, 198, 485, 0, 199, 0, 445, 486,
	515, 219, 220, 221, 0, 258, 262, 269, 271, 277,
	278, 285, 332, 379, 403, 401, 407, 0, 462, 479,
	489, 496, 502, 503, 505, 506, 507, 508, 509, 510,
	367, 284, 441, 300, 337, 0, 0, 385, 419, 224,
	483, 442, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 534, 347, 432, 480, 302, 314, 317, 307, 326,
	0, 327, 303, 304, 309, 311, 312, 313, 318, 319,
	323, 329, 0, 191, 207, 333, 0, 408, 267, 512,
	491, 487, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 227, 240, 255, 257, 264, 275, 280, 283, 288,
	289, 292, 297, 343, 349, 350, 351, 352, 369, 370,
	371, 374, 377, 378, 381, 383, 384, 387, 391, 395,
	396, 397, 398, 400, 402, 409, 413, 421, 422, 423,
	424, 425, 428, 429, 434, 435, 436, 437, 438, 446,
	447, 451, 469, 470, 482, 495, 500, 427, 276, 477,
	501, 0, 342, 0, 0, 344, 260, 279, 290, 0,
	490, 448, 212, 415, 268, 201, 230, 215, 238, 253,
	256, 294, 353, 360, 389, 394, 273, 250, 228, 412,
	225, 431, 454, 455, 456, 458, 357, 245, 393, 0,
	358, 340, 460, 461, 286, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 331, 246, 0, 0, 390, 0, 197, 0, 433,
	233, 341, 338, 466, 261, 252, 248, 232, 287, 348,
	388, 453, 382, 0, 335, 0, 0, 443, 361, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 231, 196, 373, 444, 265,
	0, 0, 0, 0, 188, 189, 190, 0, 1516, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 229,
	316, 325, 324, 305, 306, 308, 310, 315, 322, 328,
	0, 0, 0, 0, 0, 244, 291, 251, 243, 463,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 362, 236, 0, 0, 0, 0, 497, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 299, 192,
	210, 0, 0, 372, 414, 420, 0, 0, 0, 234,
	0, 418, 386, 481, 218, 263, 411, 392, 416, 399,
	266, 0, 0, 417, 336, 468, 406, 478, 498, 499,
	242, 366, 488, 457, 494, 511, 211, 239, 380, 450,
	484, 440, 359, 464, 465, 298, 439, 272, 195, 334,
	504, 209, 426, 226, 216, 202, 452, 476, 223, 430,
	0, 0, 513, 204, 474, 449, 355, 295, 296, 203,
	0, 410, 247, 270, 237, 375, 471, 472, 235, 514,
	213, 493, 206, 0, 492, 368, 467, 475, 356, 346,
	205, 473, 354, 345, 301, 320, 321, 259, 281, 404,
	339, 405, 282, 364, 363, 365, 198, 485, 0, 199,
	0, 445, 486, 515, 219, 220, 221, 0, 258, 262,
	269, 271, 277, 278, 285, 332, 379, 403, 401, 407,
	0, 462, 479, 489, 496, 502, 503, 505, 506, 507,
	508, 509, 510, 367, 284, 441, 300, 337, 0, 0,
	385, 419, 224, 483, 442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 534, 347, 432, 480, 302, 314,
	317, 307, 326, 0, 327, 303, 304, 309, 311, 312,
	313, 318, 319, 323, 329, 0, 191, 207, 333, 0,
	408, 267, 512, 491, 487, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 227, 240, 255, 257, 264, 275,
	280, 283, 288, 289, 292, 297, 343, 349, 350, 351,
	352, 369, 370, 371, 374, 377, 378, 381, 383, 384,
	387, 391, 395, 396, 397, 398, 400, 402, 409, 413,
	421, 422, 423, 424, 425, 428, 429, 434, 435, 436,
	437, 438, 446, 447, 451, 469, 470, 482, 495, 500,
	427, 276, 477, 501, 0, 342, 0, 0, 344, 260,
	279, 290, 0, 490, 448, 212, 415, 268, 201, 230,
	215, 238, 253, 256, 294, 353, 360, 389, 394, 273,
	250, 228, 412, 225, 431, 454, 455, 456, 458, 357,
	245, 393, 0, 358, 340, 460, 461, 286, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 331, 246, 0, 0, 390, 0,
	197, 0, 433, 233, 341, 338, 466, 261, 252, 248,
	232, 287, 348, 388, 453, 382, 0, 335, 0, 0,
	443, 361, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 231, 196,
	373, 444, 265, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 229, 316, 325, 324, 305, 306, 308, 310,
	315, 322, 328, 0, 0, 0, 0, 0, 244, 291,
	251, 243, 463, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 362, 236, 0, 0, 0,
	0, 497, 0, 0, 0, 2807, 0, 0, 0, 330,
	0, 299, 192, 210, 0, 0, 372, 414, 420, 0,
	0, 0, 234, 0, 418, 386, 481, 218, 263, 411,
	392, 416, 399, 266, 0, 0, 417, 336, 468, 406,
	478, 498, 499, 242, 366, 488, 457, 494, 511, 211,
	239, 380, 450, 484, 440, 359, 464, 465, 298, 439,
	272, 195, 334, 504, 209, 426, 226, 216, 202, 452,
	476, 223, 430, 0, 0, 513, 204, 474, 449, 355,
	295, 296, 203, 0, 410, 247, 270, 237, 375, 471,
	472, 235, 514, 213, 493, 206, 0, 492, 368, 467,
	475, 356, 346, 205, 473, 354, 345, 301, 320, 321,
	259, 281, 404, 339, 405, 282, 364, 363, 365, 198,
	485, 0, 199, 0, 445, 486, 515, 219, 220, 221,
	0, 258, 262, 269, 271, 277, 278, 285, 332, 379,
	403, 401, 407, 0, 462, 479, 489, 496, 502, 503,
	505, 506, 507, 508, 509, 510, 367, 284, 441, 300,
	337, 0, 0, 385, 419, 224, 483, 442, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 534, 347, 432,
	480, 302, 314, 317, 307, 326, 0, 327, 303, 304,
	309, 311, 312, 313, 318, 319, 323, 329, 0, 191,
	207, 333, 0, 408, 267, 512, 491, 487, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 227, 240, 255,
	257, 264, 275, 280, 283, 288, 289, 292, 297, 343,
	349, 350, 351, 352, 369, 370, 371, 374, 377, 378,
	381, 383, 384, 387, 391, 395, 396, 397, 398, 400,
	402, 409, 413, 421, 422, 423, 424, 425, 428, 429,
	434, 435, 436, 437, 438, 446, 447, 451, 469, 470,
	482, 495, 500, 427, 276, 477, 501, 0, 342, 0,
	0, 344, 260, 279, 290, 0, 490, 448, 212, 415,
	268, 201, 230, 215, 238, 253, 256, 294, 353, 360,
	389, 394, 273, 250, 228, 412, 225, 431, 454, 455,
	456, 458, 357, 245, 393, 0, 358, 340, 460, 461,
	286, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 331, 246, 0,
	0, 390, 0, 197, 0, 433, 233, 341, 338, 466,
	261, 252, 248, 232, 287, 348, 388, 453, 382, 0,
	335, 0, 0, 443, 361, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 231, 196, 373, 444, 265, 0, 87, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 229, 316, 325, 324, 305,
	306, 308, 310, 315, 322, 328, 0, 0, 0, 0,
	0, 244, 291, 251, 243, 463, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 362, 236,
	0, 0, 0, 0, 497, 0, 0, 0, 0, 0,
	0, 0, 330, 0, 299, 192, 210, 0, 0, 372,
	414, 420, 0, 0, 0, 234, 0, 418, 386, 481,
	218, 263, 411, 392, 416, 399, 266, 0, 0, 417,
	336, 468, 406, 478, 498, 499, 242, 366, 488, 457,
	494, 511, 211, 239, 380, 450, 484, 440, 359, 464,
	465, 298, 439, 272, 195, 334, 504, 209, 426, 226,
	216, 202, 452, 476, 223, 430, 0, 0, 513, 204,
	474, 449, 355, 295, 296, 203, 0, 410, 247, 270,
	237, 375, 471, 472, 235, 514, 213, 493, 206, 0,
	492, 368, 467, 475, 356, 346, 205, 473, 354, 345,
	301, 320, 321, 259, 281, 404, 339, 405, 282, 364,
	363, 365, 198, 485, 0, 199, 0, 445, 486, 515,
	219, 220, 221, 0, 258, 262, 269, 271, 277, 278,
	285, 332, 379, 403, 401, 407, 0, 462, 479, 489,
	496, 502, 503, 505, 506, 507, 508, 509, 510, 367,
	284, 441, 300, 337, 0, 0, 385, 419, 224, 483,
	442, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	534, 347, 432, 480, 302, 314, 317, 307, 326, 0,
	327, 303, 304, 309, 311, 312, 313, 318, 319, 323,
	329, 0, 191, 207, 333, 0, 408, 267, 512, 491,
	487, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	227, 240, 255, 257, 264, 275, 280, 283, 288, 289,
	292, 297, 343, 349, 350, 351, 352, 369, 370, 371,
	374, 377, 378, 381, 383, 384, 387, 391, 395, 396,
	397, 398, 400, 402, 409, 413, 421, 422, 423, 424,
	425, 428, 429, 434, 435, 436, 437, 438, 446, 447,
	451, 469, 470, 482, 495, 500, 427, 276, 477, 501,
	0, 342, 0, 0, 344, 260, 279, 290, 0, 490,
	448, 212, 415, 268, 201, 230, 215, 238, 253, 256,
	294, 353, 360, 389, 394, 273, 250, 228, 412, 225,
	431, 454, 455, 456, 458, 357, 245, 393, 0, 358,
	340, 460, 461, 286, 459, 0, 0, 0, 0, 1821,
	0, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	331, 246, 0, 0, 390, 0, 197, 0, 433, 233,
	341, 338, 466, 261, 252, 248, 232, 287, 348, 388,
	453, 382, 0, 335, 0, 0, 443, 361, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 231, 196, 373, 444, 265, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 229, 316,
	325, 324, 305, 306, 308, 310, 315, 322, 328, 0,
	0, 0, 0, 0, 244, 291, 251, 243, 463, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 362, 236, 0, 0, 0, 0, 497, 0, 0,
	0, 0, 0, 0, 0, 330, 0, 299, 192, 210,
	0, 0, 372, 414, 420, 0, 0, 0, 234, 0,
	418, 386, 481, 218, 263, 411, 392, 416, 399, 266,
	0, 0, 417, 336, 468, 406, 478, 498, 499, 242,
	366, 488, 457, 494, 511, 211, 239, 380, 450, 484,
	440, 359, 464, 465, 298, 439, 272, 195, 334, 504,
	209, 426, 226, 216, 202, 452, 476, 223, 430, 0,
	0, 513, 204, 474, 449, 355, 295, 296, 203, 0,
	410, 247, 270, 237, 375, 471, 472, 235, 514, 213,
	493, 206, 0, 492, 368, 467, 475, 356, 346, 205,
	473, 354, 345, 301, 320, 321, 259, 281, 404, 339,
	405, 282, 364, 363, 365, 198, 485, 0, 199, 0,
	445, 486, 515, 219, 220, 221, 0, 258, 262, 269,
	271, 277, 278, 285, 332, 379, 403, 401, 407, 0,
	462, 479, 489, 496, 502, 503, 505, 506, 507, 508,
	509, 510, 367, 284, 441, 300, 337, 0, 0, 385,
	419, 224, 483, 442, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 534, 347, 432, 480, 302, 314, 317,
	307, 326, 0, 327, 303, 304, 309, 311, 312, 313,
	318, 319, 323, 329, 0, 191, 207, 333, 0, 408,
	267, 512, 491, 487, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 227, 240, 255, 257, 264, 275, 280,
	283, 288, 289, 292, 297, 343, 349, 350, 351, 352,
	369, 370, 371, 374, 377, 378, 381, 383, 384, 387,
	391, 395, 396, 397, 398, 400, 402, 409, 413, 421,
	422, 423, 424, 425, 428, 429, 434, 435, 436, 437,
	438, 446, 447, 451, 469, 470, 482, 495, 500, 427,
	276, 477, 501, 0, 342, 0, 0, 344, 260, 279,
	290, 0, 490, 448, 212, 415, 268, 201, 230, 215,
	238, 253, 256, 294, 353, 360, 389, 394, 273, 250,
	228, 412, 225, 431, 454, 455, 456, 458, 357, 245,
	393, 0, 358, 340, 460, 461, 286, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 331, 246, 0, 0, 390, 0, 197,
	0, 433, 233, 341, 338, 466, 261, 252, 248, 232,
	287, 348, 388, 453, 382, 0, 335, 0, 0, 443,
	361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 231, 196, 373,
	444, 265, 0, 0, 0, 0, 188, 189, 190, 0,
	1343, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 229, 316, 325, 324, 305, 306, 308, 310, 315,
	322, 328, 0, 0, 0, 0, 0, 244, 291, 251,
	243, 463, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 362, 236, 0, 0, 0, 0,
	497, 0, 0, 0, 0, 0, 0, 0, 330, 0,
	299, 192, 210, 0, 0, 372, 414, 420, 0, 0,
	0, 234, 0, 418, 386, 481, 218, 263, 411, 392,
	416, 399, 266, 0, 0, 417, 336, 468, 406, 478,
	498, 499, 242, 366, 488, 457, 494, 511, 211, 239,
	380, 450, 484, 440, 359, 464, 465, 298, 439, 272,
	195, 334, 504, 209, 426, 226, 216, 202, 452, 476,
	223, 430, 0, 0, 513, 204, 474, 449, 355, 295,
	296, 203, 0, 410, 247, 270, 237, 375, 471, 472,
	235, 514, 213, 493, 206, 0, 492, 368, 467, 475,
	356, 346, 205, 473, 354, 345, 301, 320, 321, 259,
	281, 404, 339, 405, 282, 364, 363, 365, 198, 485,
	0, 199, 0, 445, 486, 515, 219, 220, 221, 0,
	258, 262, 269, 271, 277, 278, 285, 332, 379, 403,
	401, 407, 0, 462, 479, 489, 496, 502, 503, 505,
	506, 507, 508, 509, 510, 367, 284, 441, 300, 337,
	0, 0, 385, 419, 224, 483, 442, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 534, 347, 432, 480,
	302, 314, 317, 307, 326, 0, 327, 303, 304, 309,
	311, 312, 313, 318, 319, 323, 329, 0, 191, 207,
	333, 0, 408, 267, 512, 491, 487, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 227, 240, 255, 257,
	264, 275, 280, 283, 288, 289, 292, 297, 343, 349,
	350, 351, 352, 369, 370, 371, 374, 377, 378, 381,
	383, 384, 387, 391, 395, 396, 397, 398, 400, 402,
	409, 413, 421, 422, 423, 424, 425, 428, 429, 434,
	435, 436, 437, 438, 446, 447, 451, 469, 470, 482,
	495, 500, 427, 276, 477, 501, 0, 342, 0, 0,
	344, 260, 279, 290, 0, 490, 448, 212, 415, 268,
	201, 230, 215, 238, 253, 256, 294, 353, 360, 389,
	394, 273, 250, 228, 412, 225, 431, 454, 455, 456,
	458, 357, 245, 393, 0, 358, 340, 460, 461, 286,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 331, 246, 0, 0,
	390, 0, 197, 0, 433, 233, 341, 338, 466, 261,
	252, 248, 232, 287, 348, 388, 453, 382, 0, 335,
	0, 0, 443, 361, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	231, 196, 373, 444, 265, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 229, 316, 325, 324, 305, 306,
	308, 310, 315, 322, 328, 0, 0, 0, 0, 0,
	244, 291, 251, 243, 463, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 362, 236, 0,
	0, 0, 0, 497, 0, 0, 0, 0, 0, 0,
	0, 330, 0, 299, 192, 210, 0, 0, 372, 414,
	420, 0, 0, 0, 234, 0, 418, 386, 481, 218,
	263, 411, 392, 416, 399, 266, 0, 0, 417, 336,
	468, 406, 478, 498, 499, 242, 366, 488, 457, 494,
	511, 211, 239, 380, 450, 484, 440, 359, 464, 465,
	298, 439, 272, 195, 334, 504, 209, 426, 226, 216,
	202, 452, 476, 223, 430, 0, 0, 513, 204, 474,
	449, 355, 295, 296, 203, 0, 410, 247, 270, 237,
	375, 471, 472, 235, 514, 213, 493, 206, 0, 492,
	368, 467, 475, 356, 346, 205, 473, 354, 345, 301,
	320, 321, 259, 281, 404, 339, 405, 282, 364, 363,
	365, 198, 485, 0, 199, 0, 445, 486, 515, 219,
	220, 221, 0, 258, 262, 269, 271, 277, 278, 285,
	332, 379, 403, 401, 407, 0, 462, 479, 489, 496,
	502, 503, 505, 506, 507, 508, 509, 510, 367, 284,
	441, 300, 337, 0, 0, 385, 419, 224, 483, 442,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 534,
	347, 432, 480, 302, 314, 317, 307, 326, 0, 327,
	303, 304, 309, 311, 312, 313, 318, 319, 323, 329,
	0, 191, 207, 333, 0, 408, 267, 512, 491, 487,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 227,
	240, 255, 257, 264, 275, 280, 283, 288, 289, 292,
	297, 343, 349, 350, 351, 352, 369, 370, 371, 374,
	377, 378, 381, 383, 384, 387, 391, 395, 396, 397,
	398, 400, 402, 409, 413, 421, 422, 423, 424, 425,
	428, 429, 434, 435, 436, 437, 438, 446, 447, 451,
	469, 470, 482, 495, 500, 427, 276, 477, 501, 0,
	342, 0, 0, 344, 260, 279, 290, 0, 490, 448,
	212, 415, 268, 201, 230, 215, 238, 253, 256, 294,
	353, 360, 389, 394, 273, 250, 228, 412, 225, 431,
	454, 455, 456, 458, 357, 245, 393, 0, 358, 340,
	460, 461, 286, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 331,
	246, 0, 0, 390, 0, 197, 0, 433, 233, 341,
	338, 466, 261, 252, 248, 232, 287, 348, 388, 453,
	382, 0, 335, 0, 0, 443, 361, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 231, 196, 373, 444, 265, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 229, 316, 325,
	324, 305, 306, 308, 310, 315, 322, 328, 0, 0,
	0, 0, 0, 244, 291, 251, 243, 463, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	362, 236, 0, 0, 0, 0, 497, 0, 0, 0,
	0, 0, 0, 0, 330, 0, 299, 192, 210, 0,
	0, 372, 414, 420, 0, 0, 0, 234, 0, 418,
	386, 481, 218, 263, 411, 392, 416, 399, 266, 0,
	0, 417, 336, 468, 406, 478, 498, 499, 242, 366,
	488, 457, 494, 511, 211, 239, 380, 450, 484, 440,
	359, 464, 465, 298, 439, 272, 195, 334, 504, 209,
	426, 226, 216, 202, 452, 476, 223, 430, 0, 0,
	513, 204, 474, 449, 355, 295, 296, 203, 0, 410,
	247, 270, 237, 375, 471, 472, 235, 514, 213, 493,
	206, 0, 492, 368, 467, 475, 356, 346, 205, 473,
	354, 345, 301, 320, 321, 259, 281, 404, 339, 405,
	282, 364, 363, 365, 198, 485, 0, 199, 0, 445,
	486, 515, 219, 220, 221, 0, 258, 262, 269, 271,
	277, 278, 285, 332, 379, 403, 401, 407, 0, 462,
	479, 489, 496, 502, 503, 505, 506, 507, 508, 509,
	510, 367, 284, 441, 300, 337, 0, 0, 385, 419,
	224, 483, 442, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 534, 347, 432, 480, 302, 314, 317, 307,
	326, 0, 327, 303, 304, 309, 311, 312, 313, 318,
	319, 323, 329, 0, 191, 207, 333, 1612, 408, 267,
	512, 491, 487, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 227, 240, 255, 257, 264, 275, 280, 283,
	288, 289, 292, 297, 343, 349, 350, 351, 352, 369,
	370, 371, 374, 377, 378, 381, 383, 384, 387, 391,
	395, 396, 397, 398, 400, 402, 409, 413, 421, 422,
	423, 424, 425, 428, 429, 434, 435, 436, 437, 438,
	446, 447, 451, 469, 470, 482, 495, 500, 427, 276,
	477, 501, 0, 342, 0, 0, 344, 260, 279, 290,
	0, 490, 448, 212, 415, 268, 201, 230, 215, 238,
	253, 256, 294, 353, 360, 389, 394, 273, 250, 228,
	412, 225, 431, 454, 455, 456, 458, 357, 245, 393,
	0, 358, 340, 460, 461, 286, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	1487, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 331, 246, 0, 0, 390, 0, 197, 0,
	433, 233, 341, 338, 466, 261, 252, 248, 232, 287,
	348, 388, 453, 382, 0, 335, 0, 0, 443, 361,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 231, 196, 373, 444,
	265, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	229, 316, 325, 324, 305, 306, 308, 310, 315, 322,
	328, 0, 0, 0, 0, 0, 244, 291, 251, 243,
	463, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 362, 236, 0, 0, 0, 0, 497,
	0, 0, 0, 0, 0, 0, 0, 330, 0, 299,
	192, 210, 0, 0, 372, 414, 420, 0, 0, 0,
	234, 0, 418, 386, 481, 218, 263, 411, 392, 416,
	399, 266, 0, 0, 417, 336, 468, 406, 478, 498,
	499, 242, 366, 488, 457, 494, 511, 211, 239, 380,
	450, 484, 440, 359, 464, 465, 298, 439, 272, 195,
	334, 504, 209, 426, 226, 216, 202, 452, 476, 223,
	430, 0, 0, 513, 204, 474, 449, 355, 295, 296,
	203, 0, 410, 247, 270, 237, 375, 471, 472, 235,
	514, 213, 493, 206, 0, 492, 368, 467, 475, 356,
	346, 205, 473, 354, 345, 301, 320, 321, 259, 281,
	404, 339, 405, 282, 364, 363, 365, 198, 485, 0,
	199, 0, 445, 486, 515, 219, 220, 221, 0, 258,
	262, 269, 271, 277, 278, 285, 332, 379, 403, 401,
	407, 0, 462, 479, 489, 496, 502, 503, 505, 506,
	507, 508, 509, 510, 367, 284, 441, 300, 337, 0,
	0, 385, 419, 224, 483, 442, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 534, 347, 432, 480, 302,
	314, 317, 307, 326, 0, 327, 303, 304, 309, 311,
	312, 313, 318, 319, 323, 329, 0, 191, 207, 333,
	0, 408, 267, 512, 491, 487, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 227, 240, 255, 257, 264,
	275, 280, 283, 288, 289, 292, 297, 343, 349, 350,
	351, 352, 369, 370, 371, 374, 377, 378, 381, 383,
	384, 387, 391, 395, 396, 397, 398, 400, 402, 409,
	413, 421, 422, 423, 424, 425, 428, 429, 434, 435,
	436, 437, 438, 446, 447, 451, 469, 470, 482, 495,
	500, 427, 276, 477, 501, 0, 342, 0, 0, 344,
	260, 279, 290, 0, 490, 448, 212, 415, 268, 201,
	230, 215, 238, 253, 256, 294, 353, 360, 389, 394,
	273, 250, 228, 412, 225, 431, 454, 455, 456, 458,
	357, 245, 393, 0, 358, 340, 460, 461, 286, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 1485, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 331, 246, 0, 0, 390,
	0, 197, 0, 433, 233, 341, 338, 466, 261, 252,
	248, 232, 287, 348, 388, 453, 382, 0, 335, 0,
	0, 443, 361, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 231,
	196, 373, 444, 265, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 229, 316, 325, 324, 305, 306, 308,
	310, 315, 322, 328, 0, 0, 0, 0, 0, 244,
	291, 251, 243, 463, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 362, 236, 0, 0,
	0, 0, 497, 0, 0, 0, 0, 0, 0, 0,
	330, 0, 299, 192, 210, 0, 0, 372, 414, 420,
	0, 0, 0, 234, 0, 418, 386, 481, 218, 263,
	411, 392, 416, 399, 266, 0, 0, 417, 336, 468,
	406, 478, 498, 499, 242, 366, 488, 457, 494, 511,
	211, 239, 380, 450, 484, 440, 359, 464, 465, 298,
	439, 272, 195, 334, 504, 209, 426, 226, 216, 202,
	452, 476, 223, 430, 0, 0, 513, 204, 474, 449,
	355, 295, 296, 203, 0, 410, 247, 270, 237, 375,
	471, 472, 235, 514, 213, 493, 206, 0, 492, 368,
	467, 475, 356, 346, 205, 473, 354, 345, 301, 320,
	321, 259, 281, 404, 339, 405, 282, 364, 363, 365,
	198, 485, 0, 199, 0, 445, 486, 515, 219, 220,
	221, 0, 258, 262, 269, 271, 277, 278, 285, 332,
	379, 403, 401, 407, 0, 462, 479, 489, 496, 502,
	503, 505, 506, 507, 508, 509, 510, 367, 284, 441,
	300, 337, 0, 0, 385, 419, 224, 483, 442, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 534, 347,
	432, 480, 302, 314, 317, 307, 326, 0, 327, 303,
	304, 309, 311, 312, 313, 318, 319, 323, 329, 0,
	191, 207, 333, 0, 408, 267, 512, 491, 487, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 227, 240,
	255, 257, 264, 275, 280, 283, 288, 289, 292, 297,
	343, 349, 350, 351, 352, 369, 370, 371, 374, 377,
	378, 381, 383, 384, 387, 391, 395, 396, 397, 398,
	400, 402, 409, 413, 421, 422, 423, 424, 425, 428,
	429, 434, 435, 436, 437, 438, 446, 447, 451, 469,
	470, 482, 495, 500, 427, 276, 477, 501, 0, 342,
	0, 0, 344, 260, 279, 290, 0, 490, 448, 212,
	415, 268, 201, 230, 215, 238, 253, 256, 294, 353,
	360, 389, 394, 273, 250, 228, 412, 225, 431, 454,
	455, 456, 458, 357, 245, 393, 0, 358, 340, 460,
	461, 286, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 1483, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 331, 246,
	0, 0, 390, 0, 197, 0, 433, 233, 341, 338,
	466, 261, 252, 248, 232, 287, 348, 388, 453, 382,
	0, 335, 0, 0, 443, 361, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 231, 196, 373, 444, 265, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 229, 316, 325, 324,
	305, 306, 308, 310, 315, 322, 328, 0, 0, 0,
	0, 0, 244, 291, 251, 243, 463, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 362,
	236, 0, 0, 0, 0, 497, 0, 0, 0, 0,
	0, 0, 0, 330, 0, 299, 192, 210, 0, 0,
	372, 414, 420, 0, 0, 0, 234, 0, 418, 386,
	481, 218, 263, 411, 392, 416, 399, 266, 0, 0,
	417, 336, 468, 406, 478, 498, 499, 242, 366, 488,
	457, 494, 511, 211, 239, 380, 450, 484, 440, 359,
	464, 465, 298, 439, 272, 195, 334, 504, 209, 426,
	226, 216, 202, 452, 476, 223, 430, 0, 0, 513,
	204, 474, 449, 355, 295, 296, 203, 0, 410, 247,
	270, 237, 375, 471, 472, 235, 514, 213, 493, 206,
	0, 492, 368, 467, 475, 356, 346, 205, 473, 354,
	345, 301, 320, 321, 259, 281, 404, 339, 405, 282,
	364, 363, 365, 198, 485, 0, 199, 0, 445, 486,
	515, 219, 220, 221, 0, 258, 262, 269, 271, 277,
	278, 285, 332, 379, 403, 401, 407, 0, 462, 479,
	489, 496, 502, 503, 505, 506, 507, 508, 509, 510,
	367, 284, 441, 300, 337, 0, 0, 385, 419, 224,
	483, 442, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 534, 347, 432, 480, 302, 314, 317, 307, 326,
	0, 327, 303, 304, 309, 311, 312, 313, 318, 319,
	323, 329, 0, 191, 207, 333, 0, 408, 267, 512,
	491, 487, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 227, 240, 255, 257, 264, 275, 280, 283, 288,
	289, 292, 297, 343, 349, 350, 351, 352, 369, 370,
	371, 374, 377, 378, 381, 383, 384, 387, 391, 395,
	396, 397, 398, 400, 402, 409, 413, 421, 422, 423,
	424, 425, 428, 429, 434, 435, 436, 437, 438, 446,
	447, 451, 469, 470, 482, 495, 500, 427, 276, 477,
	501, 0, 342, 0, 0, 344, 260, 279, 290, 0,
	490, 448, 212, 415, 268, 201, 230, 215, 238, 253,
	256, 294, 353, 360, 389, 394, 273, 250, 228, 412,
	225, 431, 454, 455, 456, 458, 357, 245, 393, 0,
	358, 340, 460, 461, 286, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 1481,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 331, 246, 0, 0, 390, 0, 197, 0, 433,
	233, 341, 338, 466, 261, 252, 248, 232, 287, 348,
	388, 453, 382, 0, 335, 0, 0, 443, 361, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 231, 196, 373, 444, 265,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 229,
	316, 325, 324, 305, 306, 308, 310, 315, 322, 328,
	0, 0, 0, 0, 0, 244, 291, 251, 243, 463,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 362, 236, 0, 0, 0, 0, 497, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 299, 192,
	210, 0, 0, 372, 414, 420, 0, 0, 0, 234,
	0, 418, 386, 481, 218, 263, 411, 392, 416, 399,
	266, 0, 0, 417, 336, 468, 406, 478, 498, 499,
	242, 366, 488, 457, 494, 511, 211, 239, 380, 450,
	484, 440, 359, 464, 465, 298, 439, 272, 195, 334,
	504, 209, 426, 226, 216, 202, 452, 476, 223, 430,
	0, 0, 513, 204, 474, 449, 355, 295, 296, 203,
	0, 410, 247, 270, 237, 375, 471, 472, 235, 514,
	213, 493, 206, 0, 492, 368, 467, 475, 356, 346,
	205, 473, 354, 345, 301, 320, 321, 259, 281, 404,
	339, 405, 282, 364, 363, 365, 198, 485, 0, 199,
	0, 445, 486, 515, 219, 220, 221, 0, 258, 262,
	269, 271, 277, 278, 285, 332, 379, 403, 401, 407,
	0, 462, 479, 489, 496, 502, 503, 505, 506, 507,
	508, 509, 510, 367, 284, 441, 300, 337, 0, 0,
	385, 419, 224, 483, 442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 534, 347, 432, 480, 302, 314,
	317, 307, 326, 0, 327, 303, 304, 309, 311, 312,
	313, 318, 319, 323, 329, 0, 191, 207, 333, 0,
	408, 267, 512, 491, 487, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 227, 240, 255, 257, 264, 275,
	280, 283, 288, 289, 292, 297, 343, 349, 350, 351,
	352, 369, 370, 371, 374, 377, 378, 381, 383, 384,
	387, 391, 395, 396, 397, 398, 400, 402, 409, 413,
	421, 422, 423, 424, 425, 428, 429, 434, 435, 436,
	437, 438, 446, 447, 451, 469, 470, 482, 495, 500,
	427, 276, 477, 501, 0, 342, 0, 0, 344, 260,
	279, 290, 0, 490, 448, 212, 415, 268, 201, 230,
	215, 238, 253, 256, 294, 353, 360, 389, 394, 273,
	250, 228, 412, 225, 431, 454, 455, 456, 458, 357,
	245, 393, 0, 358, 340, 460, 461, 286, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 1479, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 331, 246, 0, 0, 390, 0,
	197, 0, 433, 233, 341, 338, 466, 261, 252, 248,
	232, 287, 348, 388, 453, 382, 0, 335, 0, 0,
	443, 361, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 231, 196,
	373, 444, 265, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 229, 316, 325, 324, 305, 306, 308, 310,
	315, 322, 328, 0, 0, 0, 0, 0, 244, 291,
	251, 243, 463, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 362, 236, 0, 0, 0,
	0, 497, 0, 0, 0, 0, 0, 0, 0, 330,
	0, 299, 192, 210, 0, 0, 372, 414, 420, 0,
	0, 0, 234, 0, 418, 386, 481, 218, 263, 411,
	392, 416, 399, 266, 0, 0, 417, 336, 468, 406,
	478, 498, 499, 242, 366, 488, 457, 494, 511, 211,
	239, 380, 450, 484, 440, 359, 464, 465, 298, 439,
	272, 195, 334, 504, 209, 426, 226, 216, 202, 452,
	476, 223, 430, 0, 0, 513, 204, 474, 449, 355,
	295, 296, 203, 0, 410, 247, 270, 237, 375, 471,
	472, 235, 514, 213, 493, 206, 0, 492, 368, 467,
	475, 356, 346, 205, 473, 354, 345, 301, 320, 321,
	259, 281, 404, 339, 405, 282, 364, 363, 365, 198,
	485, 0, 199, 0, 445, 486, 515, 219, 220, 221,
	0, 258, 262, 269, 271, 277, 278, 285, 332, 379,
	403, 401, 407, 0, 462, 479, 489, 496, 502, 503,
	505, 506, 507, 508, 509, 510, 367, 284, 441, 300,
	337, 0, 0, 385, 419, 224, 483, 442, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 534, 347, 432,
	480, 302, 314, 317, 307, 326, 0, 327, 303, 304,
	309, 311, 312, 313, 318, 319, 323, 329, 0, 191,
	207, 333, 0, 408, 267, 512, 491, 487, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 227, 240, 255,
	257, 264, 275, 280, 283, 288, 289, 292, 297, 343,
	349, 350, 351, 352, 369, 370, 371, 374, 377, 378,
	381, 383, 384, 387, 391, 395, 396, 397, 398, 400,
	402, 409, 413, 421, 422, 423, 424, 425, 428, 429,
	434, 435, 436, 437, 438, 446, 447, 451, 469, 470,
	482, 495, 500, 427, 276, 477, 501, 0, 342, 0,
	0, 344, 260, 279, 290, 0, 490, 448, 212, 415,
	268, 201, 230, 215, 238, 253, 256, 294, 353, 360,
	389, 394, 273, 250, 228, 412, 225, 431, 454, 455,
	456, 458, 357, 245, 393, 0, 358, 340, 460, 461,
	286, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 1475, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 331, 246, 0,
	0, 390, 0, 197, 0, 433, 233, 341, 338, 466,
	261, 252, 248, 232, 287, 348, 388, 453, 382, 0,
	335, 0, 0, 443, 361, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 231, 196, 373, 444, 265, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 229, 316, 325, 324, 305,
	306, 308, 310, 315, 322, 328, 0, 0, 0, 0,
	0, 244, 291, 251, 243, 463, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 362, 236,
	0, 0, 0, 0, 497, 0, 0, 0, 0, 0,
	0, 0, 330, 0, 299, 192, 210, 0, 0, 372,
	414, 420, 0, 0, 0, 234, 0, 418, 386, 481,
	218, 263, 411, 392, 416, 399, 266, 0, 0, 417,
	336, 468, 406, 478, 498, 499, 242, 366, 488, 457,
	494, 511, 211, 239, 380, 450, 484, 440, 359, 464,
	465, 298, 439, 272, 195, 334, 504, 209, 426, 226,
	216, 202, 452, 476, 223, 430, 0, 0, 513, 204,
	474, 449, 355, 295, 296, 203, 0, 410, 247, 270,
	237, 375, 471, 472, 235, 514, 213, 493, 206, 0,
	492, 368, 467, 475, 356, 346, 205, 473, 354, 345,
	301, 320, 321, 259, 281, 404, 339, 405, 282, 364,
	363, 365, 198, 485, 0, 199, 0, 445, 486, 515,
	219, 220, 221, 0, 258, 262, 269, 271, 277, 278,
	285, 332, 379, 403, 401, 407, 0, 462, 479, 489,
	496, 502, 503, 505, 506, 507, 508, 509, 510, 367,
	284, 441, 300, 337, 0, 0, 385, 419, 224, 483,
	442, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	534, 347, 432, 480, 302, 314, 317, 307, 326, 0,
	327, 303, 304, 309, 311, 312, 313, 318, 319, 323,
	329, 0, 191, 207, 333, 0, 408, 267, 512, 491,
	487, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	227, 240, 255, 257, 264, 275, 280, 283, 288, 289,
	292, 297, 343, 349, 350, 351, 352, 369, 370, 371,
	374, 377, 378, 381, 383, 384, 387, 391, 395, 396,
	397, 398, 400, 402, 409, 413, 421, 422, 423, 424,
	425, 428, 429, 434, 435, 436, 437, 438, 446, 447,
	451, 469, 470, 482, 495, 500, 427, 276, 477, 501,
	0, 342, 0, 0, 344, 260, 279, 290, 0, 490,
	448, 212, 415, 268, 201, 230, 215, 238, 253, 256,
	294, 353, 360, 389, 394, 273, 250, 228, 412, 225,
	431, 454, 455, 456, 458, 357, 245, 393, 0, 358,
	340, 460, 461, 286, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 1473, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	331, 246, 0, 0, 390, 0, 197, 0, 433, 233,
	341, 338, 466, 261, 252, 248, 232, 287, 348, 388,
	453, 382, 0, 335, 0, 0, 443, 361, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 231, 196, 373, 444, 265, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 229, 316,
	325, 324, 305, 306, 308, 310, 315, 322, 328, 0,
	0, 0, 0, 0, 244, 291, 251, 243, 463, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 362, 236, 0, 0, 0, 0, 497, 0, 0,
	0, 0, 0, 0, 0, 330, 0, 299, 192, 210,
	0, 0, 372, 414, 420, 0, 0, 0, 234, 0,
	418, 386, 481, 218, 263, 411, 392, 416, 399, 266,
	0, 0, 417, 336, 468, 406, 478, 498, 499, 242,
	366, 488, 457, 494, 511, 211, 239, 380, 450, 484,
	440, 359, 464, 465, 298, 439, 272, 195, 334, 504,
	209, 426, 226, 216, 202, 452, 476, 223, 430, 0,
	0, 513, 204, 474, 449, 355, 295, 296, 203, 0,
	410, 247, 270, 237, 375, 471, 472, 235, 514, 213,
	493, 206, 0, 492, 368, 467, 475, 356, 346, 205,
	473, 354, 345, 301, 320, 321, 259, 281, 404, 339,
	405, 282, 364, 363, 365, 198, 485, 0, 199, 0,
	445, 486, 515, 219, 220, 221, 0, 258, 262, 269,
	271, 277, 278, 285, 332, 379, 403, 401, 407, 0,
	462, 479, 489, 496, 502, 503, 505, 506, 507, 508,
	509, 510, 367, 284, 441, 300, 337, 0, 0, 385,
	419, 224, 483, 442, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 534, 347, 432, 480, 302, 314, 317,
	307, 326, 0, 327, 303, 304, 309, 311, 312, 313,
	318, 319, 323, 329, 0, 191, 207, 333, 0, 408,
	267, 512, 491, 487, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 227, 240, 255, 257, 264, 275, 280,
	283, 288, 289, 292, 297, 343, 349, 350, 351, 352,
	369, 370, 371, 374, 377, 378, 381, 383, 384, 387,
	391, 395, 396, 397, 398, 400, 402, 409, 413, 421,
	422, 423, 424, 425, 428, 429, 434, 435, 436, 437,
	438, 446, 447, 451, 469, 470, 482, 495, 500, 427,
	276, 477, 501, 0, 342, 0, 0, 344, 260, 279,
	290, 0, 490, 448, 212, 415, 268, 201, 230, 215,
	238, 253, 256, 294, 353, 360, 389, 394, 273, 250,
	228, 412, 225, 431, 454, 455, 456, 458, 357, 245,
	393, 0, 358, 340, 460, 461, 286, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 1471, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 331, 246, 0, 0, 390, 0, 197,
	0, 433, 233, 341, 338, 466, 261, 252, 248, 232,
	287, 348, 388, 453, 382, 0, 335, 0, 0, 443,
	361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 231, 196, 373,
	444, 265, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 229, 316, 325, 324, 305, 306, 308, 310, 315,
	322, 328, 0, 0, 0, 0, 0, 244, 291, 251,
	243, 463, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 362, 236, 0, 0, 0, 0,
	497, 0, 0, 0, 0, 0, 0, 0, 330, 0,
	299, 192, 210, 0, 0, 372, 414, 420, 0, 0,
	0, 234, 0, 418, 386, 481, 218, 263, 411, 392,
	416, 399, 266, 0, 0, 417, 336, 468, 406, 478,
	498, 499, 242, 366, 488, 457, 494, 511, 211, 239,
	380, 450, 484, 440, 359, 464, 465, 298, 439, 272,
	195, 334, 504, 209, 426, 226, 216, 202, 452, 476,
	223, 430, 0, 0, 513, 204, 474, 449, 355, 295,
	296, 203, 0, 410, 247, 270, 237, 375, 471, 472,
	235, 514, 213, 493, 206, 0, 492, 368, 467, 475,
	356, 346, 205, 473, 354, 345, 301, 320, 321, 259,
	281, 404, 339, 405, 282, 364, 363, 365, 198, 485,
	0, 199, 0, 445, 486, 515, 219, 220, 221, 0,
	258, 262, 269, 271, 277, 278, 285, 332, 379, 403,
	401, 407, 0, 462, 479, 489, 496, 502, 503, 505,
	506, 507, 508, 509, 510, 367, 284, 441, 300, 337,
	0, 0, 385, 419, 224, 483, 442, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 534, 347, 432, 480,
	302, 314, 317, 307, 326, 0, 327, 303, 304, 309,
	311, 312, 313, 318, 319, 323, 329, 0, 191, 207,
	333, 0, 408, 267, 512, 491, 487, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 227, 240, 255, 257,
	264, 275, 280, 283, 288, 289, 292, 297, 343, 349,
	350, 351, 352, 369, 370, 371, 374, 377, 378, 381,
	383, 384, 387, 391, 395, 396, 397, 398, 400, 402,
	409, 413, 421, 422, 423, 424, 425, 428, 429, 434,
	435, 436, 437, 438, 446, 447, 451, 469, 470, 482,
	495, 500, 427, 276, 477, 501, 0, 342, 0, 0,
	344, 260, 279, 290, 0, 490, 448, 212, 415, 268,
	201, 230, 215, 238, 253, 256, 294, 353, 360, 389,
	394, 273, 250, 228, 412, 225, 431, 454, 455, 456,
	458, 357, 245, 393, 0, 358, 340, 460, 461, 286,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 331, 246, 0, 0,
	390, 0, 197, 0, 433, 233, 341, 338, 466, 261,
	252, 248, 232, 287, 348, 388, 453, 382, 0, 335,
	0, 0, 443, 361, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	231, 196, 373, 444, 265, 0, 1448, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 229, 316, 325, 324, 305, 306,
	308, 310, 315, 322, 328, 0, 0, 0, 0, 0,
	244, 291, 251, 243, 463, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 362, 236, 0,
	0, 0, 0, 497, 0, 0, 0, 0, 0, 0,
	0, 330, 0, 299, 192, 210, 0, 0, 372, 414,
	420, 0, 0, 0, 234, 0, 418, 386, 481, 218,
	263, 411, 392, 416, 399, 266, 0, 0, 417, 336,
	468, 406, 478, 498, 499, 242, 366, 488, 457, 494,
	511, 211, 239, 380, 450, 484, 440, 359, 464, 465,
	298, 439, 272, 195, 334, 504, 209, 426, 226, 216,
	202, 452, 476, 223, 430, 0, 0, 513, 204, 474,
	449, 355, 295, 296, 203, 0, 410, 247, 270, 237,
	375, 471, 472, 235, 514, 213, 493, 206, 0, 492,
	368, 467, 475, 356, 346, 205, 473, 354, 345, 301,
	320, 321, 259, 281, 404, 339, 405, 282, 364, 363,
	365, 198, 485, 0, 199, 0, 445, 486, 515, 219,
	220, 221, 0, 258, 262, 269, 271, 277, 278, 285,
	332, 379, 403, 401, 407, 0, 462, 479, 489, 496,
	502, 503, 505, 506, 507, 508, 509, 510, 367, 284,
	441, 300, 337, 0, 0, 385, 419, 224, 483, 442,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 534,
	347, 432, 480, 302, 314, 317, 307, 326, 0, 327,
	303, 304, 309, 311, 312, 313, 318, 319, 323, 329,
	0, 191, 207, 333, 0, 408, 267, 512, 491, 487,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 227,
	240, 255, 257, 264, 275, 280, 283, 288, 289, 292,
	297, 343, 349, 350, 351, 352, 369, 370, 371, 374,
	377, 378, 381, 383, 384, 387, 391, 395, 396, 397,
	398, 400, 402, 409, 413, 421, 422, 423, 424, 425,
	428, 429, 434, 435, 436, 437, 438, 446, 447, 451,
	469, 470, 482, 495, 500, 427, 276, 477, 501, 0,
	342, 0, 0, 344, 260, 279, 290, 0, 490, 448,
	212, 415, 268, 201, 230, 215, 238, 253, 256, 294,
	353, 360, 389, 394, 273, 250, 228, 412, 225, 431,
	454, 455, 456, 458, 357, 245, 393, 0, 358, 340,
	460, 461, 286, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 0, 1348, 249, 0, 0, 0, 0, 331,
	246, 0, 0, 390, 0, 197, 0, 433, 233, 341,
	338, 466, 261, 252, 248, 232, 287, 348, 388, 453,
	382, 0, 335, 0, 0, 443, 361, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 231, 196, 373, 444, 265, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 229, 316, 325,
	324, 305, 306, 308, 310, 315, 322, 328, 0, 0,
	0, 0, 0, 244, 291, 251, 243, 463, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	362, 236, 0, 0, 0, 0, 497, 0, 0, 0,
	0, 0, 0, 0, 330, 0, 299, 192, 210, 0,
	0, 372, 414, 420, 0, 0, 0, 234, 0, 418,
	386, 481, 218, 263, 411, 392, 416, 399, 266, 0,
	0, 417, 336, 468, 406, 478, 498, 499, 242, 366,
	488, 457, 494, 511, 211, 239, 380, 450, 484, 440,
	359, 464, 465, 298, 439, 272, 195, 334, 504, 209,
	426, 226, 216, 202, 452, 476, 223, 430, 0, 0,
	513, 204, 474, 449, 355, 295, 296, 203, 0, 410,
	247, 270, 237, 375, 471, 472, 235, 514, 213, 493,
	206, 0, 492, 368, 467, 475, 356, 346, 205, 473,
	354, 345, 301, 320, 321, 259, 281, 404, 339, 405,
	282, 364, 363, 365, 198, 485, 0, 199, 0, 445,
	486, 515, 219, 220, 221, 0, 258, 262, 269, 271,
	277, 278, 285, 332, 379, 403, 401, 407, 0, 462,
	479, 489, 496, 502, 503, 505, 506, 507, 508, 509,
	510, 367, 284, 441, 300, 337, 0, 0, 385, 419,
	224, 483, 442, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 534, 347, 432, 480, 302, 314, 317, 307,
	326, 0, 327, 303, 304, 309, 311, 312, 313, 318,
	319, 323, 329, 0, 191, 207, 333, 0, 408, 267,
	512, 491, 487, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 227, 240, 255, 257, 264, 275, 280, 283,
	288, 289, 292, 297, 343, 349, 350, 351, 352, 369,
	370, 371, 374, 377, 378, 381, 383, 384, 387, 391,
	395, 396, 397, 398, 400, 402, 409, 413, 421, 422,
	423, 424, 425, 428, 429, 434, 435, 436, 437, 438,
	446, 447, 451, 469, 470, 482, 495, 500, 427, 276,
	477, 501, 0, 342, 0, 0, 344, 260, 279, 290,
	0, 490, 448, 212, 415, 268, 201, 230, 215, 238,
	253, 256, 294, 353, 360, 389, 394, 273, 250, 228,
	412, 225, 431, 454, 455, 456, 458, 357, 245, 393,
	0, 358, 340, 460, 461, 286, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 331, 246, 0, 0, 390, 0, 197, 0,
	433, 233, 341, 338, 466, 261, 252, 248, 232, 287,
	348, 388, 453, 382, 0, 335, 0, 0, 443, 361,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 231, 196, 373, 444,
	265, 0, 0, 0, 0, 188, 189, 190, 0, 1149,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	229, 316, 325, 324, 305, 306, 308, 310, 315, 322,
	328, 0, 0, 0, 0, 0, 244, 291, 251, 243,
	463, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 362, 236, 0, 0, 0, 0, 497,
	0, 0, 0, 0, 0, 0, 0, 330, 0, 299,
	192, 210, 0, 0, 372, 414, 420, 0, 0, 0,
	234, 0, 418, 386, 481, 218, 263, 411, 392, 416,
	399, 266, 0, 0, 417, 336, 468, 406, 478, 498,
	499, 242, 366, 488, 457, 494, 511, 211, 239, 380,
	450, 484, 440, 359, 464, 465, 298, 439, 272, 195,
	334, 504, 209, 426, 226, 216, 202, 452, 476, 223,
	430, 0, 0, 513, 204, 474, 449, 355, 295, 296,
	203, 0, 410, 247, 270, 237, 375, 471, 472, 235,
	514, 213, 493, 206, 0, 492, 368, 467, 475, 356,
	346, 205, 473, 354, 345, 301, 320, 321, 259, 281,
	404, 339, 405, 282, 364, 363, 365, 198, 485, 0,
	199, 0, 445, 486, 515, 219, 220, 221, 0, 258,
	262, 269, 271, 277, 278, 285, 332, 379, 403, 401,
	407, 0, 462, 479, 489, 496, 502, 503, 505, 506,
	507, 508, 509, 510, 367, 284, 441, 300, 337, 0,
	0, 385, 419, 224, 483, 442, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 534, 347, 432, 480, 302,
	314, 317, 307, 326, 0, 327, 303, 304, 309, 311,
	312, 313, 318, 319, 323, 329, 0, 191, 207, 333,
	0, 408, 267, 512, 491, 487, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 227, 240, 255, 257, 264,
	275, 280, 283, 288, 289, 292, 297, 343, 349, 350,
	351, 352, 369, 370, 371, 374, 377, 378, 381, 383,
	384, 387, 391, 395, 396, 397, 398, 400, 402, 409,
	413, 421, 422, 423, 424, 425, 428, 429, 434, 435,
	436, 437, 438, 446, 447, 451, 469, 470, 482, 495,
	500, 427, 276, 477, 501, 0, 342, 0, 0, 344,
	260, 279, 290, 0, 490, 448, 212, 415, 268, 201,
	230, 215, 238, 253, 256, 294, 353, 360, 389, 394,
	273, 250, 228, 412, 225, 431, 454, 455, 456, 458,
	357, 245, 393, 0, 358, 340, 460, 461, 286, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 331, 246, 0, 0, 390,
	0, 197, 0, 433, 233, 341, 338, 466, 261, 252,
	248, 232, 287, 348, 388, 453, 382, 0, 335, 0,
	0, 443, 361, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 231,
	196, 373, 444, 265, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 229, 316, 325, 324, 305, 306, 308,
	310, 315, 322, 328, 0, 0, 0, 0, 0, 244,
	291, 251, 243, 463, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 362, 236, 0, 0,
	0, 0, 497, 0, 0, 0, 0, 0, 0, 0,
	330, 0, 299, 192, 210, 0, 0, 372, 414, 420,
	0, 0, 0, 234, 0, 418, 386, 481, 218, 263,
	411, 392, 416, 399, 266, 0, 0, 417, 336, 468,
	406, 478, 498, 499, 242, 366, 488, 457, 494, 511,
	211, 239, 380, 450, 484, 440, 359, 464, 465, 298,
	439, 272, 195, 334, 504, 209, 426, 226, 216, 202,
	452, 476, 223, 430, 0, 0, 513, 204, 474, 449,
	355, 295, 296, 203, 0, 410, 247, 270, 237, 375,
	471, 472, 235, 514, 213, 493, 206, 0, 492, 368,
	467, 475, 356, 346, 205, 473, 354, 345, 301, 320,
	321, 259, 281, 404, 339, 405, 282, 364, 363, 365,
	198, 485, 0, 199, 0, 445, 486, 515, 219, 220,
	221, 0, 258, 262, 269, 271, 277, 278, 285, 332,
	379, 403, 401, 407, 0, 462, 479, 489, 496, 502,
	503, 505, 506, 507, 508, 509, 510, 367, 284, 441,
	300, 337, 0, 0, 385, 419, 224, 483, 442, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 534, 347,
	432, 480, 302, 314, 317, 307, 326, 0, 327, 303,
	304, 309, 311, 312, 313, 318, 319, 323, 329, 0,
	191, 207, 333, 0, 408, 267, 512, 491, 487, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 767,
	0, 0, 0, 193, 194, 200, 208, 217, 227, 240,
	255, 257, 264, 275, 280, 283, 288, 289, 292, 297,
	343, 349, 350, 351, 352, 369, 370, 371, 374, 377,
	378, 381, 383, 384, 387, 391, 395, 396, 397, 398,
	400, 402, 409, 413, 421, 422, 423, 424, 425, 428,
	429, 434, 435, 436, 437, 438, 446, 447, 451, 469,
	470, 482, 495, 500, 427, 276, 477, 501, 0, 342,
	0, 0, 344, 260, 279, 290, 0, 490, 448, 212,
	415, 268, 201, 230, 215, 238, 253, 256, 294, 353,
	360, 389, 394, 273, 250, 228, 412, 225, 431, 454,
	455, 456, 458, 357, 245, 393, 0, 358, 340, 460,
	461, 286, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 331, 246,
	0, 0, 390, 0, 197, 0, 433, 233, 341, 338,
	466, 261, 252, 248, 232, 287, 348, 388, 453, 382,
	0, 335, 0, 0, 443, 361, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 231, 196, 373, 444, 265, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 229, 316, 325, 324,
	305, 306, 308, 310, 315, 322, 328, 0, 0, 0,
	0, 0, 244, 291, 251, 243, 463, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 590, 0, 274, 0, 362,
	236, 0, 0, 0, 0, 497, 0, 0, 0, 0,
	0, 0, 0, 330, 0, 299, 192, 210, 0, 0,
	372, 414, 420, 0, 0, 0, 234, 0, 418, 386,
	481, 218, 263, 411, 392, 416, 399, 266, 0, 0,
	417, 336, 468, 406, 478, 498, 499, 242, 366, 488,
	457, 494, 511, 211, 239, 380, 450, 484, 440, 359,
	464, 465, 298, 439, 272, 195, 334, 504, 209, 426,
	226, 216, 202, 452, 476, 223, 430, 0, 0, 513,
	204, 474, 449, 355, 295, 296, 203, 0, 410, 247,
	270, 237, 375, 471, 472, 235, 514, 213, 493, 206,
	0, 492, 368, 467, 475, 356, 346, 205, 473, 354,
	345, 301, 320, 321, 259, 281, 404, 339, 405, 282,
	364, 363, 365, 198, 485, 0, 199, 0, 445, 486,
	515, 219, 220, 221, 0, 258, 262, 269, 271, 277,
	278, 285, 332, 379, 403, 401, 407, 0, 462, 479,
	489, 496, 502, 503, 505, 506, 507, 508, 509, 510,
	367, 284, 441, 300, 337, 0, 0, 385, 419, 224,
	483, 442, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 534, 347, 432, 480, 302, 314, 317, 307, 326,
	0, 327, 303, 304, 309, 311, 312, 313, 318, 319,
	323, 329, 0, 191, 207, 333, 0, 408, 267, 512,
	491, 487, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 227, 240, 255, 257, 264, 275, 280, 283, 288,
	289, 292, 297, 343, 349, 350, 351, 352, 369, 370,
	371, 374, 377, 378, 381, 383, 384, 387, 391, 395,
	396, 397, 398, 400, 402, 409, 413, 421, 422, 423,
	424, 425, 428, 429, 434, 435, 436, 437, 438, 446,
	447, 451, 469, 470, 482, 495, 500, 427, 589, 477,
	501, 0, 342, 0, 0, 344, 260, 279, 290, 0,
	490, 448, 212, 415, 268, 201, 230, 215, 238, 253,
	256, 294, 353, 360, 389, 394, 273, 250, 228, 412,
	225, 431, 454, 455, 456, 458, 357, 245, 393, 0,
	358, 340, 460, 461, 286, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 331, 246, 0, 0, 390, 0, 197, 0, 433,
	233, 341, 338, 466, 261, 252, 248, 232, 287, 348,
	388, 453, 382, 0, 335, 0, 0, 443, 361, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 231, 196, 373, 444, 265,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 229,
	316, 325, 324, 305, 306, 308, 310, 315, 322, 328,
	0, 0, 0, 0, 0, 244, 291, 251, 243, 463,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 362, 236, 0, 0, 537, 0, 497, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 299, 192,
	210, 0, 0, 372, 414, 420, 0, 0, 0, 234,
	0, 418, 386, 481, 218, 263, 411, 392, 416, 399,
	266, 0, 0, 417, 336, 468, 406, 478, 498, 499,
	242, 366, 488, 457, 494, 511, 211, 239, 380, 450,
	484, 440, 359, 464, 465, 298, 439, 272, 195, 334,
	504, 209, 426, 226, 216, 202, 452, 476, 223, 430,
	0, 0, 513, 204, 474, 449, 355, 295, 296, 203,
	0, 410, 247, 270, 237, 375, 471, 472, 235, 514,
	213, 493, 206, 0, 492, 368, 467, 475, 356, 346,
	205, 473, 354, 345, 301, 320, 321, 259, 281, 404,
	339, 405, 282, 364, 363, 365, 198, 485, 0, 199,
	0, 445, 486, 515, 219, 220, 221, 0, 258, 262,
	269, 271, 277, 278, 285, 332, 379, 403, 401, 407,
	0, 462, 479, 489, 496, 502, 503, 505, 506, 507,
	508, 509, 510, 367, 284, 441, 300, 337, 0, 0,
	385, 419, 224, 483, 442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 534, 347, 432, 480, 302, 314,
	317, 307, 326, 0, 327, 303, 304, 309, 311, 312,
	313, 318, 319, 323, 329, 0, 191, 207, 333, 0,
	408, 267, 512, 491, 487, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 227, 240, 255, 257, 264, 275,
	280, 283, 288, 289, 292, 297, 343, 349, 350, 351,
	352, 369, 370, 371, 374, 377, 378, 381, 383, 384,
	387, 391, 395, 396, 397, 398, 400, 402, 409, 413,
	421, 422, 423, 424, 425, 428, 429, 434, 435, 436,
	437, 438, 446, 447, 451, 469, 470, 482, 495, 500,
	427, 276, 477, 501, 0, 342, 0, 0, 344, 260,
	279, 290, 0, 490, 448, 212, 415, 268, 201, 230,
	215, 238, 253, 256, 294, 353, 360, 389, 394, 273,
	250, 228, 412, 225, 431, 454, 455, 456, 458, 357,
	245, 393, 0, 358, 340, 460, 461, 286, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 331, 246, 0, 0, 390, 0,
	197, 0, 433, 233, 341, 338, 466, 261, 252, 248,
	232, 287, 348, 388, 453, 382, 0, 335, 0, 0,
	443, 361, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 231, 196,
	373, 444, 265, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 229, 316, 325, 324, 305, 306, 308, 310,
	315, 322, 328, 0, 0, 0, 0, 0, 244, 291,
	251, 243, 463, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 362, 236, 0, 0, 0,
	0, 497, 0, 0, 0, 0, 0, 0, 0, 330,
	0, 299, 192, 210, 0, 0, 372, 414, 420, 0,
	0, 0, 234, 0, 418, 386, 481, 218, 263, 411,
	392, 416, 399, 266, 0, 0, 417, 336, 468, 406,
	478, 498, 499, 242, 366, 488, 457, 494, 511, 211,
	239, 380, 450, 484, 440, 359, 464, 465, 298, 439,
	272, 195, 334, 504, 209, 426, 226, 216, 202, 452,
	476, 223, 430, 0, 0, 513, 204, 474, 449, 355,
	295, 296, 203, 0, 410, 247, 270, 237, 375, 471,
	472, 235, 514, 213, 493, 206, 0, 492, 368, 467,
	475, 356, 346, 205, 473, 354, 345, 301, 320, 321,
	259, 281, 404, 339, 405, 282, 364, 363, 365, 198,
	485, 0, 199, 0, 445, 486, 515, 219, 220, 221,
	0, 258, 262, 269, 271, 277, 278, 285, 332, 379,
	403, 401, 407, 0, 462, 479, 489, 496, 502, 503,
	505, 506, 507, 508, 509, 510, 367, 284, 441, 300,
	337, 0, 0, 385, 419, 224, 483, 442, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 534, 347, 432,
	480, 302, 314, 317, 307, 326, 0, 327, 303, 304,
	309, 311, 312, 313, 318, 319, 323, 329, 0, 191,
	207, 333, 0, 408, 267, 512, 491, 487, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 227, 240, 255,
	257, 264, 275, 280, 283, 288, 289, 292, 297, 343,
	349, 350, 351, 352, 2896, 370, 371, 374, 377, 378,
	381, 383, 384, 387, 391, 395, 396, 397, 398, 400,
	402, 409, 413, 421, 422, 423, 424, 425, 428, 429,
	434, 435, 436, 437, 438, 446, 447, 451, 469, 470,
	482, 495, 500, 427, 276, 477, 501, 0, 342, 0,
	0, 344, 260, 279, 290, 0, 490, 448, 212, 415,
	268, 201, 230, 215, 238, 253, 256, 294, 353, 360,
	389, 394, 273, 250, 228, 412, 225, 431, 454, 455,
	456, 458, 357, 245, 393, 0, 358, 340, 460, 461,
	286, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 331, 246, 0,
	0, 390, 0, 197, 0, 433, 233, 341, 338, 466,
	261, 252, 248, 232, 287, 348, 388, 453, 382, 0,
	335, 0, 0, 443, 361, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 231, 196, 373, 444, 265, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 229, 316, 325, 324, 305,
	306, 308, 310, 315, 322, 328, 0, 0, 0, 0,
	0, 244, 291, 251, 243, 463, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 362, 236,
	0, 0, 0, 0, 497, 0, 0, 0, 0, 0,
	0, 0, 330, 0, 299, 192, 210, 0, 0, 372,
	414, 420, 0, 0, 0, 234, 0, 418, 386, 481,
	218, 263, 411, 392, 416, 399, 266, 0, 0, 417,
	336, 468, 406, 478, 498, 499, 242, 366, 488, 457,
	494, 511, 211, 239, 380, 450, 484, 440, 359, 464,
	465, 298, 439, 272, 195, 334, 504, 209, 426, 226,
	216, 202, 452, 476, 223, 430, 0, 0, 513, 204,
	474, 449, 355, 295, 296, 203, 0, 410, 247, 270,
	237, 375, 471, 472, 235, 514, 213, 493, 206, 0,
	492, 368, 467, 475, 356, 346, 205, 473, 354, 345,
	301, 320, 321, 259, 281, 404, 339, 405, 282, 364,
	363, 365, 198, 485, 0, 199, 0, 445, 486, 515,
	219, 220, 221, 0, 258, 262, 269, 271, 277, 278,
	285, 332, 379, 403, 401, 407, 0, 462, 479, 489,
	496, 502, 503, 505, 506, 507, 508, 509, 510, 367,
	284, 441, 300, 337, 0, 0, 385, 419, 224, 483,
	442, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	534, 347, 432, 480, 302, 314, 317, 307, 326, 0,
	327, 303, 304, 309, 311, 312, 313, 318, 319, 323,
	329, 0, 191, 207, 333, 0, 408, 267, 512, 491,
	487, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	227, 240, 255, 257, 264, 275, 280, 283, 288, 289,
	292, 297, 343, 349, 350, 351, 352, 369, 370, 371,
	374, 377, 378, 381, 383, 384, 387, 391, 395, 396,
	397, 398, 400, 402, 409, 413, 421, 422, 423, 424,
	425, 428, 429, 434, 435, 436, 437, 438, 446, 447,
	451, 469, 470, 482, 495, 500, 427, 276, 477, 501,
	0, 342, 0, 0, 344, 260, 279, 290, 0, 490,
	448, 212, 415, 268, 201, 230, 215, 238, 253, 256,
	294, 353, 360, 389, 394, 273, 250, 228, 412, 225,
	431, 454, 455, 456, 458, 357, 245, 393, 0, 358,
	340, 460, 461, 286, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	331, 246, 0, 0, 390, 0, 197, 0, 433, 233,
	341, 338, 466, 261, 252, 248, 232, 287, 348, 388,
	453, 382, 0, 335, 0, 0, 443, 361, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 231, 196, 373, 444, 265, 0,
	0, 0, 0, 188, 2546, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 229, 316,
	325, 324, 305, 306, 308, 310, 315, 322, 328, 0,
	0, 0, 0, 0, 244, 291, 251, 243, 463, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 362, 236, 0, 0, 0, 0, 497, 0, 0,
	0, 0, 0, 0, 0, 330, 0, 299, 192, 210,
	0, 0, 372, 414, 420, 0, 0, 0, 234, 0,
	418, 386, 481, 218, 263, 411, 392, 416, 399, 266,
	0, 0, 417, 336, 468, 406, 478, 498, 499, 242,
	366, 488, 457, 494, 511, 211, 239, 380, 450, 484,
	440, 359, 464, 465, 298, 439, 272, 195, 334, 504,
	209, 426, 226, 216, 202, 452, 476, 223, 430, 0,
	0, 513, 204, 474, 449, 355, 295, 296, 203, 0,
	410, 247, 270, 237, 375, 471, 472, 235, 514, 213,
	493, 206, 0, 492, 368, 467, 475, 356, 346, 205,
	473, 354, 345, 301, 320, 321, 259, 281, 404, 339,
	405, 282, 364, 363, 365, 198, 485, 0, 199, 0,
	445, 486, 515, 219, 220, 221, 0, 258, 262, 269,
	271, 277, 278, 285, 332, 379, 403, 401, 407, 0,
	462, 479, 489, 496, 502, 503, 505, 506, 507, 508,
	509, 510, 367, 284, 441, 300, 337, 0, 0, 385,
	419, 224, 483, 442, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 534, 347, 432, 480, 302, 314, 317,
	307, 326, 0, 327, 303, 304, 309, 311, 312, 313,
	318, 319, 323, 329, 0, 191, 207, 333, 0, 408,
	267, 512, 491, 487, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 227, 240, 255, 257, 264, 275, 280,
	283, 288, 289, 292, 297, 343, 349, 350, 351, 352,
	369, 370, 371, 374, 377, 378, 381, 383, 384, 387,
	391, 395, 396, 397, 398, 400, 402, 409, 413, 421,
	422, 423, 424, 425, 428, 429, 434, 435, 436, 437,
	438, 446, 447, 451, 469, 470, 482, 495, 500, 427,
	276, 477, 501, 0, 342, 0, 0, 344, 260, 279,
	290, 0, 490, 448, 212, 415, 268, 201, 230, 215,
	238, 253, 256, 294, 353, 360, 389, 394, 273, 250,
	228, 412, 225, 431, 454, 455, 456, 458, 357, 245,
	393, 0, 358, 340, 460, 461, 286, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 331, 246, 0, 0, 390, 0, 197,
	0, 433, 233, 341, 338, 466, 261, 252, 248, 232,
	287, 348, 388, 453, 382, 0, 335, 0, 0, 443,
	361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 231, 196, 373,
	444, 265, 0, 0, 0, 0, 188, 2085, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 229, 316, 325, 324, 305, 306, 308, 310, 315,
	322, 328, 0, 0, 0, 0, 0, 244, 291, 251,
	243, 463, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 362, 236, 0, 0, 0, 0,
	497, 0, 0, 0, 0, 0, 0, 0, 330, 0,
	299, 192, 210, 0, 0, 372, 414, 420, 0, 0,
	0, 234, 0, 418, 386, 481, 218, 263, 411, 392,
	416, 399, 266, 0, 0, 417, 336, 468, 406, 478,
	498, 499, 242, 366, 488, 457, 494, 511, 211, 239,
	380, 450, 484, 440, 359, 464, 465, 298, 439, 272,
	195, 334, 504, 209, 426, 226, 216, 202, 452, 476,
	223, 430, 0, 0, 513, 204, 474, 449, 355, 295,
	296, 203, 0, 410, 247, 270, 237, 375, 471, 472,
	235, 514, 213, 493, 206, 0, 492, 368, 467, 475,
	356, 346, 205, 473, 354, 345, 301, 320, 321, 259,
	281, 404, 339, 405, 282, 364, 363, 365, 198, 485,
	0, 199, 0, 445, 486, 515, 219, 220, 221, 0,
	258, 262, 269, 271, 277, 278, 285, 332, 379, 403,
	401, 407, 0, 462, 479, 489, 496, 502, 503, 505,
	506, 507, 508, 509, 510, 367, 284, 441, 300, 337,
	0, 0, 385, 419, 224, 483, 442, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 534, 347, 432, 480,
	302, 314, 317, 307, 326, 0, 327, 303, 304, 309,
	311, 312, 313, 318, 319, 323, 329, 0, 191, 207,
	333, 0, 408, 267, 512, 491, 487, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 227, 240, 255, 257,
	264, 275, 280, 283, 288, 289, 292, 297, 343, 349,
	350, 351, 352, 369, 370, 371, 374, 377, 378, 381,
	383, 384, 387, 391, 395, 396, 397, 398, 400, 402,
	409, 413, 421, 422, 423, 424, 425, 428, 429, 434,
	435, 436, 437, 438, 446, 447, 451, 469, 470, 482,
	495, 500, 427, 276, 477, 501, 0, 342, 0, 0,
	344, 260, 279, 290, 0, 490, 448, 212, 415, 268,
	201, 230, 215, 238, 253, 256, 294, 353, 360, 389,
	394, 273, 250, 228, 412, 225, 431, 454, 455, 456,
	458, 357, 245, 393, 0, 0, 340, 460, 461, 286,
}

var yyPact = [...]int{
	4329, -1000, -415, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2146, 2211, -1000, -1000,
	-1000, -1000, 2222, -1000, 691, 1706, -1000, 2016, 3516, -1000,
	40032, 469, -1000, 38846, 463, 125, 40032, -1000, 133, -1000,
	124, 40032, 128, 38253, -1000, -1000, -317, 16895, 1919, 6,
	5, 40032, -1000, -1000, -1000, -1000, 2167, 1683, -1000, 275,
	-1000, -1000, -1000, -1000, -1000, -1000, 37660, -1000, -1000, -1000,
	2020, 1991, 2237, 597, 1920, -1000, 2092, 1683, -1000, 16895,
	2148, 2082, 16302, -1000, 16302, 404, -1000, -1000, 12141, -1000,
	-1000, 22835, 40032, 28172, 322, -1000, 2016, -1000, -1000, -1000,
	87, -1000, 273, 1572, -1000, 1569, -1000, 444, 496, 303,
	422, 411, 301, 298, 297, 296, 293, 292, 289, 284,
	307, -1000, 617, 617, -194, -195, 2199, 379, 379, 379,
	418, 1970, 1966, -1000, 662, -1000, 617, 617, 617, 285,
	617, 617, 617, 617, 238, 229, 617, 617, 617, 617,
	617, 617, 617, 617, 617, 617, 617, 617, 617, 617,
	617, 617, 617, 314, 2016, 189, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 40032, 291, 40032, -1000, 526,
	40032, 755, 755, 42, 755, 755, 755, 755, 132, 551,
	-10, -1000, 122, 181, 120, 187, 737, 152, -1000, -1000,
	182, 737, 1201, 605, 104, -1000, 755, 755, -1000, 9749,
	136, 9749, 9749, -1000, 2002, -1000, -1000, -1000, -1000, 1205,
	-1000, 417, -1000, -1000, -1000, -1000, 40032, 37067, 315, 666,
	-1000, -1000, -1000, 69, -1000, -1000, 1327, 961, 16895, 1076,
	-1000, 1518, 576, -1000, -1000, -1000, -1000, -1000, 495, 17488,
	17488, 17488, 17488, -1000, -1000, 1609, 1609, 1609, 1609, 17488,
	1609, 17488, 1609, 1609, 1609, 1609, 16895, 1609, 1609, 1609,
	-1000, 1609, 1609, 1609, 1609, 1609, 1609, 1609, 1609, 1609,
	1609, 1609, 1609, 1609, 1609, 1609, 1609, 1609, 1609, 1609,
	1609, 1609, 1609, 1609, 1609, 1609, 1609, 1609, 1609, 1609,
	1609, 1609, 1609, 1609, 1609, 1609, 1609, 1609, 1609, 1609,
	1609, 521, 1609, 1609, 1609, 1609, 1609, -1000, -1000, -1000,
	-1000, 1609, 1609, 1609, 1609, 1609, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 20458, -1000, 14523, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 40032, -1000, 1609,
	139, 40032, 40032, 277, 2092, 1683, -1000, 2167, 2164, 275,
	-1000, 1962, 1585, 1300, 1210, 1683, 1531, 40032, -1000, 1660,
	-1000, -1000, -1000, 1834, 1086, 1200, -1000, -1000, -1000, -1000,
	1337, 16895, -1000, -1000, 2207, -1000, 19865, 520, 811, 2205,
	36474, -1000, 404, 404, 1567, 11543, -38, -1000, -1000, -1000,
	657, 25800, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2002,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1602, 40032, -1000, -1000, 3805, 1187,
	-1000, 1705, -1000, 1575, -1000, 1676, 16895, 1723, 462, 1187,
	442, 441, 439, -1000, -92, -1000, -1000, -1000, -1000, -1000,
	-1000, 617, 617, 617, -1000, 288, 2134, 3516, 5274, -1000,
	-1000, -1000, 35881, 1702, 1187, -1000, 1700, -1000, 741, 483,
	532, 532, 1187, -1000, -1000, 40032, 1187, 739, 728, 40032,
	40032, -1000, 35288, -1000, 34695, 34102, 1011, 40032, 33509, 32916,
	32323, 31730, 31137, -1000, 1886, -1000, 1758, -1000, -1000, -1000,
	40032, 40032, 40032, 287, -1000, -1000, 40032, 1187, -1000, -1000,
	1009, 996, 994, 617, 617, 988, 1191, 1181, 1168, 617,
	617, 970, 1167, 26986, 1153, 234, 963, 958, 957, 1053,
	1140, 172, 1139, 981, 900, 945, 40032, 1698, 40032, -1000,
	174, 631, 348, 645, 2016, 1914, 1558, 416, 449, 1187,
	387, 387, 40032, -1000, 10347, -1000, -1000, 1129, 16895, -1000,
	767, 737, 737, -1000, -1000, -1000, -1000, -1000, -1000, 755,
	40032, 767, -1000, -1000, -1000, 737, 755, 40032, 755, 755,
	755, 755, 737, 737, 737, 755, 40032, 40032, 40032, 40032,
	40032, 40032, 40032, 40032, 40032, 9749, 605, 755, -323, -1000,
	1123, -1000, 1803, -1000, -1000, -1000, -1000, -1000, -1000, 9749,
	9749, -1000, -1000, -1000, -1000, 123, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -95, 1556, 30544, -1000, -329,
	-331, -334, -335, -1000, -1000, -1000, -339, -340, -1000, -1000,
	-1000, 16895, 16895, 16895, 16895, -223, -1000, 956, 17488, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 859, 703, 17488, 17488,
	17488, 17488, 17488, 17488, 17488, 17488, 17488, 17488, 17488, 17488,
	17488, 17488, 17488, 829, 6842, 6842, 576, 576, 576, 576,
	-1000, 16302, 16895, 16895, 576, -1000, 1187, 29951, 16302, 16302,
	16895, 2008, 674, 961, 40032, -1000, 1210, -1000, -1000, -1000,
	1013, -1000, 40032, 40032, 179, 16895, 16895, 16895, 16895, 16895,
	16895, 13332, 16895, 16895, 16895, 16895, 16895, 16895, 16895, 16895,
	16895, 16895, 16895, 16895, 16895, 16895, 16895, 16895, 16895, 16895,
	16895, 16895, 16895, 16895, 16895, 16895, 16895, 16895, 12739, 10347,
	16302, 16302, 16302, 16302, 16302, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 511, 1613, 1294,
	1428, -1000, 1539, -1000, -155, 22242, 16895, 1122, 2190, 1739,
	40032, -1000, -1000, -1000, 2092, -1000, 2092, 1613, 1943, 1848,
	16302, -1000, -1000, 1943, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1305, -1000, 40032, 1531, 2071, 40032, 1807, 1119,
	290, -1000, 16895, 16895, 1525, -1000, 939, 40032, -1000, -223,
	-1000, 29358, -1000, -1000, 9151, -1000, 40032, 281, 40032, -1000,
	21649, 28765, 10945, -38, -1000, 10945, 1387, -1000, -28, -19,
	13925, 558, -1000, -1000, -1000, 2199, 18674, 1295, 558, 57,
	-1000, -1000, -1000, 1676, -1000, 1676, 1676, 1676, 1676, 290,
	290, 290, 290, -1000, -1000, -1000, -1000, -1000, 1694, 1692,
	-1000, 1676, 1676, 1676, 1676, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1691, 1691, 1691, 1677, 1677, 372, -1000, 16895,
	302, 28172, 2039, 942, 1268, 174, 389, 1732, 1187, 1187,
	1187, 389, -1000, 1421, 1296, 1271, -1000, -403, 1507, -1000,
	-1000, 2132, -1000, -1000, 644, 763, 761, 642, 40032, 154,
	280, -1000, 334, -1000, 28172, 1187, 723, 532, 1187, -1000,
	1187, -1000, -1000, -1000, -1000, -1000, 1187, 1503, -1000, 1663,
	810, 754, 806, 712, 1503, -1000, -1000, -138, 1503, -1000,
	1503, -1000, 1503, -1000, 1503, -1000, 1503, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 671, 40032, 154, 829, -1000,
	412, -1000, -1000, -1000, 829, 829, -1000, -1000, -1000, -1000,
	1115, 1113, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -393, 40032, -1000, 167, 641, 246, 294, 252, 40032,
	141, 2075, 244, 226, 40032, 40032, 387, 1792, 40032, 2046,
	40032, -1000, -1000, -1000, -1000, -1000, 961, 40032, -1000, -1000,
	755, 755, -1000, -1000, 40032, 755, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 755, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	40032, -1000, -1000, -1000, -1000, 40032, -1000, -1000, -1000, -1000,
	-1000, 94, -35, 265, -1000, -1000, -1000, -1000, -1000, 2089,
	-1000, 961, 702, 695, -1000, 1609, -1000, -1000, 883, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 859, 17488, 17488, 17488,
	1144, 414, 1362, 824, 882, 999, 999, 863, 863, 581,
	581, 581, 581, 581, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1111, -1000, 1486, -1000, 1857, 1258, 1210, -1000,
	1486, 1486, 928, 16302, -1000, -1000, 678, -1000, 16895, 1210,
	-1000, -1000, 1210, 1210, 1491, 1483, 2185, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1800, 1268,
	1268, 1268, 1268, 1268, 16895, 1202, -1000, -1000, -1000, 2128,
	1907, 1210, 1327, 1210, 1481, -1000, 1901, 1268, 1893, 1845,
	1839, 993, 1810, 1806, 1771, 1268, 1268, 1268, 1180, 1766,
	1749, 1740, 1729, 1695, 1686, 1664, 1622, 1532, 1268, 1210,
	16302, 16302, 1451, 1609, 508, -1000, 1486, 1210, 1210, 1486,
	1486, 10347, 1210, -1000, 40032, -1000, -311, -1000, -52, 545,
	1609, -1000, 26986, 1210, -1000, 6701, -1000, 41218, -1000, -1000,
	-1000, -1000, -1000, 25207, 1635, 1943, -1000, -1000, 1609, 1543,
	-1000, -1000, 290, 23, 24614, -1000, -1000, 961, 961, 16895,
	-1000, -1000, -1000, -1000, -1000, -1000, 506, 2173, 321, 1609,
	-1000, 1501, 2224, -1000, -1000, -1000, 2068, 19272, -1000, 1609,
	1609, 40032, 1610, 1546, -1000, 503, -1000, 1387, -38, -53,
	-1000, -1000, -1000, -1000, 961, -1000, 1231, 282, 325, -1000,
	338, -1000, -1000, -1000, -1000, 1959, 29, -1000, -1000, -1000,
	290, 290, -1000, -1000, -1000, -1000, -1000, -1000, 1108, 1108,
	-1000, -1000, -1000, -1000, -1000, 941, -1000, -1000, -1000, 938,
	-1000, -1000, 1508, 1778, 302, -1000, -1000, 617, 1103, -1000,
	-1000, 1963, 617, 617, 40032, -1000, -1000, 1290, 2039, 167,
	40032, 689, 1789, -1000, 1732, 1732, 1732, 40032, -1000, -1000,
	-1000, -1000, -1000, -1000, -395, 52, 316, -1000, -1000, -1000,
	4267, 40032, 1521, -1000, 150, -1000, 1267, -1000, 40032, -1000,
	1513, 1684, 1187, 1187, -1000, -1000, -1000, 40032, 1609, -1000,
	-1000, -1000, -1000, 424, 2012, 2004, 154, 150, 558, 1187,
	-1000, -1000, -1000, -1000, -1000, -396, 1497, 437, 159, 274,
	40032, 40032, 40032, 40032, 40032, 485, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 208, 409, -1000, 40032, 40032, 525,
	-1000, -1000, -1000, 737, -1000, -1000, 737, -1000, -1000, -1000,
	-1000, -1000, 1989, 40032, -43, -364, -1000, -361, 16895, -1000,
	-1000, -1000, -1000, 813, 413, 1362, 17488, 17488, 16302, -130,
	514, 514, 829, -1000, -1000, -1000, 16895, 16895, 1562, 672,
	-1000, 16895, 815, -1000, -1000, -1000, 16895, 16895, 16895, 1210,
	257, -1000, -1000, -1000, -1000, -1000, 2183, -1000, 16895, 16895,
	16895, -1000, -1000, 16895, 16895, -1000, 16895, 16895, 18081, 1210,
	18081, 16895, 16895, 18081, -1000, -1000, -1000, -1000, 18081, 16895,
	16895, 16895, 16895, 16895, 16895, 16895, 16895, 16895, -1000, -1000,
	1486, 1486, 16302, 10347, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 545, -1000, 532, 532, 532, 40032,
	-1000, -1000, -1000, -1000, -1000, -1000, 1372, 2133, -1000, 1861,
	1856, 2176, 2173, -1000, 21649, 1943, -1000, -1000, 40032, -306,
	-1000, 1890, 1942, -1000, -1000, -1000, -1000, 8553, 2092, 16895,
	1787, 40032, 1609, -1000, 21056, 40032, 40032, 21649, 21649, 21649,
	21649, 21649, -1000, 1824, 1823, -1000, 1817, 1805, 1804, 40032,
	-1000, 1471, 1210, 2164, 19272, 275, 16895, 23428, 1280, 21649,
	-1000, -1000, 21649, 40032, 7955, -1000, -1000, -48, -24, -1000,
	-1000, -1000, -1000, 2199, -1000, -1000, 709, 2063, 1947, -1000,
	-1000, -1000, -1000, 1467, -1000, 1460, 1366, 1454, 121, -1000,
	1714, 1983, 617, 617, -1000, 930, -1000, 1187, 1096, 1094,
	-1000, -1000, -1000, 423, -1000, 2031, 40032, 1786, 1784, 1777,
	-1000, -409, 923, 1682, 1618, 16895, 1681, 2123, 1341, 40032,
	-1000, -1000, 40032, -1000, 145, -1000, 302, 40032, -1000, -1000,
	-1000, 280, 40032, -1000, 6442, 150, -1000, -1000, -1000, -1000,
	-1000, -1000, 40032, 162, -1000, 1678, 1079, -1000, -1000, 1728,
	-1000, -1000, -1000, -1000, 163, 245, -1000, 40032, 471, 1778,
	40032, -1000, -1000, -1000, 755, 755, -1000, -1000, 1979, -1000,
	1187, 1268, 17488, 17488, -1000, 576, -1000, 1609, 1210, 1676,
	1676, -1000, 1676, 1677, -1000, 1676, 108, 1676, 96, 1676,
	-1000, -1000, 1210, 1210, 1133, 1064, -102, -1000, 961, 16895,
	1500, 1484, 1268, -1000, 1673, 1671, 16895, 1268, 1268, 1268,
	-1000, 961, 993, 1453, 1361, -1000, -1000, -1000, -1000, 1352,
	1268, 1414, -304, 1210, 1430, 1430, 1430, 1430, 1430, 1428,
	1428, 1428, 1428, -1000, -1000, 1210, -1000, -1000, 2088, 2088,
	2088, 1399, 40625, 40032, -1000, -1000, -1000, -1000, 2173, 2170,
	1347, -1000, -1000, 23, 336, -1000, 1887, 1942, -1000, 2117,
	1897, 2114, -1000, -1000, -1000, 961, -1000, 2018, 1318, -1000,
	636, 1324, -1000, -1000, 15709, 1415, 1853, 498, 1399, 1477,
	2224, 1743, 1775, 2294, -1000, -1000, -1000, -1000, 1814, -1000,
	1781, -1000, -1000, 1660, -1000, -1000, 1294, 1210, 1407, 281,
	21649, 1335, 1335, -1000, 494, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 794, 6075, 2236, -1000, 1093, -1000, 1081, -1000,
	717, 714, -1000, 40032, 1670, -1000, 290, 1087, 290, 915,
	-1000, 914, -1000, -1000, -239, -1000, -1000, 1715, 1843, -1000,
	-1000, -1000, -1000, 40032, -1000, -1000, 40032, 40032, 40032, 1669,
	2112, -1000, 16895, 1667, 624, 1397, 40032, 40032, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 376, 617,
	-376, 219, 211, 617, 617, 617, -1000, -1000, 1390, 1384,
	-1000, -192, -1000, 16895, -1000, -1000, -1000, 965, 965, -1000,
	1660, -1000, -1000, -1000, 1261, -1000, -1000, -144, 40032, 40032,
	40032, 40032, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 576, 17488, -1000, -1000, 290, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 16895, -1000, 16895, -1000,
	2092, 1082, 961, 16895, 16895, -1000, 912, 908, 1268, -1000,
	-1000, -1000, 1210, 18081, -1000, 18081, -1000, 16895, 209, 514,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1609, 1957, 1609, 1609, 23428, -1000, -1000, 2170, 2166,
	2110, 1849, 1881, 1881, 1887, -1000, 2108, 2107, -1000, 1058,
	2105, 1041, 704, -1000, 40032, 16895, 1609, -1000, 283, 40032,
	1609, 40032, -1000, 2152, -1000, -1000, 16895, 1666, -1000, 16895,
	-1000, -1000, -1000, -1000, -1000, -1000, 6842, 2173, 1335, -1000,
	-1000, 587, -1000, 16895, -1000, -1000, -1000, 2946, -1000, -1000,
	-1000, -1000, -1000, 1662, 16895, -1000, -1000, -1000, 1249, 1239,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1660, -1000,
	-1000, -1000, -1000, 280, -400, 1277, 40032, 874, -1000, 1364,
	1341, 262, 1609, 1024, 617, 617, 617, 854, 842, 26986,
	326, -1000, 280, -1000, -197, -202, 1268, -1000, -1000, 2058,
	-1000, -1000, 10347, -1000, -1000, 1649, 1730, -1000, 310, -1000,
	1268, 1268, 1210, -1000, 1268, 1268, 1226, 1213, -1000, -1000,
	1361, -1000, 918, -1000, 209, 1210, 1770, -1000, -1000, 6842,
	-1000, 24021, -1000, 2098, 2095, 27579, 27579, 545, 2166, -1000,
	16895, 16895, 1878, 851, -1000, -1000, -1000, -1000, 1018, 1017,
	-1000, 1014, -1000, 2233, -1000, 961, -1000, 1609, -1000, 459,
	1324, -1000, 2092, 961, 40032, 961, 25, 2152, -1000, 1268,
	-1000, 1609, 1609, 1609, 1609, 1609, 1609, 1609, 1609, 1609,
	1609, 1609, 1609, 1609, 1609, 1609, 1609, 1609, 1609, 1609,
	1609, 1609, 1609, 1609, 1609, 1609, 1609, 1609, 1609, 1609,
	1609, 1609, 1609, 40032, 1237, -1000, -1000, 2050, 1355, 51,
	-1000, 1338, -1000, -1000, 436, -1000, 16895, -1000, 26986, 1001,
	995, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 275,
	1331, -1000, 614, 40032, 40032, 1210, 255, -178, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 16895, -1000, 1210,
	1769, -1000, -243, -1000, 1333, -1000, -1000, -1000, -1000, -1000,
	1333, 1333, -1000, -1000, 961, 1327, -1000, 844, -1000, -1000,
	-1000, -1000, -1000, 40032, 1324, 40032, -1000, 1313, 1210, 1609,
	2092, -1000, 1311, -1000, 275, -1000, 1586, 1618, -1000, -1000,
	-1000, 15116, -1000, -1000, -1000, -1000, -141, 10347, 7357, 1303,
	-1000, -1000, 1772, -135, -187, 993, -1000, -342, -1000, -1000,
	26393, -1000, -1000, -1000, -1000, -1000, 1321, -1000, -1000, 23428,
	39439, -1000, -128, 822, -141, 16895, 1581, 1210, -1000, -33,
	-1000, -1000, -1000, -1000, -1000, 1728, -1000, 1709, -1000, 1210,
	-1000, -1000, -1000, 1284, -1000, 1394, -269, 1768, -1000, -115,
	-1000, -1000, -1000, 772, 846, -1000, -1000, -1000, -1000, 1208,
	40032, -1000, 341, -1000, -1000, -144, -147, -1000, -1000, 39439,
	-263, 558, 6842, -1000, 1753, 1752, 2189, -1000, -1000, -1000,
	-1000, -1000, -1000, -412, 1282, 171, -1000, -180, -1000, -1000,
	2028, 25, -1000, 2232, -1000, 2219, 578, 578, -1000, 834,
	-412, -1000, -188, -273, -1000, -1000, -1000, -1000, -1000, 333,
	881, -1000, -1000, -1000, -1000, 6842, -1000, -1000, -1000, 203,
	203, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2551, 2550, 22, 3, 2548, 2547, 2545, 41, 111,
	174, 29, 178, 96, 2542, 2541, 2540, 2539, 2538, 2535,
	2534, 219, 216, 205, 2533, 2532, 2531, 2530, 2527, 2525,
	2524, 2523, 2522, 2521, 209, 157, 173, 2520, 2519, 2518,
	100, 168, 83, 85, 171, 2515, 2513, 76, 2512, 2511,
	2510, 165, 164, 162, 745, 2509, 163, 104, 40, 2508,
	2507, 2506, 2505, 2504, 2503, 2502, 2501, 2500, 2499, 2498,
	2497, 2496, 2494, 2493, 2492, 2491, 317, 2490, 2488, 15,
	2487, 78, 2486, 2485, 2484, 2483, 122, 2478, 2477, 2476,
	2475, 2474, 2473, 2471, 136, 2469, 2468, 2467, 2466, 177,
	2465, 2464, 220, 106, 101, 2463, 2457, 95, 167, 2456,
	107, 2454, 2453, 2452, 148, 2451, 4409, 2450, 67, 65,
	2449, 55, 84, 61, 48, 37, 4, 2447, 2444, 66,
	90, 2443, 97, 77, 2440, 91, 105, 2436, 2435, 9,
	1, 2434, 10, 12, 2, 69, 2432, 2431, 117, 2426,
	2425, 2423, 93, 2422, 2421, 4343, 2418, 89, 128, 98,
	74, 2416, 36, 59, 2415, 2414, 2413, 2412, 2411, 45,
	2410, 2406, 2405, 137, 34, 156, 32, 26, 46, 127,
	2403, 166, 79, 2402, 135, 133, 2401, 58, 23, 28,
	2400, 31, 126, 115, 25, 94, 145, 2398, 2397, 52,
	75, 2390, 2386, 2385, 2384, 2383, 2380, 70, 2379, 49,
	2377, 175, 2376, 8, 2375, 43, 35, 2374, 68, 123,
	71, 33, 2373, 229, 2372, 47, 155, 130, 153, 2359,
	2358, 2357, 2355, 170, 255, 2353, 2351, 80, 161, 140,
	147, 2350, 269, 2348, 2345, 92, 1040, 1956, 20, 154,
	2344, 2342, 2961, 138, 27, 16, 2340, 172, 2339, 2335,
	2334, 179, 158, 110, 925, 50, 2333, 2332, 13, 2331,
	2330, 2329, 2328, 2327, 2321, 86, 2320, 2319, 2318, 181,
	63, 11, 150, 73, 2315, 2313, 2312, 118, 99, 2311,
	152, 151, 120, 192, 2310, 159, 146, 180, 2309, 131,
	2308, 2307, 2306, 2303, 2301, 88, 2298, 2287, 2286, 2285,
	149, 143, 116, 82, 2284, 81, 124, 141, 144, 44,
	2282, 38, 2281, 2279, 2277, 169, 24, 2275, 18, 53,
	60, 21, 103, 142, 2272, 0, 2268, 14, 160, 263,
	186, 2267, 2264, 7, 6, 5, 2262, 2261, 2260, 2259,
	134, 2257, 2254, 2253, 19, 39, 17, 30, 2252, 2250,
	4587, 3254, 125, 2236, 182,
}

//line sql.y:6846
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 358, 359, 359, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 335, 335,
	335, 338, 338, 32, 71, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 84, 84, 22, 23, 23, 23, 23,
	362, 362, 150, 150, 148, 148, 149, 149, 218, 218,
	24, 25, 25, 228, 228, 227, 227, 227, 229, 229,
	229, 229, 264, 264, 26, 26, 26, 26, 26, 100,
	100, 337, 337, 336, 328, 328, 327, 327, 326, 334,
	334, 333, 333, 332, 38, 39, 48, 48, 48, 48,
	49, 50, 339, 339, 301, 55, 55, 54, 54, 54,
	54, 54, 54, 56, 56, 52, 52, 51, 51, 53,
	53, 303, 303, 289, 289, 302, 302, 302, 302, 302,
	302, 302, 288, 288, 111, 111, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 353, 353, 198,
	198, 198, 198, 198, 198, 120, 120, 129, 129, 129,
	129, 129, 118, 118, 119, 117, 117, 117, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	357, 357, 357, 357, 357, 357, 357, 357, 357, 357,
	357, 357, 357, 357, 357, 357, 357, 357, 357, 357,
	357, 357, 357, 357, 357, 357, 357, 357, 357, 357,
	357, 357, 357, 357, 357, 357, 357, 357, 357, 357,
	357, 128, 128, 124, 124, 124, 125, 125, 125, 126,
	126, 354, 354, 354, 354, 268, 268, 268, 268, 271,
	271, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	270, 270, 270, 270, 270, 272, 272, 272, 272, 272,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 274, 274, 274, 274, 274,
	274, 274, 274, 287, 287, 275, 275, 282, 282, 283,
	283, 283, 284, 284, 284, 285, 285, 280, 280, 280,
	280, 280, 280, 281, 281, 281, 290, 315, 315, 314,
	314, 312, 312, 312, 312, 312, 312, 312, 312, 299,
	299, 309, 309, 309, 309, 309, 298, 298, 294, 294,
	294, 295, 295, 296, 296, 293, 293, 297, 297, 311,
	311, 310, 310, 291, 291, 292, 292, 317, 355, 355,
	355, 355, 355, 356, 356, 318, 346, 348, 348, 348,
	347, 347, 344, 345, 343, 343, 343, 343, 343, 81,
	81, 81, 241, 241, 241, 307, 307, 306, 306, 306,
	308, 308, 305, 305, 305, 305, 305, 305, 305, 305,
	305, 305, 305, 305, 305, 305, 305, 305, 305, 305,
	305, 305, 305, 305, 305, 305, 305, 305, 305, 305,
	305, 305, 305, 236, 236, 236, 342, 342, 342, 342,
	342, 342, 341, 341, 341, 304, 304, 304, 340, 340,
	57, 57, 182, 182, 45, 45, 45, 45, 45, 45,
	44, 44, 44, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 46, 46, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 86, 86, 87,
	87, 87, 87, 89, 89, 89, 320, 320, 58, 58,
	3, 3, 138, 140, 141, 141, 139, 139, 139, 139,
	139, 139, 60, 60, 59, 59, 143, 142, 144, 144,
	144, 1, 1, 2, 2, 4, 4, 325, 325, 325,
	325, 325, 325, 325, 325, 325, 325, 325, 325, 325,
	325, 325, 325, 325, 325, 325, 325, 325, 325, 286,
	286, 286, 319, 319, 321, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 323, 323, 323, 61, 61, 324,
	276, 277, 278, 5, 6, 300, 322, 96, 96, 28,
	37, 37, 29, 29, 29, 29, 30, 30, 62, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 235,
	235, 243, 243, 234, 234, 257, 257, 257, 237, 237,
	237, 238, 238, 352, 352, 352, 231, 231, 64, 64,
	64, 66, 66, 67, 68, 68, 259, 259, 260, 260,
	69, 70, 82, 82, 82, 82, 82, 82, 85, 85,
	85, 15, 15, 15, 15, 78, 78, 78, 14, 14,
	65, 65, 72, 349, 349, 350, 351, 351, 351, 351,
	73, 75, 31, 31, 31, 31, 31, 31, 106, 106,
	94, 94, 94, 94, 94, 94, 94, 94, 94, 94,
	94, 94, 101, 101, 101, 95, 95, 363, 76, 77,
	77, 99, 99, 99, 92, 92, 92, 98, 98, 98,
	16, 16, 17, 217, 217, 18, 18, 103, 103, 105,
	105, 105, 105, 105, 107, 107, 107, 107, 107, 107,
	107, 102, 102, 104, 104, 104, 104, 250, 250, 250,
	249, 249, 132, 132, 134, 133, 133, 135, 135, 136,
	136, 136, 136, 180, 180, 158, 158, 215, 215, 213,
	213, 214, 214, 216, 216, 216, 216, 219, 219, 137,
	137, 137, 137, 145, 145, 146, 146, 147, 147, 258,
	258, 255, 255, 255, 254, 254, 151, 151, 151, 153,
	152, 152, 152, 152, 154, 154, 156, 156, 155, 155,
	157, 162, 162, 161, 161, 159, 159, 159, 159, 160,
	160, 160, 160, 163, 163, 116, 116, 116, 116, 116,
	116, 116, 127, 127, 127, 127, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 83, 83, 83, 232, 232, 164, 164,
	172, 172, 172, 172, 165, 165, 165, 165, 165, 165,
	165, 173, 173, 173, 179, 174, 174, 170, 170, 170,
	170, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 266,
	266, 331, 331, 330, 330, 329, 329, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 364, 364,
	279, 279, 279, 279, 171, 171, 171, 171, 171, 97,
	97, 97, 97, 97, 263, 263, 263, 267, 267, 267,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 185, 185, 93, 93, 183,
	183, 184, 186, 186, 181, 181, 181, 167, 167, 167,
	187, 187, 188, 188, 189, 189, 191, 190, 190, 192,
	193, 193, 193, 194, 194, 195, 195, 195, 47, 47,
	47, 47, 47, 42, 42, 42, 42, 43, 43, 43,
	108, 108, 108, 108, 110, 110, 109, 109, 79, 79,
	80, 80, 80, 114, 114, 115, 115, 115, 112, 112,
	113, 113, 211, 211, 196, 196, 196, 203, 203, 203,
	199, 199, 201, 201, 201, 202, 202, 202, 200, 208,
	208, 210, 210, 209, 209, 205, 205, 206, 206, 207,
	207, 207, 204, 204, 166, 166, 166, 166, 166, 212,
	212, 212, 212, 220, 220, 176, 176, 178, 178, 177,
	131, 221, 221, 225, 222, 222, 226, 226, 226, 226,
	226, 223, 223, 224, 224, 251, 251, 251, 230, 230,
	242, 242, 239, 239, 240, 240, 233, 233, 244, 244,
	244, 74, 175, 175, 316, 316, 313, 247, 247, 248,
	248, 252, 252, 256, 256, 253, 253, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 360, 361,
	261, 262, 262, 262,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 1,
	2, 2, 2, 0, 1, 4, 4, 4, 4, 4,
	4, 2, 4, 1, 3, 1, 1, 3, 4, 3,
	3, 3, 5, 10, 0, 2, 0, 2, 3, 5,
	3, 4, 2, 3, 2, 3, 3, 1, 1, 0,
	2, 2, 3, 3, 2, 1, 1, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 3, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 2, 2, 2, 2,
	3, 3, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 5, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 3, 0, 5, 0,
	3, 5, 0, 1, 1, 0, 1, 0, 2, 2,
	2, 1, 1, 0, 2, 2, 5, 0, 1, 1,
	2, 1, 3, 2, 1, 1, 3, 3, 3, 0,
	1, 4, 3, 3, 4, 2, 0, 2, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 0, 1, 1,
	3, 3, 4, 3, 1, 3, 1, 7, 6, 7,
	7, 8, 8, 0, 1, 5, 2, 1, 1, 1,
	0, 1, 3, 3, 1, 1, 2, 2, 2, 0,
	1, 1, 0, 1, 2, 0, 1, 1, 3, 2,
	1, 2, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 4, 5, 0, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 1, 0, 2, 0, 1, 5, 1, 3, 7,
	1, 3, 3, 1, 2, 2, 2, 5, 5, 5,
	6, 8, 6, 5, 5, 2, 2, 2, 2, 3,
	3, 3, 4, 1, 3, 5, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 3, 4, 4,
	2, 11, 3, 6, 8, 6, 6, 6, 13, 8,
	6, 10, 5, 5, 5, 5, 5, 0, 6, 5,
	6, 4, 5, 0, 8, 9, 0, 3, 0, 1,
	0, 3, 8, 4, 1, 3, 3, 6, 7, 7,
	8, 4, 0, 1, 0, 1, 3, 3, 1, 1,
	2, 1, 1, 0, 2, 0, 2, 5, 3, 7,
	4, 4, 4, 4, 3, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 0,
	2, 2, 1, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 2, 2, 4, 4, 3, 0, 1, 4,
	3, 4, 4, 3, 3, 3, 2, 1, 3, 3,
	3, 5, 7, 7, 6, 5, 3, 2, 3, 3,
	3, 7, 3, 3, 3, 3, 4, 7, 5, 2,
	4, 4, 4, 4, 4, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 4, 2, 2, 4, 4, 4,
	4, 4, 3, 3, 3, 5, 2, 3, 3, 2,
	3, 4, 4, 4, 3, 4, 4, 5, 3, 0,
	1, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 2, 0, 1, 1, 1, 1, 2, 1,
	3, 1, 2, 1, 1, 5, 0, 1, 0, 1,
	2, 3, 0, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 3, 3,
	2, 2, 3, 1, 3, 2, 1, 2, 1, 2,
	2, 4, 3, 3, 6, 4, 7, 6, 1, 3,
	2, 2, 2, 2, 1, 1, 1, 3, 2, 1,
	1, 1, 0, 1, 1, 0, 3, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 1, 0, 1, 1,
	5, 5, 4, 0, 2, 4, 4, 0, 1, 0,
	1, 2, 3, 4, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 1, 0, 1, 2, 1, 3, 1, 1, 1,
	4, 3, 1, 3, 4, 3, 7, 0, 3, 1,
	3, 1, 3, 1, 1, 3, 3, 1, 3, 4,
	4, 4, 3, 2, 4, 0, 1, 0, 2, 0,
	1, 0, 1, 2, 1, 1, 1, 2, 2, 1,
	2, 3, 2, 3, 2, 2, 2, 1, 1, 3,
	3, 0, 1, 1, 2, 6, 5, 6, 6, 0,
	2, 3, 3, 0, 2, 3, 3, 3, 2, 3,
	1, 6, 3, 4, 3, 1, 3, 4, 5, 6,
	3, 4, 5, 6, 3, 4, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 3, 1, 1, 2, 2, 2,
	2, 1, 1, 2, 9, 6, 6, 6, 2, 2,
	3, 3, 3, 1, 1, 1, 0, 3, 1, 1,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 5, 5,
	6, 4, 4, 8, 6, 8, 6, 8, 5, 4,
	2, 2, 1, 2, 2, 2, 8, 8, 6, 5,
	4, 4, 4, 4, 4, 7, 4, 6, 6, 6,
	4, 4, 4, 7, 8, 6, 5, 6, 8, 11,
	7, 8, 8, 9, 4, 4, 4, 4, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 4, 0,
	2, 0, 2, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	0, 2, 3, 3, 4, 4, 4, 4, 4, 0,
	3, 4, 7, 3, 1, 1, 1, 0, 5, 5,
	2, 3, 1, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 2, 1, 1, 0, 1, 0, 2, 1,
	2, 4, 0, 2, 1, 3, 5, 1, 2, 2,
	0, 3, 0, 2, 0, 1, 3, 1, 3, 2,
	0, 1, 1, 0, 1, 2, 4, 4, 0, 2,
	2, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	0, 3, 3, 3, 0, 3, 1, 1, 0, 4,
	0, 1, 1, 0, 3, 1, 3, 2, 1, 1,
	0, 1, 2, 4, 9, 3, 5, 0, 3, 3,
	0, 1, 0, 2, 2, 0, 2, 2, 2, 0,
	2, 1, 2, 3, 3, 0, 2, 1, 2, 3,
	4, 3, 0, 1, 2, 1, 5, 4, 4, 1,
	3, 3, 5, 0, 5, 1, 3, 1, 2, 3,
	1, 1, 3, 3, 1, 3, 3, 3, 3, 3,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 0, 3, 0, 1, 0, 1,
	1, 5, 0, 1, 0, 1, 2, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -358, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -62, -63, -64, -66,
	-67, -68, -69, -70, -14, -65, -31, -32, -71, -72,
	-73, -74, -75, -16, -17, -18, -9, -8, -13, 9,
	10, -84, -33, 32, -38, -48, 218, -49, -39, 219,
	-50, 221, 220, 257, 222, 250, 74, 299, 300, 302,
	303, 304, 305, -85, 255, 256, 224, 36, 45, 33,
	34, 37, 228, 263, 264, 227, -10, -34, 8, -360,
	11, 429, 252, 251, 28, -12, 463, 85, -359, 602,
	-211, -196, 22, 33, 29, -195, -191, -99, -196, 20,
	18, 7, -76, -363, -76, -76, 12, 13, -76, -301,
	-303, 85, 155, 85, -76, -55, -54, -52, -51, -53,
	-56, 31, -45, -46, -325, -44, -41, 223, 220, 267,
	119, 120, 257, 258, 259, 222, 241, 256, 260, 255,
	276, -40, 80, 33, 463, 466, -308, 219, 225, 226,
	430, 122, 121, 75, 221, -305, 353, 495, 572, -56,
	574, 101, 103, 573, 44, 231, 575, 576, 577, 501,
	578, 240, 579, 580, 581, 582, 588, 543, 589, 590,
	591, 123, 7, -76, -256, -252, -335, -246, 88, 89,
	90, 460, 243, 493, 494, 292, 80, 41, 350, 353,
	495, 572, 299, 313, 307, 334, 326, 461, 496, 295,
	244, 280, 569, 324, 131, 574, 298, 497, 258, 358,
	359, 360, 101, 302, 396, 587, 297, 498, 585, 103,
	573, 79, 51, 44, 253, 322, 227, 318, 575, 281,
	499, 471, 274, 122, 119, 594, 36, 316, 50, 30,
	584, 121, 49, 576, 146, 500, 577, 501, 362, 341,
	563, 48, 363, 259, 502, 83, 264, 465, 571, 364,
	317, 365, 291, 583, 224, 503, 555, 366, 367, 564,
	504, 342, 346, 505, 388, 368, 601, 52, 506, 507,
	565, 120, 508, 78, 578, 311, 312, 509, 289, 242,
	390, 338, 442, 449, 450, 107, 108, 445, 109, 451,
	110, 452, 453, 454, 443, 111, 104, 444, 455, 456,
	339, 340, 112, 457, 106, 105, 446, 448, 113, 458,
	240, 35, 369, 462, 293, 58, 268, 391, 46, 344,
	598, 45, 559, 510, 562, 337, 333, 439, 53, 511,
	512, 513, 514, 579, 336, 310, 332, 593, 4, 286,
	580, 62, 226, 348, 347, 349, 275, 387, 329, 515,
	516, 517, 247, 81, 518, 319, 21, 519, 520, 370,
	282, 521, 56, 522, 523, 394, 256, 524, 54, 581,
	39, 525, 261, 595, 582, 526, 527, 528, 529, 263,
	530, 372, 531, 371, 343, 345, 270, 373, 464, 532,
	315, 260, 586, 533, 248, 570, 262, 267, 255, 395,
	249, 534, 535, 536, 537, 538, 296, 554, 539, 540,
	303, 588, 440, 43, 541, 542, 543, 544, 545, 290,
	285, 389, 398, 61, 82, 355, 546, 547, 568, 309,
	283, 548, 300, 55, 589, 590, 591, 277, 592, 9,
	599, 600, 375, 123, 287, 288, 47, 330, 269, 549,
	550, 320, 321, 335, 308, 331, 301, 556, 271, 376,
	441, 257, 551, 397, 284, 351, 356, 468, 276, 377,
	567, 467, 328, 325, 278, 552, 378, 232, 272, 273,
	553, 557, 379, 380, 294, 381, 382, 383, 384, 385,
	386, 279, 466, 306, 323, 357, 410, 411, 412, 413,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 438, 230, -76, 230, -155, -252,
	230, -223, 359, -243, 361, 374, 369, 379, 367, -235,
	370, 372, 270, -352, 388, 230, 376, 218, 362, 371,
	380, 381, 294, 382, 386, 279, 383, 384, 385, -335,
	172, 577, 592, 131, 327, 366, 364, 389, 559, -252,
	301, -259, 306, -247, -335, -246, 304, -155, -82, 555,
	222, -261, -261, -101, 559, 561, -174, -116, 139, -127,
	-130, -121, -122, -168, -169, -170, -171, -128, -181, 161,
	162, 169, 140, -179, -131, 26, 459, 431, 430, 172,
	31, 214, 68, 69, 433, 434, 142, 57, 406, 407,
	-129, 401, 408, 403, 436, 437, 114, 438, 104, 106,
	105, 439, 440, 441, 339, 340, 442, 443, 444, 107,
	108, 109, 110, 111, 112, 113, 445, 448, 446, 447,
	449, 450, 451, 456, 457, 452, 453, 454, 455, 458,
	-247, -252, 235, 400, 229, 167, 429, -123, -119, -8,
	-177, 399, 404, 405, 409, 402, -335, -246, -125, -124,
	-164, 91, 97, 102, 98, -357, 115, -360, 92, 93,
	94, 95, 96, 116, 117, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 44, 375, 375, -155,
	-76, -76, -76, -76, -189, -99, -191, -10, -8, -360,
	8, -76, -8, -9, -13, -34, -36, 489, -35, -252,
	-196, -211, 12, 157, 42, 50, -194, -195, -12, -8,
	-116, 19, 23, 24, -104, 163, -116, -252, -77, -104,
	-233, 234, -76, -76, -222, -264, 301, -226, 389, 388,
	-248, -224, -247, -245, -223, 387, 223, 23, 469, 138,
	25, 27, 141, 172, 126, 19, 142, 37, 225, 327,
	241, 171, 237, 430, 218, 72, 470, 401, 403, 399,
	406, 432, 433, 400, 361, 31, 13, 472, 28, 251,
	24, 38, 165, 220, 145, 473, 254, 26, 252, 114,
	117, 475, 22, 75, 246, 14, 239, 40, 16, 476,
	477, 17, 235, 234, 157, 231, 70, 11, 214, 29,
	154, 66, 478, 133, 479, 480, 481, 482, 127, 68,
	155, 20, 596, 404, 405, 33, 560, 459, 265, 167,
	73, 59, 561, 139, 402, 483, 484, 115, 485, 118,
	76, 566, 135, 18, 71, 42, 486, 266, 487, 236,
	597, 488, 392, 489, 156, 221, 429, 69, 490, 229,
	374, 8, 435, 32, 250, 238, 125, 67, 491, 230,
	144, 436, 437, 233, 128, 116, 7, 132, 34, 12,
	74, 77, 407, 408, 409, 57, 124, 463, 143, 15,
	492, 393, 137, 131, -302, 155, -288, -292, -247, 245,
	-318, 241, -155, -311, -310, -247, -360, -100, -242, 231,
	239, 238, 132, -339, 135, 287, 400, 229, -51, -52,
	-53, -223, 171, 576, -86, 262, 266, 86, 86, -292,
	-291, -290, -340, 266, 245, -317, -309, 237, 246, -298,
	238, 239, -293, 231, 133, -340, -293, 236, 246, 266,
	266, 123, 266, 123, 266, 266, 266, 266, 266, 266,
	266, 266, 266, 261, -299, 147, -299, 467, 467, -305,
	-340, -340, -340, 233, 35, 35, -244, -293, 233, 25,
	-299, -299, -299, -223, 171, -299, -299, -299, -299, 274,
	274, -299, -299, -299, -299, -299, -299, -299, -299, -299,
	-299, -299, -299, -299, -299, -299, -299, -299, 230, -339,
	-108, 386, 294, 80, -54, 276, -37, -155, -242, 231,
	232, -339, 263, -155, 215, -155, -237, 155, 15, -237,
	-234, 375, 373, 360, 365, -237, -237, -237, -237, 277,
	358, -294, 231, 35, 242, 375, 277, 358, 277, 278,
	277, 278, 368, 378, 277, -257, 14, 157, 400, 363,
	367, 270, 230, 271, 232, 377, 278, -257, 92, -238,
	155, 375, 273, -237, -237, -262, -360, -248, 327, -335,
	562, -262, -262, 32, 89, 233, -247, -78, -247, 92,
	-15, -11, -22, -21, -23, 147, -106, 375, -94, 172,
	577, 563, 564, 565, 562, 372, 570, 568, 566, 277,
	567, 86, 135, 137, 138, 4, -116, 154, -165, 147,
	148, 149, 150, 151, 152, 153, 157, 139, 141, 155,
	156, 136, 158, 159, 160, 161, 162, 163, 164, 166,
	165, 167, 168, 171, 216, 217, -122, -122, -122, -122,
	-179, -360, -360, -360, -122, -232, -360, -122, -360, -360,
	-360, -360, -185, -116, -360, -364, -360, -364, -364, -279,
	-360, -279, -360, -360, -360, -360, -360, -360, -360, -360,
	-360, -360, -360, -360, -360, -360, -360, -360, -360, -360,
	-360, -360, -360, -360, -360, -360, -360, -360, -360, -360,
	-360, -360, -360, -360, -360, -360, -360, -360, -360, 215,
	-360, -360, -360, -360, -360, -279, -279, -279, -279, -279,
	102, 97, 91, -181, 98, 92, -247, -252, -8, -9,
	-174, -261, -349, -350, -158, -155, -360, 294, -247, -247,
	263, -194, -12, -8, -189, -195, -191, -8, -76, -92,
	-105, 63, 64, -107, 24, 38, 67, 65, 23, -361,
	87, -361, -211, -361, 86, -36, -215, 85, 61, 43,
	92, 92, 86, 21, -190, -192, -116, 14, -250, 4,
	-249, 25, -247, 92, 215, 100, 14, -156, 29, -155,
	-233, -233, 86, 301, -226, -264, -228, -227, 390, 392,
	147, -251, -247, 92, 31, 87, 86, -155, -268, -271,
	-273, -272, -274, -269, -270, 324, 325, 172, 328, 330,
	331, 332, 333, 334, 335, 336, 337, 338, 341, 32,
	253, 320, 321, 322, 323, 342, 343, 344, 345, 346,
	347, 348, 349, 307, 326, 461, 308, 309, 310, 311,
	312, 313, 315, 316, 317, 318, 319, -338, -335, 85,
	87, 86, -275, 85, -116, -108, 230, -335, 231, 231,
	231, -76, 429, -299, -299, -299, 261, 19, -44, -41,
	-325, 18, -40, -41, 223, 119, 120, 220, 85, -288,
	85, -297, -338, -335, 85, 133, 236, 132, -296, -293,
	-296, -297, -335, -181, -335, 133, 133, -219, -247, -219,
	-219, 23, -219, 23, -219, 23, 94, -247, -219, 23,
	-219, 23, -219, 23, -219, 23, -219, 23, 31, 78,
	79, 31, 81, 82, 83, -181, -181, -288, -223, -155,
	-335, 94, 94, 94, -299, -299, 94, 92, 92, 92,
	-299, -299, 94, 92, -254, -252, 92, 92, -341, 247,
	291, 293, 94, 94, 94, 94, 31, 92, -342, 31,
	584, 583, 585, 586, 587, 92, 94, 31, 94, 31,
	94, -247, 85, -155, -114, 281, 218, 220, 223, 76,
	92, 295, 147, 44, 86, 233, 230, -335, -239, 235,
	-239, -247, -253, -252, -245, 92, -116, -295, 14, 157,
	-257, -257, -237, -155, -295, -257, -237, -155, -237, -237,
	-237, -237, -257, -257, -257, -237, -252, -252, -155, -155,
	-155, -155, -155, -155, -155, -262, -238, -237, 562, 92,
	-231, 14, 76, -262, -262, -260, 304, 338, 556, 557,
	558, 86, 463, -148, -155, 562, 562, 562, 562, 562,
	562, -116, -116, -116, -116, 485, -172, 115, 139, 116,
	117, -130, -173, -177, -179, 99, 157, 141, 155, 156,
	-121, -122, -121, -121, -121, -121, -121, -121, -121, -121,
	-121, -121, -121, -121, -121, -263, -335, 92, 172, -126,
	-125, 98, -357, -126, -102, -104, -116, -116, -335, -247,
	-102, -102, -116, -98, 24, 38, -183, -184, 143, -181,
	-361, -361, 94, 98, -247, -247, -91, -90, 411, 412,
	413, 414, 416, 417, 418, 421, 422, 426, 427, 410,
	428, 415, 420, 423, 424, 425, 419, 323, -116, -116,
	-116, -116, -116, -116, -83, -116, 126, 127, 128, -116,
	-116, -175, -174, -334, -333, -332, -116, -116, -116, -116,
	-116, -116, -116, -116, -116, -116, -116, -116, -116, -116,
	-116, -116, -116, -116, -116, -116, -116, -116, -116, -103,
	24, 38, -102, -248, -253, -245, -102, -103, -103, -102,
	-102, 215, -211, -361, 86, -351, 392, 393, 560, -255,
	266, -254, 25, -175, 92, 14, -217, 77, -247, -194,
	-194, 63, 64, 59, -102, -107, -361, -35, 25, -213,
	-247, 62, 92, -280, -223, 350, 351, -116, -116, 86,
	-193, 27, 28, -155, -249, 163, -253, -155, -218, 266,
	-155, -133, -135, -136, -137, -158, -180, -360, -138, 481,
	478, 14, -148, -149, -157, -252, -226, -228, 86, 391,
	393, 394, 76, 118, -116, -281, 171, -307, -306, -305,
	-288, -290, -291, -292, 87, -281, -284, 356, 355, -275,
	-275, -275, -275, -275, -280, -280, -280, -280, 85, 85,
	-275, -275, -275, -275, -282, 85, -282, -282, -283, 85,
	-283, -318, -116, -315, -314, -312, -313, 240, 101, 553,
	509, 463, 501, 543, 77, -310, -193, 94, -361, -114,
	-240, 235, -316, -313, -335, -335, -335, -240, -335, 92,
	-335, 92, -335, 92, -87, -58, -1, 596, 597, 598,
	86, 19, -289, -288, -57, 291, -321, -322, 266, -317,
	-311, -297, 133, -296, -297, -297, -335, 86, 29, 123,
	123, 123, 123, 463, 220, 32, -288, -57, -263, 233,
	-263, -263, 92, 92, -236, 592, -148, -110, 283, 147,
	272, 272, 230, 230, 285, -155, 296, 298, 297, 295,
	23, 284, 286, 288, 274, -155, -155, -239, 76, -150,
	-155, 26, -252, -155, -237, -237, -155, -237, -237, -155,
	-247, -94, 392, 86, 463, 22, -95, 22, -360, 115,
	116, 117, -173, -121, -122, -121, 138, 254, 86, -361,
	25, 86, 77, -361, -361, -361, 86, 14, -102, -186,
	-184, 145, -116, -361, -361, -361, 86, 86, 14, -267,
	25, -361, -361, -361, -361, -361, -185, -361, 14, 86,
	86, -361, -361, 86, 86, -361, 86, 86, 86, -331,
	86, 86, 86, 86, -361, -361, -361, -361, 86, 86,
	86, 86, 86, 86, 86, 86, 86, 86, -361, -361,
	-102, -102, -360, 215, -361, -361, -361, -361, -361, -248,
	-350, 559, 393, -162, -161, -159, 74, 234, 75, -360,
	-254, -361, -126, 89, -214, 89, -213, -167, -247, 94,
	98, -196, -132, -134, 14, -107, -179, 87, 86, -280,
	-200, -205, -234, -247, 92, 172, -192, 215, -163, 15,
	-166, 32, 57, -11, -360, -360, 32, 86, -151, -153,
	-152, -154, 66, 70, 72, 67, 68, 69, 73, -258,
	25, -133, -9, -8, -360, -360, -360, -155, -148, -362,
	14, 77, -362, 86, 215, -227, -229, 395, 392, 398,
	-335, 92, -86, 86, -305, -292, -197, -111, 40, -285,
	357, -280, -280, -287, 92, -287, 94, 94, 87, -47,
	-42, -43, 33, 80, -312, -299, 92, 39, -299, -299,
	-247, 87, -193, -110, -155, 139, 76, -316, -316, -316,
	-252, -2, 595, 601, 133, 85, 360, 18, -213, 86,
	87, -182, 292, 87, -88, -247, 87, 85, -297, -297,
	-247, -360, 230, 31, 31, -57, -182, -281, -335, 594,
	593, 87, 232, 290, -115, 406, -112, 92, 88, -155,
	-155, -155, -155, -155, 223, 220, 275, 233, -148, -155,
	86, -81, 249, 244, -257, -257, 33, -155, 392, 571,
	569, -116, 138, 254, -130, -122, -104, 460, -265, 172,
	324, 253, 322, 318, 338, 329, 355, 320, 356, 317,
	316, 315, -265, -263, -116, -116, -189, 146, -116, 144,
	-116, -116, -116, -361, 172, 324, 14, -116, -116, -116,
	-332, -116, -116, -116, -330, -329, -126, -181, -361, -330,
	-116, -116, -329, -329, -333, -333, -333, -333, -333, -174,
	-174, -174, -174, -361, -361, -103, -248, -159, -293, -293,
	-293, -219, 86, -230, 22, 14, 57, 57, -132, -163,
	-133, -107, -247, -203, 555, -208, 46, -206, -207, 47,
	-204, 48, 56, 163, -194, -116, -220, 76, -221, -225,
	-181, -176, -178, -177, -360, -212, -361, -247, -219, -221,
	-135, -136, -136, -135, -136, 66, 66, 66, 71, 66,
	71, 66, -152, -252, -361, -361, -9, -9, -116, -255,
	77, -133, -133, -157, -252, 163, 392, 396, 397, -305,
	-356, 115, 139, 31, 76, 353, 101, -354, 171, -355,
	236, 132, 133, 248, 25, 41, 87, 86, 87, 86,
	87, 86, -241, 500, 139, -43, -42, -299, -299, 94,
	-335, 92, 92, 232, 26, -155, 76, 76, 76, -89,
	599, 94, 85, -3, 80, -116, 85, 19, -288, -181,
	-323, -276, -324, -277, -278, -5, -6, -300, 57, 101,
	-61, 44, 231, 579, 580, 123, 592, -315, -213, -319,
	-321, -155, -118, -360, -117, -119, -123, 161, 162, -182,
	-155, -109, 281, 289, 85, -113, 89, -337, 77, 272,
	353, 272, -155, -81, -47, -155, -237, -237, 33, -335,
	-361, -130, -122, -360, -361, -275, -275, -275, -283, -275,
	312, -275, 312, -275, -361, -361, 86, -361, 22, -361,
	-93, 435, -116, 86, 86, -361, 85, 85, -116, -361,
	-361, -361, -331, 86, -361, 86, -361, 86, -266, 554,
	-361, -361, -361, -361, -361, -361, -361, -361, -361, -361,
	-361, -160, 22, -160, -160, -361, 89, -155, -163, -187,
	16, -200, 51, 330, -210, -209, 55, 47, -207, 19,
	49, 19, 30, -220, 86, 147, 86, -361, -361, 86,
	57, 215, -361, -163, -146, -145, 76, 77, -147, 76,
	-145, 66, 66, -215, -361, -361, 86, -218, -133, -163,
	-163, 215, 115, -360, -120, -129, -118, 12, 92, 92,
	-335, 133, 133, -155, 85, -280, 92, -280, 94, 94,
	500, 31, 81, 82, 83, 31, 78, 79, -155, -155,
	-155, -155, -320, 85, 19, -116, 85, 147, 87, -213,
	-213, 268, 157, -299, 577, 274, 274, -299, -299, -299,
	87, -361, 86, -286, 463, 466, -116, -124, -124, -215,
	87, -328, 463, -336, -247, -247, -247, -247, -121, -280,
	-116, -116, -194, 92, -116, -116, 94, 94, -361, -361,
	-330, -329, -116, -361, -143, -142, -144, 563, 115, 31,
	-265, -360, 66, 18, 16, -360, -360, -255, -187, -188,
	17, 19, -201, 53, -199, 52, -199, -209, 19, 19,
	92, 19, 92, 133, -225, -116, -178, 57, -11, -247,
	-176, -247, -189, -116, 85, -116, -126, -163, -163, -116,
	-169, 438, 104, 106, 105, 439, 440, 441, 339, 340,
	442, 443, 444, 107, 108, 109, 110, 111, 112, 113,
	445, 448, 446, 449, 450, 451, 456, 457, 452, 453,
	454, 455, 458, 85, -116, 87, 87, -215, -319, -58,
	87, -213, 94, 87, 269, -177, -360, 92, -299, -299,
	-299, 94, 94, -254, -355, -321, 467, 467, -361, 25,
	-327, -326, -248, 85, 77, -97, 157, 463, -361, -361,
	-361, -361, -361, 87, 87, -361, -361, 86, -361, -142,
	-144, -361, 76, -126, -216, -361, -247, 236, 19, 19,
	-216, -216, -162, -188, -116, -174, -202, 54, 76, 118,
	92, 92, 92, 12, -176, 215, -194, -213, -140, 360,
	-189, -361, -213, 87, 25, 87, 601, 133, 87, -177,
	-96, -360, 265, -254, 92, 92, -11, 86, 147, -213,
	-155, -361, 461, 73, 464, -116, -361, 76, 473, 563,
	86, -361, -361, -361, 76, 118, -221, -247, 87, -361,
	-360, -194, 87, -198, -11, 85, -3, 265, -79, 463,
	-326, -304, -248, 92, 94, 87, 62, 462, 465, -331,
	-247, 236, -255, -141, -139, -247, 515, -347, -346, 459,
	-356, -353, 115, 139, 101, -354, 124, 125, -79, -116,
	85, -361, -80, 280, 559, -337, 62, -361, -361, 86,
	22, -268, -60, 526, -344, -345, 76, -348, 366, 525,
	546, 115, 92, 87, -213, 241, -328, 463, -139, 522,
	-281, -126, -345, 76, -344, 76, 13, 12, -4, 600,
	87, 282, 464, -59, 26, -140, -343, 249, 244, 247,
	32, -343, 94, -4, 465, 526, 243, 31, 115, -126,
	-143, -142, -142,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 777,
	777, 777, 0, 777, 0, 0, 777, -2, -2, 777,
	1263, 0, 777, 0, 0, -2, 709, 711, 0, 713,
	-2, 0, 0, 722, 1760, 1760, 772, 0, 0, 0,
	0, 0, 777, 777, 777, 777, 1124, 48, 777, 0,
	83, 84, 728, 729, 730, 63, 0, 1758, 1, 3,
	69, 73, 0, 0, 0, 56, 1133, 0, 76, 0,
	0, 781, 0, 779, 0, 1246, 777, 777, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 149,
	0, 154, 537, 477, 520, 475, 506, -2, 468, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 480, 359, 359, 0, 0, -2, 468, 468, 468,
	0, 0, 0, 503, 1248, 420, 359, 359, 359, 0,
	359, 359, 359, 359, 0, 0, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 1150, 153, 1264, 1261, 1262, 38, 39,
	40, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422,
	1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432,
	1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442,
	1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452,
	1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462,
	1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472,
	1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482,
	1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502,
	1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512,
	1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522,
	1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532,
	1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542,
	1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552,
	1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562,
	1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572,
	1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582,
	1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592,
	1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602,
	1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612,
	1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622,
	1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632,
	1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642,
	1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652,
	1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662,
	1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672,
	1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682,
	1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692,
	1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702,
	1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712,
	1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722,
	1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732,
	1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742,
	1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752,
	1753, 1754, 1755, 1756, 1757, 0, 1240, 0, 637, 878,
	0, 698, 698, 0, 698, 698, 698, 698, 0, 0,
	0, 649, 0, 0, 0, 0, 695, 0, 665, 666,
	0, 695, 0, 701, 0, 676, 698, 698, 679, 1761,
	0, 1761, 1761, 1231, 0, 692, 690, 704, 705, 708,
	712, 0, 717, 720, 1257, 1258, 0, 735, 47, 1499,
	727, 740, 741, 0, 773, 774, 43, 975, 0, 900,
	905, 916, 929, 930, 931, 932, 933, 935, 936, 0,
	0, 0, 0, 941, 942, 0, 0, 0, 0, 0,
	956, 0, 0, 0, 0, 0, 1105, 0, 1068, 1068,
	992, 1068, 1070, 1070, 0, 0, 0, 1757, 1539, 1547,
	1548, 1570, 1655, 1703, 1543, 1544, 1525, 1537, 1540, 1528,
	1529, 1531, 1533, 1538, 1545, 1551, 1530, 1550, 1549, 0,
	1526, 1527, 1532, 1542, 1546, 1534, 1535, 1536, 1541, 1552,
	1114, 0, 0, 0, 0, 0, 0, 261, 262, 974,
	1220, 1070, 1070, 1070, 1070, 1070, -2, -2, 208, 209,
	210, 211, 212, 213, 214, 0, 204, 0, 266, 267,
	263, 264, 265, 958, 959, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 243, 244,
	245, 246, 247, 248, 249, 250, 251, 252, 253, 254,
	255, 256, 257, 258, 259, 260, 1760, 0, 750, 0,
	0, 0, 0, 0, 1133, 0, 1125, 1124, 61, 0,
	777, -2, 0, 0, 0, 0, 45, 0, 50, 837,
	75, 74, 1172, 0, 0, 0, 57, 1134, 65, 67,
	1135, 0, 782, 783, 0, 813, 817, 0, 778, 0,
	0, 1247, 1246, 1246, 100, 0, 1699, 1224, -2, -2,
	0, 0, 1259, 1260, 1233, -2, 1267, 1268, 1269, 1270,
	1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280,
	1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290,
	1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300,
	1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310,
	1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320,
	1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330,
	1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340,
	1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350,
	1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360,
	1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370,
	1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380,
	1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390,
	1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400,
	1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410,
	1411, 1412, 1413, -2, 0, 0, 165, 166, 0, 41,
	386, 0, 161, 0, 379, 325, 0, 1150, 0, 0,
	0, 0, 0, 777, 0, 1241, 142, 143, 150, 151,
	152, 359, 359, 359, 517, 0, 0, 153, 153, 484,
	485, 486, 0, 0, -2, 384, 0, 469, 0, 0,
	373, 373, 377, 375, 376, 0, 0, 0, 0, 0,
	0, 497, 0, 498, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 598, 0, 360, 0, 515, 516, 421,
	0, 0, 0, 0, 495, 496, 0, 0, 1249, 1250,
	0, 0, 0, 359, 359, 0, 0, 0, 0, 359,
	359, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 141,
	1163, 0, 0, 0, -2, 0, 629, 0, 0, 0,
	1242, 1242, 0, 636, 0, 638, 639, 0, 0, 640,
	0, 695, 695, 693, 694, 642, 643, 644, 645, 698,
	0, 0, 368, 369, 370, 695, 698, 0, 698, 698,
	698, 698, 695, 695, 695, 698, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1761, 701, 698, 0, 672,
	0, 673, 674, 677, 678, 680, 1762, 1763, 1280, 1761,
	1761, 684, 688, 1232, 710, 718, 721, 738, 736, 737,
	739, 731, 732, 733, 734, 0, 752, 753, 758, 0,
	0, 0, 0, 764, 765, 766, 0, 0, 769, 770,
	771, 0, 0, 0, 0, 0, 898, 0, 0, 964,
	965, 966, 967, 968, 969, 970, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 937, 938, 939, 940,
	943, 0, 0, 0, 948, 949, 0, 0, 0, 0,
	0, 787, 0, 1106, 0, 990, 0, 991, 993, 994,
	0, 995, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1252, 129, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 797, 0,
	0, 797, 797, 0, 0, 197, 198, 199, 200, 201,
	215, 216, 217, 218, 219, 268, 1114, 0, 974, 0,
	0, 44, 742, 743, 0, 861, 1252, 0, 0, 793,
	0, 55, 64, 66, 1133, 59, 1133, 0, 799, 0,
	0, -2, -2, 800, 806, 807, 808, 809, 810, 52,
	1759, 53, 0, 72, 0, 46, 0, 0, 0, 0,
	337, 1175, 0, 0, 1126, 1127, 1130, 0, 814, 1581,
	818, 0, 820, 821, 0, 780, 0, 98, 0, 877,
	0, 0, 0, 1699, 1230, 0, 102, 103, 0, 0,
	0, 343, 1235, 1236, 1237, -2, 366, 0, 343, 332,
	276, 277, 278, 325, 280, 325, 325, 325, 325, 337,
	337, 337, 337, 308, 309, 310, 311, 312, 0, 0,
	295, 325, 325, 325, 325, 315, 316, 317, 318, 319,
	320, 321, 322, 281, 282, 283, 284, 285, 286, 287,
	288, 289, 327, 327, 327, 329, 329, 0, 42, 0,
	347, 0, 1130, 0, 0, 1163, 1244, 1254, 0, 0,
	0, 1244, 120, 0, 0, 0, 518, 548, 478, 507,
	519, 0, 481, 482, -2, 0, 0, 468, 0, 470,
	0, 367, 0, -2, 0, 377, 0, 373, 377, 374,
	377, 365, 378, 499, 500, 501, 0, 578, 847, 0,
	0, 0, 0, 0, 584, 585, 586, 0, 588, 589,
	590, 591, 592, 593, 594, 595, 596, 597, 508, 509,
	510, 511, 512, 513, 514, 0, 0, 470, 0, 504,
	0, 422, 423, 424, 0, 0, 427, 428, 429, 430,
	0, 0, 433, 434, 435, 864, 865, 436, 437, 462,
	463, 464, 438, 439, 440, 441, 442, 443, 444, 456,
	457, 458, 459, 460, 461, 445, 446, 447, 448, 449,
	450, 453, 0, 135, 1154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1242, 0, 0, 0,
	0, 796, 879, 1265, 1266, 699, 700, 0, 371, 372,
	698, 698, 646, 685, 0, 698, 650, 686, 651, 653,
	652, 654, 667, 668, 698, 657, 696, 697, 658, 659,
	660, 661, 662, 663, 664, 681, 669, 670, 671, 702,
	0, 706, 707, 682, 683, 0, 719, 723, 724, 725,
	726, 0, 0, 755, 94, 760, 761, 762, 763, 775,
	768, 976, 895, 896, 897, 0, 899, 902, 0, 960,
	962, 904, 906, 971, 972, 973, 0, 0, 0, 0,
	0, 910, 914, 917, 918, 919, 920, 921, 922, 923,
	924, 925, 926, 927, 928, 934, 1084, 1085, 1086, 951,
	269, 270, 0, 952, 0, 811, 0, 0, 0, 950,
	0, 0, 0, 0, 788, 789, 1112, 1109, 0, 0,
	1069, 1071, 0, 0, 0, 0, 0, 1047, 1048, 1049,
	1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059,
	1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1087, 0,
	0, 0, 0, 0, 1105, 0, 953, 954, 955, 0,
	0, 0, 1253, 0, 130, 131, 0, 0, 0, 0,
	0, 1041, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 798, 1115, 0, -2, 0, 0, 0, 0,
	0, 0, 0, 1219, 0, 745, 746, 748, 0, 881,
	0, 862, 0, 0, 751, 0, 792, 0, 795, 58,
	60, 804, 805, 0, 822, 801, 54, 49, 0, 0,
	839, 1173, 337, 1195, 0, 341, 342, 1136, 1137, 0,
	1129, 1131, 1132, 77, 819, 815, 0, 893, 0, 0,
	876, 0, 825, 827, 828, 829, 859, 0, 832, 0,
	0, 0, 0, 0, 96, 878, 1225, 101, 0, 0,
	106, 107, 1226, 1227, 1228, 1229, 0, 537, -2, 417,
	167, 169, 170, 171, 162, -2, 335, 333, 334, 279,
	337, 337, 302, 303, 304, 305, 306, 307, 0, 0,
	296, 297, 298, 299, 290, 0, 291, 292, 293, 0,
	294, 385, 0, 1138, 348, 349, 351, 359, 0, 354,
	355, 0, 359, 359, 0, 380, 381, 0, 1130, 1154,
	0, 0, 0, 1255, 1254, 1254, 1254, 0, 155, 156,
	157, 158, 159, 160, 573, 0, 0, 549, 571, 572,
	153, 0, 0, 163, 472, 471, 0, 605, 0, 383,
	0, 0, 377, 377, 362, 363, 502, 0, 0, 580,
	581, 582, 583, 0, 0, 0, 470, 472, 343, 0,
	425, 426, 431, 432, 451, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 532, 533, 534, 535,
	536, 1151, 1152, 1153, 0, 0, 630, 0, 0, 409,
	92, 1243, 635, 695, 656, 687, 695, 648, 655, 675,
	715, 759, 0, 0, 0, 0, 767, 0, 0, 903,
	961, 963, 907, 0, 911, 915, 0, 0, 0, 0,
	0, 0, 0, 957, 981, 982, 0, 0, 1124, 0,
	1110, 0, 0, 989, 1072, 1073, 0, 0, 0, 0,
	0, 1000, 1001, 1002, 1003, 1004, 0, 1006, 0, 0,
	0, 1010, 1011, 0, 0, 1012, 0, 0, 0, 0,
	0, 0, 0, 0, 1024, 1025, 1026, 1027, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1038, 977,
	0, 0, 797, 0, 1074, 1075, 1076, 1077, 1078, 1115,
	744, 747, 749, 835, 882, 883, 0, 0, 0, 0,
	863, 1251, 790, 791, 794, -2, 0, 0, 1117, 0,
	0, 822, 893, 823, 0, 802, 51, 838, 0, 1177,
	1176, 1189, 1202, 338, 339, 340, 1128, 0, 1133, 0,
	1213, 0, 0, 1205, 0, 0, 0, 0, 0, 0,
	0, 0, 866, 0, 0, 869, 0, 0, 0, 0,
	860, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	90, 91, 0, 0, 0, 104, 105, 0, 0, 111,
	344, 345, 144, 153, 419, 168, 393, 0, 0, 275,
	336, 300, 301, 0, 323, 0, 0, 0, 412, 116,
	1142, 1141, 359, 359, 350, 0, 353, 0, 0, 0,
	1256, 326, 382, 0, 134, 0, 0, 0, 0, 0,
	140, 543, 0, 0, 550, 0, 0, 0, 476, 0,
	487, 488, 0, 577, -2, 626, 347, 0, 361, 364,
	848, 0, 0, 489, 0, 472, 493, 494, 505, 454,
	455, 452, 0, 0, 1164, 1165, 1170, 1168, 1169, 121,
	525, 527, 526, 530, 0, 0, 523, 0, 409, 1138,
	0, 634, 410, 411, 698, 698, 754, 95, 0, 757,
	0, 0, 0, 0, 908, 912, 812, 0, 0, 325,
	325, 1092, 325, 329, 1095, 325, 1097, 325, 1100, 325,
	1103, 1104, 0, 0, 0, 0, 1107, 988, 1113, 0,
	0, 0, 0, 999, 0, 0, 0, 0, 0, 0,
	132, 133, 1041, 0, 0, 1043, 1045, 1046, 1016, 1042,
	0, 0, 1039, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 978, 979, 0, 1116, 884, 889, 889,
	889, 0, 0, 0, 1238, 1239, 1118, 1119, 893, 1120,
	824, 803, 840, 1195, 0, 1188, 0, -2, 1197, 0,
	0, 0, 1203, 816, 78, 894, 81, 0, 1213, 1221,
	0, 1204, 1215, 1217, 0, 0, 0, 1209, 0, 893,
	826, 855, 857, 0, 852, 867, 868, 870, 0, 872,
	0, 874, 875, 837, 831, 833, 0, 0, 0, 98,
	0, 893, 893, 97, 0, 880, 108, 109, 110, 418,
	172, 177, 0, 0, 0, 182, 0, 184, 0, 394,
	0, 272, 274, 0, 0, 175, 337, 0, 337, 0,
	330, 0, 395, 413, 0, 1139, 1140, 0, 0, 352,
	356, 357, 358, 0, 1245, 136, 0, 0, 0, 546,
	0, 574, 0, 0, 0, 0, 0, 0, 164, 473,
	606, 607, 608, 609, 610, 611, 612, 613, 0, 359,
	0, 0, 0, 359, 359, 359, 618, 346, 0, 0,
	602, 599, 490, 0, 202, 203, 205, 0, 0, 492,
	837, 1155, 1156, 1157, 0, 1167, 1171, 124, 0, 0,
	0, 0, 631, 632, 633, 93, 641, 647, 756, 776,
	901, 909, 913, 0, 945, 1090, 337, 1093, 1094, 1096,
	1098, 1099, 1101, 1102, 946, 947, 0, 984, 0, 986,
	1133, 0, 1111, 0, 0, 998, 0, 0, 0, 1007,
	1008, 1009, 0, 0, 1015, 0, 1017, 0, 0, 0,
	1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037,
	980, 0, 0, 0, 0, 861, -2, 62, 1120, 1122,
	0, 1182, 1180, 1180, 1190, 1191, 0, 0, 1198, 0,
	0, 0, 0, 82, 0, 0, 0, 1218, 0, 0,
	0, 0, 99, 1124, 849, 856, 0, 0, 850, 0,
	851, 871, 873, 830, -2, 834, 0, 893, 893, 88,
	89, 0, 178, 0, 180, 195, 196, 0, 183, 185,
	186, 271, 273, 0, 0, 313, 324, 314, 0, 0,
	414, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 837, 137,
	138, 139, 538, 0, 548, 0, 0, 0, 541, 0,
	479, 0, 0, 0, 359, 359, 359, 0, 0, 0,
	0, 579, 0, 587, 0, 0, 0, 206, 207, 0,
	1166, 524, 0, 122, 123, 0, 0, 529, 1079, 1091,
	0, 0, 0, 1108, 0, 0, 0, 0, 1005, 1013,
	0, 1044, 0, 1020, 0, 0, 0, 568, 569, 0,
	1040, 0, 890, 0, 0, 0, 0, 881, 1122, 80,
	0, 0, 1185, 0, 1178, 1181, 1179, 1192, 0, 0,
	1199, 0, 1201, 0, 1222, 1223, 1216, 0, 1208, 1211,
	1207, 1210, 1133, 853, 0, 858, 0, 1124, 87, 0,
	181, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 328, 331, 0, 0, 0,
	539, 0, 551, 542, 0, 616, 0, 620, 0, 0,
	0, 623, 624, 625, 387, 603, 600, 601, 491, 0,
	125, 126, 0, 0, 0, 0, 0, 0, 983, 985,
	987, 996, 997, 1088, 1089, 1014, 1018, 0, 1021, 0,
	0, 1022, 0, 570, 0, 886, 843, 844, 891, 892,
	0, 0, 836, 79, 1123, 1121, 1174, 0, 1183, 1184,
	1193, 1194, 1200, 0, 1206, 0, 85, 0, 0, 0,
	1133, 179, 0, 189, 0, 547, 0, 550, 540, 614,
	615, 0, 627, 619, 621, 622, 1158, 0, 0, 0,
	531, 944, 0, 0, 0, 1041, 1023, 0, 566, 567,
	0, 885, 887, 888, 1186, 1187, 1214, 1212, 854, 861,
	0, 86, 400, 393, 1158, 0, 0, 0, 521, 1160,
	127, 128, 465, 466, 467, 121, 1080, 0, 1083, 0,
	845, 846, 552, 0, 554, 0, -2, 388, 401, 0,
	173, 190, 191, 0, 0, 194, 187, 188, 117, 0,
	0, 628, 0, 1161, 1162, 124, 1081, 1019, 553, 0,
	0, 343, 0, 563, 389, 390, 0, 396, 397, 398,
	399, 192, 193, 575, 0, 0, 528, 0, 555, 556,
	564, 0, 391, 0, 392, 0, 0, 0, 544, 0,
	575, 1159, 0, 0, 565, 561, 402, 404, 405, 0,
	0, 403, 576, 545, 1082, 0, 406, 407, 408, 557,
	558, 559, 560,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 140, 3, 3, 3, 166, 158, 3,
	85, 87, 163, 161, 86, 162, 215, 164, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 602,
	148, 147, 149, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 168, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 136, 3, 169,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 137, 138, 139, 141, 142, 143, 144, 145, 146,
	150, 151, 152, 153, 154, 155, 156, 157, 159, 160,
	165, 167, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:519
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:524
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:525
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:529
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:565
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:571
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:575
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:579
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:584
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:588
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:594
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:600
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:606
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:610
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:615
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:619
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:625
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:629
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:635
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:641
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:645
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:649
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:672
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:678
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:683
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:689
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:696
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:702
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:709
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:713
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:719
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:723
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:727
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:731
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:735
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:741
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:745
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:750
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:754
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:760
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:764
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:769
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:775
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:781
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:788
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:794
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:802
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:806
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:814
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:826
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:838
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:842
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:848
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:854
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:858
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:862
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:866
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:871
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:872
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:876
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:880
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:886
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:890
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:896
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:900
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:905
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:909
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:915
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:921
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:925
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:931
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:935
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:941
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:945
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:949
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:955
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:959
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:963
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:967
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:973
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:977
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:983
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:989
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:996
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1005
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1009
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1016
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1020
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1025
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1029
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1035
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1040
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1045
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1051
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1056
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1062
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1067
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1071
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1077
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1081
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1087
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1093
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1100
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1107
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1112
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1117
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1122
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1129
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1136
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1147
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1154
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1158
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1164
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1168
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1172
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1176
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1180
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1184
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1190
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1194
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1200
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1204
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1210
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1214
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1220
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1224
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1230
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1234
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1240
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1244
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1250
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1255
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1260
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1264
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1269
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1273
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1277
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1288
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1297
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1306
		{
			yyVAL.str = ""
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1310
		{
			yyVAL.str = ""
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1319
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1323
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1329
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1335
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1340
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1345
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1350
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1355
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1360
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1365
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1369
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1376
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1380
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1385
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1389
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1394
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1400
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1406
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1411
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1418
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1425
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1429
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1433
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1437
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1441
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1452
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1459
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1463
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1469
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1473
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1477
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1481
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1485
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1489
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1493
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1498
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1502
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1506
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1510
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1514
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1521
		{
			yyVAL.str = Armscii8Str
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1525
		{
			yyVAL.str = ASCIIStr
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1529
		{
			yyVAL.str = Big5Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1533
		{
			yyVAL.str = UBinaryStr
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1537
		{
			yyVAL.str = Cp1250Str
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1541
		{
			yyVAL.str = Cp1251Str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1545
		{
			yyVAL.str = Cp1256Str
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1549
		{
			yyVAL.str = Cp1257Str
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1553
		{
			yyVAL.str = Cp850Str
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1557
		{
			yyVAL.str = Cp852Str
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1561
		{
			yyVAL.str = Cp866Str
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1565
		{
			yyVAL.str = Cp932Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1569
		{
			yyVAL.str = Dec8Str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1573
		{
			yyVAL.str = EucjpmsStr
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1577
		{
			yyVAL.str = EuckrStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1581
		{
			yyVAL.str = Gb18030Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1585
		{
			yyVAL.str = Gb2312Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1589
		{
			yyVAL.str = GbkStr
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1593
		{
			yyVAL.str = Geostd8Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1597
		{
			yyVAL.str = GreekStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1601
		{
			yyVAL.str = HebrewStr
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1605
		{
			yyVAL.str = Hp8Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1609
		{
			yyVAL.str = Keybcs2Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1613
		{
			yyVAL.str = Koi8rStr
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1617
		{
			yyVAL.str = Koi8uStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1621
		{
			yyVAL.str = Latin1Str
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1625
		{
			yyVAL.str = Latin2Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1629
		{
			yyVAL.str = Latin5Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1633
		{
			yyVAL.str = Latin7Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1637
		{
			yyVAL.str = MacceStr
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1641
		{
			yyVAL.str = MacromanStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1645
		{
			yyVAL.str = SjisStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1649
		{
			yyVAL.str = Swe7Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1653
		{
			yyVAL.str = Tis620Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1657
		{
			yyVAL.str = Ucs2Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1661
		{
			yyVAL.str = UjisStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1665
		{
			yyVAL.str = Utf16Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1669
		{
			yyVAL.str = Utf16leStr
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1673
		{
			yyVAL.str = Utf32Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1677
		{
			yyVAL.str = Utf8Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1681
		{
			yyVAL.str = Utf8mb4Str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1691
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1695
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1699
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1705
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1709
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1713
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1719
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1723
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1730
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1734
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1738
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1742
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1748
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1759
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1764
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1770
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1774
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1778
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1782
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1786
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1790
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1794
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1798
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1802
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1808
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1814
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1820
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1826
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1832
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1840
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1844
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1848
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1852
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1856
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1862
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1866
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1870
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1874
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1878
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1882
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1886
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1890
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1894
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1898
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1902
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1906
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1910
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1914
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 314:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1919
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1925
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1929
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1933
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1937
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1941
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1945
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1949
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1953
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1959
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1964
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1969
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1973
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1978
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 328:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1982
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 329:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1990
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1994
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 331:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2000
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 332:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2008
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2012
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2016
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2021
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2025
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2030
		{
			yyVAL.str = ""
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2034
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2038
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2042
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2046
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2051
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2057
		{
			yyVAL.str = ""
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2061
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2065
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 346:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2072
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2077
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2081
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2087
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2091
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2097
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2101
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2106
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2110
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2114
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2118
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2122
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2126
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2132
		{
			yyVAL.str = ""
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2136
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 361:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2142
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2146
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2150
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2154
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2158
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2163
		{
			yyVAL.str = ""
		}
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2167
		{
			yyVAL.str = yyDollar[2].str
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2173
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2177
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2181
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2188
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2192
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2197
		{
			yyVAL.str = "key"
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2201
		{
			yyVAL.str = yyDollar[1].str
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2207
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2211
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2216
		{
			yyVAL.str = ""
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2220
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2226
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2230
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2236
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2240
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2246
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2250
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2256
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2260
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2266
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2272
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2276
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2280
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2284
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2288
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2293
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2297
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2303
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2309
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2315
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2319
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2323
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2328
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2332
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2338
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2344
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2350
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2354
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2358
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2362
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2366
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2371
		{
			yyVAL.str = ""
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2375
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2379
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 412:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2384
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2388
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2392
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2397
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2401
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2407
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2411
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2415
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2421
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2425
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2431
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2435
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2439
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2443
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2447
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2451
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2455
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2459
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2463
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2467
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2471
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2475
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2479
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2483
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2487
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2491
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2495
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2499
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2503
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2507
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2511
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2515
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2519
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2523
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2527
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2531
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2535
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2539
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2543
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2547
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2551
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2556
		{
			yyVAL.str = ""
		}
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2560
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2564
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2583
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2587
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2591
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 468:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2596
		{
			yyVAL.str = ""
		}
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2602
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2606
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2611
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2615
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2620
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2624
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2628
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2632
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2636
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 479:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2640
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2646
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2650
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2654
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2660
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2664
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2668
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2672
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2676
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2680
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2684
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2688
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2692
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2696
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2700
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2704
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2708
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2712
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2716
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2720
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2724
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2728
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2732
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2736
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2740
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2744
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2748
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2754
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2758
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2764
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2768
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2772
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2776
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2780
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2784
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2788
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2792
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2796
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2802
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2809
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2816
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2823
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2829
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2839
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2846
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2853
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2865
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2875
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2879
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2883
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2896
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2906
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2910
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2921
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2928
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2935
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2942
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2949
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2956
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2960
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2969
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2977
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2986
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2993
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3001
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3005
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3014
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3025
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3029
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3034
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3038
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3043
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3047
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3053
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3059
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3065
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3069
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3075
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3079
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3085
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3091
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3097
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3103
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3109
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3113
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3117
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3121
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3127
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3133
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3139
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3143
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3147
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3153
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3157
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3162
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3166
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3171
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3175
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3181
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3185
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3189
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3193
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3197
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3201
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3205
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3209
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3213
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3217
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3221
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3225
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3229
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3233
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3237
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3241
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3245
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3249
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3253
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3257
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3261
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3265
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3270
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3274
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3278
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3285
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3289
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3295
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 605:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3300
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3304
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3309
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3314
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3319
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3324
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3329
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3335
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3341
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3348
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3355
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3362
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3370
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3374
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3380
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3386
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3392
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3398
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3404
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3410
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3416
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3422
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3428
		{
			yyVAL.str = ""
		}
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3432
		{
			yyVAL.str = ""
		}
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3438
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3444
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3448
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 632:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3454
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3458
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3467
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3471
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3477
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3481
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3486
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3492
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3496
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3500
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3504
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3508
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3512
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3516
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3520
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3524
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3528
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3532
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3536
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3540
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3544
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3548
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3552
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3556
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3560
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3564
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3568
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3572
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3576
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3580
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3584
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3588
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3592
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3596
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3600
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3604
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3608
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3612
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3616
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3620
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3624
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3628
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3632
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3636
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3640
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3644
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3648
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3652
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3659
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].colIdent.String())}}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3663
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3667
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()}}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3671
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3675
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3679
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3683
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3687
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3691
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3697
		{
			yyVAL.str = ""
		}
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3701
		{
			yyVAL.str = "extended "
		}
	case 691:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3707
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3711
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3717
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3721
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 695:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3727
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3731
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3735
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 698:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3741
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3745
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3749
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3755
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3759
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3765
		{
			yyVAL.empty = struct{}{}
		}
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3769
		{
			yyVAL.empty = struct{}{}
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3773
		{
			yyVAL.empty = struct{}{}
		}
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3779
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3783
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3789
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3793
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3797
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3803
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3807
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3813
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3819
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3823
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3828
		{
			yyVAL.empty = struct{}{}
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3830
		{
			yyVAL.empty = struct{}{}
		}
	case 718:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3833
		{
			yyVAL.empty = struct{}{}
		}
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3835
		{
			yyVAL.empty = struct{}{}
		}
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3840
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3846
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3851
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3855
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3859
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3863
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3867
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3871
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3877
		{
			yyVAL.str = yyDollar[1].str
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3881
		{
			yyVAL.str = yyDollar[1].str
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3885
		{
			yyVAL.str = yyDollar[1].str
		}
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3891
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3895
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3899
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3903
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3908
		{
			yyVAL.str = ""
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3912
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3916
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3922
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3926
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3932
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3936
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3942
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3948
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3952
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3958
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3964
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3968
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3972
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3976
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3982
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3988
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3994
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3998
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4002
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4006
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4010
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4014
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4020
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4024
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4030
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4034
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4038
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4042
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4046
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4050
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4054
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4058
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4062
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4066
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4070
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4074
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4079
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4083
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4087
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4092
		{
			yyVAL.str = ""
		}
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4096
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4101
		{
			setAllowComments(yylex, true)
		}
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4105
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4111
		{
			yyVAL.strs = nil
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4115
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4121
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4125
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4129
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4134
		{
			yyVAL.str = ""
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4138
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4142
		{
			yyVAL.str = SQLCacheStr
		}
	case 787:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4147
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4151
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4155
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4161
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4165
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4177
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4182
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4186
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4192
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4196
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4201
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4205
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4210
		{
			yyVAL.strs = nil
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4214
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4218
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4222
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4226
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4232
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4236
		{
			yyVAL.str = SQLCacheStr
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4240
		{
			yyVAL.str = DistinctStr
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4244
		{
			yyVAL.str = DistinctStr
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4248
		{
			yyVAL.str = StraightJoinHint
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4252
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4256
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4262
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4266
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4272
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4276
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4280
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4284
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4289
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4293
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4297
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4304
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4309
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4313
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4319
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4325
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4329
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4339
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4343
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4347
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4351
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4357
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4361
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4367
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4371
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4376
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4380
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4386
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4390
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4396
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4400
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4406
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4410
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4414
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4418
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4424
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4428
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 849:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4441
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4445
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4449
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4453
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4459
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 854:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4461
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 855:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4465
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4467
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 857:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4471
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4473
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 859:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4476
		{
			yyVAL.empty = struct{}{}
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4478
		{
			yyVAL.empty = struct{}{}
		}
	case 861:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4481
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4485
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4489
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4496
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4502
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4506
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4510
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4516
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4522
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4526
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4530
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4534
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4540
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4544
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4554
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4558
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4564
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4568
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4574
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 881:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4579
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4583
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4589
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4593
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 885:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4599
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4603
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4607
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4611
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4616
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4620
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4624
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4628
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4634
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4638
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4645
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4649
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4653
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4657
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4661
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4665
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4669
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4676
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4680
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4684
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4688
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4694
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4698
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4702
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4706
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4710
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4714
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4718
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4722
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4726
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4730
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4734
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4740
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4744
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4748
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4752
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4756
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4760
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4764
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4768
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4772
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4776
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4780
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4784
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4788
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4794
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4798
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4802
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4806
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4810
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4814
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4818
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4822
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4826
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4830
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4834
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4838
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4842
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4846
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4850
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4854
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4858
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4862
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4866
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4874
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4878
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4886
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4890
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4896
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4900
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4904
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4910
		{
			yyVAL.str = ""
		}
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4914
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4920
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4924
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4931
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4935
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4939
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4943
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4949
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4953
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4957
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4961
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4965
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4969
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4973
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4979
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4983
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4987
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4994
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5000
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5004
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 977:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5014
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5018
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5022
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5026
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5036
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5040
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5044
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5048
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5052
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5056
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5060
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5064
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5068
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5072
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5083
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5087
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5093
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5097
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5102
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5106
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5110
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5114
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5118
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5122
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5126
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5130
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5134
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5138
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5142
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5146
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5150
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5154
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5158
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5162
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5166
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5170
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5174
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5178
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5182
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5186
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5190
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5194
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5198
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5202
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5206
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5210
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5214
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5218
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5222
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5226
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5230
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5234
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5238
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5242
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5246
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5250
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5254
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5258
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5262
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5266
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5270
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5274
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5279
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5283
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5288
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5292
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5298
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5302
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5308
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5312
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5318
		{
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5320
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5324
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5328
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5332
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5336
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5340
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5344
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5348
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5352
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5356
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5360
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5366
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5370
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5374
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5378
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5382
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5386
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5390
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5394
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5398
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5408
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5412
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5416
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5420
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5431
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5435
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5439
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5443
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5447
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5453
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5457
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5461
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5465
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5469
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5475
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5479
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5483
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1087:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5489
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5493
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5497
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5503
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5507
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5511
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5515
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5519
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5525
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5529
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5533
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5537
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5541
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5545
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5549
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5553
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5557
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5561
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5567
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5571
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5576
		{
			yyVAL.str = string("")
		}
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5580
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5586
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5590
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1111:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5596
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5601
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5605
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5611
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5615
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5619
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5625
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5634
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5638
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5644
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5648
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5653
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5657
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5662
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5666
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5672
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5678
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5682
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5688
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5693
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5697
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5701
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5706
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5710
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5716
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5720
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5724
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5729
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5733
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5737
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5741
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5745
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5752
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5756
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5760
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5764
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5770
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5774
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5778
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5783
		{
			yyVAL.str = ""
		}
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5787
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5791
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5795
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1154:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5800
		{
			yyVAL.str = ""
		}
	case 1155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5804
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5810
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5814
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1158:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5819
		{
			yyVAL.str = ""
		}
	case 1159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5823
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1160:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5828
		{
			yyVAL.str = "cascaded"
		}
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5832
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5836
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1163:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5841
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5845
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5851
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5857
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5863
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5872
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5876
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5881
		{
			yyVAL.str = ""
		}
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5885
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5891
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5895
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5901
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5905
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5909
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5914
		{
			yyVAL.str = ""
		}
	case 1178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5918
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5922
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1180:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5927
		{
			yyVAL.str = ""
		}
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5931
		{
			yyVAL.str = " header"
		}
	case 1182:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5936
		{
			yyVAL.str = ""
		}
	case 1183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5940
		{
			yyVAL.str = " manifest on"
		}
	case 1184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5944
		{
			yyVAL.str = " manifest off"
		}
	case 1185:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5949
		{
			yyVAL.str = ""
		}
	case 1186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5953
		{
			yyVAL.str = " overwrite on"
		}
	case 1187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5957
		{
			yyVAL.str = " overwrite off"
		}
	case 1188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5963
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1189:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5968
		{
			yyVAL.str = ""
		}
	case 1190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5972
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5978
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5982
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5988
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5992
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5997
		{
			yyVAL.str = ""
		}
	case 1196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6001
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6007
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6011
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6017
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6021
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6025
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1202:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6030
		{
			yyVAL.str = ""
		}
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6034
		{
			yyVAL.str = " optionally"
		}
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6047
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6051
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6055
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6059
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6063
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6069
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6073
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6077
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1212:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6081
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1213:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6086
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6090
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6096
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6100
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6106
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6110
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6116
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6121
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6131
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6135
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6141
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6147
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6151
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1226:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6157
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6161
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6165
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6169
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6173
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6181
		{
			yyVAL.str = "charset"
		}
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6191
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6195
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6199
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6208
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6210
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6213
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6215
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6218
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6220
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6223
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6225
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6228
		{
			yyVAL.empty = struct{}{}
		}
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6230
		{
			yyVAL.empty = struct{}{}
		}
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6232
		{
			yyVAL.empty = struct{}{}
		}
	case 1251:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6236
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6241
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6245
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6250
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6252
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6256
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6262
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6266
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6273
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6279
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6283
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1263:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6289
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6293
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6300
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6816
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6825
		{
			decNesting(yylex)
		}
	case 1760:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6830
		{
			skipToEnd(yylex)
		}
	case 1761:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6835
		{
			skipToEnd(yylex)
		}
	case 1762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6839
		{
			skipToEnd(yylex)
		}
	case 1763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6843
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
