// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"

	"vitess.io/vitess/go/ptr"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func markBindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const MULTIPLE_TEXT_LITERAL = 57347
const FUNCTION_CALL_NON_KEYWORD = 57348
const STRING_TYPE_PREFIX_NON_KEYWORD = 57349
const LEX_ERROR = 57350
const UNION = 57351
const SELECT = 57352
const STREAM = 57353
const VSTREAM = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const ORDER = 57362
const BY = 57363
const LIMIT = 57364
const OFFSET = 57365
const FOR = 57366
const ALL = 57367
const ANY = 57368
const SOME = 57369
const DISTINCT = 57370
const AS = 57371
const EXISTS = 57372
const ASC = 57373
const DESC = 57374
const INTO = 57375
const DUPLICATE = 57376
const DEFAULT = 57377
const SET = 57378
const LOCK = 57379
const UNLOCK = 57380
const KEYS = 57381
const DO = 57382
const CALL = 57383
const DISTINCTROW = 57384
const PARSER = 57385
const GENERATED = 57386
const ALWAYS = 57387
const OUTFILE = 57388
const S3 = 57389
const DATA = 57390
const LOAD = 57391
const LINES = 57392
const TERMINATED = 57393
const ESCAPED = 57394
const ENCLOSED = 57395
const DUMPFILE = 57396
const CSV = 57397
const HEADER = 57398
const MANIFEST = 57399
const OVERWRITE = 57400
const STARTING = 57401
const OPTIONALLY = 57402
const VALUES = 57403
const LAST_INSERT_ID = 57404
const NEXT = 57405
const VALUE = 57406
const SHARE = 57407
const MODE = 57408
const SQL_NO_CACHE = 57409
const SQL_CACHE = 57410
const SQL_CALC_FOUND_ROWS = 57411
const JOIN = 57412
const STRAIGHT_JOIN = 57413
const LEFT = 57414
const RIGHT = 57415
const INNER = 57416
const OUTER = 57417
const CROSS = 57418
const NATURAL = 57419
const USE = 57420
const FORCE = 57421
const ON = 57422
const USING = 57423
const INPLACE = 57424
const COPY = 57425
const INSTANT = 57426
const ALGORITHM = 57427
const NONE = 57428
const SHARED = 57429
const EXCLUSIVE = 57430
const SUBQUERY_AS_EXPR = 57431
const STRING = 57432
const ID = 57433
const AT_ID = 57434
const AT_AT_ID = 57435
const HEX = 57436
const NCHAR_STRING = 57437
const INTEGRAL = 57438
const FLOAT = 57439
const DECIMAL = 57440
const HEXNUM = 57441
const COMMENT = 57442
const COMMENT_KEYWORD = 57443
const BITNUM = 57444
const BIT_LITERAL = 57445
const COMPRESSION = 57446
const VALUE_ARG = 57447
const LIST_ARG = 57448
const OFFSET_ARG = 57449
const JSON_PRETTY = 57450
const JSON_STORAGE_SIZE = 57451
const JSON_STORAGE_FREE = 57452
const JSON_CONTAINS = 57453
const JSON_CONTAINS_PATH = 57454
const JSON_EXTRACT = 57455
const JSON_KEYS = 57456
const JSON_OVERLAPS = 57457
const JSON_SEARCH = 57458
const JSON_VALUE = 57459
const EXTRACT = 57460
const NULL = 57461
const UNKNOWN = 57462
const TRUE = 57463
const FALSE = 57464
const OFF = 57465
const DISCARD = 57466
const IMPORT = 57467
const ENABLE = 57468
const DISABLE = 57469
const TABLESPACE = 57470
const VIRTUAL = 57471
const STORED = 57472
const BOTH = 57473
const LEADING = 57474
const TRAILING = 57475
const KILL = 57476
const EMPTY_FROM_CLAUSE = 57477
const LOWER_THAN_CHARSET = 57478
const CHARSET = 57479
const UNIQUE = 57480
const KEY = 57481
const EXPRESSION_PREC_SETTER = 57482
const OR = 57483
const XOR = 57484
const AND = 57485
const NOT = 57486
const BETWEEN = 57487
const CASE = 57488
const WHEN = 57489
const THEN = 57490
const ELSE = 57491
const END = 57492
const LE = 57493
const GE = 57494
const NE = 57495
const NULL_SAFE_EQUAL = 57496
const IS = 57497
const LIKE = 57498
const REGEXP = 57499
const RLIKE = 57500
const IN = 57501
const ASSIGNMENT_OPT = 57502
const SHIFT_LEFT = 57503
const SHIFT_RIGHT = 57504
const DIV = 57505
const MOD = 57506
const UNARY = 57507
const COLLATE = 57508
const BINARY = 57509
const UNDERSCORE_ARMSCII8 = 57510
const UNDERSCORE_ASCII = 57511
const UNDERSCORE_BIG5 = 57512
const UNDERSCORE_BINARY = 57513
const UNDERSCORE_CP1250 = 57514
const UNDERSCORE_CP1251 = 57515
const UNDERSCORE_CP1256 = 57516
const UNDERSCORE_CP1257 = 57517
const UNDERSCORE_CP850 = 57518
const UNDERSCORE_CP852 = 57519
const UNDERSCORE_CP866 = 57520
const UNDERSCORE_CP932 = 57521
const UNDERSCORE_DEC8 = 57522
const UNDERSCORE_EUCJPMS = 57523
const UNDERSCORE_EUCKR = 57524
const UNDERSCORE_GB18030 = 57525
const UNDERSCORE_GB2312 = 57526
const UNDERSCORE_GBK = 57527
const UNDERSCORE_GEOSTD8 = 57528
const UNDERSCORE_GREEK = 57529
const UNDERSCORE_HEBREW = 57530
const UNDERSCORE_HP8 = 57531
const UNDERSCORE_KEYBCS2 = 57532
const UNDERSCORE_KOI8R = 57533
const UNDERSCORE_KOI8U = 57534
const UNDERSCORE_LATIN1 = 57535
const UNDERSCORE_LATIN2 = 57536
const UNDERSCORE_LATIN5 = 57537
const UNDERSCORE_LATIN7 = 57538
const UNDERSCORE_MACCE = 57539
const UNDERSCORE_MACROMAN = 57540
const UNDERSCORE_SJIS = 57541
const UNDERSCORE_SWE7 = 57542
const UNDERSCORE_TIS620 = 57543
const UNDERSCORE_UCS2 = 57544
const UNDERSCORE_UJIS = 57545
const UNDERSCORE_UTF16 = 57546
const UNDERSCORE_UTF16LE = 57547
const UNDERSCORE_UTF32 = 57548
const UNDERSCORE_UTF8 = 57549
const UNDERSCORE_UTF8MB4 = 57550
const UNDERSCORE_UTF8MB3 = 57551
const INTERVAL = 57552
const WINDOW_EXPR = 57553
const JSON_EXTRACT_OP = 57554
const JSON_UNQUOTE_EXTRACT_OP = 57555
const CREATE = 57556
const ALTER = 57557
const DROP = 57558
const RENAME = 57559
const ANALYZE = 57560
const ADD = 57561
const FLUSH = 57562
const CHANGE = 57563
const MODIFY = 57564
const DEALLOCATE = 57565
const REVERT = 57566
const QUERIES = 57567
const SCHEMA = 57568
const TABLE = 57569
const INDEX = 57570
const VIEW = 57571
const TO = 57572
const IGNORE = 57573
const IF = 57574
const PRIMARY = 57575
const COLUMN = 57576
const SPATIAL = 57577
const FULLTEXT = 57578
const KEY_BLOCK_SIZE = 57579
const CHECK = 57580
const INDEXES = 57581
const ACTION = 57582
const CASCADE = 57583
const CONSTRAINT = 57584
const FOREIGN = 57585
const NO = 57586
const REFERENCES = 57587
const RESTRICT = 57588
const SHOW = 57589
const DESCRIBE = 57590
const EXPLAIN = 57591
const DATE = 57592
const ESCAPE = 57593
const REPAIR = 57594
const OPTIMIZE = 57595
const TRUNCATE = 57596
const COALESCE = 57597
const EXCHANGE = 57598
const REBUILD = 57599
const PARTITIONING = 57600
const REMOVE = 57601
const PREPARE = 57602
const EXECUTE = 57603
const MAXVALUE = 57604
const PARTITION = 57605
const REORGANIZE = 57606
const LESS = 57607
const THAN = 57608
const PROCEDURE = 57609
const TRIGGER = 57610
const VINDEX = 57611
const VINDEXES = 57612
const DIRECTORY = 57613
const NAME = 57614
const UPGRADE = 57615
const STATUS = 57616
const VARIABLES = 57617
const WARNINGS = 57618
const CASCADED = 57619
const DEFINER = 57620
const OPTION = 57621
const SQL = 57622
const UNDEFINED = 57623
const SEQUENCE = 57624
const MERGE = 57625
const TEMPORARY = 57626
const TEMPTABLE = 57627
const INVOKER = 57628
const SECURITY = 57629
const FIRST = 57630
const AFTER = 57631
const LAST = 57632
const VITESS_MIGRATION = 57633
const CANCEL = 57634
const RETRY = 57635
const LAUNCH = 57636
const COMPLETE = 57637
const CLEANUP = 57638
const THROTTLE = 57639
const UNTHROTTLE = 57640
const FORCE_CUTOVER = 57641
const EXPIRE = 57642
const RATIO = 57643
const VITESS_THROTTLER = 57644
const BEGIN = 57645
const START = 57646
const TRANSACTION = 57647
const COMMIT = 57648
const ROLLBACK = 57649
const SAVEPOINT = 57650
const RELEASE = 57651
const WORK = 57652
const CONSISTENT = 57653
const SNAPSHOT = 57654
const BIT = 57655
const TINYINT = 57656
const SMALLINT = 57657
const MEDIUMINT = 57658
const INT = 57659
const INTEGER = 57660
const BIGINT = 57661
const INTNUM = 57662
const REAL = 57663
const DOUBLE = 57664
const FLOAT_TYPE = 57665
const FLOAT4_TYPE = 57666
const FLOAT8_TYPE = 57667
const DECIMAL_TYPE = 57668
const NUMERIC = 57669
const TIME = 57670
const TIMESTAMP = 57671
const DATETIME = 57672
const YEAR = 57673
const CHAR = 57674
const VARCHAR = 57675
const BOOL = 57676
const CHARACTER = 57677
const VARBINARY = 57678
const NCHAR = 57679
const TEXT = 57680
const TINYTEXT = 57681
const MEDIUMTEXT = 57682
const LONGTEXT = 57683
const BLOB = 57684
const TINYBLOB = 57685
const MEDIUMBLOB = 57686
const LONGBLOB = 57687
const JSON = 57688
const JSON_SCHEMA_VALID = 57689
const JSON_SCHEMA_VALIDATION_REPORT = 57690
const ENUM = 57691
const GEOMETRY = 57692
const POINT = 57693
const LINESTRING = 57694
const POLYGON = 57695
const GEOMCOLLECTION = 57696
const GEOMETRYCOLLECTION = 57697
const MULTIPOINT = 57698
const MULTILINESTRING = 57699
const MULTIPOLYGON = 57700
const ASCII = 57701
const UNICODE = 57702
const NULLX = 57703
const AUTO_INCREMENT = 57704
const APPROXNUM = 57705
const SIGNED = 57706
const UNSIGNED = 57707
const ZEROFILL = 57708
const PURGE = 57709
const BEFORE = 57710
const CODE = 57711
const COLLATION = 57712
const COLUMNS = 57713
const DATABASES = 57714
const ENGINES = 57715
const EVENT = 57716
const EXTENDED = 57717
const FIELDS = 57718
const FULL = 57719
const FUNCTION = 57720
const GTID_EXECUTED = 57721
const KEYSPACES = 57722
const OPEN = 57723
const PLUGINS = 57724
const PRIVILEGES = 57725
const PROCESSLIST = 57726
const SCHEMAS = 57727
const TABLES = 57728
const TRIGGERS = 57729
const USER = 57730
const VGTID_EXECUTED = 57731
const VITESS_KEYSPACES = 57732
const VITESS_METADATA = 57733
const VITESS_MIGRATIONS = 57734
const VITESS_REPLICATION_STATUS = 57735
const VITESS_SHARDS = 57736
const VITESS_TABLETS = 57737
const VITESS_TARGET = 57738
const VSCHEMA = 57739
const VITESS_THROTTLED_APPS = 57740
const NAMES = 57741
const GLOBAL = 57742
const SESSION = 57743
const ISOLATION = 57744
const LEVEL = 57745
const READ = 57746
const WRITE = 57747
const ONLY = 57748
const REPEATABLE = 57749
const COMMITTED = 57750
const UNCOMMITTED = 57751
const SERIALIZABLE = 57752
const ADDDATE = 57753
const CURRENT_TIMESTAMP = 57754
const DATABASE = 57755
const CURRENT_DATE = 57756
const CURDATE = 57757
const DATE_ADD = 57758
const DATE_SUB = 57759
const NOW = 57760
const SUBDATE = 57761
const CURTIME = 57762
const CURRENT_TIME = 57763
const LOCALTIME = 57764
const LOCALTIMESTAMP = 57765
const CURRENT_USER = 57766
const UTC_DATE = 57767
const UTC_TIME = 57768
const UTC_TIMESTAMP = 57769
const SYSDATE = 57770
const DAY = 57771
const DAY_HOUR = 57772
const DAY_MICROSECOND = 57773
const DAY_MINUTE = 57774
const DAY_SECOND = 57775
const HOUR = 57776
const HOUR_MICROSECOND = 57777
const HOUR_MINUTE = 57778
const HOUR_SECOND = 57779
const MICROSECOND = 57780
const MINUTE = 57781
const MINUTE_MICROSECOND = 57782
const MINUTE_SECOND = 57783
const MONTH = 57784
const QUARTER = 57785
const SECOND = 57786
const SECOND_MICROSECOND = 57787
const YEAR_MONTH = 57788
const WEEK = 57789
const SQL_TSI_DAY = 57790
const SQL_TSI_WEEK = 57791
const SQL_TSI_HOUR = 57792
const SQL_TSI_MINUTE = 57793
const SQL_TSI_MONTH = 57794
const SQL_TSI_QUARTER = 57795
const SQL_TSI_SECOND = 57796
const SQL_TSI_MICROSECOND = 57797
const SQL_TSI_YEAR = 57798
const REPLACE = 57799
const CONVERT = 57800
const CAST = 57801
const SUBSTR = 57802
const SUBSTRING = 57803
const MID = 57804
const SEPARATOR = 57805
const TIMESTAMPADD = 57806
const TIMESTAMPDIFF = 57807
const WEIGHT_STRING = 57808
const LTRIM = 57809
const RTRIM = 57810
const TRIM = 57811
const JSON_ARRAY = 57812
const JSON_OBJECT = 57813
const JSON_QUOTE = 57814
const JSON_DEPTH = 57815
const JSON_TYPE = 57816
const JSON_LENGTH = 57817
const JSON_VALID = 57818
const JSON_ARRAY_APPEND = 57819
const JSON_ARRAY_INSERT = 57820
const JSON_INSERT = 57821
const JSON_MERGE = 57822
const JSON_MERGE_PATCH = 57823
const JSON_MERGE_PRESERVE = 57824
const JSON_REMOVE = 57825
const JSON_REPLACE = 57826
const JSON_SET = 57827
const JSON_UNQUOTE = 57828
const COUNT = 57829
const AVG = 57830
const MAX = 57831
const MIN = 57832
const SUM = 57833
const GROUP_CONCAT = 57834
const BIT_AND = 57835
const BIT_OR = 57836
const BIT_XOR = 57837
const STD = 57838
const STDDEV = 57839
const STDDEV_POP = 57840
const STDDEV_SAMP = 57841
const VAR_POP = 57842
const VAR_SAMP = 57843
const VARIANCE = 57844
const ANY_VALUE = 57845
const REGEXP_INSTR = 57846
const REGEXP_LIKE = 57847
const REGEXP_REPLACE = 57848
const REGEXP_SUBSTR = 57849
const ExtractValue = 57850
const UpdateXML = 57851
const GET_LOCK = 57852
const RELEASE_LOCK = 57853
const RELEASE_ALL_LOCKS = 57854
const IS_FREE_LOCK = 57855
const IS_USED_LOCK = 57856
const LOCATE = 57857
const POSITION = 57858
const ST_GeometryCollectionFromText = 57859
const ST_GeometryFromText = 57860
const ST_LineStringFromText = 57861
const ST_MultiLineStringFromText = 57862
const ST_MultiPointFromText = 57863
const ST_MultiPolygonFromText = 57864
const ST_PointFromText = 57865
const ST_PolygonFromText = 57866
const ST_GeometryCollectionFromWKB = 57867
const ST_GeometryFromWKB = 57868
const ST_LineStringFromWKB = 57869
const ST_MultiLineStringFromWKB = 57870
const ST_MultiPointFromWKB = 57871
const ST_MultiPolygonFromWKB = 57872
const ST_PointFromWKB = 57873
const ST_PolygonFromWKB = 57874
const ST_AsBinary = 57875
const ST_AsText = 57876
const ST_Dimension = 57877
const ST_Envelope = 57878
const ST_IsSimple = 57879
const ST_IsEmpty = 57880
const ST_GeometryType = 57881
const ST_X = 57882
const ST_Y = 57883
const ST_Latitude = 57884
const ST_Longitude = 57885
const ST_EndPoint = 57886
const ST_IsClosed = 57887
const ST_Length = 57888
const ST_NumPoints = 57889
const ST_StartPoint = 57890
const ST_PointN = 57891
const ST_Area = 57892
const ST_Centroid = 57893
const ST_ExteriorRing = 57894
const ST_InteriorRingN = 57895
const ST_NumInteriorRings = 57896
const ST_NumGeometries = 57897
const ST_GeometryN = 57898
const ST_LongFromGeoHash = 57899
const ST_PointFromGeoHash = 57900
const ST_LatFromGeoHash = 57901
const ST_GeoHash = 57902
const ST_AsGeoJSON = 57903
const ST_GeomFromGeoJSON = 57904
const MATCH = 57905
const AGAINST = 57906
const BOOLEAN = 57907
const LANGUAGE = 57908
const WITH = 57909
const QUERY = 57910
const EXPANSION = 57911
const WITHOUT = 57912
const VALIDATION = 57913
const ROLLUP = 57914
const UNUSED = 57915
const ARRAY = 57916
const BYTE = 57917
const CUME_DIST = 57918
const DESCRIPTION = 57919
const DENSE_RANK = 57920
const EMPTY = 57921
const EXCEPT = 57922
const FIRST_VALUE = 57923
const GROUPING = 57924
const GROUPS = 57925
const JSON_TABLE = 57926
const LAG = 57927
const LAST_VALUE = 57928
const LATERAL = 57929
const LEAD = 57930
const NTH_VALUE = 57931
const NTILE = 57932
const OF = 57933
const OVER = 57934
const PERCENT_RANK = 57935
const RANK = 57936
const RECURSIVE = 57937
const ROW_NUMBER = 57938
const SYSTEM = 57939
const WINDOW = 57940
const ACTIVE = 57941
const ADMIN = 57942
const AUTOEXTEND_SIZE = 57943
const BUCKETS = 57944
const CLONE = 57945
const COLUMN_FORMAT = 57946
const COMPONENT = 57947
const DEFINITION = 57948
const ENFORCED = 57949
const ENGINE_ATTRIBUTE = 57950
const EXCLUDE = 57951
const FOLLOWING = 57952
const GET_MASTER_PUBLIC_KEY = 57953
const HISTOGRAM = 57954
const HISTORY = 57955
const INACTIVE = 57956
const INVISIBLE = 57957
const LOCKED = 57958
const MASTER_COMPRESSION_ALGORITHMS = 57959
const MASTER_PUBLIC_KEY_PATH = 57960
const MASTER_TLS_CIPHERSUITES = 57961
const MASTER_ZSTD_COMPRESSION_LEVEL = 57962
const NESTED = 57963
const NETWORK_NAMESPACE = 57964
const NOWAIT = 57965
const NULLS = 57966
const OJ = 57967
const OLD = 57968
const OPTIONAL = 57969
const ORDINALITY = 57970
const ORGANIZATION = 57971
const OTHERS = 57972
const PARTIAL = 57973
const PATH = 57974
const PERSIST = 57975
const PERSIST_ONLY = 57976
const PRECEDING = 57977
const PRIVILEGE_CHECKS_USER = 57978
const PROCESS = 57979
const RANDOM = 57980
const REFERENCE = 57981
const REQUIRE_ROW_FORMAT = 57982
const RESOURCE = 57983
const RESPECT = 57984
const RESTART = 57985
const RETAIN = 57986
const REUSE = 57987
const ROLE = 57988
const SECONDARY = 57989
const SECONDARY_ENGINE = 57990
const SECONDARY_ENGINE_ATTRIBUTE = 57991
const SECONDARY_LOAD = 57992
const SECONDARY_UNLOAD = 57993
const SIMPLE = 57994
const SKIP = 57995
const SRID = 57996
const THREAD_PRIORITY = 57997
const TIES = 57998
const UNBOUNDED = 57999
const VCPU = 58000
const VISIBLE = 58001
const RETURNING = 58002
const FORMAT_BYTES = 58003
const FORMAT_PICO_TIME = 58004
const PS_CURRENT_THREAD_ID = 58005
const PS_THREAD_ID = 58006
const GTID_SUBSET = 58007
const GTID_SUBTRACT = 58008
const WAIT_FOR_EXECUTED_GTID_SET = 58009
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 58010
const FORMAT = 58011
const TREE = 58012
const VITESS = 58013
const TRADITIONAL = 58014
const VTEXPLAIN = 58015
const VEXPLAIN = 58016
const PLAN = 58017
const LOCAL = 58018
const LOW_PRIORITY = 58019
const NO_WRITE_TO_BINLOG = 58020
const LOGS = 58021
const ERROR = 58022
const GENERAL = 58023
const HOSTS = 58024
const OPTIMIZER_COSTS = 58025
const USER_RESOURCES = 58026
const SLOW = 58027
const CHANNEL = 58028
const RELAY = 58029
const EXPORT = 58030
const CURRENT = 58031
const ROW = 58032
const ROWS = 58033
const AVG_ROW_LENGTH = 58034
const CONNECTION = 58035
const CHECKSUM = 58036
const DELAY_KEY_WRITE = 58037
const ENCRYPTION = 58038
const ENGINE = 58039
const INSERT_METHOD = 58040
const MAX_ROWS = 58041
const MIN_ROWS = 58042
const PACK_KEYS = 58043
const PASSWORD = 58044
const FIXED = 58045
const DYNAMIC = 58046
const COMPRESSED = 58047
const REDUNDANT = 58048
const COMPACT = 58049
const ROW_FORMAT = 58050
const STATS_AUTO_RECALC = 58051
const STATS_PERSISTENT = 58052
const STATS_SAMPLE_PAGES = 58053
const STORAGE = 58054
const MEMORY = 58055
const DISK = 58056
const PARTITIONS = 58057
const LINEAR = 58058
const RANGE = 58059
const LIST = 58060
const SUBPARTITION = 58061
const SUBPARTITIONS = 58062
const HASH = 58063

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"MULTIPLE_TEXT_LITERAL",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"ANY",
	"SOME",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"UNKNOWN",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"KILL",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"ASSIGNMENT_OPT",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"FORCE_CUTOVER",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"PURGE",
	"BEFORE",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ADDDATE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURDATE",
	"DATE_ADD",
	"DATE_SUB",
	"NOW",
	"SUBDATE",
	"CURTIME",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"SYSDATE",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_HOUR",
	"SQL_TSI_MINUTE",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_SECOND",
	"SQL_TSI_MICROSECOND",
	"SQL_TSI_YEAR",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"MID",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"ANY_VALUE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"ST_GeometryCollectionFromText",
	"ST_GeometryFromText",
	"ST_LineStringFromText",
	"ST_MultiLineStringFromText",
	"ST_MultiPointFromText",
	"ST_MultiPolygonFromText",
	"ST_PointFromText",
	"ST_PolygonFromText",
	"ST_GeometryCollectionFromWKB",
	"ST_GeometryFromWKB",
	"ST_LineStringFromWKB",
	"ST_MultiLineStringFromWKB",
	"ST_MultiPointFromWKB",
	"ST_MultiPolygonFromWKB",
	"ST_PointFromWKB",
	"ST_PolygonFromWKB",
	"ST_AsBinary",
	"ST_AsText",
	"ST_Dimension",
	"ST_Envelope",
	"ST_IsSimple",
	"ST_IsEmpty",
	"ST_GeometryType",
	"ST_X",
	"ST_Y",
	"ST_Latitude",
	"ST_Longitude",
	"ST_EndPoint",
	"ST_IsClosed",
	"ST_Length",
	"ST_NumPoints",
	"ST_StartPoint",
	"ST_PointN",
	"ST_Area",
	"ST_Centroid",
	"ST_ExteriorRing",
	"ST_InteriorRingN",
	"ST_NumInteriorRings",
	"ST_NumGeometries",
	"ST_GeometryN",
	"ST_LongFromGeoHash",
	"ST_PointFromGeoHash",
	"ST_LatFromGeoHash",
	"ST_GeoHash",
	"ST_AsGeoJSON",
	"ST_GeomFromGeoJSON",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ROLLUP",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	14, 49,
	15, 49,
	-2, 40,
	-1, 52,
	1, 157,
	739, 157,
	-2, 165,
	-1, 53,
	140, 165,
	182, 165,
	352, 165,
	-2, 523,
	-1, 61,
	39, 777,
	245, 777,
	256, 777,
	291, 791,
	292, 791,
	-2, 779,
	-1, 66,
	247, 815,
	-2, 813,
	-1, 122,
	244, 1605,
	-2, 131,
	-1, 124,
	1, 158,
	739, 158,
	-2, 165,
	-1, 135,
	141, 408,
	250, 408,
	-2, 512,
	-1, 154,
	140, 165,
	182, 165,
	352, 165,
	-2, 532,
	-1, 737,
	168, 41,
	-2, 43,
	-1, 944,
	90, 1622,
	-2, 1466,
	-1, 945,
	90, 1623,
	227, 1627,
	-2, 1467,
	-1, 946,
	227, 1626,
	-2, 42,
	-1, 1030,
	63, 887,
	-2, 900,
	-1, 1118,
	255, 1096,
	260, 1096,
	-2, 419,
	-1, 1203,
	1, 580,
	739, 580,
	-2, 165,
	-1, 1506,
	227, 1627,
	-2, 1467,
	-1, 1717,
	63, 888,
	-2, 904,
	-1, 1718,
	63, 889,
	-2, 905,
	-1, 1774,
	140, 165,
	182, 165,
	352, 165,
	-2, 458,
	-1, 1855,
	141, 408,
	250, 408,
	-2, 512,
	-1, 1864,
	255, 1097,
	260, 1097,
	-2, 420,
	-1, 2307,
	227, 1631,
	-2, 1625,
	-1, 2308,
	227, 1627,
	-2, 1623,
	-1, 2411,
	140, 165,
	182, 165,
	352, 165,
	-2, 459,
	-1, 2418,
	29, 186,
	-2, 188,
	-1, 2875,
	81, 96,
	91, 96,
	-2, 963,
	-1, 2944,
	714, 700,
	-2, 674,
	-1, 3166,
	53, 1570,
	-2, 1564,
	-1, 4000,
	714, 700,
	-2, 688,
	-1, 4092,
	93, 632,
	98, 632,
	108, 632,
	184, 632,
	185, 632,
	186, 632,
	187, 632,
	188, 632,
	189, 632,
	190, 632,
	191, 632,
	192, 632,
	193, 632,
	194, 632,
	195, 632,
	196, 632,
	197, 632,
	198, 632,
	199, 632,
	200, 632,
	201, 632,
	202, 632,
	203, 632,
	204, 632,
	205, 632,
	206, 632,
	207, 632,
	208, 632,
	209, 632,
	210, 632,
	211, 632,
	212, 632,
	213, 632,
	214, 632,
	215, 632,
	216, 632,
	217, 632,
	218, 632,
	219, 632,
	220, 632,
	221, 632,
	222, 632,
	223, 632,
	224, 632,
	225, 632,
	-2, 1996,
}

const yyPrivate = 57344

const yyLast = 56755

var yyAct = [...]int{
	960, 3653, 3654, 87, 3652, 4090, 4167, 3981, 4071, 3318,
	4180, 4134, 4059, 1271, 4135, 955, 3218, 947, 2102, 3603,
	2408, 3225, 1269, 2336, 2137, 3963, 3453, 3886, 3276, 3179,
	2114, 3267, 913, 3281, 3278, 42, 1777, 3277, 3275, 3280,
	3279, 3961, 3034, 1984, 3590, 2040, 3296, 3233, 5, 3117,
	2338, 2482, 741, 3295, 3183, 3180, 3499, 948, 3695, 3493,
	3008, 3167, 3521, 3483, 3033, 2363, 736, 2835, 735, 909,
	769, 4032, 2379, 2445, 2909, 1833, 2990, 908, 3298, 2941,
	3325, 2910, 2513, 1080, 2470, 2396, 1028, 2450, 87, 2911,
	163, 1048, 1025, 2860, 43, 2841, 1733, 1055, 2382, 731,
	1880, 2811, 41, 2827, 1126, 2098, 2384, 1028, 2260, 2048,
	2982, 2383, 2491, 2136, 2469, 1150, 2259, 2371, 1027, 149,
	1031, 2452, 1090, 1862, 2292, 2530, 2902, 1113, 1108, 3177,
	1766, 2877, 2386, 1746, 104, 105, 1698, 1519, 2142, 1050,
	100, 2062, 2073, 1445, 1980, 1430, 3182, 1869, 1087, 1084,
	1961, 1119, 1116, 1088, 2467, 2848, 751, 2441, 2442, 1114,
	1115, 1765, 746, 3690, 1065, 1067, 738, 1751, 2809, 1720,
	1037, 2150, 2169, 99, 1034, 1502, 2039, 85, 1259, 1992,
	3682, 1047, 1033, 107, 3510, 1478, 3454, 127, 125, 167,
	1032, 126, 1854, 1023, 2364, 132, 910, 133, 739, 1199,
	1060, 1035, 728, 745, 1523, 1245, 98, 4168, 3591, 3264,
	1059, 93, 2484, 2485, 2486, 2484, 1528, 1267, 4016, 2964,
	2963, 2528, 2932, 3583, 1022, 4117, 3546, 2998, 2999, 4012,
	106, 84, 2333, 2334, 2055, 2054, 4011, 2053, 2052, 3657,
	1040, 1130, 128, 2051, 4017, 1155, 134, 1081, 2050, 2023,
	1215, 670, 2807, 671, 4111, 1441, 673, 3163, 4138, 2578,
	3121, 1092, 1097, 1163, 4190, 4133, 4158, 1152, 3457, 3456,
	2360, 2359, 1946, 2515, 1041, 729, 2957, 2517, 3964, 1074,
	1169, 1170, 1171, 2, 1174, 1175, 1176, 1177, 2772, 1129,
	1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189,
	1190, 1191, 1192, 1193, 1194, 1195, 1196, 3990, 1156, 1159,
	1160, 1075, 1104, 1103, 128, 1024, 1102, 1026, 1049, 2934,
	3657, 2516, 1462, 1105, 4086, 707, 3656, 713, 111, 112,
	113, 1216, 116, 95, 3286, 122, 2357, 4012, 191, 2060,
	3344, 665, 2837, 4173, 3882, 3286, 713, 3283, 95, 1021,
	95, 3881, 914, 726, 727, 2954, 1073, 1077, 912, 1737,
	4121, 1735, 1172, 1016, 1017, 1018, 1019, 1106, 4172, 2076,
	1030, 190, 1073, 1077, 912, 4119, 95, 1727, 1154, 963,
	964, 965, 128, 3596, 1153, 4120, 3597, 4148, 3892, 1738,
	3284, 1736, 707, 963, 964, 965, 86, 129, 1062, 1063,
	4118, 3284, 707, 4115, 3615, 86, 1432, 3656, 3604, 86,
	172, 4060, 4068, 2510, 3891, 2107, 4095, 3290, 707, 3370,
	1458, 1843, 2851, 2886, 2585, 3614, 2885, 2808, 3290, 2887,
	4072, 3215, 3216, 2403, 2404, 704, 2032, 2033, 3214, 2997,
	1252, 1101, 1254, 1208, 1209, 86, 2582, 2852, 88, 1767,
	4100, 1768, 2402, 2891, 1198, 2981, 3709, 1240, 1241, 1235,
	1700, 2461, 1459, 1264, 1460, 1461, 169, 1014, 4098, 170,
	1013, 3982, 1442, 707, 1988, 1211, 95, 1223, 4104, 4105,
	1251, 1253, 1224, 689, 2455, 95, 2898, 3235, 3236, 95,
	1222, 2583, 1221, 189, 4099, 1223, 687, 1236, 1229, 1099,
	1224, 2421, 2420, 707, 3322, 2335, 4076, 3320, 2844, 2845,
	3055, 2576, 4139, 3352, 3350, 2031, 2367, 721, 2035, 667,
	4076, 707, 3995, 1446, 1479, 95, 725, 719, 3326, 2983,
	1763, 3287, 1936, 4140, 1702, 2942, 684, 708, 2967, 1015,
	2492, 3934, 3287, 3935, 2537, 699, 3341, 2531, 1480, 1481,
	1482, 1483, 1484, 1485, 1486, 1488, 1487, 1489, 1490, 4170,
	694, 1962, 1242, 1173, 1238, 1239, 2971, 2972, 1256, 1431,
	2985, 697, 1243, 1263, 3313, 1261, 1937, 1204, 1938, 1262,
	1244, 1086, 3314, 2579, 1066, 2580, 2554, 1249, 2555, 3585,
	2556, 1250, 1237, 1230, 3584, 1128, 3234, 3323, 1128, 2538,
	3321, 1255, 2935, 2535, 708, 2178, 2495, 173, 3237, 2557,
	1179, 1178, 1989, 3866, 708, 3661, 179, 2544, 2540, 2542,
	2543, 2541, 2545, 2546, 2547, 2533, 1248, 2380, 1100, 3581,
	708, 1456, 1109, 1110, 2454, 1148, 1110, 1147, 1146, 674,
	1145, 676, 690, 1705, 710, 2534, 709, 680, 1144, 678,
	682, 691, 683, 4112, 677, 1143, 688, 1142, 2536, 679,
	692, 693, 696, 700, 701, 702, 698, 695, 1141, 686,
	711, 3120, 3496, 1136, 3237, 4191, 3056, 1847, 1076, 1070,
	1068, 1149, 1085, 1158, 1493, 708, 1085, 1122, 4145, 1121,
	1083, 1121, 1085, 1157, 1076, 1070, 1068, 1981, 1127, 2468,
	1061, 1127, 2986, 2170, 1268, 2521, 1268, 1268, 2172, 2365,
	2366, 2520, 2177, 2173, 1977, 708, 2174, 2175, 2176, 1433,
	3257, 2171, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186,
	2187, 1166, 2966, 708, 1841, 1840, 1839, 2952, 1978, 3148,
	1452, 164, 3146, 1444, 3580, 1837, 4113, 1214, 664, 2514,
	2980, 1494, 1495, 2979, 1028, 1503, 1508, 1509, 1764, 1512,
	1514, 1515, 1516, 1517, 1518, 3977, 1521, 1522, 1524, 1524,
	3002, 1524, 1524, 1529, 1529, 1529, 1532, 1533, 1534, 1535,
	1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545,
	1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555,
	1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565,
	1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575,
	1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585,
	1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595,
	1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605,
	1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615,
	1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625,
	1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635,
	1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645,
	1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1107, 1257,
	2936, 3655, 1654, 3989, 1656, 1657, 1658, 1659, 1660, 89,
	1500, 3544, 3545, 4035, 2969, 2933, 1529, 1529, 1529, 1529,
	1529, 1529, 1440, 1424, 1425, 2900, 1513, 1207, 1210, 1423,
	3613, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 1679, 1680, 712, 1496, 1497, 1498, 1499,
	961, 1504, 2956, 1202, 4074, 1069, 1510, 1948, 1947, 1949,
	1950, 1951, 1695, 3342, 2458, 961, 705, 961, 4074, 1139,
	94, 1069, 3497, 1525, 1446, 1526, 1527, 707, 4103, 94,
	165, 706, 3655, 94, 2584, 1694, 4073, 177, 1128, 1137,
	1530, 1531, 3535, 1692, 2134, 3441, 2955, 1493, 2583, 3517,
	4073, 1233, 3288, 3289, 1868, 2459, 1219, 2512, 1225, 1226,
	1227, 1228, 2457, 3288, 3289, 3292, 1701, 2882, 1220, 94,
	2367, 2989, 4102, 2847, 2784, 1028, 3292, 2110, 185, 1028,
	1755, 1726, 1265, 1266, 1655, 1028, 1451, 1448, 1449, 1450,
	1455, 1457, 1454, 1966, 1453, 1128, 2460, 2812, 2814, 1096,
	1213, 3129, 1098, 1967, 1447, 3128, 2456, 1709, 4184, 2842,
	124, 1713, 672, 1693, 1128, 2409, 1493, 1027, 1490, 3213,
	2151, 166, 171, 168, 174, 175, 176, 178, 180, 181,
	182, 183, 1456, 2600, 2152, 2611, 1473, 184, 186, 187,
	188, 1127, 2126, 2115, 2116, 2117, 2118, 2128, 2119, 2120,
	2121, 2133, 2129, 2122, 2123, 2130, 2131, 2132, 2124, 2125,
	2127, 1101, 1197, 1867, 1246, 1727, 1993, 1044, 1140, 1711,
	1712, 1218, 1260, 104, 105, 1206, 4003, 1212, 119, 1151,
	3576, 1693, 1661, 1662, 1663, 1664, 1665, 1666, 1138, 1485,
	1486, 1488, 1487, 1489, 1490, 3509, 1699, 2532, 1127, 2044,
	1462, 1101, 1974, 1093, 1121, 1124, 1125, 1769, 1085, 1686,
	1095, 1094, 1118, 1122, 3029, 2992, 1165, 1127, 3009, 2143,
	2991, 2620, 107, 1121, 1124, 1125, 1201, 1085, 2143, 2925,
	4149, 1118, 1122, 1117, 1461, 1460, 1461, 1435, 2992, 708,
	3221, 1452, 3704, 2991, 1963, 2611, 1964, 3551, 3550, 1965,
	1860, 2499, 120, 1128, 2511, 1707, 1729, 1232, 1877, 1099,
	1876, 1866, 2509, 2365, 2366, 1696, 2149, 2813, 1234, 2507,
	1710, 1844, 1845, 1846, 1139, 1137, 1039, 1986, 4192, 1870,
	1870, 2297, 1853, 1931, 4141, 3222, 1708, 1882, 1732, 1883,
	4036, 1885, 1887, 1462, 1913, 1891, 1893, 1895, 1897, 1899,
	1872, 1128, 3011, 1203, 3536, 4186, 1268, 1024, 1956, 3224,
	2504, 2504, 3969, 1760, 1761, 1247, 1026, 1994, 1217, 1970,
	1828, 1968, 1969, 1871, 1971, 1972, 1973, 3219, 1954, 1128,
	4182, 3317, 1200, 4183, 3874, 4181, 4037, 3873, 1921, 1922,
	1459, 1836, 1460, 1461, 1927, 1928, 3235, 3236, 1100, 3031,
	2508, 2506, 1462, 3220, 1850, 1863, 1127, 1851, 3970, 1849,
	3864, 1131, 1121, 1714, 3627, 4193, 1133, 963, 964, 965,
	1134, 1132, 1955, 3021, 3020, 3019, 1874, 3626, 3013, 2078,
	3017, 190, 3012, 3610, 3010, 3611, 3558, 3226, 1100, 3015,
	1727, 1135, 1953, 2079, 1491, 1492, 2077, 2148, 3014, 2066,
	2067, 2590, 2591, 1909, 1127, 1982, 1912, 129, 1914, 1131,
	1121, 1917, 3557, 3547, 1133, 3265, 3016, 3018, 1134, 1132,
	172, 1481, 1482, 1483, 1484, 1485, 1486, 1488, 1487, 1489,
	1490, 1842, 1127, 1459, 1164, 1460, 1461, 1943, 1161, 4154,
	1727, 1104, 1103, 128, 3253, 1102, 1483, 1484, 1485, 1486,
	1488, 1487, 1489, 1490, 2907, 3234, 2066, 2067, 2064, 2065,
	2906, 1999, 2297, 2905, 2464, 1957, 2294, 3237, 1941, 1940,
	1462, 1427, 1939, 1268, 1268, 2296, 169, 1995, 1996, 170,
	1479, 1929, 2063, 1923, 1920, 2021, 1919, 87, 1462, 959,
	87, 2000, 1459, 1462, 1460, 1461, 1918, 1889, 2007, 2008,
	2009, 1942, 1479, 189, 1480, 1481, 1482, 1483, 1484, 1485,
	1486, 1488, 1487, 1489, 1490, 1706, 3541, 713, 713, 42,
	2889, 713, 42, 2020, 2659, 1763, 1480, 1481, 1482, 1483,
	1484, 1485, 1486, 1488, 1487, 1489, 1490, 1451, 1448, 1449,
	1450, 1455, 1457, 1454, 1462, 1453, 1466, 1467, 1468, 1469,
	1470, 1471, 1472, 1464, 110, 1447, 4142, 4152, 1727, 1727,
	2105, 2105, 2103, 2103, 2106, 109, 3998, 108, 3997, 2647,
	1462, 1759, 110, 1740, 1479, 4082, 1727, 1475, 103, 1476,
	4080, 1727, 2068, 109, 3223, 108, 2480, 2479, 3973, 1694,
	1776, 2478, 2477, 1477, 1491, 1492, 1474, 1692, 1480, 1481,
	1482, 1483, 1484, 1485, 1486, 1488, 1487, 1489, 1490, 3972,
	1459, 1997, 1460, 1461, 2476, 2475, 1479, 173, 2001, 1741,
	2003, 2004, 2005, 2006, 2833, 4169, 179, 2010, 1459, 3971,
	1460, 1461, 2189, 1459, 2201, 1460, 1461, 1727, 3991, 2022,
	1480, 1481, 1482, 1483, 1484, 1485, 1486, 1488, 1487, 1489,
	1490, 3869, 2657, 4129, 1727, 1727, 101, 4078, 1727, 2833,
	1727, 85, 1458, 1727, 85, 103, 2045, 1693, 3853, 102,
	1458, 1727, 101, 1915, 2833, 4067, 2833, 4046, 2833, 4042,
	2138, 2075, 3852, 2134, 1459, 102, 1460, 1461, 3703, 1462,
	2028, 2029, 3701, 2081, 3623, 2083, 2084, 2085, 2086, 2087,
	2088, 2090, 2092, 2093, 2094, 2095, 2096, 2097, 1960, 1691,
	1459, 2080, 1460, 1461, 2284, 2285, 2286, 2287, 2288, 2307,
	3954, 1727, 3319, 1690, 1727, 1987, 2082, 1462, 2305, 2109,
	1689, 2309, 3555, 2211, 2312, 2313, 3594, 3988, 3877, 1727,
	1727, 1998, 2833, 3865, 3594, 1727, 2833, 3592, 2002, 2306,
	1504, 164, 3540, 2504, 1727, 2153, 2154, 2155, 2156, 2013,
	2014, 2015, 2016, 2017, 2018, 2019, 2295, 2293, 2144, 2167,
	2330, 3515, 1727, 2188, 2739, 1727, 3947, 1727, 2203, 3327,
	3324, 2126, 2115, 2116, 2117, 2118, 2128, 2119, 2120, 2121,
	2133, 2129, 2122, 2123, 2130, 2131, 2132, 2124, 2125, 2127,
	1480, 1481, 1482, 1483, 1484, 1485, 1486, 1488, 1487, 1489,
	1490, 2388, 3256, 3255, 3945, 1727, 3246, 3245, 2304, 2307,
	2916, 2310, 2311, 3243, 3244, 1462, 3227, 2903, 2305, 1459,
	3231, 1460, 1461, 1688, 104, 105, 1681, 3230, 3241, 3242,
	3241, 3240, 103, 2390, 2857, 1727, 2583, 2965, 2418, 2377,
	1832, 2946, 2372, 2373, 2567, 104, 105, 2939, 2940, 2878,
	1479, 2566, 3001, 2830, 2352, 2340, 1462, 1459, 2878, 1460,
	1461, 3232, 1462, 2833, 2832, 3512, 3228, 2074, 2655, 2526,
	103, 3229, 2525, 1090, 1480, 1481, 1482, 1483, 1484, 1485,
	1486, 1488, 1487, 1489, 1490, 2108, 1727, 2849, 2362, 2341,
	2024, 1727, 3508, 1990, 2427, 2428, 2429, 2430, 2422, 2413,
	2423, 2424, 2425, 2426, 3901, 2412, 1090, 2328, 1952, 1944,
	1040, 2394, 1934, 1930, 2879, 1926, 2433, 2434, 2435, 2436,
	1925, 1924, 1462, 2879, 2881, 1832, 1831, 3511, 2828, 2353,
	1775, 1774, 2346, 2583, 2347, 109, 1742, 1258, 3900, 3857,
	3856, 2447, 2355, 2416, 1727, 2049, 3602, 2943, 2493, 3942,
	1727, 3178, 2921, 3208, 2505, 1459, 2453, 1460, 1461, 2417,
	2375, 2857, 3508, 2583, 1458, 1074, 2400, 2399, 2398, 2856,
	4030, 4002, 2833, 1462, 2857, 2415, 2414, 3461, 2849, 3243,
	165, 3151, 1462, 2490, 2401, 2739, 2644, 177, 2643, 2504,
	2487, 2463, 2370, 1731, 2331, 1462, 1459, 1075, 1460, 1461,
	1462, 2108, 1459, 1130, 1460, 1461, 1458, 1462, 2046, 3924,
	1727, 1462, 2504, 1870, 1479, 1462, 2599, 2030, 2448, 1462,
	2437, 2439, 2440, 2444, 2857, 2607, 2462, 2466, 185, 1976,
	2498, 1762, 1462, 2501, 1029, 2502, 2518, 2474, 1480, 1481,
	1482, 1483, 1484, 1485, 1486, 1488, 1487, 1489, 1490, 1462,
	1112, 1129, 3508, 2448, 2497, 2496, 2500, 1462, 1111, 3268,
	3482, 1727, 1459, 2522, 1460, 1461, 2519, 2523, 2524, 3475,
	1727, 166, 171, 168, 174, 175, 176, 178, 180, 181,
	182, 183, 3472, 1727, 95, 4108, 2913, 184, 186, 187,
	188, 1462, 4049, 1202, 3470, 1727, 1462, 3889, 3433, 1727,
	1462, 2588, 3431, 1727, 1728, 1730, 3427, 1727, 1462, 2529,
	1028, 1028, 1028, 1459, 95, 1460, 1461, 3559, 3528, 3424,
	1727, 1462, 1459, 3888, 1460, 1461, 2609, 1734, 3854, 3716,
	1514, 3575, 1514, 1462, 3572, 1459, 2608, 1460, 1461, 1462,
	1459, 3553, 1460, 1461, 3422, 1727, 3375, 1459, 2603, 1460,
	1461, 1459, 3374, 1460, 1461, 1459, 1834, 1460, 1461, 1459,
	2446, 1460, 1461, 2560, 2307, 1462, 3315, 3270, 3560, 3561,
	3562, 1462, 1459, 2606, 1460, 1461, 3266, 2912, 3420, 1727,
	2947, 2443, 1462, 3418, 1727, 2438, 2461, 3416, 1727, 1459,
	1462, 1460, 1461, 2432, 2306, 3414, 1727, 1459, 2431, 1460,
	1461, 1462, 1959, 1905, 1865, 1861, 1830, 1462, 3412, 1727,
	121, 2344, 1462, 3522, 3523, 2626, 2575, 4164, 1462, 4162,
	3410, 1727, 1462, 4136, 4010, 2913, 3408, 1727, 2026, 3929,
	2581, 1459, 2641, 1460, 1461, 3525, 1459, 3262, 1460, 1461,
	1459, 3527, 1460, 1461, 3261, 2589, 3260, 1462, 1459, 2374,
	1460, 1461, 3406, 1727, 1906, 1907, 1908, 2378, 3896, 2381,
	2595, 1459, 2049, 1460, 1461, 3178, 2592, 2593, 2594, 3404,
	1727, 1462, 2926, 1459, 2075, 1460, 1461, 3402, 1727, 1459,
	2561, 1460, 1461, 1462, 3681, 2596, 3680, 2598, 3400, 1727,
	3563, 3359, 2027, 3197, 3398, 1727, 2601, 1462, 2602, 3396,
	1727, 3196, 669, 4006, 1462, 1459, 1727, 1460, 1461, 3394,
	1727, 1459, 3200, 1460, 1461, 1462, 3198, 3201, 2597, 3890,
	2619, 3199, 1459, 2361, 1460, 1461, 1042, 1739, 2350, 1462,
	1459, 3516, 1460, 1461, 3380, 1727, 3679, 3564, 3565, 3566,
	1462, 1459, 3156, 1460, 1461, 2604, 2783, 1459, 1462, 1460,
	1461, 3155, 1459, 3968, 1460, 1461, 3694, 1901, 1459, 1727,
	1460, 1461, 1459, 3696, 1460, 1461, 1725, 2569, 2570, 1721,
	3357, 1727, 2572, 2771, 2653, 1462, 730, 1043, 2815, 1462,
	3501, 2573, 3165, 1722, 2804, 1727, 1045, 1459, 3500, 1460,
	1461, 2802, 1727, 3202, 1046, 2866, 2867, 1028, 2105, 3504,
	2103, 2818, 2777, 1727, 1902, 1903, 1904, 1462, 2348, 2349,
	1724, 1459, 1723, 1460, 1461, 1975, 2754, 1727, 1462, 3239,
	2854, 2855, 1462, 1459, 1012, 1460, 1461, 2746, 1727, 2388,
	2816, 2896, 1028, 2874, 2917, 2737, 1727, 1459, 1168, 1460,
	1461, 3168, 3170, 1167, 1459, 2151, 1460, 1461, 1462, 3335,
	3171, 2819, 42, 2821, 3506, 1459, 2912, 1460, 1461, 2152,
	2049, 2871, 2735, 1727, 2873, 2853, 3530, 2539, 2834, 1459,
	2074, 1460, 1461, 101, 2995, 1426, 101, 2558, 2559, 1462,
	1459, 2563, 1460, 1461, 103, 103, 102, 4085, 1459, 102,
	1460, 1461, 2953, 2568, 2722, 1727, 129, 4178, 1462, 3258,
	2571, 110, 2843, 2564, 1699, 2720, 1727, 3987, 2806, 2718,
	1727, 1462, 109, 3884, 108, 1459, 1462, 1460, 1461, 1459,
	3238, 1460, 1461, 2616, 2870, 103, 2574, 2872, 2356, 2899,
	2901, 1693, 2826, 2372, 2373, 2716, 1727, 3154, 1053, 2553,
	2552, 1054, 2892, 2876, 2846, 3153, 2951, 1459, 1462, 1460,
	1461, 1725, 2551, 2831, 1721, 1462, 2550, 2549, 1459, 2548,
	1460, 1461, 1459, 3484, 1460, 1461, 3477, 2880, 1722, 2587,
	108, 3953, 2883, 1462, 3952, 3932, 2453, 3702, 1462, 2890,
	3700, 2893, 1462, 2962, 3699, 2714, 1727, 1462, 1459, 110,
	1460, 1461, 1462, 1717, 1718, 1724, 2146, 1723, 2615, 2904,
	109, 2147, 108, 2712, 1727, 3692, 1462, 3573, 3505, 109,
	2915, 1462, 3503, 2914, 3271, 2918, 2919, 2488, 1848, 1459,
	1462, 1460, 1461, 2922, 1052, 3691, 2927, 2928, 2929, 3494,
	2849, 1462, 2923, 110, 3665, 2710, 1727, 2207, 1459, 2959,
	1460, 1461, 2708, 1727, 109, 4166, 4165, 1853, 2830, 3057,
	2645, 1459, 2342, 1460, 1461, 1756, 1459, 1748, 1460, 1461,
	2706, 1727, 4165, 2948, 2949, 2704, 1727, 114, 115, 2702,
	1727, 2958, 3005, 3006, 2700, 1727, 4166, 3025, 3974, 2698,
	1727, 1462, 3539, 2043, 2041, 3, 10, 9, 1459, 1462,
	1460, 1461, 97, 2696, 1727, 1459, 1, 1460, 1461, 4143,
	1462, 2042, 2984, 1020, 8, 1429, 3003, 2694, 1727, 3022,
	2987, 1462, 1428, 1459, 3543, 1460, 1461, 2290, 1459, 3986,
	1460, 1461, 1459, 4097, 1460, 1461, 685, 1459, 2332, 1460,
	1461, 1697, 1459, 4137, 1460, 1461, 3040, 3041, 3042, 3043,
	3044, 3045, 3046, 3047, 3048, 3049, 1459, 2322, 1460, 1461,
	4093, 1459, 4094, 1460, 1461, 3023, 1945, 2960, 1935, 3605,
	1459, 2258, 1460, 1461, 3885, 1728, 2329, 3274, 2692, 1727,
	2494, 1459, 3571, 1460, 1461, 2451, 2690, 1727, 1120, 154,
	1462, 2410, 2411, 4062, 118, 1078, 117, 2688, 1727, 2862,
	2865, 2866, 2867, 2863, 1123, 2864, 2868, 1231, 2683, 1727,
	2489, 2354, 3595, 3059, 1462, 2897, 2419, 3097, 1781, 3099,
	3007, 1779, 1780, 3115, 2993, 1778, 1783, 2994, 3024, 1782,
	1462, 1459, 4034, 1460, 1461, 3110, 3111, 3112, 3113, 1459,
	3343, 1460, 1461, 2646, 3440, 2034, 720, 1462, 2869, 3004,
	1459, 1462, 1460, 1461, 714, 192, 1770, 3133, 1749, 1162,
	1462, 1459, 675, 1460, 1461, 3247, 2527, 3122, 1462, 681,
	1511, 2025, 3152, 2884, 1072, 2938, 3124, 2679, 1727, 1064,
	2343, 2388, 2820, 1071, 3862, 3050, 3186, 1744, 1462, 3498,
	3164, 3166, 2836, 3169, 2295, 2293, 2295, 2293, 3095, 3162,
	3967, 2677, 1727, 3185, 2875, 87, 3693, 4047, 2388, 2388,
	2388, 2388, 2388, 2390, 1462, 2894, 1745, 2465, 3861, 3460,
	3133, 2618, 3105, 3106, 3107, 3108, 3109, 2141, 2388, 1501,
	1459, 2388, 1460, 1461, 2670, 1727, 3190, 1031, 2668, 1727,
	2390, 2390, 2390, 2390, 2390, 2387, 1986, 3132, 3577, 3207,
	3123, 3660, 3125, 1462, 1459, 1743, 1460, 1461, 2061, 743,
	2390, 742, 3144, 2390, 1462, 740, 3150, 3145, 3147, 3149,
	1459, 2822, 1460, 1461, 2850, 3473, 3159, 1462, 2924, 3160,
	3157, 1462, 1465, 949, 3172, 3173, 2810, 1459, 1462, 1460,
	1461, 1459, 1757, 1460, 1461, 3291, 2861, 2859, 2858, 1033,
	1459, 3439, 1460, 1461, 1462, 3299, 3189, 1032, 1459, 2562,
	1460, 1461, 3203, 104, 105, 3192, 3193, 3211, 3195, 3191,
	2395, 1462, 3194, 3524, 3520, 1462, 3209, 4089, 1459, 3210,
	1460, 1461, 3217, 3158, 2389, 2385, 2829, 900, 899, 752,
	3435, 3248, 1462, 3250, 2973, 2974, 2975, 2976, 2977, 2978,
	3249, 3372, 744, 734, 1459, 962, 1460, 1461, 898, 897,
	3301, 1462, 3302, 2968, 3371, 3316, 2970, 2895, 3363, 1462,
	3312, 2049, 2988, 3272, 3303, 3300, 2908, 1443, 3251, 3252,
	3175, 2453, 3304, 1716, 3293, 1462, 1719, 2351, 3310, 1091,
	3340, 3361, 1462, 1459, 2996, 1460, 1461, 3993, 3181, 2586,
	3369, 1715, 4000, 3181, 1459, 3282, 1460, 1461, 2800, 3589,
	3263, 2944, 2799, 3331, 3330, 3328, 2481, 1459, 3338, 1460,
	1461, 1459, 69, 1460, 1461, 46, 1462, 3962, 1459, 2795,
	1460, 1461, 4031, 892, 889, 3345, 3346, 3348, 3347, 3662,
	3663, 3349, 1462, 3351, 1459, 3353, 1460, 1461, 2794, 3664,
	3364, 3365, 3366, 3367, 3368, 3118, 2793, 3119, 4013, 4014,
	888, 1459, 4015, 1460, 1461, 1459, 2196, 1460, 1461, 1439,
	1436, 4110, 2792, 2036, 96, 36, 35, 1514, 34, 2791,
	33, 1514, 1459, 32, 1460, 1461, 26, 25, 24, 3273,
	23, 2605, 22, 29, 19, 2610, 21, 3485, 20, 3487,
	18, 1459, 3285, 1460, 1461, 4132, 4177, 123, 55, 1459,
	3455, 1460, 1461, 2790, 52, 50, 131, 3459, 2613, 130,
	2614, 53, 49, 1205, 47, 1459, 2622, 1460, 1461, 2781,
	2624, 2625, 1459, 31, 1460, 1461, 30, 17, 16, 2631,
	2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640, 15,
	2642, 3339, 14, 13, 12, 3184, 11, 7, 6, 2388,
	1694, 3486, 39, 3488, 38, 37, 1459, 28, 1460, 1461,
	3490, 27, 3537, 2648, 2649, 2650, 2651, 2652, 3502, 2654,
	3495, 40, 1459, 2656, 1460, 1461, 4, 2661, 2662, 2931,
	2663, 2390, 1462, 2666, 2667, 2669, 2671, 2672, 2673, 2674,
	2675, 2676, 2678, 2680, 2681, 2682, 2684, 3526, 2686, 2687,
	2689, 2691, 2693, 2695, 2697, 2699, 2701, 2703, 2705, 2707,
	2709, 2711, 2713, 2715, 2717, 2719, 2721, 2723, 2724, 2725,
	3531, 2727, 732, 2729, 3294, 2731, 2732, 2483, 2734, 2736,
	2738, 3303, 3300, 3462, 2741, 3464, 3465, 3466, 2745, 3304,
	3538, 3529, 2750, 2751, 2752, 2753, 3554, 3532, 3556, 3507,
	0, 1462, 0, 3492, 0, 2764, 2765, 2766, 2767, 2768,
	2769, 0, 1462, 2773, 2774, 3333, 3334, 1462, 0, 2780,
	0, 2776, 1462, 0, 0, 0, 2782, 1462, 0, 0,
	0, 2785, 2786, 2787, 2788, 2789, 3519, 3548, 3549, 0,
	0, 0, 2796, 2797, 0, 2798, 0, 0, 2801, 2803,
	2354, 1462, 2805, 3599, 3600, 3533, 3534, 0, 1462, 0,
	0, 0, 2817, 0, 0, 0, 1462, 0, 0, 0,
	0, 1462, 1459, 0, 1460, 1461, 1462, 3259, 0, 0,
	0, 1051, 0, 0, 1057, 1057, 1462, 0, 2779, 0,
	3582, 1462, 0, 0, 3586, 3587, 3588, 0, 3601, 2778,
	0, 0, 3617, 3297, 2775, 0, 0, 0, 0, 2770,
	0, 0, 0, 0, 2763, 0, 0, 3311, 0, 0,
	0, 0, 0, 1462, 0, 0, 0, 0, 1462, 0,
	0, 0, 0, 1462, 0, 0, 0, 3329, 2762, 0,
	3332, 1459, 0, 1460, 1461, 2761, 0, 0, 1462, 0,
	3649, 0, 1459, 2760, 1460, 1461, 0, 1459, 2759, 1460,
	1461, 0, 1459, 2758, 1460, 1461, 0, 1459, 1462, 1460,
	1461, 0, 0, 2757, 3678, 0, 0, 3685, 2756, 3687,
	1462, 0, 0, 3668, 0, 3669, 3670, 3671, 0, 0,
	0, 1459, 3658, 1460, 1461, 0, 1462, 0, 1459, 0,
	1460, 1461, 3185, 3688, 0, 87, 1459, 3185, 1460, 1461,
	2755, 1459, 0, 1460, 1461, 2749, 1459, 1462, 1460, 1461,
	2748, 0, 0, 0, 0, 0, 1459, 1462, 1460, 1461,
	0, 1459, 1462, 1460, 1461, 2747, 2105, 42, 2103, 3718,
	1462, 3622, 3689, 0, 0, 3698, 3697, 0, 0, 0,
	3710, 0, 0, 3708, 3705, 2744, 3707, 0, 0, 0,
	0, 0, 0, 1459, 0, 1460, 1461, 2743, 1459, 0,
	1460, 1461, 3868, 1459, 0, 1460, 1461, 0, 0, 0,
	0, 0, 3722, 2742, 0, 0, 0, 0, 1459, 0,
	1460, 1461, 0, 0, 0, 0, 0, 3578, 3579, 0,
	0, 0, 0, 3491, 2740, 0, 0, 0, 1459, 0,
	1460, 1461, 0, 0, 2733, 3860, 3859, 3887, 0, 2730,
	1459, 0, 1460, 1461, 0, 0, 0, 2728, 0, 3875,
	3879, 3880, 0, 0, 0, 0, 1459, 0, 1460, 1461,
	0, 0, 0, 0, 3926, 3927, 0, 0, 3035, 3036,
	3037, 3038, 3039, 3712, 3858, 0, 0, 1459, 3686, 1460,
	1461, 0, 0, 2105, 0, 2103, 3930, 1459, 3054, 1460,
	1461, 0, 1459, 0, 1460, 1461, 0, 3719, 3720, 0,
	1459, 0, 1460, 1461, 0, 0, 0, 0, 3552, 3870,
	3871, 3872, 0, 0, 0, 3181, 0, 0, 0, 3975,
	3185, 0, 3933, 3714, 0, 0, 3936, 3966, 3567, 0,
	0, 3568, 3569, 3570, 1532, 1533, 1534, 1535, 1536, 1537,
	1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547,
	1548, 1549, 1550, 1552, 1553, 1554, 1555, 1556, 1557, 1558,
	1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568,
	1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578,
	1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588,
	1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598,
	1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608,
	1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618,
	1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1629,
	1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639,
	1640, 1641, 1642, 1643, 1644, 1650, 1651, 1652, 1653, 1667,
	1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677,
	1678, 1679, 1680, 3960, 3931, 1462, 3976, 3959, 0, 3950,
	0, 0, 0, 1462, 3184, 0, 3956, 3994, 3958, 3184,
	0, 1462, 0, 0, 0, 1462, 0, 0, 0, 0,
	0, 1462, 0, 0, 0, 87, 3187, 0, 2862, 2865,
	2866, 2867, 2863, 1694, 2864, 2868, 3979, 3978, 3522, 3523,
	0, 0, 1462, 0, 3205, 0, 1462, 0, 0, 0,
	0, 0, 3863, 3983, 0, 0, 0, 42, 0, 0,
	0, 3996, 3999, 1462, 0, 0, 0, 0, 0, 0,
	4001, 0, 0, 0, 3867, 0, 0, 0, 0, 0,
	1462, 0, 2726, 0, 0, 0, 0, 0, 0, 4008,
	2685, 0, 0, 0, 0, 0, 0, 4018, 2665, 0,
	0, 0, 2664, 0, 0, 0, 0, 0, 2660, 0,
	0, 0, 0, 0, 0, 0, 4019, 0, 0, 4020,
	0, 0, 0, 4044, 0, 0, 0, 0, 87, 2658,
	0, 0, 0, 2623, 0, 1459, 0, 1460, 1461, 0,
	0, 0, 4029, 1459, 4038, 1460, 1461, 0, 0, 0,
	2617, 1459, 0, 1460, 1461, 1459, 1463, 1460, 1461, 1694,
	42, 1459, 4050, 1460, 1461, 3887, 4064, 2612, 0, 4053,
	4061, 0, 3337, 4048, 4058, 4055, 0, 0, 4054, 4052,
	4057, 4056, 1459, 0, 1460, 1461, 1459, 1520, 1460, 1461,
	0, 0, 0, 3980, 3354, 3355, 4083, 3356, 3358, 3360,
	0, 4106, 3184, 1459, 4096, 1460, 1461, 4088, 0, 4101,
	0, 0, 0, 4075, 0, 0, 0, 4114, 0, 0,
	1459, 4116, 1460, 1461, 0, 3373, 4127, 0, 0, 0,
	3377, 3378, 3379, 3381, 3382, 3383, 3384, 3385, 3386, 3387,
	3388, 3389, 3390, 3391, 3392, 3393, 3395, 3397, 3399, 3401,
	3403, 3405, 3407, 3409, 3411, 3413, 3415, 3417, 3419, 3421,
	3423, 3425, 3426, 3428, 3429, 3430, 3432, 1986, 4131, 3434,
	4075, 3436, 3437, 3438, 4147, 4157, 3442, 3443, 3444, 3445,
	3446, 3447, 3448, 3449, 3450, 3451, 3452, 4163, 2105, 4161,
	2103, 4160, 4159, 4150, 4156, 3458, 4126, 4146, 4171, 3463,
	0, 4040, 0, 3467, 3468, 4045, 3469, 3471, 4179, 3474,
	3476, 3181, 3478, 3479, 3480, 3481, 4187, 4185, 1010, 0,
	2297, 0, 3489, 1011, 0, 0, 0, 0, 4130, 0,
	0, 3985, 0, 2104, 0, 0, 4196, 4197, 3927, 4195,
	1798, 0, 0, 0, 0, 0, 2105, 4075, 2103, 4194,
	0, 0, 0, 0, 0, 0, 0, 3513, 3514, 3992,
	0, 3518, 0, 0, 0, 4004, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4122, 0, 0, 0, 1798, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 968,
	969, 970, 971, 972, 973, 974, 975, 976, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 0, 4039, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3593, 0, 0,
	0, 0, 0, 0, 0, 1747, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1786, 0, 0,
	4005, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3612, 1835, 0, 3616, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1786, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3628, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1799, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4144, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3651, 0, 0, 0, 0, 0, 1799, 0,
	0, 0, 0, 0, 0, 3659, 0, 0, 0, 0,
	0, 0, 3666, 0, 1812, 1815, 1816, 1817, 1818, 1819,
	1820, 1991, 1821, 1822, 1824, 1825, 1823, 1826, 1827, 1800,
	1801, 1802, 1803, 1784, 1785, 1813, 0, 1787, 0, 1788,
	1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 0, 0,
	1797, 1804, 1805, 1806, 1807, 0, 1808, 1809, 1810, 1811,
	0, 1812, 1815, 1816, 1817, 1818, 1819, 1820, 0, 1821,
	1822, 1824, 1825, 1823, 1826, 1827, 1800, 1801, 1802, 1803,
	1784, 1785, 1813, 0, 1787, 0, 1788, 1789, 1790, 1791,
	1792, 1793, 1794, 1795, 1796, 0, 0, 1797, 1804, 1805,
	1806, 1807, 0, 1808, 1809, 1810, 1811, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3876, 0, 0, 0, 0, 0, 0, 0, 0,
	3883, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3893, 3894, 3895, 0, 3897, 0, 3898, 3899, 0, 0,
	0, 3902, 3903, 3904, 3905, 3906, 3907, 3908, 3909, 3910,
	3911, 3912, 3913, 3914, 3915, 3916, 3917, 3918, 3919, 3920,
	3921, 3922, 3923, 0, 3925, 3928, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3937, 3938, 3939, 3940, 3941, 3943, 3944, 3946, 3948, 3949,
	3951, 0, 0, 0, 3955, 0, 0, 0, 3957, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2056, 2057, 2058, 2059, 0, 1814, 0, 0, 0,
	0, 0, 0, 3984, 0, 0, 2072, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2111, 2112, 1814, 0, 0, 0, 2135, 0, 0,
	2139, 2140, 0, 0, 0, 2145, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166,
	0, 2168, 0, 0, 0, 2190, 2191, 2192, 2193, 2194,
	2195, 2197, 0, 2202, 0, 2204, 2205, 2206, 0, 2208,
	2209, 2210, 0, 2212, 2213, 2214, 2215, 2216, 2217, 2218,
	2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228,
	2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238,
	2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248,
	2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2261,
	2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271,
	2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281,
	2282, 2283, 0, 0, 0, 0, 0, 2289, 0, 2291,
	0, 2298, 2299, 2300, 2301, 2302, 2303, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 4009, 2323,
	2324, 2325, 2326, 2327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4024, 0, 0, 0, 0, 0, 4027, 0,
	4028, 0, 0, 0, 0, 0, 0, 0, 0, 1057,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4043, 0, 0, 0, 0, 0, 190,
	0, 0, 0, 0, 0, 0, 2368, 2369, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4069,
	4070, 0, 0, 0, 0, 129, 0, 151, 0, 0,
	0, 0, 2407, 4077, 4079, 4081, 0, 0, 172, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4087, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4109, 0, 0, 0, 0, 0, 162,
	0, 0, 0, 0, 0, 150, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 945, 0, 0, 0,
	0, 0, 0, 2449, 169, 0, 0, 170, 0, 0,
	0, 4128, 0, 3743, 3745, 3744, 3808, 3809, 3810, 3811,
	3812, 3813, 3814, 794, 0, 0, 0, 138, 139, 161,
	160, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4151, 4153, 4155, 0, 0,
	0, 0, 195, 0, 0, 195, 0, 0, 0, 718,
	0, 0, 0, 0, 724, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 4176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 0, 0, 4188, 4189, 0, 0,
	1010, 0, 0, 0, 0, 1011, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2104, 724, 195, 724, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 155, 136, 158, 143, 135, 0, 156, 157,
	0, 0, 0, 0, 0, 173, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 144, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 147,
	145, 140, 141, 142, 146, 0, 0, 0, 0, 0,
	0, 137, 0, 0, 0, 0, 0, 0, 0, 0,
	148, 968, 969, 970, 971, 972, 973, 974, 975, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1009, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3757, 3758, 0, 0,
	3833, 3832, 3831, 0, 0, 3829, 3830, 3828, 0, 164,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2621, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2627, 2628, 2629, 2630,
	3834, 915, 0, 770, 771, 3835, 3836, 919, 3837, 773,
	774, 916, 917, 0, 768, 772, 918, 920, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1520,
	0, 0, 0, 0, 0, 159, 0, 0, 0, 0,
	0, 0, 0, 3740, 3741, 3742, 3746, 3747, 3748, 3759,
	3806, 3807, 3815, 3817, 871, 3816, 3818, 3819, 3820, 3823,
	3824, 3825, 3826, 3821, 3822, 3827, 3723, 3727, 3724, 3725,
	3726, 3738, 3728, 3729, 3730, 3731, 3732, 3733, 3734, 3735,
	3736, 3737, 3739, 3838, 3839, 3840, 3841, 3842, 3843, 3752,
	3756, 3755, 3753, 3754, 3750, 3751, 3778, 3777, 3779, 3780,
	3781, 3782, 3783, 3784, 3786, 3785, 3787, 3788, 3789, 3790,
	3791, 3792, 3760, 3761, 3764, 3765, 3763, 3762, 3766, 3775,
	3776, 3767, 3768, 3769, 3770, 3771, 3772, 3774, 3773, 3793,
	3794, 3795, 3796, 3797, 3799, 3798, 3802, 3803, 3801, 3800,
	3805, 3804, 0, 0, 152, 0, 0, 153, 0, 0,
	0, 0, 0, 0, 0, 921, 0, 922, 0, 0,
	926, 0, 0, 0, 928, 927, 0, 929, 891, 890,
	0, 0, 923, 924, 0, 925, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1747, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3844, 3845, 3846, 3847, 3848, 3849, 3850, 3851, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 166,
	171, 168, 174, 175, 176, 178, 180, 181, 182, 183,
	0, 0, 0, 0, 0, 184, 186, 187, 188, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	724, 0, 724, 724, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 724, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3000, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3026, 3027,
	3028, 0, 0, 3030, 0, 0, 3032, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3051, 3052, 3053, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3058, 0,
	0, 3060, 3061, 3062, 0, 0, 0, 3063, 3064, 0,
	0, 3065, 0, 3066, 0, 0, 0, 0, 0, 0,
	3067, 0, 3068, 0, 0, 0, 3069, 0, 3070, 0,
	0, 3071, 0, 3072, 0, 3073, 0, 3074, 0, 3075,
	0, 3076, 0, 3077, 0, 3078, 0, 3079, 0, 3080,
	0, 3081, 0, 3082, 0, 3083, 0, 3084, 0, 3085,
	0, 3086, 0, 3087, 0, 3088, 0, 0, 0, 3089,
	0, 3090, 0, 3091, 0, 0, 3092, 0, 3093, 0,
	3094, 0, 2261, 3096, 0, 0, 3098, 0, 0, 3100,
	3101, 3102, 3103, 0, 0, 0, 0, 3104, 2261, 2261,
	2261, 2261, 2261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3114, 0, 0, 0, 0, 0, 0,
	0, 3127, 1506, 0, 3131, 0, 0, 0, 0, 0,
	0, 0, 0, 3134, 3135, 3136, 3137, 3138, 3139, 0,
	0, 0, 3140, 3141, 0, 3142, 0, 3143, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1057, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 0, 724, 724, 0, 0, 0, 0,
	0, 0, 3176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3206, 0, 0,
	0, 0, 0, 0, 724, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 724,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 0,
	724, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	724, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3269, 0,
	0, 0, 0, 724, 0, 724, 0, 0, 0, 0,
	0, 0, 0, 724, 0, 0, 1506, 724, 0, 0,
	724, 724, 724, 724, 0, 724, 0, 724, 724, 0,
	724, 724, 724, 724, 724, 724, 86, 44, 45, 88,
	0, 0, 0, 1506, 724, 724, 1506, 724, 1506, 195,
	724, 0, 0, 0, 0, 0, 0, 0, 92, 0,
	0, 0, 48, 76, 77, 0, 74, 78, 0, 195,
	0, 0, 0, 0, 0, 75, 0, 0, 0, 0,
	0, 0, 724, 0, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3362, 724, 0, 0, 724, 0,
	195, 195, 0, 0, 62, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 95, 195, 0, 0,
	3376, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 724, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 944, 0, 0, 0, 0, 0,
	0, 0, 0, 83, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 703, 0, 0, 0,
	0, 0, 723, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 51, 54, 57,
	56, 59, 0, 73, 0, 0, 82, 79, 0, 0,
	0, 0, 0, 0, 723, 0, 723, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	61, 91, 90, 0, 0, 71, 72, 58, 0, 0,
	0, 0, 0, 80, 81, 0, 0, 0, 0, 724,
	724, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 724, 0, 0, 0, 0, 0, 0, 3574,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 63, 64, 0, 65,
	66, 67, 68, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	724, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1506, 0,
	60, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3618, 0, 3619, 0, 3620, 0, 3621, 0, 0, 0,
	0, 0, 0, 0, 3624, 3625, 0, 0, 0, 0,
	0, 0, 0, 3629, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3630, 0, 3631,
	0, 3632, 0, 3633, 0, 3634, 0, 3635, 0, 3636,
	0, 3637, 0, 3638, 0, 3639, 0, 3640, 0, 3641,
	0, 3642, 0, 3643, 0, 3644, 0, 3645, 0, 0,
	3646, 0, 0, 0, 3647, 0, 3648, 0, 0, 0,
	89, 0, 3650, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3667, 0, 0, 0, 0, 0,
	0, 0, 0, 3672, 0, 3673, 3674, 0, 3675, 0,
	3676, 0, 2308, 0, 0, 3677, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3706, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3715, 0, 195, 3717, 0,
	0, 0, 724, 0, 0, 0, 0, 0, 0, 0,
	3721, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	94, 0, 0, 0, 0, 0, 3855, 0, 195, 0,
	0, 724, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 0, 724,
	0, 0, 2308, 195, 0, 195, 0, 195, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 724, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 70, 0, 724,
	0, 0, 0, 0, 0, 0, 724, 724, 724, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 724, 0, 0, 0,
	0, 0, 724, 724, 3965, 0, 724, 0, 724, 0,
	0, 0, 0, 0, 724, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 724,
	0, 0, 0, 0, 724, 0, 0, 0, 724, 724,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 0,
	0, 0, 0, 195, 0, 190, 0, 0, 723, 1422,
	723, 723, 0, 195, 195, 0, 2937, 195, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 195,
	723, 129, 0, 151, 0, 0, 195, 0, 0, 0,
	0, 0, 0, 0, 172, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1505,
	0, 0, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 724, 0, 0, 0, 162, 0, 0, 0, 0,
	0, 150, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 0, 0, 170, 0, 0, 0, 0, 0, 4007,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1856, 1857, 161, 160, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1506, 0, 2308, 0, 0,
	0, 0, 0, 0, 0, 4021, 0, 0, 4022, 0,
	4023, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 901, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 155, 1858,
	158, 0, 1855, 0, 156, 157, 0, 0, 0, 0,
	0, 173, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 722, 0, 0, 0, 0, 0, 0, 0, 0,
	1505, 0, 4107, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4123, 0, 4124, 0, 4125, 0, 0, 0, 0,
	0, 0, 0, 1082, 0, 1089, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 723, 723, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 723, 0, 0, 4174, 0, 4175, 195, 0,
	0, 0, 0, 0, 0, 164, 195, 723, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 724, 723, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 723, 0,
	0, 724, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 723, 0, 723, 0, 195, 0, 0, 0, 0,
	195, 723, 0, 0, 1505, 723, 0, 0, 723, 723,
	723, 723, 0, 723, 0, 723, 723, 0, 723, 723,
	723, 723, 723, 723, 0, 0, 0, 0, 0, 0,
	0, 1505, 723, 723, 1505, 723, 1505, 0, 723, 0,
	0, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 724, 0,
	723, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	0, 195, 0, 723, 0, 0, 723, 0, 0, 0,
	0, 0, 0, 902, 0, 724, 0, 0, 0, 0,
	0, 0, 724, 0, 0, 0, 724, 724, 0, 0,
	0, 724, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1506, 724, 0,
	723, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 195, 195, 195, 195, 195, 0, 0, 0, 193,
	152, 0, 668, 153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 195, 0,
	0, 0, 668, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 1038, 0,
	195, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1058, 1058, 0, 0, 0,
	0, 0, 0, 0, 668, 0, 724, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 724, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 166, 171, 168, 174, 175,
	176, 178, 180, 181, 182, 183, 0, 0, 0, 0,
	0, 184, 186, 187, 188, 0, 0, 723, 723, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	723, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 723, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1505, 724,
	0, 0, 0, 0, 0, 0, 0, 2113, 0, 0,
	0, 724, 0, 0, 0, 0, 1505, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 724, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	724, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 724, 0, 0, 1270, 1506, 1270,
	1270, 724, 724, 1506, 195, 195, 195, 195, 195, 0,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 1434,
	0, 0, 195, 0, 195, 0, 0, 195, 195, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	723, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 724, 0, 0, 1506,
	0, 0, 0, 0, 724, 0, 0, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	723, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 723,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 723, 0, 0,
	723, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	723, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 723, 0, 0,
	0, 0, 0, 0, 723, 723, 723, 0, 0, 0,
	0, 0, 724, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 723, 0, 0, 0, 0, 0,
	723, 723, 0, 0, 723, 0, 723, 0, 0, 0,
	0, 0, 723, 0, 0, 0, 0, 0, 668, 195,
	668, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1703, 1704, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 723, 0, 0,
	0, 0, 723, 0, 0, 0, 723, 723, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1753, 0, 0, 0, 195, 0, 0, 0, 0,
	668, 0, 0, 0, 0, 0, 1771, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1829, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 1838, 1507, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 195, 195, 195,
	1082, 0, 1864, 0, 0, 0, 0, 724, 724, 0,
	1873, 0, 0, 0, 1875, 0, 0, 1878, 1879, 1881,
	1881, 0, 1881, 0, 1881, 1881, 0, 1890, 1881, 1881,
	1881, 1881, 1881, 0, 0, 0, 0, 0, 0, 723,
	0, 1910, 1911, 0, 1082, 0, 0, 1916, 0, 0,
	0, 0, 0, 0, 0, 0, 724, 724, 724, 724,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1958,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1979, 0, 0, 1983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1505, 0, 723, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1507,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 724, 0, 724, 0, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 668, 0, 0,
	0, 0, 0, 0, 0, 1506, 0, 0, 0, 195,
	0, 0, 724, 0, 724, 0, 0, 0, 0, 0,
	1038, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 668, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 668, 0, 0, 1270, 1270, 0, 0,
	0, 0, 724, 0, 0, 0, 0, 0, 0, 2037,
	0, 0, 0, 0, 0, 195, 0, 0, 724, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 724, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1507, 0, 723, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 723,
	0, 0, 0, 0, 0, 0, 0, 2099, 0, 0,
	1507, 0, 0, 1507, 0, 1507, 668, 0, 0, 0,
	0, 0, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1852, 0, 0, 1932, 0, 0, 0,
	0, 0, 0, 0, 2888, 724, 0, 0, 129, 0,
	151, 668, 724, 0, 724, 0, 0, 0, 0, 0,
	0, 172, 0, 0, 0, 0, 0, 1985, 668, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 724, 668, 0, 0, 0, 0, 0,
	0, 668, 162, 0, 0, 0, 723, 0, 150, 0,
	2011, 2012, 668, 668, 668, 668, 668, 668, 668, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	170, 0, 0, 723, 0, 0, 0, 0, 0, 0,
	723, 0, 0, 0, 723, 723, 0, 0, 0, 723,
	1856, 1857, 161, 160, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1505, 723, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2345,
	0, 724, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 723, 155, 1858, 158, 2358, 1855,
	0, 156, 157, 0, 0, 724, 195, 0, 173, 0,
	0, 0, 0, 0, 0, 0, 1753, 179, 0, 1270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1082,
	0, 0, 723, 0, 0, 0, 0, 0, 668, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 724, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 724, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1506, 724, 0, 724, 0, 1089, 0, 0, 0,
	0, 0, 0, 2471, 2472, 2473, 0, 1507, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 724,
	2308, 0, 0, 1082, 0, 1507, 0, 0, 0, 1089,
	1873, 0, 0, 1873, 0, 1873, 0, 0, 0, 0,
	0, 2503, 164, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 723, 0, 0,
	195, 724, 0, 0, 0, 0, 0, 0, 0, 723,
	0, 0, 0, 0, 0, 0, 1082, 0, 0, 0,
	0, 2099, 0, 0, 0, 2099, 2099, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	723, 724, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 723, 0,
	0, 0, 0, 0, 0, 724, 0, 0, 0, 0,
	195, 0, 723, 0, 0, 0, 1505, 0, 159, 723,
	723, 1505, 0, 0, 724, 0, 724, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1985,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2577, 0,
	0, 0, 3254, 0, 1932, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1058, 0, 0, 0, 723, 0, 0, 1505, 0, 0,
	0, 0, 723, 0, 0, 1038, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 152, 0, 0,
	153, 0, 668, 0, 0, 0, 0, 0, 0, 1985,
	668, 0, 668, 0, 668, 2397, 0, 0, 0, 0,
	0, 0, 0, 0, 1270, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 3336, 0, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 95, 0, 0, 1010, 0, 0, 0, 950,
	1011, 963, 964, 965, 951, 0, 0, 952, 953, 185,
	954, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 959, 0, 966, 967, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 166, 171, 168, 174, 175, 176, 178, 180,
	181, 182, 183, 0, 0, 0, 0, 0, 184, 186,
	187, 188, 0, 0, 3305, 3306, 0, 0, 0, 0,
	723, 0, 0, 0, 0, 0, 968, 969, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 668, 0, 0, 0, 0, 0, 0,
	668, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	668, 668, 0, 0, 668, 0, 2565, 0, 0, 3307,
	0, 0, 0, 0, 0, 0, 668, 0, 0, 0,
	0, 0, 0, 668, 0, 0, 0, 0, 0, 0,
	0, 3542, 0, 0, 2823, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2838, 668,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 723, 723, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3308, 3309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 723, 723, 723, 723, 0, 0,
	0, 0, 1507, 0, 1985, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2920, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 915, 2358, 0, 0, 0, 0, 919, 0, 2945,
	0, 916, 917, 1873, 1873, 0, 918, 920, 2950, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2961, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	723, 0, 723, 2099, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1505, 0, 0, 0, 0, 0, 0,
	723, 0, 723, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2099, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 668, 0, 0, 0, 0,
	0, 0, 0, 1932, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	723, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 723, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 723,
	0, 0, 668, 0, 0, 0, 0, 668, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3116, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 723, 0, 0, 0, 0, 0, 0,
	723, 668, 723, 0, 0, 0, 0, 0, 2930, 1881,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3161, 0, 0,
	0, 723, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1270, 0, 0, 0, 0, 0, 0, 3188, 1881,
	0, 0, 0, 0, 1507, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 668, 668, 668,
	668, 668, 668, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 668, 668, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 668, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1082, 0, 0, 0, 0, 0, 0,
	0, 2358, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 723,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 723, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 723,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 723,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1505,
	723, 0, 723, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1829,
	0, 0, 0, 0, 0, 0, 0, 723, 723, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 723,
	0, 0, 1058, 0, 668, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1507, 0, 0, 0, 0,
	1507, 668, 668, 668, 668, 668, 0, 0, 0, 723,
	0, 0, 0, 3204, 0, 0, 0, 0, 0, 1932,
	0, 668, 0, 0, 668, 3212, 1985, 0, 0, 0,
	0, 0, 0, 723, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 723, 0, 723, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	668, 0, 0, 0, 2358, 2358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1507, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 668, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	668, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3606, 3607, 3608, 3609, 0, 0, 0,
	668, 0, 0, 668, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3683,
	0, 3683, 0, 0, 0, 0, 668, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3711,
	0, 3713, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 668, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2358,
	0, 668, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3878, 0, 0, 0, 0,
	0, 668, 0, 0, 668, 668, 668, 0, 1270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3683, 0, 0, 0, 0, 0, 0, 3683,
	0, 3683, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1932, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1507, 0, 0, 0, 1932, 0, 2358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1932, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4025, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4033, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2358,
	0, 4041, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1270, 1270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4091, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4033, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1829, 0, 4091, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1932, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 668, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 0, 0, 0, 0, 1405, 1391,
	523, 0, 1333, 1408, 1302, 1321, 1418, 1324, 1327, 1370,
	1280, 1348, 413, 1318, 1273, 0, 0, 1306, 1275, 1313,
	1276, 1304, 1335, 269, 1301, 1393, 1352, 1407, 363, 266,
	1282, 1307, 427, 1323, 203, 1372, 484, 251, 374, 371,
	578, 281, 272, 268, 249, 316, 382, 425, 513, 419,
	1414, 367, 1358, 0, 494, 398, 0, 0, 1507, 1337,
	1397, 1346, 1384, 1332, 1371, 1290, 1357, 1409, 1319, 1367,
	1410, 322, 247, 324, 202, 410, 495, 285, 0, 0,
	0, 0, 4065, 946, 0, 0, 0, 4063, 4066, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	348, 357, 356, 337, 338, 340, 342, 347, 354, 360,
	1315, 1364, 602, 1404, 1316, 1366, 264, 320, 271, 263,
	575, 1415, 1396, 1279, 1345, 1403, 1340, 1932, 0, 228,
	1406, 1339, 0, 1369, 0, 1421, 1274, 1360, 0, 1277,
	1281, 1417, 1401, 1310, 274, 0, 0, 0, 0, 0,
	0, 0, 1336, 1347, 1381, 1385, 1330, 0, 0, 0,
	0, 0, 0, 0, 0, 1308, 0, 1356, 0, 0,
	0, 1286, 1278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1985, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1334, 0, 0, 0, 0,
	1289, 0, 1309, 1382, 0, 1272, 296, 1283, 399, 256,
	0, 450, 1389, 1400, 1331, 620, 1402, 1329, 1328, 1376,
	1287, 1395, 1322, 362, 1285, 329, 197, 224, 0, 1320,
	409, 458, 470, 1394, 1305, 1314, 252, 1312, 468, 423,
	597, 232, 283, 455, 429, 466, 437, 286, 1355, 1374,
	467, 369, 580, 447, 594, 621, 622, 262, 403, 607,
	517, 615, 639, 225, 259, 417, 502, 600, 491, 394,
	576, 577, 328, 490, 294, 201, 366, 627, 223, 476,
	368, 241, 230, 582, 604, 298, 288, 453, 634, 212,
	512, 592, 238, 480, 0, 0, 642, 246, 501, 214,
	589, 500, 390, 325, 326, 213, 0, 454, 267, 292,
	0, 0, 257, 412, 584, 585, 255, 643, 227, 614,
	219, 1284, 613, 405, 579, 590, 391, 380, 218, 588,
	389, 379, 333, 352, 353, 279, 306, 444, 372, 445,
	305, 307, 401, 400, 402, 206, 601, 0, 207, 0,
	496, 603, 644, 449, 211, 233, 234, 236, 1300, 278,
	282, 290, 293, 302, 303, 312, 364, 416, 443, 439,
	448, 1390, 574, 595, 608, 619, 625, 626, 628, 629,
	630, 631, 632, 635, 633, 404, 310, 492, 332, 370,
	1379, 1420, 422, 469, 239, 599, 493, 199, 1294, 1299,
	1292, 0, 253, 254, 1361, 570, 1295, 1293, 1350, 1351,
	1296, 1411, 1412, 1413, 1398, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 640, 503, 509, 504, 505, 506, 507,
	508, 0, 510, 1383, 1288, 0, 1297, 1298, 395, 1392,
	586, 587, 663, 381, 483, 596, 334, 346, 349, 339,
	358, 0, 359, 335, 336, 341, 343, 344, 345, 350,
	351, 355, 361, 248, 209, 387, 396, 573, 311, 215,
	216, 217, 519, 520, 521, 522, 611, 612, 616, 204,
	459, 460, 461, 462, 291, 606, 308, 465, 464, 330,
	331, 376, 446, 535, 537, 548, 552, 554, 556, 562,
	565, 536, 538, 549, 553, 555, 557, 563, 566, 525,
	527, 529, 531, 544, 543, 540, 568, 569, 546, 551,
	530, 542, 547, 560, 567, 564, 524, 528, 532, 541,
	559, 558, 539, 550, 561, 545, 533, 526, 534, 1354,
	196, 220, 365, 1416, 451, 287, 641, 610, 481, 605,
	205, 222, 1291, 261, 1303, 1311, 0, 1317, 1325, 1326,
	1338, 1341, 1342, 1343, 1344, 1362, 1363, 1365, 1373, 1375,
	1378, 1380, 1387, 1399, 1419, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 309, 317, 318,
	321, 327, 377, 383, 384, 385, 386, 406, 407, 408,
	411, 414, 415, 418, 420, 421, 424, 428, 432, 433,
	434, 436, 438, 440, 452, 457, 471, 472, 473, 474,
	475, 478, 479, 485, 486, 487, 488, 489, 497, 498,
	511, 581, 583, 598, 617, 623, 477, 300, 301, 441,
	442, 313, 314, 637, 638, 299, 593, 624, 591, 636,
	618, 435, 375, 1353, 1359, 378, 280, 304, 319, 1368,
	609, 499, 226, 463, 289, 250, 1386, 1388, 210, 245,
	229, 258, 273, 276, 323, 388, 397, 426, 431, 295,
	270, 243, 456, 240, 482, 514, 515, 516, 518, 392,
	265, 430, 1349, 1377, 373, 571, 572, 315, 393, 0,
	0, 0, 0, 1405, 1391, 523, 0, 1333, 1408, 1302,
	1321, 1418, 1324, 1327, 1370, 1280, 1348, 413, 1318, 1273,
	0, 0, 1306, 1275, 1313, 1276, 1304, 1335, 269, 1301,
	1393, 1352, 1407, 363, 266, 1282, 1307, 427, 1323, 203,
	1372, 484, 251, 374, 371, 578, 281, 272, 268, 249,
	316, 382, 425, 513, 419, 1414, 367, 1358, 0, 494,
	398, 0, 0, 0, 1337, 1397, 1346, 1384, 1332, 1371,
	1290, 1357, 1409, 1319, 1367, 1410, 322, 247, 324, 202,
	410, 495, 285, 0, 0, 0, 0, 0, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 348, 357, 356, 337, 338,
	340, 342, 347, 354, 360, 1315, 1364, 602, 1404, 1316,
	1366, 264, 320, 271, 263, 575, 1415, 1396, 1279, 1345,
	1403, 1340, 0, 0, 228, 1406, 1339, 0, 1369, 0,
	1421, 1274, 1360, 0, 1277, 1281, 1417, 1401, 1310, 274,
	0, 0, 0, 0, 0, 0, 0, 1336, 1347, 1381,
	1385, 1330, 0, 0, 0, 0, 0, 0, 3213, 0,
	1308, 0, 1356, 0, 0, 0, 1286, 1278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1334, 0, 0, 0, 0, 1289, 0, 1309, 1382, 0,
	1272, 296, 1283, 399, 256, 0, 450, 1389, 1400, 1331,
	620, 1402, 1329, 1328, 1376, 1287, 1395, 1322, 362, 1285,
	329, 197, 224, 0, 1320, 409, 458, 470, 1394, 1305,
	1314, 252, 1312, 468, 423, 597, 232, 283, 455, 429,
	466, 437, 286, 1355, 1374, 467, 369, 580, 447, 594,
	621, 622, 262, 403, 607, 517, 615, 639, 225, 259,
	417, 502, 600, 491, 394, 576, 577, 328, 490, 294,
	201, 366, 627, 223, 476, 368, 241, 230, 582, 604,
	298, 288, 453, 634, 212, 512, 592, 238, 480, 0,
	0, 642, 246, 501, 214, 589, 500, 390, 325, 326,
	213, 0, 454, 267, 292, 0, 0, 257, 412, 584,
	585, 255, 643, 227, 614, 219, 1284, 613, 405, 579,
	590, 391, 380, 218, 588, 389, 379, 333, 352, 353,
	279, 306, 444, 372, 445, 305, 307, 401, 400, 402,
	206, 601, 0, 207, 0, 496, 603, 644, 449, 211,
	233, 234, 236, 1300, 278, 282, 290, 293, 302, 303,
	312, 364, 416, 443, 439, 448, 1390, 574, 595, 608,
	619, 625, 626, 628, 629, 630, 631, 632, 635, 633,
	404, 310, 492, 332, 370, 1379, 1420, 422, 469, 239,
	599, 493, 199, 1294, 1299, 1292, 0, 253, 254, 1361,
	570, 1295, 1293, 1350, 1351, 1296, 1411, 1412, 1413, 1398,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 640, 503,
	509, 504, 505, 506, 507, 508, 0, 510, 1383, 1288,
	0, 1297, 1298, 395, 1392, 586, 587, 663, 381, 483,
	596, 334, 346, 349, 339, 358, 0, 359, 335, 336,
	341, 343, 344, 345, 350, 351, 355, 361, 248, 209,
	387, 396, 573, 311, 215, 216, 217, 519, 520, 521,
	522, 611, 612, 616, 204, 459, 460, 461, 462, 291,
	606, 308, 465, 464, 330, 331, 376, 446, 535, 537,
	548, 552, 554, 556, 562, 565, 536, 538, 549, 553,
	555, 557, 563, 566, 525, 527, 529, 531, 544, 543,
	540, 568, 569, 546, 551, 530, 542, 547, 560, 567,
	564, 524, 528, 532, 541, 559, 558, 539, 550, 561,
	545, 533, 526, 534, 1354, 196, 220, 365, 1416, 451,
	287, 641, 610, 481, 605, 205, 222, 1291, 261, 1303,
	1311, 0, 1317, 1325, 1326, 1338, 1341, 1342, 1343, 1344,
	1362, 1363, 1365, 1373, 1375, 1378, 1380, 1387, 1399, 1419,
	198, 200, 208, 221, 231, 235, 242, 260, 275, 277,
	284, 297, 309, 317, 318, 321, 327, 377, 383, 384,
	385, 386, 406, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 433, 434, 436, 438, 440, 452,
	457, 471, 472, 473, 474, 475, 478, 479, 485, 486,
	487, 488, 489, 497, 498, 511, 581, 583, 598, 617,
	623, 477, 300, 301, 441, 442, 313, 314, 637, 638,
	299, 593, 624, 591, 636, 618, 435, 375, 1353, 1359,
	378, 280, 304, 319, 1368, 609, 499, 226, 463, 289,
	250, 1386, 1388, 210, 245, 229, 258, 273, 276, 323,
	388, 397, 426, 431, 295, 270, 243, 456, 240, 482,
	514, 515, 516, 518, 392, 265, 430, 1349, 1377, 373,
	571, 572, 315, 393, 0, 0, 0, 0, 1405, 1391,
	523, 0, 1333, 1408, 1302, 1321, 1418, 1324, 1327, 1370,
	1280, 1348, 413, 1318, 1273, 0, 0, 1306, 1275, 1313,
	1276, 1304, 1335, 269, 1301, 1393, 1352, 1407, 363, 266,
	1282, 1307, 427, 1323, 203, 1372, 484, 251, 374, 371,
	578, 281, 272, 268, 249, 316, 382, 425, 513, 419,
	1414, 367, 1358, 0, 494, 398, 0, 0, 0, 1337,
	1397, 1346, 1384, 1332, 1371, 1290, 1357, 1409, 1319, 1367,
	1410, 322, 247, 324, 202, 410, 495, 285, 0, 0,
	0, 0, 0, 713, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	348, 357, 356, 337, 338, 340, 342, 347, 354, 360,
	1315, 1364, 602, 1404, 1316, 1366, 264, 320, 271, 263,
	575, 1415, 1396, 1279, 1345, 1403, 1340, 0, 0, 228,
	1406, 1339, 0, 1369, 0, 1421, 1274, 1360, 0, 1277,
	1281, 1417, 1401, 1310, 274, 0, 0, 0, 0, 0,
	0, 0, 1336, 1347, 1381, 1385, 1330, 0, 0, 0,
	0, 0, 0, 3174, 0, 1308, 0, 1356, 0, 0,
	0, 1286, 1278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1334, 0, 0, 0, 0,
	1289, 0, 1309, 1382, 0, 1272, 296, 1283, 399, 256,
	0, 450, 1389, 1400, 1331, 620, 1402, 1329, 1328, 1376,
	1287, 1395, 1322, 362, 1285, 329, 197, 224, 0, 1320,
	409, 458, 470, 1394, 1305, 1314, 252, 1312, 468, 423,
	597, 232, 283, 455, 429, 466, 437, 286, 1355, 1374,
	467, 369, 580, 447, 594, 621, 622, 262, 403, 607,
	517, 615, 639, 225, 259, 417, 502, 600, 491, 394,
	576, 577, 328, 490, 294, 201, 366, 627, 223, 476,
	368, 241, 230, 582, 604, 298, 288, 453, 634, 212,
	512, 592, 238, 480, 0, 0, 642, 246, 501, 214,
	589, 500, 390, 325, 326, 213, 0, 454, 267, 292,
	0, 0, 257, 412, 584, 585, 255, 643, 227, 614,
	219, 1284, 613, 405, 579, 590, 391, 380, 218, 588,
	389, 379, 333, 352, 353, 279, 306, 444, 372, 445,
	305, 307, 401, 400, 402, 206, 601, 0, 207, 0,
	496, 603, 644, 449, 211, 233, 234, 236, 1300, 278,
	282, 290, 293, 302, 303, 312, 364, 416, 443, 439,
	448, 1390, 574, 595, 608, 619, 625, 626, 628, 629,
	630, 631, 632, 635, 633, 404, 310, 492, 332, 370,
	1379, 1420, 422, 469, 239, 599, 493, 199, 1294, 1299,
	1292, 0, 253, 254, 1361, 570, 1295, 1293, 1350, 1351,
	1296, 1411, 1412, 1413, 1398, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 640, 503, 509, 504, 505, 506, 507,
	508, 0, 510, 1383, 1288, 0, 1297, 1298, 395, 1392,
	586, 587, 663, 381, 483, 596, 334, 346, 349, 339,
	358, 0, 359, 335, 336, 341, 343, 344, 345, 350,
	351, 355, 361, 248, 209, 387, 396, 573, 311, 215,
	216, 217, 519, 520, 521, 522, 611, 612, 616, 204,
	459, 460, 461, 462, 291, 606, 308, 465, 464, 330,
	331, 376, 446, 535, 537, 548, 552, 554, 556, 562,
	565, 536, 538, 549, 553, 555, 557, 563, 566, 525,
	527, 529, 531, 544, 543, 540, 568, 569, 546, 551,
	530, 542, 547, 560, 567, 564, 524, 528, 532, 541,
	559, 558, 539, 550, 561, 545, 533, 526, 534, 1354,
	196, 220, 365, 1416, 451, 287, 641, 610, 481, 605,
	205, 222, 1291, 261, 1303, 1311, 0, 1317, 1325, 1326,
	1338, 1341, 1342, 1343, 1344, 1362, 1363, 1365, 1373, 1375,
	1378, 1380, 1387, 1399, 1419, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 309, 317, 318,
	321, 327, 377, 383, 384, 385, 386, 406, 407, 408,
	411, 414, 415, 418, 420, 421, 424, 428, 432, 433,
	434, 436, 438, 440, 452, 457, 471, 472, 473, 474,
	475, 478, 479, 485, 486, 487, 488, 489, 497, 498,
	511, 581, 583, 598, 617, 623, 477, 300, 301, 441,
	442, 313, 314, 637, 638, 299, 593, 624, 591, 636,
	618, 435, 375, 1353, 1359, 378, 280, 304, 319, 1368,
	609, 499, 226, 463, 289, 250, 1386, 1388, 210, 245,
	229, 258, 273, 276, 323, 388, 397, 426, 431, 295,
	270, 243, 456, 240, 482, 514, 515, 516, 518, 392,
	265, 430, 1349, 1377, 373, 571, 572, 315, 393, 0,
	0, 0, 0, 1405, 1391, 523, 0, 1333, 1408, 1302,
	1321, 1418, 1324, 1327, 1370, 1280, 1348, 413, 1318, 1273,
	0, 0, 1306, 1275, 1313, 1276, 1304, 1335, 269, 1301,
	1393, 1352, 1407, 363, 266, 1282, 1307, 427, 1323, 203,
	1372, 484, 251, 374, 371, 578, 281, 272, 268, 249,
	316, 382, 425, 513, 419, 1414, 367, 1358, 0, 494,
	398, 0, 0, 0, 1337, 1397, 1346, 1384, 1332, 1371,
	1290, 1357, 1409, 1319, 1367, 1410, 322, 247, 324, 202,
	410, 495, 285, 0, 0, 0, 0, 0, 946, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 348, 357, 356, 337, 338,
	340, 342, 347, 354, 360, 1315, 1364, 602, 1404, 1316,
	1366, 264, 320, 271, 263, 575, 1415, 1396, 1279, 1345,
	1403, 1340, 0, 0, 228, 1406, 1339, 0, 1369, 0,
	1421, 1274, 1360, 0, 1277, 1281, 1417, 1401, 1310, 274,
	0, 0, 0, 0, 0, 0, 0, 1336, 1347, 1381,
	1385, 1330, 0, 0, 0, 0, 0, 0, 2376, 0,
	1308, 0, 1356, 0, 0, 0, 1286, 1278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1334, 0, 0, 0, 0, 1289, 0, 1309, 1382, 0,
	1272, 296, 1283, 399, 256, 0, 450, 1389, 1400, 1331,
	620, 1402, 1329, 1328, 1376, 1287, 1395, 1322, 362, 1285,
	329, 197, 224, 0, 1320, 409, 458, 470, 1394, 1305,
	1314, 252, 1312, 468, 423, 597, 232, 283, 455, 429,
	466, 437, 286, 1355, 1374, 467, 369, 580, 447, 594,
	621, 622, 262, 403, 607, 517, 615, 639, 225, 259,
	417, 502, 600, 491, 394, 576, 577, 328, 490, 294,
	201, 366, 627, 223, 476, 368, 241, 230, 582, 604,
	298, 288, 453, 634, 212, 512, 592, 238, 480, 0,
	0, 642, 246, 501, 214, 589, 500, 390, 325, 326,
	213, 0, 454, 267, 292, 0, 0, 257, 412, 584,
	585, 255, 643, 227, 614, 219, 1284, 613, 405, 579,
	590, 391, 380, 218, 588, 389, 379, 333, 352, 353,
	279, 306, 444, 372, 445, 305, 307, 401, 400, 402,
	206, 601, 0, 207, 0, 496, 603, 644, 449, 211,
	233, 234, 236, 1300, 278, 282, 290, 293, 302, 303,
	312, 364, 416, 443, 439, 448, 1390, 574, 595, 608,
	619, 625, 626, 628, 629, 630, 631, 632, 635, 633,
	404, 310, 492, 332, 370, 1379, 1420, 422, 469, 239,
	599, 493, 199, 1294, 1299, 1292, 0, 253, 254, 1361,
	570, 1295, 1293, 1350, 1351, 1296, 1411, 1412, 1413, 1398,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 640, 503,
	509, 504, 505, 506, 507, 508, 0, 510, 1383, 1288,
	0, 1297, 1298, 395, 1392, 586, 587, 663, 381, 483,
	596, 334, 346, 349, 339, 358, 0, 359, 335, 336,
	341, 343, 344, 345, 350, 351, 355, 361, 248, 209,
	387, 396, 573, 311, 215, 216, 217, 519, 520, 521,
	522, 611, 612, 616, 204, 459, 460, 461, 462, 291,
	606, 308, 465, 464, 330, 331, 376, 446, 535, 537,
	548, 552, 554, 556, 562, 565, 536, 538, 549, 553,
	555, 557, 563, 566, 525, 527, 529, 531, 544, 543,
	540, 568, 569, 546, 551, 530, 542, 547, 560, 567,
	564, 524, 528, 532, 541, 559, 558, 539, 550, 561,
	545, 533, 526, 534, 1354, 196, 220, 365, 1416, 451,
	287, 641, 610, 481, 605, 205, 222, 1291, 261, 1303,
	1311, 0, 1317, 1325, 1326, 1338, 1341, 1342, 1343, 1344,
	1362, 1363, 1365, 1373, 1375, 1378, 1380, 1387, 1399, 1419,
	198, 200, 208, 221, 231, 235, 242, 260, 275, 277,
	284, 297, 309, 317, 318, 321, 327, 377, 383, 384,
	385, 386, 406, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 433, 434, 436, 438, 440, 452,
	457, 471, 472, 473, 474, 475, 478, 479, 485, 486,
	487, 488, 489, 497, 498, 511, 581, 583, 598, 617,
	623, 477, 300, 301, 441, 442, 313, 314, 637, 638,
	299, 593, 624, 591, 636, 618, 435, 375, 1353, 1359,
	378, 280, 304, 319, 1368, 609, 499, 226, 463, 289,
	250, 1386, 1388, 210, 245, 229, 258, 273, 276, 323,
	388, 397, 426, 431, 295, 270, 243, 456, 240, 482,
	514, 515, 516, 518, 392, 265, 430, 1349, 1377, 373,
	571, 572, 315, 393, 0, 0, 0, 0, 1405, 1391,
	523, 0, 1333, 1408, 1302, 1321, 1418, 1324, 1327, 1370,
	1280, 1348, 413, 1318, 1273, 0, 0, 1306, 1275, 1313,
	1276, 1304, 1335, 269, 1301, 1393, 1352, 1407, 363, 266,
	1282, 1307, 427, 1323, 203, 1372, 484, 251, 374, 371,
	578, 281, 272, 268, 249, 316, 382, 425, 513, 419,
	1414, 367, 1358, 0, 494, 398, 0, 0, 0, 1337,
	1397, 1346, 1384, 1332, 1371, 1290, 1357, 1409, 1319, 1367,
	1410, 322, 247, 324, 202, 410, 495, 285, 0, 95,
	0, 0, 0, 713, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	348, 357, 356, 337, 338, 340, 342, 347, 354, 360,
	1315, 1364, 602, 1404, 1316, 1366, 264, 320, 271, 263,
	575, 1415, 1396, 1279, 1345, 1403, 1340, 0, 0, 228,
	1406, 1339, 0, 1369, 0, 1421, 1274, 1360, 0, 1277,
	1281, 1417, 1401, 1310, 274, 0, 0, 0, 0, 0,
	0, 0, 1336, 1347, 1381, 1385, 1330, 0, 0, 0,
	0, 0, 0, 0, 0, 1308, 0, 1356, 0, 0,
	0, 1286, 1278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1334, 0, 0, 0, 0,
	1289, 0, 1309, 1382, 0, 1272, 296, 1283, 399, 256,
	0, 450, 1389, 1400, 1331, 620, 1402, 1329, 1328, 1376,
	1287, 1395, 1322, 362, 1285, 329, 197, 224, 0, 1320,
	409, 458, 470, 1394, 1305, 1314, 252, 1312, 468, 423,
	597, 232, 283, 455, 429, 466, 437, 286, 1355, 1374,
	467, 369, 580, 447, 594, 621, 622, 262, 403, 607,
	517, 615, 639, 225, 259, 417, 502, 600, 491, 394,
	576, 577, 328, 490, 294, 201, 366, 627, 223, 476,
	368, 241, 230, 582, 604, 298, 288, 453, 634, 212,
	512, 592, 238, 480, 0, 0, 642, 246, 501, 214,
	589, 500, 390, 325, 326, 213, 0, 454, 267, 292,
	0, 0, 257, 412, 584, 585, 255, 643, 227, 614,
	219, 1284, 613, 405, 579, 590, 391, 380, 218, 588,
	389, 379, 333, 352, 353, 279, 306, 444, 372, 445,
	305, 307, 401, 400, 402, 206, 601, 0, 207, 0,
	496, 603, 644, 449, 211, 233, 234, 236, 1300, 278,
	282, 290, 293, 302, 303, 312, 364, 416, 443, 439,
	448, 1390, 574, 595, 608, 619, 625, 626, 628, 629,
	630, 631, 632, 635, 633, 404, 310, 492, 332, 370,
	1379, 1420, 422, 469, 239, 599, 493, 199, 1294, 1299,
	1292, 0, 253, 254, 1361, 570, 1295, 1293, 1350, 1351,
	1296, 1411, 1412, 1413, 1398, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 640, 503, 509, 504, 505, 506, 507,
	508, 0, 510, 1383, 1288, 0, 1297, 1298, 395, 1392,
	586, 587, 663, 381, 483, 596, 334, 346, 349, 339,
	358, 0, 359, 335, 336, 341, 343, 344, 345, 350,
	351, 355, 361, 248, 209, 387, 396, 573, 311, 215,
	216, 217, 519, 520, 521, 522, 611, 612, 616, 204,
	459, 460, 461, 462, 291, 606, 308, 465, 464, 330,
	331, 376, 446, 535, 537, 548, 552, 554, 556, 562,
	565, 536, 538, 549, 553, 555, 557, 563, 566, 525,
	527, 529, 531, 544, 543, 540, 568, 569, 546, 551,
	530, 542, 547, 560, 567, 564, 524, 528, 532, 541,
	559, 558, 539, 550, 561, 545, 533, 526, 534, 1354,
	196, 220, 365, 1416, 451, 287, 641, 610, 481, 605,
	205, 222, 1291, 261, 1303, 1311, 0, 1317, 1325, 1326,
	1338, 1341, 1342, 1343, 1344, 1362, 1363, 1365, 1373, 1375,
	1378, 1380, 1387, 1399, 1419, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 309, 317, 318,
	321, 327, 377, 383, 384, 385, 386, 406, 407, 408,
	411, 414, 415, 418, 420, 421, 424, 428, 432, 433,
	434, 436, 438, 440, 452, 457, 471, 472, 473, 474,
	475, 478, 479, 485, 486, 487, 488, 489, 497, 498,
	511, 581, 583, 598, 617, 623, 477, 300, 301, 441,
	442, 313, 314, 637, 638, 299, 593, 624, 591, 636,
	618, 435, 375, 1353, 1359, 378, 280, 304, 319, 1368,
	609, 499, 226, 463, 289, 250, 1386, 1388, 210, 245,
	229, 258, 273, 276, 323, 388, 397, 426, 431, 295,
	270, 243, 456, 240, 482, 514, 515, 516, 518, 392,
	265, 430, 1349, 1377, 373, 571, 572, 315, 393, 0,
	0, 0, 0, 1405, 1391, 523, 0, 1333, 1408, 1302,
	1321, 1418, 1324, 1327, 1370, 1280, 1348, 413, 1318, 1273,
	0, 0, 1306, 1275, 1313, 1276, 1304, 1335, 269, 1301,
	1393, 1352, 1407, 363, 266, 1282, 1307, 427, 1323, 203,
	1372, 484, 251, 374, 371, 578, 281, 272, 268, 249,
	316, 382, 425, 513, 419, 1414, 367, 1358, 0, 494,
	398, 0, 0, 0, 1337, 1397, 1346, 1384, 1332, 1371,
	1290, 1357, 1409, 1319, 1367, 1410, 322, 247, 324, 202,
	410, 495, 285, 0, 0, 0, 0, 0, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 348, 357, 356, 337, 338,
	340, 342, 347, 354, 360, 1315, 1364, 602, 1404, 1316,
	1366, 264, 320, 271, 263, 575, 1415, 1396, 1279, 1345,
	1403, 1340, 0, 0, 228, 1406, 1339, 0, 1369, 0,
	1421, 1274, 1360, 0, 1277, 1281, 1417, 1401, 1310, 274,
	0, 0, 0, 0, 0, 0, 0, 1336, 1347, 1381,
	1385, 1330, 0, 0, 0, 0, 0, 0, 0, 0,
	1308, 0, 1356, 0, 0, 0, 1286, 1278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1334, 0, 0, 0, 0, 1289, 0, 1309, 1382, 0,
	1272, 296, 1283, 399, 256, 0, 450, 1389, 1400, 1331,
	620, 1402, 1329, 1328, 1376, 1287, 1395, 1322, 362, 1285,
	329, 197, 224, 0, 1320, 409, 458, 470, 1394, 1305,
	1314, 252, 1312, 468, 423, 597, 232, 283, 455, 429,
	466, 437, 286, 1355, 1374, 467, 369, 580, 447, 594,
	621, 622, 262, 403, 607, 517, 615, 639, 225, 259,
	417, 502, 600, 491, 394, 576, 577, 328, 490, 294,
	201, 366, 627, 223, 476, 368, 241, 230, 582, 604,
	298, 288, 453, 634, 212, 512, 592, 238, 480, 0,
	0, 642, 246, 501, 214, 589, 500, 390, 325, 326,
	213, 0, 454, 267, 292, 0, 0, 257, 412, 584,
	585, 255, 643, 227, 614, 219, 1284, 613, 405, 579,
	590, 391, 380, 218, 588, 389, 379, 333, 352, 353,
	279, 306, 444, 372, 445, 305, 307, 401, 400, 402,
	206, 601, 0, 207, 0, 496, 603, 644, 449, 211,
	233, 234, 236, 1300, 278, 282, 290, 293, 302, 303,
	312, 364, 416, 443, 439, 448, 1390, 574, 595, 608,
	619, 625, 626, 628, 629, 630, 631, 632, 635, 633,
	404, 310, 492, 332, 370, 1379, 1420, 422, 469, 239,
	599, 493, 199, 1294, 1299, 1292, 0, 253, 254, 1361,
	570, 1295, 1293, 1350, 1351, 1296, 1411, 1412, 1413, 1398,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 640, 503,
	509, 504, 505, 506, 507, 508, 0, 510, 1383, 1288,
	0, 1297, 1298, 395, 1392, 586, 587, 663, 381, 483,
	596, 334, 346, 349, 339, 358, 0, 359, 335, 336,
	341, 343, 344, 345, 350, 351, 355, 361, 248, 209,
	387, 396, 573, 311, 215, 216, 217, 519, 520, 521,
	522, 611, 612, 616, 204, 459, 460, 461, 462, 291,
	606, 308, 465, 464, 330, 331, 376, 446, 535, 537,
	548, 552, 554, 556, 562, 565, 536, 538, 549, 553,
	555, 557, 563, 566, 525, 527, 529, 531, 544, 543,
	540, 568, 569, 546, 551, 530, 542, 547, 560, 567,
	564, 524, 528, 532, 541, 559, 558, 539, 550, 561,
	545, 533, 526, 534, 1354, 196, 220, 365, 1416, 451,
	287, 641, 610, 481, 605, 205, 222, 1291, 261, 1303,
	1311, 0, 1317, 1325, 1326, 1338, 1341, 1342, 1343, 1344,
	1362, 1363, 1365, 1373, 1375, 1378, 1380, 1387, 1399, 1419,
	198, 200, 208, 221, 231, 235, 242, 260, 275, 277,
	284, 297, 309, 317, 318, 321, 327, 377, 383, 384,
	385, 386, 406, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 433, 434, 436, 438, 440, 452,
	457, 471, 472, 473, 474, 475, 478, 479, 485, 486,
	487, 488, 489, 497, 498, 511, 581, 583, 598, 617,
	623, 477, 300, 301, 441, 442, 313, 314, 637, 638,
	299, 593, 624, 591, 636, 618, 435, 375, 1353, 1359,
	378, 280, 304, 319, 1368, 609, 499, 226, 463, 289,
	250, 1386, 1388, 210, 245, 229, 258, 273, 276, 323,
	388, 397, 426, 431, 295, 270, 243, 456, 240, 482,
	514, 515, 516, 518, 392, 265, 430, 1349, 1377, 373,
	571, 572, 315, 393, 0, 0, 0, 0, 1405, 1391,
	523, 0, 1333, 1408, 1302, 1321, 1418, 1324, 1327, 1370,
	1280, 1348, 413, 1318, 1273, 0, 0, 1306, 1275, 1313,
	1276, 1304, 1335, 269, 1301, 1393, 1352, 1407, 363, 266,
	1282, 1307, 427, 1323, 203, 1372, 484, 251, 374, 371,
	578, 281, 272, 268, 249, 316, 382, 425, 513, 419,
	1414, 367, 1358, 0, 494, 398, 0, 0, 0, 1337,
	1397, 1346, 1384, 1332, 1371, 1290, 1357, 1409, 1319, 1367,
	1410, 322, 247, 324, 202, 410, 495, 285, 0, 0,
	0, 0, 0, 713, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	348, 357, 356, 337, 338, 340, 342, 347, 354, 360,
	1315, 1364, 602, 1404, 1316, 1366, 264, 320, 271, 263,
	575, 1415, 1396, 1279, 1345, 1403, 1340, 0, 0, 228,
	1406, 1339, 0, 1369, 0, 1421, 1274, 1360, 0, 1277,
	1281, 1417, 1401, 1310, 274, 0, 0, 0, 0, 0,
	0, 0, 1336, 1347, 1381, 1385, 1330, 0, 0, 0,
	0, 0, 0, 0, 0, 1308, 0, 1356, 0, 0,
	0, 1286, 1278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1334, 0, 0, 0, 0,
	1289, 0, 1309, 1382, 0, 1272, 296, 1283, 399, 256,
	0, 450, 1389, 1400, 1331, 620, 1402, 1329, 1328, 1376,
	1287, 1395, 1322, 362, 1285, 329, 197, 224, 0, 1320,
	409, 458, 470, 1394, 1305, 1314, 252, 1312, 468, 423,
	597, 232, 283, 455, 429, 466, 437, 286, 1355, 1374,
	467, 369, 580, 447, 594, 621, 622, 262, 403, 607,
	517, 615, 639, 225, 259, 417, 502, 600, 491, 394,
	576, 577, 328, 490, 294, 201, 366, 627, 223, 476,
	368, 241, 230, 582, 604, 298, 288, 453, 634, 212,
	512, 592, 238, 480, 0, 0, 642, 246, 501, 214,
	589, 500, 390, 325, 326, 213, 0, 454, 267, 292,
	0, 0, 257, 412, 584, 585, 255, 643, 227, 614,
	219, 1284, 613, 405, 579, 590, 391, 380, 218, 588,
	389, 379, 333, 352, 353, 279, 306, 444, 372, 445,
	305, 307, 401, 400, 402, 206, 601, 0, 207, 0,
	496, 603, 644, 449, 211, 233, 234, 236, 1300, 278,
	282, 290, 293, 302, 303, 312, 364, 416, 443, 439,
	448, 1390, 574, 595, 608, 619, 625, 626, 628, 629,
	630, 631, 632, 635, 633, 404, 310, 492, 332, 370,
	1379, 1420, 422, 469, 239, 599, 493, 199, 1294, 1299,
	1292, 0, 253, 254, 1361, 570, 1295, 1293, 1350, 1351,
	1296, 1411, 1412, 1413, 1398, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 640, 503, 509, 504, 505, 506, 507,
	508, 0, 510, 1383, 1288, 0, 1297, 1298, 395, 1392,
	586, 587, 663, 381, 483, 596, 334, 346, 349, 339,
	358, 0, 359, 335, 336, 341, 343, 344, 345, 350,
	351, 355, 361, 248, 209, 387, 396, 573, 311, 215,
	216, 217, 519, 520, 521, 522, 611, 612, 616, 204,
	459, 460, 461, 462, 291, 606, 308, 465, 464, 330,
	331, 376, 446, 535, 537, 548, 552, 554, 556, 562,
	565, 536, 538, 549, 553, 555, 557, 563, 566, 525,
	527, 529, 531, 544, 543, 540, 568, 569, 546, 551,
	530, 542, 547, 560, 567, 564, 524, 528, 532, 541,
	559, 558, 539, 550, 561, 545, 533, 526, 534, 1354,
	196, 220, 365, 1416, 451, 287, 641, 610, 481, 605,
	205, 222, 1291, 261, 1303, 1311, 0, 1317, 1325, 1326,
	1338, 1341, 1342, 1343, 1344, 1362, 1363, 1365, 1373, 1375,
	1378, 1380, 1387, 1399, 1419, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 309, 317, 318,
	321, 327, 377, 383, 384, 385, 386, 406, 407, 408,
	411, 414, 415, 418, 420, 421, 424, 428, 432, 433,
	434, 436, 438, 440, 452, 457, 471, 472, 473, 474,
	475, 478, 479, 485, 486, 487, 488, 489, 497, 498,
	511, 581, 583, 598, 617, 623, 477, 300, 301, 441,
	442, 313, 314, 637, 638, 299, 593, 624, 591, 636,
	618, 435, 375, 1353, 1359, 378, 280, 304, 319, 1368,
	609, 499, 226, 463, 289, 250, 1386, 1388, 210, 245,
	229, 258, 273, 276, 323, 388, 397, 426, 431, 295,
	270, 243, 456, 240, 482, 514, 515, 516, 518, 392,
	265, 430, 1349, 1377, 373, 571, 572, 315, 393, 0,
	0, 0, 0, 1405, 1391, 523, 0, 1333, 1408, 1302,
	1321, 1418, 1324, 1327, 1370, 1280, 1348, 413, 1318, 1273,
	0, 0, 1306, 1275, 1313, 1276, 1304, 1335, 269, 1301,
	1393, 1352, 1407, 363, 266, 1282, 1307, 427, 1323, 203,
	1372, 484, 251, 374, 371, 578, 281, 272, 268, 249,
	316, 382, 425, 513, 419, 1414, 367, 1358, 0, 494,
	398, 0, 0, 0, 1337, 1397, 1346, 1384, 1332, 1371,
	1290, 1357, 1409, 1319, 1367, 1410, 322, 247, 324, 202,
	410, 495, 285, 0, 0, 0, 0, 0, 946, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 348, 357, 356, 337, 338,
	340, 342, 347, 354, 360, 1315, 1364, 602, 1404, 1316,
	1366, 264, 320, 271, 263, 575, 1415, 1396, 1279, 1345,
	1403, 1340, 0, 0, 228, 1406, 1339, 0, 1369, 0,
	1421, 1274, 1360, 0, 1277, 1281, 1417, 1401, 1310, 274,
	0, 0, 0, 0, 0, 0, 0, 1336, 1347, 1381,
	1385, 1330, 0, 0, 0, 0, 0, 0, 0, 0,
	1308, 0, 1356, 0, 0, 0, 1286, 1278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1334, 0, 0, 0, 0, 1289, 0, 1309, 1382, 0,
	1272, 296, 1283, 399, 256, 0, 450, 1389, 1400, 1331,
	620, 1402, 1329, 1328, 1376, 1287, 1395, 1322, 362, 1285,
	329, 197, 224, 0, 1320, 409, 458, 470, 1394, 1305,
	1314, 252, 1312, 468, 423, 597, 232, 283, 455, 429,
	466, 437, 286, 1355, 1374, 467, 369, 580, 447, 594,
	621, 622, 262, 403, 607, 517, 615, 639, 225, 259,
	417, 502, 600, 491, 394, 576, 577, 328, 490, 294,
	201, 366, 627, 223, 476, 368, 241, 230, 582, 604,
	298, 288, 453, 634, 212, 512, 592, 238, 480, 0,
	0, 642, 246, 501, 214, 589, 500, 390, 325, 326,
	213, 0, 454, 267, 292, 0, 0, 257, 412, 584,
	585, 255, 643, 227, 614, 219, 1284, 613, 405, 579,
	590, 391, 380, 218, 588, 389, 379, 333, 352, 353,
	279, 306, 444, 372, 445, 305, 307, 401, 400, 402,
	206, 601, 0, 207, 0, 496, 603, 644, 449, 211,
	233, 234, 236, 1300, 278, 282, 290, 293, 302, 303,
	312, 364, 416, 443, 439, 448, 1390, 574, 595, 608,
	619, 625, 626, 628, 629, 630, 631, 632, 635, 633,
	404, 310, 492, 332, 370, 1379, 1420, 422, 469, 239,
	599, 493, 199, 1294, 1299, 1292, 0, 253, 254, 1361,
	570, 1295, 1293, 1350, 1351, 1296, 1411, 1412, 1413, 1398,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 640, 503,
	509, 504, 505, 506, 507, 508, 0, 510, 1383, 1288,
	0, 1297, 1298, 395, 1392, 586, 587, 663, 381, 483,
	596, 334, 346, 349, 339, 358, 0, 359, 335, 336,
	341, 343, 344, 345, 350, 351, 355, 361, 248, 209,
	387, 396, 573, 311, 215, 216, 217, 519, 520, 521,
	522, 611, 612, 616, 204, 459, 460, 461, 462, 291,
	606, 308, 465, 464, 330, 331, 376, 446, 535, 537,
	548, 552, 554, 556, 562, 565, 536, 538, 549, 553,
	555, 557, 563, 566, 525, 527, 529, 531, 544, 543,
	540, 568, 569, 546, 551, 530, 542, 547, 560, 567,
	564, 524, 528, 532, 541, 559, 558, 539, 550, 561,
	545, 533, 526, 534, 1354, 196, 220, 365, 1416, 451,
	287, 641, 610, 481, 605, 205, 222, 1291, 261, 1303,
	1311, 0, 1317, 1325, 1326, 1338, 1341, 1342, 1343, 1344,
	1362, 1363, 1365, 1373, 1375, 1378, 1380, 1387, 1399, 1419,
	198, 200, 208, 221, 231, 235, 242, 260, 275, 277,
	284, 297, 309, 317, 318, 321, 327, 377, 383, 384,
	385, 386, 406, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 433, 434, 436, 438, 440, 452,
	457, 471, 472, 473, 474, 475, 478, 479, 485, 486,
	487, 488, 489, 497, 498, 511, 581, 583, 598, 617,
	623, 477, 300, 301, 441, 442, 313, 314, 637, 638,
	299, 593, 624, 591, 636, 618, 435, 375, 1353, 1359,
	378, 280, 304, 319, 1368, 609, 499, 226, 463, 289,
	250, 1386, 1388, 210, 245, 229, 258, 273, 276, 323,
	388, 397, 426, 431, 295, 270, 243, 456, 240, 482,
	514, 515, 516, 518, 392, 265, 430, 1349, 1377, 373,
	571, 572, 315, 393, 0, 0, 0, 0, 0, 0,
	523, 0, 766, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 0, 0, 0, 0, 0, 0, 753,
	0, 0, 0, 269, 758, 0, 0, 0, 363, 266,
	0, 0, 427, 0, 203, 0, 484, 251, 374, 371,
	578, 281, 272, 268, 249, 316, 382, 425, 513, 419,
	765, 367, 0, 0, 494, 398, 0, 0, 0, 0,
	0, 760, 761, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 247, 324, 202, 410, 495, 285, 0, 95,
	0, 0, 1010, 946, 737, 912, 950, 1011, 963, 964,
	965, 951, 0, 237, 952, 953, 244, 954, 0, 911,
	796, 798, 797, 861, 862, 863, 864, 865, 866, 867,
	794, 959, 602, 966, 967, 0, 264, 320, 271, 263,
	575, 0, 0, 2198, 2199, 2200, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 733, 750, 0,
	764, 0, 0, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 747, 748, 0, 0, 0, 0, 906, 0, 749,
	0, 0, 757, 968, 969, 970, 971, 972, 973, 974,
	975, 976, 977, 978, 979, 980, 981, 982, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 1008, 1009, 759, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 399, 256,
	0, 450, 905, 0, 0, 620, 0, 0, 903, 0,
	0, 0, 0, 362, 0, 329, 197, 224, 0, 0,
	409, 458, 470, 0, 0, 0, 956, 0, 468, 423,
	597, 232, 283, 455, 429, 466, 437, 286, 0, 0,
	467, 369, 580, 447, 594, 621, 622, 262, 403, 607,
	517, 615, 639, 225, 259, 417, 502, 600, 491, 394,
	576, 577, 328, 490, 294, 201, 366, 627, 223, 476,
	368, 241, 230, 582, 604, 298, 288, 453, 634, 212,
	512, 592, 238, 480, 0, 0, 642, 246, 501, 214,
	589, 500, 390, 325, 326, 213, 0, 454, 267, 292,
	0, 0, 257, 412, 957, 958, 255, 643, 802, 614,
	219, 0, 613, 405, 579, 590, 391, 380, 218, 588,
	389, 379, 333, 810, 811, 279, 306, 887, 886, 885,
	305, 307, 883, 884, 882, 206, 601, 0, 207, 0,
	496, 603, 644, 449, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 302, 303, 312, 364, 416, 443, 439,
	448, 0, 574, 595, 608, 619, 625, 626, 628, 629,
	630, 631, 632, 635, 633, 404, 310, 492, 332, 370,
	0, 0, 422, 469, 239, 599, 493, 893, 915, 904,
	770, 771, 894, 895, 919, 896, 773, 774, 916, 917,
	767, 768, 772, 918, 920, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 640, 503, 509, 504, 505, 506, 507,
	508, 0, 510, 907, 756, 755, 0, 762, 763, 0,
	792, 793, 795, 799, 800, 801, 812, 859, 860, 868,
	870, 871, 869, 872, 873, 874, 877, 878, 879, 880,
	875, 876, 881, 775, 779, 776, 777, 778, 790, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 789, 791,
	930, 931, 932, 933, 934, 935, 805, 809, 808, 806,
	807, 803, 804, 831, 830, 832, 833, 834, 835, 836,
	837, 839, 838, 840, 841, 842, 843, 844, 845, 813,
	814, 817, 818, 816, 815, 819, 828, 829, 820, 821,
	822, 823, 824, 825, 827, 826, 846, 847, 848, 849,
	850, 852, 851, 855, 856, 854, 853, 858, 857, 754,
	196, 220, 365, 0, 451, 287, 641, 610, 481, 605,
	205, 222, 921, 261, 922, 0, 0, 926, 0, 0,
	0, 928, 927, 0, 929, 891, 890, 0, 0, 923,
	924, 0, 925, 0, 0, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 309, 317, 318,
	321, 327, 377, 383, 384, 385, 386, 406, 407, 408,
	411, 414, 415, 418, 420, 421, 424, 428, 432, 433,
	434, 436, 438, 440, 452, 457, 471, 472, 473, 474,
	475, 478, 479, 485, 486, 487, 488, 489, 497, 498,
	511, 581, 583, 598, 617, 623, 477, 936, 937, 938,
	939, 940, 941, 942, 943, 299, 593, 624, 591, 636,
	618, 435, 375, 0, 0, 378, 280, 304, 319, 0,
	609, 499, 226, 463, 289, 250, 961, 0, 210, 245,
	229, 258, 273, 276, 323, 388, 397, 426, 431, 295,
	270, 243, 456, 240, 482, 514, 515, 516, 518, 392,
	265, 430, 393, 0, 373, 571, 572, 315, 0, 523,
	0, 766, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 753, 0,
	0, 0, 269, 758, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 484, 251, 374, 371, 578,
	281, 272, 268, 249, 316, 382, 425, 513, 419, 765,
	367, 0, 0, 494, 398, 0, 0, 0, 0, 0,
	760, 761, 0, 0, 0, 0, 0, 0, 2405, 0,
	322, 247, 324, 202, 410, 495, 285, 0, 95, 0,
	0, 1010, 946, 737, 912, 950, 1011, 963, 964, 965,
	951, 0, 237, 952, 953, 244, 954, 0, 911, 796,
	798, 797, 861, 862, 863, 864, 865, 866, 867, 794,
	959, 602, 966, 967, 2406, 264, 320, 271, 263, 575,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 733, 750, 0, 764,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	747, 748, 0, 0, 0, 0, 906, 0, 749, 0,
	0, 757, 968, 969, 970, 971, 972, 973, 974, 975,
	976, 977, 978, 979, 980, 981, 982, 983, 984, 985,
	986, 987, 988, 989, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	1006, 1007, 1008, 1009, 759, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 399, 256, 0,
	450, 905, 0, 0, 620, 0, 0, 903, 0, 0,
	0, 0, 362, 0, 329, 197, 224, 0, 0, 409,
	458, 470, 0, 0, 0, 956, 0, 468, 423, 597,
	232, 283, 455, 429, 466, 437, 286, 0, 0, 467,
	369, 580, 447, 594, 621, 622, 262, 403, 607, 517,
	615, 639, 225, 259, 417, 502, 600, 491, 394, 576,
	577, 328, 490, 294, 201, 366, 627, 223, 476, 368,
	241, 230, 582, 604, 298, 288, 453, 634, 212, 512,
	592, 238, 480, 0, 0, 642, 246, 501, 214, 589,
	500, 390, 325, 326, 213, 0, 454, 267, 292, 0,
	0, 257, 412, 957, 958, 255, 643, 802, 614, 219,
	0, 613, 405, 579, 590, 391, 380, 218, 588, 389,
	379, 333, 810, 811, 279, 306, 887, 886, 885, 305,
	307, 883, 884, 882, 206, 601, 0, 207, 0, 496,
	603, 644, 449, 211, 233, 234, 236, 0, 278, 282,
	290, 293, 302, 303, 312, 364, 416, 443, 439, 448,
	0, 574, 595, 608, 619, 625, 626, 628, 629, 630,
	631, 632, 635, 633, 404, 310, 492, 332, 370, 0,
	0, 422, 469, 239, 599, 493, 893, 915, 904, 770,
	771, 894, 895, 919, 896, 773, 774, 916, 917, 767,
	768, 772, 918, 920, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 640, 503, 509, 504, 505, 506, 507, 508,
	0, 510, 907, 756, 755, 0, 762, 763, 0, 792,
	793, 795, 799, 800, 801, 812, 859, 860, 868, 870,
	871, 869, 872, 873, 874, 877, 878, 879, 880, 875,
	876, 881, 775, 779, 776, 777, 778, 790, 780, 781,
	782, 783, 784, 785, 786, 787, 788, 789, 791, 930,
	931, 932, 933, 934, 935, 805, 809, 808, 806, 807,
	803, 804, 831, 830, 832, 833, 834, 835, 836, 837,
	839, 838, 840, 841, 842, 843, 844, 845, 813, 814,
	817, 818, 816, 815, 819, 828, 829, 820, 821, 822,
	823, 824, 825, 827, 826, 846, 847, 848, 849, 850,
	852, 851, 855, 856, 854, 853, 858, 857, 754, 196,
	220, 365, 0, 451, 287, 641, 610, 481, 605, 205,
	222, 921, 261, 922, 0, 0, 926, 0, 0, 0,
	928, 927, 0, 929, 891, 890, 0, 0, 923, 924,
	0, 925, 0, 0, 198, 200, 208, 221, 231, 235,
	242, 260, 275, 277, 284, 297, 309, 317, 318, 321,
	327, 377, 383, 384, 385, 386, 406, 407, 408, 411,
	414, 415, 418, 420, 421, 424, 428, 432, 433, 434,
	436, 438, 440, 452, 457, 471, 472, 473, 474, 475,
	478, 479, 485, 486, 487, 488, 489, 497, 498, 511,
	581, 583, 598, 617, 623, 477, 936, 937, 938, 939,
	940, 941, 942, 943, 299, 593, 624, 591, 636, 618,
	435, 375, 0, 0, 378, 280, 304, 319, 0, 609,
	499, 226, 463, 289, 250, 961, 0, 210, 245, 229,
	258, 273, 276, 323, 388, 397, 426, 431, 295, 270,
	243, 456, 240, 482, 514, 515, 516, 518, 392, 265,
	430, 393, 0, 373, 571, 572, 315, 86, 523, 0,
	766, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 753, 0, 0,
	0, 269, 758, 0, 0, 0, 363, 266, 0, 0,
	427, 0, 203, 0, 484, 251, 374, 371, 578, 281,
	272, 268, 249, 316, 382, 425, 513, 419, 765, 367,
	0, 0, 494, 398, 0, 0, 0, 0, 0, 760,
	761, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	247, 324, 202, 410, 495, 285, 0, 95, 0, 0,
	1010, 946, 737, 912, 950, 1011, 963, 964, 965, 951,
	0, 237, 952, 953, 244, 954, 0, 911, 796, 798,
	797, 861, 862, 863, 864, 865, 866, 867, 794, 959,
	602, 966, 967, 0, 264, 320, 271, 263, 575, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 733, 750, 0, 764, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 747,
	748, 0, 0, 0, 0, 906, 0, 749, 0, 0,
	757, 968, 969, 970, 971, 972, 973, 974, 975, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1009, 759, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 399, 256, 0, 450,
	905, 0, 0, 620, 0, 0, 903, 0, 0, 0,
	0, 362, 0, 329, 197, 224, 0, 0, 409, 458,
	470, 0, 0, 0, 956, 0, 468, 423, 597, 232,
	283, 455, 429, 466, 437, 286, 0, 0, 467, 369,
	580, 447, 594, 621, 622, 262, 403, 607, 517, 615,
	639, 225, 259, 417, 502, 600, 491, 394, 576, 577,
	328, 490, 294, 201, 366, 627, 223, 476, 368, 241,
	230, 582, 604, 298, 288, 453, 634, 212, 512, 592,
	238, 480, 0, 0, 642, 246, 501, 214, 589, 500,
	390, 325, 326, 213, 0, 454, 267, 292, 0, 0,
	257, 412, 957, 958, 255, 643, 802, 614, 219, 0,
	613, 405, 579, 590, 391, 380, 218, 588, 389, 379,
	333, 810, 811, 279, 306, 887, 886, 885, 305, 307,
	883, 884, 882, 206, 601, 0, 207, 0, 496, 603,
	644, 449, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 302, 303, 312, 364, 416, 443, 439, 448, 0,
	574, 595, 608, 619, 625, 626, 628, 629, 630, 631,
	632, 635, 633, 404, 310, 492, 332, 370, 0, 0,
	422, 469, 239, 599, 493, 893, 915, 904, 770, 771,
	894, 895, 919, 896, 773, 774, 916, 917, 767, 768,
	772, 918, 920, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 640, 503, 509, 504, 505, 506, 507, 508, 0,
	510, 907, 756, 755, 0, 762, 763, 0, 792, 793,
	795, 799, 800, 801, 812, 859, 860, 868, 870, 871,
	869, 872, 873, 874, 877, 878, 879, 880, 875, 876,
	881, 775, 779, 776, 777, 778, 790, 780, 781, 782,
	783, 784, 785, 786, 787, 788, 789, 791, 930, 931,
	932, 933, 934, 935, 805, 809, 808, 806, 807, 803,
	804, 831, 830, 832, 833, 834, 835, 836, 837, 839,
	838, 840, 841, 842, 843, 844, 845, 813, 814, 817,
	818, 816, 815, 819, 828, 829, 820, 821, 822, 823,
	824, 825, 827, 826, 846, 847, 848, 849, 850, 852,
	851, 855, 856, 854, 853, 858, 857, 754, 196, 220,
	365, 94, 451, 287, 641, 610, 481, 605, 205, 222,
	921, 261, 922, 0, 0, 926, 0, 0, 0, 928,
	927, 0, 929, 891, 890, 0, 0, 923, 924, 0,
	925, 0, 0, 198, 200, 208, 221, 231, 235, 242,
	260, 275, 277, 284, 297, 309, 317, 318, 321, 327,
	377, 383, 384, 385, 386, 406, 407, 408, 411, 414,
	415, 418, 420, 421, 424, 428, 432, 433, 434, 436,
	438, 440, 452, 457, 471, 472, 473, 474, 475, 478,
	479, 485, 486, 487, 488, 489, 497, 498, 511, 581,
	583, 598, 617, 623, 477, 936, 937, 938, 939, 940,
	941, 942, 943, 299, 593, 624, 591, 636, 618, 435,
	375, 0, 0, 378, 280, 304, 319, 0, 609, 499,
	226, 463, 289, 250, 961, 0, 210, 245, 229, 258,
	273, 276, 323, 388, 397, 426, 431, 295, 270, 243,
	456, 240, 482, 514, 515, 516, 518, 392, 265, 430,
	393, 0, 373, 571, 572, 315, 0, 523, 0, 766,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 2071, 2069, 2070, 0, 0, 753, 0, 0, 0,
	269, 758, 0, 0, 0, 363, 266, 0, 0, 427,
	0, 203, 0, 484, 251, 374, 371, 578, 281, 272,
	268, 249, 316, 382, 425, 513, 419, 765, 367, 0,
	0, 494, 398, 0, 0, 0, 0, 0, 760, 761,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 247,
	324, 202, 410, 495, 285, 0, 95, 0, 0, 1010,
	946, 1077, 912, 950, 1011, 963, 964, 965, 951, 0,
	237, 952, 953, 244, 954, 0, 911, 796, 798, 797,
	861, 862, 863, 864, 865, 866, 867, 794, 959, 602,
	966, 967, 0, 264, 320, 271, 263, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 750, 0, 764, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 747, 748,
	0, 0, 0, 0, 906, 0, 749, 0, 0, 757,
	968, 969, 970, 971, 972, 973, 974, 975, 976, 977,
	978, 979, 980, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 759, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 399, 256, 0, 450, 905,
	0, 0, 620, 0, 0, 903, 0, 0, 0, 0,
	362, 0, 329, 197, 224, 0, 0, 409, 458, 470,
	0, 0, 0, 956, 0, 468, 423, 597, 232, 283,
	455, 429, 466, 437, 286, 0, 0, 467, 369, 580,
	447, 594, 621, 622, 262, 403, 607, 517, 615, 639,
	225, 259, 417, 502, 600, 491, 394, 576, 577, 328,
	490, 294, 201, 366, 627, 223, 476, 368, 241, 230,
	582, 604, 298, 288, 453, 634, 212, 512, 592, 238,
	480, 0, 0, 642, 246, 501, 214, 589, 500, 390,
	325, 326, 213, 0, 454, 267, 292, 0, 0, 257,
	412, 957, 958, 255, 643, 802, 614, 219, 0, 613,
	405, 579, 590, 391, 380, 218, 588, 389, 379, 333,
	810, 811, 279, 306, 887, 886, 885, 305, 307, 883,
	884, 882, 206, 601, 0, 207, 0, 496, 603, 644,
	449, 211, 233, 234, 236, 0, 278, 282, 290, 293,
	302, 303, 312, 364, 416, 443, 439, 448, 0, 574,
	595, 608, 619, 625, 626, 628, 629, 630, 631, 632,
	635, 633, 404, 310, 492, 332, 370, 0, 0, 422,
	469, 239, 599, 493, 893, 915, 904, 770, 771, 894,
	895, 919, 896, 773, 774, 916, 917, 767, 768, 772,
	918, 920, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	640, 503, 509, 504, 505, 506, 507, 508, 0, 510,
	907, 756, 755, 0, 762, 763, 0, 792, 793, 795,
	799, 800, 801, 812, 859, 860, 868, 870, 871, 869,
	872, 873, 874, 877, 878, 879, 880, 875, 876, 881,
	775, 779, 776, 777, 778, 790, 780, 781, 782, 783,
	784, 785, 786, 787, 788, 789, 791, 930, 931, 932,
	933, 934, 935, 805, 809, 808, 806, 807, 803, 804,
	831, 830, 832, 833, 834, 835, 836, 837, 839, 838,
	840, 841, 842, 843, 844, 845, 813, 814, 817, 818,
	816, 815, 819, 828, 829, 820, 821, 822, 823, 824,
	825, 827, 826, 846, 847, 848, 849, 850, 852, 851,
	855, 856, 854, 853, 858, 857, 754, 196, 220, 365,
	0, 451, 287, 641, 610, 481, 605, 205, 222, 921,
	261, 922, 0, 0, 926, 0, 0, 0, 928, 927,
	0, 929, 891, 890, 0, 0, 923, 924, 0, 925,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 309, 317, 318, 321, 327, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	485, 486, 487, 488, 489, 497, 498, 511, 581, 583,
	598, 617, 623, 477, 936, 937, 938, 939, 940, 941,
	942, 943, 299, 593, 624, 591, 636, 618, 435, 375,
	0, 0, 378, 280, 304, 319, 0, 609, 499, 226,
	463, 289, 250, 961, 0, 210, 245, 229, 258, 273,
	276, 323, 388, 397, 426, 431, 295, 270, 243, 456,
	240, 482, 514, 515, 516, 518, 392, 265, 430, 393,
	0, 373, 571, 572, 315, 0, 523, 0, 766, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 753, 0, 0, 0, 269,
	758, 0, 0, 0, 363, 266, 0, 0, 427, 0,
	203, 0, 484, 251, 374, 371, 578, 281, 272, 268,
	249, 316, 382, 425, 513, 419, 765, 367, 0, 0,
	494, 398, 0, 0, 0, 0, 0, 760, 761, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 247, 324,
	202, 410, 495, 285, 0, 95, 0, 0, 1010, 946,
	737, 912, 950, 1011, 963, 964, 965, 951, 0, 237,
	952, 953, 244, 954, 0, 911, 796, 798, 797, 861,
	862, 863, 864, 865, 866, 867, 794, 959, 602, 966,
	967, 0, 264, 320, 271, 263, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 733, 750, 0, 764, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 747, 748, 0,
	0, 0, 0, 906, 0, 749, 0, 0, 757, 968,
	969, 970, 971, 972, 973, 974, 975, 976, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 759, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 399, 256, 0, 450, 905, 0,
	0, 620, 0, 0, 903, 0, 0, 0, 0, 362,
	0, 329, 197, 224, 0, 0, 409, 458, 470, 0,
	0, 0, 956, 0, 468, 423, 597, 232, 283, 455,
	429, 466, 437, 286, 4051, 0, 467, 369, 580, 447,
	594, 621, 622, 262, 403, 607, 517, 615, 639, 225,
	259, 417, 502, 600, 491, 394, 576, 577, 328, 490,
	294, 201, 366, 627, 223, 476, 368, 241, 230, 582,
	604, 298, 288, 453, 634, 212, 512, 592, 238, 480,
	0, 0, 642, 246, 501, 214, 589, 500, 390, 325,
	326, 213, 0, 454, 267, 292, 0, 0, 257, 412,
	957, 958, 255, 643, 802, 614, 219, 0, 613, 405,
	579, 590, 391, 380, 218, 588, 389, 379, 333, 810,
	811, 279, 306, 887, 886, 885, 305, 307, 883, 884,
	882, 206, 601, 0, 207, 0, 496, 603, 644, 449,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 302,
	303, 312, 364, 416, 443, 439, 448, 0, 574, 595,
	608, 619, 625, 626, 628, 629, 630, 631, 632, 635,
	633, 404, 310, 492, 332, 370, 0, 0, 422, 469,
	239, 599, 493, 893, 915, 904, 770, 771, 894, 895,
	919, 896, 773, 774, 916, 917, 767, 768, 772, 918,
	920, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 640,
	503, 509, 504, 505, 506, 507, 508, 0, 510, 907,
	756, 755, 0, 762, 763, 0, 792, 793, 795, 799,
	800, 801, 812, 859, 860, 868, 870, 871, 869, 872,
	873, 874, 877, 878, 879, 880, 875, 876, 881, 775,
	779, 776, 777, 778, 790, 780, 781, 782, 783, 784,
	785, 786, 787, 788, 789, 791, 930, 931, 932, 933,
	934, 935, 805, 809, 808, 806, 807, 803, 804, 831,
	830, 832, 833, 834, 835, 836, 837, 839, 838, 840,
	841, 842, 843, 844, 845, 813, 814, 817, 818, 816,
	815, 819, 828, 829, 820, 821, 822, 823, 824, 825,
	827, 826, 846, 847, 848, 849, 850, 852, 851, 855,
	856, 854, 853, 858, 857, 754, 196, 220, 365, 0,
	451, 287, 641, 610, 481, 605, 205, 222, 921, 261,
	922, 0, 0, 926, 0, 0, 0, 928, 927, 0,
	929, 891, 890, 0, 0, 923, 924, 0, 925, 0,
	0, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 309, 317, 318, 321, 327, 377, 383,
	384, 385, 386, 406, 407, 408, 411, 414, 415, 418,
	420, 421, 424, 428, 432, 433, 434, 436, 438, 440,
	452, 457, 471, 472, 473, 474, 475, 478, 479, 485,
	486, 487, 488, 489, 497, 498, 511, 581, 583, 598,
	617, 623, 477, 936, 937, 938, 939, 940, 941, 942,
	943, 299, 593, 624, 591, 636, 618, 435, 375, 0,
	0, 378, 280, 304, 319, 0, 609, 499, 226, 463,
	289, 250, 961, 0, 210, 245, 229, 258, 273, 276,
	323, 388, 397, 426, 431, 295, 270, 243, 456, 240,
	482, 514, 515, 516, 518, 392, 265, 430, 393, 0,
	373, 571, 572, 315, 0, 523, 0, 766, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 753, 0, 0, 0, 269, 758,
	0, 0, 0, 363, 266, 0, 0, 427, 0, 203,
	0, 484, 251, 374, 371, 578, 281, 272, 268, 249,
	316, 382, 425, 513, 419, 765, 367, 0, 0, 494,
	398, 0, 0, 0, 0, 0, 760, 761, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 247, 324, 202,
	410, 495, 285, 0, 95, 0, 1727, 1010, 946, 737,
	912, 950, 1011, 963, 964, 965, 951, 0, 237, 952,
	953, 244, 954, 0, 911, 796, 798, 797, 861, 862,
	863, 864, 865, 866, 867, 794, 959, 602, 966, 967,
	0, 264, 320, 271, 263, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 733, 750, 0, 764, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 747, 748, 0, 0,
	0, 0, 906, 0, 749, 0, 0, 757, 968, 969,
	970, 971, 972, 973, 974, 975, 976, 977, 978, 979,
	980, 981, 982, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	759, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 399, 256, 0, 450, 905, 0, 0,
	620, 0, 0, 903, 0, 0, 0, 0, 362, 0,
	329, 197, 224, 0, 0, 409, 458, 470, 0, 0,
	0, 956, 0, 468, 423, 597, 232, 283, 455, 429,
	466, 437, 286, 0, 0, 467, 369, 580, 447, 594,
	621, 622, 262, 403, 607, 517, 615, 639, 225, 259,
	417, 502, 600, 491, 394, 576, 577, 328, 490, 294,
	201, 366, 627, 223, 476, 368, 241, 230, 582, 604,
	298, 288, 453, 634, 212, 512, 592, 238, 480, 0,
	0, 642, 246, 501, 214, 589, 500, 390, 325, 326,
	213, 0, 454, 267, 292, 0, 0, 257, 412, 957,
	958, 255, 643, 802, 614, 219, 0, 613, 405, 579,
	590, 391, 380, 218, 588, 389, 379, 333, 810, 811,
	279, 306, 887, 886, 885, 305, 307, 883, 884, 882,
	206, 601, 0, 207, 0, 496, 603, 644, 449, 211,
	233, 234, 236, 0, 278, 282, 290, 293, 302, 303,
	312, 364, 416, 443, 439, 448, 0, 574, 595, 608,
	619, 625, 626, 628, 629, 630, 631, 632, 635, 633,
	404, 310, 492, 332, 370, 0, 0, 422, 469, 239,
	599, 493, 893, 915, 904, 770, 771, 894, 895, 919,
	896, 773, 774, 916, 917, 767, 768, 772, 918, 920,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 640, 503,
	509, 504, 505, 506, 507, 508, 0, 510, 907, 756,
	755, 0, 762, 763, 0, 792, 793, 795, 799, 800,
	801, 812, 859, 860, 868, 870, 871, 869, 872, 873,
	874, 877, 878, 879, 880, 875, 876, 881, 775, 779,
	776, 777, 778, 790, 780, 781, 782, 783, 784, 785,
	786, 787, 788, 789, 791, 930, 931, 932, 933, 934,
	935, 805, 809, 808, 806, 807, 803, 804, 831, 830,
	832, 833, 834, 835, 836, 837, 839, 838, 840, 841,
	842, 843, 844, 845, 813, 814, 817, 818, 816, 815,
	819, 828, 829, 820, 821, 822, 823, 824, 825, 827,
	826, 846, 847, 848, 849, 850, 852, 851, 855, 856,
	854, 853, 858, 857, 754, 196, 220, 365, 0, 451,
	287, 641, 610, 481, 605, 205, 222, 921, 261, 922,
	0, 0, 926, 0, 0, 0, 928, 927, 0, 929,
	891, 890, 0, 0, 923, 924, 0, 925, 0, 0,
	198, 200, 208, 221, 231, 235, 242, 260, 275, 277,
	284, 297, 309, 317, 318, 321, 327, 377, 383, 384,
	385, 386, 406, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 433, 434, 436, 438, 440, 452,
	457, 471, 472, 473, 474, 475, 478, 479, 485, 486,
	487, 488, 489, 497, 498, 511, 581, 583, 598, 617,
	623, 477, 936, 937, 938, 939, 940, 941, 942, 943,
	299, 593, 624, 591, 636, 618, 435, 375, 0, 0,
	378, 280, 304, 319, 0, 609, 499, 226, 463, 289,
	250, 961, 0, 210, 245, 229, 258, 273, 276, 323,
	388, 397, 426, 431, 295, 270, 243, 456, 240, 482,
	514, 515, 516, 518, 392, 265, 430, 393, 0, 373,
	571, 572, 315, 0, 523, 0, 766, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 0, 0, 0,
	0, 0, 0, 753, 0, 0, 0, 269, 758, 0,
	0, 0, 363, 266, 0, 0, 427, 0, 203, 0,
	484, 251, 374, 371, 578, 281, 272, 268, 249, 316,
	382, 425, 513, 419, 765, 367, 0, 0, 494, 398,
	0, 0, 0, 0, 0, 760, 761, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 247, 324, 202, 410,
	495, 285, 0, 95, 0, 0, 1010, 946, 737, 912,
	950, 1011, 963, 964, 965, 951, 0, 237, 952, 953,
	244, 954, 0, 911, 796, 798, 797, 861, 862, 863,
	864, 865, 866, 867, 794, 959, 602, 966, 967, 0,
	264, 320, 271, 263, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 733, 750, 0, 764, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 747, 748, 1056, 0, 0,
	0, 906, 0, 749, 0, 0, 757, 968, 969, 970,
	971, 972, 973, 974, 975, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 759,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 399, 256, 0, 450, 905, 0, 0, 620,
	0, 0, 903, 0, 0, 0, 0, 362, 0, 329,
	197, 224, 0, 0, 409, 458, 470, 0, 0, 0,
	956, 0, 468, 423, 597, 232, 283, 455, 429, 466,
	437, 286, 0, 0, 467, 369, 580, 447, 594, 621,
	622, 262, 403, 607, 517, 615, 639, 225, 259, 417,
	502, 600, 491, 394, 576, 577, 328, 490, 294, 201,
	366, 627, 223, 476, 368, 241, 230, 582, 604, 298,
	288, 453, 634, 212, 512, 592, 238, 480, 0, 0,
	642, 246, 501, 214, 589, 500, 390, 325, 326, 213,
	0, 454, 267, 292, 0, 0, 257, 412, 957, 958,
	255, 643, 802, 614, 219, 0, 613, 405, 579, 590,
	391, 380, 218, 588, 389, 379, 333, 810, 811, 279,
	306, 887, 886, 885, 305, 307, 883, 884, 882, 206,
	601, 0, 207, 0, 496, 603, 644, 449, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 302, 303, 312,
	364, 416, 443, 439, 448, 0, 574, 595, 608, 619,
	625, 626, 628, 629, 630, 631, 632, 635, 633, 404,
	310, 492, 332, 370, 0, 0, 422, 469, 239, 599,
	493, 893, 915, 904, 770, 771, 894, 895, 919, 896,
	773, 774, 916, 917, 767, 768, 772, 918, 920, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 640, 503, 509,
	504, 505, 506, 507, 508, 0, 510, 907, 756, 755,
	0, 762, 763, 0, 792, 793, 795, 799, 800, 801,
	812, 859, 860, 868, 870, 871, 869, 872, 873, 874,
	877, 878, 879, 880, 875, 876, 881, 775, 779, 776,
	777, 778, 790, 780, 781, 782, 783, 784, 785, 786,
	787, 788, 789, 791, 930, 931, 932, 933, 934, 935,
	805, 809, 808, 806, 807, 803, 804, 831, 830, 832,
	833, 834, 835, 836, 837, 839, 838, 840, 841, 842,
	843, 844, 845, 813, 814, 817, 818, 816, 815, 819,
	828, 829, 820, 821, 822, 823, 824, 825, 827, 826,
	846, 847, 848, 849, 850, 852, 851, 855, 856, 854,
	853, 858, 857, 754, 196, 220, 365, 0, 451, 287,
	641, 610, 481, 605, 205, 222, 921, 261, 922, 0,
	0, 926, 0, 0, 0, 928, 927, 0, 929, 891,
	890, 0, 0, 923, 924, 0, 925, 0, 0, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 309, 317, 318, 321, 327, 377, 383, 384, 385,
	386, 406, 407, 408, 411, 414, 415, 418, 420, 421,
	424, 428, 432, 433, 434, 436, 438, 440, 452, 457,
	471, 472, 473, 474, 475, 478, 479, 485, 486, 487,
	488, 489, 497, 498, 511, 581, 583, 598, 617, 623,
	477, 936, 937, 938, 939, 940, 941, 942, 943, 299,
	593, 624, 591, 636, 618, 435, 375, 0, 0, 378,
	280, 304, 319, 0, 609, 499, 226, 463, 289, 250,
	961, 0, 210, 245, 229, 258, 273, 276, 323, 388,
	397, 426, 431, 295, 270, 243, 456, 240, 482, 514,
	515, 516, 518, 392, 265, 430, 393, 0, 373, 571,
	572, 315, 0, 523, 0, 766, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	0, 0, 753, 0, 0, 0, 269, 758, 0, 0,
	0, 363, 266, 0, 0, 427, 0, 203, 0, 484,
	251, 374, 371, 578, 281, 272, 268, 249, 316, 382,
	425, 513, 419, 765, 367, 0, 0, 494, 398, 0,
	0, 0, 0, 0, 760, 761, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 247, 324, 202, 410, 495,
	285, 0, 95, 0, 0, 1010, 946, 737, 912, 950,
	1011, 963, 964, 965, 951, 0, 237, 952, 953, 244,
	954, 0, 911, 796, 798, 797, 861, 862, 863, 864,
	865, 866, 867, 794, 959, 602, 966, 967, 0, 264,
	320, 271, 263, 575, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	733, 750, 0, 764, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 747, 748, 0, 0, 0, 0,
	906, 0, 749, 0, 0, 757, 968, 969, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 759, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 399, 256, 0, 450, 905, 0, 0, 620, 0,
	0, 903, 0, 0, 0, 0, 362, 0, 329, 197,
	224, 0, 0, 409, 458, 470, 0, 0, 0, 956,
	0, 468, 423, 597, 232, 283, 455, 429, 466, 437,
	286, 0, 0, 467, 369, 580, 447, 594, 621, 622,
	262, 403, 607, 517, 615, 639, 225, 259, 417, 502,
	600, 491, 394, 576, 577, 328, 490, 294, 201, 366,
	627, 223, 476, 368, 241, 230, 582, 604, 298, 288,
	453, 634, 212, 512, 592, 238, 480, 0, 0, 642,
	246, 501, 214, 589, 500, 390, 325, 326, 213, 0,
	454, 267, 292, 0, 0, 257, 412, 957, 958, 255,
	643, 802, 614, 219, 0, 613, 405, 579, 590, 391,
	380, 218, 588, 389, 379, 333, 810, 811, 279, 306,
	887, 886, 885, 305, 307, 883, 884, 882, 206, 601,
	0, 207, 0, 496, 603, 644, 449, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 302, 303, 312, 364,
	416, 443, 439, 448, 0, 574, 595, 608, 619, 625,
	626, 628, 629, 630, 631, 632, 635, 633, 404, 310,
	492, 332, 370, 0, 0, 422, 469, 239, 599, 493,
	893, 915, 904, 770, 771, 894, 895, 919, 896, 773,
	774, 916, 917, 767, 768, 772, 918, 920, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 640, 503, 509, 504,
	505, 506, 507, 508, 0, 510, 907, 756, 755, 0,
	762, 763, 0, 792, 793, 795, 799, 800, 801, 812,
	859, 860, 868, 870, 871, 869, 872, 873, 874, 877,
	878, 879, 880, 875, 876, 881, 775, 779, 776, 777,
	778, 790, 780, 781, 782, 783, 784, 785, 786, 787,
	788, 789, 791, 930, 931, 932, 933, 934, 935, 805,
	809, 808, 806, 807, 803, 804, 831, 830, 832, 833,
	834, 835, 836, 837, 839, 838, 840, 841, 842, 843,
	844, 845, 813, 814, 817, 818, 816, 815, 819, 828,
	829, 820, 821, 822, 823, 824, 825, 827, 826, 846,
	847, 848, 849, 850, 852, 851, 855, 856, 854, 853,
	858, 857, 754, 196, 220, 365, 0, 451, 287, 641,
	610, 481, 605, 205, 222, 921, 261, 922, 0, 0,
	926, 0, 0, 0, 928, 927, 0, 929, 891, 890,
	0, 0, 923, 924, 0, 925, 0, 0, 198, 200,
	208, 221, 231, 235, 242, 260, 275, 277, 284, 297,
	309, 317, 318, 321, 327, 377, 383, 384, 385, 386,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 433, 434, 436, 438, 440, 452, 457, 471,
	472, 473, 474, 475, 478, 479, 485, 486, 487, 488,
	489, 497, 498, 511, 581, 583, 598, 617, 623, 477,
	936, 937, 938, 939, 940, 941, 942, 943, 299, 593,
	624, 591, 636, 618, 435, 375, 0, 0, 378, 280,
	304, 319, 0, 609, 499, 226, 463, 289, 250, 961,
	0, 210, 245, 229, 258, 273, 276, 323, 388, 397,
	426, 431, 295, 270, 243, 456, 240, 482, 514, 515,
	516, 518, 392, 265, 430, 393, 0, 373, 571, 572,
	315, 0, 523, 0, 766, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 0, 0, 0, 0, 0,
	0, 753, 0, 0, 0, 269, 758, 0, 0, 0,
	363, 266, 0, 0, 427, 0, 203, 0, 484, 251,
	374, 371, 578, 281, 272, 268, 249, 316, 382, 425,
	513, 419, 765, 367, 0, 0, 494, 398, 0, 0,
	0, 0, 0, 760, 761, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 247, 324, 202, 410, 495, 285,
	0, 95, 0, 0, 1010, 946, 737, 912, 950, 1011,
	963, 964, 965, 951, 0, 237, 952, 953, 244, 954,
	0, 911, 796, 798, 797, 861, 862, 863, 864, 865,
	866, 867, 794, 959, 602, 966, 967, 0, 264, 320,
	271, 263, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 733,
	750, 0, 764, 0, 0, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 747, 748, 0, 0, 0, 0, 906,
	0, 749, 0, 0, 757, 968, 969, 970, 971, 972,
	973, 974, 975, 976, 977, 978, 979, 980, 981, 982,
	983, 984, 985, 986, 987, 988, 989, 990, 991, 992,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 1008, 1009, 3130, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	399, 256, 0, 450, 905, 0, 0, 620, 0, 0,
	903, 0, 0, 0, 0, 362, 0, 329, 197, 224,
	0, 0, 409, 458, 470, 0, 0, 0, 956, 0,
	468, 423, 597, 232, 283, 455, 429, 466, 437, 286,
	0, 0, 467, 369, 580, 447, 594, 621, 622, 262,
	403, 607, 517, 615, 639, 225, 259, 417, 502, 600,
	491, 394, 576, 577, 328, 490, 294, 201, 366, 627,
	223, 476, 368, 241, 230, 582, 604, 298, 288, 453,
	634, 212, 512, 592, 238, 480, 0, 0, 642, 246,
	501, 214, 589, 500, 390, 325, 326, 213, 0, 454,
	267, 292, 0, 0, 257, 412, 957, 958, 255, 643,
	802, 614, 219, 0, 613, 405, 579, 590, 391, 380,
	218, 588, 389, 379, 333, 810, 811, 279, 306, 887,
	886, 885, 305, 307, 883, 884, 882, 206, 601, 0,
	207, 0, 496, 603, 644, 449, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 302, 303, 312, 364, 416,
	443, 439, 448, 0, 574, 595, 608, 619, 625, 626,
	628, 629, 630, 631, 632, 635, 633, 404, 310, 492,
	332, 370, 0, 0, 422, 469, 239, 599, 493, 893,
	915, 904, 770, 771, 894, 895, 919, 896, 773, 774,
	916, 917, 767, 768, 772, 918, 920, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 640, 503, 509, 504, 505,
	506, 507, 508, 0, 510, 907, 756, 755, 0, 762,
	763, 0, 792, 793, 795, 799, 800, 801, 812, 859,
	860, 868, 870, 871, 869, 872, 873, 874, 877, 878,
	879, 880, 875, 876, 881, 775, 779, 776, 777, 778,
	790, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 791, 930, 931, 932, 933, 934, 935, 805, 809,
	808, 806, 807, 803, 804, 831, 830, 832, 833, 834,
	835, 836, 837, 839, 838, 840, 841, 842, 843, 844,
	845, 813, 814, 817, 818, 816, 815, 819, 828, 829,
	820, 821, 822, 823, 824, 825, 827, 826, 846, 847,
	848, 849, 850, 852, 851, 855, 856, 854, 853, 858,
	857, 754, 196, 220, 365, 0, 451, 287, 641, 610,
	481, 605, 205, 222, 921, 261, 922, 0, 0, 926,
	0, 0, 0, 928, 927, 0, 929, 891, 890, 0,
	0, 923, 924, 0, 925, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 309,
	317, 318, 321, 327, 377, 383, 384, 385, 386, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 485, 486, 487, 488, 489,
	497, 498, 511, 581, 583, 598, 617, 623, 477, 936,
	937, 938, 939, 940, 941, 942, 943, 299, 593, 624,
	591, 636, 618, 435, 375, 0, 0, 378, 280, 304,
	319, 0, 609, 499, 226, 463, 289, 250, 961, 0,
	210, 245, 229, 258, 273, 276, 323, 388, 397, 426,
	431, 295, 270, 243, 456, 240, 482, 514, 515, 516,
	518, 392, 265, 430, 393, 0, 373, 571, 572, 315,
	0, 523, 0, 766, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	753, 0, 0, 0, 269, 758, 0, 0, 0, 363,
	266, 0, 0, 427, 0, 203, 0, 484, 251, 374,
	371, 578, 281, 272, 268, 249, 316, 382, 425, 513,
	419, 765, 367, 0, 0, 494, 398, 0, 0, 0,
	0, 0, 760, 761, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 247, 324, 202, 410, 495, 285, 0,
	95, 0, 0, 1010, 946, 737, 912, 950, 1011, 963,
	964, 965, 951, 0, 237, 952, 953, 244, 954, 0,
	911, 796, 798, 797, 861, 862, 863, 864, 865, 866,
	867, 794, 959, 602, 966, 967, 0, 264, 320, 271,
	263, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 733, 750,
	0, 764, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 747, 748, 0, 0, 0, 0, 906, 0,
	749, 0, 0, 757, 968, 969, 970, 971, 972, 973,
	974, 975, 976, 977, 978, 979, 980, 981, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 1008, 1009, 3126, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 399,
	256, 0, 450, 905, 0, 0, 620, 0, 0, 903,
	0, 0, 0, 0, 362, 0, 329, 197, 224, 0,
	0, 409, 458, 470, 0, 0, 0, 956, 0, 468,
	423, 597, 232, 283, 455, 429, 466, 437, 286, 0,
	0, 467, 369, 580, 447, 594, 621, 622, 262, 403,
	607, 517, 615, 639, 225, 259, 417, 502, 600, 491,
	394, 576, 577, 328, 490, 294, 201, 366, 627, 223,
	476, 368, 241, 230, 582, 604, 298, 288, 453, 634,
	212, 512, 592, 238, 480, 0, 0, 642, 246, 501,
	214, 589, 500, 390, 325, 326, 213, 0, 454, 267,
	292, 0, 0, 257, 412, 957, 958, 255, 643, 802,
	614, 219, 0, 613, 405, 579, 590, 391, 380, 218,
	588, 389, 379, 333, 810, 811, 279, 306, 887, 886,
	885, 305, 307, 883, 884, 882, 206, 601, 0, 207,
	0, 496, 603, 644, 449, 211, 233, 234, 236, 0,
	278, 282, 290, 293, 302, 303, 312, 364, 416, 443,
	439, 448, 0, 574, 595, 608, 619, 625, 626, 628,
	629, 630, 631, 632, 635, 633, 404, 310, 492, 332,
	370, 0, 0, 422, 469, 239, 599, 493, 893, 915,
	904, 770, 771, 894, 895, 919, 896, 773, 774, 916,
	917, 767, 768, 772, 918, 920, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 640, 503, 509, 504, 505, 506,
	507, 508, 0, 510, 907, 756, 755, 0, 762, 763,
	0, 792, 793, 795, 799, 800, 801, 812, 859, 860,
	868, 870, 871, 869, 872, 873, 874, 877, 878, 879,
	880, 875, 876, 881, 775, 779, 776, 777, 778, 790,
	780, 781, 782, 783, 784, 785, 786, 787, 788, 789,
	791, 930, 931, 932, 933, 934, 935, 805, 809, 808,
	806, 807, 803, 804, 831, 830, 832, 833, 834, 835,
	836, 837, 839, 838, 840, 841, 842, 843, 844, 845,
	813, 814, 817, 818, 816, 815, 819, 828, 829, 820,
	821, 822, 823, 824, 825, 827, 826, 846, 847, 848,
	849, 850, 852, 851, 855, 856, 854, 853, 858, 857,
	754, 196, 220, 365, 0, 451, 287, 641, 610, 481,
	605, 205, 222, 921, 261, 922, 0, 0, 926, 0,
	0, 0, 928, 927, 0, 929, 891, 890, 0, 0,
	923, 924, 0, 925, 0, 0, 198, 200, 208, 221,
	231, 235, 242, 260, 275, 277, 284, 297, 309, 317,
	318, 321, 327, 377, 383, 384, 385, 386, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	433, 434, 436, 438, 440, 452, 457, 471, 472, 473,
	474, 475, 478, 479, 485, 486, 487, 488, 489, 497,
	498, 511, 581, 583, 598, 617, 623, 477, 936, 937,
	938, 939, 940, 941, 942, 943, 299, 593, 624, 591,
	636, 618, 435, 375, 0, 0, 378, 280, 304, 319,
	0, 609, 499, 226, 463, 289, 250, 961, 0, 210,
	245, 229, 258, 273, 276, 323, 388, 397, 426, 431,
	295, 270, 243, 456, 240, 482, 514, 515, 516, 518,
	392, 265, 430, 393, 0, 373, 571, 572, 315, 0,
	523, 0, 766, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 0, 0, 0, 0, 0, 0, 753,
	0, 0, 0, 269, 758, 0, 0, 0, 363, 266,
	0, 0, 427, 0, 203, 0, 484, 251, 374, 371,
	578, 281, 272, 268, 249, 316, 382, 425, 513, 419,
	765, 367, 0, 0, 494, 398, 0, 0, 0, 0,
	0, 760, 761, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 247, 324, 202, 410, 495, 285, 0, 95,
	0, 0, 1010, 946, 1077, 912, 950, 1011, 963, 964,
	965, 951, 0, 237, 952, 953, 244, 954, 0, 911,
	796, 798, 797, 861, 862, 863, 864, 865, 866, 867,
	794, 959, 602, 966, 967, 0, 264, 320, 271, 263,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 750, 0,
	764, 0, 0, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 747, 748, 0, 0, 0, 0, 906, 0, 749,
	0, 0, 757, 968, 969, 970, 971, 972, 973, 974,
	975, 976, 977, 978, 979, 980, 981, 982, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 1008, 1009, 759, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 399, 256,
	0, 450, 905, 0, 0, 620, 0, 0, 903, 0,
	0, 0, 0, 362, 0, 329, 197, 224, 0, 0,
	409, 458, 470, 0, 0, 0, 956, 0, 468, 423,
	597, 232, 283, 455, 429, 466, 437, 286, 0, 0,
	467, 369, 580, 447, 594, 621, 622, 262, 403, 607,
	517, 615, 639, 225, 259, 417, 502, 600, 491, 394,
	576, 577, 328, 490, 294, 201, 366, 627, 223, 476,
	368, 241, 230, 582, 604, 298, 288, 453, 634, 212,
	512, 592, 238, 480, 0, 0, 642, 246, 501, 214,
	589, 500, 390, 325, 326, 213, 0, 454, 267, 292,
	0, 0, 257, 412, 957, 958, 255, 643, 802, 614,
	219, 0, 613, 405, 579, 590, 391, 380, 218, 588,
	389, 379, 333, 810, 811, 279, 306, 887, 886, 885,
	305, 307, 883, 884, 882, 206, 601, 0, 207, 0,
	496, 603, 644, 449, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 302, 303, 312, 364, 416, 443, 439,
	448, 0, 574, 595, 608, 619, 625, 626, 628, 629,
	630, 631, 632, 635, 633, 404, 310, 492, 332, 370,
	0, 0, 422, 469, 239, 599, 493, 893, 915, 904,
	770, 771, 894, 895, 919, 896, 773, 774, 916, 917,
	767, 768, 772, 918, 920, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 640, 503, 509, 504, 505, 506, 507,
	508, 0, 510, 907, 756, 755, 0, 762, 763, 0,
	792, 793, 795, 799, 800, 801, 812, 859, 860, 868,
	870, 871, 869, 872, 873, 874, 877, 878, 879, 880,
	875, 876, 881, 775, 779, 776, 777, 778, 790, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 789, 791,
	930, 931, 932, 933, 934, 935, 805, 809, 808, 806,
	807, 803, 804, 831, 830, 832, 833, 834, 835, 836,
	837, 839, 838, 840, 841, 842, 843, 844, 845, 813,
	814, 817, 818, 816, 815, 819, 828, 829, 820, 821,
	822, 823, 824, 825, 827, 826, 846, 847, 848, 849,
	850, 852, 851, 855, 856, 854, 853, 858, 857, 754,
	196, 220, 365, 0, 451, 287, 641, 610, 481, 605,
	205, 222, 921, 261, 922, 0, 0, 926, 0, 0,
	0, 928, 927, 0, 929, 891, 890, 0, 0, 923,
	924, 0, 925, 0, 0, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 309, 317, 318,
	321, 327, 377, 383, 384, 385, 386, 406, 407, 408,
	411, 414, 415, 418, 420, 421, 424, 428, 432, 433,
	434, 436, 438, 440, 452, 457, 471, 472, 473, 474,
	475, 478, 479, 485, 486, 487, 488, 489, 497, 498,
	511, 581, 583, 598, 617, 623, 477, 936, 937, 938,
	939, 940, 941, 942, 943, 299, 593, 624, 591, 636,
	618, 435, 375, 0, 0, 378, 280, 304, 319, 0,
	609, 499, 226, 463, 289, 250, 961, 0, 210, 245,
	229, 258, 273, 276, 323, 388, 397, 426, 431, 295,
	270, 243, 456, 240, 482, 514, 515, 516, 518, 392,
	265, 430, 393, 0, 373, 571, 572, 315, 0, 523,
	0, 766, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 753, 0,
	0, 0, 269, 758, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 484, 251, 374, 371, 578,
	281, 272, 268, 249, 316, 382, 425, 513, 419, 765,
	367, 0, 0, 494, 398, 0, 0, 0, 0, 0,
	760, 761, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 495, 285, 0, 95, 0,
	0, 1010, 946, 1077, 912, 950, 1011, 963, 964, 965,
	951, 0, 237, 952, 953, 244, 954, 0, 911, 796,
	798, 797, 861, 862, 863, 864, 865, 866, 867, 794,
	959, 602, 966, 967, 0, 264, 320, 271, 263, 575,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 750, 0, 764,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	747, 748, 0, 0, 0, 0, 906, 0, 749, 0,
	0, 757, 968, 969, 970, 971, 972, 973, 974, 975,
	976, 977, 978, 979, 980, 981, 982, 983, 984, 985,
	986, 987, 988, 989, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	1006, 1007, 1008, 1009, 2091, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 399, 256, 0,
	450, 905, 0, 0, 620, 0, 0, 903, 0, 0,
	0, 0, 362, 0, 329, 197, 224, 0, 0, 409,
	458, 470, 0, 0, 0, 956, 0, 468, 423, 597,
	232, 283, 455, 429, 466, 437, 286, 0, 0, 467,
	369, 580, 447, 594, 621, 622, 262, 403, 607, 517,
	615, 639, 225, 259, 417, 502, 600, 491, 394, 576,
	577, 328, 490, 294, 201, 366, 627, 223, 476, 368,
	241, 230, 582, 604, 298, 288, 453, 634, 212, 512,
	592, 238, 480, 0, 0, 642, 246, 501, 214, 589,
	500, 390, 325, 326, 213, 0, 454, 267, 292, 0,
	0, 257, 412, 957, 958, 255, 643, 802, 614, 219,
	0, 613, 405, 579, 590, 391, 380, 218, 588, 389,
	379, 333, 810, 811, 279, 306, 887, 886, 885, 305,
	307, 883, 884, 882, 206, 601, 0, 207, 0, 496,
	603, 644, 449, 211, 233, 234, 236, 0, 278, 282,
	290, 293, 302, 303, 312, 364, 416, 443, 439, 448,
	0, 574, 595, 608, 619, 625, 626, 628, 629, 630,
	631, 632, 635, 633, 404, 310, 492, 332, 370, 0,
	0, 422, 469, 239, 599, 493, 893, 915, 904, 770,
	771, 894, 895, 919, 896, 773, 774, 916, 917, 767,
	768, 772, 918, 920, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 640, 503, 509, 504, 505, 506, 507, 508,
	0, 510, 907, 756, 755, 0, 762, 763, 0, 792,
	793, 795, 799, 800, 801, 812, 859, 860, 868, 870,
	871, 869, 872, 873, 874, 877, 878, 879, 880, 875,
	876, 881, 775, 779, 776, 777, 778, 790, 780, 781,
	782, 783, 784, 785, 786, 787, 788, 789, 791, 930,
	931, 932, 933, 934, 935, 805, 809, 808, 806, 807,
	803, 804, 831, 830, 832, 833, 834, 835, 836, 837,
	839, 838, 840, 841, 842, 843, 844, 845, 813, 814,
	817, 818, 816, 815, 819, 828, 829, 820, 821, 822,
	823, 824, 825, 827, 826, 846, 847, 848, 849, 850,
	852, 851, 855, 856, 854, 853, 858, 857, 754, 196,
	220, 365, 0, 451, 287, 641, 610, 481, 605, 205,
	222, 921, 261, 922, 0, 0, 926, 0, 0, 0,
	928, 927, 0, 929, 891, 890, 0, 0, 923, 924,
	0, 925, 0, 0, 198, 200, 208, 221, 231, 235,
	242, 260, 275, 277, 284, 297, 309, 317, 318, 321,
	327, 377, 383, 384, 385, 386, 406, 407, 408, 411,
	414, 415, 418, 420, 421, 424, 428, 432, 433, 434,
	436, 438, 440, 452, 457, 471, 472, 473, 474, 475,
	478, 479, 485, 486, 487, 488, 489, 497, 498, 511,
	581, 583, 598, 617, 623, 477, 936, 937, 938, 939,
	940, 941, 942, 943, 299, 593, 624, 591, 636, 618,
	435, 375, 0, 0, 378, 280, 304, 319, 0, 609,
	499, 226, 463, 289, 250, 961, 0, 210, 245, 229,
	258, 273, 276, 323, 388, 397, 426, 431, 295, 270,
	243, 456, 240, 482, 514, 515, 516, 518, 392, 265,
	430, 393, 0, 373, 571, 572, 315, 0, 523, 0,
	766, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 753, 0, 0,
	0, 269, 758, 0, 0, 0, 363, 266, 0, 0,
	427, 0, 203, 0, 484, 251, 374, 371, 578, 281,
	272, 268, 249, 316, 382, 425, 513, 419, 765, 367,
	0, 0, 494, 398, 0, 0, 0, 0, 0, 760,
	761, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	247, 324, 202, 410, 495, 285, 0, 95, 0, 0,
	1010, 946, 1077, 912, 950, 1011, 963, 964, 965, 951,
	0, 237, 952, 953, 244, 954, 0, 911, 796, 798,
	797, 861, 862, 863, 864, 865, 866, 867, 794, 959,
	602, 966, 967, 0, 264, 320, 271, 263, 575, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 750, 0, 764, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 747,
	748, 0, 0, 0, 0, 906, 0, 749, 0, 0,
	757, 968, 969, 970, 971, 972, 973, 974, 975, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1009, 2089, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 399, 256, 0, 450,
	905, 0, 0, 620, 0, 0, 903, 0, 0, 0,
	0, 362, 0, 329, 197, 224, 0, 0, 409, 458,
	470, 0, 0, 0, 956, 0, 468, 423, 597, 232,
	283, 455, 429, 466, 437, 286, 0, 0, 467, 369,
	580, 447, 594, 621, 622, 262, 403, 607, 517, 615,
	639, 225, 259, 417, 502, 600, 491, 394, 576, 577,
	328, 490, 294, 201, 366, 627, 223, 476, 368, 241,
	230, 582, 604, 298, 288, 453, 634, 212, 512, 592,
	238, 480, 0, 0, 642, 246, 501, 214, 589, 500,
	390, 325, 326, 213, 0, 454, 267, 292, 0, 0,
	257, 412, 957, 958, 255, 643, 802, 614, 219, 0,
	613, 405, 579, 590, 391, 380, 218, 588, 389, 379,
	333, 810, 811, 279, 306, 887, 886, 885, 305, 307,
	883, 884, 882, 206, 601, 0, 207, 0, 496, 603,
	644, 449, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 302, 303, 312, 364, 416, 443, 439, 448, 0,
	574, 595, 608, 619, 625, 626, 628, 629, 630, 631,
	632, 635, 633, 404, 310, 492, 332, 370, 0, 0,
	422, 469, 239, 599, 493, 893, 915, 904, 770, 771,
	894, 895, 919, 896, 773, 774, 916, 917, 767, 768,
	772, 918, 920, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 640, 503, 509, 504, 505, 506, 507, 508, 0,
	510, 907, 756, 755, 0, 762, 763, 0, 792, 793,
	795, 799, 800, 801, 812, 859, 860, 868, 870, 871,
	869, 872, 873, 874, 877, 878, 879, 880, 875, 876,
	881, 775, 779, 776, 777, 778, 790, 780, 781, 782,
	783, 784, 785, 786, 787, 788, 789, 791, 930, 931,
	932, 933, 934, 935, 805, 809, 808, 806, 807, 803,
	804, 831, 830, 832, 833, 834, 835, 836, 837, 839,
	838, 840, 841, 842, 843, 844, 845, 813, 814, 817,
	818, 816, 815, 819, 828, 829, 820, 821, 822, 823,
	824, 825, 827, 826, 846, 847, 848, 849, 850, 852,
	851, 855, 856, 854, 853, 858, 857, 754, 196, 220,
	365, 0, 451, 287, 641, 610, 481, 605, 205, 222,
	921, 261, 922, 0, 0, 926, 0, 0, 0, 928,
	927, 0, 929, 891, 890, 0, 0, 923, 924, 0,
	925, 0, 0, 198, 200, 208, 221, 231, 235, 242,
	260, 275, 277, 284, 297, 309, 317, 318, 321, 327,
	377, 383, 384, 385, 386, 406, 407, 408, 411, 414,
	415, 418, 420, 421, 424, 428, 432, 433, 434, 436,
	438, 440, 452, 457, 471, 472, 473, 474, 475, 478,
	479, 485, 486, 487, 488, 489, 497, 498, 511, 581,
	583, 598, 617, 623, 477, 936, 937, 938, 939, 940,
	941, 942, 943, 299, 593, 624, 591, 636, 618, 435,
	375, 0, 0, 378, 280, 304, 319, 0, 609, 499,
	226, 463, 289, 250, 961, 0, 210, 245, 229, 258,
	273, 276, 323, 388, 397, 426, 431, 295, 270, 243,
	456, 240, 482, 514, 515, 516, 518, 392, 265, 430,
	393, 0, 373, 571, 572, 315, 0, 523, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 363, 266, 0, 0, 427,
	0, 203, 0, 484, 251, 374, 371, 578, 281, 272,
	268, 249, 316, 382, 425, 513, 419, 0, 367, 0,
	0, 494, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 247,
	324, 202, 410, 495, 285, 0, 0, 0, 0, 0,
	713, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 244, 0, 0, 0, 348, 357, 356,
	337, 338, 340, 342, 347, 354, 360, 0, 0, 602,
	0, 0, 0, 264, 320, 271, 263, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 1128, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 399, 256, 0, 450, 0,
	0, 1127, 620, 0, 0, 0, 0, 0, 1124, 1125,
	362, 1085, 329, 197, 224, 1118, 1122, 409, 458, 470,
	0, 0, 0, 252, 0, 468, 423, 597, 232, 283,
	455, 429, 466, 437, 286, 0, 0, 467, 369, 580,
	447, 594, 621, 622, 262, 403, 607, 517, 615, 639,
	225, 259, 417, 502, 600, 491, 394, 576, 577, 328,
	490, 294, 201, 366, 627, 223, 476, 368, 241, 230,
	582, 604, 298, 288, 453, 634, 212, 512, 592, 238,
	480, 0, 0, 642, 246, 501, 214, 589, 500, 390,
	325, 326, 213, 0, 454, 267, 292, 0, 0, 257,
	412, 584, 585, 255, 643, 227, 614, 219, 0, 613,
	405, 579, 590, 391, 380, 218, 588, 389, 379, 333,
	352, 353, 279, 306, 444, 372, 445, 305, 307, 401,
	400, 402, 206, 601, 0, 207, 0, 496, 603, 644,
	449, 211, 233, 234, 236, 0, 278, 282, 290, 293,
	302, 303, 312, 364, 416, 443, 439, 448, 0, 574,
	595, 608, 619, 625, 626, 628, 629, 630, 631, 632,
	635, 633, 404, 310, 492, 332, 370, 0, 0, 422,
	469, 239, 599, 493, 199, 0, 0, 0, 0, 253,
	254, 0, 570, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	640, 503, 509, 504, 505, 506, 507, 508, 0, 510,
	0, 0, 0, 0, 0, 395, 0, 586, 587, 663,
	381, 483, 596, 334, 346, 349, 339, 358, 0, 359,
	335, 336, 341, 343, 344, 345, 350, 351, 355, 361,
	248, 209, 387, 396, 573, 311, 215, 216, 217, 519,
	520, 521, 522, 611, 612, 616, 204, 459, 460, 461,
	462, 291, 606, 308, 465, 464, 330, 331, 376, 446,
	535, 537, 548, 552, 554, 556, 562, 565, 536, 538,
	549, 553, 555, 557, 563, 566, 525, 527, 529, 531,
	544, 543, 540, 568, 569, 546, 551, 530, 542, 547,
	560, 567, 564, 524, 528, 532, 541, 559, 558, 539,
	550, 561, 545, 533, 526, 534, 0, 196, 220, 365,
	0, 451, 287, 641, 610, 481, 605, 205, 222, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 309, 317, 318, 321, 327, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	485, 486, 487, 488, 489, 497, 498, 511, 581, 583,
	598, 617, 623, 477, 300, 301, 441, 442, 313, 314,
	637, 638, 299, 593, 624, 591, 636, 618, 435, 375,
	0, 0, 378, 280, 304, 319, 0, 609, 499, 226,
	463, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 323, 388, 397, 426, 431, 295, 270, 243, 456,
	240, 482, 514, 515, 516, 518, 392, 265, 430, 393,
	0, 373, 571, 572, 315, 0, 523, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 363, 266, 0, 0, 427, 0,
	203, 0, 484, 251, 374, 371, 578, 281, 272, 268,
	249, 316, 382, 425, 513, 419, 0, 367, 0, 0,
	494, 398, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 247, 324,
	202, 410, 495, 285, 0, 0, 0, 0, 1688, 946,
	0, 0, 1685, 0, 0, 0, 0, 1683, 0, 237,
	1684, 1682, 244, 1687, 0, 911, 348, 357, 356, 337,
	338, 340, 342, 347, 354, 360, 0, 0, 602, 0,
	0, 0, 264, 320, 271, 263, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 399, 256, 0, 450, 0, 0,
	0, 620, 0, 0, 0, 0, 0, 0, 0, 362,
	0, 329, 197, 224, 0, 0, 409, 458, 470, 0,
	0, 0, 252, 0, 468, 423, 597, 232, 283, 455,
	429, 466, 437, 286, 0, 0, 467, 369, 580, 447,
	594, 621, 622, 262, 403, 607, 517, 615, 639, 225,
	259, 417, 502, 600, 491, 394, 576, 577, 328, 490,
	294, 201, 366, 627, 223, 476, 368, 241, 230, 582,
	604, 298, 288, 453, 634, 212, 512, 592, 238, 480,
	0, 0, 642, 246, 501, 214, 589, 500, 390, 325,
	326, 213, 0, 454, 267, 292, 0, 0, 257, 412,
	584, 585, 255, 643, 227, 614, 219, 0, 613, 405,
	579, 590, 391, 380, 218, 588, 389, 379, 333, 352,
	353, 279, 306, 444, 372, 445, 305, 307, 401, 400,
	402, 206, 601, 0, 207, 0, 496, 603, 644, 449,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 302,
	303, 312, 364, 416, 443, 439, 448, 0, 574, 595,
	608, 619, 625, 626, 628, 629, 630, 631, 632, 635,
	633, 404, 310, 492, 332, 370, 0, 0, 422, 469,
	239, 599, 493, 199, 0, 0, 0, 0, 253, 254,
	0, 570, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 640,
	503, 509, 504, 505, 506, 507, 508, 0, 510, 0,
	0, 0, 0, 0, 395, 0, 586, 587, 663, 381,
	483, 596, 334, 346, 349, 339, 358, 0, 359, 335,
	336, 341, 343, 344, 345, 350, 351, 355, 361, 248,
	209, 387, 396, 573, 311, 215, 216, 217, 519, 520,
	521, 522, 611, 612, 616, 204, 459, 460, 461, 462,
	291, 606, 308, 465, 464, 330, 331, 376, 446, 535,
	537, 548, 552, 554, 556, 562, 565, 536, 538, 549,
	553, 555, 557, 563, 566, 525, 527, 529, 531, 544,
	543, 540, 568, 569, 546, 551, 530, 542, 547, 560,
	567, 564, 524, 528, 532, 541, 559, 558, 539, 550,
	561, 545, 533, 526, 534, 0, 196, 220, 365, 0,
	451, 287, 641, 610, 481, 605, 205, 222, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 309, 317, 318, 321, 327, 377, 383,
	384, 385, 386, 406, 407, 408, 411, 414, 415, 418,
	420, 421, 424, 428, 432, 433, 434, 436, 438, 440,
	452, 457, 471, 472, 473, 474, 475, 478, 479, 485,
	486, 487, 488, 489, 497, 498, 511, 581, 583, 598,
	617, 623, 477, 300, 301, 441, 442, 313, 314, 637,
	638, 299, 593, 624, 591, 636, 618, 435, 375, 0,
	0, 378, 280, 304, 319, 0, 609, 499, 226, 463,
	289, 250, 0, 0, 210, 245, 229, 258, 273, 276,
	323, 388, 397, 426, 431, 295, 270, 243, 456, 240,
	482, 514, 515, 516, 518, 392, 265, 430, 393, 0,
	373, 571, 572, 315, 86, 523, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 363, 266, 0, 0, 427, 0, 203,
	0, 484, 251, 374, 371, 578, 281, 272, 268, 249,
	316, 382, 425, 513, 419, 0, 367, 0, 0, 494,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 247, 324, 202,
	410, 495, 285, 0, 95, 0, 0, 0, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 348, 357, 356, 337, 338,
	340, 342, 347, 354, 360, 0, 0, 602, 0, 0,
	0, 264, 320, 271, 263, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 399, 256, 0, 450, 0, 0, 0,
	620, 0, 0, 0, 0, 0, 0, 0, 362, 0,
	329, 197, 224, 0, 0, 409, 458, 470, 0, 0,
	0, 252, 0, 468, 423, 597, 232, 283, 455, 429,
	466, 437, 286, 0, 0, 467, 369, 580, 447, 594,
	621, 622, 262, 403, 607, 517, 615, 639, 225, 259,
	417, 502, 600, 491, 394, 576, 577, 328, 490, 294,
	201, 366, 627, 223, 476, 368, 241, 230, 582, 604,
	298, 288, 453, 634, 212, 512, 592, 238, 480, 0,
	0, 642, 246, 501, 214, 589, 500, 390, 325, 326,
	213, 0, 454, 267, 292, 0, 0, 257, 412, 584,
	585, 255, 643, 227, 614, 219, 0, 613, 405, 579,
	590, 391, 380, 218, 588, 389, 379, 333, 352, 353,
	279, 306, 444, 372, 445, 305, 307, 401, 400, 402,
	206, 601, 0, 207, 0, 496, 603, 644, 449, 211,
	233, 234, 236, 0, 278, 282, 290, 293, 302, 303,
	312, 364, 416, 443, 439, 448, 0, 574, 595, 608,
	619, 625, 626, 628, 629, 630, 631, 632, 635, 633,
	404, 310, 492, 332, 370, 0, 0, 422, 469, 239,
	599, 493, 199, 0, 0, 0, 0, 253, 254, 0,
	570, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 640, 503,
	509, 504, 505, 506, 507, 508, 0, 510, 0, 0,
	0, 0, 0, 395, 0, 586, 587, 663, 381, 483,
	596, 334, 346, 349, 339, 358, 0, 359, 335, 336,
	341, 343, 344, 345, 350, 351, 355, 361, 248, 209,
	387, 396, 573, 311, 215, 216, 217, 519, 520, 521,
	522, 611, 612, 616, 204, 459, 460, 461, 462, 291,
	606, 308, 465, 464, 330, 331, 376, 446, 535, 537,
	548, 552, 554, 556, 562, 565, 536, 538, 549, 553,
	555, 557, 563, 566, 525, 527, 529, 531, 544, 543,
	540, 568, 569, 546, 551, 530, 542, 547, 560, 567,
	564, 524, 528, 532, 541, 559, 558, 539, 550, 561,
	545, 533, 526, 534, 0, 196, 220, 365, 94, 451,
	287, 641, 610, 481, 605, 205, 222, 0, 261, 0,
	0, 0, 0, 0, 0, 2392, 0, 0, 2391, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 208, 221, 231, 235, 242, 260, 275, 277,
	284, 297, 309, 317, 318, 321, 327, 377, 383, 384,
	385, 386, 406, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 433, 434, 436, 438, 440, 452,
	457, 471, 472, 473, 474, 475, 478, 479, 485, 486,
	487, 488, 489, 497, 498, 511, 581, 583, 598, 617,
	623, 477, 300, 301, 441, 442, 313, 314, 637, 638,
	299, 593, 624, 591, 636, 618, 435, 375, 0, 0,
	378, 280, 304, 319, 0, 609, 499, 226, 463, 289,
	250, 0, 0, 210, 245, 229, 258, 273, 276, 323,
	388, 397, 426, 431, 295, 270, 243, 456, 240, 482,
	514, 515, 516, 518, 392, 265, 430, 1750, 0, 373,
	571, 572, 315, 0, 523, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 0, 0, 0,
	0, 0, 1752, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 363, 266, 0, 0, 427, 0, 203, 0,
	484, 251, 374, 371, 578, 281, 272, 268, 249, 316,
	382, 425, 513, 419, 0, 367, 0, 0, 494, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 247, 324, 202, 410,
	495, 285, 0, 0, 0, 0, 1754, 713, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 348, 357, 356, 337, 338, 340,
	342, 347, 354, 360, 0, 0, 602, 0, 0, 0,
	264, 320, 271, 263, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 1459, 0, 1460,
	1461, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 399, 256, 0, 450, 0, 0, 0, 620,
	0, 0, 0, 0, 0, 0, 0, 362, 0, 329,
	197, 224, 0, 0, 409, 458, 470, 0, 0, 0,
	252, 0, 468, 423, 597, 232, 283, 455, 429, 466,
	437, 286, 0, 0, 467, 369, 580, 447, 594, 621,
	622, 262, 403, 607, 517, 615, 639, 225, 259, 417,
	502, 600, 491, 394, 576, 577, 328, 490, 294, 201,
	366, 627, 223, 476, 368, 241, 230, 582, 604, 298,
	288, 453, 634, 212, 512, 592, 238, 480, 0, 0,
	642, 246, 501, 214, 589, 500, 390, 325, 326, 213,
	0, 454, 267, 292, 0, 0, 257, 412, 584, 585,
	255, 643, 227, 614, 219, 0, 613, 405, 579, 590,
	391, 380, 218, 588, 389, 379, 333, 352, 353, 279,
	306, 444, 372, 445, 305, 307, 401, 400, 402, 206,
	601, 0, 207, 0, 496, 603, 644, 449, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 302, 303, 312,
	364, 416, 443, 439, 448, 0, 574, 595, 608, 619,
	625, 626, 628, 629, 630, 631, 632, 635, 633, 404,
	310, 492, 332, 370, 0, 0, 422, 469, 239, 599,
	493, 199, 0, 0, 0, 0, 253, 254, 0, 570,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 640, 503, 509,
	504, 505, 506, 507, 508, 0, 510, 0, 0, 0,
	0, 0, 395, 0, 586, 587, 663, 381, 483, 596,
	334, 346, 349, 339, 358, 0, 359, 335, 336, 341,
	343, 344, 345, 350, 351, 355, 361, 248, 209, 387,
	396, 573, 311, 215, 216, 217, 519, 520, 521, 522,
	611, 612, 616, 204, 459, 460, 461, 462, 291, 606,
	308, 465, 464, 330, 331, 376, 446, 535, 537, 548,
	552, 554, 556, 562, 565, 536, 538, 549, 553, 555,
	557, 563, 566, 525, 527, 529, 531, 544, 543, 540,
	568, 569, 546, 551, 530, 542, 547, 560, 567, 564,
	524, 528, 532, 541, 559, 558, 539, 550, 561, 545,
	533, 526, 534, 0, 196, 220, 365, 0, 451, 287,
	641, 610, 481, 605, 205, 222, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 309, 317, 318, 321, 327, 377, 383, 384, 385,
	386, 406, 407, 408, 411, 414, 415, 418, 420, 421,
	424, 428, 432, 433, 434, 436, 438, 440, 452, 457,
	471, 472, 473, 474, 475, 478, 479, 485, 486, 487,
	488, 489, 497, 498, 511, 581, 583, 598, 617, 623,
	477, 300, 301, 441, 442, 313, 314, 637, 638, 299,
	593, 624, 591, 636, 618, 435, 375, 0, 0, 378,
	280, 304, 319, 0, 609, 499, 226, 463, 289, 250,
	0, 0, 210, 245, 229, 258, 273, 276, 323, 388,
	397, 426, 431, 295, 270, 243, 456, 240, 482, 514,
	515, 516, 518, 392, 265, 430, 393, 0, 373, 571,
	572, 315, 86, 523, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 363, 266, 0, 0, 427, 0, 203, 0, 484,
	251, 374, 371, 578, 281, 272, 268, 249, 316, 382,
	425, 513, 419, 0, 367, 0, 0, 494, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 247, 324, 202, 410, 495,
	285, 0, 95, 0, 1727, 0, 713, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 244,
	0, 0, 0, 348, 357, 356, 337, 338, 340, 342,
	347, 354, 360, 0, 0, 602, 0, 0, 0, 264,
	320, 271, 263, 575, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 399, 256, 0, 450, 0, 0, 0, 620, 0,
	0, 0, 0, 0, 0, 0, 362, 0, 329, 197,
	224, 0, 0, 409, 458, 470, 0, 0, 0, 252,
	0, 468, 423, 597, 232, 283, 455, 429, 466, 437,
	286, 0, 0, 467, 369, 580, 447, 594, 621, 622,
	262, 403, 607, 517, 615, 639, 225, 259, 417, 502,
	600, 491, 394, 576, 577, 328, 490, 294, 201, 366,
	627, 223, 476, 368, 241, 230, 582, 604, 298, 288,
	453, 634, 212, 512, 592, 238, 480, 0, 0, 642,
	246, 501, 214, 589, 500, 390, 325, 326, 213, 0,
	454, 267, 292, 0, 0, 257, 412, 584, 585, 255,
	643, 227, 614, 219, 0, 613, 405, 579, 590, 391,
	380, 218, 588, 389, 379, 333, 352, 353, 279, 306,
	444, 372, 445, 305, 307, 401, 400, 402, 206, 601,
	0, 207, 0, 496, 603, 644, 449, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 302, 303, 312, 364,
	416, 443, 439, 448, 0, 574, 595, 608, 619, 625,
	626, 628, 629, 630, 631, 632, 635, 633, 404, 310,
	492, 332, 370, 0, 0, 422, 469, 239, 599, 493,
	199, 0, 0, 0, 0, 253, 254, 0, 570, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 640, 503, 509, 504,
	505, 506, 507, 508, 0, 510, 0, 0, 0, 0,
	0, 395, 0, 586, 587, 663, 381, 483, 596, 334,
	346, 349, 339, 358, 0, 359, 335, 336, 341, 343,
	344, 345, 350, 351, 355, 361, 248, 209, 387, 396,
	573, 311, 215, 216, 217, 519, 520, 521, 522, 611,
	612, 616, 204, 459, 460, 461, 462, 291, 606, 308,
	465, 464, 330, 331, 376, 446, 535, 537, 548, 552,
	554, 556, 562, 565, 536, 538, 549, 553, 555, 557,
	563, 566, 525, 527, 529, 531, 544, 543, 540, 568,
	569, 546, 551, 530, 542, 547, 560, 567, 564, 524,
	528, 532, 541, 559, 558, 539, 550, 561, 545, 533,
	526, 534, 0, 196, 220, 365, 94, 451, 287, 641,
	610, 481, 605, 205, 222, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	208, 221, 231, 235, 242, 260, 275, 277, 284, 297,
	309, 317, 318, 321, 327, 377, 383, 384, 385, 386,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 433, 434, 436, 438, 440, 452, 457, 471,
	472, 473, 474, 475, 478, 479, 485, 486, 487, 488,
	489, 497, 498, 511, 581, 583, 598, 617, 623, 477,
	300, 301, 441, 442, 313, 314, 637, 638, 299, 593,
	624, 591, 636, 618, 435, 375, 0, 0, 378, 280,
	304, 319, 0, 609, 499, 226, 463, 289, 250, 0,
	0, 210, 245, 229, 258, 273, 276, 323, 388, 397,
	426, 431, 295, 270, 243, 456, 240, 482, 514, 515,
	516, 518, 392, 265, 430, 393, 0, 373, 571, 572,
	315, 0, 523, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	363, 266, 0, 0, 427, 0, 203, 0, 484, 251,
	374, 371, 578, 281, 272, 268, 249, 316, 382, 425,
	513, 419, 0, 367, 0, 0, 494, 398, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 247, 324, 202, 410, 495, 285,
	0, 95, 0, 0, 0, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 244, 0,
	0, 0, 348, 357, 356, 337, 338, 340, 342, 347,
	354, 360, 0, 0, 602, 0, 0, 0, 264, 320,
	271, 263, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	399, 256, 0, 450, 0, 0, 0, 620, 0, 0,
	0, 0, 0, 0, 0, 362, 0, 329, 197, 224,
	0, 0, 409, 458, 470, 0, 0, 0, 252, 0,
	468, 423, 597, 232, 283, 455, 429, 466, 437, 286,
	0, 0, 467, 369, 580, 447, 594, 621, 622, 262,
	403, 607, 517, 615, 639, 225, 259, 417, 502, 600,
	491, 394, 576, 577, 328, 490, 294, 201, 366, 627,
	223, 476, 368, 241, 230, 582, 604, 298, 288, 453,
	634, 212, 512, 592, 238, 480, 0, 0, 642, 246,
	501, 214, 589, 500, 390, 325, 326, 213, 0, 454,
	267, 292, 0, 0, 257, 412, 584, 585, 255, 643,
	227, 614, 219, 0, 613, 405, 579, 590, 391, 380,
	218, 588, 389, 379, 333, 352, 353, 279, 306, 444,
	372, 445, 305, 307, 401, 400, 402, 206, 601, 0,
	207, 0, 496, 603, 644, 449, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 302, 303, 312, 364, 416,
	443, 439, 448, 0, 574, 595, 608, 619, 625, 626,
	628, 629, 630, 631, 632, 635, 633, 404, 310, 492,
	332, 370, 0, 0, 422, 469, 239, 599, 493, 199,
	0, 0, 0, 0, 253, 254, 0, 570, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 640, 503, 509, 504, 505,
	506, 507, 508, 0, 510, 0, 0, 0, 0, 0,
	395, 0, 586, 587, 663, 381, 483, 596, 334, 346,
	349, 339, 358, 0, 359, 335, 336, 341, 343, 344,
	345, 350, 351, 355, 361, 248, 209, 387, 396, 573,
	311, 215, 216, 217, 519, 520, 521, 522, 611, 612,
	616, 204, 459, 460, 461, 462, 291, 606, 308, 465,
	464, 330, 331, 376, 446, 535, 537, 548, 552, 554,
	556, 562, 565, 536, 538, 549, 553, 555, 557, 563,
	566, 525, 527, 529, 531, 544, 543, 540, 568, 569,
	546, 551, 530, 542, 547, 560, 567, 564, 524, 528,
	532, 541, 559, 558, 539, 550, 561, 545, 533, 526,
	534, 0, 196, 220, 365, 0, 451, 287, 641, 610,
	481, 605, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 2392, 0, 0, 2391, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 309,
	317, 318, 321, 327, 377, 383, 384, 385, 386, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 485, 486, 487, 488, 489,
	497, 498, 511, 581, 583, 598, 617, 623, 477, 300,
	301, 441, 442, 313, 314, 637, 638, 299, 593, 624,
	591, 636, 618, 435, 375, 0, 0, 378, 280, 304,
	319, 0, 609, 499, 226, 463, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 323, 388, 397, 426,
	431, 295, 270, 243, 456, 240, 482, 514, 515, 516,
	518, 392, 265, 430, 393, 0, 373, 571, 572, 315,
	0, 523, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 2339,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 363,
	266, 0, 0, 427, 0, 203, 0, 484, 251, 374,
	371, 578, 281, 272, 268, 249, 316, 382, 425, 513,
	419, 0, 367, 0, 0, 494, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 247, 324, 202, 410, 495, 285, 0,
	0, 0, 0, 1933, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 348, 357, 356, 337, 338, 340, 342, 347, 354,
	360, 0, 0, 602, 0, 0, 0, 264, 320, 271,
	263, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 399,
	256, 0, 450, 0, 0, 0, 620, 0, 0, 0,
	0, 0, 0, 0, 362, 0, 329, 197, 224, 0,
	0, 409, 458, 470, 0, 0, 0, 252, 0, 468,
	423, 597, 232, 283, 455, 429, 466, 437, 286, 0,
	2337, 467, 369, 580, 447, 594, 621, 622, 262, 403,
	607, 517, 615, 639, 225, 259, 417, 502, 600, 491,
	394, 576, 577, 328, 490, 294, 201, 366, 627, 223,
	476, 368, 241, 230, 582, 604, 298, 288, 453, 634,
	212, 512, 592, 238, 480, 0, 0, 642, 246, 501,
	214, 589, 500, 390, 325, 326, 213, 0, 454, 267,
	292, 0, 0, 257, 412, 584, 585, 255, 643, 227,
	614, 219, 0, 613, 405, 579, 590, 391, 380, 218,
	588, 389, 379, 333, 352, 353, 279, 306, 444, 372,
	445, 305, 307, 401, 400, 402, 206, 601, 0, 207,
	0, 496, 603, 644, 449, 211, 233, 234, 236, 0,
	278, 282, 290, 293, 302, 303, 312, 364, 416, 443,
	439, 448, 0, 574, 595, 608, 619, 625, 626, 628,
	629, 630, 631, 632, 635, 633, 404, 310, 492, 332,
	370, 0, 0, 422, 469, 239, 599, 493, 199, 0,
	0, 0, 0, 253, 254, 0, 570, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 640, 503, 509, 504, 505, 506,
	507, 508, 0, 510, 0, 0, 0, 0, 0, 395,
	0, 586, 587, 663, 381, 483, 596, 334, 346, 349,
	339, 358, 0, 359, 335, 336, 341, 343, 344, 345,
	350, 351, 355, 361, 248, 209, 387, 396, 573, 311,
	215, 216, 217, 519, 520, 521, 522, 611, 612, 616,
	204, 459, 460, 461, 462, 291, 606, 308, 465, 464,
	330, 331, 376, 446, 535, 537, 548, 552, 554, 556,
	562, 565, 536, 538, 549, 553, 555, 557, 563, 566,
	525, 527, 529, 531, 544, 543, 540, 568, 569, 546,
	551, 530, 542, 547, 560, 567, 564, 524, 528, 532,
	541, 559, 558, 539, 550, 561, 545, 533, 526, 534,
	0, 196, 220, 365, 0, 451, 287, 641, 610, 481,
	605, 205, 222, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 200, 208, 221,
	231, 235, 242, 260, 275, 277, 284, 297, 309, 317,
	318, 321, 327, 377, 383, 384, 385, 386, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	433, 434, 436, 438, 440, 452, 457, 471, 472, 473,
	474, 475, 478, 479, 485, 486, 487, 488, 489, 497,
	498, 511, 581, 583, 598, 617, 623, 477, 300, 301,
	441, 442, 313, 314, 637, 638, 299, 593, 624, 591,
	636, 618, 435, 375, 0, 0, 378, 280, 304, 319,
	0, 609, 499, 226, 463, 289, 250, 0, 0, 210,
	245, 229, 258, 273, 276, 323, 388, 397, 426, 431,
	295, 270, 243, 456, 240, 482, 514, 515, 516, 518,
	392, 265, 430, 393, 0, 373, 571, 572, 315, 0,
	523, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 363, 266,
	0, 0, 427, 0, 203, 0, 484, 251, 374, 371,
	578, 281, 272, 268, 249, 316, 382, 425, 513, 419,
	0, 367, 0, 0, 494, 398, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 247, 324, 202, 410, 495, 285, 0, 0,
	0, 0, 0, 713, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	348, 357, 356, 337, 338, 340, 342, 347, 354, 360,
	0, 0, 602, 0, 0, 0, 264, 320, 271, 263,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 1079, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 399, 256,
	0, 450, 0, 0, 0, 620, 0, 0, 0, 0,
	0, 0, 0, 362, 1085, 329, 197, 224, 1083, 0,
	409, 458, 470, 0, 0, 0, 252, 0, 468, 423,
	597, 232, 283, 455, 429, 466, 437, 286, 0, 0,
	467, 369, 580, 447, 594, 621, 622, 262, 403, 607,
	517, 615, 639, 225, 259, 417, 502, 600, 491, 394,
	576, 577, 328, 490, 294, 201, 366, 627, 223, 476,
	368, 241, 230, 582, 604, 298, 288, 453, 634, 212,
	512, 592, 238, 480, 0, 0, 642, 246, 501, 214,
	589, 500, 390, 325, 326, 213, 0, 454, 267, 292,
	0, 0, 257, 412, 584, 585, 255, 643, 227, 614,
	219, 0, 613, 405, 579, 590, 391, 380, 218, 588,
	389, 379, 333, 352, 353, 279, 306, 444, 372, 445,
	305, 307, 401, 400, 402, 206, 601, 0, 207, 0,
	496, 603, 644, 449, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 302, 303, 312, 364, 416, 443, 439,
	448, 0, 574, 595, 608, 619, 625, 626, 628, 629,
	630, 631, 632, 635, 633, 404, 310, 492, 332, 370,
	0, 0, 422, 469, 239, 599, 493, 199, 0, 0,
	0, 0, 253, 254, 0, 570, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 640, 503, 509, 504, 505, 506, 507,
	508, 0, 510, 0, 0, 0, 0, 0, 395, 0,
	586, 587, 663, 381, 483, 596, 334, 346, 349, 339,
	358, 0, 359, 335, 336, 341, 343, 344, 345, 350,
	351, 355, 361, 248, 209, 387, 396, 573, 311, 215,
	216, 217, 519, 520, 521, 522, 611, 612, 616, 204,
	459, 460, 461, 462, 291, 606, 308, 465, 464, 330,
	331, 376, 446, 535, 537, 548, 552, 554, 556, 562,
	565, 536, 538, 549, 553, 555, 557, 563, 566, 525,
	527, 529, 531, 544, 543, 540, 568, 569, 546, 551,
	530, 542, 547, 560, 567, 564, 524, 528, 532, 541,
	559, 558, 539, 550, 561, 545, 533, 526, 534, 0,
	196, 220, 365, 0, 451, 287, 641, 610, 481, 605,
	205, 222, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 309, 317, 318,
	321, 327, 377, 383, 384, 385, 386, 406, 407, 408,
	411, 414, 415, 418, 420, 421, 424, 428, 432, 433,
	434, 436, 438, 440, 452, 457, 471, 472, 473, 474,
	475, 478, 479, 485, 486, 487, 488, 489, 497, 498,
	511, 581, 583, 598, 617, 623, 477, 300, 301, 441,
	442, 313, 314, 637, 638, 299, 593, 624, 591, 636,
	618, 435, 375, 0, 0, 378, 280, 304, 319, 0,
	609, 499, 226, 463, 289, 250, 0, 0, 210, 245,
	229, 258, 273, 276, 323, 388, 397, 426, 431, 295,
	270, 243, 456, 240, 482, 514, 515, 516, 518, 392,
	265, 430, 393, 0, 373, 571, 572, 315, 0, 523,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 2339, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 484, 251, 374, 371, 578,
	281, 272, 268, 249, 316, 382, 425, 513, 419, 0,
	367, 0, 0, 494, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 495, 285, 0, 0, 0,
	0, 1933, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 348,
	357, 356, 337, 338, 340, 342, 347, 354, 360, 0,
	0, 602, 0, 0, 0, 264, 320, 271, 263, 575,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 399, 256, 0,
	450, 0, 0, 0, 620, 0, 0, 0, 0, 0,
	0, 0, 362, 0, 329, 197, 224, 0, 0, 409,
	458, 470, 0, 0, 0, 252, 0, 468, 423, 597,
	232, 283, 455, 429, 466, 437, 286, 0, 0, 467,
	369, 580, 447, 594, 621, 622, 262, 403, 607, 517,
	615, 639, 225, 259, 417, 502, 600, 491, 394, 576,
	577, 328, 490, 294, 201, 366, 627, 223, 476, 368,
	241, 230, 582, 604, 298, 288, 453, 634, 212, 512,
	592, 238, 480, 0, 0, 642, 246, 501, 214, 589,
	500, 390, 325, 326, 213, 0, 454, 267, 292, 0,
	0, 257, 412, 584, 585, 255, 643, 227, 614, 219,
	0, 613, 405, 579, 590, 391, 380, 218, 588, 389,
	379, 333, 352, 353, 279, 306, 444, 372, 445, 305,
	307, 401, 400, 402, 206, 601, 0, 207, 0, 496,
	603, 644, 449, 211, 233, 234, 236, 0, 278, 282,
	290, 293, 302, 303, 312, 364, 416, 443, 439, 448,
	0, 574, 595, 608, 619, 625, 626, 628, 629, 630,
	631, 632, 635, 633, 404, 310, 492, 332, 370, 0,
	0, 422, 469, 239, 599, 493, 199, 0, 0, 0,
	0, 253, 254, 0, 570, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 640, 503, 509, 504, 505, 506, 507, 508,
	0, 510, 0, 0, 0, 0, 0, 395, 0, 586,
	587, 663, 381, 483, 596, 334, 346, 349, 339, 358,
	0, 359, 335, 336, 341, 343, 344, 345, 350, 351,
	355, 361, 248, 209, 387, 396, 573, 311, 215, 216,
	217, 519, 520, 521, 522, 611, 612, 616, 204, 459,
	460, 461, 462, 291, 606, 308, 465, 464, 330, 331,
	376, 446, 535, 537, 548, 552, 554, 556, 562, 565,
	536, 538, 549, 553, 555, 557, 563, 566, 525, 527,
	529, 531, 544, 543, 540, 568, 569, 546, 551, 530,
	542, 547, 560, 567, 564, 524, 528, 532, 541, 559,
	558, 539, 550, 561, 545, 533, 526, 534, 0, 196,
	220, 365, 0, 451, 287, 641, 610, 481, 605, 205,
	222, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 200, 208, 221, 231, 235,
	242, 260, 275, 277, 284, 297, 309, 317, 318, 321,
	327, 377, 383, 384, 385, 386, 406, 407, 408, 411,
	414, 415, 418, 420, 421, 424, 428, 432, 433, 434,
	436, 438, 440, 452, 457, 471, 472, 473, 474, 475,
	478, 479, 485, 486, 487, 488, 489, 497, 498, 511,
	581, 583, 598, 617, 623, 477, 300, 301, 441, 442,
	313, 314, 637, 638, 299, 593, 624, 591, 636, 618,
	435, 375, 0, 0, 378, 280, 304, 319, 0, 609,
	499, 226, 463, 289, 250, 0, 0, 210, 245, 229,
	258, 273, 276, 323, 388, 397, 426, 431, 295, 270,
	243, 456, 240, 482, 514, 515, 516, 518, 392, 265,
	430, 393, 0, 373, 571, 572, 315, 0, 523, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 363, 266, 0, 0,
	427, 0, 203, 0, 484, 251, 374, 371, 578, 281,
	272, 268, 249, 316, 382, 425, 513, 419, 0, 367,
	0, 0, 494, 398, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	247, 324, 202, 410, 495, 285, 0, 0, 0, 1727,
	0, 713, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 348, 357,
	356, 337, 338, 340, 342, 347, 354, 360, 0, 0,
	602, 0, 0, 0, 264, 320, 271, 263, 575, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 399, 256, 0, 450,
	0, 0, 0, 620, 0, 0, 0, 3684, 0, 0,
	0, 362, 0, 329, 197, 224, 0, 0, 409, 458,
	470, 0, 0, 0, 252, 0, 468, 423, 597, 232,
	283, 455, 429, 466, 437, 286, 0, 0, 467, 369,
	580, 447, 594, 621, 622, 262, 403, 607, 517, 615,
	639, 225, 259, 417, 502, 600, 491, 394, 576, 577,
	328, 490, 294, 201, 366, 627, 223, 476, 368, 241,
	230, 582, 604, 298, 288, 453, 634, 212, 512, 592,
	238, 480, 0, 0, 642, 246, 501, 214, 589, 500,
	390, 325, 326, 213, 0, 454, 267, 292, 0, 0,
	257, 412, 584, 585, 255, 643, 227, 614, 219, 0,
	613, 405, 579, 590, 391, 380, 218, 588, 389, 379,
	333, 352, 353, 279, 306, 444, 372, 445, 305, 307,
	401, 400, 402, 206, 601, 0, 207, 0, 496, 603,
	644, 449, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 302, 303, 312, 364, 416, 443, 439, 448, 0,
	574, 595, 608, 619, 625, 626, 628, 629, 630, 631,
	632, 635, 633, 404, 310, 492, 332, 370, 0, 0,
	422, 469, 239, 599, 493, 199, 0, 0, 0, 0,
	253, 254, 0, 570, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 640, 503, 509, 504, 505, 506, 507, 508, 0,
	510, 0, 0, 0, 0, 0, 395, 0, 586, 587,
	663, 381, 483, 596, 334, 346, 349, 339, 358, 0,
	359, 335, 336, 341, 343, 344, 345, 350, 351, 355,
	361, 248, 209, 387, 396, 573, 311, 215, 216, 217,
	519, 520, 521, 522, 611, 612, 616, 204, 459, 460,
	461, 462, 291, 606, 308, 465, 464, 330, 331, 376,
	446, 535, 537, 548, 552, 554, 556, 562, 565, 536,
	538, 549, 553, 555, 557, 563, 566, 525, 527, 529,
	531, 544, 543, 540, 568, 569, 546, 551, 530, 542,
	547, 560, 567, 564, 524, 528, 532, 541, 559, 558,
	539, 550, 561, 545, 533, 526, 534, 0, 196, 220,
	365, 0, 451, 287, 641, 610, 481, 605, 205, 222,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 208, 221, 231, 235, 242,
	260, 275, 277, 284, 297, 309, 317, 318, 321, 327,
	377, 383, 384, 385, 386, 406, 407, 408, 411, 414,
	415, 418, 420, 421, 424, 428, 432, 433, 434, 436,
	438, 440, 452, 457, 471, 472, 473, 474, 475, 478,
	479, 485, 486, 487, 488, 489, 497, 498, 511, 581,
	583, 598, 617, 623, 477, 300, 301, 441, 442, 313,
	314, 637, 638, 299, 593, 624, 591, 636, 618, 435,
	375, 0, 0, 378, 280, 304, 319, 0, 609, 499,
	226, 463, 289, 250, 0, 0, 210, 245, 229, 258,
	273, 276, 323, 388, 397, 426, 431, 295, 270, 243,
	456, 240, 482, 514, 515, 516, 518, 392, 265, 430,
	393, 0, 373, 571, 572, 315, 0, 523, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 363, 266, 0, 0, 427,
	0, 203, 0, 484, 251, 374, 371, 578, 281, 272,
	268, 249, 316, 382, 425, 513, 419, 0, 367, 0,
	0, 494, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 247,
	324, 202, 410, 495, 285, 0, 0, 0, 0, 2100,
	713, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 244, 0, 0, 0, 348, 357, 356,
	337, 338, 340, 342, 347, 354, 360, 0, 0, 602,
	0, 0, 0, 264, 320, 271, 263, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2101,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 399, 256, 0, 450, 0,
	0, 0, 620, 0, 0, 0, 0, 0, 0, 0,
	362, 0, 329, 197, 224, 0, 0, 409, 458, 470,
	0, 0, 0, 252, 0, 468, 423, 597, 232, 283,
	455, 429, 466, 437, 286, 0, 0, 467, 369, 580,
	447, 594, 621, 622, 262, 403, 607, 517, 615, 639,
	225, 259, 417, 502, 600, 491, 394, 576, 577, 328,
	490, 294, 201, 366, 627, 223, 476, 368, 241, 230,
	582, 604, 298, 288, 453, 634, 212, 512, 592, 238,
	480, 0, 0, 642, 246, 501, 214, 589, 500, 390,
	325, 326, 213, 0, 454, 267, 292, 0, 0, 257,
	412, 584, 585, 255, 643, 227, 614, 219, 0, 613,
	405, 579, 590, 391, 380, 218, 588, 389, 379, 333,
	352, 353, 279, 306, 444, 372, 445, 305, 307, 401,
	400, 402, 206, 601, 0, 207, 0, 496, 603, 644,
	449, 211, 233, 234, 236, 0, 278, 282, 290, 293,
	302, 303, 312, 364, 416, 443, 439, 448, 0, 574,
	595, 608, 619, 625, 626, 628, 629, 630, 631, 632,
	635, 633, 404, 310, 492, 332, 370, 0, 0, 422,
	469, 239, 599, 493, 199, 0, 0, 0, 0, 253,
	254, 0, 570, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	640, 503, 509, 504, 505, 506, 507, 508, 0, 510,
	0, 0, 0, 0, 0, 395, 0, 586, 587, 663,
	381, 483, 596, 334, 346, 349, 339, 358, 0, 359,
	335, 336, 341, 343, 344, 345, 350, 351, 355, 361,
	248, 209, 387, 396, 573, 311, 215, 216, 217, 519,
	520, 521, 522, 611, 612, 616, 204, 459, 460, 461,
	462, 291, 606, 308, 465, 464, 330, 331, 376, 446,
	535, 537, 548, 552, 554, 556, 562, 565, 536, 538,
	549, 553, 555, 557, 563, 566, 525, 527, 529, 531,
	544, 543, 540, 568, 569, 546, 551, 530, 542, 547,
	560, 567, 564, 524, 528, 532, 541, 559, 558, 539,
	550, 561, 545, 533, 526, 534, 0, 196, 220, 365,
	0, 451, 287, 641, 610, 481, 605, 205, 222, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 309, 317, 318, 321, 327, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	485, 486, 487, 488, 489, 497, 498, 511, 581, 583,
	598, 617, 623, 477, 300, 301, 441, 442, 313, 314,
	637, 638, 299, 593, 624, 591, 636, 618, 435, 375,
	0, 0, 378, 280, 304, 319, 0, 609, 499, 226,
	463, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 323, 388, 397, 426, 431, 295, 270, 243, 456,
	240, 482, 514, 515, 516, 518, 392, 265, 430, 393,
	0, 373, 571, 572, 315, 0, 523, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 363, 266, 0, 0, 427, 0,
	203, 0, 484, 251, 374, 371, 578, 281, 272, 268,
	249, 316, 382, 425, 513, 419, 0, 367, 0, 0,
	494, 398, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 247, 324,
	202, 410, 495, 285, 0, 0, 0, 0, 2839, 713,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 348, 357, 356, 337,
	338, 340, 342, 347, 354, 360, 0, 0, 602, 0,
	0, 0, 264, 320, 271, 263, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2840, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 399, 256, 0, 450, 0, 0,
	0, 620, 0, 0, 0, 0, 0, 0, 0, 362,
	0, 329, 197, 224, 0, 0, 409, 458, 470, 0,
	0, 0, 252, 0, 468, 423, 597, 232, 283, 455,
	429, 466, 437, 286, 0, 0, 467, 369, 580, 447,
	594, 621, 622, 262, 403, 607, 517, 615, 639, 225,
	259, 417, 502, 600, 491, 394, 576, 577, 328, 490,
	294, 201, 366, 627, 223, 476, 368, 241, 230, 582,
	604, 298, 288, 453, 634, 212, 512, 592, 238, 480,
	0, 0, 642, 246, 501, 214, 589, 500, 390, 325,
	326, 213, 0, 454, 267, 292, 0, 0, 257, 412,
	584, 585, 255, 643, 227, 614, 219, 0, 613, 405,
	579, 590, 391, 380, 218, 588, 389, 379, 333, 352,
	353, 279, 306, 444, 372, 445, 305, 307, 401, 400,
	402, 206, 601, 0, 207, 0, 496, 603, 644, 449,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 302,
	303, 312, 364, 416, 443, 439, 448, 0, 574, 595,
	608, 619, 625, 626, 628, 629, 630, 631, 632, 635,
	633, 404, 310, 492, 332, 370, 0, 0, 422, 469,
	239, 599, 493, 199, 0, 0, 0, 0, 253, 254,
	0, 570, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 640,
	503, 509, 504, 505, 506, 507, 508, 0, 510, 0,
	0, 0, 0, 0, 395, 0, 586, 587, 663, 381,
	483, 596, 334, 346, 349, 339, 358, 0, 359, 335,
	336, 341, 343, 344, 345, 350, 351, 355, 361, 248,
	209, 387, 396, 573, 311, 215, 216, 217, 519, 520,
	521, 522, 611, 612, 616, 204, 459, 460, 461, 462,
	291, 606, 308, 465, 464, 330, 331, 376, 446, 535,
	537, 548, 552, 554, 556, 562, 565, 536, 538, 549,
	553, 555, 557, 563, 566, 525, 527, 529, 531, 544,
	543, 540, 568, 569, 546, 551, 530, 542, 547, 560,
	567, 564, 524, 528, 532, 541, 559, 558, 539, 550,
	561, 545, 533, 526, 534, 0, 196, 220, 365, 0,
	451, 287, 641, 610, 481, 605, 205, 222, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 309, 317, 318, 321, 327, 377, 383,
	384, 385, 386, 406, 407, 408, 411, 414, 415, 418,
	420, 421, 424, 428, 432, 433, 434, 436, 438, 440,
	452, 457, 471, 472, 473, 474, 475, 478, 479, 485,
	486, 487, 488, 489, 497, 498, 511, 581, 583, 598,
	617, 623, 477, 300, 301, 441, 442, 313, 314, 637,
	638, 299, 593, 624, 591, 636, 618, 435, 375, 0,
	0, 378, 280, 304, 319, 0, 609, 499, 226, 463,
	289, 250, 0, 0, 210, 245, 229, 258, 273, 276,
	323, 388, 397, 426, 431, 295, 270, 243, 456, 240,
	482, 514, 515, 516, 518, 392, 265, 430, 393, 0,
	373, 571, 572, 315, 0, 523, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 363, 266, 0, 0, 427, 0, 203,
	0, 484, 251, 374, 371, 578, 281, 272, 268, 249,
	316, 382, 425, 513, 419, 0, 367, 0, 0, 494,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 247, 324, 202,
	410, 495, 285, 0, 0, 0, 0, 0, 713, 0,
	0, 0, 0, 2824, 0, 0, 0, 0, 237, 0,
	0, 244, 2825, 0, 0, 348, 357, 356, 337, 338,
	340, 342, 347, 354, 360, 0, 0, 602, 0, 0,
	0, 264, 320, 271, 263, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 399, 256, 0, 450, 0, 0, 0,
	620, 0, 0, 0, 0, 0, 0, 0, 362, 0,
	329, 197, 224, 0, 0, 409, 458, 470, 0, 0,
	0, 252, 0, 468, 423, 597, 232, 283, 455, 429,
	466, 437, 286, 0, 0, 467, 369, 580, 447, 594,
	621, 622, 262, 403, 607, 517, 615, 639, 225, 259,
	417, 502, 600, 491, 394, 576, 577, 328, 490, 294,
	201, 366, 627, 223, 476, 368, 241, 230, 582, 604,
	298, 288, 453, 634, 212, 512, 592, 238, 480, 0,
	0, 642, 246, 501, 214, 589, 500, 390, 325, 326,
	213, 0, 454, 267, 292, 0, 0, 257, 412, 584,
	585, 255, 643, 227, 614, 219, 0, 613, 405, 579,
	590, 391, 380, 218, 588, 389, 379, 333, 352, 353,
	279, 306, 444, 372, 445, 305, 307, 401, 400, 402,
	206, 601, 0, 207, 0, 496, 603, 644, 449, 211,
	233, 234, 236, 0, 278, 282, 290, 293, 302, 303,
	312, 364, 416, 443, 439, 448, 0, 574, 595, 608,
	619, 625, 626, 628, 629, 630, 631, 632, 635, 633,
	404, 310, 492, 332, 370, 0, 0, 422, 469, 239,
	599, 493, 199, 0, 0, 0, 0, 253, 254, 0,
	570, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 640, 503,
	509, 504, 505, 506, 507, 508, 0, 510, 0, 0,
	0, 0, 0, 395, 0, 586, 587, 663, 381, 483,
	596, 334, 346, 349, 339, 358, 0, 359, 335, 336,
	341, 343, 344, 345, 350, 351, 355, 361, 248, 209,
	387, 396, 573, 311, 215, 216, 217, 519, 520, 521,
	522, 611, 612, 616, 204, 459, 460, 461, 462, 291,
	606, 308, 465, 464, 330, 331, 376, 446, 535, 537,
	548, 552, 554, 556, 562, 565, 536, 538, 549, 553,
	555, 557, 563, 566, 525, 527, 529, 531, 544, 543,
	540, 568, 569, 546, 551, 530, 542, 547, 560, 567,
	564, 524, 528, 532, 541, 559, 558, 539, 550, 561,
	545, 533, 526, 534, 0, 196, 220, 365, 0, 451,
	287, 641, 610, 481, 605, 205, 222, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 208, 221, 231, 235, 242, 260, 275, 277,
	284, 297, 309, 317, 318, 321, 327, 377, 383, 384,
	385, 386, 406, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 433, 434, 436, 438, 440, 452,
	457, 471, 472, 473, 474, 475, 478, 479, 485, 486,
	487, 488, 489, 497, 498, 511, 581, 583, 598, 617,
	623, 477, 300, 301, 441, 442, 313, 314, 637, 638,
	299, 593, 624, 591, 636, 618, 435, 375, 0, 0,
	378, 280, 304, 319, 0, 609, 499, 226, 463, 289,
	250, 0, 0, 210, 245, 229, 258, 273, 276, 323,
	388, 397, 426, 431, 295, 270, 243, 456, 240, 482,
	514, 515, 516, 518, 392, 265, 430, 393, 0, 373,
	571, 572, 315, 0, 523, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 1773, 0,
	0, 0, 363, 266, 0, 0, 427, 0, 203, 0,
	484, 251, 374, 371, 578, 281, 272, 268, 249, 316,
	382, 425, 513, 419, 0, 367, 0, 0, 494, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 247, 324, 202, 410,
	495, 285, 0, 0, 0, 0, 1772, 713, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 348, 357, 356, 337, 338, 340,
	342, 347, 354, 360, 0, 0, 602, 0, 0, 0,
	264, 320, 271, 263, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 399, 256, 0, 450, 0, 0, 0, 620,
	0, 0, 0, 0, 0, 0, 0, 362, 0, 329,
	197, 224, 0, 0, 409, 458, 470, 0, 0, 0,
	252, 0, 468, 423, 597, 232, 283, 455, 429, 466,
	437, 286, 0, 0, 467, 369, 580, 447, 594, 621,
	622, 262, 403, 607, 517, 615, 639, 225, 259, 417,
	502, 600, 491, 394, 576, 577, 328, 490, 294, 201,
	366, 627, 223, 476, 368, 241, 230, 582, 604, 298,
	288, 453, 634, 212, 512, 592, 238, 480, 0, 0,
	642, 246, 501, 214, 589, 500, 390, 325, 326, 213,
	0, 454, 267, 292, 0, 0, 257, 412, 584, 585,
	255, 643, 227, 614, 219, 0, 613, 405, 579, 590,
	391, 380, 218, 588, 389, 379, 333, 352, 353, 279,
	306, 444, 372, 445, 305, 307, 401, 400, 402, 206,
	601, 0, 207, 0, 496, 603, 644, 449, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 302, 303, 312,
	364, 416, 443, 439, 448, 0, 574, 595, 608, 619,
	625, 626, 628, 629, 630, 631, 632, 635, 633, 404,
	310, 492, 332, 370, 0, 0, 422, 469, 239, 599,
	493, 199, 0, 0, 0, 0, 253, 254, 0, 570,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 640, 503, 509,
	504, 505, 506, 507, 508, 0, 510, 0, 0, 0,
	0, 0, 395, 0, 586, 587, 663, 381, 483, 596,
	334, 346, 349, 339, 358, 0, 359, 335, 336, 341,
	343, 344, 345, 350, 351, 355, 361, 248, 209, 387,
	396, 573, 311, 215, 216, 217, 519, 520, 521, 522,
	611, 612, 616, 204, 459, 460, 461, 462, 291, 606,
	308, 465, 464, 330, 331, 376, 446, 535, 537, 548,
	552, 554, 556, 562, 565, 536, 538, 549, 553, 555,
	557, 563, 566, 525, 527, 529, 531, 544, 543, 540,
	568, 569, 546, 551, 530, 542, 547, 560, 567, 564,
	524, 528, 532, 541, 559, 558, 539, 550, 561, 545,
	533, 526, 534, 0, 196, 220, 365, 0, 451, 287,
	641, 610, 481, 605, 205, 222, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 309, 317, 318, 321, 327, 377, 383, 384, 385,
	386, 406, 407, 408, 411, 414, 415, 418, 420, 421,
	424, 428, 432, 433, 434, 436, 438, 440, 452, 457,
	471, 472, 473, 474, 475, 478, 479, 485, 486, 487,
	488, 489, 497, 498, 511, 581, 583, 598, 617, 623,
	477, 300, 301, 441, 442, 313, 314, 637, 638, 299,
	593, 624, 591, 636, 618, 435, 375, 0, 0, 378,
	280, 304, 319, 0, 609, 499, 226, 463, 289, 250,
	0, 0, 210, 245, 229, 258, 273, 276, 323, 388,
	397, 426, 431, 295, 270, 243, 456, 240, 482, 514,
	515, 516, 518, 392, 265, 430, 393, 0, 373, 571,
	572, 315, 0, 523, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 363, 266, 0, 0, 427, 0, 203, 0, 484,
	251, 374, 371, 578, 281, 272, 268, 249, 316, 382,
	425, 513, 419, 0, 367, 0, 0, 494, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 247, 324, 202, 410, 495,
	285, 0, 0, 0, 0, 0, 715, 716, 717, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 244,
	0, 0, 0, 348, 357, 356, 337, 338, 340, 342,
	347, 354, 360, 0, 0, 602, 0, 0, 0, 264,
	320, 271, 263, 575, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 399, 256, 0, 450, 0, 0, 0, 620, 0,
	0, 0, 0, 0, 0, 0, 362, 0, 329, 197,
	224, 0, 0, 409, 458, 470, 0, 0, 0, 252,
	0, 468, 423, 597, 232, 283, 455, 429, 466, 437,
	286, 0, 0, 467, 369, 580, 447, 594, 621, 622,
	262, 403, 607, 517, 615, 639, 225, 259, 417, 502,
	600, 491, 394, 576, 577, 328, 490, 294, 201, 366,
	627, 223, 476, 368, 241, 230, 582, 604, 298, 288,
	453, 634, 212, 512, 592, 238, 480, 0, 0, 642,
	246, 501, 214, 589, 500, 390, 325, 326, 213, 0,
	454, 267, 292, 0, 0, 257, 412, 584, 585, 255,
	643, 227, 614, 219, 0, 613, 405, 579, 590, 391,
	380, 218, 588, 389, 379, 333, 352, 353, 279, 306,
	444, 372, 445, 305, 307, 401, 400, 402, 206, 601,
	0, 207, 0, 496, 603, 644, 449, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 302, 303, 312, 364,
	416, 443, 439, 448, 0, 574, 595, 608, 619, 625,
	626, 628, 629, 630, 631, 632, 635, 633, 404, 310,
	492, 332, 370, 0, 0, 422, 469, 239, 599, 493,
	199, 0, 0, 0, 0, 253, 254, 0, 570, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 640, 503, 509, 504,
	505, 506, 507, 508, 0, 510, 0, 0, 0, 0,
	0, 395, 0, 586, 587, 663, 381, 483, 596, 334,
	346, 349, 339, 358, 0, 359, 335, 336, 341, 343,
	344, 345, 350, 351, 355, 361, 248, 209, 387, 396,
	573, 311, 215, 216, 217, 519, 520, 521, 522, 611,
	612, 616, 204, 459, 460, 461, 462, 291, 606, 308,
	465, 464, 330, 331, 376, 446, 535, 537, 548, 552,
	554, 556, 562, 565, 536, 538, 549, 553, 555, 557,
	563, 566, 525, 527, 529, 531, 544, 543, 540, 568,
	569, 546, 551, 530, 542, 547, 560, 567, 564, 524,
	528, 532, 541, 559, 558, 539, 550, 561, 545, 533,
	526, 534, 0, 196, 220, 365, 0, 451, 287, 641,
	610, 481, 605, 205, 222, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	208, 221, 231, 235, 242, 260, 275, 277, 284, 297,
	309, 317, 318, 321, 327, 377, 383, 384, 385, 386,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 433, 434, 436, 438, 440, 452, 457, 471,
	472, 473, 474, 475, 478, 479, 485, 486, 487, 488,
	489, 497, 498, 511, 581, 583, 598, 617, 623, 477,
	300, 301, 441, 442, 313, 314, 637, 638, 299, 593,
	624, 591, 636, 618, 435, 375, 0, 0, 378, 280,
	304, 319, 0, 609, 499, 226, 463, 289, 250, 0,
	0, 210, 245, 229, 258, 273, 276, 323, 388, 397,
	426, 431, 295, 270, 243, 456, 240, 482, 514, 515,
	516, 518, 392, 265, 430, 393, 0, 373, 571, 572,
	315, 0, 523, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	363, 266, 0, 0, 427, 0, 203, 0, 484, 251,
	374, 371, 578, 281, 272, 268, 249, 316, 382, 425,
	513, 419, 0, 367, 0, 0, 494, 398, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 247, 324, 202, 410, 495, 285,
	0, 0, 0, 0, 0, 713, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 244, 0,
	0, 0, 348, 357, 356, 337, 338, 340, 342, 347,
	354, 360, 0, 0, 602, 0, 0, 0, 264, 320,
	271, 263, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	399, 256, 0, 450, 0, 0, 0, 620, 0, 0,
	0, 4026, 0, 0, 0, 362, 0, 329, 197, 224,
	0, 0, 409, 458, 470, 0, 0, 0, 252, 0,
	468, 423, 597, 232, 283, 455, 429, 466, 437, 286,
	0, 0, 467, 369, 580, 447, 594, 621, 622, 262,
	403, 607, 517, 615, 639, 225, 259, 417, 502, 600,
	491, 394, 576, 577, 328, 490, 294, 201, 366, 627,
	223, 476, 368, 241, 230, 582, 604, 298, 288, 453,
	634, 212, 512, 592, 238, 480, 0, 0, 642, 246,
	501, 214, 589, 500, 390, 325, 326, 213, 0, 454,
	267, 292, 0, 0, 257, 412, 584, 585, 255, 643,
	227, 614, 219, 0, 613, 405, 579, 590, 391, 380,
	218, 588, 389, 379, 333, 352, 353, 279, 306, 444,
	372, 445, 305, 307, 401, 400, 402, 206, 601, 0,
	207, 0, 496, 603, 644, 449, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 302, 303, 312, 364, 416,
	443, 439, 448, 0, 574, 595, 608, 619, 625, 626,
	628, 629, 630, 631, 632, 635, 633, 404, 310, 492,
	332, 370, 0, 0, 422, 469, 239, 599, 493, 199,
	0, 0, 0, 0, 253, 254, 0, 570, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 640, 503, 509, 504, 505,
	506, 507, 508, 0, 510, 0, 0, 0, 0, 0,
	395, 0, 586, 587, 663, 381, 483, 596, 334, 346,
	349, 339, 358, 0, 359, 335, 336, 341, 343, 344,
	345, 350, 351, 355, 361, 248, 209, 387, 396, 573,
	311, 215, 216, 217, 519, 520, 521, 522, 611, 612,
	616, 204, 459, 460, 461, 462, 291, 606, 308, 465,
	464, 330, 331, 376, 446, 535, 537, 548, 552, 554,
	556, 562, 565, 536, 538, 549, 553, 555, 557, 563,
	566, 525, 527, 529, 531, 544, 543, 540, 568, 569,
	546, 551, 530, 542, 547, 560, 567, 564, 524, 528,
	532, 541, 559, 558, 539, 550, 561, 545, 533, 526,
	534, 0, 196, 220, 365, 0, 451, 287, 641, 610,
	481, 605, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 309,
	317, 318, 321, 327, 377, 383, 384, 385, 386, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 485, 486, 487, 488, 489,
	497, 498, 511, 581, 583, 598, 617, 623, 477, 300,
	301, 441, 442, 313, 314, 637, 638, 299, 593, 624,
	591, 636, 618, 435, 375, 0, 0, 378, 280, 304,
	319, 0, 609, 499, 226, 463, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 323, 388, 397, 426,
	431, 295, 270, 243, 456, 240, 482, 514, 515, 516,
	518, 392, 265, 430, 393, 0, 373, 571, 572, 315,
	0, 523, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 363,
	266, 0, 0, 427, 0, 203, 0, 484, 251, 374,
	371, 578, 281, 272, 268, 249, 316, 382, 425, 513,
	419, 0, 367, 0, 0, 494, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 247, 324, 202, 410, 495, 285, 0,
	0, 0, 0, 1933, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 348, 357, 356, 337, 338, 340, 342, 347, 354,
	360, 0, 0, 602, 0, 0, 0, 264, 320, 271,
	263, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 399,
	256, 0, 450, 0, 0, 0, 620, 0, 0, 0,
	0, 0, 0, 0, 362, 0, 329, 197, 224, 0,
	0, 409, 458, 470, 0, 0, 0, 252, 0, 468,
	423, 597, 232, 283, 455, 429, 466, 437, 286, 0,
	0, 467, 369, 580, 447, 594, 621, 622, 262, 403,
	607, 517, 615, 639, 225, 259, 417, 502, 600, 491,
	394, 576, 577, 328, 490, 294, 201, 366, 627, 223,
	476, 368, 241, 230, 582, 604, 298, 288, 453, 634,
	212, 512, 592, 238, 480, 0, 0, 642, 246, 501,
	214, 589, 500, 390, 325, 326, 213, 0, 454, 267,
	292, 0, 0, 257, 412, 584, 585, 255, 643, 227,
	614, 219, 0, 613, 405, 579, 590, 391, 380, 218,
	588, 389, 379, 333, 352, 353, 279, 306, 444, 372,
	445, 305, 307, 401, 400, 402, 206, 601, 0, 207,
	0, 496, 603, 644, 449, 211, 233, 234, 236, 0,
	278, 282, 290, 293, 302, 303, 312, 364, 416, 443,
	439, 448, 0, 574, 595, 608, 619, 625, 626, 628,
	629, 630, 631, 632, 635, 633, 404, 310, 492, 332,
	370, 0, 0, 422, 469, 239, 599, 493, 199, 0,
	0, 0, 0, 253, 254, 0, 570, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 640, 503, 509, 504, 505, 506,
	507, 508, 0, 510, 0, 0, 0, 0, 0, 395,
	0, 586, 587, 663, 381, 483, 596, 334, 346, 349,
	339, 358, 0, 359, 335, 336, 341, 343, 344, 345,
	350, 351, 355, 361, 248, 209, 387, 396, 573, 311,
	215, 216, 217, 519, 520, 521, 522, 611, 612, 616,
	204, 459, 460, 461, 462, 291, 606, 308, 465, 464,
	330, 331, 376, 446, 535, 537, 548, 552, 554, 556,
	562, 565, 536, 538, 549, 553, 555, 557, 563, 566,
	525, 527, 529, 531, 544, 543, 540, 568, 569, 546,
	551, 530, 542, 547, 560, 567, 564, 524, 528, 532,
	541, 559, 558, 539, 550, 561, 545, 533, 526, 534,
	0, 196, 220, 365, 0, 451, 287, 641, 610, 481,
	605, 205, 222, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 200, 208, 221,
	231, 235, 242, 260, 275, 277, 284, 297, 309, 317,
	318, 321, 327, 377, 383, 384, 385, 386, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	433, 434, 436, 438, 440, 452, 457, 471, 472, 473,
	474, 475, 478, 479, 485, 486, 487, 488, 489, 497,
	498, 511, 581, 583, 598, 617, 623, 477, 300, 301,
	441, 442, 313, 314, 637, 638, 299, 593, 624, 591,
	636, 618, 435, 375, 0, 0, 378, 280, 304, 319,
	0, 609, 499, 226, 463, 289, 250, 0, 0, 210,
	245, 229, 258, 273, 276, 323, 388, 397, 426, 431,
	295, 270, 243, 456, 240, 482, 514, 515, 516, 518,
	392, 265, 430, 393, 0, 373, 571, 572, 315, 0,
	523, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 363, 266,
	0, 0, 427, 0, 203, 0, 484, 251, 374, 371,
	578, 281, 272, 268, 249, 316, 382, 425, 513, 419,
	0, 367, 0, 0, 494, 398, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 247, 324, 202, 410, 495, 285, 0, 0,
	0, 0, 0, 713, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	348, 357, 356, 337, 338, 340, 342, 347, 354, 360,
	0, 0, 602, 0, 0, 0, 264, 320, 271, 263,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 399, 256,
	0, 450, 0, 0, 0, 620, 0, 0, 0, 3684,
	0, 0, 0, 362, 0, 329, 197, 224, 0, 0,
	409, 458, 470, 0, 0, 0, 252, 0, 468, 423,
	597, 232, 283, 455, 429, 466, 437, 286, 0, 0,
	467, 369, 580, 447, 594, 621, 622, 262, 403, 607,
	517, 615, 639, 225, 259, 417, 502, 600, 491, 394,
	576, 577, 328, 490, 294, 201, 366, 627, 223, 476,
	368, 241, 230, 582, 604, 298, 288, 453, 634, 212,
	512, 592, 238, 480, 0, 0, 642, 246, 501, 214,
	589, 500, 390, 325, 326, 213, 0, 454, 267, 292,
	0, 0, 257, 412, 584, 585, 255, 643, 227, 614,
	219, 0, 613, 405, 579, 590, 391, 380, 218, 588,
	389, 379, 333, 352, 353, 279, 306, 444, 372, 445,
	305, 307, 401, 400, 402, 206, 601, 0, 207, 0,
	496, 603, 644, 449, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 302, 303, 312, 364, 416, 443, 439,
	448, 0, 574, 595, 608, 619, 625, 626, 628, 629,
	630, 631, 632, 635, 633, 404, 310, 492, 332, 370,
	0, 0, 422, 469, 239, 599, 493, 199, 0, 0,
	0, 0, 253, 254, 0, 570, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 640, 503, 509, 504, 505, 506, 507,
	508, 0, 510, 0, 0, 0, 0, 0, 395, 0,
	586, 587, 663, 381, 483, 596, 334, 346, 349, 339,
	358, 0, 359, 335, 336, 341, 343, 344, 345, 350,
	351, 355, 361, 248, 209, 387, 396, 573, 311, 215,
	216, 217, 519, 520, 521, 522, 611, 612, 616, 204,
	459, 460, 461, 462, 291, 606, 308, 465, 464, 330,
	331, 376, 446, 535, 537, 548, 552, 554, 556, 562,
	565, 536, 538, 549, 553, 555, 557, 563, 566, 525,
	527, 529, 531, 544, 543, 540, 568, 569, 546, 551,
	530, 542, 547, 560, 567, 564, 524, 528, 532, 541,
	559, 558, 539, 550, 561, 545, 533, 526, 534, 0,
	196, 220, 365, 0, 451, 287, 641, 610, 481, 605,
	205, 222, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 309, 317, 318,
	321, 327, 377, 383, 384, 385, 386, 406, 407, 408,
	411, 414, 415, 418, 420, 421, 424, 428, 432, 433,
	434, 436, 438, 440, 452, 457, 471, 472, 473, 474,
	475, 478, 479, 485, 486, 487, 488, 489, 497, 498,
	511, 581, 583, 598, 617, 623, 477, 300, 301, 441,
	442, 313, 314, 637, 638, 299, 593, 624, 591, 636,
	618, 435, 375, 0, 0, 378, 280, 304, 319, 0,
	609, 499, 226, 463, 289, 250, 0, 0, 210, 245,
	229, 258, 273, 276, 323, 388, 397, 426, 431, 295,
	270, 243, 456, 240, 482, 514, 515, 516, 518, 392,
	265, 430, 393, 0, 373, 571, 572, 315, 0, 523,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 484, 251, 374, 371, 578,
	281, 272, 268, 249, 316, 382, 425, 513, 419, 0,
	367, 0, 0, 494, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 495, 285, 0, 95, 0,
	0, 0, 713, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 348,
	357, 356, 337, 338, 340, 342, 347, 354, 360, 0,
	0, 602, 0, 0, 0, 264, 320, 271, 263, 575,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 399, 256, 0,
	450, 0, 0, 0, 620, 0, 0, 0, 0, 0,
	0, 0, 362, 0, 329, 197, 224, 0, 0, 409,
	458, 470, 0, 0, 0, 252, 0, 468, 423, 597,
	232, 283, 455, 429, 466, 437, 286, 0, 0, 467,
	369, 580, 447, 594, 621, 622, 262, 403, 607, 517,
	615, 639, 225, 259, 417, 502, 600, 491, 394, 576,
	577, 328, 490, 294, 201, 366, 627, 223, 476, 368,
	241, 230, 582, 604, 298, 288, 453, 634, 212, 512,
	592, 238, 480, 0, 0, 642, 246, 501, 214, 589,
	500, 390, 325, 326, 213, 0, 454, 267, 292, 0,
	0, 257, 412, 584, 585, 255, 643, 227, 614, 219,
	0, 613, 405, 579, 590, 391, 380, 218, 588, 389,
	379, 333, 352, 353, 279, 306, 444, 372, 445, 305,
	307, 401, 400, 402, 206, 601, 0, 207, 0, 496,
	603, 644, 449, 211, 233, 234, 236, 0, 278, 282,
	290, 293, 302, 303, 312, 364, 416, 443, 439, 448,
	0, 574, 595, 608, 619, 625, 626, 628, 629, 630,
	631, 632, 635, 633, 404, 310, 492, 332, 370, 0,
	0, 422, 469, 239, 599, 493, 199, 0, 0, 0,
	0, 253, 254, 0, 570, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 640, 503, 509, 504, 505, 506, 507, 508,
	0, 510, 0, 0, 0, 0, 0, 395, 0, 586,
	587, 663, 381, 483, 596, 334, 346, 349, 339, 358,
	0, 359, 335, 336, 341, 343, 344, 345, 350, 351,
	355, 361, 248, 209, 387, 396, 573, 311, 215, 216,
	217, 519, 520, 521, 522, 611, 612, 616, 204, 459,
	460, 461, 462, 291, 606, 308, 465, 464, 330, 331,
	376, 446, 535, 537, 548, 552, 554, 556, 562, 565,
	536, 538, 549, 553, 555, 557, 563, 566, 525, 527,
	529, 531, 544, 543, 540, 568, 569, 546, 551, 530,
	542, 547, 560, 567, 564, 524, 528, 532, 541, 559,
	558, 539, 550, 561, 545, 533, 526, 534, 0, 196,
	220, 365, 0, 451, 287, 641, 610, 481, 605, 205,
	222, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 200, 208, 221, 231, 235,
	242, 260, 275, 277, 284, 297, 309, 317, 318, 321,
	327, 377, 383, 384, 385, 386, 406, 407, 408, 411,
	414, 415, 418, 420, 421, 424, 428, 432, 433, 434,
	436, 438, 440, 452, 457, 471, 472, 473, 474, 475,
	478, 479, 485, 486, 487, 488, 489, 497, 498, 511,
	581, 583, 598, 617, 623, 477, 300, 301, 441, 442,
	313, 314, 637, 638, 299, 593, 624, 591, 636, 618,
	435, 375, 0, 0, 378, 280, 304, 319, 0, 609,
	499, 226, 463, 289, 250, 0, 0, 210, 245, 229,
	258, 273, 276, 323, 388, 397, 426, 431, 295, 270,
	243, 456, 240, 482, 514, 515, 516, 518, 392, 265,
	430, 393, 0, 373, 571, 572, 315, 0, 523, 0,
	0, 0, 0, 2393, 0, 0, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 363, 266, 0, 0,
	427, 0, 203, 0, 484, 251, 374, 371, 578, 281,
	272, 268, 249, 316, 382, 425, 513, 419, 0, 367,
	0, 0, 494, 398, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	247, 324, 202, 410, 495, 285, 0, 0, 0, 0,
	0, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 348, 357,
	356, 337, 338, 340, 342, 347, 354, 360, 0, 0,
	602, 0, 0, 0, 264, 320, 271, 263, 575, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 399, 256, 0, 450,
	0, 0, 0, 620, 0, 0, 0, 0, 0, 0,
	0, 362, 0, 329, 197, 224, 0, 0, 409, 458,
	470, 0, 0, 0, 252, 0, 468, 423, 597, 232,
	283, 455, 429, 466, 437, 286, 0, 0, 467, 369,
	580, 447, 594, 621, 622, 262, 403, 607, 517, 615,
	639, 225, 259, 417, 502, 600, 491, 394, 576, 577,
	328, 490, 294, 201, 366, 627, 223, 476, 368, 241,
	230, 582, 604, 298, 288, 453, 634, 212, 512, 592,
	238, 480, 0, 0, 642, 246, 501, 214, 589, 500,
	390, 325, 326, 213, 0, 454, 267, 292, 0, 0,
	257, 412, 584, 585, 255, 643, 227, 614, 219, 0,
	613, 405, 579, 590, 391, 380, 218, 588, 389, 379,
	333, 352, 353, 279, 306, 444, 372, 445, 305, 307,
	401, 400, 402, 206, 601, 0, 207, 0, 496, 603,
	644, 449, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 302, 303, 312, 364, 416, 443, 439, 448, 0,
	574, 595, 608, 619, 625, 626, 628, 629, 630, 631,
	632, 635, 633, 404, 310, 492, 332, 370, 0, 0,
	422, 469, 239, 599, 493, 199, 0, 0, 0, 0,
	253, 254, 0, 570, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 640, 503, 509, 504, 505, 506, 507, 508, 0,
	510, 0, 0, 0, 0, 0, 395, 0, 586, 587,
	663, 381, 483, 596, 334, 346, 349, 339, 358, 0,
	359, 335, 336, 341, 343, 344, 345, 350, 351, 355,
	361, 248, 209, 387, 396, 573, 311, 215, 216, 217,
	519, 520, 521, 522, 611, 612, 616, 204, 459, 460,
	461, 462, 291, 606, 308, 465, 464, 330, 331, 376,
	446, 535, 537, 548, 552, 554, 556, 562, 565, 536,
	538, 549, 553, 555, 557, 563, 566, 525, 527, 529,
	531, 544, 543, 540, 568, 569, 546, 551, 530, 542,
	547, 560, 567, 564, 524, 528, 532, 541, 559, 558,
	539, 550, 561, 545, 533, 526, 534, 0, 196, 220,
	365, 0, 451, 287, 641, 610, 481, 605, 205, 222,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 208, 221, 231, 235, 242,
	260, 275, 277, 284, 297, 309, 317, 318, 321, 327,
	377, 383, 384, 385, 386, 406, 407, 408, 411, 414,
	415, 418, 420, 421, 424, 428, 432, 433, 434, 436,
	438, 440, 452, 457, 471, 472, 473, 474, 475, 478,
	479, 485, 486, 487, 488, 489, 497, 498, 511, 581,
	583, 598, 617, 623, 477, 300, 301, 441, 442, 313,
	314, 637, 638, 299, 593, 624, 591, 636, 618, 435,
	375, 0, 0, 378, 280, 304, 319, 0, 609, 499,
	226, 463, 289, 250, 0, 0, 210, 245, 229, 258,
	273, 276, 323, 388, 397, 426, 431, 295, 270, 243,
	456, 240, 482, 514, 515, 516, 518, 392, 265, 430,
	393, 0, 373, 571, 572, 315, 0, 523, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 363, 266, 0, 0, 427,
	0, 203, 0, 484, 251, 374, 371, 578, 281, 272,
	268, 249, 316, 382, 425, 513, 419, 0, 367, 0,
	0, 494, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 247,
	324, 202, 410, 495, 285, 0, 0, 0, 0, 1754,
	713, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 244, 0, 0, 0, 348, 357, 356,
	337, 338, 340, 342, 347, 354, 360, 0, 0, 602,
	0, 0, 0, 264, 320, 271, 263, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 399, 256, 0, 450, 0,
	0, 0, 620, 0, 0, 0, 0, 0, 0, 0,
	362, 0, 329, 197, 224, 0, 0, 409, 458, 470,
	0, 0, 0, 252, 0, 468, 423, 597, 232, 283,
	455, 429, 466, 437, 286, 0, 0, 467, 369, 580,
	447, 594, 621, 622, 262, 403, 607, 517, 615, 639,
	225, 259, 417, 502, 600, 491, 394, 576, 577, 328,
	490, 294, 201, 366, 627, 223, 476, 368, 241, 230,
	582, 604, 298, 288, 453, 634, 212, 512, 592, 238,
	480, 0, 0, 642, 246, 501, 214, 589, 500, 390,
	325, 326, 213, 0, 454, 267, 292, 0, 0, 257,
	412, 584, 585, 255, 643, 227, 614, 219, 0, 613,
	405, 579, 590, 391, 380, 218, 588, 389, 379, 333,
	352, 353, 279, 306, 444, 372, 445, 305, 307, 401,
	400, 402, 206, 601, 0, 207, 0, 496, 603, 644,
	449, 211, 233, 234, 236, 0, 278, 282, 290, 293,
	302, 303, 312, 364, 416, 443, 439, 448, 0, 574,
	595, 608, 619, 625, 626, 628, 629, 630, 631, 632,
	635, 633, 404, 310, 492, 332, 370, 0, 0, 422,
	469, 239, 599, 493, 199, 0, 0, 0, 0, 253,
	254, 0, 570, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	640, 503, 509, 504, 505, 506, 507, 508, 0, 510,
	0, 0, 0, 0, 0, 395, 0, 586, 587, 663,
	381, 483, 596, 334, 346, 349, 339, 358, 0, 359,
	335, 336, 341, 343, 344, 345, 350, 351, 355, 361,
	248, 209, 387, 396, 573, 311, 215, 216, 217, 519,
	520, 521, 522, 611, 612, 616, 204, 459, 460, 461,
	462, 291, 606, 308, 465, 464, 330, 331, 376, 446,
	535, 537, 548, 552, 554, 556, 562, 565, 536, 538,
	549, 553, 555, 557, 563, 566, 525, 527, 529, 531,
	544, 543, 540, 568, 569, 546, 551, 530, 542, 547,
	560, 567, 564, 524, 528, 532, 541, 559, 558, 539,
	550, 561, 545, 533, 526, 534, 0, 196, 220, 365,
	0, 451, 287, 641, 610, 481, 605, 205, 222, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 309, 317, 318, 321, 327, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	485, 486, 487, 488, 489, 497, 498, 511, 581, 583,
	598, 617, 623, 477, 300, 301, 441, 442, 313, 314,
	637, 638, 299, 593, 624, 591, 636, 618, 435, 375,
	0, 0, 378, 280, 304, 319, 0, 609, 499, 226,
	463, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 323, 388, 397, 426, 431, 295, 270, 243, 456,
	240, 482, 514, 515, 516, 518, 392, 265, 430, 393,
	0, 373, 571, 572, 315, 0, 523, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 363, 266, 0, 0, 427, 0,
	203, 0, 484, 251, 374, 371, 578, 281, 272, 268,
	249, 316, 382, 425, 513, 419, 0, 367, 0, 0,
	494, 398, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 247, 324,
	202, 410, 495, 285, 0, 0, 0, 0, 0, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 348, 357, 356, 337,
	338, 340, 342, 347, 354, 360, 0, 0, 602, 0,
	0, 0, 264, 320, 271, 263, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 399, 256, 0, 450, 0, 0,
	0, 620, 0, 0, 0, 0, 0, 0, 0, 362,
	0, 329, 197, 224, 0, 0, 409, 458, 470, 0,
	0, 0, 252, 0, 468, 423, 597, 232, 283, 455,
	429, 466, 437, 286, 0, 0, 467, 369, 580, 447,
	594, 621, 622, 262, 403, 607, 517, 615, 639, 225,
	259, 417, 502, 600, 491, 394, 576, 577, 328, 490,
	294, 201, 366, 627, 223, 476, 368, 241, 230, 582,
	604, 298, 288, 453, 634, 212, 512, 592, 238, 480,
	0, 0, 642, 246, 501, 214, 589, 500, 390, 325,
	326, 213, 0, 454, 267, 292, 0, 0, 257, 412,
	584, 585, 255, 643, 227, 614, 219, 0, 613, 405,
	579, 590, 391, 380, 218, 588, 389, 379, 333, 352,
	353, 279, 306, 444, 372, 445, 305, 307, 401, 400,
	402, 206, 601, 0, 207, 0, 496, 603, 644, 449,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 302,
	303, 312, 364, 416, 443, 439, 448, 0, 574, 595,
	608, 619, 625, 626, 628, 629, 630, 631, 632, 635,
	633, 404, 310, 492, 332, 370, 0, 0, 422, 469,
	239, 599, 493, 199, 0, 0, 0, 0, 253, 254,
	0, 570, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 640,
	503, 509, 504, 505, 506, 507, 508, 0, 510, 0,
	0, 0, 0, 0, 395, 0, 586, 587, 663, 381,
	483, 596, 334, 346, 349, 339, 358, 0, 359, 335,
	336, 341, 343, 344, 345, 350, 351, 355, 361, 248,
	209, 387, 396, 573, 311, 215, 216, 217, 519, 520,
	521, 522, 611, 612, 616, 204, 459, 460, 461, 462,
	291, 606, 308, 465, 464, 330, 331, 376, 446, 535,
	537, 548, 552, 554, 556, 562, 565, 536, 538, 549,
	553, 555, 557, 563, 566, 525, 527, 529, 531, 544,
	543, 540, 568, 569, 546, 551, 530, 542, 547, 560,
	567, 564, 524, 528, 532, 541, 559, 558, 539, 550,
	561, 545, 533, 526, 534, 0, 196, 220, 365, 2047,
	451, 287, 641, 610, 481, 605, 205, 222, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 309, 317, 318, 321, 327, 377, 383,
	384, 385, 386, 406, 407, 408, 411, 414, 415, 418,
	420, 421, 424, 428, 432, 433, 434, 436, 438, 440,
	452, 457, 471, 472, 473, 474, 475, 478, 479, 485,
	486, 487, 488, 489, 497, 498, 511, 581, 583, 598,
	617, 623, 477, 300, 301, 441, 442, 313, 314, 637,
	638, 299, 593, 624, 591, 636, 618, 435, 375, 0,
	0, 378, 280, 304, 319, 0, 609, 499, 226, 463,
	289, 250, 0, 0, 210, 245, 229, 258, 273, 276,
	323, 388, 397, 426, 431, 295, 270, 243, 456, 240,
	482, 514, 515, 516, 518, 392, 265, 430, 393, 0,
	373, 571, 572, 315, 0, 523, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 363, 266, 0, 0, 427, 0, 203,
	0, 484, 251, 374, 371, 578, 281, 272, 268, 249,
	316, 382, 425, 513, 419, 0, 367, 0, 0, 494,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 247, 324, 202,
	410, 495, 285, 0, 0, 0, 0, 2038, 713, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 348, 357, 356, 337, 338,
	340, 342, 347, 354, 360, 0, 0, 602, 0, 0,
	0, 264, 320, 271, 263, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 399, 256, 0, 450, 0, 0, 0,
	620, 0, 0, 0, 0, 0, 0, 0, 362, 0,
	329, 197, 224, 0, 0, 409, 458, 470, 0, 0,
	0, 252, 0, 468, 423, 597, 232, 283, 455, 429,
	466, 437, 286, 0, 0, 467, 369, 580, 447, 594,
	621, 622, 262, 403, 607, 517, 615, 639, 225, 259,
	417, 502, 600, 491, 394, 576, 577, 328, 490, 294,
	201, 366, 627, 223, 476, 368, 241, 230, 582, 604,
	298, 288, 453, 634, 212, 512, 592, 238, 480, 0,
	0, 642, 246, 501, 214, 589, 500, 390, 325, 326,
	213, 0, 454, 267, 292, 0, 0, 257, 412, 584,
	585, 255, 643, 227, 614, 219, 0, 613, 405, 579,
	590, 391, 380, 218, 588, 389, 379, 333, 352, 353,
	279, 306, 444, 372, 445, 305, 307, 401, 400, 402,
	206, 601, 0, 207, 0, 496, 603, 644, 449, 211,
	233, 234, 236, 0, 278, 282, 290, 293, 302, 303,
	312, 364, 416, 443, 439, 448, 0, 574, 595, 608,
	619, 625, 626, 628, 629, 630, 631, 632, 635, 633,
	404, 310, 492, 332, 370, 0, 0, 422, 469, 239,
	599, 493, 199, 0, 0, 0, 0, 253, 254, 0,
	570, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 640, 503,
	509, 504, 505, 506, 507, 508, 0, 510, 0, 0,
	0, 0, 0, 395, 0, 586, 587, 663, 381, 483,
	596, 334, 346, 349, 339, 358, 0, 359, 335, 336,
	341, 343, 344, 345, 350, 351, 355, 361, 248, 209,
	387, 396, 573, 311, 215, 216, 217, 519, 520, 521,
	522, 611, 612, 616, 204, 459, 460, 461, 462, 291,
	606, 308, 465, 464, 330, 331, 376, 446, 535, 537,
	548, 552, 554, 556, 562, 565, 536, 538, 549, 553,
	555, 557, 563, 566, 525, 527, 529, 531, 544, 543,
	540, 568, 569, 546, 551, 530, 542, 547, 560, 567,
	564, 524, 528, 532, 541, 559, 558, 539, 550, 561,
	545, 533, 526, 534, 0, 196, 220, 365, 0, 451,
	287, 641, 610, 481, 605, 205, 222, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 208, 221, 231, 235, 242, 260, 275, 277,
	284, 297, 309, 317, 318, 321, 327, 377, 383, 384,
	385, 386, 406, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 433, 434, 436, 438, 440, 452,
	457, 471, 472, 473, 474, 475, 478, 479, 485, 486,
	487, 488, 489, 497, 498, 511, 581, 583, 598, 617,
	623, 477, 300, 301, 441, 442, 313, 314, 637, 638,
	299, 593, 624, 591, 636, 618, 435, 375, 0, 0,
	378, 280, 304, 319, 0, 609, 499, 226, 463, 289,
	250, 0, 0, 210, 245, 229, 258, 273, 276, 323,
	388, 397, 426, 431, 295, 270, 243, 456, 240, 482,
	514, 515, 516, 518, 392, 265, 430, 393, 0, 373,
	571, 572, 315, 0, 523, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 0, 1900, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 363, 266, 0, 0, 427, 0, 203, 0,
	484, 251, 374, 371, 578, 281, 272, 268, 249, 316,
	382, 425, 513, 419, 0, 367, 0, 0, 494, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 247, 324, 202, 410,
	495, 285, 0, 0, 0, 0, 0, 713, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 348, 357, 356, 337, 338, 340,
	342, 347, 354, 360, 0, 0, 602, 0, 0, 0,
	264, 320, 271, 263, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 399, 256, 0, 450, 0, 0, 0, 620,
	0, 0, 0, 0, 0, 0, 0, 362, 0, 329,
	197, 224, 0, 0, 409, 458, 470, 0, 0, 0,
	252, 0, 468, 423, 597, 232, 283, 455, 429, 466,
	437, 286, 0, 0, 467, 369, 580, 447, 594, 621,
	622, 262, 403, 607, 517, 615, 639, 225, 259, 417,
	502, 600, 491, 394, 576, 577, 328, 490, 294, 201,
	366, 627, 223, 476, 368, 241, 230, 582, 604, 298,
	288, 453, 634, 212, 512, 592, 238, 480, 0, 0,
	642, 246, 501, 214, 589, 500, 390, 325, 326, 213,
	0, 454, 267, 292, 0, 0, 257, 412, 584, 585,
	255, 643, 227, 614, 219, 0, 613, 405, 579, 590,
	391, 380, 218, 588, 389, 379, 333, 352, 353, 279,
	306, 444, 372, 445, 305, 307, 401, 400, 402, 206,
	601, 0, 207, 0, 496, 603, 644, 449, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 302, 303, 312,
	364, 416, 443, 439, 448, 0, 574, 595, 608, 619,
	625, 626, 628, 629, 630, 631, 632, 635, 633, 404,
	310, 492, 332, 370, 0, 0, 422, 469, 239, 599,
	493, 199, 0, 0, 0, 0, 253, 254, 0, 570,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 640, 503, 509,
	504, 505, 506, 507, 508, 0, 510, 0, 0, 0,
	0, 0, 395, 0, 586, 587, 663, 381, 483, 596,
	334, 346, 349, 339, 358, 0, 359, 335, 336, 341,
	343, 344, 345, 350, 351, 355, 361, 248, 209, 387,
	396, 573, 311, 215, 216, 217, 519, 520, 521, 522,
	611, 612, 616, 204, 459, 460, 461, 462, 291, 606,
	308, 465, 464, 330, 331, 376, 446, 535, 537, 548,
	552, 554, 556, 562, 565, 536, 538, 549, 553, 555,
	557, 563, 566, 525, 527, 529, 531, 544, 543, 540,
	568, 569, 546, 551, 530, 542, 547, 560, 567, 564,
	524, 528, 532, 541, 559, 558, 539, 550, 561, 545,
	533, 526, 534, 0, 196, 220, 365, 0, 451, 287,
	641, 610, 481, 605, 205, 222, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 309, 317, 318, 321, 327, 377, 383, 384, 385,
	386, 406, 407, 408, 411, 414, 415, 418, 420, 421,
	424, 428, 432, 433, 434, 436, 438, 440, 452, 457,
	471, 472, 473, 474, 475, 478, 479, 485, 486, 487,
	488, 489, 497, 498, 511, 581, 583, 598, 617, 623,
	477, 300, 301, 441, 442, 313, 314, 637, 638, 299,
	593, 624, 591, 636, 618, 435, 375, 0, 0, 378,
	280, 304, 319, 0, 609, 499, 226, 463, 289, 250,
	0, 0, 210, 245, 229, 258, 273, 276, 323, 388,
	397, 426, 431, 295, 270, 243, 456, 240, 482, 514,
	515, 516, 518, 392, 265, 430, 393, 0, 373, 571,
	572, 315, 0, 523, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 1898, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 363, 266, 0, 0, 427, 0, 203, 0, 484,
	251, 374, 371, 578, 281, 272, 268, 249, 316, 382,
	425, 513, 419, 0, 367, 0, 0, 494, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 247, 324, 202, 410, 495,
	285, 0, 0, 0, 0, 0, 713, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 244,
	0, 0, 0, 348, 357, 356, 337, 338, 340, 342,
	347, 354, 360, 0, 0, 602, 0, 0, 0, 264,
	320, 271, 263, 575, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 399, 256, 0, 450, 0, 0, 0, 620, 0,
	0, 0, 0, 0, 0, 0, 362, 0, 329, 197,
	224, 0, 0, 409, 458, 470, 0, 0, 0, 252,
	0, 468, 423, 597, 232, 283, 455, 429, 466, 437,
	286, 0, 0, 467, 369, 580, 447, 594, 621, 622,
	262, 403, 607, 517, 615, 639, 225, 259, 417, 502,
	600, 491, 394, 576, 577, 328, 490, 294, 201, 366,
	627, 223, 476, 368, 241, 230, 582, 604, 298, 288,
	453, 634, 212, 512, 592, 238, 480, 0, 0, 642,
	246, 501, 214, 589, 500, 390, 325, 326, 213, 0,
	454, 267, 292, 0, 0, 257, 412, 584, 585, 255,
	643, 227, 614, 219, 0, 613, 405, 579, 590, 391,
	380, 218, 588, 389, 379, 333, 352, 353, 279, 306,
	444, 372, 445, 305, 307, 401, 400, 402, 206, 601,
	0, 207, 0, 496, 603, 644, 449, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 302, 303, 312, 364,
	416, 443, 439, 448, 0, 574, 595, 608, 619, 625,
	626, 628, 629, 630, 631, 632, 635, 633, 404, 310,
	492, 332, 370, 0, 0, 422, 469, 239, 599, 493,
	199, 0, 0, 0, 0, 253, 254, 0, 570, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 640, 503, 509, 504,
	505, 506, 507, 508, 0, 510, 0, 0, 0, 0,
	0, 395, 0, 586, 587, 663, 381, 483, 596, 334,
	346, 349, 339, 358, 0, 359, 335, 336, 341, 343,
	344, 345, 350, 351, 355, 361, 248, 209, 387, 396,
	573, 311, 215, 216, 217, 519, 520, 521, 522, 611,
	612, 616, 204, 459, 460, 461, 462, 291, 606, 308,
	465, 464, 330, 331, 376, 446, 535, 537, 548, 552,
	554, 556, 562, 565, 536, 538, 549, 553, 555, 557,
	563, 566, 525, 527, 529, 531, 544, 543, 540, 568,
	569, 546, 551, 530, 542, 547, 560, 567, 564, 524,
	528, 532, 541, 559, 558, 539, 550, 561, 545, 533,
	526, 534, 0, 196, 220, 365, 0, 451, 287, 641,
	610, 481, 605, 205, 222, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	208, 221, 231, 235, 242, 260, 275, 277, 284, 297,
	309, 317, 318, 321, 327, 377, 383, 384, 385, 386,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 433, 434, 436, 438, 440, 452, 457, 471,
	472, 473, 474, 475, 478, 479, 485, 486, 487, 488,
	489, 497, 498, 511, 581, 583, 598, 617, 623, 477,
	300, 301, 441, 442, 313, 314, 637, 638, 299, 593,
	624, 591, 636, 618, 435, 375, 0, 0, 378, 280,
	304, 319, 0, 609, 499, 226, 463, 289, 250, 0,
	0, 210, 245, 229, 258, 273, 276, 323, 388, 397,
	426, 431, 295, 270, 243, 456, 240, 482, 514, 515,
	516, 518, 392, 265, 430, 393, 0, 373, 571, 572,
	315, 0, 523, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 0, 1896, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	363, 266, 0, 0, 427, 0, 203, 0, 484, 251,
	374, 371, 578, 281, 272, 268, 249, 316, 382, 425,
	513, 419, 0, 367, 0, 0, 494, 398, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 247, 324, 202, 410, 495, 285,
	0, 0, 0, 0, 0, 713, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 244, 0,
	0, 0, 348, 357, 356, 337, 338, 340, 342, 347,
	354, 360, 0, 0, 602, 0, 0, 0, 264, 320,
	271, 263, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	399, 256, 0, 450, 0, 0, 0, 620, 0, 0,
	0, 0, 0, 0, 0, 362, 0, 329, 197, 224,
	0, 0, 409, 458, 470, 0, 0, 0, 252, 0,
	468, 423, 597, 232, 283, 455, 429, 466, 437, 286,
	0, 0, 467, 369, 580, 447, 594, 621, 622, 262,
	403, 607, 517, 615, 639, 225, 259, 417, 502, 600,
	491, 394, 576, 577, 328, 490, 294, 201, 366, 627,
	223, 476, 368, 241, 230, 582, 604, 298, 288, 453,
	634, 212, 512, 592, 238, 480, 0, 0, 642, 246,
	501, 214, 589, 500, 390, 325, 326, 213, 0, 454,
	267, 292, 0, 0, 257, 412, 584, 585, 255, 643,
	227, 614, 219, 0, 613, 405, 579, 590, 391, 380,
	218, 588, 389, 379, 333, 352, 353, 279, 306, 444,
	372, 445, 305, 307, 401, 400, 402, 206, 601, 0,
	207, 0, 496, 603, 644, 449, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 302, 303, 312, 364, 416,
	443, 439, 448, 0, 574, 595, 608, 619, 625, 626,
	628, 629, 630, 631, 632, 635, 633, 404, 310, 492,
	332, 370, 0, 0, 422, 469, 239, 599, 493, 199,
	0, 0, 0, 0, 253, 254, 0, 570, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 640, 503, 509, 504, 505,
	506, 507, 508, 0, 510, 0, 0, 0, 0, 0,
	395, 0, 586, 587, 663, 381, 483, 596, 334, 346,
	349, 339, 358, 0, 359, 335, 336, 341, 343, 344,
	345, 350, 351, 355, 361, 248, 209, 387, 396, 573,
	311, 215, 216, 217, 519, 520, 521, 522, 611, 612,
	616, 204, 459, 460, 461, 462, 291, 606, 308, 465,
	464, 330, 331, 376, 446, 535, 537, 548, 552, 554,
	556, 562, 565, 536, 538, 549, 553, 555, 557, 563,
	566, 525, 527, 529, 531, 544, 543, 540, 568, 569,
	546, 551, 530, 542, 547, 560, 567, 564, 524, 528,
	532, 541, 559, 558, 539, 550, 561, 545, 533, 526,
	534, 0, 196, 220, 365, 0, 451, 287, 641, 610,
	481, 605, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 309,
	317, 318, 321, 327, 377, 383, 384, 385, 386, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 485, 486, 487, 488, 489,
	497, 498, 511, 581, 583, 598, 617, 623, 477, 300,
	301, 441, 442, 313, 314, 637, 638, 299, 593, 624,
	591, 636, 618, 435, 375, 0, 0, 378, 280, 304,
	319, 0, 609, 499, 226, 463, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 323, 388, 397, 426,
	431, 295, 270, 243, 456, 240, 482, 514, 515, 516,
	518, 392, 265, 430, 393, 0, 373, 571, 572, 315,
	0, 523, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 1894, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 363,
	266, 0, 0, 427, 0, 203, 0, 484, 251, 374,
	371, 578, 281, 272, 268, 249, 316, 382, 425, 513,
	419, 0, 367, 0, 0, 494, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 247, 324, 202, 410, 495, 285, 0,
	0, 0, 0, 0, 713, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 348, 357, 356, 337, 338, 340, 342, 347, 354,
	360, 0, 0, 602, 0, 0, 0, 264, 320, 271,
	263, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 399,
	256, 0, 450, 0, 0, 0, 620, 0, 0, 0,
	0, 0, 0, 0, 362, 0, 329, 197, 224, 0,
	0, 409, 458, 470, 0, 0, 0, 252, 0, 468,
	423, 597, 232, 283, 455, 429, 466, 437, 286, 0,
	0, 467, 369, 580, 447, 594, 621, 622, 262, 403,
	607, 517, 615, 639, 225, 259, 417, 502, 600, 491,
	394, 576, 577, 328, 490, 294, 201, 366, 627, 223,
	476, 368, 241, 230, 582, 604, 298, 288, 453, 634,
	212, 512, 592, 238, 480, 0, 0, 642, 246, 501,
	214, 589, 500, 390, 325, 326, 213, 0, 454, 267,
	292, 0, 0, 257, 412, 584, 585, 255, 643, 227,
	614, 219, 0, 613, 405, 579, 590, 391, 380, 218,
	588, 389, 379, 333, 352, 353, 279, 306, 444, 372,
	445, 305, 307, 401, 400, 402, 206, 601, 0, 207,
	0, 496, 603, 644, 449, 211, 233, 234, 236, 0,
	278, 282, 290, 293, 302, 303, 312, 364, 416, 443,
	439, 448, 0, 574, 595, 608, 619, 625, 626, 628,
	629, 630, 631, 632, 635, 633, 404, 310, 492, 332,
	370, 0, 0, 422, 469, 239, 599, 493, 199, 0,
	0, 0, 0, 253, 254, 0, 570, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 640, 503, 509, 504, 505, 506,
	507, 508, 0, 510, 0, 0, 0, 0, 0, 395,
	0, 586, 587, 663, 381, 483, 596, 334, 346, 349,
	339, 358, 0, 359, 335, 336, 341, 343, 344, 345,
	350, 351, 355, 361, 248, 209, 387, 396, 573, 311,
	215, 216, 217, 519, 520, 521, 522, 611, 612, 616,
	204, 459, 460, 461, 462, 291, 606, 308, 465, 464,
	330, 331, 376, 446, 535, 537, 548, 552, 554, 556,
	562, 565, 536, 538, 549, 553, 555, 557, 563, 566,
	525, 527, 529, 531, 544, 543, 540, 568, 569, 546,
	551, 530, 542, 547, 560, 567, 564, 524, 528, 532,
	541, 559, 558, 539, 550, 561, 545, 533, 526, 534,
	0, 196, 220, 365, 0, 451, 287, 641, 610, 481,
	605, 205, 222, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 200, 208, 221,
	231, 235, 242, 260, 275, 277, 284, 297, 309, 317,
	318, 321, 327, 377, 383, 384, 385, 386, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	433, 434, 436, 438, 440, 452, 457, 471, 472, 473,
	474, 475, 478, 479, 485, 486, 487, 488, 489, 497,
	498, 511, 581, 583, 598, 617, 623, 477, 300, 301,
	441, 442, 313, 314, 637, 638, 299, 593, 624, 591,
	636, 618, 435, 375, 0, 0, 378, 280, 304, 319,
	0, 609, 499, 226, 463, 289, 250, 0, 0, 210,
	245, 229, 258, 273, 276, 323, 388, 397, 426, 431,
	295, 270, 243, 456, 240, 482, 514, 515, 516, 518,
	392, 265, 430, 393, 0, 373, 571, 572, 315, 0,
	523, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 0, 1892, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 363, 266,
	0, 0, 427, 0, 203, 0, 484, 251, 374, 371,
	578, 281, 272, 268, 249, 316, 382, 425, 513, 419,
	0, 367, 0, 0, 494, 398, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 247, 324, 202, 410, 495, 285, 0, 0,
	0, 0, 0, 713, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	348, 357, 356, 337, 338, 340, 342, 347, 354, 360,
	0, 0, 602, 0, 0, 0, 264, 320, 271, 263,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 399, 256,
	0, 450, 0, 0, 0, 620, 0, 0, 0, 0,
	0, 0, 0, 362, 0, 329, 197, 224, 0, 0,
	409, 458, 470, 0, 0, 0, 252, 0, 468, 423,
	597, 232, 283, 455, 429, 466, 437, 286, 0, 0,
	467, 369, 580, 447, 594, 621, 622, 262, 403, 607,
	517, 615, 639, 225, 259, 417, 502, 600, 491, 394,
	576, 577, 328, 490, 294, 201, 366, 627, 223, 476,
	368, 241, 230, 582, 604, 298, 288, 453, 634, 212,
	512, 592, 238, 480, 0, 0, 642, 246, 501, 214,
	589, 500, 390, 325, 326, 213, 0, 454, 267, 292,
	0, 0, 257, 412, 584, 585, 255, 643, 227, 614,
	219, 0, 613, 405, 579, 590, 391, 380, 218, 588,
	389, 379, 333, 352, 353, 279, 306, 444, 372, 445,
	305, 307, 401, 400, 402, 206, 601, 0, 207, 0,
	496, 603, 644, 449, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 302, 303, 312, 364, 416, 443, 439,
	448, 0, 574, 595, 608, 619, 625, 626, 628, 629,
	630, 631, 632, 635, 633, 404, 310, 492, 332, 370,
	0, 0, 422, 469, 239, 599, 493, 199, 0, 0,
	0, 0, 253, 254, 0, 570, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 640, 503, 509, 504, 505, 506, 507,
	508, 0, 510, 0, 0, 0, 0, 0, 395, 0,
	586, 587, 663, 381, 483, 596, 334, 346, 349, 339,
	358, 0, 359, 335, 336, 341, 343, 344, 345, 350,
	351, 355, 361, 248, 209, 387, 396, 573, 311, 215,
	216, 217, 519, 520, 521, 522, 611, 612, 616, 204,
	459, 460, 461, 462, 291, 606, 308, 465, 464, 330,
	331, 376, 446, 535, 537, 548, 552, 554, 556, 562,
	565, 536, 538, 549, 553, 555, 557, 563, 566, 525,
	527, 529, 531, 544, 543, 540, 568, 569, 546, 551,
	530, 542, 547, 560, 567, 564, 524, 528, 532, 541,
	559, 558, 539, 550, 561, 545, 533, 526, 534, 0,
	196, 220, 365, 0, 451, 287, 641, 610, 481, 605,
	205, 222, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 309, 317, 318,
	321, 327, 377, 383, 384, 385, 386, 406, 407, 408,
	411, 414, 415, 418, 420, 421, 424, 428, 432, 433,
	434, 436, 438, 440, 452, 457, 471, 472, 473, 474,
	475, 478, 479, 485, 486, 487, 488, 489, 497, 498,
	511, 581, 583, 598, 617, 623, 477, 300, 301, 441,
	442, 313, 314, 637, 638, 299, 593, 624, 591, 636,
	618, 435, 375, 0, 0, 378, 280, 304, 319, 0,
	609, 499, 226, 463, 289, 250, 0, 0, 210, 245,
	229, 258, 273, 276, 323, 388, 397, 426, 431, 295,
	270, 243, 456, 240, 482, 514, 515, 516, 518, 392,
	265, 430, 393, 0, 373, 571, 572, 315, 0, 523,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 1888, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 484, 251, 374, 371, 578,
	281, 272, 268, 249, 316, 382, 425, 513, 419, 0,
	367, 0, 0, 494, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 495, 285, 0, 0, 0,
	0, 0, 713, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 348,
	357, 356, 337, 338, 340, 342, 347, 354, 360, 0,
	0, 602, 0, 0, 0, 264, 320, 271, 263, 575,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 399, 256, 0,
	450, 0, 0, 0, 620, 0, 0, 0, 0, 0,
	0, 0, 362, 0, 329, 197, 224, 0, 0, 409,
	458, 470, 0, 0, 0, 252, 0, 468, 423, 597,
	232, 283, 455, 429, 466, 437, 286, 0, 0, 467,
	369, 580, 447, 594, 621, 622, 262, 403, 607, 517,
	615, 639, 225, 259, 417, 502, 600, 491, 394, 576,
	577, 328, 490, 294, 201, 366, 627, 223, 476, 368,
	241, 230, 582, 604, 298, 288, 453, 634, 212, 512,
	592, 238, 480, 0, 0, 642, 246, 501, 214, 589,
	500, 390, 325, 326, 213, 0, 454, 267, 292, 0,
	0, 257, 412, 584, 585, 255, 643, 227, 614, 219,
	0, 613, 405, 579, 590, 391, 380, 218, 588, 389,
	379, 333, 352, 353, 279, 306, 444, 372, 445, 305,
	307, 401, 400, 402, 206, 601, 0, 207, 0, 496,
	603, 644, 449, 211, 233, 234, 236, 0, 278, 282,
	290, 293, 302, 303, 312, 364, 416, 443, 439, 448,
	0, 574, 595, 608, 619, 625, 626, 628, 629, 630,
	631, 632, 635, 633, 404, 310, 492, 332, 370, 0,
	0, 422, 469, 239, 599, 493, 199, 0, 0, 0,
	0, 253, 254, 0, 570, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 640, 503, 509, 504, 505, 506, 507, 508,
	0, 510, 0, 0, 0, 0, 0, 395, 0, 586,
	587, 663, 381, 483, 596, 334, 346, 349, 339, 358,
	0, 359, 335, 336, 341, 343, 344, 345, 350, 351,
	355, 361, 248, 209, 387, 396, 573, 311, 215, 216,
	217, 519, 520, 521, 522, 611, 612, 616, 204, 459,
	460, 461, 462, 291, 606, 308, 465, 464, 330, 331,
	376, 446, 535, 537, 548, 552, 554, 556, 562, 565,
	536, 538, 549, 553, 555, 557, 563, 566, 525, 527,
	529, 531, 544, 543, 540, 568, 569, 546, 551, 530,
	542, 547, 560, 567, 564, 524, 528, 532, 541, 559,
	558, 539, 550, 561, 545, 533, 526, 534, 0, 196,
	220, 365, 0, 451, 287, 641, 610, 481, 605, 205,
	222, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 200, 208, 221, 231, 235,
	242, 260, 275, 277, 284, 297, 309, 317, 318, 321,
	327, 377, 383, 384, 385, 386, 406, 407, 408, 411,
	414, 415, 418, 420, 421, 424, 428, 432, 433, 434,
	436, 438, 440, 452, 457, 471, 472, 473, 474, 475,
	478, 479, 485, 486, 487, 488, 489, 497, 498, 511,
	581, 583, 598, 617, 623, 477, 300, 301, 441, 442,
	313, 314, 637, 638, 299, 593, 624, 591, 636, 618,
	435, 375, 0, 0, 378, 280, 304, 319, 0, 609,
	499, 226, 463, 289, 250, 0, 0, 210, 245, 229,
	258, 273, 276, 323, 388, 397, 426, 431, 295, 270,
	243, 456, 240, 482, 514, 515, 516, 518, 392, 265,
	430, 393, 0, 373, 571, 572, 315, 0, 523, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 0, 1886, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 363, 266, 0, 0,
	427, 0, 203, 0, 484, 251, 374, 371, 578, 281,
	272, 268, 249, 316, 382, 425, 513, 419, 0, 367,
	0, 0, 494, 398, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	247, 324, 202, 410, 495, 285, 0, 0, 0, 0,
	0, 713, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 348, 357,
	356, 337, 338, 340, 342, 347, 354, 360, 0, 0,
	602, 0, 0, 0, 264, 320, 271, 263, 575, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 399, 256, 0, 450,
	0, 0, 0, 620, 0, 0, 0, 0, 0, 0,
	0, 362, 0, 329, 197, 224, 0, 0, 409, 458,
	470, 0, 0, 0, 252, 0, 468, 423, 597, 232,
	283, 455, 429, 466, 437, 286, 0, 0, 467, 369,
	580, 447, 594, 621, 622, 262, 403, 607, 517, 615,
	639, 225, 259, 417, 502, 600, 491, 394, 576, 577,
	328, 490, 294, 201, 366, 627, 223, 476, 368, 241,
	230, 582, 604, 298, 288, 453, 634, 212, 512, 592,
	238, 480, 0, 0, 642, 246, 501, 214, 589, 500,
	390, 325, 326, 213, 0, 454, 267, 292, 0, 0,
	257, 412, 584, 585, 255, 643, 227, 614, 219, 0,
	613, 405, 579, 590, 391, 380, 218, 588, 389, 379,
	333, 352, 353, 279, 306, 444, 372, 445, 305, 307,
	401, 400, 402, 206, 601, 0, 207, 0, 496, 603,
	644, 449, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 302, 303, 312, 364, 416, 443, 439, 448, 0,
	574, 595, 608, 619, 625, 626, 628, 629, 630, 631,
	632, 635, 633, 404, 310, 492, 332, 370, 0, 0,
	422, 469, 239, 599, 493, 199, 0, 0, 0, 0,
	253, 254, 0, 570, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 640, 503, 509, 504, 505, 506, 507, 508, 0,
	510, 0, 0, 0, 0, 0, 395, 0, 586, 587,
	663, 381, 483, 596, 334, 346, 349, 339, 358, 0,
	359, 335, 336, 341, 343, 344, 345, 350, 351, 355,
	361, 248, 209, 387, 396, 573, 311, 215, 216, 217,
	519, 520, 521, 522, 611, 612, 616, 204, 459, 460,
	461, 462, 291, 606, 308, 465, 464, 330, 331, 376,
	446, 535, 537, 548, 552, 554, 556, 562, 565, 536,
	538, 549, 553, 555, 557, 563, 566, 525, 527, 529,
	531, 544, 543, 540, 568, 569, 546, 551, 530, 542,
	547, 560, 567, 564, 524, 528, 532, 541, 559, 558,
	539, 550, 561, 545, 533, 526, 534, 0, 196, 220,
	365, 0, 451, 287, 641, 610, 481, 605, 205, 222,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 208, 221, 231, 235, 242,
	260, 275, 277, 284, 297, 309, 317, 318, 321, 327,
	377, 383, 384, 385, 386, 406, 407, 408, 411, 414,
	415, 418, 420, 421, 424, 428, 432, 433, 434, 436,
	438, 440, 452, 457, 471, 472, 473, 474, 475, 478,
	479, 485, 486, 487, 488, 489, 497, 498, 511, 581,
	583, 598, 617, 623, 477, 300, 301, 441, 442, 313,
	314, 637, 638, 299, 593, 624, 591, 636, 618, 435,
	375, 0, 0, 378, 280, 304, 319, 0, 609, 499,
	226, 463, 289, 250, 0, 0, 210, 245, 229, 258,
	273, 276, 323, 388, 397, 426, 431, 295, 270, 243,
	456, 240, 482, 514, 515, 516, 518, 392, 265, 430,
	393, 0, 373, 571, 572, 315, 0, 523, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 1884, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 363, 266, 0, 0, 427,
	0, 203, 0, 484, 251, 374, 371, 578, 281, 272,
	268, 249, 316, 382, 425, 513, 419, 0, 367, 0,
	0, 494, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 247,
	324, 202, 410, 495, 285, 0, 0, 0, 0, 0,
	713, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 244, 0, 0, 0, 348, 357, 356,
	337, 338, 340, 342, 347, 354, 360, 0, 0, 602,
	0, 0, 0, 264, 320, 271, 263, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 399, 256, 0, 450, 0,
	0, 0, 620, 0, 0, 0, 0, 0, 0, 0,
	362, 0, 329, 197, 224, 0, 0, 409, 458, 470,
	0, 0, 0, 252, 0, 468, 423, 597, 232, 283,
	455, 429, 466, 437, 286, 0, 0, 467, 369, 580,
	447, 594, 621, 622, 262, 403, 607, 517, 615, 639,
	225, 259, 417, 502, 600, 491, 394, 576, 577, 328,
	490, 294, 201, 366, 627, 223, 476, 368, 241, 230,
	582, 604, 298, 288, 453, 634, 212, 512, 592, 238,
	480, 0, 0, 642, 246, 501, 214, 589, 500, 390,
	325, 326, 213, 0, 454, 267, 292, 0, 0, 257,
	412, 584, 585, 255, 643, 227, 614, 219, 0, 613,
	405, 579, 590, 391, 380, 218, 588, 389, 379, 333,
	352, 353, 279, 306, 444, 372, 445, 305, 307, 401,
	400, 402, 206, 601, 0, 207, 0, 496, 603, 644,
	449, 211, 233, 234, 236, 0, 278, 282, 290, 293,
	302, 303, 312, 364, 416, 443, 439, 448, 0, 574,
	595, 608, 619, 625, 626, 628, 629, 630, 631, 632,
	635, 633, 404, 310, 492, 332, 370, 0, 0, 422,
	469, 239, 599, 493, 199, 0, 0, 0, 0, 253,
	254, 0, 570, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	640, 503, 509, 504, 505, 506, 507, 508, 0, 510,
	0, 0, 0, 0, 0, 395, 0, 586, 587, 663,
	381, 483, 596, 334, 346, 349, 339, 358, 0, 359,
	335, 336, 341, 343, 344, 345, 350, 351, 355, 361,
	248, 209, 387, 396, 573, 311, 215, 216, 217, 519,
	520, 521, 522, 611, 612, 616, 204, 459, 460, 461,
	462, 291, 606, 308, 465, 464, 330, 331, 376, 446,
	535, 537, 548, 552, 554, 556, 562, 565, 536, 538,
	549, 553, 555, 557, 563, 566, 525, 527, 529, 531,
	544, 543, 540, 568, 569, 546, 551, 530, 542, 547,
	560, 567, 564, 524, 528, 532, 541, 559, 558, 539,
	550, 561, 545, 533, 526, 534, 0, 196, 220, 365,
	0, 451, 287, 641, 610, 481, 605, 205, 222, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 309, 317, 318, 321, 327, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	485, 486, 487, 488, 489, 497, 498, 511, 581, 583,
	598, 617, 623, 477, 300, 301, 441, 442, 313, 314,
	637, 638, 299, 593, 624, 591, 636, 618, 435, 375,
	0, 0, 378, 280, 304, 319, 0, 609, 499, 226,
	463, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 323, 388, 397, 426, 431, 295, 270, 243, 456,
	240, 482, 514, 515, 516, 518, 392, 265, 430, 393,
	0, 373, 571, 572, 315, 0, 523, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 363, 266, 0, 0, 427, 0,
	203, 0, 484, 251, 374, 371, 578, 281, 272, 268,
	249, 316, 382, 425, 513, 419, 0, 367, 0, 0,
	494, 398, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 247, 324,
	202, 410, 495, 285, 0, 1859, 0, 0, 0, 713,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 348, 357, 356, 337,
	338, 340, 342, 347, 354, 360, 0, 0, 602, 0,
	0, 0, 264, 320, 271, 263, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 399, 256, 0, 450, 0, 0,
	0, 620, 0, 0, 0, 0, 0, 0, 0, 362,
	0, 329, 197, 224, 0, 0, 409, 458, 470, 0,
	0, 0, 252, 0, 468, 423, 597, 232, 283, 455,
	429, 466, 437, 286, 0, 0, 467, 369, 580, 447,
	594, 621, 622, 262, 403, 607, 517, 615, 639, 225,
	259, 417, 502, 600, 491, 394, 576, 577, 328, 490,
	294, 201, 366, 627, 223, 476, 368, 241, 230, 582,
	604, 298, 288, 453, 634, 212, 512, 592, 238, 480,
	0, 0, 642, 246, 501, 214, 589, 500, 390, 325,
	326, 213, 0, 454, 267, 292, 0, 0, 257, 412,
	584, 585, 255, 643, 227, 614, 219, 0, 613, 405,
	579, 590, 391, 380, 218, 588, 389, 379, 333, 352,
	353, 279, 306, 444, 372, 445, 305, 307, 401, 400,
	402, 206, 601, 0, 207, 0, 496, 603, 644, 449,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 302,
	303, 312, 364, 416, 443, 439, 448, 0, 574, 595,
	608, 619, 625, 626, 628, 629, 630, 631, 632, 635,
	633, 404, 310, 492, 332, 370, 0, 0, 422, 469,
	239, 599, 493, 199, 0, 0, 0, 0, 253, 254,
	0, 570, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 640,
	503, 509, 504, 505, 506, 507, 508, 0, 510, 0,
	0, 0, 0, 0, 395, 0, 586, 587, 663, 381,
	483, 596, 334, 346, 349, 339, 358, 0, 359, 335,
	336, 341, 343, 344, 345, 350, 351, 355, 361, 248,
	209, 387, 396, 573, 311, 215, 216, 217, 519, 520,
	521, 522, 611, 612, 616, 204, 459, 460, 461, 462,
	291, 606, 308, 465, 464, 330, 331, 376, 446, 535,
	537, 548, 552, 554, 556, 562, 565, 536, 538, 549,
	553, 555, 557, 563, 566, 525, 527, 529, 531, 544,
	543, 540, 568, 569, 546, 551, 530, 542, 547, 560,
	567, 564, 524, 528, 532, 541, 559, 558, 539, 550,
	561, 545, 533, 526, 534, 0, 196, 220, 365, 0,
	451, 287, 641, 610, 481, 605, 205, 222, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 309, 317, 318, 321, 327, 377, 383,
	384, 385, 386, 406, 407, 408, 411, 414, 415, 418,
	420, 421, 424, 428, 432, 433, 434, 436, 438, 440,
	452, 457, 471, 472, 473, 474, 475, 478, 479, 485,
	486, 487, 488, 489, 497, 498, 511, 581, 583, 598,
	617, 623, 477, 300, 301, 441, 442, 313, 314, 637,
	638, 299, 593, 624, 591, 636, 618, 435, 375, 0,
	0, 378, 280, 304, 319, 0, 609, 499, 226, 463,
	289, 250, 0, 0, 210, 245, 229, 258, 273, 276,
	323, 388, 397, 426, 431, 295, 270, 243, 456, 240,
	482, 514, 515, 516, 518, 392, 265, 430, 393, 0,
	373, 571, 572, 315, 0, 523, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1758, 269, 0,
	0, 0, 0, 363, 266, 0, 0, 427, 0, 203,
	0, 484, 251, 374, 371, 578, 281, 272, 268, 249,
	316, 382, 425, 513, 419, 0, 367, 0, 0, 494,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 247, 324, 202,
	410, 495, 285, 0, 0, 0, 0, 0, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 348, 357, 356, 337, 338,
	340, 342, 347, 354, 360, 0, 0, 602, 0, 0,
	0, 264, 320, 271, 263, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 399, 256, 0, 450, 0, 0, 0,
	620, 0, 0, 0, 0, 0, 0, 0, 362, 0,
	329, 197, 224, 0, 0, 409, 458, 470, 0, 0,
	0, 252, 0, 468, 423, 597, 232, 283, 455, 429,
	466, 437, 286, 0, 0, 467, 369, 580, 447, 594,
	621, 622, 262, 403, 607, 517, 615, 639, 225, 259,
	417, 502, 600, 491, 394, 576, 577, 328, 490, 294,
	201, 366, 627, 223, 476, 368, 241, 230, 582, 604,
	298, 288, 453, 634, 212, 512, 592, 238, 480, 0,
	0, 642, 246, 501, 214, 589, 500, 390, 325, 326,
	213, 0, 454, 267, 292, 0, 0, 257, 412, 584,
	585, 255, 643, 227, 614, 219, 0, 613, 405, 579,
	590, 391, 380, 218, 588, 389, 379, 333, 352, 353,
	279, 306, 444, 372, 445, 305, 307, 401, 400, 402,
	206, 601, 0, 207, 0, 496, 603, 644, 449, 211,
	233, 234, 236, 0, 278, 282, 290, 293, 302, 303,
	312, 364, 416, 443, 439, 448, 0, 574, 595, 608,
	619, 625, 626, 628, 629, 630, 631, 632, 635, 633,
	404, 310, 492, 332, 370, 0, 0, 422, 469, 239,
	599, 493, 199, 0, 0, 0, 0, 253, 254, 0,
	570, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 640, 503,
	509, 504, 505, 506, 507, 508, 0, 510, 0, 0,
	0, 0, 0, 395, 0, 586, 587, 663, 381, 483,
	596, 334, 346, 349, 339, 358, 0, 359, 335, 336,
	341, 343, 344, 345, 350, 351, 355, 361, 248, 209,
	387, 396, 573, 311, 215, 216, 217, 519, 520, 521,
	522, 611, 612, 616, 204, 459, 460, 461, 462, 291,
	606, 308, 465, 464, 330, 331, 376, 446, 535, 537,
	548, 552, 554, 556, 562, 565, 536, 538, 549, 553,
	555, 557, 563, 566, 525, 527, 529, 531, 544, 543,
	540, 568, 569, 546, 551, 530, 542, 547, 560, 567,
	564, 524, 528, 532, 541, 559, 558, 539, 550, 561,
	545, 533, 526, 534, 0, 196, 220, 365, 0, 451,
	287, 641, 610, 481, 605, 205, 222, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 208, 221, 231, 235, 242, 260, 275, 277,
	284, 297, 309, 317, 318, 321, 327, 377, 383, 384,
	385, 386, 406, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 433, 434, 436, 438, 440, 452,
	457, 471, 472, 473, 474, 475, 478, 479, 485, 486,
	487, 488, 489, 497, 498, 511, 581, 583, 598, 617,
	623, 477, 300, 301, 441, 442, 313, 314, 637, 638,
	299, 593, 624, 591, 636, 618, 435, 375, 0, 0,
	378, 280, 304, 319, 0, 609, 499, 226, 463, 289,
	250, 0, 0, 210, 245, 229, 258, 273, 276, 323,
	388, 397, 426, 431, 295, 270, 243, 456, 240, 482,
	514, 515, 516, 518, 392, 265, 430, 393, 0, 373,
	571, 572, 315, 0, 523, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 363, 266, 0, 0, 427, 0, 203, 0,
	484, 251, 374, 371, 578, 281, 272, 268, 249, 316,
	382, 425, 513, 419, 0, 367, 0, 0, 494, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 247, 324, 202, 410,
	495, 285, 0, 95, 0, 0, 0, 946, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 348, 357, 356, 337, 338, 340,
	342, 347, 354, 360, 0, 0, 602, 0, 0, 0,
	264, 320, 271, 263, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 399, 256, 0, 450, 0, 0, 0, 620,
	0, 0, 0, 0, 0, 0, 0, 362, 0, 329,
	197, 224, 0, 0, 409, 458, 470, 0, 0, 0,
	252, 0, 468, 423, 597, 232, 283, 455, 429, 466,
	437, 286, 0, 0, 467, 369, 580, 447, 594, 621,
	622, 262, 403, 607, 517, 615, 639, 225, 259, 417,
	502, 600, 491, 394, 576, 577, 328, 490, 294, 201,
	366, 627, 223, 476, 368, 241, 230, 582, 604, 298,
	288, 453, 634, 212, 512, 592, 238, 480, 0, 0,
	642, 246, 501, 214, 589, 500, 390, 325, 326, 213,
	0, 454, 267, 292, 0, 0, 257, 412, 584, 585,
	255, 643, 227, 614, 219, 0, 613, 405, 579, 590,
	391, 380, 218, 588, 389, 379, 333, 352, 353, 279,
	306, 444, 372, 445, 305, 307, 401, 400, 402, 206,
	601, 0, 207, 0, 496, 603, 644, 449, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 302, 303, 312,
	364, 416, 443, 439, 448, 0, 574, 595, 608, 619,
	625, 626, 628, 629, 630, 631, 632, 635, 633, 404,
	310, 492, 332, 370, 0, 0, 422, 469, 239, 599,
	493, 199, 0, 0, 0, 0, 253, 254, 0, 570,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 640, 503, 509,
	504, 505, 506, 507, 508, 0, 510, 0, 0, 0,
	0, 0, 395, 0, 586, 587, 663, 381, 483, 596,
	334, 346, 349, 339, 358, 0, 359, 335, 336, 341,
	343, 344, 345, 350, 351, 355, 361, 248, 209, 387,
	396, 573, 311, 215, 216, 217, 519, 520, 521, 522,
	611, 612, 616, 204, 459, 460, 461, 462, 291, 606,
	308, 465, 464, 330, 331, 376, 446, 535, 537, 548,
	552, 554, 556, 562, 565, 536, 538, 549, 553, 555,
	557, 563, 566, 525, 527, 529, 531, 544, 543, 540,
	568, 569, 546, 551, 530, 542, 547, 560, 567, 564,
	524, 528, 532, 541, 559, 558, 539, 550, 561, 545,
	533, 526, 534, 0, 196, 220, 365, 0, 451, 287,
	641, 610, 481, 605, 205, 222, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 309, 317, 318, 321, 327, 377, 383, 384, 385,
	386, 406, 407, 408, 411, 414, 415, 418, 420, 421,
	424, 428, 432, 433, 434, 436, 438, 440, 452, 457,
	471, 472, 473, 474, 475, 478, 479, 485, 486, 487,
	488, 489, 497, 498, 511, 581, 583, 598, 617, 623,
	477, 300, 301, 441, 442, 313, 314, 637, 638, 299,
	593, 624, 591, 636, 618, 435, 375, 0, 0, 378,
	280, 304, 319, 0, 609, 499, 226, 463, 289, 250,
	0, 0, 210, 245, 229, 258, 273, 276, 323, 388,
	397, 426, 431, 295, 270, 243, 456, 240, 482, 514,
	515, 516, 518, 392, 265, 430, 393, 0, 373, 571,
	572, 315, 0, 523, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 363, 266, 0, 0, 427, 0, 203, 0, 484,
	251, 374, 371, 578, 281, 272, 268, 249, 316, 382,
	425, 513, 419, 0, 367, 0, 0, 494, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 247, 324, 202, 410, 495,
	285, 0, 0, 0, 0, 0, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 244,
	0, 0, 0, 348, 357, 356, 337, 338, 340, 342,
	347, 354, 360, 0, 0, 602, 0, 0, 0, 264,
	320, 271, 263, 575, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1438, 0, 296,
	0, 399, 256, 0, 450, 0, 0, 0, 620, 0,
	0, 0, 0, 0, 0, 0, 362, 0, 329, 197,
	224, 0, 0, 409, 458, 470, 0, 0, 0, 252,
	0, 468, 423, 597, 232, 283, 455, 429, 466, 437,
	286, 0, 0, 467, 369, 580, 447, 594, 621, 622,
	262, 403, 607, 517, 615, 639, 225, 259, 417, 502,
	600, 491, 394, 576, 577, 328, 490, 294, 201, 366,
	627, 223, 476, 368, 241, 230, 582, 604, 298, 288,
	453, 634, 212, 512, 592, 238, 480, 0, 0, 642,
	246, 501, 214, 589, 500, 390, 325, 326, 213, 0,
	454, 267, 292, 0, 0, 257, 412, 584, 585, 255,
	643, 227, 614, 219, 0, 613, 405, 579, 590, 391,
	380, 218, 588, 389, 379, 333, 352, 353, 279, 306,
	444, 372, 445, 305, 307, 401, 400, 402, 206, 601,
	0, 207, 0, 496, 603, 644, 449, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 302, 303, 312, 364,
	416, 443, 439, 448, 0, 574, 595, 608, 619, 625,
	626, 628, 629, 630, 631, 632, 635, 633, 404, 310,
	492, 332, 370, 0, 0, 422, 469, 239, 599, 493,
	199, 0, 0, 0, 0, 253, 254, 0, 570, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 640, 503, 509, 504,
	505, 506, 507, 508, 0, 510, 0, 0, 0, 0,
	0, 395, 0, 586, 587, 663, 381, 483, 596, 334,
	346, 349, 339, 358, 0, 359, 335, 336, 341, 343,
	344, 345, 350, 351, 355, 361, 248, 209, 387, 396,
	573, 311, 215, 216, 217, 519, 520, 521, 522, 611,
	612, 616, 204, 459, 460, 461, 462, 291, 606, 308,
	465, 464, 330, 331, 376, 446, 535, 537, 548, 552,
	554, 556, 562, 565, 536, 538, 549, 553, 555, 557,
	563, 566, 525, 527, 529, 531, 544, 543, 540, 568,
	569, 546, 551, 530, 542, 547, 560, 567, 564, 524,
	528, 532, 541, 559, 558, 539, 550, 561, 545, 533,
	526, 534, 0, 196, 220, 365, 0, 451, 287, 641,
	610, 481, 605, 205, 222, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	208, 221, 231, 235, 242, 260, 275, 277, 284, 297,
	309, 317, 318, 321, 327, 377, 383, 384, 385, 386,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 433, 434, 436, 438, 440, 452, 457, 471,
	472, 473, 474, 475, 478, 479, 485, 486, 487, 488,
	489, 497, 498, 511, 581, 583, 598, 617, 623, 477,
	300, 301, 441, 442, 313, 314, 637, 638, 1437, 593,
	624, 591, 636, 618, 435, 375, 0, 0, 378, 280,
	304, 319, 0, 609, 499, 226, 463, 289, 250, 0,
	0, 210, 245, 229, 258, 273, 276, 323, 388, 397,
	426, 431, 295, 270, 243, 456, 240, 482, 514, 515,
	516, 518, 392, 265, 430, 393, 0, 373, 571, 572,
	315, 0, 523, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	363, 266, 0, 0, 427, 0, 203, 0, 484, 251,
	374, 371, 578, 281, 272, 268, 249, 316, 382, 425,
	513, 419, 0, 367, 0, 0, 494, 398, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 247, 324, 202, 410, 495, 285,
	0, 0, 0, 0, 0, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 244, 0,
	0, 0, 348, 357, 356, 337, 338, 340, 342, 347,
	354, 360, 0, 0, 602, 0, 0, 0, 264, 320,
	271, 263, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	399, 256, 0, 450, 0, 0, 0, 620, 0, 0,
	0, 0, 0, 0, 0, 362, 0, 329, 197, 224,
	0, 0, 409, 458, 470, 0, 0, 0, 252, 0,
	468, 423, 597, 232, 283, 455, 429, 466, 437, 286,
	0, 0, 467, 369, 580, 447, 594, 621, 622, 262,
	403, 607, 517, 615, 639, 225, 259, 417, 502, 600,
	491, 394, 576, 577, 328, 490, 294, 201, 366, 627,
	223, 476, 368, 241, 230, 582, 604, 298, 288, 453,
	634, 212, 512, 592, 238, 480, 0, 0, 642, 246,
	501, 214, 589, 500, 390, 325, 326, 213, 0, 454,
	267, 292, 0, 0, 257, 412, 584, 585, 255, 643,
	227, 614, 219, 0, 613, 405, 579, 590, 391, 380,
	218, 588, 389, 379, 333, 352, 353, 279, 306, 444,
	372, 445, 305, 307, 401, 400, 402, 206, 601, 0,
	207, 0, 496, 603, 644, 449, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 302, 303, 312, 364, 416,
	443, 439, 448, 0, 574, 595, 608, 619, 625, 626,
	628, 629, 630, 631, 632, 635, 633, 404, 310, 492,
	332, 370, 0, 0, 422, 469, 239, 599, 493, 199,
	0, 0, 0, 0, 253, 254, 0, 570, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 640, 503, 509, 504, 505,
	506, 507, 508, 0, 510, 0, 0, 0, 0, 0,
	395, 0, 586, 587, 663, 381, 483, 596, 334, 346,
	349, 339, 358, 0, 359, 335, 336, 341, 343, 344,
	345, 350, 351, 355, 361, 248, 209, 387, 396, 573,
	311, 215, 216, 217, 519, 520, 521, 522, 611, 612,
	616, 204, 459, 460, 461, 462, 291, 606, 308, 465,
	464, 330, 331, 376, 446, 535, 537, 548, 552, 554,
	556, 562, 565, 536, 538, 549, 553, 555, 557, 563,
	566, 525, 527, 529, 531, 544, 543, 540, 568, 569,
	546, 551, 530, 542, 547, 560, 567, 564, 524, 528,
	532, 541, 559, 558, 539, 550, 561, 545, 533, 526,
	534, 0, 196, 220, 365, 0, 451, 287, 641, 610,
	481, 605, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1036, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 309,
	317, 318, 321, 327, 377, 383, 384, 385, 386, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 485, 486, 487, 488, 489,
	497, 498, 511, 581, 583, 598, 617, 623, 477, 300,
	301, 441, 442, 313, 314, 637, 638, 299, 593, 624,
	591, 636, 618, 435, 375, 0, 0, 378, 280, 304,
	319, 0, 609, 499, 226, 463, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 323, 388, 397, 426,
	431, 295, 270, 243, 456, 240, 482, 514, 515, 516,
	518, 392, 265, 430, 393, 0, 373, 571, 572, 315,
	0, 523, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 363,
	266, 0, 0, 427, 0, 203, 0, 484, 251, 374,
	371, 578, 281, 272, 268, 249, 316, 382, 425, 513,
	419, 0, 367, 0, 0, 494, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 247, 324, 202, 410, 495, 285, 0,
	0, 0, 0, 0, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 348, 357, 356, 337, 338, 340, 342, 347, 354,
	360, 0, 0, 602, 0, 0, 0, 264, 320, 271,
	263, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 399,
	256, 0, 450, 0, 666, 0, 620, 0, 0, 0,
	0, 0, 0, 0, 362, 0, 329, 197, 224, 0,
	0, 409, 458, 470, 0, 0, 0, 252, 0, 468,
	423, 597, 232, 283, 455, 429, 466, 437, 286, 0,
	0, 467, 369, 580, 447, 594, 621, 622, 262, 403,
	607, 517, 615, 639, 225, 259, 417, 502, 600, 491,
	394, 576, 577, 328, 490, 294, 201, 366, 627, 223,
	476, 368, 241, 230, 582, 604, 298, 288, 453, 634,
	212, 512, 592, 238, 480, 0, 0, 642, 246, 501,
	214, 589, 500, 390, 325, 326, 213, 0, 454, 267,
	292, 0, 0, 257, 412, 584, 585, 255, 643, 227,
	614, 219, 0, 613, 405, 579, 590, 391, 380, 218,
	588, 389, 379, 333, 352, 353, 279, 306, 444, 372,
	445, 305, 307, 401, 400, 402, 206, 601, 0, 207,
	0, 496, 603, 644, 449, 211, 233, 234, 236, 0,
	278, 282, 290, 293, 302, 303, 312, 364, 416, 443,
	439, 448, 0, 574, 595, 608, 619, 625, 626, 628,
	629, 630, 631, 632, 635, 633, 404, 310, 492, 332,
	370, 0, 0, 422, 469, 239, 599, 493, 199, 0,
	0, 0, 0, 253, 254, 0, 570, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 640, 503, 509, 504, 505, 506,
	507, 508, 0, 510, 0, 0, 0, 0, 0, 395,
	0, 586, 587, 663, 381, 483, 596, 334, 346, 349,
	339, 358, 0, 359, 335, 336, 341, 343, 344, 345,
	350, 351, 355, 361, 248, 209, 387, 396, 573, 311,
	215, 216, 217, 519, 520, 521, 522, 611, 612, 616,
	204, 459, 460, 461, 462, 291, 606, 308, 465, 464,
	330, 331, 376, 446, 535, 537, 548, 552, 554, 556,
	562, 565, 536, 538, 549, 553, 555, 557, 563, 566,
	525, 527, 529, 531, 544, 543, 540, 568, 569, 546,
	551, 530, 542, 547, 560, 567, 564, 524, 528, 532,
	541, 559, 558, 539, 550, 561, 545, 533, 526, 534,
	0, 196, 220, 365, 0, 451, 287, 641, 610, 481,
	605, 205, 222, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 200, 208, 221,
	231, 235, 242, 260, 275, 277, 284, 297, 309, 317,
	318, 321, 327, 377, 383, 384, 385, 386, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	433, 434, 436, 438, 440, 452, 457, 471, 472, 473,
	474, 475, 478, 479, 485, 486, 487, 488, 489, 497,
	498, 511, 581, 583, 598, 617, 623, 477, 300, 301,
	441, 442, 313, 314, 637, 638, 299, 593, 624, 591,
	636, 618, 435, 375, 0, 0, 378, 280, 304, 319,
	0, 609, 499, 226, 463, 289, 250, 0, 0, 210,
	245, 229, 258, 273, 276, 323, 388, 397, 426, 431,
	295, 270, 243, 456, 240, 482, 514, 515, 516, 518,
	392, 265, 430, 393, 0, 373, 571, 572, 315, 0,
	523, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 363, 266,
	0, 0, 427, 0, 203, 0, 484, 251, 374, 371,
	578, 281, 272, 268, 249, 316, 382, 425, 513, 419,
	0, 367, 0, 0, 494, 398, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 247, 324, 202, 410, 495, 285, 0, 0,
	0, 0, 0, 713, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	348, 357, 356, 337, 338, 340, 342, 347, 354, 360,
	0, 0, 602, 0, 0, 0, 264, 320, 271, 263,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 399, 256,
	0, 450, 0, 0, 0, 620, 0, 0, 0, 0,
	0, 0, 0, 362, 0, 329, 197, 224, 0, 0,
	409, 458, 470, 0, 0, 0, 252, 0, 468, 423,
	597, 232, 283, 455, 429, 466, 437, 286, 0, 0,
	467, 369, 580, 447, 594, 621, 622, 262, 403, 607,
	517, 615, 639, 225, 259, 417, 502, 600, 491, 394,
	576, 577, 328, 490, 294, 201, 366, 627, 223, 476,
	368, 241, 230, 582, 604, 298, 288, 453, 634, 212,
	512, 592, 238, 480, 0, 0, 642, 246, 501, 214,
	589, 500, 390, 325, 326, 213, 0, 454, 267, 292,
	0, 0, 257, 412, 584, 585, 255, 643, 227, 614,
	219, 0, 613, 405, 579, 590, 391, 380, 218, 588,
	389, 379, 333, 352, 353, 279, 306, 444, 372, 445,
	305, 307, 401, 400, 402, 206, 601, 0, 207, 0,
	496, 603, 644, 449, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 302, 303, 312, 364, 416, 443, 439,
	448, 0, 574, 595, 608, 619, 625, 626, 628, 629,
	630, 631, 632, 635, 633, 404, 310, 492, 332, 370,
	0, 0, 422, 469, 239, 599, 493, 199, 0, 0,
	0, 0, 253, 254, 0, 570, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 640, 503, 509, 504, 505, 506, 507,
	508, 0, 510, 0, 0, 0, 0, 0, 395, 0,
	586, 587, 663, 381, 483, 596, 334, 346, 349, 339,
	358, 0, 359, 335, 336, 341, 343, 344, 345, 350,
	351, 355, 361, 248, 209, 387, 396, 573, 311, 215,
	216, 217, 519, 520, 521, 522, 611, 612, 616, 204,
	459, 460, 461, 462, 291, 606, 308, 465, 464, 330,
	331, 376, 446, 535, 537, 548, 552, 554, 556, 562,
	565, 536, 538, 549, 553, 555, 557, 563, 566, 525,
	527, 529, 531, 544, 543, 540, 568, 569, 546, 551,
	530, 542, 547, 560, 567, 564, 524, 528, 532, 541,
	559, 558, 539, 550, 561, 545, 533, 526, 534, 0,
	196, 220, 365, 0, 451, 287, 641, 610, 481, 605,
	205, 222, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 309, 317, 318,
	321, 327, 377, 383, 384, 385, 386, 4092, 407, 408,
	411, 414, 415, 418, 420, 421, 424, 428, 432, 433,
	434, 436, 438, 440, 452, 457, 471, 472, 473, 474,
	475, 478, 479, 485, 486, 487, 488, 489, 497, 498,
	511, 581, 583, 598, 617, 623, 477, 300, 301, 441,
	442, 313, 314, 637, 638, 299, 593, 624, 591, 636,
	618, 435, 375, 0, 0, 378, 280, 304, 319, 0,
	609, 499, 226, 463, 289, 250, 0, 0, 210, 245,
	229, 258, 273, 276, 323, 388, 397, 426, 431, 295,
	270, 243, 456, 240, 482, 514, 515, 516, 518, 392,
	265, 430, 393, 0, 373, 571, 572, 315, 0, 523,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 484, 251, 374, 371, 578,
	281, 272, 268, 249, 316, 382, 425, 513, 419, 0,
	367, 0, 0, 494, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 495, 285, 0, 0, 0,
	0, 0, 713, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 348,
	357, 356, 337, 338, 340, 342, 347, 354, 360, 0,
	0, 602, 0, 0, 0, 264, 320, 271, 263, 575,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 399, 256, 0,
	450, 0, 0, 0, 620, 0, 0, 0, 0, 0,
	0, 0, 362, 0, 329, 197, 224, 0, 0, 409,
	458, 470, 0, 0, 0, 252, 0, 468, 423, 597,
	232, 283, 455, 429, 466, 437, 286, 0, 0, 467,
	369, 580, 447, 594, 621, 622, 262, 403, 607, 517,
	615, 639, 225, 259, 417, 502, 600, 491, 394, 576,
	577, 328, 490, 294, 201, 366, 627, 223, 476, 368,
	241, 230, 582, 604, 298, 288, 453, 634, 212, 512,
	592, 238, 480, 0, 0, 642, 246, 501, 214, 589,
	500, 390, 325, 326, 213, 0, 454, 267, 292, 0,
	0, 257, 412, 584, 585, 255, 643, 227, 614, 219,
	0, 613, 405, 579, 590, 391, 380, 218, 588, 389,
	379, 333, 352, 353, 279, 306, 444, 372, 445, 305,
	307, 401, 400, 402, 206, 601, 0, 207, 0, 496,
	603, 644, 449, 211, 233, 234, 236, 0, 278, 282,
	290, 293, 302, 303, 312, 364, 416, 443, 439, 448,
	0, 574, 595, 608, 619, 625, 626, 628, 629, 630,
	631, 632, 635, 633, 404, 310, 492, 332, 370, 0,
	0, 422, 469, 239, 599, 493, 199, 0, 0, 0,
	0, 253, 254, 0, 570, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 640, 503, 509, 504, 505, 506, 507, 508,
	0, 510, 0, 0, 0, 0, 0, 395, 0, 586,
	587, 663, 381, 483, 596, 334, 346, 349, 339, 358,
	0, 359, 335, 336, 341, 343, 344, 345, 350, 351,
	355, 361, 248, 209, 387, 396, 573, 311, 215, 216,
	217, 519, 520, 521, 522, 611, 612, 616, 204, 459,
	460, 461, 462, 291, 606, 308, 465, 464, 330, 331,
	376, 446, 535, 537, 548, 552, 554, 556, 562, 565,
	536, 538, 549, 553, 555, 557, 563, 566, 525, 527,
	529, 531, 544, 543, 540, 568, 569, 546, 551, 530,
	542, 547, 560, 567, 564, 524, 528, 532, 541, 559,
	558, 539, 550, 561, 545, 533, 526, 534, 0, 196,
	220, 365, 0, 451, 287, 641, 610, 481, 605, 205,
	222, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 200, 208, 221, 231, 235,
	242, 260, 275, 277, 284, 297, 309, 317, 318, 321,
	327, 377, 383, 384, 385, 386, 406, 407, 408, 411,
	414, 415, 418, 420, 421, 424, 428, 432, 433, 434,
	436, 438, 440, 452, 457, 471, 472, 473, 474, 475,
	478, 479, 485, 486, 487, 488, 489, 497, 498, 511,
	581, 583, 598, 617, 623, 477, 300, 301, 441, 442,
	313, 314, 637, 638, 299, 593, 624, 591, 636, 618,
	435, 375, 0, 0, 378, 280, 304, 319, 0, 609,
	499, 226, 463, 289, 250, 0, 0, 210, 245, 229,
	258, 273, 276, 323, 388, 397, 426, 431, 295, 270,
	243, 456, 240, 482, 514, 515, 516, 518, 392, 265,
	430, 393, 0, 373, 571, 572, 315, 0, 523, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 363, 266, 0, 0,
	427, 0, 203, 0, 484, 251, 374, 371, 578, 281,
	272, 268, 249, 316, 382, 425, 513, 419, 0, 367,
	0, 0, 494, 398, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	247, 324, 202, 410, 495, 285, 0, 0, 0, 0,
	0, 946, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 348, 357,
	356, 337, 338, 340, 342, 347, 354, 360, 0, 0,
	602, 0, 0, 0, 264, 320, 271, 263, 575, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 399, 256, 0, 450,
	0, 0, 0, 620, 0, 0, 0, 0, 0, 0,
	0, 362, 0, 329, 197, 224, 0, 0, 409, 458,
	470, 0, 0, 0, 252, 0, 468, 423, 597, 232,
	283, 455, 429, 466, 437, 286, 0, 0, 467, 369,
	580, 447, 594, 621, 622, 262, 403, 607, 517, 615,
	639, 225, 259, 417, 502, 600, 491, 394, 576, 577,
	328, 490, 294, 201, 366, 627, 223, 476, 368, 241,
	230, 582, 604, 298, 288, 453, 634, 212, 512, 592,
	238, 480, 0, 0, 642, 246, 501, 214, 589, 500,
	390, 325, 326, 213, 0, 454, 267, 292, 0, 0,
	257, 412, 584, 585, 255, 643, 227, 614, 219, 0,
	613, 405, 579, 590, 391, 380, 218, 588, 389, 379,
	333, 352, 353, 279, 306, 444, 372, 445, 305, 307,
	401, 400, 402, 206, 601, 0, 207, 0, 496, 603,
	644, 449, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 302, 303, 312, 364, 416, 443, 439, 448, 0,
	574, 595, 608, 619, 625, 626, 628, 629, 630, 631,
	632, 635, 633, 404, 310, 492, 332, 370, 0, 0,
	422, 469, 239, 599, 493, 199, 0, 0, 0, 0,
	253, 254, 0, 570, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 640, 503, 509, 504, 505, 506, 507, 508, 0,
	510, 0, 0, 0, 0, 0, 395, 0, 586, 587,
	663, 381, 483, 596, 334, 346, 349, 339, 358, 0,
	359, 335, 336, 341, 343, 344, 345, 350, 351, 355,
	361, 248, 209, 387, 396, 573, 311, 215, 216, 217,
	519, 520, 521, 522, 611, 612, 616, 204, 459, 460,
	461, 462, 291, 606, 308, 465, 464, 330, 331, 376,
	446, 535, 537, 548, 552, 554, 556, 562, 565, 536,
	538, 549, 553, 555, 557, 563, 566, 525, 527, 529,
	531, 544, 543, 540, 568, 569, 546, 551, 530, 542,
	547, 560, 567, 564, 524, 528, 532, 541, 559, 558,
	539, 550, 561, 545, 533, 526, 534, 0, 196, 220,
	365, 0, 451, 287, 641, 610, 481, 605, 205, 222,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 208, 221, 231, 235, 242,
	260, 275, 277, 284, 297, 309, 317, 318, 321, 327,
	377, 383, 384, 385, 386, 406, 407, 408, 411, 414,
	415, 418, 420, 421, 424, 428, 432, 433, 434, 436,
	438, 440, 452, 457, 471, 472, 473, 474, 475, 478,
	479, 485, 486, 487, 488, 489, 497, 498, 511, 581,
	583, 598, 617, 623, 477, 300, 301, 441, 442, 313,
	314, 637, 638, 299, 593, 624, 591, 636, 618, 435,
	375, 0, 0, 378, 280, 304, 319, 0, 609, 499,
	226, 463, 289, 250, 0, 0, 210, 245, 229, 258,
	273, 276, 323, 388, 397, 426, 431, 295, 270, 243,
	456, 240, 482, 514, 515, 516, 518, 392, 265, 430,
	393, 0, 373, 571, 572, 315, 0, 523, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 363, 266, 0, 0, 427,
	0, 203, 0, 484, 251, 374, 371, 578, 281, 272,
	268, 249, 316, 382, 425, 513, 419, 0, 367, 0,
	0, 494, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 247,
	324, 202, 410, 495, 285, 0, 0, 0, 0, 0,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 244, 0, 0, 0, 348, 357, 356,
	337, 338, 340, 342, 347, 354, 360, 0, 0, 602,
	0, 0, 0, 264, 320, 271, 263, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 399, 256, 0, 450, 0,
	0, 0, 620, 0, 0, 0, 0, 0, 0, 0,
	362, 0, 329, 197, 224, 0, 0, 409, 458, 470,
	0, 0, 0, 252, 0, 468, 423, 597, 232, 283,
	455, 429, 466, 437, 286, 0, 0, 467, 369, 580,
	447, 594, 621, 622, 262, 403, 607, 517, 615, 639,
	225, 259, 417, 502, 600, 491, 394, 576, 577, 328,
	490, 294, 201, 366, 627, 223, 476, 368, 241, 230,
	582, 604, 298, 288, 453, 634, 212, 512, 592, 238,
	480, 0, 0, 642, 246, 501, 214, 589, 500, 390,
	325, 326, 213, 0, 454, 267, 292, 0, 0, 257,
	412, 584, 585, 255, 643, 227, 614, 219, 0, 613,
	405, 579, 590, 391, 380, 218, 588, 389, 379, 333,
	352, 353, 279, 306, 444, 372, 445, 305, 307, 401,
	400, 402, 206, 601, 0, 207, 0, 496, 603, 644,
	449, 211, 233, 234, 236, 0, 278, 282, 290, 293,
	302, 303, 312, 364, 416, 443, 439, 448, 0, 574,
	595, 608, 619, 625, 626, 628, 629, 630, 631, 632,
	635, 633, 404, 310, 492, 332, 370, 0, 0, 422,
	469, 239, 599, 493, 199, 0, 0, 0, 0, 253,
	254, 0, 570, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	640, 503, 509, 504, 505, 506, 507, 508, 0, 510,
	0, 0, 0, 0, 0, 395, 0, 586, 587, 663,
	381, 483, 596, 334, 346, 349, 339, 358, 0, 359,
	335, 336, 341, 343, 344, 345, 350, 351, 355, 361,
	248, 209, 387, 396, 573, 311, 215, 216, 217, 519,
	520, 521, 522, 611, 612, 616, 204, 459, 460, 461,
	462, 291, 606, 308, 465, 464, 330, 331, 376, 446,
	535, 537, 548, 552, 554, 556, 562, 565, 536, 538,
	549, 553, 555, 557, 563, 566, 525, 527, 529, 531,
	544, 543, 540, 568, 569, 546, 551, 530, 542, 547,
	560, 567, 564, 524, 528, 532, 541, 559, 558, 539,
	550, 561, 545, 533, 526, 534, 0, 196, 220, 365,
	0, 451, 287, 641, 610, 481, 605, 205, 222, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 309, 317, 318, 321, 327, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	485, 486, 487, 488, 489, 497, 498, 511, 581, 583,
	598, 617, 623, 477, 300, 301, 441, 442, 313, 314,
	637, 638, 299, 593, 624, 591, 636, 618, 435, 375,
	0, 0, 378, 280, 304, 319, 0, 609, 499, 226,
	463, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 323, 388, 397, 426, 431, 295, 270, 243, 456,
	240, 482, 514, 515, 516, 518, 392, 265, 430, 0,
	0, 373, 571, 572, 315,
}

var yyPact = [...]int{
	-1000, -1000, 6246, -1000, -533, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2412, 2452, -1000, -1000, -1000, -1000, 2613, -1000, 1038,
	2080, -1000, 2421, 5010, -1000, 56016, 504, -1000, 53100, -442,
	879, 252, 37062, -1000, 205, -1000, 190, 54558, 201, -1000,
	-1000, -1000, -1000, -442, 22482, 2336, 67, 64, 56016, -1000,
	-1000, -1000, -1000, -361, 2584, 1984, -1000, 399, -1000, -1000,
	-1000, -1000, -1000, -1000, 52371, -1000, 1123, -1000, -1000, 2411,
	2409, 2272, 950, 2300, -1000, 2508, 1984, -1000, 22482, 2563,
	2473, 21753, 21753, 452, -1000, -1000, 262, -1000, -1000, 31959,
	56016, 39978, 908, -1000, 2421, -1000, -1000, -1000, 185, -1000,
	356, 1927, -1000, 1919, -1000, 903, 1061, 393, 858, 838,
	388, 377, 375, 368, 360, 358, 357, 355, 406, -1000,
	973, 973, -204, -210, 1322, 438, 440, 440, 1137, 484,
	2364, 2359, -1000, -1000, 973, 973, 973, 381, 973, 973,
	973, 973, 323, 322, 973, 973, 973, 973, 973, 973,
	973, 973, 973, 973, 973, 973, 973, 973, 973, 973,
	973, 868, 2421, 287, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 56016, 198, 56016, -1000, 823, 503,
	-1000, -1000, -446, 1104, 1104, 89, 1104, 1104, 1104, 1104,
	207, 962, 56, -1000, 206, 273, 166, 289, 1098, 196,
	-1000, -1000, 276, 1098, 1804, -1000, 958, 284, 176, -1000,
	1104, 1104, -1000, 14439, 233, 14439, 14439, -1000, 2399, -1000,
	-1000, -1000, -1000, -1000, 1326, -1000, -1000, -1000, -1000, -15,
	472, -1000, -1000, -1000, -1000, 54558, 51642, 230, -1000, -1000,
	340, 1833, 1239, 22482, 1340, 918, -1000, -1000, 1379, 884,
	-1000, -1000, -1000, -1000, -1000, 522, -1000, 24669, 24669, 24669,
	24669, -1000, -1000, 1954, 50913, 1954, 1954, 24669, 1954, 24669,
	1954, 1954, 1954, 1954, 22482, 1954, 1954, 1954, 1954, -1000,
	1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,
	1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,
	1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,
	1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,
	1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,
	1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,
	1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,
	1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,
	1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,
	1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,
	1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,
	1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,
	1954, 1954, 1954, 1954, 1954, 1954, 1954, -1000, -1000, -1000,
	-1000, 1954, 807, 1954, 1954, 1954, 1954, 1954, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1954, 1954, 1954, 1954, 1954,
	1954, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,
	1954, 1954, 1954, 1954, -1000, -1000, -1000, 1693, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 27585, 1587, 1580, 1566, -1000,
	18837, 1954, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 56016, -1000, 1954, 226, 54558, 54558, 366,
	1366, -1000, -1000, 2508, 1984, -1000, 2584, 2540, 399, -1000,
	2486, 1495, 1582, 1417, 1984, 1862, 56016, -1000, 1997, -1000,
	-1000, -1000, -279, -281, 2222, 1476, 1803, -1000, -1000, -1000,
	-1000, 2814, 22482, -1000, -1000, 2601, -1000, 29043, 803, 2599,
	50184, -1000, 452, 452, 1900, 436, 30, -1000, -1000, -1000,
	-1000, 1001, 36333, -1000, -1000, -1000, -1000, -1000, 1799, 56016,
	-1000, -1000, 4211, 54558, -1000, 2076, -1000, 1794, -1000, 2026,
	22482, 1968, 501, 54558, 491, 490, 489, -1000, -53, -1000,
	-1000, -1000, -1000, -1000, -1000, 973, 973, 973, -1000, 402,
	2557, 5010, 8753, -1000, -1000, -1000, 49455, 2075, 54558, -1000,
	2074, -1000, 1069, 863, 846, 846, 54558, -1000, -1000, 55287,
	54558, 1068, 1066, 54558, 54558, 54558, 54558, -1000, 48726, -1000,
	47997, 47268, 1348, 54558, 46539, 45810, 45081, 44352, 43623, -1000,
	2282, -1000, 2128, -1000, -1000, -1000, 55287, 54558, 54558, 55287,
	54558, 55287, 56016, 54558, -1000, -1000, 363, -1000, -1000, 1347,
	1337, 1335, 973, 973, 1334, 1788, 1787, 1782, 973, 973,
	1332, 1780, 38520, 1779, 271, 1323, 1320, 1319, 1352, 1776,
	237, 1775, 1243, 1223, 1316, 54558, 2072, 56016, -1000, 266,
	963, 960, 996, 2421, 2327, 1898, 467, 494, 54558, 448,
	448, 54558, -1000, 15174, 56016, 227, -1000, 1760, 22482, -1000,
	1100, 1098, 1098, -1000, -1000, -1000, -1000, -1000, -1000, 1104,
	56016, 1100, -1000, -1000, -1000, 1098, 1104, 56016, 1104, 1104,
	1104, 1104, 1098, 1098, 1098, 1104, 56016, 56016, 56016, 56016,
	56016, 56016, 56016, 56016, 56016, 14439, 958, 1104, -447, -1000,
	1757, -1000, -1000, -1000, 2172, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 14439, 14439, -1000, -1000, -1000, -1000, -1000, 1886,
	-1000, 187, 14, 193, -1000, 42894, 435, 993, -1000, 435,
	-1000, -1000, -1000, 1877, 42165, -1000, -448, -453, -458, -459,
	-1000, -1000, -1000, -461, -462, -1000, -1000, -1000, 22482, 22482,
	22482, 22482, -269, -1000, 1284, 19566, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 22482, 260, 1179, 24669, 24669, 24669, 24669,
	24669, 24669, 24669, 26127, 25398, 24669, 24669, 24669, 24669, 24669,
	24669, -1000, -1000, 34146, 5117, 5117, 884, 884, 884, 884,
	-1000, -166, 1870, 55287, -1000, -1000, -1000, 800, 22482, 22482,
	884, -1000, 1374, 1285, 18837, 22482, 22482, 22482, 22482, 1026,
	1239, 55287, 22482, -1000, 1417, -1000, -1000, -1000, -1000, 1248,
	-1000, -1000, 1042, 2377, 2377, 2377, 2377, 22482, 22482, 22482,
	22482, 22482, 22482, 22482, 22482, 22482, 22482, 2377, 22482, 257,
	257, 646, 22482, 22482, 22482, 22482, 22482, 22482, 17379, 22482,
	22482, 24669, 22482, 22482, 22482, 1417, 22482, 22482, 22482, 22482,
	22482, 22482, 22482, 22482, 22482, 22482, 22482, 22482, 22482, 22482,
	22482, 22482, 22482, 22482, 22482, 22482, 22482, 22482, 22482, 22482,
	22482, 22482, 22482, 22482, 22482, 22482, 22482, 22482, 22482, 22482,
	22482, 22482, 22482, 22482, 22482, 22482, 22482, 22482, 22482, 22482,
	22482, 22482, 22482, 22482, 22482, 22482, 22482, 22482, 22482, 22482,
	22482, 22482, 22482, 22482, 22482, 22482, 22482, 22482, 22482, 22482,
	22482, 22482, 22482, 22482, 22482, 22482, 22482, 22482, 22482, 22482,
	22482, 22482, 22482, 22482, 22482, 1417, 22482, 1317, 22482, 22482,
	22482, 22482, 22482, 22482, 22482, 16644, 22482, 22482, 22482, 22482,
	22482, -1000, -1000, -1000, -1000, -1000, -1000, 22482, 22482, 22482,
	22482, 22482, 22482, 22482, 22482, 1417, 22482, 22482, 22482, 22482,
	22482, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1513, 1598, 1529, 22482, -1000, 1863, -1000, -189,
	31230, 22482, 1756, 2596, 2090, 54558, -1000, -1000, -1000, -1000,
	2508, -1000, 2508, 1513, 2301, 2225, 21753, -1000, -1000, 2301,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1759,
	-1000, 56016, 1862, 2459, 54558, -1000, -362, -1000, -363, 2217,
	1755, 837, -1000, 22482, 22482, 1861, -1000, 1771, 56016, -1000,
	-269, -1000, 41436, -1000, -1000, 13704, 56016, 347, 56016, -1000,
	30501, 40707, 278, -1000, 30, 1853, -1000, 32, 11, 18108,
	883, -1000, -1000, -1000, 1322, 26856, 1827, 883, 120, -1000,
	-1000, -1000, 2026, -1000, 2026, 2026, 2026, 2026, 837, 837,
	837, 837, -1000, -1000, -1000, -1000, -1000, 2068, 2063, -1000,
	2026, 2026, 2026, 2026, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2055, 2055, 2055, 2051, 2051, 2030, 2030, 437, -1000,
	22482, 380, 39978, 2462, 1315, 2174, 266, 450, 2065, 54558,
	54558, 54558, 450, -1000, 1471, 1448, 1443, -1000, -521, 1859,
	-1000, -1000, 2556, -1000, -1000, 922, 1094, 1093, 1109, 54558,
	235, 326, -1000, 427, -1000, 39978, 54558, 1059, 846, 54558,
	-1000, 54558, -1000, -1000, -1000, -1000, -1000, 54558, -1000, -1000,
	1858, -1000, 1881, 1170, 1088, 1169, 1081, 1858, -1000, -1000,
	-171, 1858, -1000, 1858, -1000, 1858, -1000, 1858, -1000, 1858,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 971,
	125, -355, 54558, 235, 464, -1000, 458, 34146, -1000, -1000,
	-1000, 34146, 34146, -1000, -1000, -1000, -1000, 1739, 1736, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -508, 56016,
	-1000, 250, 991, 339, 359, 300, 56016, 308, 2494, 2492,
	2491, 2487, 2475, 2474, 288, 321, 56016, 56016, 448, 2160,
	56016, 2433, 56016, -1000, -1000, -1000, -1000, -1000, 1718, 1711,
	-1000, 1239, 56016, -1000, -1000, 1104, 1104, -1000, -1000, 56016,
	1104, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1104,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 56016, -1000, -1000, -1000, -1000,
	-15, 182, -1000, -1000, 54558, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -104, -1000, 791, 25, 400, -1000,
	-1000, -1000, -1000, -1000, 2505, -1000, 1239, 1039, 1037, -1000,
	1954, -1000, -1000, 1227, -1000, -1000, -1000, -1000, -1000, 1954,
	1954, 1954, -1000, -1000, -1000, -1000, -1000, 260, 24669, 24669,
	24669, 1829, 815, 1421, 1581, 1201, 1224, 1224, 965, 24669,
	965, 24669, 889, 889, 889, 889, 889, -1000, -1000, -1000,
	-1000, -1000, -1000, 1693, -1000, 1690, -1000, 1954, 55287, 1754,
	16644, 1956, 2005, 1417, 913, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 3936, 1417, 1833, 1417, 2467,
	3919, 1017, -1000, 22482, 1417, 3902, -1000, -1000, 1417, 1417,
	22482, -1000, -1000, 22482, 22482, 22482, 22482, 2174, 2174, 2174,
	2174, 2174, 2174, 2174, 2174, 2174, 2174, 22482, 2174, 1857,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1855, 2594,
	1490, 2174, 2174, 2174, 2174, 2174, 22482, 1812, -1000, -1000,
	-1000, 1521, 3898, 1307, 3877, 2174, 2174, -1000, 2174, 3871,
	3867, 1417, 2797, 2793, 2174, 2174, 2174, 2174, 2174, 2760,
	2736, 2174, 2174, 2667, 2174, 3859, 2174, 2656, 2645, 2637,
	2576, 2562, 2548, 2543, 2538, 2534, 2529, 2511, 2504, 2472,
	2454, 2404, 2378, 2374, 2363, 2174, 2174, 2174, 3851, 2174,
	3546, 2174, 3538, 2174, 2174, 3533, 2331, 2304, 1417, 1854,
	-1000, 3523, 2174, 3502, 3486, 3474, 2296, 3454, 3439, 3434,
	2174, 2174, 2174, 2285, 3429, 3397, 3392, 3382, 3377, 3372,
	3364, 3357, 3333, 2174, 1529, 1529, 1529, 1529, 1529, 3328,
	-321, 2174, 1417, -1000, -1000, -1000, -1000, -1000, 3323, 2271,
	3318, 3307, 3238, 3088, 1417, 1954, 797, -1000, -1000, 1529,
	1417, 1417, 1529, 1529, 3072, 3038, 3031, 3015, 3007, 2988,
	2174, 2174, -1000, 2174, 2971, 2967, 2260, 2253, 1417, -1000,
	1529, 56016, -1000, -441, -1000, 5, 969, 1954, -1000, 38520,
	1417, -1000, 4085, -1000, 1136, -1000, -1000, -1000, -1000, -1000,
	35604, 1797, -1000, -1000, -1000, -1000, 1954, 1732, -1000, -1000,
	-1000, -1000, 837, 107, 34875, 876, 876, 132, 1239, 1239,
	22482, -1000, -1000, -1000, -1000, -1000, -1000, 796, 2573, 386,
	1954, -1000, 1893, 2679, -1000, -1000, -1000, 2455, 28314, -1000,
	-1000, 1954, 1954, 56016, 1802, 1793, -1000, 790, -1000, 1381,
	1853, 30, 2, -1000, -1000, -1000, -1000, 1239, -1000, 1377,
	353, 362, -1000, 431, -1000, -1000, -1000, -1000, 2347, 103,
	-1000, -1000, -1000, 333, 837, -1000, -1000, -1000, -1000, -1000,
	-1000, 1684, 1684, -1000, -1000, -1000, -1000, -1000, 1314, -1000,
	-1000, -1000, -1000, 1311, -1000, -1000, 1305, -1000, -1000, 2934,
	2100, 380, -1000, -1000, 973, 1677, -1000, -1000, 2351, 973,
	973, 54558, -1000, -1000, 1820, 2462, 250, 56016, 1031, 2152,
	-1000, 2065, 2065, 2065, 56016, -1000, -1000, -1000, -1000, -1000,
	-1000, -510, 177, 512, -1000, -1000, -1000, 7066, 54558, 1716,
	-1000, 229, -1000, 1815, -1000, 54558, -1000, 1709, 2050, 54558,
	54558, -1000, -1000, -1000, 54558, 1954, -1000, -1000, -1000, -1000,
	493, 2417, 320, -1000, -1000, -348, -1000, -1000, 235, 229,
	55287, 54558, 883, -1000, -1000, -1000, -1000, -1000, -511, 1705,
	486, 234, 473, 56016, 56016, 56016, 56016, 56016, 56016, 517,
	-1000, -1000, 44, -1000, -1000, 212, -1000, -1000, -1000, -1000,
	-1000, 212, -1000, -1000, -1000, -1000, -1000, 281, 455, -1000,
	56016, 56016, 930, -1000, -1000, -1000, -1000, -1000, 1098, -1000,
	-1000, 1098, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2397, 56016, 18, -478, -1000, -475, 22482, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1665, 502, 1421, 24669,
	24669, 1285, 1285, 24669, -1000, -1000, -1000, 985, 985, 34146,
	-1000, 24669, 22482, -1000, -1000, 22482, 22482, 22482, 1009, -1000,
	22482, 1146, -1000, 22482, -1000, -321, 1529, 2174, 2174, 2174,
	2174, -321, -321, -321, -321, -321, -321, -321, -321, -321,
	-321, 1875, -1000, 22482, 22482, 22482, 1417, 327, -1000, -1000,
	-1000, -1000, -1000, 2593, -1000, 22482, -1000, 34146, 22482, 22482,
	22482, -1000, -1000, -1000, 22482, 22482, -1000, -1000, 22482, -1000,
	22482, -1000, -1000, -1000, -1000, -1000, -1000, 22482, -1000, 22482,
	-1000, -1000, -1000, 22482, -1000, 22482, -1000, -1000, 22482, -1000,
	22482, -1000, 22482, -1000, 22482, -1000, 22482, -1000, 22482, -1000,
	22482, -1000, 22482, -1000, 22482, -1000, 22482, -1000, 22482, -1000,
	22482, -1000, 22482, -1000, 22482, -1000, 22482, -1000, 22482, -1000,
	22482, -1000, 22482, -1000, -1000, -1000, 22482, -1000, 22482, -1000,
	22482, -1000, -1000, 22482, -1000, 22482, -1000, 22482, -1000, 22482,
	22482, -1000, 22482, 22482, 22482, -1000, 22482, 22482, 22482, 22482,
	-1000, -1000, -1000, -1000, 22482, 22482, 22482, 22482, 22482, 22482,
	22482, 22482, 22482, 22482, -1000, -1000, -1000, -1000, -1000, -1000,
	22482, -1000, 39978, 12, -321, 1317, 12, 1317, 23940, 829,
	825, 23211, -1000, 22482, 15909, -1000, -1000, -1000, -1000, -1000,
	22482, 22482, 22482, 22482, 22482, 22482, -1000, -1000, -1000, 22482,
	22482, -1000, 22482, -1000, 22482, -1000, -1000, -1000, -1000, -1000,
	969, -1000, 456, 453, 846, 54558, -1000, -1000, -1000, -1000,
	1850, -1000, 2481, -1000, 2250, 2241, 2592, 2573, 21753, -1000,
	30501, -1000, -1000, 54558, -429, -1000, 2292, 2350, 876, 876,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 12969, 2508, 22482,
	2145, 55287, 258, -1000, 29772, 54558, 55287, 30501, 30501, 30501,
	30501, 30501, -1000, 2191, 2183, -1000, 2206, 2202, 2283, 56016,
	-1000, 1513, 1703, -1000, 22482, 32688, 1832, 30501, -1000, -1000,
	30501, 56016, 12234, -1000, -1000, 17, 6, -1000, -1000, -1000,
	-1000, 1322, -1000, -1000, 1155, 2451, 2334, -1000, -1000, -1000,
	-1000, -1000, 1699, -1000, 1697, 1848, 1682, 1675, 125, -1000,
	1961, 2379, 973, 973, -1000, 1295, -1000, 1374, 1670, 1669,
	-1000, -1000, -1000, 474, -1000, 2429, 56016, 2126, 2124, 2117,
	-1000, -527, 1266, 2046, 1934, 22482, 2037, 2553, 1841, 54558,
	-1000, -1000, 55287, -1000, 286, -1000, 380, 54558, -1000, -1000,
	-1000, 326, 56016, -1000, 9312, -1000, -1000, -1000, 229, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 56016, 279, -1000, 2036,
	1186, -1000, -1000, 1591, -1000, -1000, -1000, -1000, -1000, 221,
	218, 1637, 210, 1636, 210, -1000, 56016, 907, 2100, 56016,
	-1000, -1000, -1000, 1104, 1104, -1000, -1000, 2372, -1000, 1374,
	2174, 24669, 24669, -1000, 884, -1000, -1000, 379, -251, 2026,
	2026, -1000, 2026, 2030, -1000, 2026, 179, 2026, 178, 2026,
	-1000, -1000, 1417, 1417, -1000, 1529, 2239, 2227, 2950, -1000,
	1239, 22482, 2927, -1000, -1000, -321, -321, -321, -321, -321,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-61, 2923, 2910, 2174, -1000, 2022, 2016, 22482, 2174, 1417,
	2203, 2174, 2174, 2174, 2174, 2174, 2174, 2174, 2174, 2174,
	2174, 2174, 2174, 2178, 2168, 2163, 2157, 2146, 2138, 2121,
	2095, 2089, 2077, 2064, 2056, 2052, 2047, 2013, 1988, 2174,
	2174, 1975, 2174, 1971, 1967, -1000, 1239, 1529, 2899, 1529,
	2174, 2174, 2860, 318, 2174, 1633, 1633, 1633, 1633, 1633,
	1529, 1529, 1529, 1529, 2174, 54558, -1000, -321, -1000, -1000,
	-372, -373, -1000, 1417, -321, 1846, 24669, 2174, 24669, 24669,
	24669, 2174, 1417, -1000, 1963, 1951, 2834, 1938, 2174, 2435,
	2174, 2174, 2174, 1929, -1000, 2499, 1954, 2499, 1954, 2499,
	1612, 1136, 56016, -1000, -1000, -1000, -1000, 2573, 2571, -1000,
	1843, -1000, 107, 617, -1000, 2289, 2350, -1000, 2551, 2306,
	2547, -1000, -1000, -1000, -1000, -1000, 1239, -1000, 2380, 1831,
	-1000, 989, 1796, -1000, -1000, 21024, 1630, 2230, 772, 1612,
	1921, 2679, 2093, 2115, 3818, -1000, -1000, -1000, -1000, 2131,
	-1000, 2008, -1000, -1000, 1997, -1000, 2335, 347, 30501, 1830,
	1830, -1000, 765, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1132, 9312, 2628, -1000, 1609, -1000, 1373, 191, 1264, -1000,
	-1000, 973, 973, -1000, 1056, 1055, -1000, 56016, 2011, -1000,
	837, 1589, 837, 1263, -1000, -1000, 1237, -1000, -1000, -1000,
	-1000, 2042, 2215, -1000, -1000, -1000, -1000, 56016, -1000, -1000,
	56016, 56016, 56016, 2004, 2546, -1000, 22482, 2001, 974, 2806,
	54558, 54558, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 462, 973, -491, 306, 301, 973, 973,
	973, -528, -1000, -1000, 1605, 1603, -1000, -201, -1000, 22482,
	-1000, -1000, -1000, -1000, -1000, 1218, 1218, 1587, 1580, 1566,
	-1000, 1997, -1000, -1000, -1000, 1814, -1000, -1000, -176, 54558,
	54558, 54558, 54558, -1000, -1000, -1000, 1234, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 884,
	1417, 348, -181, 1417, -1000, -1000, 837, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 22482, -1000, 22482,
	-1000, 22482, 1239, 22482, -1000, -1000, -1000, -1000, -1000, 2508,
	1551, 22482, 22482, -1000, 1228, 1215, 2174, -1000, -1000, -1000,
	22482, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 22482, -1000, 22482, -1000, 22482, -1000,
	22482, -1000, 22482, -1000, 22482, -1000, 22482, -1000, 22482, -1000,
	22482, -1000, 22482, -1000, 22482, -1000, 22482, -1000, 22482, -1000,
	22482, -1000, 22482, -1000, 22482, -1000, -1000, 22482, -1000, -1000,
	-1000, 22482, -1000, 22482, -1000, 22482, -1000, -1000, -1000, 22482,
	285, 985, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1417, 335, -1000, -1000, -1000, 2578, -1000,
	1417, 22482, 1285, -1000, 1285, 1285, 1285, -1000, -1000, -1000,
	22482, -1000, 22482, 22482, -1000, 22482, -1000, 22482, -1000, -1000,
	-1000, -1000, 22482, 1954, 2226, 39249, 1954, 39249, 1954, 32688,
	-1000, -1000, 2571, 2566, 2544, 2259, 2267, 2267, 2289, -1000,
	2523, 2519, -1000, 1549, 2516, 1545, 1050, -1000, 55287, 22482,
	-1000, 258, 38520, -1000, 395, 54558, 258, 54558, -1000, 2549,
	-1000, -1000, 22482, 1999, -1000, 22482, -1000, -1000, -1000, -1000,
	5117, 2573, 1830, -1000, -1000, 895, -1000, 22482, -1000, 5012,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1539, 1525,
	-1000, -1000, 1998, 22482, -1000, -1000, -1000, 1808, 1807, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1997, -1000, -1000,
	-1000, -1000, 326, -518, 2776, 54558, 1211, -1000, 1601, 1841,
	330, 258, 1508, 973, 973, 973, 1188, 1185, 38520, 1597,
	-1000, 54558, 412, -1000, 326, -1000, -237, -244, 2174, -1000,
	-1000, 2444, -1000, -1000, 15909, -1000, -1000, 1993, 1976, -1000,
	-1000, -1000, -1000, 2213, -169, -198, -1000, -1000, 2174, 2174,
	2174, 2127, 1417, -1000, 2174, 2174, 1806, 1772, -1000, 2174,
	2174, 2174, 2174, 2174, 2174, 2174, 2174, 2174, 2174, 2174,
	2174, 2174, 2174, 2174, 2174, 2174, 2174, 2174, 2174, 1529,
	1878, -1000, 285, 1417, 2109, -1000, -1000, 5117, -1000, -1000,
	2549, 2514, 12, -1000, -1000, 236, 12, 1239, 1023, 1417,
	1417, 1023, 1818, 2174, 1673, 1635, 2174, 2174, 33417, -1000,
	2513, 2510, 1579, -1000, -1000, 39249, 1579, 39249, 969, 2566,
	-337, 22482, 22482, 2255, 1182, -1000, -1000, -1000, -1000, 1486,
	1466, -1000, 1445, -1000, 2624, -1000, 1239, -1000, 1954, 258,
	-1000, 538, 1796, -1000, 2508, 1239, 54558, 1239, 83, 2549,
	-1000, 2174, -1000, 1954, 1954, 1954, 1954, 1954, 1954, 1954,
	1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,
	1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,
	1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,
	1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,
	1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,
	1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,
	1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,
	1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,
	1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,
	1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,
	1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,
	1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,
	1954, 1954, -1000, -1000, 54558, 2587, -1000, -1000, 2438, 1595,
	165, -1000, 1496, 1841, -1000, -1000, 243, -1000, 22482, -1000,
	38520, 1425, 1423, -1000, -1000, -1000, -1000, -528, -1000, -1000,
	-1000, -1000, -1000, -1000, 399, 1840, -1000, 970, 54558, 56016,
	-1000, 2197, -1000, -1000, -1000, -1000, 22482, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 22482, -1000, 1417, 2104, -1000, -360,
	-1000, -490, 22482, -321, -1000, -1000, -321, -1000, -1000, -1000,
	-1000, -1000, 22482, -1000, -1000, 22482, -1000, 22482, -1000, -1000,
	1579, -1000, -1000, -1000, 37791, -1000, 1579, -1000, 1579, -1000,
	-337, -1000, 1839, -1000, 54558, 1239, 329, -1000, 1160, -1000,
	-1000, -1000, -1000, -1000, 55287, 54558, 1796, 54558, -1000, -1000,
	1537, 1417, 1954, 2508, -1000, 1535, -1000, 399, -1000, 1962,
	1934, -1000, -1000, -1000, 20295, -1000, -1000, -1000, -1000, -1000,
	297, -173, 15909, 11499, 1533, -1000, -172, 2174, 1529, -1000,
	-468, -1000, -1000, -1000, -1000, 280, -1000, -1000, 1833, -1000,
	-1000, 1516, 1439, 1434, -1000, -1000, -1000, -1000, -1000, -1000,
	-337, -1000, -1000, 2418, -1000, -265, -1000, -1000, 1761, 1518,
	-1000, -1000, -1000, 32688, 53829, -1000, -164, 346, -173, 22482,
	1955, 1417, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-40, -1000, -1000, 519, -1000, -1000, -1000, 1591, -182, -1000,
	-1000, -1000, 294, -482, -252, -267, 24669, -1000, 22482, -1000,
	22482, -1000, 22482, -1000, 54558, 1954, -1000, -1000, -1000, 1512,
	-1000, 4164, -384, 2103, -1000, -136, -1000, -1000, -1000, 1112,
	1413, -1000, -1000, -1000, -1000, -1000, -1000, 2567, 54558, -1000,
	433, -1000, -1000, 15174, -176, -199, 1033, -1000, -1000, -1000,
	-1000, -1000, 1285, 1416, 1298, 2174, -1000, 54558, -1000, 53829,
	-379, 883, 5117, -1000, 2099, 2097, 2591, -1000, -1000, -1000,
	-1000, -1000, -1000, -530, 1483, 263, -1000, -1000, -1000, 294,
	-284, -1000, 22482, -1000, 22482, -1000, 1417, -1000, -1000, 2427,
	83, -1000, 2622, -1000, 2607, 1022, 1022, -1000, 1156, -530,
	-1000, -1000, -1000, -1000, 2174, 2174, -1000, -385, -1000, -1000,
	-1000, -1000, -1000, 418, 1193, -1000, -1000, -1000, -1000, -1000,
	5117, -1000, -1000, -1000, 204, 204, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3287, 3239, 31, 6, 40, 39, 3236, 3231, 3221,
	176, 3217, 3215, 3214, 3212, 3208, 3207, 2661, 2644, 2643,
	3206, 3204, 3203, 3202, 3199, 3188, 3187, 3186, 3183, 45,
	94, 32, 102, 231, 211, 3174, 174, 170, 201, 3173,
	3172, 3171, 119, 192, 81, 89, 197, 3169, 3166, 74,
	3165, 3164, 3158, 191, 188, 187, 1060, 3157, 189, 112,
	51, 3156, 3155, 3152, 3150, 3148, 3146, 3144, 3143, 3142,
	3140, 3138, 3137, 3136, 3133, 3130, 3128, 3126, 3125, 283,
	3124, 3123, 12, 3121, 76, 3120, 3119, 3116, 3112, 3110,
	8, 3109, 3108, 26, 42, 64, 3107, 3105, 49, 3099,
	3090, 3089, 3084, 3083, 71, 3082, 25, 3077, 41, 3075,
	3072, 128, 3066, 3061, 3060, 44, 3059, 3055, 3052, 30,
	172, 3051, 3050, 143, 3049, 3047, 3040, 171, 230, 3039,
	2262, 3037, 97, 3036, 3033, 3027, 169, 199, 3020, 125,
	3017, 3016, 3015, 150, 3013, 3282, 3012, 3010, 69, 78,
	166, 3009, 3008, 198, 77, 57, 3005, 17, 18, 3003,
	3002, 70, 66, 2989, 124, 2988, 2987, 103, 98, 2986,
	111, 106, 2985, 2984, 5, 7, 2977, 1, 4, 2,
	62, 2974, 2973, 109, 2970, 2959, 2948, 93, 2947, 2946,
	460, 2942, 85, 132, 101, 63, 2936, 168, 155, 2933,
	2932, 2924, 2921, 2915, 52, 2911, 2909, 2908, 142, 24,
	113, 2901, 146, 352, 54, 156, 2895, 196, 79, 203,
	175, 2879, 2877, 138, 137, 2871, 2869, 59, 163, 193,
	2866, 92, 133, 117, 181, 91, 140, 2865, 2857, 58,
	67, 2856, 2850, 2849, 2843, 185, 2842, 2841, 61, 2840,
	56, 2839, 173, 2836, 336, 96, 2834, 180, 162, 2833,
	68, 2832, 2830, 72, 100, 129, 29, 2829, 161, 165,
	130, 194, 2824, 2823, 55, 2822, 2821, 2820, 200, 342,
	2819, 2816, 331, 178, 144, 154, 82, 2815, 261, 2812,
	2809, 13, 5106, 7253, 186, 22, 167, 2808, 2806, 7593,
	43, 50, 23, 2805, 205, 2804, 184, 2798, 2796, 2795,
	202, 217, 105, 164, 60, 2794, 2793, 2790, 2782, 36,
	2779, 2776, 2775, 2772, 2771, 2768, 38, 37, 34, 75,
	216, 65, 20, 95, 158, 157, 73, 2766, 2765, 2762,
	126, 83, 2760, 160, 159, 127, 104, 2757, 179, 147,
	123, 2754, 115, 33, 2746, 2745, 2744, 2743, 90, 2742,
	2741, 2739, 2738, 153, 148, 121, 84, 2735, 87, 114,
	151, 149, 53, 2732, 46, 2730, 2727, 28, 195, 27,
	2724, 19, 108, 116, 2721, 6374, 2719, 9, 262, 152,
	2718, 2716, 10, 11, 14, 2712, 2710, 2693, 2691, 136,
	2688, 2686, 2683, 2674, 21, 47, 16, 15, 110, 141,
	80, 2672, 2665, 145, 2663, 2656, 2652, 0, 1031, 131,
	2645, 204,
}

//line sql.y:8667
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) groupByUnion() *GroupBy {
	v, _ := st.union.(*GroupBy)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) intPtrUnion() *int {
	v, _ := st.union.(*int)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalType {
	v, _ := st.union.(IntervalType)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) killTypeUnion() KillType {
	v, _ := st.union.(KillType)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) rowAliasUnion() *RowAlias {
	v, _ := st.union.(*RowAlias)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 415, 416, 416, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 260, 385, 258, 258, 28, 74, 36, 36, 35,
	35, 38, 38, 37, 31, 31, 31, 32, 32, 32,
	32, 32, 32, 32, 32, 33, 33, 33, 33, 33,
	29, 29, 29, 29, 30, 30, 30, 30, 30, 15,
	16, 34, 34, 17, 17, 109, 109, 18, 19, 19,
	19, 19, 419, 419, 185, 185, 183, 183, 184, 184,
	263, 263, 20, 267, 267, 269, 269, 269, 269, 259,
	259, 259, 21, 21, 268, 268, 270, 270, 270, 273,
	273, 273, 273, 313, 313, 313, 22, 22, 22, 22,
	22, 129, 129, 387, 387, 386, 381, 381, 380, 380,
	379, 384, 384, 383, 383, 382, 40, 41, 50, 50,
	50, 50, 51, 52, 388, 388, 354, 57, 57, 56,
	56, 56, 56, 56, 56, 58, 58, 54, 54, 53,
	53, 55, 55, 356, 356, 342, 342, 355, 355, 355,
	355, 355, 355, 355, 341, 341, 140, 140, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 403, 403, 403, 402, 402,
	238, 238, 238, 238, 238, 238, 238, 238, 149, 149,
	161, 161, 161, 161, 161, 161, 147, 147, 148, 146,
	146, 146, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 407,
	407, 407, 407, 407, 407, 407, 407, 407, 407, 407,
	407, 407, 407, 407, 407, 407, 407, 407, 407, 407,
	407, 407, 407, 407, 407, 407, 407, 407, 407, 407,
	407, 407, 407, 407, 407, 407, 407, 407, 407, 407,
	407, 160, 160, 155, 155, 155, 157, 157, 156, 156,
	156, 158, 158, 404, 404, 404, 404, 319, 319, 319,
	319, 322, 322, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 321, 321, 321, 321, 321, 321, 321, 323,
	323, 323, 323, 323, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	325, 325, 325, 325, 325, 325, 325, 325, 340, 340,
	329, 329, 334, 334, 335, 335, 336, 336, 336, 337,
	337, 337, 338, 338, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 333, 333, 332, 332, 332, 343, 368,
	368, 367, 367, 365, 365, 365, 365, 365, 365, 365,
	365, 352, 352, 362, 362, 362, 362, 362, 351, 351,
	347, 347, 347, 348, 348, 349, 349, 346, 346, 350,
	350, 364, 364, 363, 363, 344, 344, 345, 345, 370,
	405, 405, 405, 405, 405, 406, 406, 371, 395, 397,
	397, 397, 396, 396, 393, 394, 392, 392, 392, 392,
	392, 84, 84, 84, 286, 286, 287, 287, 360, 360,
	359, 359, 359, 361, 361, 358, 358, 358, 358, 358,
	358, 358, 358, 358, 358, 358, 358, 358, 358, 358,
	358, 358, 358, 358, 358, 358, 358, 358, 358, 358,
	358, 358, 358, 358, 358, 358, 281, 281, 281, 391,
	391, 391, 391, 391, 391, 390, 390, 390, 357, 357,
	357, 357, 389, 389, 59, 59, 218, 218, 408, 408,
	410, 410, 410, 47, 47, 47, 47, 47, 47, 46,
	46, 46, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 48, 48, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 111, 111, 112,
	112, 112, 112, 114, 114, 114, 373, 373, 60, 60,
	3, 3, 173, 175, 176, 176, 174, 174, 174, 174,
	174, 174, 62, 62, 61, 61, 178, 177, 179, 179,
	179, 1, 1, 2, 2, 4, 4, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 339,
	339, 339, 372, 372, 374, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 117, 116, 116, 115, 118,
	118, 118, 118, 118, 118, 118, 118, 376, 376, 376,
	63, 63, 377, 326, 327, 328, 5, 6, 353, 375,
	125, 125, 24, 39, 39, 25, 25, 25, 25, 26,
	26, 64, 67, 67, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 280, 280, 289,
	289, 279, 279, 304, 304, 304, 282, 282, 282, 283,
	283, 401, 401, 401, 276, 276, 66, 66, 66, 305,
	305, 305, 305, 69, 69, 411, 411, 412, 412, 413,
	413, 413, 70, 71, 71, 308, 308, 309, 309, 72,
	73, 85, 85, 85, 85, 85, 86, 86, 86, 86,
	110, 110, 110, 10, 10, 10, 10, 81, 81, 81,
	9, 9, 11, 68, 68, 75, 398, 398, 399, 400,
	400, 400, 400, 76, 78, 27, 27, 27, 27, 27,
	27, 135, 135, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 130, 130, 130, 124, 124,
	420, 79, 80, 80, 128, 128, 128, 121, 121, 121,
	127, 127, 127, 12, 12, 13, 262, 262, 14, 14,
	134, 134, 133, 133, 136, 136, 136, 136, 136, 136,
	136, 131, 131, 132, 132, 132, 132, 297, 297, 297,
	296, 296, 167, 167, 169, 168, 168, 170, 170, 171,
	171, 171, 171, 216, 216, 193, 193, 255, 255, 256,
	256, 254, 254, 261, 261, 257, 257, 257, 257, 264,
	264, 172, 172, 172, 172, 180, 180, 181, 181, 182,
	182, 307, 307, 302, 302, 302, 301, 301, 186, 186,
	186, 188, 187, 187, 187, 187, 189, 189, 191, 191,
	190, 190, 192, 197, 197, 196, 196, 194, 194, 194,
	194, 194, 194, 195, 195, 195, 195, 198, 198, 145,
	145, 145, 145, 145, 145, 145, 145, 409, 409, 159,
	159, 159, 159, 159, 159, 159, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 245, 245, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 221,
	221, 220, 220, 87, 87, 87, 88, 88, 89, 89,
	89, 89, 89, 90, 90, 90, 90, 90, 90, 90,
	92, 92, 91, 91, 211, 211, 294, 294, 93, 94,
	94, 95, 95, 98, 98, 97, 96, 96, 102, 102,
	99, 99, 101, 101, 100, 103, 103, 104, 105, 105,
	277, 277, 199, 199, 207, 207, 207, 207, 200, 200,
	200, 200, 200, 200, 200, 208, 208, 208, 215, 209,
	209, 205, 205, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 164, 164, 164, 164, 226,
	226, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 152, 152, 165, 165,
	165, 165, 166, 166, 166, 166, 166, 166, 166, 315,
	315, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 421,
	421, 330, 330, 330, 206, 206, 206, 206, 206, 126,
	126, 126, 126, 126, 312, 312, 312, 316, 316, 316,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 317, 317, 224, 224, 122,
	122, 222, 222, 223, 225, 225, 217, 217, 217, 217,
	219, 219, 202, 202, 202, 227, 227, 318, 318, 228,
	228, 106, 107, 107, 108, 108, 229, 229, 231, 230,
	230, 232, 233, 233, 233, 234, 234, 235, 235, 235,
	49, 49, 49, 49, 49, 44, 44, 44, 44, 45,
	45, 45, 45, 137, 137, 137, 137, 139, 139, 138,
	138, 82, 82, 83, 83, 83, 143, 143, 144, 144,
	144, 141, 141, 142, 142, 252, 252, 252, 252, 252,
	252, 252, 236, 236, 236, 243, 243, 243, 239, 239,
	241, 241, 241, 242, 242, 242, 240, 249, 249, 251,
	251, 250, 250, 246, 246, 247, 247, 248, 248, 248,
	244, 244, 201, 201, 201, 201, 201, 253, 253, 253,
	253, 306, 306, 306, 265, 265, 212, 212, 214, 214,
	213, 213, 163, 266, 266, 274, 271, 271, 272, 272,
	298, 298, 298, 275, 275, 288, 288, 284, 284, 285,
	285, 278, 278, 290, 290, 290, 77, 210, 210, 369,
	369, 366, 293, 293, 295, 295, 299, 299, 303, 303,
	300, 300, 8, 414, 414, 414, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 417, 418, 310, 311, 311, 311,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 1, 2, 3, 2, 3, 0,
	1, 3, 1, 4, 3, 3, 4, 3, 2, 3,
	4, 3, 4, 2, 7, 1, 3, 3, 3, 3,
	1, 2, 1, 1, 3, 2, 3, 3, 2, 5,
	7, 10, 9, 7, 8, 1, 1, 10, 11, 9,
	8, 8, 1, 1, 1, 3, 1, 3, 1, 3,
	0, 4, 3, 1, 3, 3, 3, 3, 3, 1,
	1, 2, 5, 4, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 2, 2, 6, 12,
	2, 0, 2, 0, 2, 1, 0, 2, 1, 3,
	3, 0, 1, 1, 3, 3, 6, 4, 7, 8,
	8, 8, 6, 3, 1, 1, 5, 0, 1, 1,
	1, 1, 2, 2, 2, 0, 1, 4, 4, 4,
	4, 4, 4, 2, 4, 1, 3, 1, 1, 3,
	4, 3, 3, 3, 5, 10, 0, 2, 0, 2,
	3, 5, 3, 4, 2, 3, 2, 3, 3, 3,
	3, 2, 2, 4, 4, 1, 1, 1, 1, 1,
	0, 2, 2, 3, 3, 2, 2, 2, 1, 1,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 5, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 5, 1, 3, 0, 3, 5, 0,
	1, 1, 0, 1, 0, 3, 3, 2, 2, 2,
	1, 2, 2, 0, 1, 0, 2, 2, 5, 0,
	1, 1, 2, 1, 3, 2, 1, 1, 3, 3,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 4, 3, 1, 3, 1, 7,
	6, 7, 7, 8, 8, 0, 1, 5, 2, 1,
	1, 1, 0, 1, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 1, 1, 2, 0, 1, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	1, 1, 0, 1, 0, 1, 0, 2, 0, 2,
	0, 2, 2, 0, 1, 5, 1, 3, 7, 1,
	3, 3, 1, 2, 2, 2, 5, 5, 5, 6,
	8, 5, 5, 4, 4, 4, 6, 5, 5, 5,
	2, 2, 2, 2, 3, 3, 3, 4, 3, 3,
	1, 3, 5, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 3, 4, 4, 2, 11,
	3, 6, 8, 6, 6, 6, 13, 8, 6, 6,
	10, 7, 5, 5, 5, 7, 5, 5, 5, 5,
	5, 7, 7, 5, 5, 5, 5, 0, 6, 5,
	6, 4, 5, 0, 8, 9, 0, 3, 0, 1,
	0, 3, 8, 4, 1, 3, 3, 6, 7, 7,
	8, 4, 0, 1, 0, 1, 3, 3, 1, 1,
	2, 1, 1, 0, 2, 0, 2, 5, 3, 7,
	4, 4, 4, 4, 3, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 0,
	2, 2, 1, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 3, 1, 3, 3, 0,
	2, 2, 2, 2, 2, 2, 2, 4, 4, 3,
	0, 1, 4, 3, 4, 4, 3, 3, 3, 2,
	1, 3, 3, 3, 5, 7, 7, 6, 5, 3,
	2, 4, 5, 5, 3, 3, 7, 3, 3, 3,
	3, 4, 7, 5, 2, 4, 4, 4, 4, 4,
	5, 5, 4, 4, 4, 4, 4, 4, 4, 4,
	2, 2, 4, 4, 4, 4, 4, 2, 3, 3,
	3, 3, 3, 5, 2, 3, 3, 2, 3, 4,
	4, 4, 3, 4, 4, 5, 3, 0, 1, 0,
	1, 1, 1, 0, 2, 2, 0, 2, 2, 0,
	2, 0, 1, 1, 1, 1, 2, 1, 3, 1,
	1, 1, 1, 1, 3, 0, 1, 1, 3, 3,
	2, 2, 1, 1, 5, 0, 1, 0, 1, 2,
	3, 0, 3, 3, 3, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	4, 4, 4, 2, 2, 3, 1, 3, 2, 1,
	2, 1, 2, 2, 4, 3, 3, 6, 4, 7,
	6, 1, 3, 2, 2, 2, 2, 1, 1, 1,
	3, 2, 1, 1, 1, 0, 1, 1, 0, 3,
	0, 2, 0, 2, 1, 2, 2, 0, 1, 1,
	0, 1, 1, 5, 5, 4, 0, 2, 4, 4,
	0, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 1, 0, 1, 2, 1, 3, 1, 1, 1,
	4, 3, 1, 1, 2, 3, 7, 0, 3, 0,
	1, 1, 3, 1, 3, 1, 1, 3, 3, 1,
	3, 4, 4, 4, 3, 2, 4, 0, 1, 0,
	2, 0, 1, 0, 1, 2, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 2, 2, 2, 1,
	1, 3, 3, 0, 1, 1, 2, 6, 5, 6,
	6, 5, 5, 0, 2, 3, 3, 0, 2, 3,
	3, 3, 2, 3, 1, 3, 6, 1, 1, 3,
	4, 3, 4, 4, 4, 1, 3, 4, 5, 6,
	3, 4, 5, 6, 3, 4, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 5, 5, 3, 3, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 3, 1,
	1, 1, 2, 2, 2, 2, 1, 1, 2, 7,
	7, 6, 6, 2, 2, 5, 6, 3, 3, 1,
	3, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 4, 2, 4,
	0, 1, 2, 5, 0, 3, 0, 1, 4, 4,
	2, 1, 0, 0, 1, 1, 2, 2, 1, 1,
	2, 2, 0, 1, 1, 1, 1, 5, 1, 3,
	0, 3, 1, 1, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 6, 4, 4, 8, 8, 6, 8, 6,
	5, 4, 10, 2, 2, 1, 2, 2, 2, 2,
	2, 5, 6, 6, 6, 6, 6, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 8, 4, 8,
	8, 6, 5, 4, 4, 4, 4, 4, 7, 4,
	4, 6, 6, 6, 8, 6, 6, 4, 4, 3,
	4, 6, 6, 4, 4, 6, 4, 6, 4, 4,
	4, 4, 4, 4, 6, 4, 6, 4, 4, 4,
	6, 4, 6, 4, 4, 6, 4, 6, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 4, 4, 6,
	4, 6, 4, 8, 6, 4, 4, 6, 4, 6,
	8, 4, 6, 8, 4, 4, 6, 8, 6, 4,
	6, 6, 8, 10, 7, 8, 8, 9, 4, 4,
	4, 4, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 4, 4, 4, 4, 4, 4, 6, 4,
	6, 5, 9, 6, 9, 8, 6, 8, 8, 8,
	6, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	2, 6, 8, 10, 12, 14, 6, 8, 8, 10,
	12, 14, 6, 8, 10, 12, 6, 8, 4, 4,
	3, 4, 6, 6, 4, 6, 4, 6, 8, 0,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	2, 0, 2, 3, 4, 4, 4, 4, 4, 0,
	3, 4, 7, 3, 1, 1, 1, 0, 5, 5,
	2, 3, 1, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 2, 1, 1, 0, 1, 0, 1, 0,
	2, 1, 2, 4, 0, 2, 1, 1, 3, 5,
	1, 1, 1, 2, 2, 0, 4, 0, 2, 0,
	2, 2, 1, 3, 0, 1, 0, 1, 3, 1,
	3, 2, 0, 1, 1, 0, 1, 2, 4, 4,
	0, 2, 2, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 0, 3, 3, 3, 0, 3, 1,
	1, 0, 4, 0, 1, 1, 0, 3, 1, 3,
	2, 1, 1, 0, 1, 2, 3, 4, 2, 3,
	4, 4, 9, 3, 5, 0, 3, 3, 0, 1,
	0, 2, 2, 0, 2, 2, 2, 0, 2, 1,
	2, 3, 3, 0, 2, 1, 2, 3, 4, 3,
	0, 1, 3, 1, 6, 5, 4, 1, 3, 3,
	5, 0, 2, 5, 0, 5, 1, 3, 1, 2,
	3, 4, 1, 1, 3, 3, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 0, 2, 0,
	3, 0, 1, 0, 1, 1, 5, 0, 1, 0,
	1, 2, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -415, -79, -420, -7, -29, -15, -16, -17, -18,
	-19, -20, -21, -22, -23, -24, -25, -26, -64, -67,
	-65, -66, -69, -70, -71, -72, -73, -9, -11, -68,
	-27, -28, -74, -75, -76, -77, -78, -12, -13, -14,
	-8, -32, -31, -30, 11, 12, -109, -35, 36, -40,
	-50, 231, -51, -41, 232, -52, 234, 233, 271, 235,
	384, 264, 78, 320, 321, 323, 324, 325, 326, -110,
	691, 269, 270, 237, 40, 49, 37, 38, 41, 241,
	277, 278, 240, 137, -33, -36, 10, -417, 13, 474,
	266, 265, 32, -34, 584, 90, -80, -416, 739, -252,
	-236, 24, 37, 33, -235, -231, -128, -236, 22, 20,
	9, -79, -79, -79, 14, 15, -79, -354, -356, 90,
	164, 90, -79, -57, -56, -54, -53, -55, -58, 35,
	-47, -48, -378, -46, -43, 236, 233, 281, 127, 128,
	271, 272, 273, 235, 255, 270, 274, 269, 290, -42,
	85, 37, 584, 587, -361, 232, 238, 239, 234, 475,
	130, 129, 79, -358, 379, 618, 709, -58, 711, 104,
	107, 710, 48, 245, 712, 713, 714, 625, 715, 254,
	716, 717, 718, 719, 725, 666, 726, 727, 728, 131,
	9, -79, -303, -299, 94, -292, 581, 257, 616, 428,
	617, 306, 85, 45, 520, 591, 376, 379, 618, 505,
	709, 385, 320, 336, 330, 510, 511, 512, 359, 351,
	582, 619, 592, 309, 258, 294, 703, 349, 140, 711,
	313, 620, 272, 386, 387, 621, 388, 104, 323, 425,
	724, 312, 622, 722, 107, 710, 328, 83, 504, 55,
	706, 48, 267, 433, 434, 347, 240, 343, 712, 295,
	623, 594, 288, 130, 127, 731, 40, 339, 54, 34,
	721, 129, 53, 713, 155, 624, 714, 625, 390, 366,
	697, 52, 391, 273, 626, 88, 278, 586, 317, 705,
	392, 525, 340, 393, 305, 720, 237, 627, 316, 686,
	678, 679, 394, 395, 698, 371, 367, 372, 527, 628,
	417, 509, 396, 682, 683, 738, 56, 629, 630, 699,
	128, 631, 82, 715, 84, 334, 335, 632, 303, 256,
	530, 531, 419, 363, 487, 494, 495, 114, 115, 490,
	116, 496, 117, 497, 498, 499, 488, 118, 111, 489,
	500, 501, 364, 365, 119, 502, 113, 112, 491, 493,
	120, 503, 254, 39, 397, 583, 307, 62, 311, 282,
	420, 50, 369, 735, 49, 693, 532, 633, 696, 362,
	358, 484, 57, 634, 635, 636, 637, 506, 716, 361,
	333, 357, 730, 4, 300, 479, 507, 717, 66, 239,
	374, 373, 375, 289, 416, 354, 638, 639, 640, 261,
	86, 641, 344, 23, 642, 643, 398, 296, 644, 60,
	645, 646, 423, 270, 647, 58, 718, 43, 648, 275,
	732, 719, 649, 650, 651, 692, 652, 277, 653, 400,
	654, 680, 681, 399, 368, 370, 533, 284, 401, 384,
	242, 585, 655, 318, 338, 274, 723, 656, 262, 521,
	522, 523, 524, 704, 529, 528, 276, 281, 269, 424,
	263, 657, 658, 659, 660, 661, 310, 677, 662, 663,
	324, 589, 725, 485, 47, 664, 665, 666, 667, 668,
	304, 299, 418, 427, 65, 87, 381, 669, 670, 702,
	332, 329, 297, 465, 467, 468, 469, 470, 471, 466,
	473, 671, 321, 59, 726, 727, 728, 291, 729, 513,
	514, 515, 516, 11, 567, 550, 578, 551, 568, 552,
	561, 553, 569, 577, 579, 534, 542, 535, 543, 573,
	556, 570, 562, 555, 554, 576, 559, 563, 536, 544,
	574, 560, 537, 545, 538, 546, 539, 547, 572, 571,
	564, 575, 540, 548, 566, 541, 549, 565, 557, 558,
	436, 736, 737, 508, 403, 131, 301, 302, 51, 355,
	283, 672, 314, 673, 345, 346, 481, 482, 360, 331,
	356, 689, 322, 687, 285, 404, 486, 271, 674, 426,
	298, 377, 123, 382, 315, 590, 526, 290, 405, 701,
	588, 517, 518, 353, 350, 292, 519, 675, 691, 406,
	246, 286, 287, 676, 688, 407, 408, 308, 409, 410,
	411, 412, 413, 415, 319, 414, 690, 684, 685, 293,
	464, 587, 327, 348, 383, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 460,
	461, 462, 463, 483, 244, -79, 244, -190, -299, -130,
	693, 695, 183, -271, 387, -289, 389, 402, 397, 407,
	395, -280, 398, 400, 284, -401, 417, 244, 404, 231,
	390, 399, 408, 409, 308, 415, 410, 319, 414, 293,
	411, 412, 413, -385, 183, 714, 729, 140, 352, 394,
	392, 418, 693, 94, -305, 94, 95, 96, -292, 322,
	-308, 327, -293, -385, -292, 325, -79, -79, -310, -310,
	-130, -209, -145, 148, -159, -260, -162, 95, -150, -153,
	-203, -204, -205, -206, -160, -219, -258, 172, 173, 180,
	149, -215, -163, 30, 580, 476, 475, 183, 35, 226,
	72, 73, 478, 479, 151, 61, 13, 441, 442, -161,
	431, 432, 443, 437, 438, 504, 506, 507, 508, 505,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	509, 520, 481, 482, 121, 483, 111, 113, 112, 484,
	485, 486, 349, 532, 533, 527, 530, 531, 529, 528,
	364, 365, 487, 550, 551, 555, 554, 552, 553, 556,
	559, 560, 561, 562, 563, 564, 566, 565, 557, 558,
	535, 534, 536, 537, 538, 539, 540, 541, 543, 542,
	544, 545, 546, 547, 548, 549, 567, 568, 569, 570,
	571, 573, 572, 577, 576, 574, 575, 579, 578, 488,
	489, 114, 115, 116, 117, 118, 119, 120, 490, 493,
	491, 492, 494, 495, 496, 501, 502, 497, 498, 499,
	500, 503, 375, 373, 374, 370, 369, 368, -89, -102,
	607, 606, -103, 428, 433, 434, 436, -151, -152, -165,
	-166, -293, -299, 249, 430, 243, 178, 474, -154, -148,
	-217, 110, 96, -31, -213, 429, 439, 440, 444, 435,
	445, 593, 595, 610, 611, 613, 598, 603, 602, 605,
	521, 522, 523, 524, 525, 526, 678, 679, 680, 681,
	682, 683, 684, 685, -385, -292, 94, -157, -155, -199,
	97, 102, 105, 106, 108, -407, 267, 345, 346, 122,
	-417, 707, -156, 99, 100, 101, 124, 125, 184, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	93, 98, 48, 403, 403, -190, -79, -79, -79, -79,
	-414, 710, 585, -229, -128, -231, -33, -31, -417, 10,
	-79, -31, -32, -30, -36, -38, 612, -37, -299, 103,
	-236, -252, 14, 65, 167, 46, 54, -234, -235, -34,
	-31, -145, 21, 25, 28, -132, 174, -145, -299, -132,
	-278, 248, -79, -79, -267, -313, 322, -269, 418, 693,
	417, -259, -272, 94, -258, -271, 416, 95, -355, 164,
	-341, -345, -293, 259, -371, 255, -190, -364, -363, -293,
	-417, -129, -288, 245, 253, 252, 141, -388, 144, 301,
	430, 243, -53, -54, -55, -271, 182, 713, -111, 276,
	280, 91, 91, -345, -344, -343, -389, 280, 259, -370,
	-362, 251, 260, -351, 252, 253, -346, 245, 142, -389,
	-346, 250, 260, 255, 259, 280, 280, 131, 280, 131,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 275,
	-352, 156, -352, 588, 588, -358, -389, 255, 245, -389,
	-389, 251, -290, -346, 247, 29, 247, 39, 39, -352,
	-352, -352, -271, 182, -352, -352, -352, -352, 288, 288,
	-352, -352, -352, -352, -352, -352, -352, -352, -352, -352,
	-352, -352, -352, -352, -352, -352, -352, 244, -388, -137,
	414, 308, 85, -56, 290, -39, -190, -288, 245, 246,
	-388, 277, -190, 227, 244, 696, -282, 164, 17, -282,
	-279, 403, 401, 388, 393, -282, -282, -282, -282, 291,
	386, -347, 245, 39, 256, 403, 291, 386, 291, 292,
	291, 292, 396, 406, 291, -304, 16, 167, 430, 391,
	395, 284, 244, 285, 246, 405, 292, -304, 93, -283,
	164, 291, 403, 397, 287, -282, -282, -311, -417, -295,
	-293, -291, 236, 25, 147, 29, 31, 150, 183, 134,
	21, 151, 41, 238, 352, 255, 182, 251, 475, 231,
	76, 593, 431, 438, 429, 437, 441, 477, 478, 430,
	389, 35, 15, 595, 32, 265, 28, 42, 176, 233,
	154, 596, 268, 30, 266, 121, 125, 598, 24, 79,
	260, 16, 253, 44, 18, 599, 600, 19, 249, 248,
	167, 245, 74, 13, 226, 33, 163, 70, 601, 142,
	137, 602, 603, 604, 605, 135, 72, 164, 22, 733,
	439, 440, 37, 694, 580, 279, 178, 77, 63, 695,
	148, 435, 606, 607, 122, 608, 126, 80, 700, 144,
	20, 75, 46, 609, 280, 610, 250, 734, 611, 421,
	612, 165, 234, 474, 73, 166, 707, 613, 708, 243,
	402, 10, 480, 36, 264, 252, 133, 71, 445, 614,
	244, 153, 247, 136, 124, 9, 141, 38, 14, 78,
	81, 442, 443, 444, 61, 132, 584, 152, 17, 615,
	422, 146, -385, 696, -311, -311, 36, 95, -411, -412,
	-413, 584, 421, 247, -293, -190, -85, 686, 235, -86,
	692, 25, 242, -135, 403, -123, 183, 714, 697, 698,
	699, 696, 400, 704, 702, 700, 291, 701, 91, 144,
	146, 147, 4, -145, 163, -200, 156, 157, 158, 159,
	160, 161, 162, 168, 167, 148, 150, 164, -245, 145,
	169, 170, 171, 172, 173, 174, 175, 177, 176, 178,
	179, 165, 166, 182, 229, 230, -153, -153, -153, -153,
	-215, -221, -220, -417, -217, -385, -292, -299, -417, -417,
	-153, -277, -417, -150, -417, -417, -417, -417, -417, -224,
	-145, -417, -417, -421, -417, -421, -421, -421, -330, -417,
	-330, -330, -417, -417, -417, -417, -417, -417, -417, -417,
	-417, -417, -417, -417, -417, -417, -417, -417, -417, -417,
	-417, -417, -417, -417, -417, -417, -417, -417, -417, -417,
	-417, -417, -417, -417, -417, -417, -417, -417, -417, -417,
	-417, -417, -417, -417, -417, -417, -417, -417, -417, -417,
	-417, -417, -417, -417, -417, -417, -417, -417, -417, -417,
	-417, -417, -417, -417, -417, -417, -417, -417, -417, -417,
	-417, -417, -417, -417, -417, -417, -417, -417, -417, -417,
	-417, -417, -417, -417, -417, -417, -417, -417, -417, -417,
	-417, -417, -417, -417, -417, -417, -417, -417, -417, -417,
	-417, -417, -417, -417, -417, -417, -417, -417, -417, -417,
	-417, -417, -417, -417, -417, -417, -417, -417, -417, -417,
	-417, -417, -417, -417, -417, 227, -417, -417, -417, -417,
	-417, -330, -330, -330, -330, -330, -330, -417, -417, -417,
	-417, -417, -417, -417, -417, -417, -417, -417, -417, -417,
	-417, 93, 106, 102, 105, 97, -219, 108, 93, 93,
	93, 93, -31, -32, -209, -417, -310, -398, -399, -193,
	-190, -417, 308, -293, -293, 277, 99, -234, -34, -31,
	-229, -235, -231, -31, -79, -121, -134, 67, 68, -133,
	-136, 28, 42, 71, 69, 25, -418, 92, -418, -252,
	-418, 91, -38, -255, 90, 640, 670, 640, 670, 65,
	47, 93, 93, 91, 23, -230, -232, -145, 16, -297,
	4, -296, 29, -293, 93, 227, 16, -191, 33, -190,
	-278, -278, 91, 94, 322, -268, -270, 419, 421, 156,
	-298, -293, 93, 35, 92, 91, -190, -319, -322, -324,
	-323, -325, -320, -321, 349, 350, 183, 353, 355, 356,
	357, 358, 359, 360, 361, 362, 363, 366, 36, 267,
	345, 346, 347, 348, 367, 368, 369, 370, 372, 373,
	374, 375, 330, 351, 582, 331, 332, 333, 334, 335,
	336, 338, 339, 342, 340, 341, 343, 344, -294, -293,
	90, 92, 91, -329, 90, -145, -137, 244, -293, 245,
	245, 245, -79, 474, -352, -352, -352, 275, 21, -46,
	-43, -378, 20, -42, -43, 236, 127, 128, 233, 90,
	-341, 90, -350, -294, -293, 90, 142, 250, 141, -349,
	-346, -349, -350, -293, -217, -293, 142, 142, -293, -293,
	-264, -293, -264, -264, 25, -264, 25, -264, 25, 99,
	-293, -264, 25, -264, 25, -264, 25, -264, 25, -264,
	25, 35, 82, 83, 84, 35, 86, 87, 88, -217,
	-293, -293, -217, -341, -217, -190, -293, -271, 99, 99,
	99, -352, -352, 99, 93, 93, 93, -352, -352, 99,
	93, -301, -299, 93, 93, -390, 261, 305, 307, 99,
	99, 99, 99, 35, 93, -391, 35, 721, 720, 722,
	723, 724, 93, 99, 35, 99, 35, 99, -293, 90,
	-190, -143, 295, 231, 233, 236, 80, 93, 311, 312,
	309, 314, 315, 316, 156, 48, 91, 247, 244, -293,
	-284, 249, -284, -293, -300, -299, -291, -190, 247, 385,
	93, -145, -348, 16, 167, -304, -304, -282, -190, -348,
	-304, -282, -190, -282, -282, -282, -282, -304, -304, -304,
	-282, -299, -299, -190, -190, -190, -190, -190, -190, -190,
	-311, -283, -282, 696, 93, -276, 16, 80, -311, -311,
	91, 328, 422, 423, -309, 325, -81, -293, 93, -10,
	-29, -18, -17, -19, 156, -10, 91, 584, -183, -190,
	696, 696, 696, 696, 696, 696, -145, -145, -145, -145,
	608, -207, -409, 148, 124, 125, 122, 123, -162, 26,
	27, 25, -145, -208, -213, -215, 109, 167, 150, 164,
	-245, -150, -153, -150, -150, -150, -150, -150, -150, 226,
	-150, 226, -150, -150, -150, -150, -150, -150, -312, -293,
	93, 183, -158, -157, 108, -407, -158, 581, 91, -220,
	227, -145, -145, -385, -119, 447, 448, 449, 450, 452,
	453, 454, 457, 458, 462, 463, 446, 464, 451, 456,
	459, 460, 461, 455, 348, -145, -210, -209, -210, -145,
	-145, -222, -223, 152, -217, -145, -418, -418, 99, 174,
	-127, 28, 42, -127, -127, -127, -127, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -127, -145, -120,
	446, 464, 451, 456, 459, 460, 461, 455, 348, 465,
	466, 467, 468, 469, 470, 471, 472, 473, -120, -119,
	-145, -145, -145, -145, -145, -145, -87, -145, 134, 135,
	136, -209, -145, -150, -145, -145, -145, -418, -145, -145,
	-145, -210, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -384, -383,
	-382, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -209, -209, -209, -209, -209, -145,
	-418, -145, -164, -148, 99, -260, 108, 95, -145, -145,
	-145, -145, -145, -145, -210, -295, -300, -291, -292, -209,
	-210, -210, -209, -209, -145, -145, -145, -145, -145, -145,
	-145, -145, -418, -145, -145, -145, -145, -145, -252, -418,
	-209, 91, -400, 421, 422, 694, -302, 280, -301, 29,
	-210, 93, 16, -262, 81, -293, -234, -234, 67, 68,
	63, -131, -132, -136, -418, -37, 29, -254, -293, 633,
	633, 66, 93, -331, -271, 376, 377, 183, -145, -145,
	91, -233, 31, 32, -190, -296, 174, -300, -190, -263,
	280, -190, -168, -170, -171, -172, -193, -216, -417, -173,
	-31, 604, 601, 16, -183, -184, -192, -299, -269, -313,
	-268, 91, 420, 422, 423, 80, 126, -145, -332, 182,
	-360, -359, -358, -341, -343, -344, -345, 92, -332, -337,
	382, 381, -329, -329, -329, -329, -329, -331, -331, -331,
	-331, 90, 90, -329, -329, -329, -329, -334, 90, -334,
	-334, -335, -334, 90, -335, -336, 90, -336, -371, -145,
	-368, -367, -365, -366, 254, 104, 676, 632, 584, 625,
	666, 81, -363, -233, 99, -418, -143, -285, 249, -369,
	-366, -293, -293, -293, -285, 94, 93, 94, 93, 94,
	93, -112, -60, -1, 733, 734, 735, 91, 21, -342,
	-341, -59, 305, -374, -375, 280, -370, -364, -350, 142,
	-349, -350, -350, -293, 91, 33, 131, 131, 131, 131,
	584, 233, 36, -286, 624, 148, 676, 632, -341, -59,
	247, 247, -312, -312, -312, 93, 93, -281, 729, -183,
	-139, 297, 156, 286, 286, 244, 299, 244, 299, -190,
	310, 313, 311, 312, 309, 314, 315, 316, 25, 25,
	25, 25, 25, 25, 298, 300, 302, 288, -190, -190,
	-284, 80, -185, -190, 30, -299, 93, 93, -190, -282,
	-282, -190, -282, -282, -190, -413, 329, -293, 363, 687,
	689, -123, 421, 91, 584, 24, -124, 24, -417, -409,
	124, 125, -215, -215, -215, -208, -150, -153, -150, 147,
	268, -150, -150, -417, -217, -418, -295, 29, 91, 81,
	-418, 172, 91, -418, -418, 91, 16, 91, -225, -223,
	154, -145, -418, 91, -418, -418, -209, -145, -145, -145,
	-145, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -209, -418, 91, 91, 16, -316, 29, -418, -418,
	-418, -418, -418, -224, -418, 16, -418, 81, 91, 167,
	91, -418, -418, -418, 91, 91, -418, -418, 91, -418,
	91, -418, -418, -418, -418, -418, -418, 91, -418, 91,
	-418, -418, -418, 91, -418, 91, -418, -418, 91, -418,
	91, -418, 91, -418, 91, -418, 91, -418, 91, -418,
	91, -418, 91, -418, 91, -418, 91, -418, 91, -418,
	91, -418, 91, -418, 91, -418, 91, -418, 91, -418,
	91, -418, 91, -418, -418, -418, 91, -418, 91, -418,
	91, -418, -418, 91, -418, 91, -418, 91, -418, 91,
	91, -418, 91, 91, 91, -418, 91, 91, 91, 91,
	-418, -418, -418, -418, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 91, -418, -418, -418, -418, -418, -418,
	91, -94, 609, -418, -418, 91, -418, 91, 91, 91,
	91, 91, -418, -417, 227, -418, -418, -418, -418, -418,
	91, 91, 91, 91, 91, 91, -418, -418, -418, 91,
	91, -418, 91, -418, 91, -418, -399, 693, 422, -197,
	-196, -194, 78, 248, 79, -417, -301, -418, -158, -260,
	-261, -260, -202, -293, 99, 108, -236, -167, 91, -169,
	16, -215, 92, 91, -331, -240, -246, -279, -293, 93,
	183, -333, 183, -333, 376, 377, -232, 227, -198, 17,
	-201, 36, 61, -29, -417, -417, 36, 91, -186, -188,
	-187, -189, 70, 74, 76, 71, 72, 73, 77, -307,
	29, -31, -168, -31, -417, -190, -183, -419, 16, 81,
	-419, 91, 227, -270, -273, 424, 421, 427, -385, 93,
	-111, 91, -358, -345, -237, -140, 44, -338, 383, -331,
	592, -331, -340, 93, -340, 99, 99, 99, 92, -49,
	-44, -45, 37, 85, -365, -352, 93, 43, -352, -352,
	-293, 92, -233, -139, -190, 148, 80, -369, -369, -369,
	-299, -2, 732, 738, 142, 90, 388, 20, -254, 91,
	92, -218, 306, 92, -113, -293, 92, 90, -350, -350,
	-293, -417, 244, 35, 35, 676, 632, 624, -59, -218,
	-217, -293, -332, 731, 730, 92, 246, 304, -144, 441,
	-141, 93, 94, -190, -190, -190, -190, -190, -190, 236,
	233, 411, -408, 317, -408, 289, 247, -183, -190, 91,
	-84, 263, 258, -304, -304, 37, -190, 421, 705, 703,
	-145, 147, 268, -162, -153, -119, -119, -150, -314, 183,
	349, 267, 347, 343, 363, 354, 381, 345, 382, 340,
	339, 338, -314, -312, -150, -209, -145, -145, -145, 155,
	-145, 153, -145, -95, -94, -418, -418, -418, -418, -418,
	-95, -95, -95, -95, -95, -95, -95, -95, -95, -95,
	-229, -145, -145, -145, -418, 183, 349, 16, -145, -312,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -382, -145, -209, -145, -209,
	-145, -145, -145, -145, -145, -383, -383, -383, -383, -383,
	-209, -209, -209, -209, -145, -417, -293, -98, -97, -96,
	659, 248, -94, -164, -98, -164, 226, -145, 226, 226,
	226, -145, -210, -295, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -194, -346, 286, -346, 286, -346,
	-264, 91, -275, 24, 16, 61, 61, -167, -198, -132,
	-168, -293, -243, 686, -249, 50, -247, -248, 51, -244,
	52, 60, -333, -333, 174, -234, -145, -265, 80, -266,
	-274, -217, -212, -214, -213, -417, -253, -418, -293, -264,
	-266, -170, -171, -171, -170, -171, 70, 70, 70, 75,
	70, 75, 70, -187, -299, -418, -145, -302, 81, -168,
	-168, -192, -299, 174, 421, 425, 426, -358, -406, 122,
	148, 35, 80, 379, 104, -404, 182, 621, 671, 676,
	632, 625, 666, -405, 250, 141, 142, 262, 29, 45,
	92, 91, 92, 91, 92, 92, 91, -287, -286, -45,
	-44, -352, -352, 99, -385, 93, 93, 246, 30, -190,
	80, 80, 80, -114, 736, 99, 90, -3, 85, -145,
	90, 21, -341, -217, -376, -326, -377, -327, -328, -5,
	-6, -353, -117, 61, 104, -63, 48, 245, 716, 717,
	131, -417, 729, -368, -254, -372, -374, -190, -149, -417,
	-161, -147, -146, -148, -154, 172, 173, 267, 345, 346,
	-218, -190, -138, 295, 303, 90, -142, 95, -387, 81,
	286, 379, 286, 379, 93, -410, 318, 93, -410, -190,
	-84, -49, -190, -282, -282, 37, -385, -418, -162, -153,
	-126, 167, 584, -317, 591, -329, -329, -329, -336, -329,
	335, -329, 335, -329, -418, -418, -418, 91, -418, 24,
	-418, 91, -145, 91, -95, -95, -95, -95, -95, -122,
	480, 91, 91, -418, 90, 90, -145, -418, -418, -418,
	91, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, 91, -418, 91, -418, 91, -418,
	91, -418, 91, -418, 91, -418, 91, -418, 91, -418,
	91, -418, 91, -418, 91, -418, 91, -418, 91, -418,
	91, -418, 91, -418, 91, -418, -418, 91, -418, -418,
	-418, 91, -418, 91, -418, 91, -418, -418, -418, 91,
	-315, 677, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -93, -294, -94, 641, 641, -418, -94,
	-226, 91, -150, -418, -150, -150, -150, -418, -418, -418,
	91, -418, 91, 91, -418, 91, -418, 91, -418, -418,
	-418, -418, 91, -195, 24, -417, -195, -417, -195, -418,
	-260, -190, -198, -227, 18, -240, 55, 355, -251, -250,
	59, 51, -248, 21, 53, 21, 34, -265, 91, 156,
	-306, 91, 29, -418, -418, 91, 61, 227, -418, -198,
	-181, -180, 80, 81, -182, 80, -180, 70, 70, -255,
	91, -263, -168, -198, -198, 227, 122, -417, -149, 14,
	93, 93, -385, -403, 720, 721, 35, 99, -352, -352,
	142, 142, -190, 90, -331, 93, -331, 99, 99, 35,
	86, 87, 88, 35, 82, 83, 84, -190, -190, -190,
	-190, -373, 90, 21, -145, 90, 156, 92, -254, -254,
	282, 167, -352, 714, 288, 288, -352, -352, -352, -116,
	-115, 736, 92, -418, 91, -339, 584, 587, -145, -155,
	-155, -255, 92, -381, 584, -386, -293, -293, -293, -293,
	99, 101, -418, 582, 77, 585, -418, -331, -145, -145,
	-145, -145, -234, 93, -145, -145, 99, 99, -418, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -209,
	-145, -418, -178, -177, -179, 697, 122, 35, -314, -418,
	-211, 280, -101, -100, -99, 16, -418, -145, -119, -119,
	-119, -119, -145, -145, -145, -145, -145, -145, -417, 70,
	20, 18, -257, -293, 250, -417, -257, -417, -302, -227,
	-228, 19, 21, -241, 57, -239, 56, -239, -250, 21,
	21, 93, 21, 93, 142, -274, -145, -214, -301, 61,
	-29, -293, -212, -293, -229, -145, 90, -145, -158, -198,
	-198, -145, -204, 504, 506, 507, 508, 505, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 509, 520,
	481, 482, 483, 111, 113, 112, 484, 485, 486, 349,
	532, 533, 527, 530, 531, 529, 528, 364, 365, 487,
	550, 551, 555, 554, 552, 553, 556, 559, 560, 561,
	562, 563, 564, 566, 565, 557, 558, 535, 534, 536,
	537, 538, 539, 540, 541, 543, 542, 544, 545, 546,
	547, 548, 549, 567, 568, 569, 570, 571, 573, 572,
	577, 576, 574, 575, 579, 578, 488, 489, 114, 115,
	116, 117, 118, 119, 120, 490, 493, 491, 494, 495,
	496, 501, 502, 497, 498, 499, 500, 503, 375, 373,
	374, 370, 369, 368, 428, 433, 434, 436, 521, 522,
	523, 524, 525, 526, 678, 679, 680, 681, 682, 683,
	684, 685, 93, 93, 90, -145, 92, 92, -255, -372,
	-60, 92, -256, -254, 99, 92, 283, -213, -417, 93,
	-352, -352, -352, 99, 99, -301, -418, 91, -293, -405,
	-374, 588, 588, -418, 29, -380, -379, -295, 90, 81,
	66, 583, 586, -418, -418, -418, 91, -418, -418, -418,
	92, 92, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, 91, -418, -177, -179, -418, 80,
	-158, -229, 21, -98, 305, 307, -98, -418, -418, -418,
	-418, -418, 91, -418, -418, 91, -418, 91, -418, -418,
	-257, -418, 21, 21, 91, -418, -257, -418, -257, -197,
	-228, -108, -107, -106, 615, -145, -209, -242, 58, 80,
	126, 93, 93, 93, 14, -417, -212, 227, -306, -234,
	-254, -175, 388, -229, -418, -254, 92, 29, 92, 738,
	142, 92, -213, -125, -417, 279, -301, 93, 93, -115,
	-118, -29, 91, 156, -254, -190, 66, -145, -209, -418,
	80, 596, 697, -92, -91, -88, 708, 734, -209, -94,
	-94, -145, -145, -145, -418, -293, 250, -418, -418, -108,
	91, -105, -104, -293, -318, 584, 80, 126, -266, -254,
	-306, -293, 92, -418, -417, -234, 92, -238, -29, 90,
	-3, 279, -326, -377, -327, -328, -5, -6, -353, -82,
	584, -379, -357, -299, -295, 93, 99, 92, 584, -418,
	-418, -90, 150, 706, 674, -155, 226, -418, 91, -418,
	91, -418, 91, -106, 91, 29, 589, -418, -302, -176,
	-174, -293, 638, -396, -395, 580, -406, -402, 122, 148,
	104, -404, 676, 632, 132, 133, -82, -145, 90, -418,
	-83, 294, 693, 227, -387, 585, -90, 707, 652, 627,
	652, 627, -150, -145, -145, -145, -104, -417, -418, 91,
	24, -319, -62, 649, -393, -394, 80, -397, 394, 648,
	669, 122, 93, 92, -254, 255, -300, -381, 586, 147,
	-119, -418, 91, -418, 91, -418, -93, -174, 645, -332,
	-158, -394, 80, -393, 80, 15, 14, -4, 737, 92,
	296, -90, 652, 627, -145, -145, -418, -61, 30, -175,
	-392, 263, 258, 261, 36, -392, 99, -4, -418, -418,
	649, 257, 35, 122, -158, -178, -177, -177,
}

var yyDef = [...]int{
	880, -2, -2, 882, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	39, 70, 72, 73, 880, 880, 880, 0, 880, 0,
	0, 880, -2, -2, 880, 1628, 0, 880, 0, 875,
	0, -2, 797, 803, 0, 812, -2, 0, 0, 880,
	880, 2256, 2256, 875, 0, 0, 0, 0, 0, 880,
	880, 880, 880, 1633, 1486, 50, 880, 0, 85, 86,
	830, 831, 832, 65, 0, 2254, 881, 1, 3, 71,
	75, 0, 0, 0, 58, 1495, 0, 78, 0, 0,
	884, 0, 0, 1611, 880, 880, 0, 126, 127, 0,
	0, 0, -2, 130, -2, 159, 160, 161, 0, 166,
	607, 526, 578, 524, 563, -2, 512, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 529,
	401, 401, 0, 0, -2, 512, 512, 512, 1613, 0,
	0, 0, 560, 463, 401, 401, 401, 0, 401, 401,
	401, 401, 0, 0, 401, 401, 401, 401, 401, 401,
	401, 401, 401, 401, 401, 401, 401, 401, 401, 401,
	401, 1513, 165, 1629, 1626, 1627, 1786, 1787, 1788, 1789,
	1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799,
	1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809,
	1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819,
	1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829,
	1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839,
	1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849,
	1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859,
	1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869,
	1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879,
	1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889,
	1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899,
	1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909,
	1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919,
	1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929,
	1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939,
	1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949,
	1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959,
	1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969,
	1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979,
	1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989,
	1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
	2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009,
	2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019,
	2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029,
	2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039,
	2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049,
	2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059,
	2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069,
	2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079,
	2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089,
	2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099,
	2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109,
	2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119,
	2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129,
	2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139,
	2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149,
	2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159,
	2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169,
	2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179,
	2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189,
	2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199,
	2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209,
	2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219,
	2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229,
	2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239,
	2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249,
	2250, 2251, 2252, 2253, 0, 1605, 0, 720, 980, 0,
	876, 877, 0, 786, 786, 0, 786, 786, 786, 786,
	0, 0, 0, 734, 0, 0, 0, 0, 783, 0,
	750, 751, 0, 783, 0, 757, 789, 0, 0, 764,
	786, 786, 767, 2257, 0, 2257, 2257, 1596, 0, 780,
	778, 792, 793, 42, 796, 799, 800, 801, 802, 805,
	0, 816, 819, 1622, 1623, 0, 821, 826, 843, 844,
	0, 45, 1139, 0, 1004, 0, 1015, -2, 1026, 1043,
	1044, 1045, 1046, 1047, 1049, 1050, 1051, 0, 0, 0,
	0, 1056, 1057, 0, 0, 0, 0, 0, 1120, 0,
	0, 0, 0, 1985, 1457, 0, 0, 1419, 1419, 1155,
	1419, 1419, 1421, 1421, 1421, 1838, 1977, 1986, 2163, 1799,
	1805, 1806, 1807, 2109, 2110, 2111, 2112, 2201, 2202, 2206,
	1901, 1794, 2176, 2177, 0, 2253, 1938, 1946, 1947, 1971,
	2073, 2186, 1817, 1966, 2036, 1898, 1920, 1921, 2054, 2055,
	1942, 1943, 1924, 2115, 2117, 2133, 2134, 2119, 2121, 2130,
	2136, 2141, 2120, 2132, 2137, 2150, 2154, 2157, 2158, 2159,
	2127, 2125, 2138, 2142, 2144, 2146, 2152, 2155, 2128, 2126,
	2139, 2143, 2145, 2147, 2153, 2156, 2114, 2118, 2122, 2131,
	2149, 2129, 2148, 2123, 2135, 2140, 2151, 2124, 2116, 1936,
	1939, 1927, 1928, 1930, 1932, 1937, 1944, 1950, 1929, 1949,
	1948, 0, 1925, 1926, 1931, 1941, 1945, 1933, 1934, 1935,
	1940, 1951, 1992, 1991, 1990, 2035, 1962, 2034, 0, 0,
	0, 0, 0, 1789, 1843, 1844, 2160, 1341, 1342, 1343,
	1344, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	1470, 1471, 44, 1138, 1592, 1421, 1421, 1421, 1421, 1421,
	1421, 1078, 1079, 1080, 1081, 1082, 1108, 1109, 1115, 1116,
	2049, 2050, 2051, 2052, 1881, 2196, 1890, 1891, 2031, 2032,
	1903, 1904, 2227, 2228, -2, -2, -2, 232, 233, 234,
	235, 236, 237, 238, 239, 0, 1842, 2174, 2175, 228,
	0, 0, 296, 293, 294, 295, 1122, 1123, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	271, 272, 273, 274, 275, 276, 277, 278, 279, 280,
	281, 282, 283, 284, 285, 286, 287, 288, 289, 290,
	298, 299, 2256, 0, 853, 0, 0, 0, 0, 0,
	0, 1634, 1635, 1495, 0, 1487, 1486, 63, 0, 880,
	-2, 0, 0, 0, 0, 47, 0, 52, 937, 883,
	77, 76, 1535, 1538, 0, 0, 0, 59, 1496, 67,
	69, 1497, 0, 885, 886, 0, 913, 917, 0, 0,
	0, 1612, 1611, 1611, 102, 0, 0, 103, 123, 124,
	125, 0, 0, 109, 110, 1598, 1599, 43, 0, 0,
	177, 178, 0, 1096, 428, 0, 173, 0, 421, 360,
	0, 1513, 0, 0, 0, 0, 0, 880, 0, 1606,
	154, 155, 162, 163, 164, 401, 401, 401, 575, 0,
	0, 165, 165, 533, 534, 535, 0, 0, -2, 426,
	0, 513, 0, 0, 415, 415, 419, 417, 418, 0,
	0, 0, 0, 0, 0, 0, 0, 552, 0, 553,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 668,
	0, 402, 0, 573, 574, 464, 0, 0, 0, 0,
	0, 0, 0, 0, 1614, 1615, 0, 550, 551, 0,
	0, 0, 401, 401, 0, 0, 0, 0, 401, 401,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 1526,
	0, 0, 0, -2, 0, 712, 0, 0, 0, 1607,
	1607, 0, 719, 0, 0, 0, 724, 0, 0, 725,
	0, 783, 783, 781, 782, 727, 728, 729, 730, 786,
	0, 0, 410, 411, 412, 783, 786, 0, 786, 786,
	786, 786, 783, 783, 783, 786, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2257, 789, 786, 0, 758,
	0, 759, 760, 761, 762, 765, 766, 768, 2258, 2259,
	1624, 1625, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643,
	1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653,
	1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663,
	1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673,
	1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683,
	1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693,
	1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703,
	1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713,
	1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723,
	1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733,
	1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743,
	1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753,
	1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763,
	1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773,
	1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783,
	1784, 1785, 2257, 2257, 772, 776, 1597, 798, 804, 806,
	807, 0, 0, 817, 820, 837, 49, 1889, 825, 49,
	827, 828, 829, 855, 856, 861, 0, 0, 0, 0,
	867, 868, 869, 0, 0, 872, 873, 874, 0, 0,
	0, 0, 0, 1002, 0, 0, 1128, 1129, 1130, 1131,
	1132, 1133, 1134, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1027, 1028, 0, 0, 0, 1052, 1053, 1054, 1055,
	1058, 0, 1069, 0, 1071, 1466, -2, 0, 0, 0,
	1063, 1064, 0, 0, 0, 1617, 1617, 0, 0, 0,
	1458, 0, 0, 1153, 0, 1154, 1156, 1157, 1158, 0,
	1159, 1160, 890, 890, 890, 890, 890, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 890, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1617,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 141, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1617, 0, 0, 1617, 1617, 0,
	0, 220, 221, 222, 223, 224, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 240, 241, 242, 243, 244, 245, 300, 246,
	247, 248, 1138, 0, 0, 0, 46, 845, 846, 0,
	963, 1617, 0, 0, 896, 0, 1632, 57, 66, 68,
	1495, 61, 1495, 0, 900, 0, 0, -2, -2, 901,
	902, 906, 907, 908, 909, 910, 54, 2255, 55, 0,
	74, 0, 48, 0, 0, 1536, 0, 1539, 0, 0,
	0, 374, 1543, 0, 0, 1488, 1489, 1492, 0, 914,
	1983, 918, 0, 920, 921, 0, 0, 100, 0, 979,
	0, 0, 0, 111, 0, 113, 114, 0, 0, 0,
	385, 1600, 1601, 1602, -2, 408, 0, 385, 369, 308,
	309, 310, 360, 312, 360, 360, 360, 360, 374, 374,
	374, 374, 343, 344, 345, 346, 347, 0, 0, 329,
	360, 360, 360, 360, 350, 351, 352, 353, 354, 355,
	356, 357, 313, 314, 315, 316, 317, 318, 319, 320,
	321, 362, 362, 362, 362, 362, 366, 366, 0, 1097,
	0, 389, 0, 1492, 0, 0, 1526, 1609, 1619, 0,
	0, 0, 1609, 132, 0, 0, 0, 576, 618, 527,
	564, 577, 0, 530, 531, -2, 0, 0, 512, 0,
	514, 0, 409, 0, -2, 0, 419, 0, 415, 419,
	416, 419, 407, 420, 554, 555, 556, 0, 558, 559,
	648, 949, 0, 0, 0, 0, 0, 654, 655, 656,
	0, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 565, 566, 567, 568, 569, 570, 571, 572, 0,
	0, 0, 0, 514, 0, 561, 0, 0, 465, 466,
	467, 0, 0, 470, 471, 472, 473, 0, 0, 476,
	477, 478, 966, 967, 479, 480, 505, 506, 507, 481,
	482, 483, 484, 485, 486, 487, 499, 500, 501, 502,
	503, 504, 488, 489, 490, 491, 492, 493, 496, 0,
	147, 1517, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1607, 0,
	0, 0, 0, 899, 981, 1630, 1631, 721, 0, 0,
	787, 788, 0, 413, 414, 786, 786, 731, 773, 0,
	786, 735, 774, 736, 738, 737, 739, 752, 753, 786,
	742, 784, 785, 743, 744, 745, 746, 747, 748, 749,
	769, 754, 755, 756, 790, 0, 794, 795, 770, 771,
	0, 0, 810, 811, 0, 818, 840, 838, 839, 841,
	833, 834, 835, 836, 0, 842, 0, 0, 858, 96,
	863, 864, 865, 866, 878, 871, 1140, 999, 1000, 1001,
	0, 1003, 1009, 0, 1124, 1126, 1007, 1008, 1011, 0,
	0, 0, 1005, 1016, 1135, 1136, 1137, 0, 0, 0,
	0, 0, 1020, 1024, 1029, 1030, 1031, 1032, 1033, 0,
	1034, 0, 1037, 1038, 1039, 1040, 1041, 1042, 1048, 1434,
	1435, 1436, 1067, 301, 302, 0, 1068, 0, 0, 0,
	0, 0, 0, 0, 0, 1381, 1382, 1383, 1384, 1385,
	1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395,
	1396, 1397, 1398, 1399, 1400, 1139, 0, 1618, 0, 0,
	0, 1464, 1461, 0, 0, 0, 1420, 1422, 0, 0,
	0, 891, 892, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410,
	1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 0, 0,
	1437, 0, 0, 0, 0, 0, 1457, 0, 1073, 1074,
	1075, 0, 0, 0, 0, 0, 0, 1199, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 142,
	143, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1345, 1346, 1347, 1348, 41, 0, 0,
	0, 0, 0, 0, 0, 1468, 0, -2, -2, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1370, 0, 0, 0, 0, 0, 0, 1590,
	0, 0, 848, 849, 851, 0, 983, 0, 964, 0,
	0, 854, 0, 895, 0, 898, 60, 62, 904, 905,
	0, 922, 911, 903, 56, 51, 0, 0, 941, 1537,
	1540, 1541, 374, 1563, 0, 383, 383, 380, 1498, 1499,
	0, 1491, 1493, 1494, 79, 919, 915, 0, 997, 0,
	0, 978, 0, 925, 927, 928, 929, 961, 0, 932,
	933, 0, 0, 0, 0, 0, 98, 980, 104, 0,
	112, 0, 0, 117, 118, 105, 106, 107, 108, 0,
	607, -2, 460, 179, 181, 182, 183, 174, -2, 372,
	370, 371, 311, 374, 374, 337, 338, 339, 340, 341,
	342, 0, 0, 330, 331, 332, 333, 322, 0, 323,
	324, 325, 364, 0, 326, 327, 0, 328, 427, 0,
	1500, 390, 391, 393, 401, 0, 396, 397, 0, 401,
	401, 0, 422, 423, 0, 1492, 1517, 0, 0, 0,
	1620, 1619, 1619, 1619, 0, 167, 168, 169, 170, 171,
	172, 643, 0, 0, 619, 641, 642, 165, 0, 0,
	175, 516, 515, 0, 675, 0, 425, 0, 0, 419,
	419, 404, 405, 557, 0, 0, 650, 651, 652, 653,
	0, 0, 0, 543, 454, 0, 544, 545, 514, 516,
	0, 0, 385, 468, 469, 474, 475, 494, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	592, 593, 594, 597, 599, 518, 603, 605, 596, 598,
	600, 518, 604, 606, 1514, 1515, 1516, 0, 0, 713,
	0, 0, 451, 94, 1608, 718, 722, 723, 783, 741,
	775, 783, 733, 740, 763, 808, 809, 814, 822, 823,
	824, 862, 0, 0, 0, 0, 870, 0, 0, 1010,
	1125, 1127, 1012, 1013, 1014, 1017, 0, 1021, 1025, 0,
	0, 0, 0, 0, 1072, 1070, 1468, 0, 0, 0,
	1121, 0, 0, 1143, 1144, 0, 0, 0, 0, 1462,
	0, 0, 1151, 0, 1423, 1102, 0, 0, 0, 0,
	0, 1102, 1102, 1102, 1102, 1102, 1102, 1102, 1102, 1102,
	1102, 1486, 1178, 0, 0, 0, 0, 0, 1183, 1184,
	1185, 1186, 1187, 0, 1189, 0, 1190, 0, 0, 0,
	0, 1197, 1198, 1200, 0, 0, 1203, 1204, 0, 1206,
	0, 1208, 1209, 1210, 1211, 1212, 1213, 0, 1215, 0,
	1217, 1218, 1219, 0, 1221, 0, 1223, 1224, 0, 1226,
	0, 1228, 0, 1231, 0, 1234, 0, 1237, 0, 1240,
	0, 1243, 0, 1246, 0, 1249, 0, 1252, 0, 1255,
	0, 1258, 0, 1261, 0, 1264, 0, 1267, 0, 1270,
	0, 1273, 0, 1276, 1277, 1278, 0, 1280, 0, 1282,
	0, 1285, 1286, 0, 1288, 0, 1291, 0, 1294, 0,
	0, 1295, 0, 0, 0, 1299, 0, 0, 0, 0,
	1308, 1309, 1310, 1311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1322, 1323, 1324, 1325, 1326, 1327,
	0, 1329, 0, 1103, 0, 0, 1103, 0, 0, 0,
	0, 0, 1141, 1617, 0, 1424, 1425, 1426, 1427, 1428,
	0, 0, 0, 0, 0, 0, 1368, 1369, 1371, 0,
	0, 1374, 0, 1376, 0, 1591, 847, 850, 852, 935,
	984, 985, 0, 0, 0, 0, 965, 1616, 893, 894,
	897, 943, 0, 1472, 0, 0, 922, 997, 0, 923,
	0, 53, 938, 0, 1545, 1544, 1557, 1570, 383, 383,
	377, 378, 384, 379, 381, 382, 1490, 0, 1495, 0,
	1584, 0, 0, 1573, 0, 0, 0, 0, 0, 0,
	0, 0, 968, 0, 0, 971, 0, 0, 0, 0,
	962, 933, 0, 934, 0, -2, 0, 0, 92, 93,
	0, 0, 0, 115, 116, 0, 0, 122, 386, 387,
	156, 165, 462, 180, 435, 0, 0, 307, 373, 334,
	335, 336, 0, 358, 0, 0, 0, 0, 456, 128,
	1504, 1503, 401, 401, 392, 0, 395, 0, 0, 0,
	1621, 361, 424, 0, 146, 0, 0, 0, 0, 0,
	152, 613, 0, 0, 620, 0, 0, 0, 525, 0,
	536, 537, 0, 647, -2, 709, 389, 0, 403, 406,
	950, 0, 0, 538, 0, 541, 542, 455, 516, 547,
	548, 562, 549, 497, 498, 495, 0, 0, 1527, 1528,
	1533, 1531, 1532, 133, 583, 585, 589, 584, 588, 0,
	0, 0, 520, 0, 520, 581, 0, 451, 1500, 0,
	717, 452, 453, 786, 786, 857, 97, 0, 860, 0,
	0, 0, 0, 1018, 1022, 1035, 1036, 1429, 1455, 360,
	360, 1442, 360, 366, 1445, 360, 1447, 360, 1450, 360,
	1453, 1454, 0, 0, 1065, 0, 0, 0, 0, 1150,
	1465, 0, 0, 1161, 1101, 1102, 1102, 1102, 1102, 1102,
	1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176,
	1459, 0, 0, 0, 1182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 144, 145, 0, 0, 0,
	0, 0, 0, 1379, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1096, 1100, 0, 1104, 1105,
	0, 0, 1331, 0, 0, 1349, 0, 0, 0, 0,
	0, 0, 0, 1469, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 986, 993, 0, 993, 0, 993,
	0, 0, 0, 1603, 1604, 1473, 1474, 997, 1475, 912,
	924, 942, 1563, 0, 1556, 0, -2, 1565, 0, 0,
	0, 1571, 375, 376, 916, 80, 998, 83, 0, 1584,
	1593, 0, 1581, 1586, 1588, 0, 0, 0, 1577, 0,
	997, 926, 957, 959, 0, 954, 969, 970, 972, 0,
	974, 0, 976, 977, 937, 931, 0, 100, 0, 997,
	997, 99, 0, 982, 119, 120, 121, 461, 184, 189,
	0, 0, 0, 194, 0, 196, 0, 0, 0, 201,
	202, 401, 401, 436, 0, 304, 306, 0, 0, 187,
	374, 0, 374, 0, 365, 367, 0, 437, 457, 1501,
	1502, 0, 0, 394, 398, 399, 400, 0, 1610, 148,
	0, 0, 0, 616, 0, 644, 0, 0, 0, 0,
	0, 0, 176, 517, 676, 677, 678, 679, 680, 681,
	682, 683, 684, 0, 401, 0, 0, 0, 401, 401,
	401, 0, 701, 388, 0, 0, 672, 669, 539, 0,
	218, 219, 226, 227, 229, 0, 0, 0, 0, 0,
	546, 937, 1518, 1519, 1520, 0, 1530, 1534, 136, 0,
	0, 0, 0, 591, 595, 601, 0, 519, 602, 714,
	715, 716, 95, 726, 732, 859, 879, 1006, 1019, 1023,
	0, 0, 0, 0, 1456, 1440, 374, 1443, 1444, 1446,
	1448, 1449, 1451, 1452, 1061, 1062, 1066, 0, 1147, 0,
	1149, 0, 1463, 0, 1162, 1163, 1164, 1165, 1166, 1495,
	0, 0, 0, 1181, 0, 0, 0, 1192, 1191, 1193,
	0, 1195, 1196, 1201, 1202, 1205, 1207, 1214, 1216, 1220,
	1222, 1225, 1227, 1229, 0, 1232, 0, 1235, 0, 1238,
	0, 1241, 0, 1244, 0, 1247, 0, 1250, 0, 1253,
	0, 1256, 0, 1259, 0, 1262, 0, 1265, 0, 1268,
	0, 1271, 0, 1274, 0, 1279, 1281, 0, 1284, 1287,
	1289, 0, 1292, 0, 1296, 0, 1298, 1300, 1301, 0,
	0, 0, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319,
	1320, 1321, 1328, 0, 1094, 1330, 1106, 1107, 1112, 1333,
	0, 0, 0, 1336, 0, 0, 0, 1340, 1142, 1351,
	0, 1356, 0, 0, 1362, 0, 1366, 0, 1372, 1373,
	1375, 1377, 0, 0, 0, 0, 0, 0, 0, 963,
	944, 64, 1475, 1479, 0, 1550, 1548, 1548, 1558, 1559,
	0, 0, 1566, 0, 0, 0, 0, 84, 0, 0,
	1572, 0, 0, 1589, 0, 0, 0, 0, 101, 1486,
	951, 958, 0, 0, 952, 0, 953, 973, 975, 930,
	0, 997, 997, 90, 91, 0, 190, 0, 192, 0,
	195, 197, 198, 199, 205, 206, 207, 200, 0, 0,
	303, 305, 0, 0, 348, 359, 349, 0, 0, 1505,
	1506, 1507, 1508, 1509, 1510, 1511, 1512, 937, 149, 150,
	151, 608, 0, 618, 0, 939, 0, 611, 0, 528,
	0, 0, 0, 401, 401, 401, 0, 0, 0, 0,
	686, 0, 0, 649, 0, 657, 0, 0, 0, 230,
	231, 0, 1529, 582, 0, 134, 135, 0, 0, 587,
	521, 522, 1059, 0, 0, 0, 1060, 1441, 0, 0,
	0, 0, 0, 1460, 0, 0, 0, 0, 1188, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1304, 0, 0, 0, 638, 639, 0, 1380, 1099,
	1486, 0, 1103, 1113, 1114, 0, 1103, 1350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 994,
	0, 0, 0, 945, 946, 0, 0, 0, 983, 1479,
	1484, 0, 0, 1553, 0, 1546, 1549, 1547, 1560, 0,
	0, 1567, 0, 1569, 0, 1594, 1595, 1587, 1582, 0,
	1576, 1579, 1581, 1578, 1495, 955, 0, 960, 0, 1486,
	89, 0, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 204, 0, 0, 363, 368, 0, 0,
	0, 609, 0, 940, 621, 612, 0, 699, 0, 703,
	0, 0, 0, 706, 707, 708, 685, 0, 689, 429,
	673, 670, 671, 540, 0, 137, 138, 0, 0, 0,
	1430, 0, 1433, 1145, 1148, 1146, 0, 1177, 1179, 1180,
	1438, 1439, 1194, 1230, 1233, 1236, 1239, 1242, 1245, 1248,
	1251, 1254, 1257, 1260, 1263, 1266, 1269, 1272, 1275, 1283,
	1290, 1293, 1297, 1302, 0, 1305, 0, 0, 1306, 0,
	640, 1090, 0, 0, 1110, 1111, 0, 1335, 1337, 1338,
	1339, 1352, 0, 1357, 1358, 0, 1363, 0, 1367, 1378,
	0, 988, 995, 996, 0, 991, 0, 992, 0, 936,
	1484, 82, 1485, 1482, 0, 1480, 1477, 1542, 0, 1551,
	1552, 1561, 1562, 1568, 0, 0, 1581, 0, 1575, 87,
	0, 0, 0, 1495, 191, 0, 210, 0, 617, 0,
	620, 610, 697, 698, 0, 710, 702, 704, 705, 687,
	-2, 1521, 0, 0, 0, 590, 1431, 0, 0, 1307,
	0, 636, 637, 1098, 1091, 0, 1076, 1077, 1095, 1332,
	1334, 0, 0, 0, 987, 947, 948, 989, 990, 81,
	0, 1481, 1118, 0, 1476, 0, 1554, 1555, 1585, 0,
	1574, 1580, 956, 963, 0, 88, 442, 435, 1521, 0,
	0, 0, 690, 691, 692, 693, 694, 695, 696, 579,
	1523, 139, 140, 0, 509, 510, 511, 133, 0, 1152,
	1303, 1092, 0, 0, 0, 0, 0, 1353, 0, 1359,
	0, 1364, 0, 1483, 0, 0, 1478, 1583, 622, 0,
	624, 0, -2, 430, 443, 0, 185, 211, 212, 0,
	0, 215, 216, 217, 208, 209, 129, 0, 0, 711,
	0, 1524, 1525, 0, 136, 0, 0, 1083, 1084, 1085,
	1086, 1088, 0, 0, 0, 0, 1119, 1096, 623, 0,
	0, 385, 0, 633, 431, 432, 0, 438, 439, 440,
	441, 213, 214, 645, 0, 0, 508, 586, 1432, 0,
	0, 1354, 0, 1360, 0, 1365, 0, 625, 626, 634,
	0, 433, 0, 434, 0, 0, 0, 614, 0, 645,
	1522, 1093, 1087, 1089, 0, 0, 1117, 0, 635, 631,
	444, 446, 447, 0, 0, 445, 646, 615, 1355, 1361,
	0, 448, 449, 450, 627, 628, 629, 630,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 149, 3, 3, 3, 177, 169, 3,
	90, 92, 174, 172, 91, 173, 227, 175, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 739,
	157, 156, 158, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 179, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 145, 3, 180,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	146, 147, 148, 150, 151, 152, 153, 154, 155, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 170,
	171, 176, 178, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 58022, 697, 58023, 698, 58024, 699,
	58025, 700, 58026, 701, 58027, 702, 58028, 703, 58029, 704,
	58030, 705, 58031, 706, 58032, 707, 58033, 708, 58034, 709,
	58035, 710, 58036, 711, 58037, 712, 58038, 713, 58039, 714,
	58040, 715, 58041, 716, 58042, 717, 58043, 718, 58044, 719,
	58045, 720, 58046, 721, 58047, 722, 58048, 723, 58049, 724,
	58050, 725, 58051, 726, 58052, 727, 58053, 728, 58054, 729,
	58055, 730, 58056, 731, 58057, 732, 58058, 733, 58059, 734,
	58060, 735, 58061, 736, 58062, 737, 58063, 738, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:616
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:629
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:630
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:634
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:673
		{
			setParseTree(yylex, nil)
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:679
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:685
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:691
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:695
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:701
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:707
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:713
		{
			yyLOCAL = &With{CTEs: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:717
		{
			yyLOCAL = &With{CTEs: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:722
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:726
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:732
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:736
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:742
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:748
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:752
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:756
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:779
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:785
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:790
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:796
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:803
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:809
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:816
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 64:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:820
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:826
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:830
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:834
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:838
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:842
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:848
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:852
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:857
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:861
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:867
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:871
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:876
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:882
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:888
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:895
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:901
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:909
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), yyDollar[8].groupByUnion(), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:913
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), yyDollar[7].groupByUnion(), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:919
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = getAliasedTableExprFromTableName(yyDollar[4].tableName)
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:931
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: getAliasedTableExprFromTableName(yyDollar[4].tableName), Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:943
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:947
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:953
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:959
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:963
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:967
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:971
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:976
		{
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:977
		{
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:981
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:985
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:991
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:995
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1001
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1005
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1010
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1014
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1020
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1026
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1030
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1036
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1040
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1044
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1048
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1054
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1058
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1062
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1068
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1072
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1078
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1082
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1088
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1092
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1096
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1102
		{
			yyVAL.str = RepeatableReadStr
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1106
		{
			yyVAL.str = ReadCommittedStr
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1110
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1114
		{
			yyVAL.str = SerializableStr
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1120
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1124
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1128
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1134
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1140
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1147
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1156
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1160
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1167
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1171
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1176
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1180
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1186
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1191
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1196
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1202
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1207
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1213
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 141:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1218
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1222
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1228
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1232
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1238
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 146:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1244
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1251
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1258
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1263
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeFullText}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1268
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeSpatial}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1273
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeUnique}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1280
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1287
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1298
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1305
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1309
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1315
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1319
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1323
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1327
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1331
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1335
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 165:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1341
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1345
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1351
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1355
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1361
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1365
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1371
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1375
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1381
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1385
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1391
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1395
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1401
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1406
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1411
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 180:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1415
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1420
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1424
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1428
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 184:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1439
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1448
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1457
		{
			yyVAL.str = ""
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1461
		{
			yyVAL.str = ""
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1470
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1474
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1479
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1484
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1489
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyDollar[1].columnTypeOptionsUnion().DefaultLiteral = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1495
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1500
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1505
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1510
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1515
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1519
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1524
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1528
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1533
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1538
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1543
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 204:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1547
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1553
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1557
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1561
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1567
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1571
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1576
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1580
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1585
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1590
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1595
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1600
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1605
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1610
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1617
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1624
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1628
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1632
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1636
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1640
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1644
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("sysdate"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1654
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1661
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1665
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1671
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1675
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1679
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1683
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1687
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1691
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1695
		{
			yyLOCAL = NewBitLiteral("0b" + yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1699
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1703
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral("0b" + yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1707
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1711
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1715
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1719
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1723
		{
			arg := parseBindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: arg}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1728
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1732
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1736
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1742
		{
			yyVAL.str = Armscii8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1746
		{
			yyVAL.str = ASCIIStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1750
		{
			yyVAL.str = Big5Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1754
		{
			yyVAL.str = UBinaryStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1758
		{
			yyVAL.str = Cp1250Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1762
		{
			yyVAL.str = Cp1251Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1766
		{
			yyVAL.str = Cp1256Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1770
		{
			yyVAL.str = Cp1257Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1774
		{
			yyVAL.str = Cp850Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1778
		{
			yyVAL.str = Cp852Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1782
		{
			yyVAL.str = Cp866Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1786
		{
			yyVAL.str = Cp932Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1790
		{
			yyVAL.str = Dec8Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1794
		{
			yyVAL.str = EucjpmsStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1798
		{
			yyVAL.str = EuckrStr
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1802
		{
			yyVAL.str = Gb18030Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1806
		{
			yyVAL.str = Gb2312Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1810
		{
			yyVAL.str = GbkStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1814
		{
			yyVAL.str = Geostd8Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1818
		{
			yyVAL.str = GreekStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1822
		{
			yyVAL.str = HebrewStr
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1826
		{
			yyVAL.str = Hp8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1830
		{
			yyVAL.str = Keybcs2Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1834
		{
			yyVAL.str = Koi8rStr
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1838
		{
			yyVAL.str = Koi8uStr
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1842
		{
			yyVAL.str = Latin1Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1846
		{
			yyVAL.str = Latin2Str
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1850
		{
			yyVAL.str = Latin5Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1854
		{
			yyVAL.str = Latin7Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1858
		{
			yyVAL.str = MacceStr
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1862
		{
			yyVAL.str = MacromanStr
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1866
		{
			yyVAL.str = SjisStr
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1870
		{
			yyVAL.str = Swe7Str
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1874
		{
			yyVAL.str = Tis620Str
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1878
		{
			yyVAL.str = Ucs2Str
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1882
		{
			yyVAL.str = UjisStr
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1886
		{
			yyVAL.str = Utf16Str
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1890
		{
			yyVAL.str = Utf16leStr
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1894
		{
			yyVAL.str = Utf32Str
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1898
		{
			yyVAL.str = Utf8mb3Str
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1902
		{
			yyVAL.str = Utf8mb4Str
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1906
		{
			yyVAL.str = Utf8mb3Str
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1916
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1920
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1924
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1930
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1934
		{
			yyLOCAL = AppendString(yyDollar[1].exprUnion(), yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1940
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1944
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1948
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1954
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1958
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1964
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1968
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1972
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1976
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1982
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1993
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].intPtrUnion()
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1998
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2004
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2008
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2012
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2016
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2020
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2024
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2028
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2032
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2036
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2042
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2048
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2054
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2060
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2066
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2072
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2078
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2086
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2090
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2094
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2098
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2102
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2108
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2112
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].intPtrUnion()}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2118
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2122
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2126
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2130
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2134
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2138
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2142
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2146
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2150
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2154
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2158
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2162
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2166
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 349:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2171
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2177
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2181
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2185
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2189
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2193
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2197
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2201
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2205
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2211
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2216
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *int
//line sql.y:2221
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *int
//line sql.y:2225
		{
			yyLOCAL = ptr.Of(convertStringToInt(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2230
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 363:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2234
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2243
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2247
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2254
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2258
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2264
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2272
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2276
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2280
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2285
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2289
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2294
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2298
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2302
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2306
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2310
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2315
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2320
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2325
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2330
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2336
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2340
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2345
		{
			yyVAL.str = ""
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2349
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2353
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 388:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2359
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2364
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2368
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2374
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2378
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2384
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2388
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2393
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2397
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2401
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2405
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2409
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2413
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2419
		{
			yyVAL.str = ""
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2423
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 403:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2429
		{
			yyLOCAL = &IndexInfo{Type: IndexTypePrimary, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY")}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2433
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeSpatial, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2437
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeFullText, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2441
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeUnique, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2445
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeDefault, Name: NewIdentifierCI(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2450
		{
			yyVAL.str = ""
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2454
		{
			yyVAL.str = yyDollar[2].str
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2460
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2464
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2468
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2474
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2478
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 415:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2483
		{
			yyVAL.str = ""
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2487
		{
			yyVAL.str = yyDollar[1].str
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2493
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2497
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2502
		{
			yyVAL.str = ""
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2506
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2512
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2516
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2522
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].intPtrUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2526
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2532
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2536
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2542
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2546
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2552
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2558
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2562
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2566
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2570
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2574
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2579
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2583
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2589
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2595
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2601
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2605
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2609
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2614
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2618
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2624
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2630
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2636
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2640
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2644
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2648
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2652
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2657
		{
			yyVAL.str = ""
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2661
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2665
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2671
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2675
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2680
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2684
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2689
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2693
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2699
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2703
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2707
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2713
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2717
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2723
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2727
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2731
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2735
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2739
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2743
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2747
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2751
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2755
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2759
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2763
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2767
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2771
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2775
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2779
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2783
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2787
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2791
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2795
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2799
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2803
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2807
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2811
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2815
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2819
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2823
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2827
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2831
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2835
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2839
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2843
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2848
		{
			yyVAL.str = ""
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2852
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2856
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2875
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2879
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2883
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2887
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2892
		{
			yyVAL.str = ""
		}
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2898
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2902
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2907
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2911
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2916
		{
			yyVAL.str = ""
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2920
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2925
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2929
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2933
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2938
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2942
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2946
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2950
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2954
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 528:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2958
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2964
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2968
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2972
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2978
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2982
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2986
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2990
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2994
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2998
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3002
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3006
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion(), DefaultLiteral: true}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3010
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3014
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(false)}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3018
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(true)}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3022
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3026
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3030
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3034
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3038
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3042
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3046
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3050
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3054
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3058
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3062
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3066
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3070
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3074
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3078
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3082
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3086
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3090
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3094
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3098
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3104
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3108
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3114
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3118
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3122
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3126
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3130
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3134
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3138
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3142
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3146
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3150
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3156
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3163
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3170
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3177
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3183
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3193
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3200
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3207
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3219
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3229
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3233
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3237
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3250
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3260
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3264
		{
			yyLOCAL = &AlterVschema{Action: DropSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3268
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3279
		{
			yyLOCAL = &AlterVschema{
				Action: DropAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3286
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3293
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3300
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3307
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3315
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3321
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3328
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3334
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3341
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3347
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3356
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3364
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3371
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3377
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3384
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3391
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3395
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3404
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3412
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3421
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3428
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3436
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3440
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3449
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3460
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3464
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3469
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3473
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3478
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3482
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3488
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3494
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3500
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3504
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3510
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3514
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3520
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3526
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3532
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3538
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3544
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3548
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3552
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3556
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3562
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3568
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3574
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3578
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3582
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3588
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3592
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3597
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3601
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3606
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3610
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3616
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3620
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3624
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3628
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3632
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3636
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3640
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3644
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3648
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3652
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3656
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3660
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3664
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3668
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3672
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3676
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3680
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3684
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3688
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3692
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3696
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3700
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3705
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3709
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3713
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3719
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3723
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3729
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3734
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3738
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3743
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3748
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3753
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3758
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3763
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3768
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3773
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3778
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3784
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3790
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3794
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3800
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3805
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3809
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3814
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3819
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3824
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3829
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3834
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3839
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3846
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3853
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3860
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3868
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3872
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3878
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3884
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3890
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3896
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3902
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3908
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3914
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3920
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3926
		{
			yyVAL.str = ""
		}
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3930
		{
			yyVAL.str = ""
		}
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3936
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3942
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3946
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 715:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3952
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3956
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3965
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3969
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3975
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3979
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3985
		{
			yyLOCAL = &Analyze{IsLocal: yyDollar[2].booleanUnion(), Table: yyDollar[4].tableName}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3991
		{
			yyLOCAL = &PurgeBinaryLogs{To: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3995
		{
			yyLOCAL = &PurgeBinaryLogs{Before: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4001
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4005
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4009
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4013
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4017
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4021
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4025
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4029
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4033
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4037
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4041
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4045
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4049
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4053
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4057
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4061
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4065
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4069
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4073
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4077
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4081
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4085
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4089
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4093
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4097
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4101
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4105
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4109
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4113
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4117
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4121
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4125
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4129
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4133
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4137
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4141
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4145
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4149
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaKeyspaces}}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4153
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4157
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4161
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4165
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4169
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4173
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4180
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4184
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4188
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4192
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4196
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4200
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4204
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4208
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4212
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4218
		{
			yyVAL.str = ""
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4222
		{
			yyVAL.str = "extended "
		}
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4228
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4232
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4238
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4242
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4248
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4252
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4256
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4262
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4266
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4270
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4276
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4280
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4286
		{
			yyVAL.empty = struct{}{}
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4290
		{
			yyVAL.empty = struct{}{}
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4294
		{
			yyVAL.empty = struct{}{}
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4300
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4304
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4310
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4314
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4318
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4325
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4329
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4333
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4337
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4344
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4348
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4353
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4357
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4363
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4367
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4373
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4377
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4381
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4388
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4394
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4398
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4403
		{
			yyVAL.empty = struct{}{}
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4405
		{
			yyVAL.empty = struct{}{}
		}
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4408
		{
			yyVAL.empty = struct{}{}
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4410
		{
			yyVAL.empty = struct{}{}
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4414
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4420
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4425
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4429
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4433
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4437
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4441
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4446
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4450
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4454
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4458
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4464
		{
			yyVAL.str = yyDollar[1].str
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4468
		{
			yyVAL.str = yyDollar[1].str
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4472
		{
			yyVAL.str = yyDollar[1].str
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4478
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4482
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4486
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4490
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4495
		{
			yyVAL.str = ""
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4499
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4503
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 840:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4509
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4513
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4519
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4525
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4529
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4535
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4541
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4545
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4551
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4557
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4561
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4565
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4569
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4575
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4581
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4587
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4591
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4595
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4599
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4603
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4607
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4613
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4617
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4623
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4627
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4631
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4635
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4639
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4643
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4647
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4651
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4655
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4659
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4663
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4667
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4672
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4676
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4680
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4685
		{
			yyVAL.str = ""
		}
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4689
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4694
		{
			setAllowComments(yylex, true)
		}
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4698
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4704
		{
			yyVAL.strs = nil
		}
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4708
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4714
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4718
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4722
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4727
		{
			yyVAL.str = ""
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4731
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4735
		{
			yyVAL.str = SQLCacheStr
		}
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4740
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4744
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4748
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4754
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4758
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4768
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4773
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4777
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4783
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4787
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4792
		{
			yyVAL.strs = nil
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4796
		{
			yyVAL.strs = yyDollar[1].strs
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4802
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4806
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4812
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4816
		{
			yyVAL.str = SQLCacheStr
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4820
		{
			yyVAL.str = DistinctStr
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4824
		{
			yyVAL.str = DistinctStr
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4828
		{
			yyVAL.str = StraightJoinHint
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4832
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4836
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4842
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4846
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4852
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4856
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4860
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4864
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4869
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4873
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4877
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4884
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4889
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4893
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4899
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4905
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4909
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4919
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4923
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4927
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4931
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4937
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4941
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4947
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4951
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4956
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4960
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4965
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4969
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4975
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4979
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4985
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4989
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4995
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4999
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5003
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5007
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5013
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5017
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5030
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5034
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5038
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5042
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5048
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5050
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 957:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5054
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5056
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 959:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5060
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5062
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 961:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5065
		{
			yyVAL.empty = struct{}{}
		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5067
		{
			yyVAL.empty = struct{}{}
		}
	case 963:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5070
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5074
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5078
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5085
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5091
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5095
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5099
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5105
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5111
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5115
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5119
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5123
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5129
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5133
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5143
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5147
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5153
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5157
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5163
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 983:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5168
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5172
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5178
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5182
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 987:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5188
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5192
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5196
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5200
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5204
		{
			yyLOCAL = &IndexHint{Type: UseVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5208
		{
			yyLOCAL = &IndexHint{Type: IgnoreVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5213
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5217
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5221
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5225
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5231
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5235
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5242
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5246
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5250
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5254
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5258
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5262
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5266
		{
			yyLOCAL = &AssignmentExpr{Left: yyDollar[1].variableUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5270
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5276
		{
		}
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5279
		{
		}
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5284
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5288
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5292
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5296
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5300
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5304
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: All, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5308
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5314
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5318
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5322
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5326
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5330
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5334
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5338
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5342
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5346
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5350
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5354
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5360
		{
		}
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5363
		{
		}
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5369
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5373
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5377
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5381
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5385
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5389
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5393
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAdd, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5397
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinarySub, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5401
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5405
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5409
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5413
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5417
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5421
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5425
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5431
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5435
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5439
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5443
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5447
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5451
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5455
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5459
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5463
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5467
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5471
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5475
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5479
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5483
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5487
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5491
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5495
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5499
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5503
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5507
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5515
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5519
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAddLeft, Date: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion(), Interval: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5523
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5527
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5531
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5537
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5541
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5547
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5551
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5557
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5561
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5565
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5571
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5575
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5582
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5586
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5590
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5594
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5598
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5604
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5608
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5612
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5616
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5620
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5624
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5628
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5633
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5637
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5643
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5647
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5652
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5656
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5661
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5665
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1098:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5671
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5677
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5681
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5687
		{
			yyLOCAL = yyDollar[1].overClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5691
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5696
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5703
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5709
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5713
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5719
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5723
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5729
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5733
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5738
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5745
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5751
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5755
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5761
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5767
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5771
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1120:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5777
		{
			yyVAL.str = ""
		}
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5781
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5787
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5791
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5798
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5802
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5806
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5810
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5816
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5820
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5824
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5828
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5832
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5836
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5840
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5846
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5850
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5854
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			markBindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5861
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5867
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5871
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5881
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5885
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5895
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5899
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5903
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5907
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5911
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5915
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5919
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5923
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5927
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5931
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5935
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5946
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5950
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5956
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5960
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("curdate")}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5964
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5969
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("curtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5974
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5978
		{
			yyLOCAL = &CountStar{OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5982
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5986
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5990
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5994
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5998
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6002
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6006
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6010
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6014
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6018
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6022
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6026
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6030
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6034
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6038
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6042
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6046
		{
			yyLOCAL = &AnyValue{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6050
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprTimestampadd, Date: yyDollar[7].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6054
		{
			yyLOCAL = &TimestampDiffExpr{Unit: yyDollar[3].intervalTypeUnion(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6058
		{
			yyLOCAL = &ExtractFuncExpr{IntervalType: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6062
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6066
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6070
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6074
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6078
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, Type: LeadingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6082
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, Type: TrailingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6086
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6090
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6094
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6098
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6102
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6106
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6110
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6114
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6118
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6122
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6126
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6130
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6134
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6138
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6142
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6146
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6150
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6154
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6158
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6162
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6166
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsEmpty, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6170
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsSimple, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6174
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Dimension, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6178
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Envelope, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6182
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: GeometryType, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6186
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6190
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6194
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6198
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6202
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: EndPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6206
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: IsClosed, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6210
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6214
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6218
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: NumPoints, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6222
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: PointN, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6226
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: StartPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6230
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6234
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6238
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6242
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6246
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6250
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6254
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6258
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6262
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6266
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6270
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6274
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6278
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6282
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6286
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6290
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6294
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6298
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6302
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6306
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6310
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6314
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6318
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6322
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6326
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6330
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6334
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6338
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6342
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6346
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6350
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6354
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6358
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6362
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6366
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6370
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6374
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6378
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6382
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6386
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6390
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6394
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6398
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6402
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6406
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6410
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6414
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6418
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6422
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6426
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6430
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6434
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6438
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Area, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6442
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Centroid, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6446
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: ExteriorRing, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6450
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: InteriorRingN, Polygon: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6454
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: NumInteriorRings, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6458
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: GeometryN, GeomColl: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6462
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: NumGeometries, GeomColl: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6466
		{
			yyLOCAL = &GeoHashFromLatLongExpr{Longitude: yyDollar[3].exprUnion(), Latitude: yyDollar[5].exprUnion(), MaxLength: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6470
		{
			yyLOCAL = &GeoHashFromPointExpr{Point: yyDollar[3].exprUnion(), MaxLength: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6474
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LatitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6478
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LongitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6482
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: PointFromHash, GeoHash: yyDollar[3].exprUnion(), SridOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6486
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6490
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6494
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion(), Srid: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6498
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6502
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6506
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion(), Bitmask: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6510
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6514
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6518
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6522
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6526
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6530
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6534
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6538
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6542
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6546
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6550
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6554
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6558
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6562
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6566
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6570
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6574
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6578
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6582
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6586
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6590
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6594
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6598
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6602
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6606
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6610
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6614
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6618
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6622
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6626
		{
			yyLOCAL = &MultiPolygonExpr{PolygonParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6630
		{
			yyLOCAL = &MultiPointExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6634
		{
			yyLOCAL = &MultiLinestringExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6638
		{
			yyLOCAL = &PolygonExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6642
		{
			yyLOCAL = &LineStringExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6646
		{
			yyLOCAL = &PointExpr{XCordinate: yyDollar[3].exprUnion(), YCordinate: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6650
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6654
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6658
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6662
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6666
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6670
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6674
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6678
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6682
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateAdd, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6686
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateSub, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6690
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6694
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6704
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6708
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6712
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6716
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6721
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6725
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6731
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6735
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6739
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6743
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6747
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6752
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6756
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6760
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6764
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6768
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6772
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6777
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6781
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6785
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6789
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6796
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6800
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6806
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6810
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6814
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6818
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6824
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6828
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6832
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6836
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6840
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6844
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6848
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6853
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6857
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6863
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6867
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6871
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6875
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6879
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6883
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6887
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6891
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6895
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6899
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6903
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6907
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6911
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6915
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6919
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6923
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6927
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6931
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6935
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6939
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6945
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6949
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6953
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6957
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6961
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6965
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6969
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6973
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6977
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6981
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6985
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6989
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6993
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6997
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7001
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7005
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7009
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7013
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:7023
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:7027
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:7031
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7041
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7045
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7049
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7053
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7057
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7063
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7067
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7071
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7075
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7079
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7085
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7089
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7093
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1437:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7099
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7103
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7107
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7113
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7117
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7121
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7125
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7129
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7135
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7139
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7143
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7147
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7151
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7155
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7159
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7163
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7167
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7171
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7177
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7181
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7186
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7190
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7195
		{
			yyVAL.str = string("")
		}
	case 1460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7199
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7205
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7209
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1463:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7215
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7220
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7224
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7230
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7234
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7238
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7242
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7248
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7252
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7258
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7267
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7271
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7276
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7280
		{
			yyLOCAL = &GroupBy{Exprs: yyDollar[3].exprsUnion(), WithRollup: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7285
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7289
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7295
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7299
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7305
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7311
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7315
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1484:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7320
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7324
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7329
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7333
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7339
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7345
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7349
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7355
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7360
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7364
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7368
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7373
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7377
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7383
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7387
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7391
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7396
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7400
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7404
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7408
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7412
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7419
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7423
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7427
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7431
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7437
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7441
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7445
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7449
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7454
		{
			yyVAL.str = ""
		}
	case 1514:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7458
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1515:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7462
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1516:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7466
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1517:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7471
		{
			yyVAL.str = ""
		}
	case 1518:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7475
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7481
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7485
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1521:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7490
		{
			yyVAL.str = ""
		}
	case 1522:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7494
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1523:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7499
		{
			yyVAL.str = "cascaded"
		}
	case 1524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7503
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7507
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7512
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7516
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7522
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7528
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7534
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7543
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7547
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1533:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7552
		{
			yyVAL.str = ""
		}
	case 1534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7556
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7562
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7566
		{
			yyLOCAL = ForUpdateLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7570
		{
			yyLOCAL = ForUpdateLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7574
		{
			yyLOCAL = ForShareLock
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7578
		{
			yyLOCAL = ForShareLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7582
		{
			yyLOCAL = ForShareLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7586
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7592
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7596
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7600
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7605
		{
			yyVAL.str = ""
		}
	case 1546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7609
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7613
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1548:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7618
		{
			yyVAL.str = ""
		}
	case 1549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7622
		{
			yyVAL.str = " header"
		}
	case 1550:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7627
		{
			yyVAL.str = ""
		}
	case 1551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7631
		{
			yyVAL.str = " manifest on"
		}
	case 1552:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7635
		{
			yyVAL.str = " manifest off"
		}
	case 1553:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7640
		{
			yyVAL.str = ""
		}
	case 1554:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7644
		{
			yyVAL.str = " overwrite on"
		}
	case 1555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7648
		{
			yyVAL.str = " overwrite off"
		}
	case 1556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7654
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1557:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7659
		{
			yyVAL.str = ""
		}
	case 1558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7663
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7669
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7673
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7679
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7683
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1563:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7688
		{
			yyVAL.str = ""
		}
	case 1564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7692
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1565:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7698
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1566:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7702
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1567:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7708
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1568:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7712
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1569:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7716
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1570:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7721
		{
			yyVAL.str = ""
		}
	case 1571:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7725
		{
			yyVAL.str = " optionally"
		}
	case 1572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7738
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion(), RowAlias: yyDollar[3].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7742
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7746
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion(), RowAlias: yyDollar[6].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7750
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion(), RowAlias: yyDollar[5].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7754
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7760
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7764
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7768
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1580:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7772
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1581:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7777
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7781
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7785
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7790
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7794
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7800
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7804
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7810
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7814
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7820
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7824
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7829
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7839
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7843
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7849
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7856
		{
			yyVAL.str = "charset"
		}
	case 1600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7866
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7870
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7874
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7883
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7885
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7888
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7890
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7893
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7895
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7898
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7900
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7903
		{
			yyVAL.empty = struct{}{}
		}
	case 1614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7905
		{
			yyVAL.empty = struct{}{}
		}
	case 1615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7907
		{
			yyVAL.empty = struct{}{}
		}
	case 1616:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7911
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1617:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7916
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1618:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7920
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1619:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7925
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7927
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1621:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7931
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7937
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7941
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7948
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7954
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7958
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1628:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7964
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7968
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7975
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7981
		{
			yyLOCAL = &Kill{Type: yyDollar[2].killTypeUnion(), ProcesslistID: convertStringToUInt64(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 1633:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL KillType
//line sql.y:7987
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:7991
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:7995
		{
			yyLOCAL = QueryType
		}
		yyVAL.union = yyLOCAL
	case 2254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8642
		{
		}
	case 2255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8647
		{
		}
	case 2256:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8651
		{
			skipToEnd(yylex)
		}
	case 2257:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8656
		{
			skipToEnd(yylex)
		}
	case 2258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8660
		{
			skipToEnd(yylex)
		}
	case 2259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8664
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
