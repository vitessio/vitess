// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const CALL = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const GENERATED = 57380
const ALWAYS = 57381
const OUTFILE = 57382
const S3 = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const DUMPFILE = 57390
const CSV = 57391
const HEADER = 57392
const MANIFEST = 57393
const OVERWRITE = 57394
const STARTING = 57395
const OPTIONALLY = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const NEXT = 57399
const VALUE = 57400
const SHARE = 57401
const MODE = 57402
const SQL_NO_CACHE = 57403
const SQL_CACHE = 57404
const SQL_CALC_FOUND_ROWS = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const INPLACE = 57418
const COPY = 57419
const ALGORITHM = 57420
const NONE = 57421
const SHARED = 57422
const EXCLUSIVE = 57423
const SUBQUERY_AS_EXPR = 57424
const ID = 57425
const AT_ID = 57426
const AT_AT_ID = 57427
const HEX = 57428
const STRING = 57429
const NCHAR_STRING = 57430
const INTEGRAL = 57431
const FLOAT = 57432
const DECIMAL = 57433
const HEXNUM = 57434
const VALUE_ARG = 57435
const LIST_ARG = 57436
const COMMENT = 57437
const COMMENT_KEYWORD = 57438
const BIT_LITERAL = 57439
const COMPRESSION = 57440
const JSON_PRETTY = 57441
const JSON_STORAGE_SIZE = 57442
const JSON_STORAGE_FREE = 57443
const EXTRACT = 57444
const NULL = 57445
const TRUE = 57446
const FALSE = 57447
const OFF = 57448
const DISCARD = 57449
const IMPORT = 57450
const ENABLE = 57451
const DISABLE = 57452
const TABLESPACE = 57453
const VIRTUAL = 57454
const STORED = 57455
const BOTH = 57456
const LEADING = 57457
const TRAILING = 57458
const EMPTY_FROM_CLAUSE = 57459
const LOWER_THAN_CHARSET = 57460
const CHARSET = 57461
const UNIQUE = 57462
const KEY = 57463
const EXPRESSION_PREC_SETTER = 57464
const OR = 57465
const XOR = 57466
const AND = 57467
const NOT = 57468
const BETWEEN = 57469
const CASE = 57470
const WHEN = 57471
const THEN = 57472
const ELSE = 57473
const END = 57474
const LE = 57475
const GE = 57476
const NE = 57477
const NULL_SAFE_EQUAL = 57478
const IS = 57479
const LIKE = 57480
const REGEXP = 57481
const IN = 57482
const SHIFT_LEFT = 57483
const SHIFT_RIGHT = 57484
const DIV = 57485
const MOD = 57486
const UNARY = 57487
const COLLATE = 57488
const BINARY = 57489
const UNDERSCORE_ARMSCII8 = 57490
const UNDERSCORE_ASCII = 57491
const UNDERSCORE_BIG5 = 57492
const UNDERSCORE_BINARY = 57493
const UNDERSCORE_CP1250 = 57494
const UNDERSCORE_CP1251 = 57495
const UNDERSCORE_CP1256 = 57496
const UNDERSCORE_CP1257 = 57497
const UNDERSCORE_CP850 = 57498
const UNDERSCORE_CP852 = 57499
const UNDERSCORE_CP866 = 57500
const UNDERSCORE_CP932 = 57501
const UNDERSCORE_DEC8 = 57502
const UNDERSCORE_EUCJPMS = 57503
const UNDERSCORE_EUCKR = 57504
const UNDERSCORE_GB18030 = 57505
const UNDERSCORE_GB2312 = 57506
const UNDERSCORE_GBK = 57507
const UNDERSCORE_GEOSTD8 = 57508
const UNDERSCORE_GREEK = 57509
const UNDERSCORE_HEBREW = 57510
const UNDERSCORE_HP8 = 57511
const UNDERSCORE_KEYBCS2 = 57512
const UNDERSCORE_KOI8R = 57513
const UNDERSCORE_KOI8U = 57514
const UNDERSCORE_LATIN1 = 57515
const UNDERSCORE_LATIN2 = 57516
const UNDERSCORE_LATIN5 = 57517
const UNDERSCORE_LATIN7 = 57518
const UNDERSCORE_MACCE = 57519
const UNDERSCORE_MACROMAN = 57520
const UNDERSCORE_SJIS = 57521
const UNDERSCORE_SWE7 = 57522
const UNDERSCORE_TIS620 = 57523
const UNDERSCORE_UCS2 = 57524
const UNDERSCORE_UJIS = 57525
const UNDERSCORE_UTF16 = 57526
const UNDERSCORE_UTF16LE = 57527
const UNDERSCORE_UTF32 = 57528
const UNDERSCORE_UTF8 = 57529
const UNDERSCORE_UTF8MB4 = 57530
const INTERVAL = 57531
const JSON_EXTRACT_OP = 57532
const JSON_UNQUOTE_EXTRACT_OP = 57533
const CREATE = 57534
const ALTER = 57535
const DROP = 57536
const RENAME = 57537
const ANALYZE = 57538
const ADD = 57539
const FLUSH = 57540
const CHANGE = 57541
const MODIFY = 57542
const DEALLOCATE = 57543
const REVERT = 57544
const SCHEMA = 57545
const TABLE = 57546
const INDEX = 57547
const VIEW = 57548
const TO = 57549
const IGNORE = 57550
const IF = 57551
const PRIMARY = 57552
const COLUMN = 57553
const SPATIAL = 57554
const FULLTEXT = 57555
const KEY_BLOCK_SIZE = 57556
const CHECK = 57557
const INDEXES = 57558
const ACTION = 57559
const CASCADE = 57560
const CONSTRAINT = 57561
const FOREIGN = 57562
const NO = 57563
const REFERENCES = 57564
const RESTRICT = 57565
const SHOW = 57566
const DESCRIBE = 57567
const EXPLAIN = 57568
const DATE = 57569
const ESCAPE = 57570
const REPAIR = 57571
const OPTIMIZE = 57572
const TRUNCATE = 57573
const COALESCE = 57574
const EXCHANGE = 57575
const REBUILD = 57576
const PARTITIONING = 57577
const REMOVE = 57578
const PREPARE = 57579
const EXECUTE = 57580
const MAXVALUE = 57581
const PARTITION = 57582
const REORGANIZE = 57583
const LESS = 57584
const THAN = 57585
const PROCEDURE = 57586
const TRIGGER = 57587
const VINDEX = 57588
const VINDEXES = 57589
const DIRECTORY = 57590
const NAME = 57591
const UPGRADE = 57592
const STATUS = 57593
const VARIABLES = 57594
const WARNINGS = 57595
const CASCADED = 57596
const DEFINER = 57597
const OPTION = 57598
const SQL = 57599
const UNDEFINED = 57600
const SEQUENCE = 57601
const MERGE = 57602
const TEMPORARY = 57603
const TEMPTABLE = 57604
const INVOKER = 57605
const SECURITY = 57606
const FIRST = 57607
const AFTER = 57608
const LAST = 57609
const VITESS_MIGRATION = 57610
const CANCEL = 57611
const RETRY = 57612
const COMPLETE = 57613
const CLEANUP = 57614
const BEGIN = 57615
const START = 57616
const TRANSACTION = 57617
const COMMIT = 57618
const ROLLBACK = 57619
const SAVEPOINT = 57620
const RELEASE = 57621
const WORK = 57622
const BIT = 57623
const TINYINT = 57624
const SMALLINT = 57625
const MEDIUMINT = 57626
const INT = 57627
const INTEGER = 57628
const BIGINT = 57629
const INTNUM = 57630
const REAL = 57631
const DOUBLE = 57632
const FLOAT_TYPE = 57633
const DECIMAL_TYPE = 57634
const NUMERIC = 57635
const TIME = 57636
const TIMESTAMP = 57637
const DATETIME = 57638
const YEAR = 57639
const CHAR = 57640
const VARCHAR = 57641
const BOOL = 57642
const CHARACTER = 57643
const VARBINARY = 57644
const NCHAR = 57645
const TEXT = 57646
const TINYTEXT = 57647
const MEDIUMTEXT = 57648
const LONGTEXT = 57649
const BLOB = 57650
const TINYBLOB = 57651
const MEDIUMBLOB = 57652
const LONGBLOB = 57653
const JSON = 57654
const ENUM = 57655
const GEOMETRY = 57656
const POINT = 57657
const LINESTRING = 57658
const POLYGON = 57659
const GEOMETRYCOLLECTION = 57660
const MULTIPOINT = 57661
const MULTILINESTRING = 57662
const MULTIPOLYGON = 57663
const ASCII = 57664
const UNICODE = 57665
const NULLX = 57666
const AUTO_INCREMENT = 57667
const APPROXNUM = 57668
const SIGNED = 57669
const UNSIGNED = 57670
const ZEROFILL = 57671
const CODE = 57672
const COLLATION = 57673
const COLUMNS = 57674
const DATABASES = 57675
const ENGINES = 57676
const EVENT = 57677
const EXTENDED = 57678
const FIELDS = 57679
const FULL = 57680
const FUNCTION = 57681
const GTID_EXECUTED = 57682
const KEYSPACES = 57683
const OPEN = 57684
const PLUGINS = 57685
const PRIVILEGES = 57686
const PROCESSLIST = 57687
const SCHEMAS = 57688
const TABLES = 57689
const TRIGGERS = 57690
const USER = 57691
const VGTID_EXECUTED = 57692
const VITESS_KEYSPACES = 57693
const VITESS_METADATA = 57694
const VITESS_MIGRATIONS = 57695
const VITESS_REPLICATION_STATUS = 57696
const VITESS_SHARDS = 57697
const VITESS_TABLETS = 57698
const VSCHEMA = 57699
const NAMES = 57700
const GLOBAL = 57701
const SESSION = 57702
const ISOLATION = 57703
const LEVEL = 57704
const READ = 57705
const WRITE = 57706
const ONLY = 57707
const REPEATABLE = 57708
const COMMITTED = 57709
const UNCOMMITTED = 57710
const SERIALIZABLE = 57711
const CURRENT_TIMESTAMP = 57712
const DATABASE = 57713
const CURRENT_DATE = 57714
const CURRENT_TIME = 57715
const LOCALTIME = 57716
const LOCALTIMESTAMP = 57717
const CURRENT_USER = 57718
const UTC_DATE = 57719
const UTC_TIME = 57720
const UTC_TIMESTAMP = 57721
const DAY = 57722
const DAY_HOUR = 57723
const DAY_MICROSECOND = 57724
const DAY_MINUTE = 57725
const DAY_SECOND = 57726
const HOUR = 57727
const HOUR_MICROSECOND = 57728
const HOUR_MINUTE = 57729
const HOUR_SECOND = 57730
const MICROSECOND = 57731
const MINUTE = 57732
const MINUTE_MICROSECOND = 57733
const MINUTE_SECOND = 57734
const MONTH = 57735
const QUARTER = 57736
const SECOND = 57737
const SECOND_MICROSECOND = 57738
const YEAR_MONTH = 57739
const WEEK = 57740
const REPLACE = 57741
const CONVERT = 57742
const CAST = 57743
const SUBSTR = 57744
const SUBSTRING = 57745
const GROUP_CONCAT = 57746
const SEPARATOR = 57747
const TIMESTAMPADD = 57748
const TIMESTAMPDIFF = 57749
const WEIGHT_STRING = 57750
const LTRIM = 57751
const RTRIM = 57752
const TRIM = 57753
const JSON_ARRAY = 57754
const JSON_OBJECT = 57755
const JSON_QUOTE = 57756
const MATCH = 57757
const AGAINST = 57758
const BOOLEAN = 57759
const LANGUAGE = 57760
const WITH = 57761
const QUERY = 57762
const EXPANSION = 57763
const WITHOUT = 57764
const VALIDATION = 57765
const UNUSED = 57766
const ARRAY = 57767
const CUME_DIST = 57768
const DESCRIPTION = 57769
const DENSE_RANK = 57770
const EMPTY = 57771
const EXCEPT = 57772
const FIRST_VALUE = 57773
const GROUPING = 57774
const GROUPS = 57775
const JSON_TABLE = 57776
const LAG = 57777
const LAST_VALUE = 57778
const LATERAL = 57779
const LEAD = 57780
const MEMBER = 57781
const NTH_VALUE = 57782
const NTILE = 57783
const OF = 57784
const OVER = 57785
const PERCENT_RANK = 57786
const RANK = 57787
const RECURSIVE = 57788
const ROW_NUMBER = 57789
const SYSTEM = 57790
const WINDOW = 57791
const ACTIVE = 57792
const ADMIN = 57793
const BUCKETS = 57794
const CLONE = 57795
const COMPONENT = 57796
const DEFINITION = 57797
const ENFORCED = 57798
const EXCLUDE = 57799
const FOLLOWING = 57800
const GEOMCOLLECTION = 57801
const GET_MASTER_PUBLIC_KEY = 57802
const HISTOGRAM = 57803
const HISTORY = 57804
const INACTIVE = 57805
const INVISIBLE = 57806
const LOCKED = 57807
const MASTER_COMPRESSION_ALGORITHMS = 57808
const MASTER_PUBLIC_KEY_PATH = 57809
const MASTER_TLS_CIPHERSUITES = 57810
const MASTER_ZSTD_COMPRESSION_LEVEL = 57811
const NESTED = 57812
const NETWORK_NAMESPACE = 57813
const NOWAIT = 57814
const NULLS = 57815
const OJ = 57816
const OLD = 57817
const OPTIONAL = 57818
const ORDINALITY = 57819
const ORGANIZATION = 57820
const OTHERS = 57821
const PATH = 57822
const PERSIST = 57823
const PERSIST_ONLY = 57824
const PRECEDING = 57825
const PRIVILEGE_CHECKS_USER = 57826
const PROCESS = 57827
const RANDOM = 57828
const REFERENCE = 57829
const REQUIRE_ROW_FORMAT = 57830
const RESOURCE = 57831
const RESPECT = 57832
const RESTART = 57833
const RETAIN = 57834
const REUSE = 57835
const ROLE = 57836
const SECONDARY = 57837
const SECONDARY_ENGINE = 57838
const SECONDARY_LOAD = 57839
const SECONDARY_UNLOAD = 57840
const SKIP = 57841
const SRID = 57842
const THREAD_PRIORITY = 57843
const TIES = 57844
const UNBOUNDED = 57845
const VCPU = 57846
const VISIBLE = 57847
const FORMAT = 57848
const TREE = 57849
const VITESS = 57850
const TRADITIONAL = 57851
const LOCAL = 57852
const LOW_PRIORITY = 57853
const NO_WRITE_TO_BINLOG = 57854
const LOGS = 57855
const ERROR = 57856
const GENERAL = 57857
const HOSTS = 57858
const OPTIMIZER_COSTS = 57859
const USER_RESOURCES = 57860
const SLOW = 57861
const CHANNEL = 57862
const RELAY = 57863
const EXPORT = 57864
const AVG_ROW_LENGTH = 57865
const CONNECTION = 57866
const CHECKSUM = 57867
const DELAY_KEY_WRITE = 57868
const ENCRYPTION = 57869
const ENGINE = 57870
const INSERT_METHOD = 57871
const MAX_ROWS = 57872
const MIN_ROWS = 57873
const PACK_KEYS = 57874
const PASSWORD = 57875
const FIXED = 57876
const DYNAMIC = 57877
const COMPRESSED = 57878
const REDUNDANT = 57879
const COMPACT = 57880
const ROW_FORMAT = 57881
const STATS_AUTO_RECALC = 57882
const STATS_PERSISTENT = 57883
const STATS_SAMPLE_PAGES = 57884
const STORAGE = 57885
const MEMORY = 57886
const DISK = 57887
const PARTITIONS = 57888
const LINEAR = 57889
const RANGE = 57890
const LIST = 57891
const SUBPARTITION = 57892
const SUBPARTITIONS = 57893
const HASH = 57894

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	10, 47,
	11, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	570, 145,
	-2, 151,
	-1, 48,
	122, 151,
	162, 151,
	318, 151,
	-2, 452,
	-1, 55,
	33, 650,
	222, 650,
	233, 650,
	268, 664,
	269, 664,
	-2, 652,
	-1, 60,
	224, 675,
	-2, 673,
	-1, 114,
	221, 1161,
	-2, 119,
	-1, 116,
	1, 146,
	570, 146,
	-2, 151,
	-1, 126,
	123, 355,
	227, 355,
	-2, 446,
	-1, 145,
	122, 151,
	162, 151,
	318, 151,
	-2, 461,
	-1, 629,
	206, 1182,
	-2, 1178,
	-1, 630,
	206, 1183,
	-2, 1179,
	-1, 704,
	57, 743,
	-2, 758,
	-1, 741,
	138, 1556,
	-2, 112,
	-1, 742,
	138, 1424,
	-2, 113,
	-1, 748,
	138, 1485,
	-2, 1155,
	-1, 894,
	138, 1355,
	-2, 1152,
	-1, 932,
	232, 41,
	237, 41,
	-2, 366,
	-1, 1009,
	1, 500,
	570, 500,
	-2, 151,
	-1, 1220,
	57, 744,
	-2, 763,
	-1, 1221,
	57, 745,
	-2, 764,
	-1, 1273,
	122, 151,
	162, 151,
	318, 151,
	-2, 396,
	-1, 1350,
	123, 355,
	227, 355,
	-2, 446,
	-1, 1359,
	232, 42,
	237, 42,
	-2, 367,
	-1, 1628,
	206, 1187,
	-2, 1181,
	-1, 1711,
	122, 151,
	162, 151,
	318, 151,
	-2, 397,
	-1, 1718,
	23, 170,
	-2, 172,
	-1, 1924,
	84, 39,
	-2, 800,
	-1, 1976,
	75, 94,
	84, 94,
	-2, 820,
	-1, 2150,
	47, 1123,
	-2, 1117,
	-1, 2321,
	84, 39,
	-2, 801,
	-1, 2359,
	5, 53,
	16, 53,
	18, 53,
	85, 53,
	-2, 792,
	-1, 2605,
	90, 540,
	91, 540,
	164, 540,
	165, 540,
	166, 540,
	167, 540,
	168, 540,
	169, 540,
	170, 540,
	171, 540,
	172, 540,
	173, 540,
	174, 540,
	175, 540,
	176, 540,
	177, 540,
	178, 540,
	179, 540,
	180, 540,
	181, 540,
	182, 540,
	183, 540,
	184, 540,
	185, 540,
	186, 540,
	187, 540,
	188, 540,
	189, 540,
	190, 540,
	191, 540,
	192, 540,
	193, 540,
	194, 540,
	195, 540,
	196, 540,
	197, 540,
	198, 540,
	199, 540,
	200, 540,
	201, 540,
	202, 540,
	203, 540,
	204, 540,
	-2, 1487,
}

const yyPrivate = 57344

const yyLast = 37971

var yyAct = [...]int{
	629, 638, 631, 2670, 2669, 2652, 2549, 2603, 2646, 1708,
	1276, 2607, 2420, 2273, 2588, 1642, 2203, 2210, 2244, 2511,
	575, 1662, 2161, 3, 719, 1199, 1073, 2164, 697, 2446,
	96, 2212, 2165, 2525, 1912, 2255, 1771, 2256, 571, 2330,
	2162, 623, 37, 2451, 624, 632, 2324, 621, 622, 597,
	2258, 182, 1970, 2159, 182, 568, 535, 182, 1235, 1681,
	2350, 1939, 551, 1666, 182, 2151, 2316, 1741, 1021, 569,
	2008, 1746, 182, 2078, 897, 2009, 1959, 1761, 1697, 2010,
	2037, 567, 1686, 154, 1330, 962, 746, 182, 38, 1222,
	720, 1685, 1914, 563, 1947, 1622, 1931, 1619, 2094, 1562,
	1555, 1357, 140, 1514, 1780, 1813, 1760, 699, 1050, 551,
	36, 1748, 551, 182, 551, 2002, 922, 1644, 927, 701,
	1265, 705, 580, 1244, 91, 1465, 1978, 1373, 95, 1688,
	1202, 1155, 1574, 1532, 1092, 743, 1461, 1364, 904, 722,
	930, 901, 1758, 933, 1673, 1264, 1447, 1737, 928, 929,
	905, 1248, 1615, 1066, 733, 940, 711, 1262, 1470, 157,
	117, 1005, 98, 118, 1325, 1349, 1667, 123, 707, 709,
	124, 97, 85, 558, 1162, 1635, 2558, 1158, 2030, 89,
	2653, 2241, 1773, 1071, 1773, 1774, 1775, 76, 2057, 2056,
	706, 2028, 1811, 1433, 2086, 184, 185, 186, 708, 77,
	8, 7, 727, 6, 732, 2087, 2679, 119, 2673, 184,
	185, 186, 90, 2680, 125, 713, 1639, 1640, 1093, 1521,
	1520, 1519, 508, 1518, 1517, 1516, 1503, 1508, 964, 967,
	898, 538, 561, 2621, 562, 1910, 1625, 2147, 1093, 559,
	2666, 978, 979, 908, 982, 983, 984, 985, 698, 1941,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 700, 740, 714, 943, 913,
	721, 2630, 525, 2643, 2227, 747, 119, 919, 2385, 2507,
	918, 2506, 966, 944, 102, 2672, 920, 968, 969, 970,
	2413, 2680, 965, 2414, 78, 78, 78, 80, 2665, 2598,
	2656, 2569, 2641, 78, 2421, 178, 2589, 1799, 2597, 975,
	2568, 1851, 2093, 2306, 1911, 1753, 1339, 2065, 524, 1950,
	1266, 2064, 1267, 1103, 980, 104, 105, 2199, 108, 120,
	522, 114, 1987, 912, 179, 1986, 914, 503, 1988, 1751,
	119, 2085, 162, 1103, 1951, 2464, 1848, 2200, 2201, 1703,
	1704, 1702, 1040, 1045, 1046, 1069, 691, 693, 694, 695,
	696, 1028, 690, 704, 1641, 2031, 1029, 2095, 2550, 1999,
	519, 87, 87, 87, 1027, 1849, 1026, 1028, 2327, 533,
	87, 1124, 1029, 917, 1992, 1014, 1015, 1008, 1721, 1720,
	2120, 735, 736, 2297, 530, 2295, 1041, 1034, 549, 159,
	538, 160, 2516, 1125, 1126, 1127, 1128, 1129, 1130, 1131,
	1133, 1132, 1134, 1135, 177, 1507, 1099, 1017, 2275, 1091,
	553, 1206, 1509, 1510, 1511, 547, 538, 539, 2038, 1781,
	917, 1453, 909, 2060, 1814, 2655, 1099, 2268, 1448, 911,
	910, 915, 1047, 1819, 538, 2269, 1423, 1063, 2097, 1004,
	1043, 1044, 1048, 1049, 1010, 1068, 2073, 509, 1830, 511,
	526, 538, 541, 987, 540, 515, 986, 513, 517, 527,
	518, 1750, 512, 1603, 523, 1042, 1035, 514, 528, 529,
	531, 545, 544, 532, 981, 521, 542, 2277, 915, 2622,
	1424, 1827, 1425, 1828, 1057, 1829, 1059, 2276, 1820, 1816,
	1784, 921, 2406, 182, 2252, 182, 87, 1682, 182, 951,
	2107, 2106, 2105, 2099, 923, 2103, 924, 2098, 924, 2096,
	949, 960, 163, 959, 2101, 958, 1061, 957, 956, 917,
	1003, 168, 955, 2100, 1056, 1058, 551, 551, 551, 1209,
	954, 953, 2121, 1825, 1822, 1824, 1823, 1342, 2102, 2104,
	948, 916, 1136, 961, 551, 551, 1595, 1584, 1585, 1586,
	1587, 1597, 1588, 1589, 1590, 1602, 1598, 1591, 1592, 1599,
	1600, 1601, 1593, 1594, 1596, 2216, 1818, 1136, 1024, 1085,
	1030, 1031, 1032, 1033, 2660, 1098, 1095, 1096, 1097, 1102,
	1104, 1101, 2639, 1100, 1007, 942, 539, 37, 916, 902,
	1094, 2650, 902, 1070, 936, 1098, 1095, 1096, 1097, 1102,
	1104, 1101, 935, 1100, 1462, 2251, 1849, 2226, 1817, 1038,
	1094, 2557, 539, 2029, 2062, 1054, 902, 1454, 1759, 1055,
	900, 2032, 2077, 734, 1363, 2089, 543, 2074, 1064, 1060,
	539, 1805, 155, 1668, 1669, 942, 1139, 1140, 1141, 1142,
	2328, 1458, 952, 1062, 536, 1079, 1147, 539, 1150, 1192,
	1862, 1053, 971, 950, 1915, 1917, 2234, 977, 942, 537,
	2059, 1337, 1336, 2567, 1335, 2049, 1752, 1459, 1333, 2503,
	507, 942, 1197, 1006, 502, 2072, 1452, 2546, 2071, 2366,
	2517, 182, 1801, 941, 2346, 551, 551, 916, 1983, 935,
	938, 939, 1946, 902, 81, 1143, 1902, 932, 936, 1634,
	2671, 182, 942, 1137, 1138, 1435, 1434, 1436, 1437, 1438,
	1075, 1076, 1210, 1252, 86, 86, 86, 1850, 931, 1213,
	551, 699, 1215, 86, 182, 1179, 1019, 2206, 1362, 551,
	1212, 116, 1709, 941, 1216, 551, 2613, 1013, 945, 935,
	701, 1198, 1136, 2611, 77, 1135, 1088, 1086, 946, 1087,
	1025, 2198, 2615, 2616, 1051, 743, 941, 2080, 942, 716,
	2214, 2215, 2079, 1016, 1160, 1164, 1161, 2612, 947, 941,
	1067, 2563, 2207, 2080, 2402, 935, 938, 939, 2079, 902,
	1471, 2340, 1214, 932, 936, 963, 95, 1023, 1815, 111,
	1185, 1186, 1187, 1188, 1455, 1268, 2648, 2209, 1037, 2649,
	941, 2647, 1089, 1198, 2204, 945, 935, 1916, 2113, 1039,
	1203, 1449, 1575, 1450, 1876, 946, 1451, 1575, 2303, 2021,
	98, 2214, 2215, 1106, 1108, 1107, 1108, 2460, 2205, 2361,
	156, 161, 158, 164, 165, 166, 167, 169, 170, 171,
	172, 184, 185, 186, 2377, 1557, 173, 174, 175, 176,
	2376, 1537, 112, 1200, 2301, 1229, 941, 1788, 976, 1372,
	2211, 1211, 698, 1800, 2213, 1538, 1539, 1536, 1107, 1108,
	1234, 1106, 1231, 1107, 1108, 1106, 2216, 1107, 1108, 1124,
	1258, 1259, 1371, 1229, 2115, 1361, 700, 182, 2635, 1793,
	1052, 1326, 1793, 1798, 1796, 747, 1106, 1884, 1107, 1108,
	1334, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1132,
	1134, 1135, 1009, 951, 949, 1263, 1472, 1865, 1558, 1797,
	1022, 551, 1795, 1359, 1106, 2213, 1107, 1108, 1527, 1529,
	1530, 1368, 1854, 1855, 1856, 1370, 2367, 2216, 551, 551,
	1253, 551, 2663, 551, 551, 2498, 551, 551, 551, 551,
	551, 551, 1528, 1867, 1369, 1130, 1131, 1133, 1132, 1134,
	1135, 551, 1866, 2574, 2539, 182, 1406, 1125, 1126, 1127,
	1128, 1129, 1130, 1131, 1133, 1132, 1134, 1135, 1217, 1401,
	1402, 182, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1132,
	1134, 1135, 551, 2436, 182, 1355, 1340, 1341, 2575, 2540,
	1106, 1442, 1107, 1108, 1106, 1460, 1107, 1108, 551, 1440,
	182, 1128, 1129, 1130, 1131, 1133, 1132, 1134, 1135, 1348,
	1106, 2435, 1107, 1108, 738, 87, 182, 2384, 1892, 2661,
	1229, 1430, 1367, 182, 2636, 1403, 1872, 1579, 2383, 1535,
	2208, 2242, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 551, 551, 551, 2232, 2006, 1409, 1410, 2005, 1332,
	1756, 1443, 1415, 1416, 1441, 1428, 1375, 1366, 1376, 1427,
	1378, 1380, 1439, 1426, 1384, 1386, 1388, 1390, 1392, 1417,
	1411, 1345, 182, 1346, 1365, 1365, 1344, 1358, 1124, 1408,
	2088, 1407, 2272, 1475, 1429, 1382, 1467, 1194, 1419, 1242,
	1479, 1229, 1481, 1482, 1483, 1484, 2662, 2543, 1871, 1488,
	1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1132, 1134,
	1135, 1922, 2542, 1502, 1921, 1473, 1474, 1556, 1404, 1112,
	1113, 1114, 1115, 1116, 1117, 1118, 1110, 1238, 2541, 1478,
	1565, 551, 1106, 1463, 1107, 1108, 1485, 1486, 1487, 2459,
	1106, 2457, 1107, 1108, 1533, 2432, 551, 551, 2637, 119,
	919, 630, 2381, 918, 1241, 2373, 2015, 1540, 1576, 1542,
	1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552,
	1553, 1554, 1541, 1531, 2003, 1477, 1239, 1809, 1338, 1674,
	1675, 1616, 643, 644, 645, 182, 1626, 1808, 2554, 1106,
	551, 1107, 1108, 184, 185, 186, 1106, 1501, 1107, 1108,
	1665, 1647, 183, 1560, 1229, 183, 1559, 1504, 183, 2496,
	1468, 1616, 1431, 552, 182, 183, 1418, 551, 1652, 1414,
	1653, 1413, 1534, 183, 1498, 1499, 1500, 182, 1412, 1106,
	551, 1107, 1108, 1240, 1078, 182, 1065, 182, 183, 182,
	182, 551, 1229, 101, 551, 1106, 1628, 1107, 1108, 2524,
	1106, 2523, 1107, 1108, 100, 551, 99, 1630, 1631, 1626,
	552, 92, 2309, 552, 183, 552, 1718, 743, 95, 2308,
	743, 1124, 93, 1861, 2492, 2480, 2482, 2481, 603, 92,
	1106, 2491, 1107, 1108, 2403, 1627, 94, 95, 1937, 2654,
	93, 1684, 1658, 1125, 1126, 1127, 1128, 1129, 1130, 1131,
	1133, 1132, 1134, 1135, 1106, 2419, 1107, 1108, 2626, 1229,
	551, 1106, 1896, 1107, 1108, 2193, 1762, 1763, 1764, 1628,
	94, 1766, 1768, 1229, 1849, 1106, 1229, 1107, 1108, 1713,
	2039, 1727, 1728, 1729, 1730, 551, 713, 1712, 1646, 1937,
	2595, 551, 1368, 1695, 1229, 1368, 1722, 1368, 1723, 1724,
	1725, 1726, 2007, 1792, 1106, 2018, 1107, 1108, 1679, 1937,
	2582, 1561, 1937, 2578, 1733, 1734, 1735, 1736, 1567, 1568,
	1660, 1717, 1743, 1716, 1782, 184, 185, 186, 1229, 2374,
	2339, 1677, 1979, 551, 1933, 1556, 1749, 1700, 2570, 1229,
	1556, 1556, 2341, 1106, 1948, 1107, 1108, 1629, 1699, 94,
	1632, 1633, 1948, 1715, 1714, 1937, 2559, 747, 1105, 1779,
	747, 184, 185, 186, 2160, 1990, 184, 185, 186, 2619,
	1769, 184, 185, 186, 2339, 1767, 182, 2411, 2556, 1937,
	2499, 2411, 1229, 182, 1937, 2409, 1657, 1979, 182, 182,
	1793, 1229, 182, 1787, 182, 1980, 1790, 1744, 1791, 1739,
	1740, 182, 100, 101, 1982, 1755, 1863, 1802, 182, 1757,
	1754, 1765, 2344, 1229, 100, 1956, 99, 2224, 2223, 2220,
	2221, 2220, 2219, 2339, 943, 94, 1956, 1229, 1794, 1786,
	1744, 1789, 1785, 1863, 1229, 1804, 182, 551, 1803, 944,
	1806, 1807, 1849, 2058, 1329, 2043, 2035, 2036, 2562, 1365,
	1980, 1937, 1936, 1105, 1229, 1329, 1328, 1274, 1273, 1849,
	1937, 1956, 1955, 2222, 2135, 1701, 1863, 1895, 1881, 1880,
	1863, 1124, 1840, 1841, 1120, 1793, 1121, 1843, 2386, 1812,
	1776, 1672, 1397, 1229, 1233, 1793, 1844, 1637, 1512, 1457,
	1122, 1123, 1119, 1125, 1126, 1127, 1128, 1129, 1130, 1131,
	1133, 1132, 1134, 1135, 1260, 703, 926, 925, 2585, 87,
	625, 1533, 598, 600, 626, 627, 1956, 596, 599, 628,
	2513, 1236, 2489, 1858, 2471, 1860, 1833, 2401, 2387, 2388,
	2389, 2398, 1398, 1399, 1400, 2379, 2390, 2312, 1859, 2311,
	1331, 1742, 2270, 2247, 2243, 2044, 601, 602, 2479, 2483,
	2484, 2485, 2486, 2487, 2488, 1961, 1964, 1965, 1966, 1962,
	1738, 1963, 1967, 1732, 1731, 2351, 2352, 1445, 182, 1360,
	1356, 1327, 113, 2011, 2245, 1394, 182, 1847, 2012, 1008,
	2274, 551, 87, 2391, 2392, 2351, 2352, 551, 2514, 1534,
	1753, 1908, 1650, 2678, 2676, 2632, 2608, 2354, 551, 2239,
	1857, 2238, 1925, 2237, 183, 2160, 183, 2022, 1834, 183,
	1505, 1961, 1964, 1965, 1966, 1962, 2357, 1963, 1967, 2182,
	2012, 182, 1395, 1396, 2183, 182, 1227, 1223, 2184, 2356,
	1965, 1966, 2179, 1227, 1223, 1952, 1875, 552, 552, 552,
	1989, 1224, 2180, 2178, 2441, 2624, 2440, 2181, 1224, 2596,
	1664, 1628, 1237, 37, 1656, 552, 552, 2345, 2140, 1938,
	2152, 2154, 1972, 2139, 2041, 2538, 1654, 1655, 1226, 2155,
	1225, 2332, 1890, 1220, 1221, 1226, 2450, 1225, 1934, 2331,
	717, 2452, 2335, 2149, 551, 1456, 689, 2218, 718, 182,
	1627, 1997, 2016, 1919, 2439, 1571, 182, 1203, 1909, 973,
	972, 2284, 92, 2011, 2051, 2083, 1077, 2050, 551, 1572,
	120, 2337, 1930, 93, 1935, 551, 92, 2000, 2001, 1368,
	1368, 101, 94, 94, 551, 1993, 1945, 93, 1977, 2034,
	2658, 1971, 100, 2235, 99, 1837, 2055, 1873, 1674, 1675,
	2555, 2509, 2217, 94, 2054, 1969, 1661, 182, 182, 182,
	182, 182, 1984, 1981, 1826, 1749, 2317, 1991, 725, 726,
	2138, 101, 1994, 1853, 182, 182, 2014, 99, 2137, 2530,
	2529, 2458, 100, 100, 99, 2456, 2455, 2448, 2004, 2399,
	182, 2336, 2334, 2248, 1777, 1343, 724, 2447, 2325, 2013,
	1899, 1900, 183, 2019, 101, 1948, 552, 552, 1556, 2023,
	2024, 2025, 2634, 2633, 103, 100, 1933, 2122, 1882, 1348,
	1648, 1254, 183, 1246, 2053, 106, 107, 2634, 2544, 2372,
	2045, 2046, 715, 88, 1, 2610, 520, 1638, 1201, 534,
	2606, 552, 2112, 551, 699, 183, 1432, 2052, 1422, 2422,
	552, 1617, 1618, 2510, 2040, 1783, 552, 2397, 1747, 551,
	934, 145, 1710, 1711, 2591, 110, 895, 109, 937, 2129,
	1036, 1778, 2091, 2412, 182, 1998, 1719, 2075, 551, 1280,
	1278, 1279, 1277, 2090, 1282, 1281, 1883, 551, 2081, 1506,
	548, 2082, 1968, 180, 551, 551, 1269, 182, 182, 182,
	182, 182, 1247, 2092, 974, 2108, 510, 2225, 2109, 182,
	1810, 2163, 2157, 2129, 182, 516, 2163, 182, 2172, 182,
	1148, 2136, 182, 182, 182, 1985, 2143, 744, 737, 1649,
	1923, 2168, 2192, 2124, 2329, 705, 2166, 2128, 2148, 2150,
	1940, 2153, 2146, 2537, 2449, 2583, 2130, 1995, 1243, 1874,
	1573, 1689, 1526, 573, 572, 1216, 1972, 2233, 570, 1926,
	1949, 1111, 633, 182, 2144, 1913, 2142, 2141, 1255, 1960,
	1958, 2194, 1957, 1835, 2195, 1696, 551, 2353, 2349, 2668,
	2174, 2175, 707, 2177, 2185, 551, 2134, 2602, 2173, 1691,
	182, 2176, 1687, 1932, 581, 574, 566, 2369, 2260, 2250,
	182, 2196, 2061, 95, 706, 2271, 2254, 2063, 183, 1996,
	1467, 2131, 2132, 2133, 2267, 182, 2202, 1090, 182, 1219,
	560, 907, 2171, 1570, 2189, 2190, 2229, 2515, 2285, 2228,
	2501, 1852, 2305, 1218, 1582, 1583, 2240, 2230, 2231, 2262,
	2261, 1770, 552, 63, 41, 1610, 555, 2620, 1081, 731,
	2249, 32, 31, 30, 29, 2253, 28, 23, 22, 552,
	552, 1749, 552, 21, 552, 552, 20, 552, 552, 552,
	552, 552, 552, 2265, 19, 25, 551, 182, 18, 17,
	16, 2629, 552, 2657, 115, 50, 183, 2280, 47, 2279,
	2282, 2283, 45, 122, 121, 48, 44, 1011, 42, 2287,
	27, 26, 183, 15, 14, 13, 12, 2293, 11, 10,
	2286, 9, 5, 552, 4, 183, 35, 34, 33, 1084,
	2290, 2291, 24, 2292, 2, 2027, 2294, 1772, 2296, 552,
	2298, 183, 0, 0, 182, 0, 0, 0, 0, 2318,
	2319, 0, 0, 0, 0, 0, 0, 183, 2326, 0,
	0, 0, 2375, 0, 183, 2338, 2333, 182, 0, 0,
	0, 0, 0, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 552, 552, 552, 182, 2323, 2355, 182, 182,
	182, 0, 0, 0, 0, 2358, 2363, 178, 551, 551,
	0, 0, 2362, 0, 2262, 2261, 2370, 2371, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 2348, 0, 2404,
	2405, 120, 0, 0, 0, 551, 551, 551, 551, 0,
	0, 0, 0, 2380, 162, 2382, 0, 0, 0, 2364,
	2365, 0, 0, 0, 0, 0, 0, 2407, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2416,
	2417, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 552, 0, 0, 2418, 0, 0, 0, 0,
	2431, 0, 0, 614, 0, 0, 2444, 552, 552, 0,
	0, 159, 0, 160, 2427, 551, 0, 551, 0, 0,
	0, 0, 0, 0, 0, 2428, 177, 0, 0, 0,
	2163, 0, 0, 2474, 2473, 0, 0, 2465, 0, 2454,
	2445, 0, 2453, 2467, 2463, 0, 183, 2469, 0, 699,
	2461, 552, 0, 0, 0, 37, 2166, 0, 0, 0,
	2166, 0, 0, 0, 0, 550, 0, 0, 0, 0,
	0, 0, 551, 0, 0, 183, 0, 0, 552, 0,
	0, 2478, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 552, 551, 2497, 0, 0, 183, 0, 183, 0,
	183, 183, 552, 0, 2494, 552, 2495, 0, 0, 551,
	0, 2504, 745, 551, 551, 899, 552, 906, 2512, 2505,
	0, 2500, 2493, 0, 0, 0, 0, 2475, 2476, 0,
	0, 0, 0, 0, 163, 0, 0, 0, 0, 0,
	0, 0, 551, 168, 2536, 2534, 2531, 2532, 0, 2533,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	551, 0, 2545, 2548, 2547, 0, 0, 0, 0, 0,
	0, 552, 0, 0, 2551, 0, 699, 0, 0, 2166,
	0, 2553, 0, 0, 551, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 552, 0, 0, 0,
	0, 0, 552, 2561, 0, 2564, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 551, 0, 0,
	0, 37, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 551, 551, 2163, 0, 2576, 0, 0,
	0, 551, 0, 0, 552, 0, 2581, 2586, 0, 2584,
	182, 551, 2590, 0, 155, 0, 0, 0, 0, 2512,
	2592, 0, 0, 0, 0, 2601, 0, 37, 0, 2617,
	2609, 2614, 0, 0, 0, 0, 0, 0, 0, 2623,
	0, 0, 0, 0, 0, 2628, 0, 183, 2631, 0,
	551, 0, 0, 0, 183, 0, 0, 551, 0, 183,
	183, 2474, 2645, 183, 2642, 183, 2640, 0, 2644, 0,
	0, 2638, 183, 2651, 0, 0, 0, 0, 0, 183,
	0, 0, 2659, 0, 0, 0, 0, 0, 0, 0,
	2664, 0, 0, 0, 0, 0, 0, 615, 2474, 2667,
	0, 0, 2675, 2674, 0, 2474, 2677, 183, 552, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 0,
	0, 506, 0, 0, 546, 0, 0, 0, 0, 0,
	0, 506, 0, 0, 0, 0, 0, 0, 0, 506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 712, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	730, 0, 730, 0, 0, 0, 0, 0, 0, 0,
	506, 0, 156, 161, 158, 164, 165, 166, 167, 169,
	170, 171, 172, 0, 0, 0, 0, 0, 173, 174,
	175, 176, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 552, 0, 0, 0, 0, 0, 552, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 552,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 183, 0, 0, 745,
	745, 745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1080, 1082, 178,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2033, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 120, 0, 142, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 552, 162, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 1228, 0, 0, 0, 0, 552,
	0, 0, 0, 0, 0, 0, 552, 152, 0, 0,
	0, 0, 141, 0, 0, 552, 0, 0, 0, 0,
	0, 0, 1195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 159, 0, 160, 0, 0, 183, 183,
	183, 183, 183, 0, 1351, 1352, 151, 150, 177, 0,
	0, 0, 0, 0, 0, 183, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 1207, 1208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1250, 0, 0, 0, 0, 0, 0,
	0, 0, 745, 0, 552, 0, 0, 0, 1270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	552, 0, 0, 0, 146, 1353, 153, 0, 1350, 0,
	147, 148, 0, 0, 0, 183, 163, 0, 0, 552,
	0, 0, 0, 0, 0, 168, 0, 0, 552, 0,
	0, 0, 0, 0, 0, 552, 552, 0, 183, 183,
	183, 183, 183, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 183, 0, 0, 183, 0,
	183, 0, 0, 183, 183, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	506, 0, 506, 0, 0, 506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 552, 0, 0,
	0, 0, 0, 0, 0, 0, 552, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 155, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 899, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1195, 0, 0,
	0, 1374, 1374, 0, 1374, 0, 1374, 1374, 0, 1383,
	1374, 1374, 1374, 1374, 1374, 0, 0, 0, 0, 0,
	0, 149, 1195, 1195, 899, 0, 1196, 552, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 0, 0, 144, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1444, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1464, 0, 0, 0, 0, 0, 0, 506, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 712, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 745, 745, 745, 0, 0, 0,
	0, 506, 0, 0, 0, 0, 183, 0, 0, 183,
	183, 183, 0, 0, 0, 0, 0, 0, 0, 552,
	552, 0, 0, 0, 156, 161, 158, 164, 165, 166,
	167, 169, 170, 171, 172, 0, 0, 640, 79, 0,
	173, 174, 175, 176, 0, 0, 552, 552, 552, 552,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1566, 0, 0, 0, 0, 0,
	0, 1195, 183, 0, 0, 0, 0, 0, 0, 1580,
	1581, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 745, 0, 702, 552, 79, 552, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 702, 0, 0, 0, 0,
	0, 0, 0, 1651, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 506, 0, 0, 0, 0, 0,
	1663, 0, 0, 552, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1250, 0, 0, 745, 0, 0, 0,
	0, 0, 0, 552, 745, 0, 0, 745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 899, 0,
	552, 1196, 0, 0, 552, 552, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1196, 1196, 0, 0,
	0, 0, 506, 552, 0, 0, 0, 0, 0, 0,
	0, 1230, 1232, 0, 0, 0, 0, 0, 1420, 0,
	0, 552, 0, 906, 0, 0, 0, 0, 0, 0,
	0, 506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 552, 183, 1466, 899, 0,
	0, 0, 0, 0, 906, 0, 0, 0, 0, 0,
	0, 0, 0, 506, 0, 0, 0, 0, 0, 0,
	506, 0, 0, 0, 0, 0, 0, 0, 552, 1489,
	1490, 506, 506, 506, 506, 506, 506, 506, 0, 0,
	0, 0, 0, 0, 552, 552, 899, 0, 0, 0,
	0, 0, 552, 1204, 0, 0, 0, 0, 0, 0,
	0, 183, 552, 0, 0, 0, 0, 0, 0, 506,
	0, 0, 0, 0, 0, 0, 729, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 552, 0, 0, 0, 0, 0, 505, 552, 0,
	178, 0, 0, 0, 0, 0, 0, 554, 0, 0,
	0, 1347, 730, 0, 0, 692, 0, 0, 0, 730,
	730, 0, 0, 0, 120, 1196, 142, 0, 0, 0,
	0, 0, 0, 0, 564, 0, 0, 162, 0, 0,
	1846, 0, 0, 0, 0, 0, 730, 1466, 730, 730,
	730, 730, 730, 0, 0, 0, 903, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 723, 0, 152, 0,
	0, 0, 1420, 141, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 730, 0, 0,
	0, 0, 0, 0, 159, 0, 160, 0, 0, 0,
	0, 712, 0, 0, 0, 1351, 1352, 151, 150, 177,
	0, 0, 0, 0, 506, 0, 0, 0, 0, 0,
	1466, 0, 506, 0, 506, 0, 506, 1698, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 745, 0,
	0, 0, 0, 1072, 1072, 1072, 0, 0, 0, 0,
	0, 0, 0, 0, 1663, 0, 0, 0, 0, 0,
	1927, 0, 0, 79, 0, 0, 0, 0, 0, 0,
	0, 1942, 0, 0, 0, 146, 1353, 153, 0, 1350,
	0, 147, 148, 0, 0, 0, 0, 163, 0, 0,
	702, 1144, 1145, 1146, 0, 1149, 168, 1151, 1152, 1153,
	1154, 0, 1157, 1159, 1159, 0, 1159, 1163, 1163, 1165,
	1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175,
	1176, 1177, 1178, 0, 1180, 1181, 1182, 1183, 1184, 0,
	0, 0, 0, 1163, 1163, 1163, 1163, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2017, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1577, 0, 0, 0, 1578, 0,
	0, 1663, 0, 506, 0, 0, 0, 0, 2042, 0,
	506, 0, 0, 0, 0, 506, 506, 2047, 0, 506,
	1205, 1838, 0, 0, 0, 0, 702, 155, 506, 0,
	702, 0, 0, 1230, 1636, 506, 702, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 506, 0, 0, 1659, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 149, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 143, 0, 0, 144, 0, 745, 0, 730, 0,
	0, 0, 0, 0, 0, 0, 1012, 0, 1018, 0,
	0, 1020, 1374, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2145, 0, 0, 0, 0, 0, 0, 0, 0,
	745, 0, 0, 0, 1195, 0, 0, 2170, 1374, 1195,
	0, 730, 730, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1466, 0, 0, 506, 0, 0, 0, 0,
	0, 0, 0, 1420, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1109, 0, 0, 156, 161, 158, 164, 165,
	166, 167, 169, 170, 171, 172, 0, 0, 0, 0,
	0, 173, 174, 175, 176, 0, 0, 0, 506, 0,
	1156, 0, 506, 0, 0, 0, 0, 0, 0, 899,
	0, 0, 1195, 0, 0, 0, 0, 0, 1663, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 564, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 506, 0, 0, 0,
	0, 0, 0, 2026, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2145,
	0, 0, 0, 0, 0, 0, 0, 1257, 0, 0,
	0, 0, 0, 0, 506, 506, 506, 506, 506, 0,
	0, 1245, 0, 0, 0, 0, 0, 0, 1072, 1072,
	1072, 506, 506, 0, 0, 0, 1864, 0, 0, 0,
	1868, 0, 1869, 1870, 0, 0, 0, 506, 0, 0,
	0, 1878, 0, 0, 1879, 0, 0, 0, 0, 0,
	0, 730, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1885, 1886, 1887, 1888, 1889, 0, 1891, 0, 0, 0,
	1893, 0, 1894, 0, 0, 0, 1897, 1898, 0, 730,
	0, 0, 0, 0, 1903, 1904, 1905, 1906, 1907, 0,
	1659, 1663, 1663, 0, 0, 0, 0, 0, 0, 0,
	0, 1920, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 506, 0, 0, 0, 0, 0, 0, 2423, 2424,
	2425, 2426, 0, 0, 0, 0, 0, 0, 1196, 0,
	0, 0, 0, 1196, 506, 506, 506, 506, 506, 0,
	0, 0, 0, 0, 0, 0, 2186, 0, 0, 0,
	1275, 506, 0, 0, 1420, 0, 506, 0, 0, 506,
	2197, 1466, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1195, 0, 0, 0, 0, 2466, 0,
	2468, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	506, 0, 0, 0, 0, 0, 1690, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 506, 1405, 0,
	0, 0, 0, 0, 0, 0, 0, 506, 0, 0,
	0, 0, 0, 0, 0, 1663, 0, 0, 0, 0,
	0, 0, 506, 0, 0, 506, 0, 1446, 0, 0,
	0, 0, 0, 0, 0, 745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2527, 0, 0, 0, 2527, 2527, 0, 1476,
	0, 0, 0, 0, 0, 0, 1480, 0, 0, 0,
	1469, 0, 0, 0, 0, 0, 0, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 506, 1663, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1663, 0, 0, 0, 0, 2119, 0,
	0, 0, 0, 0, 0, 1515, 0, 0, 0, 0,
	0, 0, 0, 0, 2126, 2127, 0, 1663, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1522, 1523, 1524, 1525, 0, 0, 1195, 0,
	2577, 0, 0, 0, 506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 745, 745, 2169, 0,
	0, 0, 506, 0, 2599, 506, 506, 506, 0, 0,
	0, 0, 1563, 1564, 2604, 2187, 2188, 0, 0, 0,
	1569, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1604, 1605, 1606, 1607, 1608,
	1609, 1611, 564, 1620, 1621, 0, 0, 0, 0, 0,
	0, 0, 0, 1663, 0, 0, 0, 0, 0, 0,
	2604, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 564, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1420, 0,
	1676, 0, 0, 0, 0, 0, 0, 0, 1680, 0,
	1683, 0, 0, 1515, 0, 0, 0, 1196, 1670, 1671,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1707, 0, 0, 0, 2289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2299, 2300, 2302, 2304, 0, 0, 0,
	0, 0, 0, 2310, 1901, 0, 0, 0, 2314, 178,
	0, 0, 0, 2315, 0, 0, 0, 0, 0, 2320,
	0, 1918, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 120, 1745, 142, 0, 0, 0, 702,
	0, 0, 0, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 2342, 2343, 0, 0, 2347, 0, 0, 1953,
	1954, 0, 0, 0, 0, 0, 0, 0, 1973, 0,
	1974, 1975, 0, 0, 2359, 2360, 0, 152, 0, 0,
	0, 0, 141, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 159, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 129, 130, 151, 150, 177, 0,
	0, 0, 506, 0, 0, 0, 0, 0, 0, 1515,
	0, 0, 0, 0, 0, 0, 1821, 0, 0, 0,
	2410, 1831, 1832, 0, 0, 1836, 0, 0, 0, 0,
	0, 0, 1196, 0, 1839, 0, 0, 0, 0, 0,
	0, 1842, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2048, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1420, 0, 1845,
	0, 0, 0, 0, 0, 0, 0, 0, 2437, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 146, 127, 153, 134, 126, 0,
	147, 148, 0, 0, 0, 0, 163, 0, 0, 0,
	0, 0, 0, 0, 0, 168, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	138, 136, 131, 132, 133, 137, 0, 0, 0, 0,
	0, 0, 128, 0, 0, 0, 0, 0, 0, 0,
	0, 139, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1877, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2508, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1690, 0, 0, 2518, 2519, 2520, 1156, 2521, 2522,
	0, 0, 0, 2526, 0, 0, 0, 0, 0, 2167,
	0, 79, 2627, 0, 1690, 1690, 1690, 1690, 1690, 0,
	0, 0, 1297, 0, 0, 0, 155, 0, 0, 0,
	0, 1973, 702, 0, 0, 0, 1690, 0, 0, 1690,
	0, 0, 2552, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1976, 1245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2566, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2571, 0, 0, 0, 0, 0, 2572, 2573, 0, 0,
	0, 149, 0, 0, 0, 0, 0, 0, 0, 2259,
	0, 0, 0, 0, 2579, 0, 0, 0, 0, 0,
	143, 0, 2020, 144, 0, 2587, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2288, 0, 0, 0, 1285, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2625, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2066, 2067, 2068, 2069, 2070, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1515, 2076, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2084, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 156, 161, 158, 164, 165, 166,
	167, 169, 170, 171, 172, 0, 1298, 0, 0, 0,
	173, 174, 175, 176, 0, 0, 0, 0, 0, 0,
	0, 1690, 0, 0, 0, 0, 0, 0, 2110, 2111,
	0, 0, 0, 2114, 2368, 0, 0, 2116, 2117, 2118,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2123,
	0, 0, 1620, 2125, 0, 0, 0, 0, 0, 0,
	1311, 1314, 1315, 1316, 1317, 1318, 1319, 0, 1320, 1321,
	1322, 1323, 1324, 1299, 1300, 1301, 1302, 1283, 1284, 1312,
	2408, 1286, 0, 1287, 1288, 1289, 1290, 1291, 1292, 1293,
	1294, 1295, 1296, 1303, 1304, 1305, 1306, 1307, 1308, 1309,
	1310, 0, 0, 0, 0, 2158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2191, 0, 0, 0, 0, 0, 0, 0,
	0, 1297, 0, 0, 2438, 0, 2442, 2443, 0, 0,
	0, 0, 0, 0, 0, 0, 2236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2167,
	0, 79, 0, 2167, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2257, 0, 0, 0, 0, 2246, 0,
	0, 0, 0, 2266, 0, 0, 1313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2278, 0,
	0, 2281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2502, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2322, 0, 2307, 0, 1285, 0, 0, 0, 0, 2313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2167, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1168, 1169, 1170,
	1171, 1172, 1173, 1174, 1175, 1176, 1177, 0, 0, 0,
	0, 0, 0, 0, 564, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2378, 0, 0, 0, 0, 1298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2393, 0,
	0, 2394, 2395, 2396, 0, 0, 0, 0, 2580, 0,
	0, 0, 0, 79, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2400, 0, 0, 0, 0, 0, 0, 0, 0, 1311,
	1314, 1315, 1316, 1317, 1318, 1319, 2415, 1320, 1321, 1322,
	1323, 1324, 1299, 1300, 1301, 1302, 1283, 1284, 1312, 0,
	1286, 0, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294,
	1295, 1296, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310,
	0, 0, 0, 0, 0, 0, 0, 0, 2429, 0,
	2430, 0, 0, 0, 0, 2433, 2434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2462, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2470, 0,
	0, 2472, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2477, 0, 0, 0, 0,
	0, 0, 641, 642, 0, 0, 2490, 0, 0, 0,
	0, 0, 0, 0, 0, 1313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 564, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2535, 564, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	682, 683, 684, 685, 686, 687, 688, 0, 2565, 0,
	0, 0, 0, 0, 0, 0, 877, 862, 427, 564,
	809, 880, 778, 797, 890, 800, 803, 844, 757, 823,
	348, 794, 0, 782, 752, 789, 753, 780, 811, 244,
	777, 864, 827, 879, 303, 241, 759, 783, 362, 799,
	193, 846, 403, 228, 313, 310, 434, 255, 247, 243,
	227, 281, 320, 360, 421, 354, 886, 307, 833, 0,
	412, 333, 0, 0, 0, 813, 868, 821, 858, 808,
	845, 767, 832, 881, 795, 841, 882, 287, 226, 192,
	345, 413, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 2593, 2618, 2594, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 299, 301, 300, 791, 838, 876, 792,
	840, 239, 285, 246, 238, 431, 887, 867, 756, 820,
	875, 0, 0, 209, 878, 815, 0, 843, 0, 893,
	751, 835, 0, 754, 758, 889, 871, 786, 249, 0,
	0, 0, 0, 0, 0, 0, 812, 822, 855, 806,
	0, 0, 0, 0, 0, 0, 0, 784, 0, 831,
	0, 0, 0, 763, 755, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 810, 0, 0, 0,
	766, 0, 785, 856, 0, 749, 268, 760, 334, 231,
	0, 860, 870, 807, 465, 874, 805, 804, 850, 764,
	866, 798, 302, 762, 293, 188, 205, 0, 796, 344,
	385, 391, 865, 781, 790, 229, 788, 389, 358, 449,
	213, 257, 382, 363, 387, 370, 260, 830, 848, 388,
	308, 436, 377, 446, 466, 467, 237, 338, 456, 425,
	462, 478, 206, 234, 352, 418, 452, 409, 331, 432,
	433, 292, 408, 266, 191, 306, 472, 204, 397, 221,
	211, 197, 420, 444, 218, 400, 0, 0, 480, 199,
	442, 417, 327, 289, 290, 198, 0, 381, 242, 264,
	232, 347, 439, 440, 230, 481, 208, 461, 201, 1074,
	460, 340, 435, 443, 328, 318, 200, 441, 326, 317,
	295, 253, 275, 375, 311, 376, 276, 336, 335, 337,
	194, 453, 0, 195, 0, 414, 454, 482, 214, 215,
	216, 776, 252, 256, 263, 265, 271, 272, 279, 304,
	351, 374, 372, 378, 861, 430, 447, 457, 464, 470,
	471, 473, 474, 475, 476, 477, 339, 278, 410, 294,
	309, 853, 892, 357, 390, 219, 451, 411, 771, 775,
	769, 770, 825, 826, 772, 883, 884, 885, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 857, 765, 0,
	773, 774, 0, 863, 872, 873, 501, 319, 402, 448,
	296, 297, 298, 829, 187, 202, 305, 888, 379, 261,
	479, 459, 455, 750, 768, 236, 779, 787, 0, 793,
	801, 802, 814, 816, 817, 818, 819, 330, 836, 837,
	839, 847, 849, 852, 854, 859, 869, 891, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 315, 321, 322, 323, 324, 341, 342,
	343, 346, 349, 350, 353, 355, 356, 359, 366, 367,
	368, 369, 371, 373, 380, 384, 392, 393, 394, 395,
	396, 398, 399, 404, 405, 406, 407, 415, 419, 437,
	438, 450, 463, 468, 270, 445, 469, 0, 314, 828,
	834, 316, 254, 273, 284, 842, 458, 416, 207, 386,
	262, 196, 225, 210, 233, 248, 251, 288, 325, 332,
	361, 365, 267, 245, 223, 383, 220, 401, 422, 423,
	424, 426, 329, 240, 364, 824, 851, 312, 428, 429,
	280, 877, 862, 427, 0, 809, 880, 778, 797, 890,
	800, 803, 844, 757, 823, 348, 794, 0, 782, 752,
	789, 753, 780, 811, 244, 777, 864, 827, 879, 303,
	241, 759, 783, 362, 799, 193, 846, 403, 228, 313,
	310, 434, 255, 247, 243, 227, 281, 320, 360, 421,
	354, 886, 307, 833, 0, 412, 333, 0, 0, 0,
	813, 868, 821, 858, 808, 845, 767, 832, 881, 795,
	841, 882, 287, 226, 192, 345, 413, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 299, 301,
	300, 791, 838, 876, 792, 840, 239, 285, 246, 238,
	431, 887, 867, 756, 820, 875, 0, 0, 209, 878,
	815, 0, 843, 0, 893, 751, 835, 0, 754, 758,
	889, 871, 786, 249, 0, 0, 0, 0, 0, 0,
	0, 812, 822, 855, 806, 0, 0, 0, 0, 0,
	2198, 0, 784, 0, 831, 0, 0, 0, 763, 755,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 810, 0, 0, 0, 766, 0, 785, 856, 0,
	749, 268, 760, 334, 231, 0, 860, 870, 807, 465,
	874, 805, 804, 850, 764, 866, 798, 302, 762, 293,
	188, 205, 0, 796, 344, 385, 391, 865, 781, 790,
	229, 788, 389, 358, 449, 213, 257, 382, 363, 387,
	370, 260, 830, 848, 388, 308, 436, 377, 446, 466,
	467, 237, 338, 456, 425, 462, 478, 206, 234, 352,
	418, 452, 409, 331, 432, 433, 292, 408, 266, 191,
	306, 472, 204, 397, 221, 211, 197, 420, 444, 218,
	400, 0, 0, 480, 199, 442, 417, 327, 289, 290,
	198, 0, 381, 242, 264, 232, 347, 439, 440, 230,
	481, 208, 461, 201, 1074, 460, 340, 435, 443, 328,
	318, 200, 441, 326, 317, 295, 253, 275, 375, 311,
	376, 276, 336, 335, 337, 194, 453, 0, 195, 0,
	414, 454, 482, 214, 215, 216, 776, 252, 256, 263,
	265, 271, 272, 279, 304, 351, 374, 372, 378, 861,
	430, 447, 457, 464, 470, 471, 473, 474, 475, 476,
	477, 339, 278, 410, 294, 309, 853, 892, 357, 390,
	219, 451, 411, 771, 775, 769, 770, 825, 826, 772,
	883, 884, 885, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 857, 765, 0, 773, 774, 0, 863, 872,
	873, 501, 319, 402, 448, 296, 297, 298, 829, 187,
	202, 305, 888, 379, 261, 479, 459, 455, 750, 768,
	236, 779, 787, 0, 793, 801, 802, 814, 816, 817,
	818, 819, 330, 836, 837, 839, 847, 849, 852, 854,
	859, 869, 891, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 315, 321,
	322, 323, 324, 341, 342, 343, 346, 349, 350, 353,
	355, 356, 359, 366, 367, 368, 369, 371, 373, 380,
	384, 392, 393, 394, 395, 396, 398, 399, 404, 405,
	406, 407, 415, 419, 437, 438, 450, 463, 468, 270,
	445, 469, 0, 314, 828, 834, 316, 254, 273, 284,
	842, 458, 416, 207, 386, 262, 196, 225, 210, 233,
	248, 251, 288, 325, 332, 361, 365, 267, 245, 223,
	383, 220, 401, 422, 423, 424, 426, 329, 240, 364,
	824, 851, 312, 428, 429, 280, 877, 862, 427, 0,
	809, 880, 778, 797, 890, 800, 803, 844, 757, 823,
	348, 794, 0, 782, 752, 789, 753, 780, 811, 244,
	777, 864, 827, 879, 303, 241, 759, 783, 362, 799,
	193, 846, 403, 228, 313, 310, 434, 255, 247, 243,
	227, 281, 320, 360, 421, 354, 886, 307, 833, 0,
	412, 333, 0, 0, 0, 813, 868, 821, 858, 808,
	845, 767, 832, 881, 795, 841, 882, 287, 226, 192,
	345, 413, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 299, 301, 300, 791, 838, 876, 792,
	840, 239, 285, 246, 238, 431, 887, 867, 756, 820,
	875, 0, 0, 209, 878, 815, 0, 843, 0, 893,
	751, 835, 0, 754, 758, 889, 871, 786, 249, 0,
	0, 0, 0, 0, 0, 0, 812, 822, 855, 806,
	0, 0, 0, 0, 0, 2156, 0, 784, 0, 831,
	0, 0, 0, 763, 755, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 810, 0, 0, 0,
	766, 0, 785, 856, 0, 749, 268, 760, 334, 231,
	0, 860, 870, 807, 465, 874, 805, 804, 850, 764,
	866, 798, 302, 762, 293, 188, 205, 0, 796, 344,
	385, 391, 865, 781, 790, 229, 788, 389, 358, 449,
	213, 257, 382, 363, 387, 370, 260, 830, 848, 388,
	308, 436, 377, 446, 466, 467, 237, 338, 456, 425,
	462, 478, 206, 234, 352, 418, 452, 409, 331, 432,
	433, 292, 408, 266, 191, 306, 472, 204, 397, 221,
	211, 197, 420, 444, 218, 400, 0, 0, 480, 199,
	442, 417, 327, 289, 290, 198, 0, 381, 242, 264,
	232, 347, 439, 440, 230, 481, 208, 461, 201, 1074,
	460, 340, 435, 443, 328, 318, 200, 441, 326, 317,
	295, 253, 275, 375, 311, 376, 276, 336, 335, 337,
	194, 453, 0, 195, 0, 414, 454, 482, 214, 215,
	216, 776, 252, 256, 263, 265, 271, 272, 279, 304,
	351, 374, 372, 378, 861, 430, 447, 457, 464, 470,
	471, 473, 474, 475, 476, 477, 339, 278, 410, 294,
	309, 853, 892, 357, 390, 219, 451, 411, 771, 775,
	769, 770, 825, 826, 772, 883, 884, 885, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 857, 765, 0,
	773, 774, 0, 863, 872, 873, 501, 319, 402, 448,
	296, 297, 298, 829, 187, 202, 305, 888, 379, 261,
	479, 459, 455, 750, 768, 236, 779, 787, 0, 793,
	801, 802, 814, 816, 817, 818, 819, 330, 836, 837,
	839, 847, 849, 852, 854, 859, 869, 891, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 315, 321, 322, 323, 324, 341, 342,
	343, 346, 349, 350, 353, 355, 356, 359, 366, 367,
	368, 369, 371, 373, 380, 384, 392, 393, 394, 395,
	396, 398, 399, 404, 405, 406, 407, 415, 419, 437,
	438, 450, 463, 468, 270, 445, 469, 0, 314, 828,
	834, 316, 254, 273, 284, 842, 458, 416, 207, 386,
	262, 196, 225, 210, 233, 248, 251, 288, 325, 332,
	361, 365, 267, 245, 223, 383, 220, 401, 422, 423,
	424, 426, 329, 240, 364, 824, 851, 312, 428, 429,
	280, 877, 862, 427, 0, 809, 880, 778, 797, 890,
	800, 803, 844, 757, 823, 348, 794, 0, 782, 752,
	789, 753, 780, 811, 244, 777, 864, 827, 879, 303,
	241, 759, 783, 362, 799, 193, 846, 403, 228, 313,
	310, 434, 255, 247, 243, 227, 281, 320, 360, 421,
	354, 886, 307, 833, 0, 412, 333, 0, 0, 0,
	813, 868, 821, 858, 808, 845, 767, 832, 881, 795,
	841, 882, 287, 226, 192, 345, 413, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 299, 301,
	300, 791, 838, 876, 792, 840, 239, 285, 246, 238,
	431, 887, 867, 756, 820, 875, 0, 0, 209, 878,
	815, 0, 843, 0, 893, 751, 835, 0, 754, 758,
	889, 871, 786, 249, 0, 0, 0, 0, 0, 0,
	0, 812, 822, 855, 806, 0, 0, 0, 0, 0,
	1678, 0, 784, 0, 831, 0, 0, 0, 763, 755,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 810, 0, 0, 0, 766, 0, 785, 856, 0,
	749, 268, 760, 334, 231, 0, 860, 870, 807, 465,
	874, 805, 804, 850, 764, 866, 798, 302, 762, 293,
	188, 205, 0, 796, 344, 385, 391, 865, 781, 790,
	229, 788, 389, 358, 449, 213, 257, 382, 363, 387,
	370, 260, 830, 848, 388, 308, 436, 377, 446, 466,
	467, 237, 338, 456, 425, 462, 478, 206, 234, 352,
	418, 452, 409, 331, 432, 433, 292, 408, 266, 191,
	306, 472, 204, 397, 221, 211, 197, 420, 444, 218,
	400, 0, 0, 480, 199, 442, 417, 327, 289, 290,
	198, 0, 381, 242, 264, 232, 347, 439, 440, 230,
	481, 208, 461, 201, 1074, 460, 340, 435, 443, 328,
	318, 200, 441, 326, 317, 295, 253, 275, 375, 311,
	376, 276, 336, 335, 337, 194, 453, 0, 195, 0,
	414, 454, 482, 214, 215, 216, 776, 252, 256, 263,
	265, 271, 272, 279, 304, 351, 374, 372, 378, 861,
	430, 447, 457, 464, 470, 471, 473, 474, 475, 476,
	477, 339, 278, 410, 294, 309, 853, 892, 357, 390,
	219, 451, 411, 771, 775, 769, 770, 825, 826, 772,
	883, 884, 885, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 857, 765, 0, 773, 774, 0, 863, 872,
	873, 501, 319, 402, 448, 296, 297, 298, 829, 187,
	202, 305, 888, 379, 261, 479, 459, 455, 750, 768,
	236, 779, 787, 0, 793, 801, 802, 814, 816, 817,
	818, 819, 330, 836, 837, 839, 847, 849, 852, 854,
	859, 869, 891, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 315, 321,
	322, 323, 324, 341, 342, 343, 346, 349, 350, 353,
	355, 356, 359, 366, 367, 368, 369, 371, 373, 380,
	384, 392, 393, 394, 395, 396, 398, 399, 404, 405,
	406, 407, 415, 419, 437, 438, 450, 463, 468, 270,
	445, 469, 0, 314, 828, 834, 316, 254, 273, 284,
	842, 458, 416, 207, 386, 262, 196, 225, 210, 233,
	248, 251, 288, 325, 332, 361, 365, 267, 245, 223,
	383, 220, 401, 422, 423, 424, 426, 329, 240, 364,
	824, 851, 312, 428, 429, 280, 877, 862, 427, 0,
	809, 880, 778, 797, 890, 800, 803, 844, 757, 823,
	348, 794, 0, 782, 752, 789, 753, 780, 811, 244,
	777, 864, 827, 879, 303, 241, 759, 783, 362, 799,
	193, 846, 403, 228, 313, 310, 434, 255, 247, 243,
	227, 281, 320, 360, 421, 354, 886, 307, 833, 0,
	412, 333, 0, 0, 0, 813, 868, 821, 858, 808,
	845, 767, 832, 881, 795, 841, 882, 287, 226, 192,
	345, 413, 259, 0, 87, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 299, 301, 300, 791, 838, 876, 792,
	840, 239, 285, 246, 238, 431, 887, 867, 756, 820,
	875, 0, 0, 209, 878, 815, 0, 843, 0, 893,
	751, 835, 0, 754, 758, 889, 871, 786, 249, 0,
	0, 0, 0, 0, 0, 0, 812, 822, 855, 806,
	0, 0, 0, 0, 0, 0, 0, 784, 0, 831,
	0, 0, 0, 763, 755, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 810, 0, 0, 0,
	766, 0, 785, 856, 0, 749, 268, 760, 334, 231,
	0, 860, 870, 807, 465, 874, 805, 804, 850, 764,
	866, 798, 302, 762, 293, 188, 205, 0, 796, 344,
	385, 391, 865, 781, 790, 229, 788, 389, 358, 449,
	213, 257, 382, 363, 387, 370, 260, 830, 848, 388,
	308, 436, 377, 446, 466, 467, 237, 338, 456, 425,
	462, 478, 206, 234, 352, 418, 452, 409, 331, 432,
	433, 292, 408, 266, 191, 306, 472, 204, 397, 221,
	211, 197, 420, 444, 218, 400, 0, 0, 480, 199,
	442, 417, 327, 289, 290, 198, 0, 381, 242, 264,
	232, 347, 439, 440, 230, 481, 208, 461, 201, 1074,
	460, 340, 435, 443, 328, 318, 200, 441, 326, 317,
	295, 253, 275, 375, 311, 376, 276, 336, 335, 337,
	194, 453, 0, 195, 0, 414, 454, 482, 214, 215,
	216, 776, 252, 256, 263, 265, 271, 272, 279, 304,
	351, 374, 372, 378, 861, 430, 447, 457, 464, 470,
	471, 473, 474, 475, 476, 477, 339, 278, 410, 294,
	309, 853, 892, 357, 390, 219, 451, 411, 771, 775,
	769, 770, 825, 826, 772, 883, 884, 885, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 857, 765, 0,
	773, 774, 0, 863, 872, 873, 501, 319, 402, 448,
	296, 297, 298, 829, 187, 202, 305, 888, 379, 261,
	479, 459, 455, 750, 768, 236, 779, 787, 0, 793,
	801, 802, 814, 816, 817, 818, 819, 330, 836, 837,
	839, 847, 849, 852, 854, 859, 869, 891, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 315, 321, 322, 323, 324, 341, 342,
	343, 346, 349, 350, 353, 355, 356, 359, 366, 367,
	368, 369, 371, 373, 380, 384, 392, 393, 394, 395,
	396, 398, 399, 404, 405, 406, 407, 415, 419, 437,
	438, 450, 463, 468, 270, 445, 469, 0, 314, 828,
	834, 316, 254, 273, 284, 842, 458, 416, 207, 386,
	262, 196, 225, 210, 233, 248, 251, 288, 325, 332,
	361, 365, 267, 245, 223, 383, 220, 401, 422, 423,
	424, 426, 329, 240, 364, 824, 851, 312, 428, 429,
	280, 877, 862, 427, 0, 809, 880, 778, 797, 890,
	800, 803, 844, 757, 823, 348, 794, 0, 782, 752,
	789, 753, 780, 811, 244, 777, 864, 827, 879, 303,
	241, 759, 783, 362, 799, 193, 846, 403, 228, 313,
	310, 434, 255, 247, 243, 227, 281, 320, 360, 421,
	354, 886, 307, 833, 0, 412, 333, 0, 0, 0,
	813, 868, 821, 858, 808, 845, 767, 832, 881, 795,
	841, 882, 287, 226, 192, 345, 413, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 299, 301,
	300, 791, 838, 876, 792, 840, 239, 285, 246, 238,
	431, 887, 867, 756, 820, 875, 0, 0, 209, 878,
	815, 0, 843, 0, 893, 751, 835, 0, 754, 758,
	889, 871, 786, 249, 0, 0, 0, 0, 0, 0,
	0, 812, 822, 855, 806, 0, 0, 0, 0, 0,
	0, 0, 784, 0, 831, 0, 0, 0, 763, 755,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 810, 0, 0, 0, 766, 0, 785, 856, 0,
	749, 268, 760, 334, 231, 0, 860, 870, 807, 465,
	874, 805, 804, 850, 764, 866, 798, 302, 762, 293,
	188, 205, 0, 796, 344, 385, 391, 865, 781, 790,
	229, 788, 389, 358, 449, 213, 257, 382, 363, 387,
	370, 260, 830, 848, 388, 308, 436, 377, 446, 466,
	467, 237, 338, 456, 425, 462, 478, 206, 234, 352,
	418, 452, 409, 331, 432, 433, 292, 408, 266, 191,
	306, 472, 204, 397, 221, 211, 197, 420, 444, 218,
	400, 0, 0, 480, 199, 442, 417, 327, 289, 290,
	198, 0, 381, 242, 264, 232, 347, 439, 440, 230,
	481, 208, 461, 201, 1074, 460, 340, 435, 443, 328,
	318, 200, 441, 326, 317, 295, 253, 275, 375, 311,
	376, 276, 336, 335, 337, 194, 453, 0, 195, 0,
	414, 454, 482, 214, 215, 216, 776, 252, 256, 263,
	265, 271, 272, 279, 304, 351, 374, 372, 378, 861,
	430, 447, 457, 464, 470, 471, 473, 474, 475, 476,
	477, 339, 278, 410, 294, 309, 853, 892, 357, 390,
	219, 451, 411, 771, 775, 769, 770, 825, 826, 772,
	883, 884, 885, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 857, 765, 0, 773, 774, 0, 863, 872,
	873, 501, 319, 402, 448, 296, 297, 298, 829, 187,
	202, 305, 888, 379, 261, 479, 459, 455, 750, 768,
	236, 779, 787, 0, 793, 801, 802, 814, 816, 817,
	818, 819, 330, 836, 837, 839, 847, 849, 852, 854,
	859, 869, 891, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 315, 321,
	322, 323, 324, 341, 342, 343, 346, 349, 350, 353,
	355, 356, 359, 366, 367, 368, 369, 371, 373, 380,
	384, 392, 393, 394, 395, 396, 398, 399, 404, 405,
	406, 407, 415, 419, 437, 438, 450, 463, 468, 270,
	445, 469, 0, 314, 828, 834, 316, 254, 273, 284,
	842, 458, 416, 207, 386, 262, 196, 225, 210, 233,
	248, 251, 288, 325, 332, 361, 365, 267, 245, 223,
	383, 220, 401, 422, 423, 424, 426, 329, 240, 364,
	824, 851, 312, 428, 429, 280, 877, 862, 427, 0,
	809, 880, 778, 797, 890, 800, 803, 844, 757, 823,
	348, 794, 0, 782, 752, 789, 753, 780, 811, 244,
	777, 864, 827, 879, 303, 241, 759, 783, 362, 799,
	193, 846, 403, 228, 313, 310, 434, 255, 247, 243,
	227, 281, 320, 360, 421, 354, 886, 307, 833, 0,
	412, 333, 0, 0, 0, 813, 868, 821, 858, 808,
	845, 767, 832, 881, 795, 841, 882, 287, 226, 192,
	345, 413, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 299, 301, 300, 791, 838, 876, 792,
	840, 239, 285, 246, 238, 431, 887, 867, 756, 820,
	875, 0, 0, 894, 878, 815, 0, 843, 0, 893,
	751, 835, 0, 754, 758, 889, 871, 786, 249, 0,
	0, 0, 0, 0, 0, 0, 812, 822, 855, 806,
	0, 0, 0, 0, 0, 0, 0, 784, 0, 831,
	0, 0, 0, 763, 755, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 810, 0, 0, 0,
	766, 0, 785, 856, 0, 749, 268, 760, 334, 231,
	0, 860, 870, 807, 465, 874, 805, 804, 850, 764,
	866, 798, 302, 762, 293, 188, 205, 0, 796, 344,
	385, 391, 865, 781, 790, 229, 788, 389, 358, 449,
	213, 257, 382, 363, 387, 370, 260, 830, 848, 388,
	308, 436, 377, 446, 466, 467, 237, 338, 456, 425,
	462, 478, 206, 234, 352, 418, 452, 409, 331, 432,
	433, 292, 408, 266, 191, 306, 472, 204, 397, 221,
	211, 197, 420, 444, 218, 400, 0, 0, 480, 199,
	442, 417, 327, 289, 290, 198, 0, 381, 242, 264,
	232, 347, 439, 440, 230, 481, 208, 461, 201, 761,
	460, 340, 435, 443, 328, 318, 200, 441, 326, 317,
	295, 253, 275, 375, 311, 376, 276, 336, 335, 337,
	194, 453, 0, 195, 0, 414, 454, 482, 214, 215,
	216, 776, 252, 256, 263, 265, 271, 272, 279, 304,
	351, 374, 372, 378, 861, 430, 447, 457, 464, 470,
	471, 473, 474, 475, 476, 477, 748, 742, 741, 294,
	309, 853, 892, 357, 390, 219, 451, 411, 771, 775,
	769, 770, 825, 826, 772, 883, 884, 885, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 857, 765, 0,
	773, 774, 0, 863, 872, 873, 501, 319, 402, 448,
	296, 297, 298, 829, 187, 202, 305, 888, 379, 261,
	479, 459, 455, 750, 768, 236, 779, 787, 0, 793,
	801, 802, 814, 816, 817, 818, 819, 330, 836, 837,
	839, 847, 849, 852, 854, 859, 869, 891, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 315, 321, 322, 323, 324, 341, 342,
	343, 346, 349, 350, 353, 355, 356, 359, 366, 367,
	368, 369, 371, 373, 380, 384, 392, 393, 394, 395,
	396, 398, 399, 404, 405, 406, 407, 415, 419, 437,
	438, 450, 463, 468, 270, 445, 469, 0, 314, 828,
	834, 316, 254, 273, 284, 842, 458, 416, 207, 386,
	262, 196, 225, 210, 233, 248, 251, 288, 325, 332,
	361, 365, 267, 245, 223, 383, 220, 401, 422, 423,
	424, 426, 329, 240, 364, 824, 851, 312, 428, 429,
	280, 877, 862, 427, 0, 809, 880, 778, 797, 890,
	800, 803, 844, 757, 823, 348, 794, 0, 782, 752,
	789, 753, 780, 811, 244, 777, 864, 827, 879, 303,
	241, 759, 783, 362, 799, 193, 846, 403, 228, 313,
	310, 434, 255, 247, 243, 227, 281, 320, 360, 421,
	354, 886, 307, 833, 0, 412, 333, 0, 0, 0,
	813, 868, 821, 858, 808, 845, 767, 832, 881, 795,
	841, 882, 287, 226, 192, 345, 413, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 299, 301,
	300, 791, 838, 876, 792, 840, 239, 285, 246, 238,
	431, 887, 867, 756, 820, 875, 0, 0, 894, 878,
	815, 0, 843, 0, 893, 751, 835, 0, 754, 758,
	889, 871, 786, 249, 0, 0, 0, 0, 0, 0,
	0, 812, 822, 855, 806, 0, 0, 0, 0, 0,
	0, 0, 784, 0, 831, 0, 0, 0, 763, 755,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 810, 0, 0, 0, 766, 0, 785, 856, 0,
	749, 268, 760, 334, 231, 0, 860, 870, 807, 465,
	874, 805, 804, 850, 764, 866, 798, 302, 762, 293,
	188, 205, 0, 796, 344, 385, 391, 865, 781, 790,
	229, 788, 389, 358, 449, 213, 257, 382, 363, 387,
	370, 260, 830, 848, 388, 308, 436, 377, 446, 466,
	467, 237, 338, 456, 425, 462, 478, 206, 234, 352,
	418, 452, 409, 331, 432, 433, 292, 408, 266, 191,
	306, 472, 204, 397, 221, 211, 197, 420, 1261, 218,
	400, 0, 0, 480, 199, 442, 417, 327, 289, 290,
	198, 0, 381, 242, 264, 232, 347, 439, 440, 230,
	481, 208, 461, 201, 761, 460, 340, 435, 443, 328,
	318, 200, 441, 326, 317, 295, 253, 275, 375, 311,
	376, 276, 336, 335, 337, 194, 453, 0, 195, 0,
	414, 454, 482, 214, 215, 216, 776, 252, 256, 263,
	265, 271, 272, 279, 304, 351, 374, 372, 378, 861,
	430, 447, 457, 464, 470, 471, 473, 474, 475, 476,
	477, 748, 742, 741, 294, 309, 853, 892, 357, 390,
	219, 451, 411, 771, 775, 769, 770, 825, 826, 772,
	883, 884, 885, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 857, 765, 0, 773, 774, 0, 863, 872,
	873, 501, 319, 402, 448, 296, 297, 298, 829, 187,
	202, 305, 888, 379, 261, 479, 459, 455, 750, 768,
	236, 779, 787, 0, 793, 801, 802, 814, 816, 817,
	818, 819, 330, 836, 837, 839, 847, 849, 852, 854,
	859, 869, 891, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 315, 321,
	322, 323, 324, 341, 342, 343, 346, 349, 350, 353,
	355, 356, 359, 366, 367, 368, 369, 371, 373, 380,
	384, 392, 393, 394, 395, 396, 398, 399, 404, 405,
	406, 407, 415, 419, 437, 438, 450, 463, 468, 270,
	445, 469, 0, 314, 828, 834, 316, 254, 273, 284,
	842, 458, 416, 207, 386, 262, 196, 225, 210, 233,
	248, 251, 288, 325, 332, 361, 365, 267, 245, 223,
	383, 220, 401, 422, 423, 424, 426, 329, 240, 364,
	824, 851, 312, 428, 429, 280, 877, 862, 427, 0,
	809, 880, 778, 797, 890, 800, 803, 844, 757, 823,
	348, 794, 0, 782, 752, 789, 753, 780, 811, 244,
	777, 864, 827, 879, 303, 241, 759, 783, 362, 799,
	193, 846, 403, 228, 313, 310, 434, 255, 247, 243,
	227, 281, 320, 360, 421, 354, 886, 307, 833, 0,
	412, 333, 0, 0, 0, 813, 868, 821, 858, 808,
	845, 767, 832, 881, 795, 841, 882, 287, 226, 192,
	345, 413, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 299, 301, 300, 791, 838, 876, 792,
	840, 239, 285, 246, 238, 431, 887, 867, 756, 820,
	875, 0, 0, 894, 878, 815, 0, 843, 0, 893,
	751, 835, 0, 754, 758, 889, 871, 786, 249, 0,
	0, 0, 0, 0, 0, 0, 812, 822, 855, 806,
	0, 0, 0, 0, 0, 0, 0, 784, 0, 831,
	0, 0, 0, 763, 755, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 810, 0, 0, 0,
	766, 0, 785, 856, 0, 749, 268, 760, 334, 231,
	0, 860, 870, 807, 465, 874, 805, 804, 850, 764,
	866, 798, 302, 762, 293, 188, 205, 0, 796, 344,
	385, 391, 865, 781, 790, 229, 788, 389, 358, 449,
	213, 257, 382, 363, 387, 370, 260, 830, 848, 388,
	308, 436, 377, 446, 466, 467, 237, 338, 456, 425,
	462, 478, 206, 234, 352, 418, 452, 409, 331, 432,
	433, 292, 408, 266, 191, 306, 472, 204, 397, 221,
	211, 197, 420, 739, 218, 400, 0, 0, 480, 199,
	442, 417, 327, 289, 290, 198, 0, 381, 242, 264,
	232, 347, 439, 440, 230, 481, 208, 461, 201, 761,
	460, 340, 435, 443, 328, 318, 200, 441, 326, 317,
	295, 253, 275, 375, 311, 376, 276, 336, 335, 337,
	194, 453, 0, 195, 0, 414, 454, 482, 214, 215,
	216, 776, 252, 256, 263, 265, 271, 272, 279, 304,
	351, 374, 372, 378, 861, 430, 447, 457, 464, 470,
	471, 473, 474, 475, 476, 477, 748, 742, 741, 294,
	309, 853, 892, 357, 390, 219, 451, 411, 771, 775,
	769, 770, 825, 826, 772, 883, 884, 885, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 857, 765, 0,
	773, 774, 0, 863, 872, 873, 501, 319, 402, 448,
	296, 297, 298, 829, 187, 202, 305, 888, 379, 261,
	479, 459, 455, 750, 768, 236, 779, 787, 0, 793,
	801, 802, 814, 816, 817, 818, 819, 330, 836, 837,
	839, 847, 849, 852, 854, 859, 869, 891, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 315, 321, 322, 323, 324, 341, 342,
	343, 346, 349, 350, 353, 355, 356, 359, 366, 367,
	368, 369, 371, 373, 380, 384, 392, 393, 394, 395,
	396, 398, 399, 404, 405, 406, 407, 415, 419, 437,
	438, 450, 463, 468, 270, 445, 469, 0, 314, 828,
	834, 316, 254, 273, 284, 842, 458, 416, 207, 386,
	262, 196, 225, 210, 233, 248, 251, 288, 325, 332,
	361, 365, 267, 245, 223, 383, 220, 401, 422, 423,
	424, 426, 329, 240, 364, 824, 851, 312, 428, 429,
	280, 427, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 348, 0, 0, 1623, 0, 582, 0,
	0, 0, 244, 587, 0, 0, 0, 303, 241, 0,
	1624, 362, 0, 193, 0, 403, 228, 313, 310, 434,
	255, 247, 243, 227, 281, 320, 360, 421, 354, 594,
	307, 0, 0, 412, 333, 0, 0, 0, 0, 0,
	589, 590, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 345, 413, 259, 0, 87, 0, 0,
	184, 185, 186, 634, 641, 642, 643, 644, 645, 635,
	637, 0, 0, 217, 636, 224, 605, 607, 606, 603,
	639, 646, 647, 0, 239, 285, 246, 238, 431, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 565, 579, 0, 593, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 576, 577, 728, 0,
	0, 0, 619, 0, 578, 0, 0, 586, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 681, 682, 683, 684, 685, 686, 687, 688, 588,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 334, 231, 0, 618, 0, 0, 465, 0, 0,
	616, 0, 0, 0, 0, 302, 0, 293, 188, 205,
	0, 0, 344, 385, 391, 0, 0, 0, 229, 0,
	389, 358, 449, 213, 257, 382, 363, 387, 370, 260,
	0, 0, 388, 308, 436, 377, 446, 466, 467, 237,
	338, 456, 425, 462, 478, 206, 234, 352, 418, 452,
	409, 331, 432, 433, 292, 408, 266, 191, 306, 472,
	204, 397, 221, 211, 197, 420, 444, 218, 400, 0,
	0, 480, 199, 442, 417, 327, 289, 290, 198, 0,
	381, 242, 264, 232, 347, 439, 440, 230, 481, 208,
	461, 201, 0, 460, 340, 435, 443, 328, 318, 200,
	441, 326, 317, 295, 253, 275, 375, 311, 376, 276,
	336, 335, 337, 194, 453, 0, 195, 0, 414, 454,
	482, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 304, 351, 374, 372, 378, 0, 430, 447,
	457, 464, 470, 471, 473, 474, 475, 476, 477, 339,
	278, 410, 294, 309, 0, 0, 357, 390, 219, 451,
	411, 625, 617, 598, 600, 626, 627, 595, 596, 599,
	628, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	620, 585, 584, 0, 591, 592, 0, 601, 602, 604,
	608, 609, 610, 611, 612, 613, 583, 187, 202, 305,
	0, 379, 261, 479, 459, 455, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 315, 321, 322, 323,
	324, 341, 342, 343, 346, 349, 350, 353, 355, 356,
	359, 366, 367, 368, 369, 371, 373, 380, 384, 392,
	393, 394, 395, 396, 398, 399, 404, 405, 406, 407,
	415, 419, 437, 438, 450, 463, 468, 270, 445, 469,
	0, 314, 0, 0, 316, 254, 273, 284, 0, 458,
	416, 207, 386, 262, 196, 225, 210, 233, 248, 251,
	288, 325, 332, 361, 365, 267, 245, 223, 383, 220,
	401, 422, 423, 424, 426, 329, 240, 364, 427, 0,
	312, 428, 429, 280, 0, 0, 0, 0, 0, 0,
	348, 0, 0, 0, 0, 582, 0, 0, 0, 244,
	587, 0, 0, 0, 303, 241, 0, 0, 362, 0,
	193, 0, 403, 228, 313, 310, 434, 255, 247, 243,
	227, 281, 320, 360, 421, 354, 594, 307, 0, 0,
	412, 333, 0, 0, 0, 0, 0, 589, 590, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	345, 413, 259, 0, 87, 0, 0, 184, 185, 186,
	634, 641, 642, 643, 644, 645, 635, 637, 0, 0,
	217, 636, 224, 605, 607, 606, 603, 639, 646, 647,
	0, 239, 285, 246, 238, 431, 0, 0, 1612, 1613,
	1614, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 565, 579, 0, 593, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 576, 577, 0, 0, 0, 0, 619,
	0, 578, 0, 0, 586, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	683, 684, 685, 686, 687, 688, 588, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 334, 231,
	0, 618, 0, 0, 465, 0, 0, 616, 0, 0,
	0, 0, 302, 0, 293, 188, 205, 0, 0, 344,
	385, 391, 0, 0, 0, 229, 0, 389, 358, 449,
	213, 257, 382, 363, 387, 370, 260, 0, 0, 388,
	308, 436, 377, 446, 466, 467, 237, 338, 456, 425,
	462, 478, 206, 234, 352, 418, 452, 409, 331, 432,
	433, 292, 408, 266, 191, 306, 472, 204, 397, 221,
	211, 197, 420, 444, 218, 400, 0, 0, 480, 199,
	442, 417, 327, 289, 290, 198, 0, 381, 242, 264,
	232, 347, 439, 440, 230, 481, 208, 461, 201, 0,
	460, 340, 435, 443, 328, 318, 200, 441, 326, 317,
	295, 253, 275, 375, 311, 376, 276, 336, 335, 337,
	194, 453, 0, 195, 0, 414, 454, 482, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 304,
	351, 374, 372, 378, 0, 430, 447, 457, 464, 470,
	471, 473, 474, 475, 476, 477, 339, 278, 410, 294,
	309, 0, 0, 357, 390, 219, 451, 411, 625, 617,
	598, 600, 626, 627, 595, 596, 599, 628, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 620, 585, 584,
	0, 591, 592, 0, 601, 602, 604, 608, 609, 610,
	611, 612, 613, 583, 187, 202, 305, 0, 379, 261,
	479, 459, 455, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 315, 321, 322, 323, 324, 341, 342,
	343, 346, 349, 350, 353, 355, 356, 359, 366, 367,
	368, 369, 371, 373, 380, 384, 392, 393, 394, 395,
	396, 398, 399, 404, 405, 406, 407, 415, 419, 437,
	438, 450, 463, 468, 270, 445, 469, 0, 314, 0,
	0, 316, 254, 273, 284, 0, 458, 416, 207, 386,
	262, 196, 225, 210, 233, 248, 251, 288, 325, 332,
	361, 365, 267, 245, 223, 383, 220, 401, 422, 423,
	424, 426, 329, 240, 364, 427, 0, 312, 428, 429,
	280, 0, 0, 0, 0, 0, 0, 348, 0, 0,
	0, 0, 582, 0, 0, 0, 244, 587, 0, 0,
	0, 303, 241, 0, 0, 362, 0, 193, 0, 403,
	228, 313, 310, 434, 255, 247, 243, 227, 281, 320,
	360, 421, 354, 594, 307, 0, 0, 412, 333, 0,
	0, 0, 0, 0, 589, 590, 0, 0, 0, 0,
	0, 0, 1705, 0, 287, 226, 192, 345, 413, 259,
	0, 87, 0, 0, 184, 185, 186, 634, 641, 642,
	643, 644, 645, 635, 637, 0, 0, 217, 636, 224,
	605, 607, 606, 603, 639, 646, 647, 1706, 239, 285,
	246, 238, 431, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 565, 579,
	0, 593, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	576, 577, 0, 0, 0, 0, 619, 0, 578, 0,
	0, 586, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 682, 683, 684, 685,
	686, 687, 688, 588, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 334, 231, 0, 618, 0,
	0, 465, 0, 0, 616, 0, 0, 0, 0, 302,
	0, 293, 188, 205, 0, 0, 344, 385, 391, 0,
	0, 0, 229, 0, 389, 358, 449, 213, 257, 382,
	363, 387, 370, 260, 0, 0, 388, 308, 436, 377,
	446, 466, 467, 237, 338, 456, 425, 462, 478, 206,
	234, 352, 418, 452, 409, 331, 432, 433, 292, 408,
	266, 191, 306, 472, 204, 397, 221, 211, 197, 420,
	444, 218, 400, 0, 0, 480, 199, 442, 417, 327,
	289, 290, 198, 0, 381, 242, 264, 232, 347, 439,
	440, 230, 481, 208, 461, 201, 0, 460, 340, 435,
	443, 328, 318, 200, 441, 326, 317, 295, 253, 275,
	375, 311, 376, 276, 336, 335, 337, 194, 453, 0,
	195, 0, 414, 454, 482, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 304, 351, 374, 372,
	378, 0, 430, 447, 457, 464, 470, 471, 473, 474,
	475, 476, 477, 339, 278, 410, 294, 309, 0, 0,
	357, 390, 219, 451, 411, 625, 617, 598, 600, 626,
	627, 595, 596, 599, 628, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 620, 585, 584, 0, 591, 592,
	0, 601, 602, 604, 608, 609, 610, 611, 612, 613,
	583, 187, 202, 305, 0, 379, 261, 479, 459, 455,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	315, 321, 322, 323, 324, 341, 342, 343, 346, 349,
	350, 353, 355, 356, 359, 366, 367, 368, 369, 371,
	373, 380, 384, 392, 393, 394, 395, 396, 398, 399,
	404, 405, 406, 407, 415, 419, 437, 438, 450, 463,
	468, 270, 445, 469, 0, 314, 0, 0, 316, 254,
	273, 284, 0, 458, 416, 207, 386, 262, 196, 225,
	210, 233, 248, 251, 288, 325, 332, 361, 365, 267,
	245, 223, 383, 220, 401, 422, 423, 424, 426, 329,
	240, 364, 78, 427, 312, 428, 429, 280, 0, 0,
	0, 0, 0, 0, 0, 348, 0, 0, 0, 0,
	582, 0, 0, 0, 244, 587, 0, 0, 0, 303,
	241, 0, 0, 362, 0, 193, 0, 403, 228, 313,
	310, 434, 255, 247, 243, 227, 281, 320, 360, 421,
	354, 594, 307, 0, 0, 412, 333, 0, 0, 0,
	0, 0, 589, 590, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 345, 413, 259, 0, 87,
	0, 0, 184, 185, 186, 634, 641, 642, 643, 644,
	645, 635, 637, 0, 0, 217, 636, 224, 605, 607,
	606, 603, 639, 646, 647, 0, 239, 285, 246, 238,
	431, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 565, 579, 0, 593,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 576, 577,
	0, 0, 0, 0, 619, 0, 578, 0, 0, 586,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 682, 683, 684, 685, 686, 687,
	688, 588, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 334, 231, 0, 618, 0, 0, 465,
	0, 0, 616, 0, 0, 0, 0, 302, 0, 293,
	188, 205, 0, 0, 344, 385, 391, 0, 0, 0,
	229, 0, 389, 358, 449, 213, 257, 382, 363, 387,
	370, 260, 0, 0, 388, 308, 436, 377, 446, 466,
	467, 237, 338, 456, 425, 462, 478, 206, 234, 352,
	418, 452, 409, 331, 432, 433, 292, 408, 266, 191,
	306, 472, 204, 397, 221, 211, 197, 420, 444, 218,
	400, 0, 0, 480, 199, 442, 417, 327, 289, 290,
	198, 0, 381, 242, 264, 232, 347, 439, 440, 230,
	481, 208, 461, 201, 0, 460, 340, 435, 443, 328,
	318, 200, 441, 326, 317, 295, 253, 275, 375, 311,
	376, 276, 336, 335, 337, 194, 453, 0, 195, 0,
	414, 454, 482, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 304, 351, 374, 372, 378, 0,
	430, 447, 457, 464, 470, 471, 473, 474, 475, 476,
	477, 339, 278, 410, 294, 309, 0, 0, 357, 390,
	219, 451, 411, 625, 617, 598, 600, 626, 627, 595,
	596, 599, 628, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 620, 585, 584, 0, 591, 592, 0, 601,
	602, 604, 608, 609, 610, 611, 612, 613, 583, 187,
	202, 305, 86, 379, 261, 479, 459, 455, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 315, 321,
	322, 323, 324, 341, 342, 343, 346, 349, 350, 353,
	355, 356, 359, 366, 367, 368, 369, 371, 373, 380,
	384, 392, 393, 394, 395, 396, 398, 399, 404, 405,
	406, 407, 415, 419, 437, 438, 450, 463, 468, 270,
	445, 469, 0, 314, 0, 0, 316, 254, 273, 284,
	0, 458, 416, 207, 386, 262, 196, 225, 210, 233,
	248, 251, 288, 325, 332, 361, 365, 267, 245, 223,
	383, 220, 401, 422, 423, 424, 426, 329, 240, 364,
	427, 0, 312, 428, 429, 280, 0, 0, 0, 0,
	0, 0, 348, 0, 0, 0, 0, 582, 0, 0,
	0, 244, 587, 0, 0, 0, 303, 241, 0, 0,
	362, 0, 193, 0, 403, 228, 313, 310, 434, 255,
	247, 243, 227, 281, 320, 360, 421, 354, 594, 307,
	0, 0, 412, 333, 0, 0, 0, 0, 0, 589,
	590, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 345, 413, 259, 0, 87, 0, 0, 184,
	185, 186, 634, 641, 642, 643, 644, 645, 635, 637,
	0, 0, 217, 636, 224, 605, 607, 606, 603, 639,
	646, 647, 0, 239, 285, 246, 238, 431, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 565, 579, 0, 593, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 576, 577, 0, 0, 0,
	0, 619, 0, 578, 0, 0, 586, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 683, 684, 685, 686, 687, 688, 588, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	334, 231, 0, 618, 0, 0, 465, 0, 0, 616,
	0, 0, 0, 0, 302, 0, 293, 188, 205, 0,
	0, 344, 385, 391, 0, 0, 0, 229, 0, 389,
	358, 449, 213, 257, 382, 363, 387, 370, 260, 2560,
	0, 388, 308, 436, 377, 446, 466, 467, 237, 338,
	456, 425, 462, 478, 206, 234, 352, 418, 452, 409,
	331, 432, 433, 292, 408, 266, 191, 306, 472, 204,
	397, 221, 211, 197, 420, 444, 218, 400, 0, 0,
	480, 199, 442, 417, 327, 289, 290, 198, 0, 381,
	242, 264, 232, 347, 439, 440, 230, 481, 208, 461,
	201, 0, 460, 340, 435, 443, 328, 318, 200, 441,
	326, 317, 295, 253, 275, 375, 311, 376, 276, 336,
	335, 337, 194, 453, 0, 195, 0, 414, 454, 482,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 304, 351, 374, 372, 378, 0, 430, 447, 457,
	464, 470, 471, 473, 474, 475, 476, 477, 339, 278,
	410, 294, 309, 0, 0, 357, 390, 219, 451, 411,
	625, 617, 598, 600, 626, 627, 595, 596, 599, 628,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 620,
	585, 584, 0, 591, 592, 0, 601, 602, 604, 608,
	609, 610, 611, 612, 613, 583, 187, 202, 305, 0,
	379, 261, 479, 459, 455, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 315, 321, 322, 323, 324,
	341, 342, 343, 346, 349, 350, 353, 355, 356, 359,
	366, 367, 368, 369, 371, 373, 380, 384, 392, 393,
	394, 395, 396, 398, 399, 404, 405, 406, 407, 415,
	419, 437, 438, 450, 463, 468, 270, 445, 469, 0,
	314, 0, 0, 316, 254, 273, 284, 0, 458, 416,
	207, 386, 262, 196, 225, 210, 233, 248, 251, 288,
	325, 332, 361, 365, 267, 245, 223, 383, 220, 401,
	422, 423, 424, 426, 329, 240, 364, 427, 0, 312,
	428, 429, 280, 0, 0, 0, 0, 0, 0, 348,
	0, 0, 0, 0, 582, 0, 0, 0, 244, 587,
	0, 0, 0, 303, 241, 0, 0, 362, 0, 193,
	0, 403, 228, 313, 310, 434, 255, 247, 243, 227,
	281, 320, 360, 421, 354, 594, 307, 0, 0, 412,
	333, 0, 0, 0, 0, 0, 589, 590, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 345,
	413, 259, 0, 87, 0, 1229, 184, 185, 186, 634,
	641, 642, 643, 644, 645, 635, 637, 0, 0, 217,
	636, 224, 605, 607, 606, 603, 639, 646, 647, 0,
	239, 285, 246, 238, 431, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	565, 579, 0, 593, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 576, 577, 0, 0, 0, 0, 619, 0,
	578, 0, 0, 586, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 679, 680, 681, 682, 683,
	684, 685, 686, 687, 688, 588, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 334, 231, 0,
	618, 0, 0, 465, 0, 0, 616, 0, 0, 0,
	0, 302, 0, 293, 188, 205, 0, 0, 344, 385,
	391, 0, 0, 0, 229, 0, 389, 358, 449, 213,
	257, 382, 363, 387, 370, 260, 0, 0, 388, 308,
	436, 377, 446, 466, 467, 237, 338, 456, 425, 462,
	478, 206, 234, 352, 418, 452, 409, 331, 432, 433,
	292, 408, 266, 191, 306, 472, 204, 397, 221, 211,
	197, 420, 444, 218, 400, 0, 0, 480, 199, 442,
	417, 327, 289, 290, 198, 0, 381, 242, 264, 232,
	347, 439, 440, 230, 481, 208, 461, 201, 0, 460,
	340, 435, 443, 328, 318, 200, 441, 326, 317, 295,
	253, 275, 375, 311, 376, 276, 336, 335, 337, 194,
	453, 0, 195, 0, 414, 454, 482, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 304, 351,
	374, 372, 378, 0, 430, 447, 457, 464, 470, 471,
	473, 474, 475, 476, 477, 339, 278, 410, 294, 309,
	0, 0, 357, 390, 219, 451, 411, 625, 617, 598,
	600, 626, 627, 595, 596, 599, 628, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 620, 585, 584, 0,
	591, 592, 0, 601, 602, 604, 608, 609, 610, 611,
	612, 613, 583, 187, 202, 305, 0, 379, 261, 479,
	459, 455, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 315, 321, 322, 323, 324, 341, 342, 343,
	346, 349, 350, 353, 355, 356, 359, 366, 367, 368,
	369, 371, 373, 380, 384, 392, 393, 394, 395, 396,
	398, 399, 404, 405, 406, 407, 415, 419, 437, 438,
	450, 463, 468, 270, 445, 469, 0, 314, 0, 0,
	316, 254, 273, 284, 0, 458, 416, 207, 386, 262,
	196, 225, 210, 233, 248, 251, 288, 325, 332, 361,
	365, 267, 245, 223, 383, 220, 401, 422, 423, 424,
	426, 329, 240, 364, 427, 0, 312, 428, 429, 280,
	0, 0, 0, 0, 0, 0, 348, 0, 0, 0,
	0, 582, 0, 0, 0, 244, 587, 0, 0, 0,
	303, 241, 0, 0, 362, 0, 193, 0, 403, 228,
	313, 310, 434, 255, 247, 243, 227, 281, 320, 360,
	421, 354, 594, 307, 0, 0, 412, 333, 0, 0,
	0, 0, 0, 589, 590, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 345, 413, 259, 0,
	87, 0, 0, 184, 185, 186, 634, 641, 642, 643,
	644, 645, 635, 637, 0, 0, 217, 636, 224, 605,
	607, 606, 603, 639, 646, 647, 0, 239, 285, 246,
	238, 431, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 565, 579, 0,
	593, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 576,
	577, 728, 0, 0, 0, 619, 0, 578, 0, 0,
	586, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 681, 682, 683, 684, 685, 686,
	687, 688, 588, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 334, 231, 0, 618, 0, 0,
	465, 0, 0, 616, 0, 0, 0, 0, 302, 0,
	293, 188, 205, 0, 0, 344, 385, 391, 0, 0,
	0, 229, 0, 389, 358, 449, 213, 257, 382, 363,
	387, 370, 260, 0, 0, 388, 308, 436, 377, 446,
	466, 467, 237, 338, 456, 425, 462, 478, 206, 234,
	352, 418, 452, 409, 331, 432, 433, 292, 408, 266,
	191, 306, 472, 204, 397, 221, 211, 197, 420, 444,
	218, 400, 0, 0, 480, 199, 442, 417, 327, 289,
	290, 198, 0, 381, 242, 264, 232, 347, 439, 440,
	230, 481, 208, 461, 201, 0, 460, 340, 435, 443,
	328, 318, 200, 441, 326, 317, 295, 253, 275, 375,
	311, 376, 276, 336, 335, 337, 194, 453, 0, 195,
	0, 414, 454, 482, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 304, 351, 374, 372, 378,
	0, 430, 447, 457, 464, 470, 471, 473, 474, 475,
	476, 477, 339, 278, 410, 294, 309, 0, 0, 357,
	390, 219, 451, 411, 625, 617, 598, 600, 626, 627,
	595, 596, 599, 628, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 620, 585, 584, 0, 591, 592, 0,
	601, 602, 604, 608, 609, 610, 611, 612, 613, 583,
	187, 202, 305, 0, 379, 261, 479, 459, 455, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 315,
	321, 322, 323, 324, 341, 342, 343, 346, 349, 350,
	353, 355, 356, 359, 366, 367, 368, 369, 371, 373,
	380, 384, 392, 393, 394, 395, 396, 398, 399, 404,
	405, 406, 407, 415, 419, 437, 438, 450, 463, 468,
	270, 445, 469, 0, 314, 0, 0, 316, 254, 273,
	284, 0, 458, 416, 207, 386, 262, 196, 225, 210,
	233, 248, 251, 288, 325, 332, 361, 365, 267, 245,
	223, 383, 220, 401, 422, 423, 424, 426, 329, 240,
	364, 427, 0, 312, 428, 429, 280, 0, 0, 0,
	0, 0, 0, 348, 0, 0, 0, 0, 582, 0,
	0, 0, 244, 587, 0, 0, 0, 303, 241, 0,
	0, 362, 0, 193, 0, 403, 228, 313, 310, 434,
	255, 247, 243, 227, 281, 320, 360, 421, 354, 594,
	307, 0, 0, 412, 333, 0, 0, 0, 0, 0,
	589, 590, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 345, 413, 259, 0, 87, 0, 0,
	184, 185, 186, 634, 641, 642, 643, 644, 645, 635,
	637, 0, 0, 217, 636, 224, 605, 607, 606, 603,
	639, 646, 647, 0, 239, 285, 246, 238, 431, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 565, 579, 0, 593, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 576, 577, 0, 0,
	0, 0, 619, 0, 578, 0, 0, 586, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 681, 682, 683, 684, 685, 686, 687, 688, 588,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 334, 231, 0, 618, 0, 0, 465, 0, 0,
	616, 0, 0, 0, 0, 302, 0, 293, 188, 205,
	0, 0, 344, 385, 391, 0, 0, 0, 229, 0,
	389, 358, 449, 213, 257, 382, 363, 387, 370, 260,
	0, 0, 388, 308, 436, 377, 446, 466, 467, 237,
	338, 456, 425, 462, 478, 206, 234, 352, 418, 452,
	409, 331, 432, 433, 292, 408, 266, 191, 306, 472,
	204, 397, 221, 211, 197, 420, 444, 218, 400, 0,
	0, 480, 199, 442, 417, 327, 289, 290, 198, 0,
	381, 242, 264, 232, 347, 439, 440, 230, 481, 208,
	461, 201, 0, 460, 340, 435, 443, 328, 318, 200,
	441, 326, 317, 295, 253, 275, 375, 311, 376, 276,
	336, 335, 337, 194, 453, 0, 195, 0, 414, 454,
	482, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 304, 351, 374, 372, 378, 0, 430, 447,
	457, 464, 470, 471, 473, 474, 475, 476, 477, 339,
	278, 410, 294, 309, 0, 0, 357, 390, 219, 451,
	411, 625, 617, 598, 600, 626, 627, 595, 596, 599,
	628, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	620, 585, 584, 0, 591, 592, 0, 601, 602, 604,
	608, 609, 610, 611, 612, 613, 583, 187, 202, 305,
	0, 379, 261, 479, 459, 455, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 315, 321, 322, 323,
	324, 341, 342, 343, 346, 349, 350, 353, 355, 356,
	359, 366, 367, 368, 369, 371, 373, 380, 384, 392,
	393, 394, 395, 396, 398, 399, 404, 405, 406, 407,
	415, 419, 437, 438, 450, 463, 468, 270, 445, 469,
	0, 314, 0, 0, 316, 254, 273, 284, 0, 458,
	416, 207, 386, 262, 196, 225, 210, 233, 248, 251,
	288, 325, 332, 361, 365, 267, 245, 223, 383, 220,
	401, 422, 423, 424, 426, 329, 240, 364, 427, 0,
	312, 428, 429, 280, 0, 0, 0, 0, 0, 0,
	348, 0, 0, 0, 0, 582, 0, 0, 0, 244,
	587, 0, 0, 0, 303, 241, 0, 0, 362, 0,
	193, 0, 403, 228, 313, 310, 434, 255, 247, 243,
	227, 281, 320, 360, 421, 354, 594, 307, 0, 0,
	412, 333, 0, 0, 0, 0, 0, 589, 590, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	345, 413, 259, 0, 87, 0, 0, 184, 185, 186,
	634, 641, 642, 643, 644, 645, 635, 637, 0, 0,
	217, 636, 224, 605, 607, 606, 603, 639, 646, 647,
	0, 239, 285, 246, 238, 431, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 579, 0, 593, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 576, 577, 0, 0, 0, 0, 619,
	0, 578, 0, 0, 586, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	683, 684, 685, 686, 687, 688, 588, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 334, 231,
	0, 618, 0, 0, 465, 0, 0, 616, 0, 0,
	0, 0, 302, 0, 293, 188, 205, 0, 0, 344,
	385, 391, 0, 0, 0, 229, 0, 389, 358, 449,
	213, 257, 382, 363, 387, 370, 260, 0, 0, 388,
	308, 436, 377, 446, 466, 467, 237, 338, 456, 425,
	462, 478, 206, 234, 352, 418, 452, 409, 331, 432,
	433, 292, 408, 266, 191, 306, 472, 204, 397, 221,
	211, 197, 420, 444, 218, 400, 0, 0, 480, 199,
	442, 417, 327, 289, 290, 198, 0, 381, 242, 264,
	232, 347, 439, 440, 230, 481, 208, 461, 201, 0,
	460, 340, 435, 443, 328, 318, 200, 441, 326, 317,
	295, 253, 275, 375, 311, 376, 276, 336, 335, 337,
	194, 453, 0, 195, 0, 414, 454, 482, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 304,
	351, 374, 372, 378, 0, 430, 447, 457, 464, 470,
	471, 473, 474, 475, 476, 477, 339, 278, 410, 294,
	309, 0, 0, 357, 390, 219, 451, 411, 625, 617,
	598, 600, 626, 627, 595, 596, 599, 628, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 620, 585, 584,
	0, 591, 592, 0, 601, 602, 604, 608, 609, 610,
	611, 612, 613, 583, 187, 202, 305, 0, 379, 261,
	479, 459, 455, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 315, 321, 322, 323, 324, 341, 342,
	343, 346, 349, 350, 353, 355, 356, 359, 366, 367,
	368, 369, 371, 373, 380, 384, 392, 393, 394, 395,
	396, 398, 399, 404, 405, 406, 407, 415, 419, 437,
	438, 450, 463, 468, 270, 445, 469, 0, 314, 0,
	0, 316, 254, 273, 284, 0, 458, 416, 207, 386,
	262, 196, 225, 210, 233, 248, 251, 288, 325, 332,
	361, 365, 267, 245, 223, 383, 220, 401, 422, 423,
	424, 426, 329, 240, 364, 427, 0, 312, 428, 429,
	280, 0, 0, 0, 0, 0, 0, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 303, 241, 0, 0, 362, 0, 193, 0, 403,
	228, 313, 310, 434, 255, 247, 243, 227, 281, 320,
	360, 421, 354, 0, 307, 0, 0, 412, 333, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 345, 413, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	299, 301, 300, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 431, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 942, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 334, 231, 0, 0, 0,
	941, 465, 0, 0, 0, 0, 0, 938, 939, 302,
	902, 293, 188, 205, 932, 936, 344, 385, 391, 0,
	0, 0, 229, 0, 389, 358, 449, 213, 257, 382,
	363, 387, 370, 260, 0, 0, 388, 308, 436, 377,
	446, 466, 467, 237, 338, 456, 425, 462, 478, 206,
	234, 352, 418, 452, 409, 331, 432, 433, 292, 408,
	266, 191, 306, 472, 204, 397, 221, 211, 197, 420,
	444, 218, 400, 0, 0, 480, 199, 442, 417, 327,
	289, 290, 198, 0, 381, 242, 264, 232, 347, 439,
	440, 230, 481, 208, 461, 201, 0, 460, 340, 435,
	443, 328, 318, 200, 441, 326, 317, 295, 253, 275,
	375, 311, 376, 276, 336, 335, 337, 194, 453, 0,
	195, 0, 414, 454, 482, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 304, 351, 374, 372,
	378, 0, 430, 447, 457, 464, 470, 471, 473, 474,
	475, 476, 477, 339, 278, 410, 294, 309, 0, 0,
	357, 390, 219, 451, 411, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 501, 319, 402, 448, 296, 297, 298,
	0, 187, 202, 305, 0, 379, 261, 479, 459, 455,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	315, 321, 322, 323, 324, 341, 342, 343, 346, 349,
	350, 353, 355, 356, 359, 366, 367, 368, 369, 371,
	373, 380, 384, 392, 393, 394, 395, 396, 398, 399,
	404, 405, 406, 407, 415, 419, 437, 438, 450, 463,
	468, 270, 445, 469, 0, 314, 0, 0, 316, 254,
	273, 284, 0, 458, 416, 207, 386, 262, 196, 225,
	210, 233, 248, 251, 288, 325, 332, 361, 365, 267,
	245, 223, 383, 220, 401, 422, 423, 424, 426, 329,
	240, 364, 78, 427, 312, 428, 429, 280, 0, 0,
	0, 0, 0, 0, 0, 348, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 303,
	241, 0, 0, 362, 0, 193, 0, 403, 228, 313,
	310, 434, 255, 247, 243, 227, 281, 320, 360, 421,
	354, 0, 307, 0, 0, 412, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 345, 413, 259, 0, 87,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 299, 301,
	300, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	431, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 334, 231, 0, 0, 0, 0, 465,
	0, 0, 0, 0, 0, 0, 0, 302, 0, 293,
	188, 205, 0, 0, 344, 385, 391, 0, 0, 0,
	229, 0, 389, 358, 449, 213, 257, 382, 363, 387,
	370, 260, 0, 0, 388, 308, 436, 377, 446, 466,
	467, 237, 338, 456, 425, 462, 478, 206, 234, 352,
	418, 452, 409, 331, 432, 433, 292, 408, 266, 191,
	306, 472, 204, 397, 221, 211, 197, 420, 444, 218,
	400, 0, 0, 480, 199, 442, 417, 327, 289, 290,
	198, 0, 381, 242, 264, 232, 347, 439, 440, 230,
	481, 208, 461, 201, 0, 460, 340, 435, 443, 328,
	318, 200, 441, 326, 317, 295, 253, 275, 375, 311,
	376, 276, 336, 335, 337, 194, 453, 0, 195, 0,
	414, 454, 482, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 304, 351, 374, 372, 378, 0,
	430, 447, 457, 464, 470, 471, 473, 474, 475, 476,
	477, 339, 278, 410, 294, 309, 0, 0, 357, 390,
	219, 451, 411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 501, 319, 402, 448, 296, 297, 298, 0, 187,
	202, 305, 86, 379, 261, 479, 459, 455, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 1693, 0, 0,
	1692, 0, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 315, 321,
	322, 323, 324, 341, 342, 343, 346, 349, 350, 353,
	355, 356, 359, 366, 367, 368, 369, 371, 373, 380,
	384, 392, 393, 394, 395, 396, 398, 399, 404, 405,
	406, 407, 415, 419, 437, 438, 450, 463, 468, 270,
	445, 469, 0, 314, 0, 0, 316, 254, 273, 284,
	0, 458, 416, 207, 386, 262, 196, 225, 210, 233,
	248, 251, 288, 325, 332, 361, 365, 267, 245, 223,
	383, 220, 401, 422, 423, 424, 426, 329, 240, 364,
	427, 0, 312, 428, 429, 280, 0, 0, 0, 0,
	0, 0, 348, 0, 0, 0, 1249, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 303, 241, 0, 0,
	362, 0, 193, 0, 403, 228, 313, 310, 434, 255,
	247, 243, 227, 281, 320, 360, 421, 354, 0, 307,
	0, 0, 412, 333, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 345, 413, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 1251, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 299, 301, 300, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 431, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 1106,
	0, 1107, 1108, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	334, 231, 0, 0, 0, 0, 465, 0, 0, 0,
	0, 0, 0, 0, 302, 0, 293, 188, 205, 0,
	0, 344, 385, 391, 0, 0, 0, 229, 0, 389,
	358, 449, 213, 257, 382, 363, 387, 370, 260, 0,
	0, 388, 308, 436, 377, 446, 466, 467, 237, 338,
	456, 425, 462, 478, 206, 234, 352, 418, 452, 409,
	331, 432, 433, 292, 408, 266, 191, 306, 472, 204,
	397, 221, 211, 197, 420, 444, 218, 400, 0, 0,
	480, 199, 442, 417, 327, 289, 290, 198, 0, 381,
	242, 264, 232, 347, 439, 440, 230, 481, 208, 461,
	201, 0, 460, 340, 435, 443, 328, 318, 200, 441,
	326, 317, 295, 253, 275, 375, 311, 376, 276, 336,
	335, 337, 194, 453, 0, 195, 0, 414, 454, 482,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 304, 351, 374, 372, 378, 0, 430, 447, 457,
	464, 470, 471, 473, 474, 475, 476, 477, 339, 278,
	410, 294, 309, 0, 0, 357, 390, 219, 451, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 501, 319,
	402, 448, 296, 297, 298, 0, 187, 202, 305, 0,
	379, 261, 479, 459, 455, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 315, 321, 322, 323, 324,
	341, 342, 343, 346, 349, 350, 353, 355, 356, 359,
	366, 367, 368, 369, 371, 373, 380, 384, 392, 393,
	394, 395, 396, 398, 399, 404, 405, 406, 407, 415,
	419, 437, 438, 450, 463, 468, 270, 445, 469, 0,
	314, 0, 0, 316, 254, 273, 284, 0, 458, 416,
	207, 386, 262, 196, 225, 210, 233, 248, 251, 288,
	325, 332, 361, 365, 267, 245, 223, 383, 220, 401,
	422, 423, 424, 426, 329, 240, 364, 427, 0, 312,
	428, 429, 280, 0, 0, 0, 0, 0, 0, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 303, 241, 0, 0, 362, 0, 193,
	0, 403, 228, 313, 310, 434, 255, 247, 243, 227,
	281, 320, 360, 421, 354, 0, 307, 0, 0, 412,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 345,
	413, 259, 0, 0, 0, 0, 184, 185, 186, 1191,
	1194, 0, 0, 0, 0, 1190, 1193, 0, 0, 217,
	1189, 224, 299, 301, 300, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 431, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 334, 231, 0,
	0, 0, 0, 465, 0, 0, 0, 0, 0, 0,
	0, 302, 0, 293, 188, 205, 0, 0, 344, 385,
	391, 0, 0, 0, 229, 0, 389, 358, 449, 213,
	257, 382, 363, 387, 370, 260, 0, 0, 388, 308,
	436, 377, 446, 466, 467, 237, 338, 456, 425, 462,
	478, 206, 234, 352, 418, 452, 409, 331, 432, 433,
	292, 408, 266, 191, 306, 472, 204, 397, 221, 211,
	197, 420, 444, 218, 400, 0, 0, 480, 199, 442,
	417, 327, 289, 290, 198, 0, 381, 242, 264, 232,
	347, 439, 440, 230, 481, 208, 461, 201, 0, 460,
	340, 435, 443, 328, 318, 200, 441, 326, 317, 295,
	253, 275, 375, 311, 376, 276, 336, 335, 337, 194,
	453, 0, 195, 0, 414, 454, 482, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 304, 351,
	374, 372, 378, 0, 430, 447, 457, 464, 470, 471,
	473, 474, 475, 476, 477, 339, 278, 410, 294, 309,
	0, 0, 357, 390, 219, 451, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 501, 319, 402, 448, 296,
	297, 298, 0, 187, 202, 305, 0, 379, 261, 479,
	459, 455, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 315, 321, 322, 323, 324, 341, 342, 343,
	346, 349, 350, 353, 355, 356, 359, 366, 367, 368,
	369, 371, 373, 380, 384, 392, 393, 394, 395, 396,
	398, 399, 404, 405, 406, 407, 415, 419, 437, 438,
	450, 463, 468, 270, 445, 469, 0, 314, 0, 0,
	316, 254, 273, 284, 0, 458, 416, 207, 386, 262,
	196, 225, 210, 233, 248, 251, 288, 325, 332, 361,
	365, 267, 245, 223, 383, 220, 401, 422, 423, 424,
	426, 329, 240, 364, 78, 427, 312, 428, 429, 280,
	0, 0, 0, 0, 0, 0, 0, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 303, 241, 0, 0, 362, 0, 193, 0, 403,
	228, 313, 310, 434, 255, 247, 243, 227, 281, 320,
	360, 421, 354, 0, 307, 0, 0, 412, 333, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 345, 413, 259,
	0, 87, 0, 1229, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	299, 301, 300, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 431, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 334, 231, 0, 0, 0,
	0, 465, 0, 0, 0, 0, 0, 0, 0, 302,
	0, 293, 188, 205, 0, 0, 344, 385, 391, 0,
	0, 0, 229, 0, 389, 358, 449, 213, 257, 382,
	363, 387, 370, 260, 0, 0, 388, 308, 436, 377,
	446, 466, 467, 237, 338, 456, 425, 462, 478, 206,
	234, 352, 418, 452, 409, 331, 432, 433, 292, 408,
	266, 191, 306, 472, 204, 397, 221, 211, 197, 420,
	444, 218, 400, 0, 0, 480, 199, 442, 417, 327,
	289, 290, 198, 0, 381, 242, 264, 232, 347, 439,
	440, 230, 481, 208, 461, 201, 0, 460, 340, 435,
	443, 328, 318, 200, 441, 326, 317, 295, 253, 275,
	375, 311, 376, 276, 336, 335, 337, 194, 453, 0,
	195, 0, 414, 454, 482, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 304, 351, 374, 372,
	378, 0, 430, 447, 457, 464, 470, 471, 473, 474,
	475, 476, 477, 339, 278, 410, 294, 309, 0, 0,
	357, 390, 219, 451, 411, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 501, 319, 402, 448, 296, 297, 298,
	0, 187, 202, 305, 86, 379, 261, 479, 459, 455,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	315, 321, 322, 323, 324, 341, 342, 343, 346, 349,
	350, 353, 355, 356, 359, 366, 367, 368, 369, 371,
	373, 380, 384, 392, 393, 394, 395, 396, 398, 399,
	404, 405, 406, 407, 415, 419, 437, 438, 450, 463,
	468, 270, 445, 469, 0, 314, 0, 0, 316, 254,
	273, 284, 0, 458, 416, 207, 386, 262, 196, 225,
	210, 233, 248, 251, 288, 325, 332, 361, 365, 267,
	245, 223, 383, 220, 401, 422, 423, 424, 426, 329,
	240, 364, 427, 0, 312, 428, 429, 280, 0, 0,
	0, 0, 0, 0, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 303, 241,
	0, 0, 362, 0, 193, 0, 403, 228, 313, 310,
	434, 255, 247, 243, 227, 281, 320, 360, 421, 354,
	0, 307, 0, 0, 412, 333, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 345, 413, 259, 0, 87, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 299, 301, 300,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 431,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 334, 231, 0, 0, 0, 0, 465, 0,
	0, 0, 0, 0, 0, 0, 302, 0, 293, 188,
	205, 0, 0, 344, 385, 391, 0, 0, 0, 229,
	0, 389, 358, 449, 213, 257, 382, 363, 387, 370,
	260, 0, 0, 388, 308, 436, 377, 446, 466, 467,
	237, 338, 456, 425, 462, 478, 206, 234, 352, 418,
	452, 409, 331, 432, 433, 292, 408, 266, 191, 306,
	472, 204, 397, 221, 211, 197, 420, 444, 218, 400,
	0, 0, 480, 199, 442, 417, 327, 289, 290, 198,
	0, 381, 242, 264, 232, 347, 439, 440, 230, 481,
	208, 461, 201, 0, 460, 340, 435, 443, 328, 318,
	200, 441, 326, 317, 295, 253, 275, 375, 311, 376,
	276, 336, 335, 337, 194, 453, 0, 195, 0, 414,
	454, 482, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 304, 351, 374, 372, 378, 0, 430,
	447, 457, 464, 470, 471, 473, 474, 475, 476, 477,
	339, 278, 410, 294, 309, 0, 0, 357, 390, 219,
	451, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	501, 319, 402, 448, 296, 297, 298, 0, 187, 202,
	305, 0, 379, 261, 479, 459, 455, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 1693, 0, 0, 1692,
	0, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 315, 321, 322,
	323, 324, 341, 342, 343, 346, 349, 350, 353, 355,
	356, 359, 366, 367, 368, 369, 371, 373, 380, 384,
	392, 393, 394, 395, 396, 398, 399, 404, 405, 406,
	407, 415, 419, 437, 438, 450, 463, 468, 270, 445,
	469, 0, 314, 0, 0, 316, 254, 273, 284, 0,
	458, 416, 207, 386, 262, 196, 225, 210, 233, 248,
	251, 288, 325, 332, 361, 365, 267, 245, 223, 383,
	220, 401, 422, 423, 424, 426, 329, 240, 364, 427,
	0, 312, 428, 429, 280, 0, 0, 0, 0, 0,
	0, 348, 0, 0, 0, 1645, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 303, 241, 0, 0, 362,
	0, 193, 0, 403, 228, 313, 310, 434, 255, 247,
	243, 227, 281, 320, 360, 421, 354, 0, 307, 0,
	0, 412, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 345, 413, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 1421, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 299, 301, 300, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 431, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 334,
	231, 0, 0, 0, 0, 465, 0, 0, 0, 0,
	0, 0, 0, 302, 0, 293, 188, 205, 0, 0,
	344, 385, 391, 0, 0, 0, 229, 0, 389, 358,
	449, 213, 257, 382, 363, 387, 370, 260, 0, 1643,
	388, 308, 436, 377, 446, 466, 467, 237, 338, 456,
	425, 462, 478, 206, 234, 352, 418, 452, 409, 331,
	432, 433, 292, 408, 266, 191, 306, 472, 204, 397,
	221, 211, 197, 420, 444, 218, 400, 0, 0, 480,
	199, 442, 417, 327, 289, 290, 198, 0, 381, 242,
	264, 232, 347, 439, 440, 230, 481, 208, 461, 201,
	0, 460, 340, 435, 443, 328, 318, 200, 441, 326,
	317, 295, 253, 275, 375, 311, 376, 276, 336, 335,
	337, 194, 453, 0, 195, 0, 414, 454, 482, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	304, 351, 374, 372, 378, 0, 430, 447, 457, 464,
	470, 471, 473, 474, 475, 476, 477, 339, 278, 410,
	294, 309, 0, 0, 357, 390, 219, 451, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 501, 319, 402,
	448, 296, 297, 298, 0, 187, 202, 305, 0, 379,
	261, 479, 459, 455, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 315, 321, 322, 323, 324, 341,
	342, 343, 346, 349, 350, 353, 355, 356, 359, 366,
	367, 368, 369, 371, 373, 380, 384, 392, 393, 394,
	395, 396, 398, 399, 404, 405, 406, 407, 415, 419,
	437, 438, 450, 463, 468, 270, 445, 469, 0, 314,
	0, 0, 316, 254, 273, 284, 0, 458, 416, 207,
	386, 262, 196, 225, 210, 233, 248, 251, 288, 325,
	332, 361, 365, 267, 245, 223, 383, 220, 401, 422,
	423, 424, 426, 329, 240, 364, 427, 0, 312, 428,
	429, 280, 0, 0, 0, 0, 0, 0, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 303, 241, 0, 0, 362, 0, 193, 0,
	403, 228, 313, 310, 434, 255, 247, 243, 227, 281,
	320, 360, 421, 354, 0, 307, 0, 0, 412, 333,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 345, 413,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 299, 301, 300, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 431, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 896, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 334, 231, 0, 0,
	0, 0, 465, 0, 0, 0, 0, 0, 0, 0,
	302, 902, 293, 188, 205, 900, 0, 344, 385, 391,
	0, 0, 0, 229, 0, 389, 358, 449, 213, 257,
	382, 363, 387, 370, 260, 0, 0, 388, 308, 436,
	377, 446, 466, 467, 237, 338, 456, 425, 462, 478,
	206, 234, 352, 418, 452, 409, 331, 432, 433, 292,
	408, 266, 191, 306, 472, 204, 397, 221, 211, 197,
	420, 444, 218, 400, 0, 0, 480, 199, 442, 417,
	327, 289, 290, 198, 0, 381, 242, 264, 232, 347,
	439, 440, 230, 481, 208, 461, 201, 0, 460, 340,
	435, 443, 328, 318, 200, 441, 326, 317, 295, 253,
	275, 375, 311, 376, 276, 336, 335, 337, 194, 453,
	0, 195, 0, 414, 454, 482, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 304, 351, 374,
	372, 378, 0, 430, 447, 457, 464, 470, 471, 473,
	474, 475, 476, 477, 339, 278, 410, 294, 309, 0,
	0, 357, 390, 219, 451, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 501, 319, 402, 448, 296, 297,
	298, 0, 187, 202, 305, 0, 379, 261, 479, 459,
	455, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 315, 321, 322, 323, 324, 341, 342, 343, 346,
	349, 350, 353, 355, 356, 359, 366, 367, 368, 369,
	371, 373, 380, 384, 392, 393, 394, 395, 396, 398,
	399, 404, 405, 406, 407, 415, 419, 437, 438, 450,
	463, 468, 270, 445, 469, 0, 314, 0, 0, 316,
	254, 273, 284, 0, 458, 416, 207, 386, 262, 196,
	225, 210, 233, 248, 251, 288, 325, 332, 361, 365,
	267, 245, 223, 383, 220, 401, 422, 423, 424, 426,
	329, 240, 364, 427, 0, 312, 428, 429, 280, 0,
	0, 0, 0, 0, 0, 348, 0, 0, 0, 1645,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 303,
	241, 0, 0, 362, 0, 193, 0, 403, 228, 313,
	310, 434, 255, 247, 243, 227, 281, 320, 360, 421,
	354, 0, 307, 0, 0, 412, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 345, 413, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 1421, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 299, 301,
	300, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	431, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 334, 231, 0, 0, 0, 0, 465,
	0, 0, 0, 0, 0, 0, 0, 302, 0, 293,
	188, 205, 0, 0, 344, 385, 391, 0, 0, 0,
	229, 0, 389, 358, 449, 213, 257, 382, 363, 387,
	370, 260, 0, 0, 388, 308, 436, 377, 446, 466,
	467, 237, 338, 456, 425, 462, 478, 206, 234, 352,
	418, 452, 409, 331, 432, 433, 292, 408, 266, 191,
	306, 472, 204, 397, 221, 211, 197, 420, 444, 218,
	400, 0, 0, 480, 199, 442, 417, 327, 289, 290,
	198, 0, 381, 242, 264, 232, 347, 439, 440, 230,
	481, 208, 461, 201, 0, 460, 340, 435, 443, 328,
	318, 200, 441, 326, 317, 295, 253, 275, 375, 311,
	376, 276, 336, 335, 337, 194, 453, 0, 195, 0,
	414, 454, 482, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 304, 351, 374, 372, 378, 0,
	430, 447, 457, 464, 470, 471, 473, 474, 475, 476,
	477, 339, 278, 410, 294, 309, 0, 0, 357, 390,
	219, 451, 411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 501, 319, 402, 448, 296, 297, 298, 0, 187,
	202, 305, 0, 379, 261, 479, 459, 455, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 315, 321,
	322, 323, 324, 341, 342, 343, 346, 349, 350, 353,
	355, 356, 359, 366, 367, 368, 369, 371, 373, 380,
	384, 392, 393, 394, 395, 396, 398, 399, 404, 405,
	406, 407, 415, 419, 437, 438, 450, 463, 468, 270,
	445, 469, 0, 314, 0, 0, 316, 254, 273, 284,
	0, 458, 416, 207, 386, 262, 196, 225, 210, 233,
	248, 251, 288, 325, 332, 361, 365, 267, 245, 223,
	383, 220, 401, 422, 423, 424, 426, 329, 240, 364,
	427, 0, 312, 428, 429, 280, 0, 0, 0, 0,
	0, 0, 348, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 303, 241, 0, 0,
	362, 0, 193, 0, 403, 228, 313, 310, 434, 255,
	247, 243, 227, 281, 320, 360, 421, 354, 0, 307,
	0, 0, 412, 333, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 345, 413, 259, 0, 0, 0, 1229, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 299, 301, 300, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 431, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	334, 231, 0, 0, 0, 0, 465, 0, 0, 0,
	2528, 0, 0, 0, 302, 0, 293, 188, 205, 0,
	0, 344, 385, 391, 0, 0, 0, 229, 0, 389,
	358, 449, 213, 257, 382, 363, 387, 370, 260, 0,
	0, 388, 308, 436, 377, 446, 466, 467, 237, 338,
	456, 425, 462, 478, 206, 234, 352, 418, 452, 409,
	331, 432, 433, 292, 408, 266, 191, 306, 472, 204,
	397, 221, 211, 197, 420, 444, 218, 400, 0, 0,
	480, 199, 442, 417, 327, 289, 290, 198, 0, 381,
	242, 264, 232, 347, 439, 440, 230, 481, 208, 461,
	201, 0, 460, 340, 435, 443, 328, 318, 200, 441,
	326, 317, 295, 253, 275, 375, 311, 376, 276, 336,
	335, 337, 194, 453, 0, 195, 0, 414, 454, 482,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 304, 351, 374, 372, 378, 0, 430, 447, 457,
	464, 470, 471, 473, 474, 475, 476, 477, 339, 278,
	410, 294, 309, 0, 0, 357, 390, 219, 451, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 501, 319,
	402, 448, 296, 297, 298, 0, 187, 202, 305, 0,
	379, 261, 479, 459, 455, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 315, 321, 322, 323, 324,
	341, 342, 343, 346, 349, 350, 353, 355, 356, 359,
	366, 367, 368, 369, 371, 373, 380, 384, 392, 393,
	394, 395, 396, 398, 399, 404, 405, 406, 407, 415,
	419, 437, 438, 450, 463, 468, 270, 445, 469, 0,
	314, 0, 0, 316, 254, 273, 284, 0, 458, 416,
	207, 386, 262, 196, 225, 210, 233, 248, 251, 288,
	325, 332, 361, 365, 267, 245, 223, 383, 220, 401,
	422, 423, 424, 426, 329, 240, 364, 427, 0, 312,
	428, 429, 280, 0, 0, 0, 0, 0, 0, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 303, 241, 0, 0, 362, 0, 193,
	0, 403, 228, 313, 310, 434, 255, 247, 243, 227,
	281, 320, 360, 421, 354, 0, 307, 0, 0, 412,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 345,
	413, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	1943, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 299, 301, 300, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 431, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1944, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 334, 231, 0,
	0, 0, 0, 465, 0, 0, 0, 0, 0, 0,
	0, 302, 0, 293, 188, 205, 0, 0, 344, 385,
	391, 0, 0, 0, 229, 0, 389, 358, 449, 213,
	257, 382, 363, 387, 370, 260, 0, 0, 388, 308,
	436, 377, 446, 466, 467, 237, 338, 456, 425, 462,
	478, 206, 234, 352, 418, 452, 409, 331, 432, 433,
	292, 408, 266, 191, 306, 472, 204, 397, 221, 211,
	197, 420, 444, 218, 400, 0, 0, 480, 199, 442,
	417, 327, 289, 290, 198, 0, 381, 242, 264, 232,
	347, 439, 440, 230, 481, 208, 461, 201, 0, 460,
	340, 435, 443, 328, 318, 200, 441, 326, 317, 295,
	253, 275, 375, 311, 376, 276, 336, 335, 337, 194,
	453, 0, 195, 0, 414, 454, 482, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 304, 351,
	374, 372, 378, 0, 430, 447, 457, 464, 470, 471,
	473, 474, 475, 476, 477, 339, 278, 410, 294, 309,
	0, 0, 357, 390, 219, 451, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 501, 319, 402, 448, 296,
	297, 298, 0, 187, 202, 305, 0, 379, 261, 479,
	459, 455, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 315, 321, 322, 323, 324, 341, 342, 343,
	346, 349, 350, 353, 355, 356, 359, 366, 367, 368,
	369, 371, 373, 380, 384, 392, 393, 394, 395, 396,
	398, 399, 404, 405, 406, 407, 415, 419, 437, 438,
	450, 463, 468, 270, 445, 469, 0, 314, 0, 0,
	316, 254, 273, 284, 0, 458, 416, 207, 386, 262,
	196, 225, 210, 233, 248, 251, 288, 325, 332, 361,
	365, 267, 245, 223, 383, 220, 401, 422, 423, 424,
	426, 329, 240, 364, 427, 0, 312, 428, 429, 280,
	0, 0, 0, 0, 0, 0, 348, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	303, 241, 0, 0, 362, 0, 193, 0, 403, 228,
	313, 310, 434, 255, 247, 243, 227, 281, 320, 360,
	421, 354, 0, 307, 0, 0, 412, 333, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 345, 413, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 1928,
	0, 0, 0, 1929, 0, 0, 217, 0, 224, 299,
	301, 300, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 431, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 334, 231, 0, 0, 0, 0,
	465, 0, 0, 0, 0, 0, 0, 0, 302, 0,
	293, 188, 205, 0, 0, 344, 385, 391, 0, 0,
	0, 229, 0, 389, 358, 449, 213, 257, 382, 363,
	387, 370, 260, 0, 0, 388, 308, 436, 377, 446,
	466, 467, 237, 338, 456, 425, 462, 478, 206, 234,
	352, 418, 452, 409, 331, 432, 433, 292, 408, 266,
	191, 306, 472, 204, 397, 221, 211, 197, 420, 444,
	218, 400, 0, 0, 480, 199, 442, 417, 327, 289,
	290, 198, 0, 381, 242, 264, 232, 347, 439, 440,
	230, 481, 208, 461, 201, 0, 460, 340, 435, 443,
	328, 318, 200, 441, 326, 317, 295, 253, 275, 375,
	311, 376, 276, 336, 335, 337, 194, 453, 0, 195,
	0, 414, 454, 482, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 304, 351, 374, 372, 378,
	0, 430, 447, 457, 464, 470, 471, 473, 474, 475,
	476, 477, 339, 278, 410, 294, 309, 0, 0, 357,
	390, 219, 451, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 501, 319, 402, 448, 296, 297, 298, 0,
	187, 202, 305, 0, 379, 261, 479, 459, 455, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 315,
	321, 322, 323, 324, 341, 342, 343, 346, 349, 350,
	353, 355, 356, 359, 366, 367, 368, 369, 371, 373,
	380, 384, 392, 393, 394, 395, 396, 398, 399, 404,
	405, 406, 407, 415, 419, 437, 438, 450, 463, 468,
	270, 445, 469, 0, 314, 0, 0, 316, 254, 273,
	284, 0, 458, 416, 207, 386, 262, 196, 225, 210,
	233, 248, 251, 288, 325, 332, 361, 365, 267, 245,
	223, 383, 220, 401, 422, 423, 424, 426, 329, 240,
	364, 427, 0, 312, 428, 429, 280, 0, 0, 0,
	0, 0, 0, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 1272, 0, 0, 0, 303, 241, 0,
	0, 362, 0, 193, 0, 403, 228, 313, 310, 434,
	255, 247, 243, 227, 281, 320, 360, 421, 354, 0,
	307, 0, 0, 412, 333, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 345, 413, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 1271, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 299, 301, 300, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 431, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 334, 231, 0, 0, 0, 0, 465, 0, 0,
	0, 0, 0, 0, 0, 302, 0, 293, 188, 205,
	0, 0, 344, 385, 391, 0, 0, 0, 229, 0,
	389, 358, 449, 213, 257, 382, 363, 387, 370, 260,
	0, 0, 388, 308, 436, 377, 446, 466, 467, 237,
	338, 456, 425, 462, 478, 206, 234, 352, 418, 452,
	409, 331, 432, 433, 292, 408, 266, 191, 306, 472,
	204, 397, 221, 211, 197, 420, 444, 218, 400, 0,
	0, 480, 199, 442, 417, 327, 289, 290, 198, 0,
	381, 242, 264, 232, 347, 439, 440, 230, 481, 208,
	461, 201, 0, 460, 340, 435, 443, 328, 318, 200,
	441, 326, 317, 295, 253, 275, 375, 311, 376, 276,
	336, 335, 337, 194, 453, 0, 195, 0, 414, 454,
	482, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 304, 351, 374, 372, 378, 0, 430, 447,
	457, 464, 470, 471, 473, 474, 475, 476, 477, 339,
	278, 410, 294, 309, 0, 0, 357, 390, 219, 451,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 501,
	319, 402, 448, 296, 297, 298, 0, 187, 202, 305,
	0, 379, 261, 479, 459, 455, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 315, 321, 322, 323,
	324, 341, 342, 343, 346, 349, 350, 353, 355, 356,
	359, 366, 367, 368, 369, 371, 373, 380, 384, 392,
	393, 394, 395, 396, 398, 399, 404, 405, 406, 407,
	415, 419, 437, 438, 450, 463, 468, 270, 445, 469,
	0, 314, 0, 0, 316, 254, 273, 284, 0, 458,
	416, 207, 386, 262, 196, 225, 210, 233, 248, 251,
	288, 325, 332, 361, 365, 267, 245, 223, 383, 220,
	401, 422, 423, 424, 426, 329, 240, 364, 427, 0,
	312, 428, 429, 280, 0, 0, 0, 0, 0, 0,
	348, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 303, 241, 0, 0, 362, 0,
	193, 0, 403, 228, 313, 310, 434, 255, 247, 243,
	227, 281, 320, 360, 421, 354, 0, 307, 0, 0,
	412, 333, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	345, 413, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 299, 301, 300, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 431, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 334, 231,
	0, 0, 0, 0, 465, 0, 0, 0, 2600, 0,
	0, 0, 302, 0, 293, 188, 205, 0, 0, 344,
	385, 391, 0, 0, 0, 229, 0, 389, 358, 449,
	213, 257, 382, 363, 387, 370, 260, 0, 0, 388,
	308, 436, 377, 446, 466, 467, 237, 338, 456, 425,
	462, 478, 206, 234, 352, 418, 452, 409, 331, 432,
	433, 292, 408, 266, 191, 306, 472, 204, 397, 221,
	211, 197, 420, 444, 218, 400, 0, 0, 480, 199,
	442, 417, 327, 289, 290, 198, 0, 381, 242, 264,
	232, 347, 439, 440, 230, 481, 208, 461, 201, 0,
	460, 340, 435, 443, 328, 318, 200, 441, 326, 317,
	295, 253, 275, 375, 311, 376, 276, 336, 335, 337,
	194, 453, 0, 195, 0, 414, 454, 482, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 304,
	351, 374, 372, 378, 0, 430, 447, 457, 464, 470,
	471, 473, 474, 475, 476, 477, 339, 278, 410, 294,
	309, 0, 0, 357, 390, 219, 451, 411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 501, 319, 402, 448,
	296, 297, 298, 0, 187, 202, 305, 0, 379, 261,
	479, 459, 455, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 315, 321, 322, 323, 324, 341, 342,
	343, 346, 349, 350, 353, 355, 356, 359, 366, 367,
	368, 369, 371, 373, 380, 384, 392, 393, 394, 395,
	396, 398, 399, 404, 405, 406, 407, 415, 419, 437,
	438, 450, 463, 468, 270, 445, 469, 0, 314, 0,
	0, 316, 254, 273, 284, 0, 458, 416, 207, 386,
	262, 196, 225, 210, 233, 248, 251, 288, 325, 332,
	361, 365, 267, 245, 223, 383, 220, 401, 422, 423,
	424, 426, 329, 240, 364, 427, 0, 312, 428, 429,
	280, 0, 0, 0, 0, 0, 0, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 303, 241, 0, 0, 362, 0, 193, 0, 403,
	228, 313, 310, 434, 255, 247, 243, 227, 281, 320,
	360, 421, 354, 0, 307, 0, 0, 412, 333, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 345, 413, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	299, 301, 300, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 431, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 334, 231, 0, 0, 0,
	0, 465, 0, 0, 0, 2528, 0, 0, 0, 302,
	0, 293, 188, 205, 0, 0, 344, 385, 391, 0,
	0, 0, 229, 0, 389, 358, 449, 213, 257, 382,
	363, 387, 370, 260, 0, 0, 388, 308, 436, 377,
	446, 466, 467, 237, 338, 456, 425, 462, 478, 206,
	234, 352, 418, 452, 409, 331, 432, 433, 292, 408,
	266, 191, 306, 472, 204, 397, 221, 211, 197, 420,
	444, 218, 400, 0, 0, 480, 199, 442, 417, 327,
	289, 290, 198, 0, 381, 242, 264, 232, 347, 439,
	440, 230, 481, 208, 461, 201, 0, 460, 340, 435,
	443, 328, 318, 200, 441, 326, 317, 295, 253, 275,
	375, 311, 376, 276, 336, 335, 337, 194, 453, 0,
	195, 0, 414, 454, 482, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 304, 351, 374, 372,
	378, 0, 430, 447, 457, 464, 470, 471, 473, 474,
	475, 476, 477, 339, 278, 410, 294, 309, 0, 0,
	357, 390, 219, 451, 411, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 501, 319, 402, 448, 296, 297, 298,
	0, 187, 202, 305, 0, 379, 261, 479, 459, 455,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	315, 321, 322, 323, 324, 341, 342, 343, 346, 349,
	350, 353, 355, 356, 359, 366, 367, 368, 369, 371,
	373, 380, 384, 392, 393, 394, 395, 396, 398, 399,
	404, 405, 406, 407, 415, 419, 437, 438, 450, 463,
	468, 270, 445, 469, 0, 314, 0, 0, 316, 254,
	273, 284, 0, 458, 416, 207, 386, 262, 196, 225,
	210, 233, 248, 251, 288, 325, 332, 361, 365, 267,
	245, 223, 383, 220, 401, 422, 423, 424, 426, 329,
	240, 364, 427, 0, 312, 428, 429, 280, 0, 0,
	0, 0, 0, 0, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 303, 241,
	0, 0, 362, 0, 193, 0, 403, 228, 313, 310,
	434, 255, 247, 243, 227, 281, 320, 360, 421, 354,
	0, 307, 0, 0, 412, 333, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 345, 413, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 1421, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 299, 301, 300,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 431,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 334, 231, 0, 0, 0, 0, 465, 0,
	0, 0, 0, 0, 0, 0, 302, 0, 293, 188,
	205, 0, 0, 344, 385, 391, 0, 0, 0, 229,
	0, 389, 358, 449, 213, 257, 382, 363, 387, 370,
	260, 0, 0, 388, 308, 436, 377, 446, 466, 467,
	237, 338, 456, 425, 462, 478, 206, 234, 352, 418,
	452, 409, 331, 432, 433, 292, 408, 266, 191, 306,
	472, 204, 397, 221, 211, 197, 420, 444, 218, 400,
	0, 0, 480, 199, 442, 417, 327, 289, 290, 198,
	0, 381, 242, 264, 232, 347, 439, 440, 230, 481,
	208, 461, 201, 0, 460, 340, 435, 443, 328, 318,
	200, 441, 326, 317, 295, 253, 275, 375, 311, 376,
	276, 336, 335, 337, 194, 453, 0, 195, 0, 414,
	454, 482, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 304, 351, 374, 372, 378, 0, 430,
	447, 457, 464, 470, 471, 473, 474, 475, 476, 477,
	339, 278, 410, 294, 309, 0, 0, 357, 390, 219,
	451, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	501, 319, 402, 448, 296, 297, 298, 0, 187, 202,
	305, 0, 379, 261, 479, 459, 455, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 315, 321, 322,
	323, 324, 341, 342, 343, 346, 349, 350, 353, 355,
	356, 359, 366, 367, 368, 369, 371, 373, 380, 384,
	392, 393, 394, 395, 396, 398, 399, 404, 405, 406,
	407, 415, 419, 437, 438, 450, 463, 468, 270, 445,
	469, 0, 314, 0, 0, 316, 254, 273, 284, 0,
	458, 416, 207, 386, 262, 196, 225, 210, 233, 248,
	251, 288, 325, 332, 361, 365, 267, 245, 223, 383,
	220, 401, 422, 423, 424, 426, 329, 240, 364, 0,
	427, 312, 428, 429, 280, 1694, 0, 0, 0, 0,
	0, 0, 348, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 303, 241, 0, 0,
	362, 0, 193, 0, 403, 228, 313, 310, 434, 255,
	247, 243, 227, 281, 320, 360, 421, 354, 0, 307,
	0, 0, 412, 333, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 345, 413, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 299, 301, 300, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 431, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	334, 231, 0, 0, 0, 0, 465, 0, 0, 0,
	0, 0, 0, 0, 302, 0, 293, 188, 205, 0,
	0, 344, 385, 391, 0, 0, 0, 229, 0, 389,
	358, 449, 213, 257, 382, 363, 387, 370, 260, 0,
	0, 388, 308, 436, 377, 446, 466, 467, 237, 338,
	456, 425, 462, 478, 206, 234, 352, 418, 452, 409,
	331, 432, 433, 292, 408, 266, 191, 306, 472, 204,
	397, 221, 211, 197, 420, 444, 218, 400, 0, 0,
	480, 199, 442, 417, 327, 289, 290, 198, 0, 381,
	242, 264, 232, 347, 439, 440, 230, 481, 208, 461,
	201, 0, 460, 340, 435, 443, 328, 318, 200, 441,
	326, 317, 295, 253, 275, 375, 311, 376, 276, 336,
	335, 337, 194, 453, 0, 195, 0, 414, 454, 482,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 304, 351, 374, 372, 378, 0, 430, 447, 457,
	464, 470, 471, 473, 474, 475, 476, 477, 339, 278,
	410, 294, 309, 0, 0, 357, 390, 219, 451, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 501, 319,
	402, 448, 296, 297, 298, 0, 187, 202, 305, 0,
	379, 261, 479, 459, 455, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 315, 321, 322, 323, 324,
	341, 342, 343, 346, 349, 350, 353, 355, 356, 359,
	366, 367, 368, 369, 371, 373, 380, 384, 392, 393,
	394, 395, 396, 398, 399, 404, 405, 406, 407, 415,
	419, 437, 438, 450, 463, 468, 270, 445, 469, 0,
	314, 0, 0, 316, 254, 273, 284, 0, 458, 416,
	207, 386, 262, 196, 225, 210, 233, 248, 251, 288,
	325, 332, 361, 365, 267, 245, 223, 383, 220, 401,
	422, 423, 424, 426, 329, 240, 364, 427, 0, 312,
	428, 429, 280, 0, 0, 0, 0, 0, 0, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 303, 241, 0, 0, 362, 0, 193,
	0, 403, 228, 313, 310, 434, 255, 247, 243, 227,
	281, 320, 360, 421, 354, 0, 307, 0, 0, 412,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 345,
	413, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	1251, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 299, 301, 300, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 431, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 334, 231, 0,
	0, 0, 0, 465, 0, 0, 0, 0, 0, 0,
	0, 302, 0, 293, 188, 205, 0, 0, 344, 385,
	391, 0, 0, 0, 229, 0, 389, 358, 449, 213,
	257, 382, 363, 387, 370, 260, 0, 0, 388, 308,
	436, 377, 446, 466, 467, 237, 338, 456, 425, 462,
	478, 206, 234, 352, 418, 452, 409, 331, 432, 433,
	292, 408, 266, 191, 306, 472, 204, 397, 221, 211,
	197, 420, 444, 218, 400, 0, 0, 480, 199, 442,
	417, 327, 289, 290, 198, 0, 381, 242, 264, 232,
	347, 439, 440, 230, 481, 208, 461, 201, 0, 460,
	340, 435, 443, 328, 318, 200, 441, 326, 317, 295,
	253, 275, 375, 311, 376, 276, 336, 335, 337, 194,
	453, 0, 195, 0, 414, 454, 482, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 304, 351,
	374, 372, 378, 0, 430, 447, 457, 464, 470, 471,
	473, 474, 475, 476, 477, 339, 278, 410, 294, 309,
	0, 0, 357, 390, 219, 451, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 501, 319, 402, 448, 296,
	297, 298, 0, 187, 202, 305, 0, 379, 261, 479,
	459, 455, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 315, 321, 322, 323, 324, 341, 342, 343,
	346, 349, 350, 353, 355, 356, 359, 366, 367, 368,
	369, 371, 373, 380, 384, 392, 393, 394, 395, 396,
	398, 399, 404, 405, 406, 407, 415, 419, 437, 438,
	450, 463, 468, 270, 445, 469, 0, 314, 0, 0,
	316, 254, 273, 284, 0, 458, 416, 207, 386, 262,
	196, 225, 210, 233, 248, 251, 288, 325, 332, 361,
	365, 267, 245, 223, 383, 220, 401, 422, 423, 424,
	426, 329, 240, 364, 427, 0, 312, 428, 429, 280,
	0, 0, 0, 0, 0, 0, 348, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	303, 241, 0, 0, 362, 0, 193, 0, 403, 228,
	313, 310, 434, 255, 247, 243, 227, 281, 320, 360,
	421, 354, 0, 307, 0, 0, 412, 333, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 345, 413, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 299,
	301, 300, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 431, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1136,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 334, 231, 0, 0, 0, 0,
	465, 0, 0, 0, 0, 0, 0, 0, 302, 0,
	293, 188, 205, 0, 0, 344, 385, 391, 0, 0,
	0, 229, 0, 389, 358, 449, 213, 257, 382, 363,
	387, 370, 260, 0, 0, 388, 308, 436, 377, 446,
	466, 467, 237, 338, 456, 425, 462, 478, 206, 234,
	352, 418, 452, 409, 331, 432, 433, 292, 408, 266,
	191, 306, 472, 204, 397, 221, 211, 197, 420, 444,
	218, 400, 0, 0, 480, 199, 442, 417, 327, 289,
	290, 198, 0, 381, 242, 264, 232, 347, 439, 440,
	230, 481, 208, 461, 201, 0, 460, 340, 435, 443,
	328, 318, 200, 441, 326, 317, 295, 253, 275, 375,
	311, 376, 276, 336, 335, 337, 194, 453, 0, 195,
	0, 414, 454, 482, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 304, 351, 374, 372, 378,
	0, 430, 447, 457, 464, 470, 471, 473, 474, 475,
	476, 477, 339, 278, 410, 294, 309, 0, 0, 357,
	390, 219, 451, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 501, 319, 402, 448, 296, 297, 298, 0,
	187, 202, 305, 0, 379, 261, 479, 459, 455, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 315,
	321, 322, 323, 324, 341, 342, 343, 346, 349, 350,
	353, 355, 356, 359, 366, 367, 368, 369, 371, 373,
	380, 384, 392, 393, 394, 395, 396, 398, 399, 404,
	405, 406, 407, 415, 419, 437, 438, 450, 463, 468,
	270, 445, 469, 0, 314, 0, 0, 316, 254, 273,
	284, 0, 458, 416, 207, 386, 262, 196, 225, 210,
	233, 248, 251, 288, 325, 332, 361, 365, 267, 245,
	223, 383, 220, 401, 422, 423, 424, 426, 329, 240,
	364, 427, 0, 312, 428, 429, 280, 0, 0, 0,
	0, 0, 0, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 303, 241, 0,
	0, 362, 0, 193, 0, 403, 228, 313, 310, 434,
	255, 247, 243, 227, 281, 320, 360, 421, 354, 0,
	307, 0, 0, 412, 333, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 345, 413, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 299, 301, 300, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 431, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 334, 231, 0, 0, 0, 0, 465, 0, 0,
	0, 0, 0, 0, 0, 302, 0, 293, 188, 205,
	0, 0, 344, 385, 391, 0, 0, 0, 229, 0,
	389, 358, 449, 213, 257, 382, 363, 387, 370, 260,
	0, 0, 388, 308, 436, 377, 446, 466, 467, 237,
	338, 456, 425, 462, 478, 206, 234, 352, 418, 452,
	409, 331, 432, 433, 292, 408, 266, 191, 306, 472,
	204, 397, 221, 211, 197, 420, 444, 218, 400, 0,
	0, 480, 199, 442, 417, 327, 289, 290, 198, 0,
	381, 242, 264, 232, 347, 439, 440, 230, 481, 208,
	461, 201, 0, 460, 340, 435, 443, 328, 318, 200,
	441, 326, 317, 295, 253, 275, 375, 311, 376, 276,
	336, 335, 337, 194, 453, 0, 195, 0, 414, 454,
	482, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 304, 351, 374, 372, 378, 0, 430, 447,
	457, 464, 470, 471, 473, 474, 475, 476, 477, 339,
	278, 410, 294, 309, 0, 0, 357, 390, 219, 451,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 501,
	319, 402, 448, 296, 297, 298, 0, 187, 202, 305,
	1513, 379, 261, 479, 459, 455, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 315, 321, 322, 323,
	324, 341, 342, 343, 346, 349, 350, 353, 355, 356,
	359, 366, 367, 368, 369, 371, 373, 380, 384, 392,
	393, 394, 395, 396, 398, 399, 404, 405, 406, 407,
	415, 419, 437, 438, 450, 463, 468, 270, 445, 469,
	0, 314, 0, 0, 316, 254, 273, 284, 0, 458,
	416, 207, 386, 262, 196, 225, 210, 233, 248, 251,
	288, 325, 332, 361, 365, 267, 245, 223, 383, 220,
	401, 422, 423, 424, 426, 329, 240, 364, 427, 0,
	312, 428, 429, 280, 0, 0, 0, 0, 0, 0,
	348, 0, 1393, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 303, 241, 0, 0, 362, 0,
	193, 0, 403, 228, 313, 310, 434, 255, 247, 243,
	227, 281, 320, 360, 421, 354, 0, 307, 0, 0,
	412, 333, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	345, 413, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 299, 301, 300, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 431, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 334, 231,
	0, 0, 0, 0, 465, 0, 0, 0, 0, 0,
	0, 0, 302, 0, 293, 188, 205, 0, 0, 344,
	385, 391, 0, 0, 0, 229, 0, 389, 358, 449,
	213, 257, 382, 363, 387, 370, 260, 0, 0, 388,
	308, 436, 377, 446, 466, 467, 237, 338, 456, 425,
	462, 478, 206, 234, 352, 418, 452, 409, 331, 432,
	433, 292, 408, 266, 191, 306, 472, 204, 397, 221,
	211, 197, 420, 444, 218, 400, 0, 0, 480, 199,
	442, 417, 327, 289, 290, 198, 0, 381, 242, 264,
	232, 347, 439, 440, 230, 481, 208, 461, 201, 0,
	460, 340, 435, 443, 328, 318, 200, 441, 326, 317,
	295, 253, 275, 375, 311, 376, 276, 336, 335, 337,
	194, 453, 0, 195, 0, 414, 454, 482, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 304,
	351, 374, 372, 378, 0, 430, 447, 457, 464, 470,
	471, 473, 474, 475, 476, 477, 339, 278, 410, 294,
	309, 0, 0, 357, 390, 219, 451, 411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 501, 319, 402, 448,
	296, 297, 298, 0, 187, 202, 305, 0, 379, 261,
	479, 459, 455, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 315, 321, 322, 323, 324, 341, 342,
	343, 346, 349, 350, 353, 355, 356, 359, 366, 367,
	368, 369, 371, 373, 380, 384, 392, 393, 394, 395,
	396, 398, 399, 404, 405, 406, 407, 415, 419, 437,
	438, 450, 463, 468, 270, 445, 469, 0, 314, 0,
	0, 316, 254, 273, 284, 0, 458, 416, 207, 386,
	262, 196, 225, 210, 233, 248, 251, 288, 325, 332,
	361, 365, 267, 245, 223, 383, 220, 401, 422, 423,
	424, 426, 329, 240, 364, 427, 0, 312, 428, 429,
	280, 0, 0, 0, 0, 0, 0, 348, 0, 1391,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 303, 241, 0, 0, 362, 0, 193, 0, 403,
	228, 313, 310, 434, 255, 247, 243, 227, 281, 320,
	360, 421, 354, 0, 307, 0, 0, 412, 333, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 345, 413, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	299, 301, 300, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 431, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 334, 231, 0, 0, 0,
	0, 465, 0, 0, 0, 0, 0, 0, 0, 302,
	0, 293, 188, 205, 0, 0, 344, 385, 391, 0,
	0, 0, 229, 0, 389, 358, 449, 213, 257, 382,
	363, 387, 370, 260, 0, 0, 388, 308, 436, 377,
	446, 466, 467, 237, 338, 456, 425, 462, 478, 206,
	234, 352, 418, 452, 409, 331, 432, 433, 292, 408,
	266, 191, 306, 472, 204, 397, 221, 211, 197, 420,
	444, 218, 400, 0, 0, 480, 199, 442, 417, 327,
	289, 290, 198, 0, 381, 242, 264, 232, 347, 439,
	440, 230, 481, 208, 461, 201, 0, 460, 340, 435,
	443, 328, 318, 200, 441, 326, 317, 295, 253, 275,
	375, 311, 376, 276, 336, 335, 337, 194, 453, 0,
	195, 0, 414, 454, 482, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 304, 351, 374, 372,
	378, 0, 430, 447, 457, 464, 470, 471, 473, 474,
	475, 476, 477, 339, 278, 410, 294, 309, 0, 0,
	357, 390, 219, 451, 411, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 501, 319, 402, 448, 296, 297, 298,
	0, 187, 202, 305, 0, 379, 261, 479, 459, 455,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	315, 321, 322, 323, 324, 341, 342, 343, 346, 349,
	350, 353, 355, 356, 359, 366, 367, 368, 369, 371,
	373, 380, 384, 392, 393, 394, 395, 396, 398, 399,
	404, 405, 406, 407, 415, 419, 437, 438, 450, 463,
	468, 270, 445, 469, 0, 314, 0, 0, 316, 254,
	273, 284, 0, 458, 416, 207, 386, 262, 196, 225,
	210, 233, 248, 251, 288, 325, 332, 361, 365, 267,
	245, 223, 383, 220, 401, 422, 423, 424, 426, 329,
	240, 364, 427, 0, 312, 428, 429, 280, 0, 0,
	0, 0, 0, 0, 348, 0, 1389, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 303, 241,
	0, 0, 362, 0, 193, 0, 403, 228, 313, 310,
	434, 255, 247, 243, 227, 281, 320, 360, 421, 354,
	0, 307, 0, 0, 412, 333, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 345, 413, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 299, 301, 300,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 431,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 334, 231, 0, 0, 0, 0, 465, 0,
	0, 0, 0, 0, 0, 0, 302, 0, 293, 188,
	205, 0, 0, 344, 385, 391, 0, 0, 0, 229,
	0, 389, 358, 449, 213, 257, 382, 363, 387, 370,
	260, 0, 0, 388, 308, 436, 377, 446, 466, 467,
	237, 338, 456, 425, 462, 478, 206, 234, 352, 418,
	452, 409, 331, 432, 433, 292, 408, 266, 191, 306,
	472, 204, 397, 221, 211, 197, 420, 444, 218, 400,
	0, 0, 480, 199, 442, 417, 327, 289, 290, 198,
	0, 381, 242, 264, 232, 347, 439, 440, 230, 481,
	208, 461, 201, 0, 460, 340, 435, 443, 328, 318,
	200, 441, 326, 317, 295, 253, 275, 375, 311, 376,
	276, 336, 335, 337, 194, 453, 0, 195, 0, 414,
	454, 482, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 304, 351, 374, 372, 378, 0, 430,
	447, 457, 464, 470, 471, 473, 474, 475, 476, 477,
	339, 278, 410, 294, 309, 0, 0, 357, 390, 219,
	451, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	501, 319, 402, 448, 296, 297, 298, 0, 187, 202,
	305, 0, 379, 261, 479, 459, 455, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 315, 321, 322,
	323, 324, 341, 342, 343, 346, 349, 350, 353, 355,
	356, 359, 366, 367, 368, 369, 371, 373, 380, 384,
	392, 393, 394, 395, 396, 398, 399, 404, 405, 406,
	407, 415, 419, 437, 438, 450, 463, 468, 270, 445,
	469, 0, 314, 0, 0, 316, 254, 273, 284, 0,
	458, 416, 207, 386, 262, 196, 225, 210, 233, 248,
	251, 288, 325, 332, 361, 365, 267, 245, 223, 383,
	220, 401, 422, 423, 424, 426, 329, 240, 364, 427,
	0, 312, 428, 429, 280, 0, 0, 0, 0, 0,
	0, 348, 0, 1387, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 303, 241, 0, 0, 362,
	0, 193, 0, 403, 228, 313, 310, 434, 255, 247,
	243, 227, 281, 320, 360, 421, 354, 0, 307, 0,
	0, 412, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 345, 413, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 299, 301, 300, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 431, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 334,
	231, 0, 0, 0, 0, 465, 0, 0, 0, 0,
	0, 0, 0, 302, 0, 293, 188, 205, 0, 0,
	344, 385, 391, 0, 0, 0, 229, 0, 389, 358,
	449, 213, 257, 382, 363, 387, 370, 260, 0, 0,
	388, 308, 436, 377, 446, 466, 467, 237, 338, 456,
	425, 462, 478, 206, 234, 352, 418, 452, 409, 331,
	432, 433, 292, 408, 266, 191, 306, 472, 204, 397,
	221, 211, 197, 420, 444, 218, 400, 0, 0, 480,
	199, 442, 417, 327, 289, 290, 198, 0, 381, 242,
	264, 232, 347, 439, 440, 230, 481, 208, 461, 201,
	0, 460, 340, 435, 443, 328, 318, 200, 441, 326,
	317, 295, 253, 275, 375, 311, 376, 276, 336, 335,
	337, 194, 453, 0, 195, 0, 414, 454, 482, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	304, 351, 374, 372, 378, 0, 430, 447, 457, 464,
	470, 471, 473, 474, 475, 476, 477, 339, 278, 410,
	294, 309, 0, 0, 357, 390, 219, 451, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 501, 319, 402,
	448, 296, 297, 298, 0, 187, 202, 305, 0, 379,
	261, 479, 459, 455, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 315, 321, 322, 323, 324, 341,
	342, 343, 346, 349, 350, 353, 355, 356, 359, 366,
	367, 368, 369, 371, 373, 380, 384, 392, 393, 394,
	395, 396, 398, 399, 404, 405, 406, 407, 415, 419,
	437, 438, 450, 463, 468, 270, 445, 469, 0, 314,
	0, 0, 316, 254, 273, 284, 0, 458, 416, 207,
	386, 262, 196, 225, 210, 233, 248, 251, 288, 325,
	332, 361, 365, 267, 245, 223, 383, 220, 401, 422,
	423, 424, 426, 329, 240, 364, 427, 0, 312, 428,
	429, 280, 0, 0, 0, 0, 0, 0, 348, 0,
	1385, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 303, 241, 0, 0, 362, 0, 193, 0,
	403, 228, 313, 310, 434, 255, 247, 243, 227, 281,
	320, 360, 421, 354, 0, 307, 0, 0, 412, 333,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 345, 413,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 299, 301, 300, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 431, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 334, 231, 0, 0,
	0, 0, 465, 0, 0, 0, 0, 0, 0, 0,
	302, 0, 293, 188, 205, 0, 0, 344, 385, 391,
	0, 0, 0, 229, 0, 389, 358, 449, 213, 257,
	382, 363, 387, 370, 260, 0, 0, 388, 308, 436,
	377, 446, 466, 467, 237, 338, 456, 425, 462, 478,
	206, 234, 352, 418, 452, 409, 331, 432, 433, 292,
	408, 266, 191, 306, 472, 204, 397, 221, 211, 197,
	420, 444, 218, 400, 0, 0, 480, 199, 442, 417,
	327, 289, 290, 198, 0, 381, 242, 264, 232, 347,
	439, 440, 230, 481, 208, 461, 201, 0, 460, 340,
	435, 443, 328, 318, 200, 441, 326, 317, 295, 253,
	275, 375, 311, 376, 276, 336, 335, 337, 194, 453,
	0, 195, 0, 414, 454, 482, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 304, 351, 374,
	372, 378, 0, 430, 447, 457, 464, 470, 471, 473,
	474, 475, 476, 477, 339, 278, 410, 294, 309, 0,
	0, 357, 390, 219, 451, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 501, 319, 402, 448, 296, 297,
	298, 0, 187, 202, 305, 0, 379, 261, 479, 459,
	455, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 315, 321, 322, 323, 324, 341, 342, 343, 346,
	349, 350, 353, 355, 356, 359, 366, 367, 368, 369,
	371, 373, 380, 384, 392, 393, 394, 395, 396, 398,
	399, 404, 405, 406, 407, 415, 419, 437, 438, 450,
	463, 468, 270, 445, 469, 0, 314, 0, 0, 316,
	254, 273, 284, 0, 458, 416, 207, 386, 262, 196,
	225, 210, 233, 248, 251, 288, 325, 332, 361, 365,
	267, 245, 223, 383, 220, 401, 422, 423, 424, 426,
	329, 240, 364, 427, 0, 312, 428, 429, 280, 0,
	0, 0, 0, 0, 0, 348, 0, 1381, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 303,
	241, 0, 0, 362, 0, 193, 0, 403, 228, 313,
	310, 434, 255, 247, 243, 227, 281, 320, 360, 421,
	354, 0, 307, 0, 0, 412, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 345, 413, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 299, 301,
	300, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	431, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 334, 231, 0, 0, 0, 0, 465,
	0, 0, 0, 0, 0, 0, 0, 302, 0, 293,
	188, 205, 0, 0, 344, 385, 391, 0, 0, 0,
	229, 0, 389, 358, 449, 213, 257, 382, 363, 387,
	370, 260, 0, 0, 388, 308, 436, 377, 446, 466,
	467, 237, 338, 456, 425, 462, 478, 206, 234, 352,
	418, 452, 409, 331, 432, 433, 292, 408, 266, 191,
	306, 472, 204, 397, 221, 211, 197, 420, 444, 218,
	400, 0, 0, 480, 199, 442, 417, 327, 289, 290,
	198, 0, 381, 242, 264, 232, 347, 439, 440, 230,
	481, 208, 461, 201, 0, 460, 340, 435, 443, 328,
	318, 200, 441, 326, 317, 295, 253, 275, 375, 311,
	376, 276, 336, 335, 337, 194, 453, 0, 195, 0,
	414, 454, 482, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 304, 351, 374, 372, 378, 0,
	430, 447, 457, 464, 470, 471, 473, 474, 475, 476,
	477, 339, 278, 410, 294, 309, 0, 0, 357, 390,
	219, 451, 411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 501, 319, 402, 448, 296, 297, 298, 0, 187,
	202, 305, 0, 379, 261, 479, 459, 455, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 315, 321,
	322, 323, 324, 341, 342, 343, 346, 349, 350, 353,
	355, 356, 359, 366, 367, 368, 369, 371, 373, 380,
	384, 392, 393, 394, 395, 396, 398, 399, 404, 405,
	406, 407, 415, 419, 437, 438, 450, 463, 468, 270,
	445, 469, 0, 314, 0, 0, 316, 254, 273, 284,
	0, 458, 416, 207, 386, 262, 196, 225, 210, 233,
	248, 251, 288, 325, 332, 361, 365, 267, 245, 223,
	383, 220, 401, 422, 423, 424, 426, 329, 240, 364,
	427, 0, 312, 428, 429, 280, 0, 0, 0, 0,
	0, 0, 348, 0, 1379, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 303, 241, 0, 0,
	362, 0, 193, 0, 403, 228, 313, 310, 434, 255,
	247, 243, 227, 281, 320, 360, 421, 354, 0, 307,
	0, 0, 412, 333, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 345, 413, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 299, 301, 300, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 431, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	334, 231, 0, 0, 0, 0, 465, 0, 0, 0,
	0, 0, 0, 0, 302, 0, 293, 188, 205, 0,
	0, 344, 385, 391, 0, 0, 0, 229, 0, 389,
	358, 449, 213, 257, 382, 363, 387, 370, 260, 0,
	0, 388, 308, 436, 377, 446, 466, 467, 237, 338,
	456, 425, 462, 478, 206, 234, 352, 418, 452, 409,
	331, 432, 433, 292, 408, 266, 191, 306, 472, 204,
	397, 221, 211, 197, 420, 444, 218, 400, 0, 0,
	480, 199, 442, 417, 327, 289, 290, 198, 0, 381,
	242, 264, 232, 347, 439, 440, 230, 481, 208, 461,
	201, 0, 460, 340, 435, 443, 328, 318, 200, 441,
	326, 317, 295, 253, 275, 375, 311, 376, 276, 336,
	335, 337, 194, 453, 0, 195, 0, 414, 454, 482,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 304, 351, 374, 372, 378, 0, 430, 447, 457,
	464, 470, 471, 473, 474, 475, 476, 477, 339, 278,
	410, 294, 309, 0, 0, 357, 390, 219, 451, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 501, 319,
	402, 448, 296, 297, 298, 0, 187, 202, 305, 0,
	379, 261, 479, 459, 455, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 315, 321, 322, 323, 324,
	341, 342, 343, 346, 349, 350, 353, 355, 356, 359,
	366, 367, 368, 369, 371, 373, 380, 384, 392, 393,
	394, 395, 396, 398, 399, 404, 405, 406, 407, 415,
	419, 437, 438, 450, 463, 468, 270, 445, 469, 0,
	314, 0, 0, 316, 254, 273, 284, 0, 458, 416,
	207, 386, 262, 196, 225, 210, 233, 248, 251, 288,
	325, 332, 361, 365, 267, 245, 223, 383, 220, 401,
	422, 423, 424, 426, 329, 240, 364, 427, 0, 312,
	428, 429, 280, 0, 0, 0, 0, 0, 0, 348,
	0, 1377, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 303, 241, 0, 0, 362, 0, 193,
	0, 403, 228, 313, 310, 434, 255, 247, 243, 227,
	281, 320, 360, 421, 354, 0, 307, 0, 0, 412,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 345,
	413, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 299, 301, 300, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 431, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 334, 231, 0,
	0, 0, 0, 465, 0, 0, 0, 0, 0, 0,
	0, 302, 0, 293, 188, 205, 0, 0, 344, 385,
	391, 0, 0, 0, 229, 0, 389, 358, 449, 213,
	257, 382, 363, 387, 370, 260, 0, 0, 388, 308,
	436, 377, 446, 466, 467, 237, 338, 456, 425, 462,
	478, 206, 234, 352, 418, 452, 409, 331, 432, 433,
	292, 408, 266, 191, 306, 472, 204, 397, 221, 211,
	197, 420, 444, 218, 400, 0, 0, 480, 199, 442,
	417, 327, 289, 290, 198, 0, 381, 242, 264, 232,
	347, 439, 440, 230, 481, 208, 461, 201, 0, 460,
	340, 435, 443, 328, 318, 200, 441, 326, 317, 295,
	253, 275, 375, 311, 376, 276, 336, 335, 337, 194,
	453, 0, 195, 0, 414, 454, 482, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 304, 351,
	374, 372, 378, 0, 430, 447, 457, 464, 470, 471,
	473, 474, 475, 476, 477, 339, 278, 410, 294, 309,
	0, 0, 357, 390, 219, 451, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 501, 319, 402, 448, 296,
	297, 298, 0, 187, 202, 305, 0, 379, 261, 479,
	459, 455, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 315, 321, 322, 323, 324, 341, 342, 343,
	346, 349, 350, 353, 355, 356, 359, 366, 367, 368,
	369, 371, 373, 380, 384, 392, 393, 394, 395, 396,
	398, 399, 404, 405, 406, 407, 415, 419, 437, 438,
	450, 463, 468, 270, 445, 469, 0, 314, 0, 0,
	316, 254, 273, 284, 0, 458, 416, 207, 386, 262,
	196, 225, 210, 233, 248, 251, 288, 325, 332, 361,
	365, 267, 245, 223, 383, 220, 401, 422, 423, 424,
	426, 329, 240, 364, 427, 0, 312, 428, 429, 280,
	0, 0, 0, 0, 0, 0, 348, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	303, 241, 0, 0, 362, 0, 193, 0, 403, 228,
	313, 310, 434, 255, 247, 243, 227, 281, 320, 360,
	421, 354, 0, 307, 0, 0, 412, 333, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 345, 413, 259, 0,
	1354, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 299,
	301, 300, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 431, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 334, 231, 0, 0, 0, 0,
	465, 0, 0, 0, 0, 0, 0, 0, 302, 0,
	293, 188, 205, 0, 0, 344, 385, 391, 0, 0,
	0, 229, 0, 389, 358, 449, 213, 257, 382, 363,
	387, 370, 260, 0, 0, 388, 308, 436, 377, 446,
	466, 467, 237, 338, 456, 425, 462, 478, 206, 234,
	352, 418, 452, 409, 331, 432, 433, 292, 408, 266,
	191, 306, 472, 204, 397, 221, 211, 197, 420, 444,
	218, 400, 0, 0, 480, 199, 442, 417, 327, 289,
	290, 198, 0, 381, 242, 264, 232, 347, 439, 440,
	230, 481, 208, 461, 201, 0, 460, 340, 435, 443,
	328, 318, 200, 441, 326, 317, 295, 253, 275, 375,
	311, 376, 276, 336, 335, 337, 194, 453, 0, 195,
	0, 414, 454, 482, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 304, 351, 374, 372, 378,
	0, 430, 447, 457, 464, 470, 471, 473, 474, 475,
	476, 477, 339, 278, 410, 294, 309, 0, 0, 357,
	390, 219, 451, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 501, 319, 402, 448, 296, 297, 298, 0,
	187, 202, 305, 0, 379, 261, 479, 459, 455, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 315,
	321, 322, 323, 324, 341, 342, 343, 346, 349, 350,
	353, 355, 356, 359, 366, 367, 368, 369, 371, 373,
	380, 384, 392, 393, 394, 395, 396, 398, 399, 404,
	405, 406, 407, 415, 419, 437, 438, 450, 463, 468,
	270, 445, 469, 0, 314, 0, 0, 316, 254, 273,
	284, 0, 458, 416, 207, 386, 262, 196, 225, 210,
	233, 248, 251, 288, 325, 332, 361, 365, 267, 245,
	223, 383, 220, 401, 422, 423, 424, 426, 329, 240,
	364, 427, 0, 312, 428, 429, 280, 0, 0, 0,
	0, 0, 0, 348, 0, 0, 0, 0, 0, 0,
	0, 1256, 244, 0, 0, 0, 0, 303, 241, 0,
	0, 362, 0, 193, 0, 403, 228, 313, 310, 434,
	255, 247, 243, 227, 281, 320, 360, 421, 354, 0,
	307, 0, 0, 412, 333, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 345, 413, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 299, 301, 300, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 431, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 334, 231, 0, 0, 0, 0, 465, 0, 0,
	0, 0, 0, 0, 0, 302, 0, 293, 188, 205,
	0, 0, 344, 385, 391, 0, 0, 0, 229, 0,
	389, 358, 449, 213, 257, 382, 363, 387, 370, 260,
	0, 0, 388, 308, 436, 377, 446, 466, 467, 237,
	338, 456, 425, 462, 478, 206, 234, 352, 418, 452,
	409, 331, 432, 433, 292, 408, 266, 191, 306, 472,
	204, 397, 221, 211, 197, 420, 444, 218, 400, 0,
	0, 480, 199, 442, 417, 327, 289, 290, 198, 0,
	381, 242, 264, 232, 347, 439, 440, 230, 481, 208,
	461, 201, 0, 460, 340, 435, 443, 328, 318, 200,
	441, 326, 317, 295, 253, 275, 375, 311, 376, 276,
	336, 335, 337, 194, 453, 0, 195, 0, 414, 454,
	482, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 304, 351, 374, 372, 378, 0, 430, 447,
	457, 464, 470, 471, 473, 474, 475, 476, 477, 339,
	278, 410, 294, 309, 0, 0, 357, 390, 219, 451,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 501,
	319, 402, 448, 296, 297, 298, 0, 187, 202, 305,
	0, 379, 261, 479, 459, 455, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 315, 321, 322, 323,
	324, 341, 342, 343, 346, 349, 350, 353, 355, 356,
	359, 366, 367, 368, 369, 371, 373, 380, 384, 392,
	393, 394, 395, 396, 398, 399, 404, 405, 406, 407,
	415, 419, 437, 438, 450, 463, 468, 270, 445, 469,
	0, 314, 0, 0, 316, 254, 273, 284, 0, 458,
	416, 207, 386, 262, 196, 225, 210, 233, 248, 251,
	288, 325, 332, 361, 365, 267, 245, 223, 383, 220,
	401, 422, 423, 424, 426, 329, 240, 364, 427, 0,
	312, 428, 429, 280, 0, 0, 0, 0, 0, 0,
	348, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 303, 241, 0, 0, 362, 0,
	193, 0, 403, 228, 313, 310, 434, 255, 247, 243,
	227, 281, 320, 360, 421, 354, 0, 307, 0, 0,
	412, 333, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	345, 413, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 1083, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 299, 301, 300, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 431, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 334, 231,
	0, 0, 0, 0, 465, 0, 0, 0, 0, 0,
	0, 0, 302, 0, 293, 188, 205, 0, 0, 344,
	385, 391, 0, 0, 0, 229, 0, 389, 358, 449,
	213, 257, 382, 363, 387, 370, 260, 0, 0, 388,
	308, 436, 377, 446, 466, 467, 237, 338, 456, 425,
	462, 478, 206, 234, 352, 418, 452, 409, 331, 432,
	433, 292, 408, 266, 191, 306, 472, 204, 397, 221,
	211, 197, 420, 444, 218, 400, 0, 0, 480, 199,
	442, 417, 327, 289, 290, 198, 0, 381, 242, 264,
	232, 347, 439, 440, 230, 481, 208, 461, 201, 0,
	460, 340, 435, 443, 328, 318, 200, 441, 326, 317,
	295, 253, 275, 375, 311, 376, 276, 336, 335, 337,
	194, 453, 0, 195, 0, 414, 454, 482, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 304,
	351, 374, 372, 378, 0, 430, 447, 457, 464, 470,
	471, 473, 474, 475, 476, 477, 339, 278, 410, 294,
	309, 0, 0, 357, 390, 219, 451, 411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 501, 319, 402, 448,
	296, 297, 298, 0, 187, 202, 305, 0, 379, 261,
	479, 459, 455, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 315, 321, 322, 323, 324, 341, 342,
	343, 346, 349, 350, 353, 355, 356, 359, 366, 367,
	368, 369, 371, 373, 380, 384, 392, 393, 394, 395,
	396, 398, 399, 404, 405, 406, 407, 415, 419, 437,
	438, 450, 463, 468, 270, 445, 469, 0, 314, 0,
	0, 316, 254, 273, 284, 0, 458, 416, 207, 386,
	262, 196, 225, 210, 233, 248, 251, 288, 325, 332,
	361, 365, 267, 245, 223, 383, 220, 401, 422, 423,
	424, 426, 329, 240, 364, 427, 0, 312, 428, 429,
	280, 0, 0, 0, 0, 0, 0, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 303, 241, 0, 0, 362, 0, 193, 0, 403,
	228, 313, 310, 434, 255, 247, 243, 227, 281, 320,
	360, 421, 354, 0, 307, 0, 0, 412, 333, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 345, 413, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	299, 301, 300, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 431, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 334, 231, 0, 0, 0,
	0, 465, 0, 0, 0, 0, 0, 0, 0, 302,
	0, 293, 188, 205, 0, 0, 344, 385, 391, 0,
	0, 0, 229, 0, 389, 358, 449, 213, 257, 382,
	363, 387, 370, 260, 0, 0, 388, 308, 436, 377,
	446, 466, 467, 237, 338, 456, 425, 462, 478, 206,
	234, 352, 418, 452, 409, 331, 432, 433, 292, 408,
	266, 191, 306, 472, 204, 397, 221, 211, 197, 420,
	444, 218, 400, 0, 0, 480, 199, 442, 417, 327,
	289, 290, 198, 0, 381, 242, 264, 232, 347, 439,
	440, 230, 481, 208, 461, 201, 0, 460, 340, 435,
	443, 328, 318, 200, 441, 326, 317, 295, 253, 275,
	375, 311, 376, 276, 336, 335, 337, 194, 453, 0,
	195, 0, 414, 454, 482, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 304, 351, 374, 372,
	378, 0, 430, 447, 457, 464, 470, 471, 473, 474,
	475, 476, 477, 339, 278, 410, 294, 309, 0, 0,
	357, 390, 219, 451, 411, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 501, 319, 402, 448, 296, 297, 298,
	0, 187, 202, 305, 0, 379, 261, 479, 459, 455,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 0, 0, 0, 0, 0,
	0, 710, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	315, 321, 322, 323, 324, 341, 342, 343, 346, 349,
	350, 353, 355, 356, 359, 366, 367, 368, 369, 371,
	373, 380, 384, 392, 393, 394, 395, 396, 398, 399,
	404, 405, 406, 407, 415, 419, 437, 438, 450, 463,
	468, 270, 445, 469, 0, 314, 0, 0, 316, 254,
	273, 284, 0, 458, 416, 207, 386, 262, 196, 225,
	210, 233, 248, 251, 288, 325, 332, 361, 365, 267,
	245, 223, 383, 220, 401, 422, 423, 424, 426, 329,
	240, 364, 427, 0, 312, 428, 429, 280, 0, 0,
	0, 0, 0, 0, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 303, 241,
	0, 0, 362, 0, 193, 0, 403, 228, 313, 310,
	434, 255, 247, 243, 227, 281, 320, 360, 421, 354,
	0, 307, 0, 0, 412, 333, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 345, 413, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 299, 301, 300,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 431,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 557, 0,
	268, 0, 334, 231, 0, 0, 0, 0, 465, 0,
	0, 0, 0, 0, 0, 0, 302, 0, 293, 188,
	205, 0, 0, 344, 385, 391, 0, 0, 0, 229,
	0, 389, 358, 449, 213, 257, 382, 363, 387, 370,
	260, 0, 0, 388, 308, 436, 377, 446, 466, 467,
	237, 338, 456, 425, 462, 478, 206, 234, 352, 418,
	452, 409, 331, 432, 433, 292, 408, 266, 191, 306,
	472, 204, 397, 221, 211, 197, 420, 444, 218, 400,
	0, 0, 480, 199, 442, 417, 327, 289, 290, 198,
	0, 381, 242, 264, 232, 347, 439, 440, 230, 481,
	208, 461, 201, 0, 460, 340, 435, 443, 328, 318,
	200, 441, 326, 317, 295, 253, 275, 375, 311, 376,
	276, 336, 335, 337, 194, 453, 0, 195, 0, 414,
	454, 482, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 304, 351, 374, 372, 378, 0, 430,
	447, 457, 464, 470, 471, 473, 474, 475, 476, 477,
	339, 278, 410, 294, 309, 0, 0, 357, 390, 219,
	451, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	501, 319, 402, 448, 296, 297, 298, 0, 187, 202,
	305, 0, 379, 261, 479, 459, 455, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 315, 321, 322,
	323, 324, 341, 342, 343, 346, 349, 350, 353, 355,
	356, 359, 366, 367, 368, 369, 371, 373, 380, 384,
	392, 393, 394, 395, 396, 398, 399, 404, 405, 406,
	407, 415, 419, 437, 438, 450, 463, 468, 556, 445,
	469, 0, 314, 0, 0, 316, 254, 273, 284, 0,
	458, 416, 207, 386, 262, 196, 225, 210, 233, 248,
	251, 288, 325, 332, 361, 365, 267, 245, 223, 383,
	220, 401, 422, 423, 424, 426, 329, 240, 364, 427,
	0, 312, 428, 429, 280, 0, 0, 0, 0, 0,
	0, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 303, 241, 0, 0, 362,
	0, 193, 0, 403, 228, 313, 310, 434, 255, 247,
	243, 227, 281, 320, 360, 421, 354, 0, 307, 0,
	0, 412, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 345, 413, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 299, 301, 300, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 431, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 334,
	231, 0, 0, 504, 0, 465, 0, 0, 0, 0,
	0, 0, 0, 302, 0, 293, 188, 205, 0, 0,
	344, 385, 391, 0, 0, 0, 229, 0, 389, 358,
	449, 213, 257, 382, 363, 387, 370, 260, 0, 0,
	388, 308, 436, 377, 446, 466, 467, 237, 338, 456,
	425, 462, 478, 206, 234, 352, 418, 452, 409, 331,
	432, 433, 292, 408, 266, 191, 306, 472, 204, 397,
	221, 211, 197, 420, 444, 218, 400, 0, 0, 480,
	199, 442, 417, 327, 289, 290, 198, 0, 381, 242,
	264, 232, 347, 439, 440, 230, 481, 208, 461, 201,
	0, 460, 340, 435, 443, 328, 318, 200, 441, 326,
	317, 295, 253, 275, 375, 311, 376, 276, 336, 335,
	337, 194, 453, 0, 195, 0, 414, 454, 482, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	304, 351, 374, 372, 378, 0, 430, 447, 457, 464,
	470, 471, 473, 474, 475, 476, 477, 339, 278, 410,
	294, 309, 0, 0, 357, 390, 219, 451, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 501, 319, 402,
	448, 296, 297, 298, 0, 187, 202, 305, 0, 379,
	261, 479, 459, 455, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 315, 321, 322, 323, 324, 341,
	342, 343, 346, 349, 350, 353, 355, 356, 359, 366,
	367, 368, 369, 371, 373, 380, 384, 392, 393, 394,
	395, 396, 398, 399, 404, 405, 406, 407, 415, 419,
	437, 438, 450, 463, 468, 270, 445, 469, 0, 314,
	0, 0, 316, 254, 273, 284, 0, 458, 416, 207,
	386, 262, 196, 225, 210, 233, 248, 251, 288, 325,
	332, 361, 365, 267, 245, 223, 383, 220, 401, 422,
	423, 424, 426, 329, 240, 364, 427, 0, 312, 428,
	429, 280, 0, 0, 0, 0, 0, 0, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 303, 241, 0, 0, 362, 0, 193, 0,
	403, 228, 313, 310, 434, 255, 247, 243, 227, 281,
	320, 360, 421, 354, 0, 307, 0, 0, 412, 333,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 345, 413,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 299, 301, 300, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 431, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 334, 231, 0, 0,
	0, 0, 465, 0, 0, 0, 0, 0, 0, 0,
	302, 0, 293, 188, 205, 0, 0, 344, 385, 391,
	0, 0, 0, 229, 0, 389, 358, 449, 213, 257,
	382, 363, 387, 370, 260, 0, 0, 388, 308, 436,
	377, 446, 466, 467, 237, 338, 456, 425, 462, 478,
	206, 234, 352, 418, 452, 409, 331, 432, 433, 292,
	408, 266, 191, 306, 472, 204, 397, 221, 211, 197,
	420, 444, 218, 400, 0, 0, 480, 199, 442, 417,
	327, 289, 290, 198, 0, 381, 242, 264, 232, 347,
	439, 440, 230, 481, 208, 461, 201, 0, 460, 340,
	435, 443, 328, 318, 200, 441, 326, 317, 295, 253,
	275, 375, 311, 376, 276, 336, 335, 337, 194, 453,
	0, 195, 0, 414, 454, 482, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 304, 351, 374,
	372, 378, 0, 430, 447, 457, 464, 470, 471, 473,
	474, 475, 476, 477, 339, 278, 410, 294, 309, 0,
	0, 357, 390, 219, 451, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 501, 319, 402, 448, 296, 297,
	298, 0, 187, 202, 305, 0, 379, 261, 479, 459,
	455, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 315, 321, 322, 323, 324, 2605, 342, 343, 346,
	349, 350, 353, 355, 356, 359, 366, 367, 368, 369,
	371, 373, 380, 384, 392, 393, 394, 395, 396, 398,
	399, 404, 405, 406, 407, 415, 419, 437, 438, 450,
	463, 468, 270, 445, 469, 0, 314, 0, 0, 316,
	254, 273, 284, 0, 458, 416, 207, 386, 262, 196,
	225, 210, 233, 248, 251, 288, 325, 332, 361, 365,
	267, 245, 223, 383, 220, 401, 422, 423, 424, 426,
	329, 240, 364, 427, 0, 312, 428, 429, 280, 0,
	0, 0, 0, 0, 0, 348, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 303,
	241, 0, 0, 362, 0, 193, 0, 403, 228, 313,
	310, 434, 255, 247, 243, 227, 281, 320, 360, 421,
	354, 0, 307, 0, 0, 412, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 345, 413, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 299, 301,
	300, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	431, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 334, 231, 0, 0, 0, 0, 465,
	0, 0, 0, 0, 0, 0, 0, 302, 0, 293,
	188, 205, 0, 0, 344, 385, 391, 0, 0, 0,
	229, 0, 389, 358, 449, 213, 257, 382, 363, 387,
	370, 260, 0, 0, 388, 308, 436, 377, 446, 466,
	467, 237, 338, 456, 425, 462, 478, 206, 234, 352,
	418, 452, 409, 331, 432, 433, 292, 408, 266, 191,
	306, 472, 204, 397, 221, 211, 197, 420, 444, 218,
	400, 0, 0, 480, 199, 442, 417, 327, 289, 290,
	198, 0, 381, 242, 264, 232, 347, 439, 440, 230,
	481, 208, 461, 201, 0, 460, 340, 435, 443, 328,
	318, 200, 441, 326, 317, 295, 253, 275, 375, 311,
	376, 276, 336, 335, 337, 194, 453, 0, 195, 0,
	414, 454, 482, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 304, 351, 374, 372, 378, 0,
	430, 447, 457, 464, 470, 471, 473, 474, 475, 476,
	477, 339, 278, 410, 294, 309, 0, 0, 357, 390,
	219, 451, 411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 501, 319, 402, 448, 296, 297, 298, 0, 187,
	202, 305, 0, 379, 261, 479, 459, 455, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 315, 321,
	322, 323, 324, 341, 342, 343, 346, 349, 350, 353,
	355, 356, 359, 366, 367, 368, 369, 371, 373, 380,
	384, 392, 393, 394, 395, 396, 398, 399, 404, 405,
	406, 407, 415, 419, 437, 438, 450, 463, 468, 270,
	445, 469, 0, 314, 0, 0, 316, 254, 273, 284,
	0, 458, 416, 207, 386, 262, 196, 225, 210, 233,
	248, 251, 288, 325, 332, 361, 365, 267, 245, 223,
	383, 220, 401, 422, 423, 424, 426, 329, 240, 364,
	427, 0, 312, 428, 429, 280, 0, 0, 0, 0,
	0, 0, 348, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 303, 241, 0, 0,
	362, 0, 193, 0, 403, 228, 313, 310, 434, 255,
	247, 243, 227, 281, 320, 360, 421, 354, 0, 307,
	0, 0, 412, 333, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 345, 413, 259, 0, 0, 0, 0, 184,
	2321, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 299, 301, 300, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 431, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	334, 231, 0, 0, 0, 0, 465, 0, 0, 0,
	0, 0, 0, 0, 302, 0, 293, 188, 205, 0,
	0, 344, 385, 391, 0, 0, 0, 229, 0, 389,
	358, 449, 213, 257, 382, 363, 387, 370, 260, 0,
	0, 388, 308, 436, 377, 446, 466, 467, 237, 338,
	456, 425, 462, 478, 206, 234, 352, 418, 452, 409,
	331, 432, 433, 292, 408, 266, 191, 306, 472, 204,
	397, 221, 211, 197, 420, 444, 218, 400, 0, 0,
	480, 199, 442, 417, 327, 289, 290, 198, 0, 381,
	242, 264, 232, 347, 439, 440, 230, 481, 208, 461,
	201, 0, 460, 340, 435, 443, 328, 318, 200, 441,
	326, 317, 295, 253, 275, 375, 311, 376, 276, 336,
	335, 337, 194, 453, 0, 195, 0, 414, 454, 482,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 304, 351, 374, 372, 378, 0, 430, 447, 457,
	464, 470, 471, 473, 474, 475, 476, 477, 339, 278,
	410, 294, 309, 0, 0, 357, 390, 219, 451, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 501, 319,
	402, 448, 296, 297, 298, 0, 187, 202, 305, 0,
	379, 261, 479, 459, 455, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 315, 321, 322, 323, 324,
	341, 342, 343, 346, 349, 350, 353, 355, 356, 359,
	366, 367, 368, 369, 371, 373, 380, 384, 392, 393,
	394, 395, 396, 398, 399, 404, 405, 406, 407, 415,
	419, 437, 438, 450, 463, 468, 270, 445, 469, 0,
	314, 0, 0, 316, 254, 273, 284, 0, 458, 416,
	207, 386, 262, 196, 225, 210, 233, 248, 251, 288,
	325, 332, 361, 365, 267, 245, 223, 383, 220, 401,
	422, 423, 424, 426, 329, 240, 364, 427, 0, 312,
	428, 429, 280, 0, 0, 0, 0, 0, 0, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 303, 241, 0, 0, 362, 0, 193,
	0, 403, 228, 313, 310, 434, 255, 247, 243, 227,
	281, 320, 360, 421, 354, 0, 307, 0, 0, 412,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 345,
	413, 259, 0, 0, 0, 0, 184, 1924, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 299, 301, 300, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 431, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 334, 231, 0,
	0, 0, 0, 465, 0, 0, 0, 0, 0, 0,
	0, 302, 0, 293, 188, 205, 0, 0, 344, 385,
	391, 0, 0, 0, 229, 0, 389, 358, 449, 213,
	257, 382, 363, 387, 370, 260, 0, 0, 388, 308,
	436, 377, 446, 466, 467, 237, 338, 456, 425, 462,
	478, 206, 234, 352, 418, 452, 409, 331, 432, 433,
	292, 408, 266, 191, 306, 472, 204, 397, 221, 211,
	197, 420, 444, 218, 400, 0, 0, 480, 199, 442,
	417, 327, 289, 290, 198, 0, 381, 242, 264, 232,
	347, 439, 440, 230, 481, 208, 461, 201, 0, 460,
	340, 435, 443, 328, 318, 200, 441, 326, 317, 295,
	253, 275, 375, 311, 376, 276, 336, 335, 337, 194,
	453, 0, 195, 0, 414, 454, 482, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 304, 351,
	374, 372, 378, 0, 430, 447, 457, 464, 470, 471,
	473, 474, 475, 476, 477, 339, 278, 410, 294, 309,
	0, 0, 357, 390, 219, 451, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 501, 319, 402, 448, 296,
	297, 298, 0, 187, 202, 305, 0, 379, 261, 479,
	459, 455, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 315, 321, 322, 323, 324, 341, 342, 343,
	346, 349, 350, 353, 355, 356, 359, 366, 367, 368,
	369, 371, 373, 380, 384, 392, 393, 394, 395, 396,
	398, 399, 404, 405, 406, 407, 415, 419, 437, 438,
	450, 463, 468, 270, 445, 469, 0, 314, 0, 0,
	316, 254, 273, 284, 0, 458, 416, 207, 386, 262,
	196, 225, 210, 233, 248, 251, 288, 325, 332, 361,
	365, 267, 245, 223, 383, 220, 401, 422, 423, 424,
	426, 329, 240, 364, 0, 0, 312, 428, 429, 280,
	78, 39, 40, 80, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	84, 0, 0, 0, 43, 69, 70, 0, 67, 71,
	0, 0, 87, 0, 0, 0, 0, 68, 634, 641,
	642, 643, 644, 645, 635, 637, 0, 0, 0, 636,
	0, 0, 0, 0, 0, 639, 646, 647, 0, 0,
	0, 0, 0, 0, 0, 0, 56, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2263, 2264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 683, 684,
	685, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 46, 49, 52, 51, 54, 0, 66,
	0, 0, 75, 72, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 55, 83, 82, 0, 0,
	64, 65, 53, 0, 0, 0, 0, 0, 73, 74,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 87,
	0, 0, 0, 0, 0, 634, 641, 642, 643, 644,
	645, 635, 637, 0, 57, 58, 636, 59, 60, 61,
	62, 0, 639, 646, 647, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 625, 0, 2263, 2264,
	626, 627, 0, 0, 0, 628, 0, 0, 0, 0,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 682, 683, 684, 685, 686, 687,
	688, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	86,
}

var yyPact = [...]int{
	37534, -1000, -391, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1766, 1786, -1000, -1000,
	-1000, -1000, 1875, -1000, 716, 1559, -1000, 1751, 5064, -1000,
	35856, 463, -1000, 34742, 459, 109, 35856, -1000, 133, -1000,
	101, 35856, 125, 34185, -1000, -1000, -295, 15244, 1714, -2,
	-8, 35856, -1000, -1000, -1000, -1000, 1859, 1569, -1000, 297,
	-1000, -1000, -1000, -1000, -1000, -1000, 33628, -1000, -1000, -1000,
	1765, 1752, 1882, 621, 1710, -1000, 1819, 1569, -1000, 15244,
	1839, 1807, 14687, -1000, 14687, 408, -1000, -1000, 10781, -1000,
	-1000, 20259, 35856, 35856, 210, -1000, 1751, -1000, -1000, 339,
	-1000, 261, 1493, -1000, 1492, -1000, 471, 521, 293, 406,
	395, 284, 283, 275, 271, 270, 268, 266, 264, 301,
	-1000, 657, 657, -148, -158, 2242, 384, 384, 384, 438,
	1737, 1736, -1000, 644, -1000, 657, 657, 322, 657, 657,
	657, 657, 201, 198, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 309,
	1751, 187, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 35856, 163, 35856, -1000, 530, 35856, 784, 784,
	12, 784, 784, 784, 784, 129, 586, -12, -1000, 128,
	182, 85, 185, 752, 273, 123, -1000, -1000, 178, 752,
	1166, 634, 91, -1000, 784, 8521, 8521, 8521, -1000, 1746,
	-1000, -1000, -1000, -1000, -1000, -1000, 1167, -1000, 431, -1000,
	-1000, -1000, -1000, 35856, 33071, 288, 674, -1000, -1000, -1000,
	55, -1000, -1000, 1344, 707, 15244, 1001, -1000, 1414, 590,
	-1000, -1000, -1000, -1000, -1000, 506, 15801, 15801, 15801, 15801,
	-1000, -1000, 1496, 1496, 1496, 1496, 15801, 1496, 15801, 1496,
	1496, 1496, 1496, 15244, 1496, 1496, 1496, -1000, 1496, 1496,
	1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496,
	1496, 1496, 1496, 1496, 1496, 529, 1496, 1496, 1496, 1496,
	1496, -1000, -1000, -1000, -1000, 1496, 1496, 1496, 1496, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 18030, -1000,
	13016, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	35856, -1000, 1496, 136, 35856, 35856, 285, 1819, 1569, -1000,
	1859, 1826, 297, -1000, 1682, 1468, 1279, 1177, 1569, 1470,
	35856, -1000, 1508, -1000, -1000, -1000, 1663, 1106, 1163, -1000,
	-1000, -1000, -1000, 1090, 15244, -1000, -1000, 1871, -1000, 17473,
	517, 852, 1869, 32514, -1000, 408, 408, 1490, 10216, -58,
	-1000, -1000, -1000, 667, 23044, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1746, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1443, 35856, -1000, -1000, 5721,
	1127, -1000, 1558, -1000, 1441, -1000, 1527, 1571, 457, 1127,
	452, 450, 449, -1000, -100, -1000, -1000, -1000, -1000, -1000,
	657, 657, -1000, 295, 1838, 5064, 3795, -1000, -1000, -1000,
	31957, 1557, 1127, -1000, 1556, -1000, 771, 511, 544, 544,
	1127, -1000, -1000, 35856, 1127, 768, 745, 35856, 35856, -1000,
	31400, -1000, 30843, 30286, 1013, 35856, 29729, 29172, 28615, 28058,
	27501, -1000, 1616, -1000, 1523, -1000, -1000, -1000, 35856, 35856,
	35856, 278, -1000, -1000, 35856, 1127, -1000, -1000, 1009, 1007,
	657, 657, 998, 1158, 1151, 1149, 657, 657, 997, 1146,
	24715, 208, 991, 987, 983, 1012, 1142, 164, 990, 982,
	979, 35856, 1554, 35856, -1000, 166, 612, 341, 666, 1751,
	1713, 1475, 427, 456, 1127, 388, 388, 35856, -1000, 9086,
	-1000, -1000, 1140, 15244, -1000, 778, 752, 752, -1000, -1000,
	-1000, -1000, -1000, -1000, 784, 35856, 778, -1000, -1000, -1000,
	752, 784, 35856, 784, 784, 784, 784, 752, 752, 752,
	784, 35856, 35856, 35856, 35856, 35856, 35856, 35856, 35856, 35856,
	8521, 8521, 8521, 634, 784, -304, -1000, 1137, -1000, 1606,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 120,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -102,
	1474, 26944, -1000, -305, -306, -307, -309, -1000, -1000, -1000,
	-310, -311, -1000, -1000, -1000, 15244, 15244, 15244, 15244, -1000,
	832, 15801, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 952,
	729, 15801, 15801, 15801, 15801, 15801, 15801, 15801, 15801, 15801,
	15801, 15801, 15801, 15801, 15801, 15801, 765, 1136, 1133, 590,
	590, 590, 590, -1000, 14687, 15244, 15244, 590, -1000, 1127,
	26387, 14687, 14687, 15244, 1743, 693, 707, 35856, -1000, 1177,
	-1000, -1000, -1000, 955, -1000, 35856, 35856, 159, 15244, 15244,
	15244, 15244, 15244, 15244, 11901, 15244, 15244, 15244, 11344, 9086,
	14687, 14687, 14687, 14687, 14687, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 503, 1258, 1261, 1439,
	-1000, 1473, -1000, -164, 19702, 15244, 1131, 1868, 1587, 35856,
	-1000, -1000, -1000, 1819, -1000, 1819, 1258, 1675, 1667, 14687,
	-1000, -1000, 1675, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1313, -1000, 35856, 1470, 1793, 35856, 1660, 1130, 304,
	-1000, 15244, 15244, 1467, -1000, 1174, 35856, -1000, -1000, 25830,
	-1000, -1000, 7956, -1000, 35856, 250, 35856, -1000, 19145, 25273,
	9651, -58, -1000, 9651, 1451, -1000, -28, -32, 12458, 580,
	-1000, -1000, -1000, 2242, 16358, 1306, 580, 44, -1000, -1000,
	-1000, 1527, -1000, 1527, 1527, 1527, 1527, 304, 304, 304,
	304, -1000, -1000, -1000, -1000, -1000, 1551, 1550, -1000, 1527,
	1527, 1527, 1527, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1547, 1547, 1547, 1528, 1528, 370, -1000, 15244, 240, 35856,
	1783, 978, 166, 402, 1585, 1127, 1127, 1127, 402, -1000,
	1355, 1350, -1000, -380, 1466, -1000, -1000, 1837, -1000, -1000,
	557, 810, 809, 588, 35856, 147, 243, -1000, 367, -1000,
	35856, 1127, 743, 544, 1127, -1000, 1127, -1000, -1000, -1000,
	-1000, -1000, 1127, 1461, -1000, 1471, 818, 790, 815, 789,
	1461, -1000, -1000, -129, 1461, -1000, 1461, -1000, 1461, -1000,
	1461, -1000, 1461, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 662, 35856, 147, 765, -1000, 417, -1000, -1000, 765,
	765, -1000, -1000, -1000, -1000, 1117, 1107, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -368, 35856, -1000, 160, 660, 236,
	355, 222, 35856, 257, 1803, 216, 193, 35856, 35856, 388,
	1604, 35856, 1781, 35856, -1000, -1000, -1000, -1000, -1000, 707,
	35856, -1000, -1000, 784, 784, -1000, -1000, 35856, 784, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 784, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 35856, 35856, -1000, -1000, -1000,
	-1000, -1000, 75, -34, 291, -1000, -1000, -1000, -1000, -1000,
	1813, -1000, 707, 750, 705, -1000, -1000, -1000, 836, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 952, 15801, 15801, 15801,
	1164, 415, 762, 828, 842, 869, 869, 811, 811, 596,
	596, 596, 596, 596, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1419, -1000, 904, 888, 1177, -1000, 1419, 1419, 1034,
	14687, -1000, -1000, 688, -1000, 15244, 1177, -1000, -1000, 1177,
	1455, 1454, 1866, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 884, 1139, 1139, 1139, 1139, 1139,
	15244, 1026, -1000, -1000, -1000, 1177, 1344, 1177, 1453, -1000,
	1248, 1139, 1177, 14687, 14687, 1452, 1496, 500, -1000, 1419,
	1177, 1177, 1419, 1419, 9086, 1177, -1000, 35856, -1000, -292,
	-1000, -67, 592, 1496, -1000, 24715, 1177, -1000, 1044, -1000,
	36970, -1000, -1000, -1000, -1000, -1000, 22487, 1392, 1675, -1000,
	-1000, 1496, 1437, -1000, -1000, 304, 28, 21930, -1000, -1000,
	707, 707, 15244, -1000, -1000, -1000, -1000, -1000, -1000, 496,
	1852, 289, 1496, -1000, 1502, 1617, -1000, -1000, -1000, 1792,
	16916, -1000, 1496, 1496, 35856, 1445, 1390, -1000, 492, -1000,
	1451, -58, -48, -1000, -1000, -1000, -1000, 707, -1000, 1345,
	259, 300, -1000, 394, -1000, -1000, -1000, -1000, 1723, 23,
	-1000, -1000, -1000, 304, 304, -1000, -1000, -1000, -1000, -1000,
	-1000, 1104, 1104, -1000, -1000, -1000, -1000, -1000, 976, -1000,
	-1000, -1000, 973, -1000, -1000, 1287, 1612, 240, -1000, -1000,
	657, 1086, 1725, 35856, -1000, -1000, 1290, 160, 35856, 699,
	1603, -1000, 1585, 1585, 1585, 35856, -1000, -1000, -1000, -1000,
	-372, 54, 282, -1000, -1000, -1000, 2884, 35856, 1432, -1000,
	145, -1000, 1265, 1679, 35856, -1000, 1430, 1532, 1127, 1127,
	-1000, -1000, -1000, 35856, 1496, -1000, -1000, -1000, -1000, 454,
	1748, 1745, 147, 145, 580, 1127, -1000, -1000, -1000, -1000,
	-1000, -373, 1428, 447, 152, 231, 35856, 35856, 35856, 35856,
	35856, 474, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	190, 413, -1000, 35856, 35856, 548, -1000, -1000, -1000, 752,
	-1000, -1000, 752, -1000, -1000, -1000, -1000, -1000, 1744, 35856,
	-39, -345, -1000, -332, -1000, -1000, -1000, -1000, 971, 390,
	762, 15801, 15801, 14687, -121, 204, 204, 765, -1000, -1000,
	-1000, 15244, 15244, 1456, 681, -1000, 15244, 759, -1000, -1000,
	15244, 15244, 15244, 1177, 227, -1000, -1000, -1000, -1000, -1000,
	1865, -1000, 15244, -1000, -1000, 15244, 15244, -1000, -1000, 1419,
	1419, 14687, 9086, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 592, -1000, 544, 544, 544, 35856, -1000,
	-1000, -1000, -1000, -1000, -1000, 1450, 1818, -1000, 1678, 1673,
	1864, 1852, -1000, 19145, 1675, -1000, -1000, 35856, -286, -1000,
	1709, 1685, -1000, -1000, -1000, -1000, 7391, 1819, 15244, 1601,
	35856, 1496, -1000, 18588, 35856, 35856, 19145, 19145, 19145, 19145,
	19145, -1000, 1649, 1638, -1000, 1648, 1625, 1634, 35856, -1000,
	1412, 1177, 1826, 16916, 297, 15244, 20816, 1260, 19145, -1000,
	-1000, 19145, 35856, 6826, -1000, -1000, -53, -37, -1000, -1000,
	-1000, -1000, 2242, -1000, -1000, 708, 1789, 1718, -1000, -1000,
	-1000, -1000, 1407, -1000, 1405, 1449, 1403, 144, -1000, 1570,
	1742, 657, 657, -1000, 972, -1000, 1127, -1000, -1000, 443,
	-1000, 1779, 35856, 1599, 1597, 1595, -1000, -386, 959, 1531,
	1566, 15244, 1530, 1836, 1446, 35856, -1000, -1000, 35856, -1000,
	-1000, 356, -1000, 240, 35856, -1000, -1000, -1000, 243, 35856,
	-1000, 37726, 145, -1000, -1000, -1000, -1000, -1000, -1000, 35856,
	165, -1000, 1529, 1015, -1000, -1000, 1575, -1000, -1000, -1000,
	-1000, 155, 224, -1000, 35856, 532, 1612, 35856, -1000, -1000,
	-1000, 784, 784, -1000, -1000, 1740, -1000, 1127, 15801, 15801,
	-1000, 590, -1000, 1496, 1177, 1527, 1527, -1000, 1527, 1528,
	-1000, 1527, 92, 1527, 90, 1527, -1000, -1000, 1177, 1177,
	780, 808, -109, -1000, 707, 15244, 1205, 1198, 1139, -1000,
	1526, 1524, 15244, 1139, -1000, 707, -1000, -1000, 1177, -1000,
	-1000, 1806, 1806, 1806, 1376, 36413, 35856, -1000, -1000, -1000,
	-1000, 1852, 1844, 1447, -1000, -1000, 28, 329, -1000, 1696,
	1685, -1000, 1835, 1705, 1834, -1000, -1000, -1000, 707, -1000,
	1753, 1360, -1000, 653, 1328, -1000, -1000, 14130, 1398, 1672,
	488, 1376, 1409, 1617, 1581, 1593, 1561, -1000, -1000, -1000,
	-1000, 1635, -1000, 1622, -1000, -1000, 1508, -1000, -1000, 1261,
	1177, 755, 250, 19145, 1401, 1401, -1000, 483, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 840, 37489, 1879, -1000, 1085,
	-1000, 1309, -1000, 736, 730, -1000, 35856, 1522, -1000, 304,
	1082, 304, 956, -1000, 945, -1000, -1000, -195, -1000, -1000,
	1519, 1577, -1000, -1000, 35856, -1000, -1000, 35856, 35856, 35856,
	1518, 1832, -1000, 15244, 1514, 646, 1219, 35856, 35856, -1000,
	-1000, 242, 1496, -1000, 1370, 1367, -1000, -146, -1000, 15244,
	-1000, -1000, -1000, 1110, 1110, -1000, 1508, -1000, -1000, -1000,
	1240, -1000, -1000, -132, 35856, 35856, 35856, 35856, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 590, 15801, -1000,
	-1000, 304, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 15244, -1000, 15244, -1000, 1819, 1075, 707, 15244, 15244,
	-1000, 939, 911, 1139, -1000, -1000, 1496, 1700, 1496, 1496,
	20816, -1000, -1000, 1844, 1842, 1830, 1695, 1701, 1701, 1696,
	-1000, 1829, 1828, -1000, 1071, 1824, 1069, 713, -1000, 35856,
	15244, 1496, -1000, 290, 35856, 1496, 35856, -1000, 1827, -1000,
	-1000, 15244, 1511, -1000, 15244, -1000, -1000, -1000, -1000, -1000,
	-1000, 6052, 1852, 1401, -1000, -1000, 607, -1000, 15244, -1000,
	-1000, -1000, 1193, -1000, -1000, -1000, -1000, -1000, 1509, 15244,
	-1000, -1000, -1000, 1216, 1209, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1508, -1000, -1000, -1000, -1000, 243, -382,
	1144, 35856, 863, -1000, 1365, 1446, 423, -1000, 15244, 336,
	-1000, 243, -1000, -159, -161, 1139, -1000, -1000, 1788, -1000,
	-1000, 9086, -1000, -1000, 1507, 1583, -1000, 254, -1000, 1139,
	1139, 1177, -1000, 1139, 1139, 1186, 1184, -1000, 21373, -1000,
	1823, 1822, 24158, 24158, 592, 1842, -1000, 15244, 15244, 1683,
	900, -1000, -1000, -1000, -1000, 1058, 1042, -1000, 1027, -1000,
	1878, -1000, 707, -1000, 1496, -1000, 481, 1328, -1000, 1819,
	707, 35856, 707, 19, 1017, 1827, -1000, 1139, -1000, 1496,
	1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 35856,
	1123, -1000, -1000, 1787, 1363, 52, -1000, 1341, -1000, -1000,
	-1000, -1000, 13573, -1000, -1000, -1000, -1000, -1000, -1000, 297,
	1434, -1000, 643, 35856, 35856, 1177, 239, -136, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1324, -1000, -1000, -1000, -1000,
	-1000, 1324, 1324, -1000, -1000, 707, 1344, -1000, 899, -1000,
	-1000, -1000, -1000, -1000, 35856, 1328, 35856, -1000, 1298, 1177,
	1496, 1819, -1000, 1295, -1000, 297, -1000, 1495, 1566, -1000,
	1177, -130, 9086, 6261, 1275, -1000, -1000, 1659, -127, -139,
	23601, -1000, -1000, -1000, -1000, -1000, 1316, -1000, -1000, 20816,
	35299, -1000, 1592, 647, -130, 15244, 1356, -1000, -1000, -38,
	-1000, -1000, -1000, -1000, -1000, 1575, -1000, 1655, -1000, -1000,
	-1000, -1000, 1244, -1000, 5372, -226, 1591, -1000, 1862, -1000,
	-1000, -1000, 792, 954, -1000, -1000, -1000, -1000, 1083, 35856,
	360, -1000, -1000, -132, -134, -1000, 35299, -221, 580, 6052,
	-1000, -1000, 1877, 571, 571, -1000, -1000, -388, 1224, 162,
	-1000, -137, -1000, -1000, 1776, 19, -1000, -1000, -1000, 350,
	1010, -1000, -1000, 860, -388, -1000, -140, -257, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 6052, 179, 179, -1000,
	1590, -1000, -1000, 6052, -1000, 1589, -240, -1000, -318, -1000,
	-1000,
}

var yyPgo = [...]int{
	0, 2187, 2185, 18, 5, 2184, 41, 110, 187, 23,
	172, 88, 2182, 2179, 2178, 2177, 2176, 2174, 2172, 203,
	201, 200, 2171, 2169, 2168, 2166, 2165, 2164, 2163, 2161,
	2160, 2158, 198, 156, 169, 2157, 2156, 2155, 102, 165,
	75, 79, 170, 2154, 2153, 70, 2152, 2148, 2145, 163,
	160, 741, 2144, 159, 104, 36, 2143, 2141, 2140, 2139,
	2138, 2135, 2134, 2126, 2123, 2118, 2117, 2116, 2114, 2113,
	2112, 2111, 284, 2109, 2108, 14, 2107, 73, 2106, 2105,
	2104, 2103, 116, 2101, 2096, 2095, 2094, 2093, 2092, 134,
	2091, 2090, 2087, 2083, 171, 2081, 2080, 236, 95, 99,
	2079, 2077, 89, 161, 2074, 105, 2069, 2067, 2065, 146,
	2062, 3766, 2058, 50, 48, 2057, 55, 69, 47, 45,
	2, 2056, 2055, 49, 81, 2054, 96, 52, 2053, 91,
	82, 2052, 2049, 7, 6, 2047, 4, 2039, 3, 60,
	2038, 2037, 103, 2035, 2033, 2032, 76, 2030, 2029, 3743,
	2028, 78, 129, 92, 66, 2025, 34, 94, 2022, 2021,
	2020, 2019, 2018, 38, 2014, 2013, 2012, 133, 25, 152,
	27, 44, 32, 122, 2011, 20, 80, 2010, 132, 131,
	2009, 46, 29, 28, 2008, 30, 123, 144, 24, 90,
	124, 2007, 2005, 43, 61, 2004, 2003, 2002, 2001, 2000,
	1999, 65, 1998, 39, 1994, 175, 1991, 21, 1990, 58,
	33, 1989, 59, 127, 53, 22, 1988, 166, 1987, 40,
	157, 120, 145, 1985, 1981, 1980, 154, 249, 1975, 1970,
	68, 153, 136, 142, 1967, 243, 1966, 1964, 86, 1171,
	2333, 26, 151, 1962, 1956, 2667, 125, 117, 15, 1953,
	108, 1952, 1950, 1949, 173, 183, 100, 925, 98, 1946,
	10, 1945, 1944, 1942, 1941, 1940, 1939, 84, 174, 63,
	9, 147, 67, 1936, 1935, 1933, 115, 74, 1931, 149,
	148, 118, 155, 1930, 158, 137, 101, 1928, 85, 1927,
	1926, 1925, 1924, 83, 1923, 1922, 1921, 1920, 150, 138,
	111, 77, 1918, 71, 106, 143, 141, 35, 1917, 37,
	1915, 1914, 167, 19, 1913, 12, 97, 1912, 1911, 0,
	1909, 13, 164, 269, 140, 1908, 1906, 8, 1900, 11,
	1899, 1898, 130, 1897, 1896, 1895, 17, 31, 16, 1,
	1894, 1893, 3437, 2944, 126, 1874, 177,
}

//line sql.y:6428
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 340, 341, 341, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 319, 319,
	319, 322, 322, 30, 67, 32, 32, 31, 31, 34,
	34, 33, 6, 6, 6, 7, 7, 7, 7, 7,
	7, 7, 7, 8, 8, 8, 8, 8, 9, 9,
	9, 9, 11, 11, 11, 11, 11, 17, 18, 10,
	10, 19, 19, 80, 80, 20, 21, 21, 21, 21,
	344, 344, 144, 144, 142, 142, 143, 143, 212, 212,
	22, 23, 23, 222, 222, 221, 221, 221, 223, 223,
	223, 223, 257, 257, 24, 24, 24, 24, 24, 95,
	95, 321, 321, 320, 315, 315, 314, 314, 313, 318,
	318, 317, 317, 316, 36, 37, 46, 46, 46, 46,
	47, 48, 323, 323, 289, 52, 52, 51, 51, 51,
	51, 53, 53, 50, 50, 49, 49, 291, 291, 278,
	278, 290, 290, 290, 290, 290, 290, 290, 277, 277,
	106, 106, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 335, 335, 192, 192, 192, 192, 192,
	192, 115, 115, 123, 123, 123, 123, 113, 113, 114,
	112, 112, 112, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 122, 122, 119, 119,
	119, 120, 120, 120, 336, 336, 336, 336, 260, 260,
	260, 260, 263, 263, 261, 261, 261, 261, 261, 261,
	261, 261, 261, 262, 262, 262, 262, 262, 264, 264,
	264, 264, 264, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 266, 266,
	266, 266, 266, 266, 266, 266, 276, 276, 267, 267,
	271, 271, 272, 272, 272, 273, 273, 273, 274, 274,
	269, 269, 269, 269, 269, 269, 270, 270, 270, 279,
	303, 303, 302, 302, 300, 300, 300, 300, 288, 288,
	297, 297, 297, 297, 297, 287, 287, 283, 283, 283,
	284, 284, 285, 285, 282, 282, 286, 286, 299, 299,
	298, 280, 280, 281, 281, 305, 337, 337, 337, 337,
	338, 338, 306, 328, 329, 327, 327, 327, 327, 327,
	77, 77, 77, 234, 234, 234, 295, 295, 294, 294,
	294, 296, 296, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 229, 229, 229, 326, 326, 326, 326, 326, 326,
	325, 325, 325, 292, 292, 292, 324, 324, 54, 54,
	176, 176, 43, 43, 43, 43, 43, 43, 42, 42,
	42, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 44, 44, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 82, 82, 83, 83, 83,
	83, 84, 84, 84, 308, 308, 55, 55, 3, 3,
	132, 134, 135, 135, 133, 133, 133, 133, 133, 133,
	57, 57, 56, 56, 137, 136, 138, 138, 138, 1,
	1, 2, 2, 4, 4, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 275, 275, 275,
	307, 307, 309, 311, 311, 311, 311, 310, 91, 91,
	26, 35, 35, 27, 27, 27, 27, 28, 28, 58,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 330, 330,
	228, 228, 236, 236, 227, 227, 250, 250, 250, 230,
	230, 230, 231, 231, 334, 334, 334, 60, 60, 60,
	62, 62, 63, 64, 64, 252, 252, 253, 253, 65,
	66, 78, 78, 78, 78, 78, 78, 81, 81, 81,
	13, 13, 13, 13, 74, 74, 74, 12, 12, 61,
	61, 68, 331, 331, 332, 333, 333, 333, 333, 69,
	71, 29, 29, 29, 29, 29, 29, 101, 101, 89,
	89, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	89, 96, 96, 96, 90, 90, 345, 72, 73, 73,
	94, 94, 94, 87, 87, 87, 93, 93, 93, 14,
	14, 15, 211, 211, 16, 16, 98, 98, 100, 100,
	100, 100, 100, 102, 102, 102, 102, 102, 102, 102,
	97, 97, 99, 99, 99, 99, 243, 243, 243, 242,
	242, 126, 126, 128, 127, 127, 129, 129, 130, 130,
	130, 130, 174, 174, 152, 152, 209, 209, 207, 207,
	208, 208, 210, 210, 210, 210, 213, 213, 131, 131,
	131, 131, 139, 139, 140, 140, 141, 141, 251, 251,
	248, 248, 248, 247, 247, 145, 145, 145, 147, 146,
	146, 146, 146, 148, 148, 150, 150, 149, 149, 151,
	156, 156, 155, 155, 153, 153, 153, 153, 154, 154,
	154, 154, 157, 157, 111, 111, 111, 111, 111, 111,
	121, 121, 121, 121, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 79, 79, 79, 225, 225, 158, 158, 166, 166,
	166, 166, 159, 159, 159, 159, 159, 159, 159, 167,
	167, 167, 173, 168, 168, 164, 164, 164, 164, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 86,
	86, 86, 86, 86, 86, 86, 86, 86, 86, 86,
	86, 85, 85, 85, 85, 85, 85, 85, 85, 85,
	346, 346, 268, 268, 268, 165, 165, 165, 165, 165,
	92, 92, 92, 92, 92, 256, 256, 256, 259, 259,
	259, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 179, 179, 88, 88,
	177, 177, 178, 180, 180, 175, 175, 175, 161, 161,
	161, 181, 181, 182, 182, 183, 183, 185, 184, 184,
	186, 187, 187, 187, 188, 188, 189, 189, 189, 45,
	45, 45, 45, 45, 40, 40, 40, 40, 41, 41,
	41, 103, 103, 103, 103, 105, 105, 104, 104, 75,
	75, 76, 76, 76, 109, 109, 110, 110, 110, 107,
	107, 108, 108, 205, 205, 190, 190, 190, 197, 197,
	197, 193, 193, 195, 195, 195, 196, 196, 196, 194,
	202, 202, 204, 204, 203, 203, 199, 199, 200, 200,
	201, 201, 201, 198, 198, 160, 160, 160, 160, 160,
	206, 206, 206, 206, 214, 214, 170, 170, 172, 172,
	171, 125, 215, 215, 219, 216, 216, 220, 220, 220,
	220, 220, 217, 217, 218, 218, 244, 244, 244, 224,
	224, 235, 235, 232, 232, 233, 233, 226, 226, 237,
	237, 237, 70, 169, 169, 304, 304, 301, 240, 240,
	241, 241, 245, 245, 249, 249, 246, 246, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 342, 343,
	254, 255, 255, 255,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 2,
	2, 0, 1, 4, 4, 4, 4, 2, 4, 1,
	3, 1, 1, 3, 4, 3, 3, 3, 5, 10,
	0, 2, 0, 2, 3, 5, 3, 4, 2, 3,
	2, 3, 3, 1, 1, 0, 2, 2, 3, 3,
	2, 1, 1, 2, 2, 2, 2, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 1, 2, 1, 3, 1,
	1, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 1, 2,
	2, 2, 2, 3, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 5, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 3,
	0, 5, 0, 3, 5, 0, 1, 1, 0, 1,
	0, 2, 2, 2, 1, 1, 0, 2, 2, 5,
	0, 1, 1, 2, 1, 3, 2, 3, 0, 1,
	4, 3, 3, 4, 2, 0, 2, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 0, 1, 1, 3,
	3, 3, 1, 3, 1, 7, 5, 6, 6, 7,
	0, 1, 5, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 1, 0, 1, 2, 0, 1, 1, 3,
	2, 1, 2, 3, 3, 4, 4, 3, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 4,
	5, 0, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 1,
	0, 2, 0, 1, 5, 1, 3, 7, 1, 3,
	3, 1, 2, 2, 2, 5, 5, 5, 6, 8,
	6, 5, 5, 2, 2, 2, 2, 3, 3, 3,
	4, 1, 3, 5, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 3, 4, 4, 2, 11,
	3, 6, 8, 6, 6, 6, 13, 8, 6, 10,
	5, 5, 5, 5, 5, 0, 6, 5, 6, 4,
	5, 0, 8, 9, 0, 3, 0, 1, 0, 3,
	8, 4, 1, 3, 3, 6, 7, 7, 8, 4,
	0, 1, 0, 1, 3, 3, 1, 1, 2, 1,
	1, 0, 2, 0, 2, 5, 3, 7, 4, 4,
	4, 4, 3, 3, 3, 7, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 0, 2, 2,
	1, 3, 2, 0, 4, 4, 3, 2, 1, 3,
	3, 3, 5, 7, 7, 6, 5, 3, 2, 3,
	3, 3, 7, 3, 3, 3, 3, 4, 7, 5,
	2, 4, 4, 4, 4, 4, 5, 5, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 2,
	4, 2, 4, 5, 4, 4, 4, 4, 4, 3,
	3, 3, 5, 2, 3, 3, 3, 3, 1, 1,
	0, 1, 0, 1, 1, 1, 0, 2, 2, 0,
	2, 2, 0, 2, 0, 1, 1, 2, 1, 3,
	1, 2, 1, 1, 5, 0, 1, 0, 1, 2,
	3, 0, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 3, 3, 2,
	2, 3, 1, 3, 2, 1, 2, 1, 2, 2,
	4, 3, 3, 6, 4, 7, 6, 1, 3, 2,
	2, 2, 2, 1, 1, 1, 3, 2, 1, 1,
	1, 0, 1, 1, 0, 3, 0, 2, 0, 2,
	1, 2, 2, 0, 1, 1, 0, 1, 1, 5,
	5, 4, 0, 2, 4, 4, 0, 1, 0, 1,
	2, 3, 4, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 2, 3, 5, 0, 1, 2, 1,
	1, 0, 1, 2, 1, 3, 1, 1, 1, 4,
	3, 1, 3, 4, 3, 7, 0, 3, 1, 3,
	1, 3, 1, 1, 3, 3, 1, 3, 4, 4,
	4, 3, 2, 4, 0, 1, 0, 2, 0, 1,
	0, 1, 2, 1, 1, 1, 2, 2, 1, 2,
	3, 2, 3, 2, 2, 2, 1, 1, 3, 3,
	0, 1, 1, 2, 6, 5, 6, 6, 0, 2,
	3, 3, 0, 2, 3, 3, 3, 2, 3, 1,
	3, 4, 3, 1, 3, 4, 5, 6, 3, 4,
	5, 6, 3, 4, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 3, 1, 1, 2, 2, 2, 2, 1,
	1, 2, 9, 6, 6, 6, 2, 2, 3, 3,
	3, 1, 1, 1, 0, 3, 1, 1, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 5, 5, 6, 4,
	4, 8, 6, 8, 6, 8, 5, 4, 2, 2,
	1, 2, 2, 2, 8, 8, 6, 5, 4, 4,
	4, 4, 4, 7, 4, 6, 4, 4, 4, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 0, 2, 3, 4, 4, 4, 4, 4,
	0, 3, 4, 7, 3, 1, 1, 1, 0, 5,
	5, 2, 3, 1, 2, 2, 1, 2, 1, 2,
	2, 1, 2, 2, 1, 1, 0, 1, 0, 2,
	1, 2, 4, 0, 2, 1, 3, 5, 1, 2,
	2, 0, 3, 0, 2, 0, 1, 3, 1, 3,
	2, 0, 1, 1, 0, 1, 2, 4, 4, 0,
	2, 2, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 0, 3, 3, 3, 0, 3, 1, 1, 0,
	4, 0, 1, 1, 0, 3, 1, 3, 2, 1,
	1, 0, 1, 2, 4, 9, 3, 5, 0, 3,
	3, 0, 1, 0, 2, 2, 0, 2, 2, 2,
	0, 2, 1, 2, 3, 3, 0, 2, 1, 2,
	3, 4, 3, 0, 1, 2, 1, 5, 4, 4,
	1, 3, 3, 5, 0, 5, 1, 3, 1, 2,
	3, 1, 1, 3, 3, 1, 3, 3, 3, 3,
	3, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 2, 0, 3, 0, 1, 0,
	1, 1, 5, 0, 1, 0, 1, 2, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -340, -5, -9, -17, -18, -19, -20, -21, -22,
	-23, -24, -25, -26, -27, -28, -58, -59, -60, -62,
	-63, -64, -65, -66, -12, -61, -29, -30, -67, -68,
	-69, -70, -71, -14, -15, -16, -7, -6, -11, 7,
	8, -80, -31, 30, -36, -46, 209, -47, -37, 210,
	-48, 212, 211, 248, 213, 241, 72, 290, 291, 293,
	294, 295, 296, -81, 246, 247, 215, 34, 43, 31,
	32, 35, 219, 254, 255, 218, -8, -32, 6, -342,
	9, 416, 243, 242, 26, -10, 436, 83, -341, 570,
	-205, -190, 20, 31, 27, -189, -185, -94, -190, 18,
	16, 5, -72, -345, -72, -72, 10, 11, -72, -289,
	-291, 83, 146, 83, -72, -52, -51, -50, -49, -53,
	29, -43, -44, -312, -42, -39, 214, 211, 258, 110,
	111, 248, 249, 250, 213, 232, 247, 251, 246, 267,
	-38, 78, 31, 436, 439, -296, 210, 216, 217, 417,
	113, 112, 73, 212, -293, 342, 540, -53, 542, 99,
	101, 541, 42, 222, 543, 544, 545, 546, 231, 547,
	548, 549, 550, 556, 557, 558, 559, 114, 5, -72,
	-249, -245, -319, -239, 86, 87, 88, 433, 234, 467,
	468, 283, 78, 39, 339, 342, 540, 290, 304, 298,
	325, 317, 434, 469, 286, 235, 271, 537, 315, 122,
	542, 289, 470, 249, 347, 348, 349, 99, 293, 384,
	555, 288, 471, 553, 101, 541, 77, 49, 42, 244,
	313, 218, 309, 543, 272, 472, 444, 265, 113, 110,
	562, 34, 307, 48, 28, 552, 112, 47, 544, 137,
	473, 545, 351, 330, 531, 46, 352, 250, 474, 81,
	255, 438, 539, 353, 308, 354, 282, 551, 215, 475,
	523, 355, 356, 532, 476, 331, 335, 477, 376, 357,
	569, 50, 478, 479, 533, 111, 480, 76, 546, 302,
	303, 481, 280, 233, 378, 329, 429, 430, 431, 102,
	104, 103, 231, 33, 358, 435, 284, 56, 259, 379,
	44, 333, 566, 43, 527, 482, 530, 328, 324, 426,
	51, 483, 484, 485, 486, 547, 327, 301, 323, 561,
	456, 277, 548, 60, 217, 337, 336, 338, 266, 375,
	320, 487, 488, 489, 238, 79, 490, 310, 19, 491,
	492, 359, 273, 493, 54, 494, 495, 382, 247, 496,
	52, 549, 37, 252, 563, 550, 497, 498, 499, 500,
	254, 501, 361, 502, 360, 332, 334, 261, 362, 437,
	503, 306, 251, 554, 504, 239, 538, 253, 258, 246,
	383, 240, 505, 506, 507, 508, 509, 287, 510, 511,
	294, 556, 427, 41, 512, 513, 514, 515, 281, 276,
	377, 386, 59, 80, 344, 516, 536, 300, 274, 517,
	291, 53, 557, 558, 559, 268, 560, 7, 567, 568,
	364, 114, 278, 279, 45, 321, 260, 518, 519, 311,
	312, 326, 299, 322, 292, 524, 262, 365, 428, 248,
	520, 385, 275, 340, 345, 441, 267, 366, 535, 440,
	319, 316, 269, 521, 367, 223, 263, 264, 522, 525,
	368, 369, 285, 370, 371, 372, 373, 374, 270, 439,
	297, 314, 346, 397, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 425, 221, -72, 221, -149, -245, 221, -217, 348,
	-236, 350, 363, 358, 368, 356, -228, 359, 361, 261,
	-334, 376, 221, 365, 209, 163, 351, 360, 369, 370,
	285, 371, 374, 270, -330, -319, 545, 560, 122, 318,
	355, 353, 377, 527, 373, 372, -245, 292, -252, 297,
	-240, -319, -239, 295, -149, -78, 523, 213, -254, -254,
	-96, 527, 529, -168, -111, 130, -121, -124, -116, -117,
	-162, -163, -164, -165, -122, -175, 152, 153, 160, 131,
	-173, -125, 24, 432, 418, 417, 163, 29, 205, 66,
	67, 420, 421, 133, 55, 393, 394, -123, 389, 395,
	390, 423, 424, 105, 425, 102, 104, 103, 426, 427,
	428, 429, 430, 431, -240, -245, 226, 388, 220, 158,
	416, -118, -114, -6, -171, 387, 391, 392, 396, -319,
	-239, -120, -119, -158, 89, 95, 100, 96, -339, 106,
	-342, 90, 91, 92, 93, 94, 107, 108, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 42,
	364, 364, -149, -72, -72, -72, -72, -183, -94, -185,
	-8, -6, -342, 6, -72, -6, -7, -11, -32, -34,
	463, -33, -245, -190, -205, 10, 148, 40, 48, -188,
	-189, -10, -6, -111, 17, 21, 22, -99, 154, -111,
	-245, -73, -99, -226, 225, -72, -72, -216, -257, 292,
	-220, 377, 376, -241, -218, -240, -238, -217, 375, 214,
	442, 129, 23, 25, 132, 163, 117, 17, 133, 35,
	216, 318, 232, 162, 228, 417, 209, 70, 443, 389,
	390, 387, 393, 419, 420, 388, 350, 29, 11, 445,
	26, 242, 22, 36, 156, 211, 136, 446, 245, 24,
	243, 105, 108, 448, 20, 73, 237, 12, 230, 38,
	14, 449, 450, 15, 226, 225, 148, 222, 68, 9,
	205, 27, 145, 64, 451, 124, 452, 453, 454, 455,
	118, 66, 146, 18, 564, 391, 392, 31, 528, 432,
	256, 158, 71, 57, 529, 130, 457, 458, 106, 459,
	109, 74, 534, 126, 16, 69, 40, 460, 257, 461,
	227, 565, 462, 380, 463, 147, 212, 416, 67, 464,
	220, 363, 6, 422, 30, 241, 229, 116, 65, 465,
	221, 135, 423, 424, 224, 119, 107, 5, 123, 32,
	10, 72, 75, 394, 395, 396, 55, 115, 436, 134,
	13, 466, 381, 128, 122, -290, 146, -277, -281, -240,
	236, -306, 232, -149, -299, -298, -240, -95, -235, 222,
	230, 229, 123, -323, 126, 278, 388, 220, -49, -50,
	-217, 162, -82, 253, 257, 84, 84, -281, -280, -279,
	-324, 257, 236, -305, -297, 228, 237, -287, 229, 230,
	-282, 222, 124, -324, -282, 227, 237, 257, 257, 114,
	257, 114, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 252, -288, 138, -288, 440, 440, -293, -324, -324,
	-324, 224, 33, 33, -237, -282, 224, 23, -288, -288,
	-217, 162, -288, -288, -288, -288, 265, 265, -288, -288,
	-288, -288, -288, -288, -288, -288, -288, -288, -288, -288,
	-288, -288, -288, 221, -323, -103, 374, 285, 78, -51,
	267, -35, -149, -235, 222, 223, -323, 254, -149, 206,
	-149, -230, 146, 13, -230, -227, 364, 362, 349, 354,
	-230, -230, -230, -230, 268, 347, -283, 222, 33, 233,
	364, 268, 347, 268, 269, 268, 269, 357, 367, 268,
	-250, 12, 148, 388, 352, 356, 261, 221, 262, 223,
	366, -319, 530, 269, -250, 90, -231, 146, 364, 264,
	-230, -255, -342, -241, 318, -255, -255, 30, 87, 224,
	-240, -74, -240, 90, -13, -9, -20, -19, -21, 138,
	-101, 364, -89, 163, 545, 531, 532, 533, 530, 361,
	538, 536, 534, 268, 535, 84, 126, 128, 129, -111,
	145, -159, 138, 139, 140, 141, 142, 143, 144, 148,
	130, 132, 146, 147, 127, 149, 150, 151, 152, 153,
	154, 155, 157, 156, 158, 159, 162, 207, 208, -117,
	-117, -117, -117, -173, -342, -342, -342, -117, -225, -342,
	-117, -342, -342, -342, -342, -179, -111, -342, -346, -342,
	-346, -346, -268, -342, -268, -342, -342, -342, -342, -342,
	-342, -342, -342, -342, -342, -342, -342, -342, -342, 206,
	-342, -342, -342, -342, -342, -268, -268, -268, -268, 100,
	95, 89, -175, 96, 90, -240, -245, -6, -7, -168,
	-254, -331, -332, -152, -149, -342, 285, -240, -240, 254,
	-188, -10, -6, -183, -189, -185, -6, -72, -87, -100,
	61, 62, -102, 22, 36, 65, 63, 21, -343, 85,
	-343, -205, -343, 84, -34, -209, 83, 59, 41, 90,
	90, 84, 19, -184, -186, -111, 12, -243, -242, 23,
	-240, 90, 206, 98, 12, -150, 27, -149, -226, -226,
	84, 292, -220, -257, -222, -221, 378, 380, 138, -244,
	-240, 90, 29, 85, 84, -149, -260, -263, -265, -264,
	-266, -261, -262, 315, 316, 163, 319, 321, 322, 323,
	324, 325, 326, 327, 328, 329, 330, 30, 244, 311,
	312, 313, 314, 331, 332, 333, 334, 335, 336, 337,
	338, 298, 317, 434, 299, 300, 301, 302, 303, 304,
	306, 307, 308, 309, 310, -322, -319, 83, 85, 84,
	-267, 83, -103, 221, -319, 222, 222, 222, -72, 416,
	-288, -288, 252, 17, -42, -39, -312, 16, -38, -39,
	214, 110, 111, 211, 83, -277, 83, -286, -322, -319,
	83, 124, 227, 123, -285, -282, -285, -286, -319, -175,
	-319, 124, 124, -213, -240, -213, -213, 21, -213, 21,
	-213, 21, 92, -240, -213, 21, -213, 21, -213, 21,
	-213, 21, -213, 21, 29, 76, 77, 29, 79, 80,
	81, -175, -175, -277, -217, -149, -319, 92, 92, -288,
	-288, 92, 90, 90, 90, -288, -288, 92, 90, -247,
	-245, 90, -325, 238, 282, 284, 92, 92, 92, 92,
	29, 90, -326, 29, 552, 551, 553, 554, 555, 92,
	29, 92, 29, 92, -240, 83, -149, -109, 272, 209,
	211, 214, 74, 90, 286, 138, 42, 84, 224, 221,
	-319, -232, 226, -232, -240, -246, -245, -238, 90, -111,
	-284, 12, 148, -250, -250, -230, -149, -284, -250, -230,
	-149, -230, -230, -230, -230, -250, -250, -250, -230, -245,
	-245, -149, -149, -149, -149, -149, -149, -149, -255, -255,
	-255, -231, -230, 530, 90, 74, -253, 295, 329, 524,
	525, 526, 84, 436, -142, -149, 530, 530, 530, 530,
	530, 530, -111, -111, -111, -111, -166, 106, 130, 107,
	108, -124, -167, -171, -173, 97, 148, 132, 146, 147,
	-116, -117, -116, -116, -116, -116, -116, -116, -116, -116,
	-116, -116, -116, -116, -116, -256, -319, 90, 163, 90,
	90, -97, -99, -111, -111, -319, -240, -97, -97, -111,
	-93, 22, 36, -177, -178, 134, -175, -343, -343, 92,
	-240, -240, -86, -85, 398, 399, 400, 401, 403, 404,
	405, 408, 409, 413, 414, 397, 415, 402, 407, 410,
	411, 412, 406, 314, -111, -111, -111, -111, -111, -111,
	-79, -111, 117, 118, 119, -169, -168, -318, -317, -316,
	-111, -111, -98, 22, 36, -97, -241, -246, -238, -97,
	-98, -98, -97, -97, 206, -205, -343, 84, -333, 380,
	381, 528, -248, 257, -247, 23, -169, 90, 12, -211,
	75, -240, -188, -188, 61, 62, 57, -97, -102, -343,
	-33, 23, -207, -240, 60, 90, -269, -217, 339, 340,
	-111, -111, 84, -187, 25, 26, -149, -242, 154, -246,
	-149, -212, 257, -149, -127, -129, -130, -131, -152, -174,
	-342, -132, 454, 451, 12, -142, -143, -151, -245, -220,
	-222, 84, 379, 381, 382, 74, 109, -111, -270, 162,
	-295, -294, -293, -277, -279, -280, -281, 85, -270, -273,
	345, 344, -267, -267, -267, -267, -267, -269, -269, -269,
	-269, 83, 83, -267, -267, -267, -267, -271, 83, -271,
	-271, -272, 83, -272, -306, -111, -303, -302, -300, -301,
	231, 99, 436, 75, -298, -187, 92, -109, -233, 226,
	-304, -301, -319, -319, -319, -233, -319, 90, -319, 90,
	-83, -55, -1, 564, 565, 566, 84, 17, -278, -277,
	-54, 282, -309, -310, 257, -305, -299, -286, 124, -285,
	-286, -286, -319, 84, 27, 114, 114, 114, 114, 436,
	211, 30, -277, -54, -256, 224, -256, -256, 90, 90,
	-229, 560, -142, -105, 274, 138, 263, 263, 221, 221,
	276, -149, 287, 289, 288, 286, 21, 275, 277, 279,
	265, -149, -149, -232, 74, -144, -149, 24, -245, -149,
	-230, -230, -149, -230, -230, -149, -240, -89, 380, 84,
	436, 20, -90, 20, 106, 107, 108, -167, -116, -117,
	-116, 129, 245, 84, -343, 23, 84, 75, -343, -343,
	-343, 84, 12, -97, -180, -178, 136, -111, -343, -343,
	84, 84, 12, -259, 23, -343, -343, -343, -343, -343,
	-179, -343, 12, -343, -343, 84, 84, -343, -343, -97,
	-97, -342, 206, -343, -343, -343, -343, -343, -241, -332,
	527, 381, -156, -155, -153, 72, 225, 73, -342, -247,
	-343, 90, 87, -208, 87, -207, -161, -240, 92, 96,
	-190, -126, -128, 12, -102, -173, 85, 84, -269, -194,
	-199, -227, -240, 90, 163, -186, 206, -157, 13, -160,
	30, 55, -9, -342, -342, 30, 84, -145, -147, -146,
	-148, 64, 68, 70, 65, 66, 67, 71, -251, 23,
	-127, -7, -6, -342, -342, -342, -149, -142, -344, 12,
	75, -344, 84, 206, -221, -223, 383, 380, 386, -319,
	90, -82, 84, -293, -281, -191, -106, 38, -274, 346,
	-269, -269, -276, 90, -276, 92, 92, 85, -45, -40,
	-41, 31, 78, -300, -288, 90, 37, -240, 85, -105,
	-149, 130, 74, -304, -304, -304, -245, -2, 563, 569,
	124, 83, 349, 16, -207, 84, 85, -176, 283, 85,
	-311, 55, -240, 85, 83, -286, -286, -240, -342, 221,
	29, 29, -54, -176, -270, -319, 562, 561, 85, 223,
	281, -110, 393, -107, 90, 86, -149, -149, -149, -149,
	-149, 214, 211, 266, 224, -142, -149, 84, -77, 240,
	235, -250, -250, 31, -149, 380, 539, 537, 129, 245,
	-124, -117, -99, 433, -258, 163, 315, 244, 313, 309,
	329, 320, 344, 311, 345, 308, 307, 306, -258, -256,
	-111, -111, -183, 137, -111, 135, -111, -111, -111, -343,
	163, 315, 12, -111, -316, -111, -343, -343, -98, -241,
	-153, -282, -282, -282, -213, 84, -224, 20, 12, 55,
	55, -126, -157, -127, -102, -240, -197, 523, -202, 44,
	-200, -201, 45, -198, 46, 54, 154, -188, -111, -214,
	74, -215, -219, -175, -170, -172, -171, -342, -206, -343,
	-240, -213, -215, -129, -130, -130, -129, -130, 64, 64,
	64, 69, 64, 69, 64, -146, -245, -343, -343, -7,
	-7, -111, -248, 75, -127, -127, -151, -245, 154, 380,
	384, 385, -293, -338, 106, 130, 29, 74, 342, 99,
	-336, 162, -337, 227, 123, 124, 239, 23, 39, 85,
	84, 85, 84, 85, 84, -234, 473, 130, -41, -40,
	-288, -288, 92, -319, 223, 24, -149, 74, 74, 74,
	-84, 567, 92, 83, -3, 78, -111, 83, 17, -277,
	-175, 259, 148, -303, -207, -307, -309, -149, -113, -342,
	-112, -114, -118, 152, 153, -176, -149, -104, 272, 280,
	83, -108, 87, -321, 75, 263, 342, 263, -149, -77,
	-45, -149, -230, -230, 31, -319, -124, -117, -342, -343,
	-267, -267, -267, -272, -267, 303, -267, 303, -267, -343,
	-343, 84, -343, 20, -343, -88, 422, -111, 84, 84,
	-343, 83, 83, -111, -343, -343, -154, 20, -154, -154,
	-343, 87, -149, -157, -181, 14, -194, 49, 321, -204,
	-203, 53, 45, -201, 17, 47, 17, 28, -214, 84,
	138, 84, -343, -343, 84, 55, 206, -343, -157, -140,
	-139, 74, 75, -141, 74, -139, 64, 64, -209, -343,
	-343, 84, -212, -127, -157, -157, 206, 106, -342, -115,
	-123, -113, 10, 90, 90, -319, 124, 124, -149, 83,
	-269, 90, -269, 92, 92, 473, 29, 79, 80, 81,
	29, 76, 77, -149, -149, -149, -149, -308, 83, 17,
	-111, 83, 138, 85, -207, -207, 260, -171, -342, 85,
	-343, 84, -275, 436, 439, -111, -119, -119, -209, 85,
	-315, 436, -320, -240, -240, -240, -240, -116, -269, -111,
	-111, -188, 90, -111, -111, 92, 92, -343, -342, 64,
	16, 14, -342, -342, -248, -181, -182, 15, 17, -195,
	51, -193, 50, -193, -203, 17, 17, 90, 17, 90,
	124, -219, -111, -172, 55, -9, -240, -170, -240, -183,
	-111, 83, -111, -120, -339, -157, -157, -111, -163, 425,
	102, 104, 103, 426, 427, 428, 429, 430, 431, 83,
	-111, 85, 85, -209, -307, -55, 85, -207, 92, 85,
	-171, -91, -342, 256, -337, -309, 440, 440, -343, 23,
	-314, -313, -241, 83, 75, -92, 148, 436, -343, -343,
	-343, -343, -343, 85, 85, -210, -343, -240, 227, 17,
	17, -210, -210, -156, -182, -111, -168, -196, 52, 74,
	109, 90, 90, 90, 10, -170, 206, -188, -207, -134,
	349, -183, -343, -207, 85, 23, 85, 569, 124, 85,
	256, -9, 84, 138, -207, -149, -343, 434, 71, 437,
	84, -343, -343, -343, 74, 109, -215, -240, 85, -343,
	-342, -188, 85, -192, -9, 83, -3, -343, -75, 436,
	-313, -292, -241, 90, 92, 85, 60, 435, 438, -240,
	227, -248, -135, -133, -240, 487, -328, -329, 74, -338,
	-335, 106, 130, 99, -336, 115, 116, -75, -111, 83,
	-76, 271, 527, -321, 60, -343, 84, 20, -260, -57,
	497, -329, 74, 11, 10, 106, 90, 85, -207, 232,
	-315, 436, -133, 494, -270, -120, -327, 240, 235, 238,
	30, -327, -4, 568, 85, 273, 437, -56, 24, -134,
	234, 29, 106, 92, -4, 438, 497, -120, -137, -136,
	-138, 531, 106, 29, -136, -138, 74, -120, 74, 446,
	531,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 736,
	736, 736, 0, 736, 0, 0, 736, -2, -2, 736,
	1184, 0, 736, 0, 0, -2, 668, 670, 0, 672,
	-2, 0, 0, 681, 1650, 1650, 731, 0, 0, 0,
	0, 0, 736, 736, 736, 736, 1045, 48, 736, 0,
	83, 84, 687, 688, 689, 63, 0, 1648, 1, 3,
	69, 73, 0, 0, 0, 56, 1054, 0, 76, 0,
	0, 740, 0, 738, 0, 1167, 736, 736, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 0,
	152, 515, 455, 498, 453, 484, -2, 446, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	458, 348, 348, 0, 0, -2, 446, 446, 446, 0,
	0, 0, 481, 1169, 401, 348, 348, 0, 348, 348,
	348, 348, 0, 0, 348, 348, 348, 348, 348, 348,
	348, 348, 348, 348, 348, 348, 348, 348, 348, 1071,
	151, 1185, 1182, 1183, 38, 39, 40, 1333, 1334, 1335,
	1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345,
	1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355,
	1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365,
	1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375,
	1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385,
	1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395,
	1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405,
	1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415,
	1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425,
	1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435,
	1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445,
	1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455,
	1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465,
	1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475,
	1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485,
	1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505,
	1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515,
	1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525,
	1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535,
	1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545,
	1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555,
	1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565,
	1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575,
	1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585,
	1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595,
	1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605,
	1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615,
	1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625,
	1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635,
	1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645,
	1646, 1647, 0, 1161, 0, 598, 837, 0, 659, 659,
	0, 659, 659, 659, 659, 0, 0, 0, 610, 0,
	0, 0, 0, 656, 0, 0, 629, 631, 0, 656,
	0, 662, 0, 643, 659, 1651, 1651, 1651, 1152, 0,
	653, 651, 665, 666, 648, 649, 667, 671, 0, 676,
	679, 1178, 1179, 0, 694, 47, 1416, 686, 699, 700,
	0, 732, 733, 43, 933, 0, 859, 863, 874, 887,
	888, 889, 890, 891, 893, 894, 0, 0, 0, 0,
	899, 900, 0, 0, 0, 0, 0, 914, 0, 0,
	0, 0, 0, 1026, 0, 990, 990, 950, 990, 992,
	992, 0, 0, 0, 1647, 1445, 1446, 1447, 1465, 1548,
	1594, 1442, 1443, 1444, 1035, 0, 0, 0, 0, 0,
	0, 256, 257, 932, 1141, 992, 992, 992, 992, -2,
	-2, 203, 204, 205, 206, 207, 208, 209, 0, 199,
	0, 261, 262, 258, 259, 260, 916, 917, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 243, 244, 245, 246,
	247, 248, 249, 250, 251, 252, 253, 254, 255, 1650,
	0, 709, 0, 0, 0, 0, 0, 1054, 0, 1046,
	1045, 61, 0, 736, -2, 0, 0, 0, 0, 45,
	0, 50, 796, 75, 74, 1093, 0, 0, 0, 57,
	1055, 65, 67, 1056, 0, 741, 742, 0, 772, 776,
	0, 737, 0, 0, 1168, 1167, 1167, 100, 0, 1590,
	1145, -2, -2, 0, 0, 1180, 1181, 1154, -2, 1188,
	1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198,
	1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208,
	1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218,
	1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228,
	1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238,
	1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248,
	1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258,
	1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268,
	1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278,
	1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288,
	1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298,
	1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308,
	1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318,
	1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328,
	1329, 1330, 1331, 1332, -2, 0, 0, 161, 162, 0,
	41, 374, 0, 157, 0, 368, 318, 1071, 0, 0,
	0, 0, 0, 736, 0, 1162, 142, 143, 149, 150,
	348, 348, 495, 0, 0, 151, 151, 462, 463, 464,
	0, 0, -2, 372, 0, 447, 0, 0, 362, 362,
	366, 364, 365, 0, 0, 0, 0, 0, 0, 475,
	0, 476, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 576, 0, 349, 0, 493, 494, 402, 0, 0,
	0, 0, 473, 474, 0, 0, 1170, 1171, 0, 0,
	348, 348, 0, 0, 0, 0, 348, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 141, 1084, 0, 0, 0, -2,
	0, 590, 0, 0, 0, 1163, 1163, 0, 597, 0,
	599, 600, 0, 0, 601, 0, 656, 656, 654, 655,
	603, 604, 605, 606, 659, 0, 0, 357, 358, 359,
	656, 659, 0, 659, 659, 659, 659, 656, 656, 656,
	659, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1651, 1651, 1651, 662, 659, 0, 639, 0, 640, 641,
	644, 645, 1652, 1653, 1200, 646, 647, 1153, 669, 677,
	680, 697, 695, 696, 698, 690, 691, 692, 693, 0,
	711, 712, 717, 0, 0, 0, 0, 723, 724, 725,
	0, 0, 728, 729, 730, 0, 0, 0, 0, 857,
	0, 0, 922, 923, 924, 925, 926, 927, 928, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 895,
	896, 897, 898, 901, 0, 0, 0, 906, 907, 0,
	0, 0, 0, 0, 746, 0, 1027, 0, 948, 0,
	949, 951, 952, 0, 953, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1173, 129, 0, 756, 0,
	0, 756, 756, 0, 0, 193, 194, 195, 196, 210,
	211, 212, 213, 214, 263, 1035, 0, 932, 0, 0,
	44, 701, 702, 0, 820, 1173, 0, 0, 752, 0,
	55, 64, 66, 1054, 59, 1054, 0, 758, 0, 0,
	-2, -2, 759, 765, 766, 767, 768, 769, 52, 1649,
	53, 0, 72, 0, 46, 0, 0, 0, 0, 330,
	1096, 0, 0, 1047, 1048, 1051, 0, 773, 777, 0,
	779, 780, 0, 739, 0, 98, 0, 836, 0, 0,
	0, 1590, 1151, 0, 102, 103, 0, 0, 0, 336,
	1156, 1157, 1158, -2, 355, 0, 336, 325, 269, 270,
	271, 318, 273, 318, 318, 318, 318, 330, 330, 330,
	330, 301, 302, 303, 304, 305, 0, 0, 288, 318,
	318, 318, 318, 308, 309, 310, 311, 312, 313, 314,
	315, 274, 275, 276, 277, 278, 279, 280, 281, 282,
	320, 320, 320, 322, 322, 0, 42, 0, 340, 0,
	1051, 0, 1084, 1165, 1175, 0, 0, 0, 1165, 120,
	0, 0, 496, 526, 456, 485, 497, 0, 459, 460,
	-2, 0, 0, 446, 0, 448, 0, 356, 0, -2,
	0, 366, 0, 362, 366, 363, 366, 354, 367, 477,
	478, 479, 0, 556, 806, 0, 0, 0, 0, 0,
	562, 563, 564, 0, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 486, 487, 488, 489, 490, 491,
	492, 0, 0, 448, 0, 482, 0, 403, 404, 0,
	0, 407, 408, 409, 410, 0, 0, 413, 414, 415,
	823, 824, 416, 440, 441, 442, 417, 418, 419, 420,
	421, 422, 423, 434, 435, 436, 437, 438, 439, 424,
	425, 426, 427, 428, 431, 0, 135, 1075, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1163,
	0, 0, 0, 0, 755, 838, 1186, 1187, 660, 661,
	0, 360, 361, 659, 659, 607, 630, 0, 659, 611,
	632, 612, 614, 613, 615, 634, 635, 659, 618, 657,
	658, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	628, 636, 637, 638, 663, 0, 0, 678, 682, 683,
	684, 685, 0, 0, 714, 94, 719, 720, 721, 722,
	734, 727, 934, 854, 855, 856, 858, 860, 0, 918,
	920, 862, 864, 929, 930, 931, 0, 0, 0, 0,
	0, 868, 872, 875, 876, 877, 878, 879, 880, 881,
	882, 883, 884, 885, 886, 892, 1005, 1006, 1007, 909,
	910, 0, 770, 0, 0, 0, 908, 0, 0, 0,
	0, 747, 748, 1033, 1030, 0, 0, 991, 993, 0,
	0, 0, 0, 969, 970, 971, 972, 973, 974, 975,
	976, 977, 978, 979, 980, 981, 982, 983, 984, 985,
	986, 987, 988, 989, 1008, 0, 0, 0, 0, 0,
	1026, 0, 911, 912, 913, 0, 1174, 0, 130, 131,
	0, 0, 0, 0, 0, 757, 1036, 0, -2, 0,
	0, 0, 0, 0, 0, 0, 1140, 0, 704, 705,
	707, 0, 840, 0, 821, 0, 0, 710, 0, 751,
	0, 754, 58, 60, 763, 764, 0, 781, 760, 54,
	49, 0, 0, 798, 1094, 330, 1116, 0, 334, 335,
	1057, 1058, 0, 1050, 1052, 1053, 77, 778, 774, 0,
	852, 0, 0, 835, 0, 784, 786, 787, 788, 818,
	0, 791, 0, 0, 0, 0, 0, 96, 837, 1146,
	101, 0, 0, 106, 107, 1147, 1148, 1149, 1150, 0,
	515, -2, 398, 163, 165, 166, 167, 158, -2, 328,
	326, 327, 272, 330, 330, 295, 296, 297, 298, 299,
	300, 0, 0, 289, 290, 291, 292, 283, 0, 284,
	285, 286, 0, 287, 373, 0, 1059, 341, 342, 344,
	348, 0, 0, 0, 369, 370, 0, 1075, 0, 0,
	0, 1176, 1175, 1175, 1175, 0, 153, 154, 155, 156,
	551, 0, 0, 527, 549, 550, 151, 0, 0, 159,
	450, 449, 0, 583, 0, 371, 0, 0, 366, 366,
	351, 352, 480, 0, 0, 558, 559, 560, 561, 0,
	0, 0, 448, 450, 336, 0, 405, 406, 411, 412,
	429, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 510, 511, 512, 513, 514, 1072, 1073, 1074,
	0, 0, 591, 0, 0, 390, 92, 1164, 596, 656,
	617, 633, 656, 609, 616, 642, 674, 718, 0, 0,
	0, 0, 726, 0, 861, 919, 921, 865, 0, 869,
	873, 0, 0, 0, 0, 0, 0, 0, 915, 939,
	940, 0, 0, 1045, 0, 1031, 0, 0, 947, 994,
	0, 0, 0, 0, 0, 958, 959, 960, 961, 962,
	0, 964, 0, 966, 967, 0, 0, 968, 935, 0,
	0, 756, 0, 995, 996, 997, 998, 999, 1036, 703,
	706, 708, 794, 841, 842, 0, 0, 0, 0, 822,
	1172, 749, 750, 753, -2, 0, 0, 1038, 0, 0,
	781, 852, 782, 0, 761, 51, 797, 0, 1098, 1097,
	1110, 1123, 331, 332, 333, 1049, 0, 1054, 0, 1134,
	0, 0, 1126, 0, 0, 0, 0, 0, 0, 0,
	0, 825, 0, 0, 828, 0, 0, 0, 0, 819,
	0, 0, 0, 0, 0, 0, -2, 0, 0, 90,
	91, 0, 0, 0, 104, 105, 0, 0, 111, 337,
	338, 144, 151, 400, 164, 380, 0, 0, 268, 329,
	293, 294, 0, 316, 0, 0, 0, 393, 116, 1063,
	1062, 348, 348, 343, 0, 346, 0, 1177, 319, 0,
	134, 0, 0, 0, 0, 0, 140, 521, 0, 0,
	528, 0, 0, 0, 454, 0, 465, 466, 0, 555,
	582, 0, 587, 340, 0, 350, 353, 807, 0, 0,
	467, 0, 450, 471, 472, 483, 432, 433, 430, 0,
	0, 1085, 1086, 1091, 1089, 1090, 121, 503, 505, 504,
	508, 0, 0, 501, 0, 390, 1059, 0, 595, 391,
	392, 659, 659, 713, 95, 0, 716, 0, 0, 0,
	866, 870, 771, 0, 0, 318, 318, 1013, 318, 322,
	1016, 318, 1018, 318, 1021, 318, 1024, 1025, 0, 0,
	0, 0, 1028, 946, 1034, 0, 0, 0, 0, 957,
	0, 0, 0, 0, 132, 133, 936, 937, 0, 1037,
	843, 848, 848, 848, 0, 0, 0, 1159, 1160, 1039,
	1040, 852, 1041, 783, 762, 799, 1116, 0, 1109, 0,
	-2, 1118, 0, 0, 0, 1124, 775, 78, 853, 81,
	0, 1134, 1142, 0, 1125, 1136, 1138, 0, 0, 0,
	1130, 0, 852, 785, 814, 816, 0, 811, 826, 827,
	829, 0, 831, 0, 833, 834, 796, 790, 792, 0,
	0, 0, 98, 0, 852, 852, 97, 0, 839, 108,
	109, 110, 399, 168, 173, 0, 0, 0, 178, 0,
	180, 0, 381, 0, 265, 267, 0, 0, 171, 330,
	0, 330, 0, 323, 0, 382, 394, 0, 1060, 1061,
	0, 0, 345, 347, 0, 1166, 136, 0, 0, 0,
	524, 0, 552, 0, 0, 0, 0, 0, 0, 160,
	451, 0, 0, 339, 0, 0, 580, 577, 468, 0,
	197, 198, 200, 0, 0, 470, 796, 1076, 1077, 1078,
	0, 1088, 1092, 124, 0, 0, 0, 0, 592, 593,
	594, 93, 602, 608, 715, 735, 867, 871, 0, 903,
	1011, 330, 1014, 1015, 1017, 1019, 1020, 1022, 1023, 904,
	905, 0, 942, 0, 944, 1054, 0, 1032, 0, 0,
	956, 0, 0, 0, 965, 938, 0, 0, 0, 0,
	820, -2, 62, 1041, 1043, 0, 1103, 1101, 1101, 1111,
	1112, 0, 0, 1119, 0, 0, 0, 0, 82, 0,
	0, 0, 1139, 0, 0, 0, 0, 99, 1045, 808,
	815, 0, 0, 809, 0, 810, 830, 832, 789, -2,
	793, 0, 852, 852, 88, 89, 0, 174, 0, 176,
	191, 192, 0, 179, 181, 182, 264, 266, 0, 0,
	306, 317, 307, 0, 0, 395, 1064, 1065, 1066, 1067,
	1068, 1069, 1070, 796, 137, 138, 139, 516, 0, 526,
	0, 0, 0, 519, 0, 457, 0, 586, 0, 0,
	557, 0, 565, 0, 0, 0, 201, 202, 0, 1087,
	502, 0, 122, 123, 0, 0, 507, 1000, 1012, 0,
	0, 0, 1029, 0, 0, 0, 0, 963, 0, 849,
	0, 0, 0, 0, 840, 1043, 80, 0, 0, 1106,
	0, 1099, 1102, 1100, 1113, 0, 0, 1120, 0, 1122,
	0, 1143, 1144, 1137, 0, 1129, 1132, 1128, 1131, 1054,
	812, 0, 817, 0, 0, 1045, 87, 0, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 324, 0, 0, 0, 517, 0, 529, 520,
	584, 585, 0, 588, 375, 581, 578, 579, 469, 0,
	125, 126, 0, 0, 0, 0, 0, 0, 941, 943,
	945, 954, 955, 1009, 1010, 0, 845, 802, 803, 850,
	851, 0, 0, 795, 79, 1044, 1042, 1095, 0, 1104,
	1105, 1114, 1115, 1121, 0, 1127, 0, 85, 0, 0,
	0, 1054, 175, 0, 185, 0, 525, 0, 528, 518,
	0, 1079, 0, 0, 0, 509, 902, 0, 0, 0,
	0, 844, 846, 847, 1107, 1108, 1135, 1133, 813, 820,
	0, 86, 376, 380, 1079, 0, 0, 589, 499, 1081,
	127, 128, 443, 444, 445, 121, 1001, 0, 1004, 804,
	805, 530, 0, 532, 0, -2, 377, 378, 0, 169,
	186, 187, 0, 0, 190, 183, 184, 117, 0, 0,
	0, 1082, 1083, 124, 1002, 531, 0, 0, 336, 0,
	541, 379, 0, 0, 0, 188, 189, 553, 0, 0,
	506, 0, 533, 534, 542, 0, 383, 385, 386, 0,
	0, 384, 522, 0, 553, 1080, 0, 0, 543, 539,
	387, 388, 389, 554, 523, 1003, 0, 535, 536, 537,
	0, 546, 547, 0, 538, 0, 0, 548, 0, 544,
	545,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 131, 3, 3, 3, 157, 149, 3,
	83, 85, 154, 152, 84, 153, 206, 155, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 570,
	139, 138, 140, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 159, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 127, 3, 160,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 128, 129, 130, 132, 133, 134, 135, 136,
	137, 141, 142, 143, 144, 145, 146, 147, 148, 150,
	151, 156, 158, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:493
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:498
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:499
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:503
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:539
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:545
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:549
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:553
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:558
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:562
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:568
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:574
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:580
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:584
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:589
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:593
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:599
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:603
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:609
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:615
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:619
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:623
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:646
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:652
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:657
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:663
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:670
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:676
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:683
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:687
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:693
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:697
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:701
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:705
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:709
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:715
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:719
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:724
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:728
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:734
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:738
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:743
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:749
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:755
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:762
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:768
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:776
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:780
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:788
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:800
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:812
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:816
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:822
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:828
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:832
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:836
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:840
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:845
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:846
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:850
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:854
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:860
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:864
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:870
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:874
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:879
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:883
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:889
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:895
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:899
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:905
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:909
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:915
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:919
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:923
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:929
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:933
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:937
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:941
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:947
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:951
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:957
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:963
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:970
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:979
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:983
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:990
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:994
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:999
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1003
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1009
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1014
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1019
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1025
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1030
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1036
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1041
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1045
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1051
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1055
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1061
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1067
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1074
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1081
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1086
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1091
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1096
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1103
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1110
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1121
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1128
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1132
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1138
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1142
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1146
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1150
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 151:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1156
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1160
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1166
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1170
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1176
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1180
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1187
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1191
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1197
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1201
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1207
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1212
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1217
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1221
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1226
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1230
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1234
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1245
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1254
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1263
		{
			yyVAL.str = ""
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1267
		{
			yyVAL.str = ""
		}
	case 172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1276
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1280
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1286
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1292
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1297
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1302
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1307
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1312
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1317
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1322
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1326
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1333
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1337
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1342
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1346
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1351
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1357
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1363
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1368
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1375
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1382
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1386
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1390
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1394
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1405
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1412
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1416
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1422
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1426
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1430
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1434
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1438
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1442
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1446
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1451
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1455
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1459
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1463
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1467
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1474
		{
			yyVAL.str = Armscii8Str
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1478
		{
			yyVAL.str = ASCIIStr
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1482
		{
			yyVAL.str = Big5Str
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1486
		{
			yyVAL.str = UBinaryStr
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1490
		{
			yyVAL.str = Cp1250Str
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1494
		{
			yyVAL.str = Cp1251Str
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1498
		{
			yyVAL.str = Cp1256Str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1502
		{
			yyVAL.str = Cp1257Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1506
		{
			yyVAL.str = Cp850Str
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1510
		{
			yyVAL.str = Cp852Str
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1514
		{
			yyVAL.str = Cp866Str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1518
		{
			yyVAL.str = Cp932Str
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1522
		{
			yyVAL.str = Dec8Str
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1526
		{
			yyVAL.str = EucjpmsStr
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1530
		{
			yyVAL.str = EuckrStr
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1534
		{
			yyVAL.str = Gb18030Str
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1538
		{
			yyVAL.str = Gb2312Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1542
		{
			yyVAL.str = GbkStr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1546
		{
			yyVAL.str = Geostd8Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1550
		{
			yyVAL.str = GreekStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1554
		{
			yyVAL.str = HebrewStr
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1558
		{
			yyVAL.str = Hp8Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1562
		{
			yyVAL.str = Keybcs2Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1566
		{
			yyVAL.str = Koi8rStr
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1570
		{
			yyVAL.str = Koi8uStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1574
		{
			yyVAL.str = Latin1Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1578
		{
			yyVAL.str = Latin2Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1582
		{
			yyVAL.str = Latin5Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1586
		{
			yyVAL.str = Latin7Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1590
		{
			yyVAL.str = MacceStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1594
		{
			yyVAL.str = MacromanStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1598
		{
			yyVAL.str = SjisStr
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1602
		{
			yyVAL.str = Swe7Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1606
		{
			yyVAL.str = Tis620Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1610
		{
			yyVAL.str = Ucs2Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1614
		{
			yyVAL.str = UjisStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1618
		{
			yyVAL.str = Utf16Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1622
		{
			yyVAL.str = Utf16leStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1626
		{
			yyVAL.str = Utf32Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1630
		{
			yyVAL.str = Utf8Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1634
		{
			yyVAL.str = Utf8mb4Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1644
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1648
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1652
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1659
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1663
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1667
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1673
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1677
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1681
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1685
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1691
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1702
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1707
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1713
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1717
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1721
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1725
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1729
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1733
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1737
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1741
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1745
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1751
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1757
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1763
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1769
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1775
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1783
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1787
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1791
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1795
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1799
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1805
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1809
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1813
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1817
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1821
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1825
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1829
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1833
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1837
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1841
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1845
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1849
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1853
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1857
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 307:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1862
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1868
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1872
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1876
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1880
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1884
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1888
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1892
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1896
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1902
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1907
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 318:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1912
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1916
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1921
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 321:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1925
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1933
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1937
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 324:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1943
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1951
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1955
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1959
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1964
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1968
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1973
		{
			yyVAL.str = ""
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1977
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1981
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1985
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1989
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1994
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 336:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2000
		{
			yyVAL.str = ""
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2004
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2008
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 339:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2015
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2020
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2024
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2030
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2034
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2040
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2044
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2049
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2053
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2059
		{
			yyVAL.str = ""
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2063
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 350:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2069
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2073
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2077
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2081
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2085
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2090
		{
			yyVAL.str = ""
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2094
		{
			yyVAL.str = yyDollar[2].str
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2100
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2104
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2108
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2115
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2119
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2124
		{
			yyVAL.str = "key"
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2128
		{
			yyVAL.str = yyDollar[1].str
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2134
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2138
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2143
		{
			yyVAL.str = ""
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2147
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2153
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2157
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2163
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2169
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2173
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2179
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2183
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2189
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2195
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2199
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2203
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2207
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2212
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2216
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2222
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2228
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2234
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2240
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2244
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2248
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2252
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2256
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2261
		{
			yyVAL.str = ""
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2265
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2269
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2274
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2278
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2282
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2287
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2291
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2297
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2301
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2305
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2311
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2315
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2321
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2325
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2329
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2333
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2337
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2341
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2345
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2349
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2353
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2357
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2361
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2365
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2369
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2373
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2377
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2381
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2385
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2389
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2393
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2397
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2401
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2405
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2409
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2413
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2417
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2421
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2425
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2429
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2434
		{
			yyVAL.str = ""
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2438
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2442
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2461
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2465
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2469
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2474
		{
			yyVAL.str = ""
		}
	case 448:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2480
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2484
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2489
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2493
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2498
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2502
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2506
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2510
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2514
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 457:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2518
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2524
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2528
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2532
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2538
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2542
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2546
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2550
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2554
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2558
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2562
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2566
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2570
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2574
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2578
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2582
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2586
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2590
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2594
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2598
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2602
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2606
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2610
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2614
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2618
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2622
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2626
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2632
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2636
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2642
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2646
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2650
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2654
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2658
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2662
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2666
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2670
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2674
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2680
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2687
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2694
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2701
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2707
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2711
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2718
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2725
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2737
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2747
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2751
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2755
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2768
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2778
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2782
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2793
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2800
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2807
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2814
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2821
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2828
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2832
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2841
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2849
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2858
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2865
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2873
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2877
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2886
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2897
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2901
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2906
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2910
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2915
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:2919
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:2925
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:2931
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:2937
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2941
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2947
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2951
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2957
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2963
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2969
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2975
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2981
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2985
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2989
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2993
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:2999
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3005
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3011
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3015
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3019
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3025
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3029
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3034
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3038
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3043
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3047
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3053
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3057
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3061
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3065
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3069
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3073
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3077
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3081
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3085
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3089
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3093
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3097
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3101
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3105
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3109
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3113
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3117
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3121
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3125
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3129
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3133
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3137
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3142
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3146
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3150
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3157
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3161
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3167
		{
			yyVAL.partDefUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
		}
	case 583:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3172
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3176
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3183
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3190
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3199
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3205
		{
			yyVAL.str = ""
		}
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3209
		{
			yyVAL.str = ""
		}
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3215
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3221
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3225
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 593:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3231
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3235
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3244
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3248
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3254
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3258
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3263
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3269
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3273
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3277
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3281
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3285
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3289
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3293
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3297
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3301
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3305
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3309
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3313
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3317
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3321
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3325
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3329
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3333
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3337
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3341
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3345
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3349
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3353
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3357
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3361
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3365
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3369
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3373
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3377
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3381
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3385
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3389
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3393
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3397
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3401
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3405
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3409
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3413
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3418
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3422
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3426
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3431
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3435
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3439
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3443
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3448
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3462
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3466
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3470
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3476
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3480
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3486
		{
			yyVAL.str = ""
		}
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3490
		{
			yyVAL.str = "extended "
		}
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3496
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3500
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3506
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3510
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3516
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3520
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3524
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 659:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3530
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3534
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3538
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3544
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3548
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3554
		{
			yyVAL.empty = struct{}{}
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3558
		{
			yyVAL.empty = struct{}{}
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3562
		{
			yyVAL.empty = struct{}{}
		}
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3568
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3572
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3576
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3582
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3586
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3592
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3598
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3602
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3607
		{
			yyVAL.empty = struct{}{}
		}
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3609
		{
			yyVAL.empty = struct{}{}
		}
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3612
		{
			yyVAL.empty = struct{}{}
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3614
		{
			yyVAL.empty = struct{}{}
		}
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3619
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3625
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3630
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3634
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3638
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3642
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3646
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3650
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3656
		{
			yyVAL.str = yyDollar[1].str
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3660
		{
			yyVAL.str = yyDollar[1].str
		}
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3664
		{
			yyVAL.str = yyDollar[1].str
		}
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3670
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3674
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3678
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3682
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3687
		{
			yyVAL.str = ""
		}
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3691
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3695
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3701
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3705
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3711
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3715
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3721
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3727
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3731
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3737
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3743
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3747
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3751
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3755
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3761
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3767
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3773
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3777
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3781
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3785
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3789
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3793
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3799
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3803
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3809
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3813
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3817
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3821
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3825
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3829
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3833
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3837
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3841
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3845
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3849
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3853
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 731:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3858
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3862
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3866
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3871
		{
			yyVAL.str = ""
		}
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3875
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 736:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3880
		{
			setAllowComments(yylex, true)
		}
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3884
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3890
		{
			yyVAL.strs = nil
		}
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3894
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3900
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3904
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3908
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3913
		{
			yyVAL.str = ""
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3917
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3921
		{
			yyVAL.str = SQLCacheStr
		}
	case 746:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3926
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3930
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3934
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3940
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, Statement: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3944
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, StatementIdentifier: NewColIdentWithAt(string(yyDollar[5].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3950
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3955
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3959
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3965
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: yyDollar[2].strs, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3969
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: yyDollar[2].strs, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3974
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3978
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3983
		{
			yyVAL.strs = nil
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3987
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3991
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3995
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3999
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4005
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4009
		{
			yyVAL.str = SQLCacheStr
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4013
		{
			yyVAL.str = DistinctStr
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4017
		{
			yyVAL.str = DistinctStr
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4021
		{
			yyVAL.str = StraightJoinHint
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4025
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4029
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4035
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4039
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4045
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4049
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4053
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4057
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4062
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4066
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4070
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4077
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4082
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4086
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4092
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4098
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4102
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4112
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4116
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4120
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4124
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4130
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4134
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4140
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4144
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4149
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4153
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4159
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4163
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4169
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4173
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4179
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4183
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4187
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4191
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4197
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4201
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 808:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4214
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4218
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4222
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4226
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4232
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 813:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4234
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4238
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4240
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4244
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4246
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4249
		{
			yyVAL.empty = struct{}{}
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4251
		{
			yyVAL.empty = struct{}{}
		}
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4254
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4258
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4262
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4269
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4275
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4279
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4283
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4289
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4295
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4299
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4303
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4307
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4313
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4317
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4327
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4331
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4337
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4341
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4347
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 840:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4352
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4356
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4362
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4366
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 844:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4372
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4376
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4380
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4384
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4389
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4393
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4397
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4401
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4407
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4411
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4418
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4422
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4426
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4430
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4434
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4438
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4445
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4449
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4453
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4457
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4463
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4467
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4471
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4475
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4479
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4483
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4487
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4491
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4495
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4499
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4503
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4509
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4513
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4517
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4521
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4525
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4529
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4533
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4537
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4541
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4545
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4549
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4553
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4557
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4563
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4567
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4571
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4575
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4579
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4583
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4587
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4591
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4595
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4599
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4603
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4607
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4611
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4615
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4619
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4623
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4627
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4631
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4635
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4643
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4647
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4655
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4659
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4665
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4669
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4673
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4679
		{
			yyVAL.str = ""
		}
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4683
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4689
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4693
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4700
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4704
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4708
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4712
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4718
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4722
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4726
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4730
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4734
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4738
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4742
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4748
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4752
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4756
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4763
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4769
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4773
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 935:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4783
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4787
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4791
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4795
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4805
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4809
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4813
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4817
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4821
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4825
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4829
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4833
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4837
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4841
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4852
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4856
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4862
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4866
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4871
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4875
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4879
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4883
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4887
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4891
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4895
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4899
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4903
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4907
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4911
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4915
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4919
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4923
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4927
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4931
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4937
		{
		}
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4939
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4943
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4947
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4951
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4955
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4959
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4963
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4967
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4971
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4975
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4979
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4985
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4989
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4993
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4997
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5001
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5005
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5009
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5013
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5017
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:5027
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:5031
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:5035
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5045
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5049
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5053
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5057
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5061
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5067
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5071
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5075
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5079
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5083
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5089
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5093
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5097
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1008:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5103
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5107
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5111
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5117
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5121
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5125
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5129
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5133
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5139
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5143
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5147
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5151
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5155
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5159
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5163
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5167
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5171
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5175
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5181
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5185
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5190
		{
			yyVAL.str = string("")
		}
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5194
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5200
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5204
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1032:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5210
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5215
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5219
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5225
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5229
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5233
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5239
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5248
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5252
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5258
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5262
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5267
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5271
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5276
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5280
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5286
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5292
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5296
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5302
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5307
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5311
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5315
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5320
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5324
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5330
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5334
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5338
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5343
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5347
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5351
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5355
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5359
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5366
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5370
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5374
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5378
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5384
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5388
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5392
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5397
		{
			yyVAL.str = ""
		}
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5401
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5405
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5409
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1075:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5414
		{
			yyVAL.str = ""
		}
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5418
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5424
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5428
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1079:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5433
		{
			yyVAL.str = ""
		}
	case 1080:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5437
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1081:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5442
		{
			yyVAL.str = "cascaded"
		}
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5446
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5450
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1084:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5455
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5459
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5465
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5471
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5477
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5486
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5490
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1091:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5495
		{
			yyVAL.str = ""
		}
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5499
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5505
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5509
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5515
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5519
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5523
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5528
		{
			yyVAL.str = ""
		}
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5532
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5536
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5541
		{
			yyVAL.str = ""
		}
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5545
		{
			yyVAL.str = " header"
		}
	case 1103:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5550
		{
			yyVAL.str = ""
		}
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5554
		{
			yyVAL.str = " manifest on"
		}
	case 1105:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5558
		{
			yyVAL.str = " manifest off"
		}
	case 1106:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5563
		{
			yyVAL.str = ""
		}
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5567
		{
			yyVAL.str = " overwrite on"
		}
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5571
		{
			yyVAL.str = " overwrite off"
		}
	case 1109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5577
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1110:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5582
		{
			yyVAL.str = ""
		}
	case 1111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5586
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5592
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5596
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5602
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5606
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1116:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5611
		{
			yyVAL.str = ""
		}
	case 1117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5615
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5621
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5625
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5631
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5635
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5639
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1123:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5644
		{
			yyVAL.str = ""
		}
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5648
		{
			yyVAL.str = " optionally"
		}
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5661
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5665
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5669
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5673
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5677
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5683
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5687
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5691
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1133:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5695
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1134:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5700
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5704
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:5710
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5714
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5720
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5724
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5730
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5735
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5745
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5749
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:5755
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:5761
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5765
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5771
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5775
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5779
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5783
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5787
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5795
		{
			yyVAL.str = "charset"
		}
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5805
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5809
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5813
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5822
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5824
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5827
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5829
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5832
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:5834
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5837
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5839
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5842
		{
			yyVAL.empty = struct{}{}
		}
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5844
		{
			yyVAL.empty = struct{}{}
		}
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5846
		{
			yyVAL.empty = struct{}{}
		}
	case 1172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5850
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5855
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5859
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5864
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5866
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:5870
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5876
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5880
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5887
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5893
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5897
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1184:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5903
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5907
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5914
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6399
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6408
		{
			decNesting(yylex)
		}
	case 1650:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6413
		{
			skipToEnd(yylex)
		}
	case 1651:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6418
		{
			skipToEnd(yylex)
		}
	case 1652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6422
		{
			skipToEnd(yylex)
		}
	case 1653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6426
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
