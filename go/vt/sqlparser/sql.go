// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"

	"vitess.io/vitess/go/ptr"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func markBindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const MULTIPLE_TEXT_LITERAL = 57347
const FUNCTION_CALL_NON_KEYWORD = 57348
const STRING_TYPE_PREFIX_NON_KEYWORD = 57349
const LEX_ERROR = 57350
const UNION = 57351
const SELECT = 57352
const STREAM = 57353
const VSTREAM = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const ORDER = 57362
const BY = 57363
const LIMIT = 57364
const OFFSET = 57365
const FOR = 57366
const ALL = 57367
const DISTINCT = 57368
const AS = 57369
const EXISTS = 57370
const ASC = 57371
const DESC = 57372
const INTO = 57373
const DUPLICATE = 57374
const DEFAULT = 57375
const SET = 57376
const LOCK = 57377
const UNLOCK = 57378
const KEYS = 57379
const DO = 57380
const CALL = 57381
const DISTINCTROW = 57382
const PARSER = 57383
const GENERATED = 57384
const ALWAYS = 57385
const OUTFILE = 57386
const S3 = 57387
const DATA = 57388
const LOAD = 57389
const LINES = 57390
const TERMINATED = 57391
const ESCAPED = 57392
const ENCLOSED = 57393
const DUMPFILE = 57394
const CSV = 57395
const HEADER = 57396
const MANIFEST = 57397
const OVERWRITE = 57398
const STARTING = 57399
const OPTIONALLY = 57400
const VALUES = 57401
const LAST_INSERT_ID = 57402
const NEXT = 57403
const VALUE = 57404
const SHARE = 57405
const MODE = 57406
const SQL_NO_CACHE = 57407
const SQL_CACHE = 57408
const SQL_CALC_FOUND_ROWS = 57409
const JOIN = 57410
const STRAIGHT_JOIN = 57411
const LEFT = 57412
const RIGHT = 57413
const INNER = 57414
const OUTER = 57415
const CROSS = 57416
const NATURAL = 57417
const USE = 57418
const FORCE = 57419
const ON = 57420
const USING = 57421
const INPLACE = 57422
const COPY = 57423
const INSTANT = 57424
const ALGORITHM = 57425
const NONE = 57426
const SHARED = 57427
const EXCLUSIVE = 57428
const SUBQUERY_AS_EXPR = 57429
const STRING = 57430
const ID = 57431
const AT_ID = 57432
const AT_AT_ID = 57433
const HEX = 57434
const NCHAR_STRING = 57435
const INTEGRAL = 57436
const FLOAT = 57437
const DECIMAL = 57438
const HEXNUM = 57439
const COMMENT = 57440
const COMMENT_KEYWORD = 57441
const BITNUM = 57442
const BIT_LITERAL = 57443
const COMPRESSION = 57444
const VALUE_ARG = 57445
const LIST_ARG = 57446
const OFFSET_ARG = 57447
const JSON_PRETTY = 57448
const JSON_STORAGE_SIZE = 57449
const JSON_STORAGE_FREE = 57450
const JSON_CONTAINS = 57451
const JSON_CONTAINS_PATH = 57452
const JSON_EXTRACT = 57453
const JSON_KEYS = 57454
const JSON_OVERLAPS = 57455
const JSON_SEARCH = 57456
const JSON_VALUE = 57457
const EXTRACT = 57458
const NULL = 57459
const UNKNOWN = 57460
const TRUE = 57461
const FALSE = 57462
const OFF = 57463
const DISCARD = 57464
const IMPORT = 57465
const ENABLE = 57466
const DISABLE = 57467
const TABLESPACE = 57468
const VIRTUAL = 57469
const STORED = 57470
const BOTH = 57471
const LEADING = 57472
const TRAILING = 57473
const KILL = 57474
const EMPTY_FROM_CLAUSE = 57475
const LOWER_THAN_CHARSET = 57476
const CHARSET = 57477
const UNIQUE = 57478
const KEY = 57479
const EXPRESSION_PREC_SETTER = 57480
const OR = 57481
const XOR = 57482
const AND = 57483
const NOT = 57484
const BETWEEN = 57485
const CASE = 57486
const WHEN = 57487
const THEN = 57488
const ELSE = 57489
const END = 57490
const LE = 57491
const GE = 57492
const NE = 57493
const NULL_SAFE_EQUAL = 57494
const IS = 57495
const LIKE = 57496
const REGEXP = 57497
const RLIKE = 57498
const IN = 57499
const ASSIGNMENT_OPT = 57500
const SHIFT_LEFT = 57501
const SHIFT_RIGHT = 57502
const DIV = 57503
const MOD = 57504
const UNARY = 57505
const COLLATE = 57506
const BINARY = 57507
const UNDERSCORE_ARMSCII8 = 57508
const UNDERSCORE_ASCII = 57509
const UNDERSCORE_BIG5 = 57510
const UNDERSCORE_BINARY = 57511
const UNDERSCORE_CP1250 = 57512
const UNDERSCORE_CP1251 = 57513
const UNDERSCORE_CP1256 = 57514
const UNDERSCORE_CP1257 = 57515
const UNDERSCORE_CP850 = 57516
const UNDERSCORE_CP852 = 57517
const UNDERSCORE_CP866 = 57518
const UNDERSCORE_CP932 = 57519
const UNDERSCORE_DEC8 = 57520
const UNDERSCORE_EUCJPMS = 57521
const UNDERSCORE_EUCKR = 57522
const UNDERSCORE_GB18030 = 57523
const UNDERSCORE_GB2312 = 57524
const UNDERSCORE_GBK = 57525
const UNDERSCORE_GEOSTD8 = 57526
const UNDERSCORE_GREEK = 57527
const UNDERSCORE_HEBREW = 57528
const UNDERSCORE_HP8 = 57529
const UNDERSCORE_KEYBCS2 = 57530
const UNDERSCORE_KOI8R = 57531
const UNDERSCORE_KOI8U = 57532
const UNDERSCORE_LATIN1 = 57533
const UNDERSCORE_LATIN2 = 57534
const UNDERSCORE_LATIN5 = 57535
const UNDERSCORE_LATIN7 = 57536
const UNDERSCORE_MACCE = 57537
const UNDERSCORE_MACROMAN = 57538
const UNDERSCORE_SJIS = 57539
const UNDERSCORE_SWE7 = 57540
const UNDERSCORE_TIS620 = 57541
const UNDERSCORE_UCS2 = 57542
const UNDERSCORE_UJIS = 57543
const UNDERSCORE_UTF16 = 57544
const UNDERSCORE_UTF16LE = 57545
const UNDERSCORE_UTF32 = 57546
const UNDERSCORE_UTF8 = 57547
const UNDERSCORE_UTF8MB4 = 57548
const UNDERSCORE_UTF8MB3 = 57549
const INTERVAL = 57550
const WINDOW_EXPR = 57551
const JSON_EXTRACT_OP = 57552
const JSON_UNQUOTE_EXTRACT_OP = 57553
const CREATE = 57554
const ALTER = 57555
const DROP = 57556
const RENAME = 57557
const ANALYZE = 57558
const ADD = 57559
const FLUSH = 57560
const CHANGE = 57561
const MODIFY = 57562
const DEALLOCATE = 57563
const REVERT = 57564
const QUERIES = 57565
const SCHEMA = 57566
const TABLE = 57567
const INDEX = 57568
const VIEW = 57569
const TO = 57570
const IGNORE = 57571
const IF = 57572
const PRIMARY = 57573
const COLUMN = 57574
const SPATIAL = 57575
const FULLTEXT = 57576
const KEY_BLOCK_SIZE = 57577
const CHECK = 57578
const INDEXES = 57579
const ACTION = 57580
const CASCADE = 57581
const CONSTRAINT = 57582
const FOREIGN = 57583
const NO = 57584
const REFERENCES = 57585
const RESTRICT = 57586
const SHOW = 57587
const DESCRIBE = 57588
const EXPLAIN = 57589
const DATE = 57590
const ESCAPE = 57591
const REPAIR = 57592
const OPTIMIZE = 57593
const TRUNCATE = 57594
const COALESCE = 57595
const EXCHANGE = 57596
const REBUILD = 57597
const PARTITIONING = 57598
const REMOVE = 57599
const PREPARE = 57600
const EXECUTE = 57601
const MAXVALUE = 57602
const PARTITION = 57603
const REORGANIZE = 57604
const LESS = 57605
const THAN = 57606
const PROCEDURE = 57607
const TRIGGER = 57608
const VINDEX = 57609
const VINDEXES = 57610
const DIRECTORY = 57611
const NAME = 57612
const UPGRADE = 57613
const STATUS = 57614
const VARIABLES = 57615
const WARNINGS = 57616
const CASCADED = 57617
const DEFINER = 57618
const OPTION = 57619
const SQL = 57620
const UNDEFINED = 57621
const SEQUENCE = 57622
const MERGE = 57623
const TEMPORARY = 57624
const TEMPTABLE = 57625
const INVOKER = 57626
const SECURITY = 57627
const FIRST = 57628
const AFTER = 57629
const LAST = 57630
const VITESS_MIGRATION = 57631
const CANCEL = 57632
const RETRY = 57633
const LAUNCH = 57634
const COMPLETE = 57635
const CLEANUP = 57636
const THROTTLE = 57637
const UNTHROTTLE = 57638
const FORCE_CUTOVER = 57639
const EXPIRE = 57640
const RATIO = 57641
const VITESS_THROTTLER = 57642
const BEGIN = 57643
const START = 57644
const TRANSACTION = 57645
const COMMIT = 57646
const ROLLBACK = 57647
const SAVEPOINT = 57648
const RELEASE = 57649
const WORK = 57650
const CONSISTENT = 57651
const SNAPSHOT = 57652
const BIT = 57653
const TINYINT = 57654
const SMALLINT = 57655
const MEDIUMINT = 57656
const INT = 57657
const INTEGER = 57658
const BIGINT = 57659
const INTNUM = 57660
const REAL = 57661
const DOUBLE = 57662
const FLOAT_TYPE = 57663
const FLOAT4_TYPE = 57664
const FLOAT8_TYPE = 57665
const DECIMAL_TYPE = 57666
const NUMERIC = 57667
const TIME = 57668
const TIMESTAMP = 57669
const DATETIME = 57670
const YEAR = 57671
const CHAR = 57672
const VARCHAR = 57673
const BOOL = 57674
const CHARACTER = 57675
const VARBINARY = 57676
const NCHAR = 57677
const TEXT = 57678
const TINYTEXT = 57679
const MEDIUMTEXT = 57680
const LONGTEXT = 57681
const BLOB = 57682
const TINYBLOB = 57683
const MEDIUMBLOB = 57684
const LONGBLOB = 57685
const JSON = 57686
const JSON_SCHEMA_VALID = 57687
const JSON_SCHEMA_VALIDATION_REPORT = 57688
const ENUM = 57689
const GEOMETRY = 57690
const POINT = 57691
const LINESTRING = 57692
const POLYGON = 57693
const GEOMCOLLECTION = 57694
const GEOMETRYCOLLECTION = 57695
const MULTIPOINT = 57696
const MULTILINESTRING = 57697
const MULTIPOLYGON = 57698
const ASCII = 57699
const UNICODE = 57700
const NULLX = 57701
const AUTO_INCREMENT = 57702
const APPROXNUM = 57703
const SIGNED = 57704
const UNSIGNED = 57705
const ZEROFILL = 57706
const PURGE = 57707
const BEFORE = 57708
const CODE = 57709
const COLLATION = 57710
const COLUMNS = 57711
const DATABASES = 57712
const ENGINES = 57713
const EVENT = 57714
const EXTENDED = 57715
const FIELDS = 57716
const FULL = 57717
const FUNCTION = 57718
const GTID_EXECUTED = 57719
const KEYSPACES = 57720
const OPEN = 57721
const PLUGINS = 57722
const PRIVILEGES = 57723
const PROCESSLIST = 57724
const SCHEMAS = 57725
const TABLES = 57726
const TRIGGERS = 57727
const USER = 57728
const VGTID_EXECUTED = 57729
const VITESS_KEYSPACES = 57730
const VITESS_METADATA = 57731
const VITESS_MIGRATIONS = 57732
const VITESS_REPLICATION_STATUS = 57733
const VITESS_SHARDS = 57734
const VITESS_TABLETS = 57735
const VITESS_TARGET = 57736
const VSCHEMA = 57737
const VITESS_THROTTLED_APPS = 57738
const NAMES = 57739
const GLOBAL = 57740
const SESSION = 57741
const ISOLATION = 57742
const LEVEL = 57743
const READ = 57744
const WRITE = 57745
const ONLY = 57746
const REPEATABLE = 57747
const COMMITTED = 57748
const UNCOMMITTED = 57749
const SERIALIZABLE = 57750
const ADDDATE = 57751
const CURRENT_TIMESTAMP = 57752
const DATABASE = 57753
const CURRENT_DATE = 57754
const CURDATE = 57755
const DATE_ADD = 57756
const DATE_SUB = 57757
const NOW = 57758
const SUBDATE = 57759
const CURTIME = 57760
const CURRENT_TIME = 57761
const LOCALTIME = 57762
const LOCALTIMESTAMP = 57763
const CURRENT_USER = 57764
const UTC_DATE = 57765
const UTC_TIME = 57766
const UTC_TIMESTAMP = 57767
const SYSDATE = 57768
const DAY = 57769
const DAY_HOUR = 57770
const DAY_MICROSECOND = 57771
const DAY_MINUTE = 57772
const DAY_SECOND = 57773
const HOUR = 57774
const HOUR_MICROSECOND = 57775
const HOUR_MINUTE = 57776
const HOUR_SECOND = 57777
const MICROSECOND = 57778
const MINUTE = 57779
const MINUTE_MICROSECOND = 57780
const MINUTE_SECOND = 57781
const MONTH = 57782
const QUARTER = 57783
const SECOND = 57784
const SECOND_MICROSECOND = 57785
const YEAR_MONTH = 57786
const WEEK = 57787
const SQL_TSI_DAY = 57788
const SQL_TSI_WEEK = 57789
const SQL_TSI_HOUR = 57790
const SQL_TSI_MINUTE = 57791
const SQL_TSI_MONTH = 57792
const SQL_TSI_QUARTER = 57793
const SQL_TSI_SECOND = 57794
const SQL_TSI_MICROSECOND = 57795
const SQL_TSI_YEAR = 57796
const REPLACE = 57797
const CONVERT = 57798
const CAST = 57799
const SUBSTR = 57800
const SUBSTRING = 57801
const MID = 57802
const SEPARATOR = 57803
const TIMESTAMPADD = 57804
const TIMESTAMPDIFF = 57805
const WEIGHT_STRING = 57806
const LTRIM = 57807
const RTRIM = 57808
const TRIM = 57809
const JSON_ARRAY = 57810
const JSON_OBJECT = 57811
const JSON_QUOTE = 57812
const JSON_DEPTH = 57813
const JSON_TYPE = 57814
const JSON_LENGTH = 57815
const JSON_VALID = 57816
const JSON_ARRAY_APPEND = 57817
const JSON_ARRAY_INSERT = 57818
const JSON_INSERT = 57819
const JSON_MERGE = 57820
const JSON_MERGE_PATCH = 57821
const JSON_MERGE_PRESERVE = 57822
const JSON_REMOVE = 57823
const JSON_REPLACE = 57824
const JSON_SET = 57825
const JSON_UNQUOTE = 57826
const COUNT = 57827
const AVG = 57828
const MAX = 57829
const MIN = 57830
const SUM = 57831
const GROUP_CONCAT = 57832
const BIT_AND = 57833
const BIT_OR = 57834
const BIT_XOR = 57835
const STD = 57836
const STDDEV = 57837
const STDDEV_POP = 57838
const STDDEV_SAMP = 57839
const VAR_POP = 57840
const VAR_SAMP = 57841
const VARIANCE = 57842
const ANY_VALUE = 57843
const REGEXP_INSTR = 57844
const REGEXP_LIKE = 57845
const REGEXP_REPLACE = 57846
const REGEXP_SUBSTR = 57847
const ExtractValue = 57848
const UpdateXML = 57849
const GET_LOCK = 57850
const RELEASE_LOCK = 57851
const RELEASE_ALL_LOCKS = 57852
const IS_FREE_LOCK = 57853
const IS_USED_LOCK = 57854
const LOCATE = 57855
const POSITION = 57856
const ST_GeometryCollectionFromText = 57857
const ST_GeometryFromText = 57858
const ST_LineStringFromText = 57859
const ST_MultiLineStringFromText = 57860
const ST_MultiPointFromText = 57861
const ST_MultiPolygonFromText = 57862
const ST_PointFromText = 57863
const ST_PolygonFromText = 57864
const ST_GeometryCollectionFromWKB = 57865
const ST_GeometryFromWKB = 57866
const ST_LineStringFromWKB = 57867
const ST_MultiLineStringFromWKB = 57868
const ST_MultiPointFromWKB = 57869
const ST_MultiPolygonFromWKB = 57870
const ST_PointFromWKB = 57871
const ST_PolygonFromWKB = 57872
const ST_AsBinary = 57873
const ST_AsText = 57874
const ST_Dimension = 57875
const ST_Envelope = 57876
const ST_IsSimple = 57877
const ST_IsEmpty = 57878
const ST_GeometryType = 57879
const ST_X = 57880
const ST_Y = 57881
const ST_Latitude = 57882
const ST_Longitude = 57883
const ST_EndPoint = 57884
const ST_IsClosed = 57885
const ST_Length = 57886
const ST_NumPoints = 57887
const ST_StartPoint = 57888
const ST_PointN = 57889
const ST_Area = 57890
const ST_Centroid = 57891
const ST_ExteriorRing = 57892
const ST_InteriorRingN = 57893
const ST_NumInteriorRings = 57894
const ST_NumGeometries = 57895
const ST_GeometryN = 57896
const ST_LongFromGeoHash = 57897
const ST_PointFromGeoHash = 57898
const ST_LatFromGeoHash = 57899
const ST_GeoHash = 57900
const ST_AsGeoJSON = 57901
const ST_GeomFromGeoJSON = 57902
const MATCH = 57903
const AGAINST = 57904
const BOOLEAN = 57905
const LANGUAGE = 57906
const WITH = 57907
const QUERY = 57908
const EXPANSION = 57909
const WITHOUT = 57910
const VALIDATION = 57911
const UNUSED = 57912
const ARRAY = 57913
const BYTE = 57914
const CUME_DIST = 57915
const DESCRIPTION = 57916
const DENSE_RANK = 57917
const EMPTY = 57918
const EXCEPT = 57919
const FIRST_VALUE = 57920
const GROUPING = 57921
const GROUPS = 57922
const JSON_TABLE = 57923
const LAG = 57924
const LAST_VALUE = 57925
const LATERAL = 57926
const LEAD = 57927
const NTH_VALUE = 57928
const NTILE = 57929
const OF = 57930
const OVER = 57931
const PERCENT_RANK = 57932
const RANK = 57933
const RECURSIVE = 57934
const ROW_NUMBER = 57935
const SYSTEM = 57936
const WINDOW = 57937
const ACTIVE = 57938
const ADMIN = 57939
const AUTOEXTEND_SIZE = 57940
const BUCKETS = 57941
const CLONE = 57942
const COLUMN_FORMAT = 57943
const COMPONENT = 57944
const DEFINITION = 57945
const ENFORCED = 57946
const ENGINE_ATTRIBUTE = 57947
const EXCLUDE = 57948
const FOLLOWING = 57949
const GET_MASTER_PUBLIC_KEY = 57950
const HISTOGRAM = 57951
const HISTORY = 57952
const INACTIVE = 57953
const INVISIBLE = 57954
const LOCKED = 57955
const MASTER_COMPRESSION_ALGORITHMS = 57956
const MASTER_PUBLIC_KEY_PATH = 57957
const MASTER_TLS_CIPHERSUITES = 57958
const MASTER_ZSTD_COMPRESSION_LEVEL = 57959
const NESTED = 57960
const NETWORK_NAMESPACE = 57961
const NOWAIT = 57962
const NULLS = 57963
const OJ = 57964
const OLD = 57965
const OPTIONAL = 57966
const ORDINALITY = 57967
const ORGANIZATION = 57968
const OTHERS = 57969
const PARTIAL = 57970
const PATH = 57971
const PERSIST = 57972
const PERSIST_ONLY = 57973
const PRECEDING = 57974
const PRIVILEGE_CHECKS_USER = 57975
const PROCESS = 57976
const RANDOM = 57977
const REFERENCE = 57978
const REQUIRE_ROW_FORMAT = 57979
const RESOURCE = 57980
const RESPECT = 57981
const RESTART = 57982
const RETAIN = 57983
const REUSE = 57984
const ROLE = 57985
const SECONDARY = 57986
const SECONDARY_ENGINE = 57987
const SECONDARY_ENGINE_ATTRIBUTE = 57988
const SECONDARY_LOAD = 57989
const SECONDARY_UNLOAD = 57990
const SIMPLE = 57991
const SKIP = 57992
const SRID = 57993
const THREAD_PRIORITY = 57994
const TIES = 57995
const UNBOUNDED = 57996
const VCPU = 57997
const VISIBLE = 57998
const RETURNING = 57999
const FORMAT_BYTES = 58000
const FORMAT_PICO_TIME = 58001
const PS_CURRENT_THREAD_ID = 58002
const PS_THREAD_ID = 58003
const GTID_SUBSET = 58004
const GTID_SUBTRACT = 58005
const WAIT_FOR_EXECUTED_GTID_SET = 58006
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 58007
const FORMAT = 58008
const TREE = 58009
const VITESS = 58010
const TRADITIONAL = 58011
const VTEXPLAIN = 58012
const VEXPLAIN = 58013
const PLAN = 58014
const LOCAL = 58015
const LOW_PRIORITY = 58016
const NO_WRITE_TO_BINLOG = 58017
const LOGS = 58018
const ERROR = 58019
const GENERAL = 58020
const HOSTS = 58021
const OPTIMIZER_COSTS = 58022
const USER_RESOURCES = 58023
const SLOW = 58024
const CHANNEL = 58025
const RELAY = 58026
const EXPORT = 58027
const CURRENT = 58028
const ROW = 58029
const ROWS = 58030
const AVG_ROW_LENGTH = 58031
const CONNECTION = 58032
const CHECKSUM = 58033
const DELAY_KEY_WRITE = 58034
const ENCRYPTION = 58035
const ENGINE = 58036
const INSERT_METHOD = 58037
const MAX_ROWS = 58038
const MIN_ROWS = 58039
const PACK_KEYS = 58040
const PASSWORD = 58041
const FIXED = 58042
const DYNAMIC = 58043
const COMPRESSED = 58044
const REDUNDANT = 58045
const COMPACT = 58046
const ROW_FORMAT = 58047
const STATS_AUTO_RECALC = 58048
const STATS_PERSISTENT = 58049
const STATS_SAMPLE_PAGES = 58050
const STORAGE = 58051
const MEMORY = 58052
const DISK = 58053
const PARTITIONS = 58054
const LINEAR = 58055
const RANGE = 58056
const LIST = 58057
const SUBPARTITION = 58058
const SUBPARTITIONS = 58059
const HASH = 58060

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"MULTIPLE_TEXT_LITERAL",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"UNKNOWN",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"KILL",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"ASSIGNMENT_OPT",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"FORCE_CUTOVER",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"PURGE",
	"BEFORE",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ADDDATE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURDATE",
	"DATE_ADD",
	"DATE_SUB",
	"NOW",
	"SUBDATE",
	"CURTIME",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"SYSDATE",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_HOUR",
	"SQL_TSI_MINUTE",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_SECOND",
	"SQL_TSI_MICROSECOND",
	"SQL_TSI_YEAR",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"MID",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"ANY_VALUE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"ST_GeometryCollectionFromText",
	"ST_GeometryFromText",
	"ST_LineStringFromText",
	"ST_MultiLineStringFromText",
	"ST_MultiPointFromText",
	"ST_MultiPolygonFromText",
	"ST_PointFromText",
	"ST_PolygonFromText",
	"ST_GeometryCollectionFromWKB",
	"ST_GeometryFromWKB",
	"ST_LineStringFromWKB",
	"ST_MultiLineStringFromWKB",
	"ST_MultiPointFromWKB",
	"ST_MultiPolygonFromWKB",
	"ST_PointFromWKB",
	"ST_PolygonFromWKB",
	"ST_AsBinary",
	"ST_AsText",
	"ST_Dimension",
	"ST_Envelope",
	"ST_IsSimple",
	"ST_IsEmpty",
	"ST_GeometryType",
	"ST_X",
	"ST_Y",
	"ST_Latitude",
	"ST_Longitude",
	"ST_EndPoint",
	"ST_IsClosed",
	"ST_Length",
	"ST_NumPoints",
	"ST_StartPoint",
	"ST_PointN",
	"ST_Area",
	"ST_Centroid",
	"ST_ExteriorRing",
	"ST_InteriorRingN",
	"ST_NumInteriorRings",
	"ST_NumGeometries",
	"ST_GeometryN",
	"ST_LongFromGeoHash",
	"ST_PointFromGeoHash",
	"ST_LatFromGeoHash",
	"ST_GeoHash",
	"ST_AsGeoJSON",
	"ST_GeomFromGeoJSON",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	14, 49,
	15, 49,
	-2, 40,
	-1, 52,
	1, 157,
	736, 157,
	-2, 165,
	-1, 53,
	138, 165,
	180, 165,
	350, 165,
	-2, 523,
	-1, 61,
	37, 777,
	243, 777,
	254, 777,
	289, 791,
	290, 791,
	-2, 779,
	-1, 66,
	245, 815,
	-2, 813,
	-1, 122,
	242, 1600,
	-2, 131,
	-1, 124,
	1, 158,
	736, 158,
	-2, 165,
	-1, 135,
	139, 408,
	248, 408,
	-2, 512,
	-1, 154,
	138, 165,
	180, 165,
	350, 165,
	-2, 532,
	-1, 736,
	166, 41,
	-2, 43,
	-1, 943,
	88, 1617,
	-2, 1463,
	-1, 944,
	88, 1618,
	225, 1622,
	-2, 1464,
	-1, 945,
	225, 1621,
	-2, 42,
	-1, 1029,
	61, 887,
	-2, 900,
	-1, 1117,
	253, 1093,
	258, 1093,
	-2, 419,
	-1, 1202,
	1, 580,
	736, 580,
	-2, 165,
	-1, 1505,
	225, 1622,
	-2, 1464,
	-1, 1716,
	61, 888,
	-2, 904,
	-1, 1717,
	61, 889,
	-2, 905,
	-1, 1773,
	138, 165,
	180, 165,
	350, 165,
	-2, 458,
	-1, 1854,
	139, 408,
	248, 408,
	-2, 512,
	-1, 1863,
	253, 1094,
	258, 1094,
	-2, 420,
	-1, 2303,
	225, 1626,
	-2, 1620,
	-1, 2304,
	225, 1622,
	-2, 1618,
	-1, 2407,
	138, 165,
	180, 165,
	350, 165,
	-2, 459,
	-1, 2414,
	27, 186,
	-2, 188,
	-1, 2868,
	79, 96,
	89, 96,
	-2, 963,
	-1, 2937,
	711, 700,
	-2, 674,
	-1, 3159,
	51, 1565,
	-2, 1559,
	-1, 3993,
	711, 700,
	-2, 688,
	-1, 4082,
	91, 632,
	96, 632,
	106, 632,
	182, 632,
	183, 632,
	184, 632,
	185, 632,
	186, 632,
	187, 632,
	188, 632,
	189, 632,
	190, 632,
	191, 632,
	192, 632,
	193, 632,
	194, 632,
	195, 632,
	196, 632,
	197, 632,
	198, 632,
	199, 632,
	200, 632,
	201, 632,
	202, 632,
	203, 632,
	204, 632,
	205, 632,
	206, 632,
	207, 632,
	208, 632,
	209, 632,
	210, 632,
	211, 632,
	212, 632,
	213, 632,
	214, 632,
	215, 632,
	216, 632,
	217, 632,
	218, 632,
	219, 632,
	220, 632,
	221, 632,
	222, 632,
	223, 632,
	-2, 1991,
}

const yyPrivate = 57344

const yyLast = 55708

var yyAct = [...]int{
	959, 3646, 3647, 87, 3645, 4170, 4080, 4157, 3974, 4062,
	3311, 4050, 2110, 4124, 1270, 954, 947, 946, 4125, 2098,
	3211, 3218, 2404, 3446, 2133, 3879, 2332, 3260, 3956, 3172,
	3269, 1268, 3274, 3954, 3027, 3271, 3270, 1776, 3268, 3273,
	3272, 1983, 3596, 3583, 2334, 4025, 3289, 3226, 2478, 740,
	2039, 3110, 3288, 5, 3176, 3173, 3492, 3001, 3688, 3486,
	3170, 908, 3160, 3514, 734, 3476, 3026, 2441, 2359, 2828,
	768, 907, 735, 2902, 2934, 2983, 3318, 2466, 2903, 3291,
	2446, 1149, 2904, 1732, 2392, 1047, 1027, 2509, 87, 1079,
	1024, 912, 2853, 2378, 42, 2834, 1054, 2804, 1879, 730,
	2375, 41, 1832, 43, 2820, 2380, 2288, 1027, 2132, 2255,
	2256, 2047, 2379, 2975, 2094, 1861, 2487, 149, 163, 2465,
	2367, 2526, 1089, 2448, 1112, 2895, 1107, 2870, 104, 1765,
	1745, 2382, 100, 105, 1697, 2069, 1518, 2138, 2061, 1444,
	1429, 1979, 1868, 1086, 3175, 1115, 750, 2463, 1083, 1118,
	1087, 1960, 2437, 1113, 1114, 1764, 1064, 2841, 2360, 745,
	1066, 1750, 1125, 1719, 1036, 2146, 3683, 737, 2802, 2438,
	2165, 1046, 1501, 2038, 1258, 107, 3675, 1026, 99, 1030,
	1991, 3503, 1033, 1477, 167, 85, 127, 125, 126, 1031,
	3447, 1032, 1022, 132, 133, 1853, 1034, 738, 1049, 1198,
	1059, 93, 909, 1266, 106, 1244, 84, 727, 1522, 1058,
	744, 98, 4158, 3584, 3257, 1527, 2480, 2481, 2482, 4009,
	672, 2480, 2957, 2956, 2524, 2925, 1945, 1445, 3576, 4107,
	1021, 2991, 1039, 1151, 2992, 4005, 2054, 128, 3539, 2329,
	2330, 4004, 2053, 2052, 1080, 4010, 1168, 1169, 1170, 134,
	1173, 1174, 1175, 1176, 2051, 2050, 1179, 1180, 1181, 1182,
	1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192,
	1193, 1194, 1195, 1154, 2049, 1074, 1073, 2022, 2, 1040,
	728, 1214, 1128, 669, 4101, 670, 2800, 1104, 1440, 1023,
	2574, 3279, 1025, 3156, 2513, 4128, 712, 3279, 1736, 1129,
	1461, 1155, 1158, 1159, 3114, 3983, 2830, 2927, 1048, 128,
	3276, 1103, 1102, 1101, 3650, 1734, 4180, 1096, 1091, 4163,
	4123, 1162, 4148, 111, 112, 113, 1171, 116, 1737, 712,
	122, 3450, 1215, 191, 95, 1455, 664, 2353, 2512, 95,
	3650, 95, 4005, 4111, 4162, 1735, 3449, 3277, 725, 726,
	95, 913, 2356, 3277, 1020, 2355, 706, 2950, 1015, 1016,
	1017, 1018, 3957, 2765, 4109, 1029, 2059, 190, 4110, 2072,
	1072, 1076, 911, 2947, 3283, 706, 3337, 128, 3875, 3874,
	3283, 962, 963, 964, 1153, 1152, 962, 963, 964, 4108,
	86, 129, 3589, 1061, 1062, 3590, 4138, 1726, 1105, 3885,
	86, 3649, 86, 1431, 172, 1072, 1076, 911, 4105, 2581,
	3608, 3597, 4051, 4059, 2844, 2506, 706, 3884, 703, 2103,
	3607, 4085, 3363, 1842, 3208, 3209, 2801, 3649, 2399, 2400,
	3207, 1100, 4063, 1207, 1208, 2031, 2032, 2990, 1458, 2845,
	1459, 1460, 2879, 2578, 1451, 2878, 2511, 2884, 2880, 3702,
	1766, 706, 1767, 2398, 2974, 1251, 1222, 1253, 1234, 1095,
	169, 1223, 1097, 170, 1013, 1210, 688, 86, 95, 1221,
	88, 1220, 1012, 706, 2579, 3975, 1263, 1235, 95, 686,
	95, 1222, 1445, 1987, 1239, 1240, 1223, 189, 3280, 1098,
	2891, 2417, 2416, 3048, 3280, 1250, 1252, 3345, 1228, 2837,
	2838, 706, 3343, 1441, 2457, 706, 2572, 3315, 4067, 1197,
	2030, 2331, 3313, 4067, 720, 2034, 2363, 724, 4090, 683,
	718, 1762, 706, 3988, 3002, 1701, 3319, 2451, 698, 2976,
	3927, 2527, 3928, 2935, 2488, 2960, 4088, 4160, 2550, 1255,
	2551, 3306, 2552, 693, 2363, 95, 4094, 4095, 4129, 3307,
	1935, 1478, 1961, 1260, 696, 3228, 3229, 2533, 1237, 1238,
	1243, 1100, 4089, 1092, 1172, 2531, 1430, 1203, 707, 4130,
	1094, 1093, 1236, 3334, 2978, 1479, 1480, 1481, 1482, 1483,
	1484, 1485, 1487, 1486, 1488, 1489, 1262, 707, 3578, 1241,
	1455, 3577, 1261, 1229, 1936, 2553, 1937, 1178, 1065, 1242,
	3316, 173, 1248, 2964, 2965, 3314, 1249, 2530, 3004, 3859,
	179, 1177, 2534, 2575, 2529, 2576, 1254, 3574, 1099, 1098,
	2532, 1988, 673, 1846, 675, 689, 2491, 709, 707, 708,
	679, 3654, 677, 681, 690, 682, 1108, 676, 2376, 687,
	1109, 1247, 678, 691, 692, 695, 699, 700, 701, 697,
	694, 1109, 685, 710, 1147, 2928, 1146, 1145, 3230, 3049,
	1144, 1143, 1148, 707, 3227, 1142, 2540, 2536, 2538, 2539,
	2537, 2541, 2542, 2543, 1141, 1140, 3230, 2450, 1135, 3014,
	3013, 3012, 4102, 1492, 3006, 707, 3010, 1704, 3005, 4181,
	3003, 3489, 1075, 1069, 1067, 3008, 1084, 4135, 1084, 1451,
	1120, 1121, 1443, 1267, 3007, 1267, 1267, 1084, 1980, 2361,
	2362, 1082, 2464, 707, 3113, 1157, 1060, 707, 2979, 2517,
	2516, 1120, 3009, 3011, 1976, 1156, 1432, 1075, 1069, 1067,
	1165, 3250, 3573, 2959, 707, 164, 1840, 2361, 2362, 1450,
	1447, 1448, 1449, 1454, 1456, 1453, 2945, 1452, 1099, 1763,
	1839, 1838, 1977, 1027, 1502, 1507, 1508, 1446, 1511, 1513,
	1514, 1515, 1516, 1517, 1836, 1520, 1521, 1523, 1523, 2995,
	1523, 1523, 1528, 1528, 1528, 1531, 1532, 1533, 1534, 1535,
	1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545,
	1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555,
	1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565,
	1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575,
	1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585,
	1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595,
	1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605,
	1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615,
	1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625,
	1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635,
	1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645,
	1646, 1647, 1648, 1649, 1650, 1651, 1652, 1422, 1256, 1499,
	3982, 1653, 2926, 1655, 1656, 1657, 1658, 1659, 1423, 1424,
	1947, 1946, 1948, 1949, 1950, 1528, 1528, 1528, 1528, 1528,
	1528, 2510, 3537, 3538, 2893, 3606, 1512, 711, 1106, 89,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 1679, 1495, 1496, 1497, 1498, 704, 1201,
	960, 2962, 1439, 2929, 1509, 4065, 1503, 960, 3281, 3282,
	4065, 1694, 94, 705, 3281, 3282, 960, 2580, 1068, 2949,
	3434, 3285, 94, 165, 94, 3648, 1524, 3285, 1525, 1526,
	177, 1219, 1209, 1206, 1693, 1966, 1867, 4064, 1529, 1530,
	3335, 3490, 4064, 1127, 1450, 1447, 1448, 1449, 1454, 1456,
	1453, 3648, 1452, 1068, 1492, 1232, 1218, 2454, 1224, 1225,
	1226, 1227, 1446, 2948, 1213, 1700, 663, 1127, 1138, 1136,
	1127, 185, 4103, 2579, 1027, 2982, 1965, 2508, 1027, 1725,
	2805, 2807, 1264, 1265, 1027, 2973, 1127, 3970, 2972, 94,
	1493, 1494, 3528, 3510, 4174, 4093, 2875, 2455, 2840, 2835,
	2777, 1691, 2106, 1754, 2453, 1654, 1212, 3122, 1164, 3121,
	671, 1692, 2405, 124, 166, 171, 168, 174, 175, 176,
	178, 180, 181, 182, 183, 1492, 1489, 3206, 2604, 1245,
	184, 186, 187, 188, 1726, 1472, 1043, 1259, 2456, 4092,
	2593, 3996, 1217, 1150, 3569, 1866, 1126, 3502, 2452, 1482,
	1483, 1484, 1485, 1487, 1486, 1488, 1489, 1100, 1196, 1992,
	119, 2528, 1710, 2043, 1973, 1708, 104, 1711, 1768, 1712,
	1126, 105, 2147, 1126, 3022, 1026, 2074, 2139, 2918, 1692,
	1660, 1661, 1662, 1663, 1664, 1665, 2148, 3141, 2505, 1126,
	2075, 1490, 1491, 2073, 1698, 1120, 1123, 1124, 2139, 1084,
	2613, 1459, 1460, 1117, 1121, 1484, 1485, 1487, 1486, 1488,
	1489, 3139, 4139, 107, 2604, 1685, 1460, 1139, 1137, 3697,
	3544, 1127, 1200, 3543, 1116, 2495, 1876, 1962, 3214, 1963,
	1127, 1461, 1964, 1875, 120, 1865, 1843, 1844, 1845, 2503,
	2985, 1138, 2985, 2500, 1706, 2984, 1136, 2984, 4131, 1461,
	2806, 1969, 4027, 1967, 1968, 1859, 1970, 1971, 1972, 1461,
	1728, 1231, 2500, 4182, 3529, 3962, 1461, 1127, 1709, 1695,
	1038, 2648, 1233, 3215, 2507, 1707, 1930, 1985, 1246, 1852,
	1023, 1461, 1731, 2504, 1881, 1127, 1882, 1216, 1884, 1886,
	1025, 1871, 1890, 1892, 1894, 1896, 1898, 3217, 4028, 1912,
	4176, 3352, 2502, 1920, 1921, 1267, 1202, 1461, 1993, 1926,
	1927, 3963, 1759, 1760, 3867, 3212, 4172, 1870, 2145, 4173,
	3603, 4171, 3604, 1827, 1126, 1726, 1163, 2293, 1199, 3866,
	1160, 1955, 2144, 1126, 3228, 3229, 1869, 1869, 1130, 1120,
	1835, 3213, 3310, 1132, 1099, 1726, 2174, 1133, 1131, 3857,
	4183, 4144, 1726, 1953, 1850, 1848, 1849, 1713, 1862, 1465,
	1466, 1467, 1468, 1469, 1470, 1471, 1463, 1726, 1134, 1458,
	1126, 1459, 1460, 3620, 1916, 3219, 1120, 1123, 1124, 3619,
	1084, 1873, 2602, 3551, 1117, 1121, 3550, 1458, 1126, 1459,
	1460, 190, 2601, 1130, 1120, 1954, 3024, 1458, 1132, 1459,
	1460, 1981, 1133, 1131, 1458, 3540, 1459, 1460, 1908, 3258,
	1942, 1911, 3246, 1913, 2130, 129, 1461, 1952, 2900, 1458,
	2899, 1459, 1460, 2898, 2460, 1841, 1956, 1461, 172, 1940,
	2065, 2066, 2063, 2064, 962, 963, 964, 128, 1939, 1103,
	1102, 1101, 1938, 3227, 2166, 1458, 1928, 1459, 1460, 2168,
	2640, 1922, 1919, 2173, 2169, 3230, 2062, 2170, 2171, 2172,
	1918, 1998, 2167, 2175, 2176, 2177, 2178, 2179, 2180, 2181,
	2182, 2183, 1267, 1267, 1941, 1917, 1994, 1995, 1888, 1426,
	2020, 1705, 3534, 712, 169, 712, 87, 170, 1762, 87,
	1999, 1461, 2065, 2066, 2586, 2587, 4132, 2006, 2007, 2008,
	3991, 4142, 1726, 2609, 2882, 712, 3990, 1478, 2019, 2994,
	3966, 189, 2122, 2111, 2112, 2113, 2114, 2124, 2115, 2116,
	2117, 2129, 2125, 2118, 2119, 2126, 2127, 2128, 2120, 2121,
	2123, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1487, 1486,
	1488, 1489, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1487,
	1486, 1488, 1489, 3965, 1458, 3964, 1459, 1460, 3862, 2101,
	2101, 2099, 2099, 1739, 2102, 1458, 3846, 1459, 1460, 3845,
	1478, 110, 3216, 1474, 3696, 1475, 2608, 42, 2826, 4159,
	42, 3694, 109, 3616, 108, 2476, 2475, 2067, 1693, 1476,
	1490, 1491, 1473, 103, 1479, 1480, 1481, 1482, 1483, 1484,
	1485, 1487, 1486, 1488, 1489, 2474, 2473, 2472, 2471, 1740,
	1690, 1996, 1689, 2185, 4119, 1726, 1478, 1688, 2000, 3548,
	2002, 2003, 2004, 2005, 2293, 173, 3533, 2009, 2290, 1458,
	3320, 1459, 1460, 2197, 179, 3317, 1461, 2292, 2652, 2021,
	1479, 1480, 1481, 1482, 1483, 1484, 1485, 1487, 1486, 1488,
	1489, 958, 1726, 2650, 1478, 1691, 2592, 1461, 2826, 1726,
	1726, 1461, 2044, 1457, 1726, 1692, 101, 1461, 85, 3249,
	2071, 85, 3248, 103, 2134, 2027, 2028, 102, 1479, 1480,
	1481, 1482, 1483, 1484, 1485, 1487, 1486, 1488, 1489, 1457,
	1726, 2826, 4058, 2077, 2909, 2079, 2080, 2081, 2082, 2083,
	2084, 2086, 2088, 2089, 2090, 2091, 2092, 2093, 2076, 101,
	2826, 4037, 3984, 2280, 2281, 2282, 2283, 2284, 2896, 2303,
	102, 4073, 1726, 2871, 2078, 2105, 1687, 2207, 110, 1680,
	2305, 2563, 1726, 2308, 2309, 2562, 2301, 2826, 4033, 109,
	1461, 108, 4071, 1726, 3894, 1461, 2302, 1726, 2149, 2150,
	2151, 2152, 4069, 1726, 3893, 1503, 3947, 1726, 2289, 164,
	2522, 2291, 2163, 86, 44, 45, 88, 3587, 3981, 2326,
	2184, 2521, 1461, 2140, 1458, 1726, 1459, 1460, 2199, 3870,
	1726, 2826, 3858, 92, 2358, 1461, 2872, 48, 76, 77,
	2337, 74, 78, 3587, 1726, 1458, 2874, 1459, 1460, 1458,
	75, 1459, 1460, 2826, 3585, 1458, 2871, 1459, 1460, 1726,
	2384, 2023, 2300, 3220, 1989, 2306, 2307, 3224, 1951, 2303,
	2500, 1726, 3508, 1726, 3223, 3940, 1726, 104, 103, 62,
	3938, 1726, 105, 2732, 1726, 1461, 2301, 3239, 3238, 3236,
	3237, 95, 1943, 3234, 3235, 2823, 2373, 1933, 104, 2414,
	3234, 3233, 3850, 105, 1743, 1461, 1929, 3889, 3225, 2336,
	103, 1461, 2348, 3221, 1925, 1478, 2850, 1726, 3222, 2872,
	3935, 1726, 2579, 2958, 3849, 2070, 1831, 2939, 1458, 2579,
	1459, 1460, 1089, 1458, 1924, 1459, 1460, 1726, 83, 1479,
	1480, 1481, 1482, 1483, 1484, 1485, 1487, 1486, 1488, 1489,
	1923, 2386, 2932, 2933, 2826, 2825, 2423, 2424, 2425, 2426,
	1458, 1039, 1459, 1460, 2409, 1089, 2104, 1726, 2821, 1741,
	1742, 2324, 2390, 1458, 1257, 1459, 1460, 1831, 1830, 1774,
	1773, 2342, 2349, 2343, 2418, 3595, 2419, 2420, 2421, 2422,
	3917, 1726, 2408, 2936, 2443, 2351, 3475, 1726, 3171, 2412,
	3201, 2914, 2429, 2430, 2431, 2432, 3505, 2489, 2449, 3501,
	2579, 1461, 2413, 2371, 109, 3501, 2842, 2501, 2395, 2396,
	1074, 1073, 2394, 1458, 1457, 1459, 1460, 1461, 2411, 2410,
	2842, 1461, 51, 54, 57, 56, 59, 4023, 73, 2849,
	3995, 82, 79, 1458, 2826, 1459, 1460, 165, 2486, 1458,
	2850, 1459, 1460, 2459, 177, 1480, 1481, 1482, 1483, 1484,
	1485, 1487, 1486, 1488, 1489, 61, 91, 90, 3504, 3454,
	71, 72, 58, 1461, 3236, 2500, 2444, 2440, 80, 81,
	3144, 2494, 2458, 1457, 2497, 2397, 2498, 2462, 2850, 2470,
	2433, 2435, 2436, 1461, 2850, 185, 3468, 1726, 2732, 1461,
	2637, 2514, 3501, 1128, 1461, 2636, 2500, 2483, 2493, 1461,
	2496, 2444, 2492, 4133, 2366, 1730, 3465, 1726, 2327, 2104,
	1129, 63, 64, 3552, 65, 66, 67, 68, 2045, 2515,
	1869, 2518, 2029, 1975, 1761, 2519, 2520, 1028, 166, 171,
	168, 174, 175, 176, 178, 180, 181, 182, 183, 1458,
	1904, 1459, 1460, 1111, 184, 186, 187, 188, 3463, 1726,
	2584, 1727, 1729, 1110, 95, 1458, 4098, 1459, 1460, 1458,
	2525, 1459, 1460, 4040, 3553, 3554, 3555, 1461, 3426, 1726,
	3881, 1461, 1733, 3521, 3523, 60, 1513, 1461, 1513, 3424,
	1726, 1461, 3847, 3312, 3420, 1726, 1461, 3709, 3568, 3565,
	1461, 1905, 1906, 1907, 2596, 1461, 3546, 3368, 3367, 1461,
	1833, 1458, 2442, 1459, 1460, 95, 3308, 3263, 1461, 2556,
	3259, 2303, 1461, 2940, 2439, 2434, 1461, 1478, 2428, 2427,
	1958, 1458, 1864, 1459, 1460, 1860, 1829, 1458, 2599, 1459,
	1460, 121, 1458, 3261, 1459, 1460, 2906, 1458, 2302, 1459,
	1460, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1487, 1486,
	1488, 1489, 3417, 1726, 1201, 1461, 3415, 1726, 2905, 3882,
	2571, 2619, 3413, 1726, 2457, 89, 3411, 1726, 2340, 1461,
	4154, 3409, 1726, 668, 1461, 2577, 3979, 4152, 2634, 4126,
	3407, 1726, 2025, 4003, 3405, 1726, 3520, 1461, 3515, 3516,
	3190, 2585, 1461, 3403, 1726, 3922, 1461, 3401, 1726, 2588,
	1461, 3399, 1726, 3518, 3255, 1458, 2906, 1459, 1460, 1458,
	2071, 1459, 1460, 1461, 3254, 1458, 3253, 1459, 1460, 1458,
	1461, 1459, 1460, 3171, 1458, 2919, 1459, 1460, 1458, 3189,
	1459, 1460, 2589, 1458, 2591, 1459, 1460, 1458, 2557, 1459,
	1460, 3854, 1461, 2594, 2026, 2595, 1458, 729, 1459, 1460,
	1458, 3999, 1459, 1460, 1458, 3570, 1459, 1460, 3883, 3397,
	1726, 3193, 2357, 2590, 1461, 2612, 3194, 2368, 2369, 3191,
	1461, 1738, 3395, 1726, 3192, 94, 2346, 3393, 1726, 3161,
	3163, 3391, 1726, 3509, 3149, 3389, 1726, 3195, 3164, 2859,
	2860, 3148, 2776, 1458, 3494, 1459, 1460, 2597, 3387, 1726,
	1461, 3687, 3493, 1041, 1461, 3373, 1726, 1458, 3961, 1459,
	1460, 2764, 1458, 1461, 1459, 1460, 3689, 2565, 2566, 2646,
	2130, 1461, 2568, 3497, 2808, 1458, 3158, 1459, 1460, 1974,
	1458, 2569, 1459, 1460, 1458, 3232, 1459, 1460, 1458, 1044,
	1459, 1460, 2910, 1027, 2101, 1011, 2099, 1045, 2811, 3350,
	1726, 1458, 1042, 1459, 1460, 2797, 1726, 2889, 1458, 1167,
	1459, 1460, 3674, 2147, 3673, 1461, 2847, 2848, 1166, 3328,
	2809, 2905, 1425, 1461, 2988, 2384, 101, 2148, 1027, 2867,
	1458, 70, 1459, 1460, 2946, 2795, 1726, 102, 129, 2770,
	1726, 3499, 4168, 2812, 103, 2814, 1461, 4076, 2747, 1726,
	1461, 3251, 1458, 2560, 1459, 1460, 2739, 1726, 1458, 1461,
	1459, 1460, 3672, 1461, 3980, 2070, 2846, 2827, 2122, 2111,
	2112, 2113, 2114, 2124, 2115, 2116, 2117, 2129, 2125, 2118,
	2119, 2126, 2127, 2128, 2120, 2121, 2123, 3877, 1458, 3231,
	1459, 1460, 1458, 2863, 1459, 1460, 2352, 1461, 2836, 1698,
	3470, 1458, 2799, 1459, 1460, 2549, 101, 42, 3466, 1458,
	3477, 1459, 1460, 103, 2368, 2369, 2864, 102, 2865, 2866,
	2819, 1461, 1052, 1053, 2548, 3147, 1692, 1461, 2892, 2894,
	2547, 2730, 1726, 3146, 1461, 2728, 1726, 2839, 2546, 2824,
	1461, 2869, 2944, 2545, 2715, 1726, 1461, 2544, 2713, 1726,
	2583, 108, 3946, 1458, 1461, 1459, 1460, 3684, 3945, 2873,
	3925, 1458, 3695, 1459, 1460, 2449, 2885, 2876, 3556, 1461,
	3693, 109, 2908, 2883, 2886, 1461, 3692, 2911, 2912, 3685,
	3566, 2955, 2711, 1726, 1458, 1461, 1459, 1460, 1458, 3498,
	1459, 1460, 2842, 2142, 2897, 3496, 1900, 1458, 2143, 1459,
	1460, 1458, 3487, 1459, 1460, 1461, 2709, 1726, 2600, 3264,
	1461, 2907, 2707, 1726, 2484, 3557, 3558, 3559, 1847, 2705,
	1726, 1051, 2915, 3658, 2916, 2703, 1726, 2920, 2921, 2922,
	2952, 2701, 1726, 1461, 2203, 1458, 2823, 1459, 1460, 2699,
	1726, 1852, 1461, 1901, 1902, 1903, 110, 2998, 2999, 4156,
	4155, 2941, 2942, 4156, 2697, 1726, 1461, 109, 3050, 1458,
	3432, 1459, 1460, 2638, 2338, 1458, 110, 1459, 1460, 1755,
	3018, 2951, 1458, 4155, 1459, 1460, 1461, 109, 1458, 108,
	1459, 1460, 1747, 3967, 1458, 1461, 1459, 1460, 103, 3532,
	2695, 1726, 1458, 3, 1459, 1460, 2901, 114, 115, 3015,
	1461, 2977, 97, 1, 1019, 2996, 1461, 1458, 2980, 1459,
	1460, 1428, 1427, 1458, 2286, 1459, 1460, 2042, 2693, 1726,
	10, 2040, 3536, 1458, 9, 1459, 1460, 2691, 1726, 4087,
	684, 3033, 3034, 3035, 3036, 3037, 3038, 3039, 3040, 3041,
	3042, 2689, 1726, 1458, 2318, 1459, 1460, 110, 1458, 1461,
	1459, 1460, 2041, 2328, 1696, 8, 4127, 3016, 109, 2953,
	108, 3428, 1727, 2325, 4083, 1461, 4084, 1944, 1934, 1461,
	3365, 1458, 3598, 1459, 1460, 2254, 3878, 3267, 2490, 3564,
	1458, 2447, 1459, 1460, 1119, 2687, 1726, 154, 1724, 1720,
	2406, 2685, 1726, 1461, 1458, 2407, 1459, 1460, 2350, 1461,
	3090, 4053, 3092, 1721, 3000, 3052, 3108, 118, 1077, 117,
	2986, 1461, 3017, 2987, 1458, 1122, 1459, 1460, 3103, 3104,
	3105, 3106, 1230, 1458, 2485, 1459, 1460, 3588, 2344, 2345,
	1723, 2997, 1722, 2890, 2683, 1726, 1461, 2415, 1458, 1780,
	1459, 1460, 3115, 1778, 1458, 1779, 1459, 1460, 1777, 3126,
	2681, 1726, 1782, 1781, 2676, 1726, 3336, 2639, 3433, 2033,
	719, 3117, 2931, 2862, 2384, 713, 192, 3043, 1769, 1748,
	2289, 1161, 2289, 2291, 1461, 2291, 674, 3240, 2672, 1726,
	2523, 1461, 680, 3088, 2670, 1726, 3178, 1458, 87, 1459,
	1460, 2384, 2384, 2384, 2384, 2384, 2663, 1726, 3098, 3099,
	3100, 3101, 3102, 1458, 2461, 1459, 1460, 1458, 1510, 1459,
	1460, 2384, 3126, 2024, 2384, 3116, 3145, 3118, 2877, 3183,
	1071, 2661, 1726, 1063, 2339, 3125, 2813, 1070, 3855, 3179,
	1985, 1458, 1461, 1459, 1460, 3200, 3491, 1458, 3157, 1459,
	1460, 3137, 3159, 2829, 3162, 1461, 3155, 3143, 3960, 1458,
	1461, 1459, 1460, 3686, 4038, 2386, 2887, 3153, 3152, 3364,
	1461, 1744, 3453, 2611, 3150, 1461, 3356, 3165, 3166, 2137,
	1461, 1500, 2383, 3653, 1458, 2060, 1459, 1460, 3284, 1030,
	1461, 742, 2386, 2386, 2386, 2386, 2386, 3182, 3292, 1031,
	104, 1032, 1461, 741, 3196, 105, 739, 3185, 3186, 3204,
	3188, 2815, 2386, 3184, 3202, 2386, 3187, 3203, 3138, 3140,
	3142, 2843, 1458, 1464, 1459, 1460, 948, 3354, 3151, 1458,
	2803, 1459, 1460, 3243, 1756, 2854, 3242, 3244, 3245, 3241,
	2793, 1461, 2852, 2851, 2558, 2792, 2391, 3517, 3513, 4079,
	2385, 2381, 2822, 3210, 899, 2788, 1461, 898, 751, 3296,
	2787, 743, 733, 3168, 961, 2786, 1461, 2449, 3293, 3297,
	3286, 897, 3265, 896, 3294, 2785, 3303, 1461, 3295, 2961,
	1458, 1461, 1459, 1460, 3309, 2963, 2888, 2784, 1461, 3305,
	1442, 1715, 1718, 1458, 2347, 1459, 1460, 3174, 1458, 1090,
	1459, 1460, 3174, 3333, 3321, 3324, 3323, 3986, 1458, 2582,
	1459, 1460, 3362, 1458, 1714, 1459, 1460, 3331, 1458, 3993,
	1459, 1460, 3275, 1461, 3341, 3582, 2783, 3256, 1458, 2937,
	1459, 1460, 2477, 69, 46, 3955, 4024, 891, 1461, 888,
	1458, 2774, 1459, 1460, 3655, 3357, 3358, 3359, 3360, 3361,
	3656, 2773, 3657, 3111, 3112, 3338, 3339, 4006, 3340, 4007,
	887, 3342, 2772, 3344, 4008, 3346, 2771, 2192, 1438, 1435,
	1513, 4100, 2035, 2768, 1513, 96, 36, 35, 34, 1458,
	33, 1459, 1460, 32, 26, 2598, 25, 24, 3266, 2603,
	3478, 23, 3480, 22, 1458, 3448, 1459, 1460, 29, 19,
	21, 20, 3452, 18, 1458, 3278, 1459, 1460, 2763, 4122,
	4167, 123, 2606, 55, 2607, 1458, 52, 1459, 1460, 1458,
	2615, 1459, 1460, 2756, 2617, 2618, 1458, 50, 1459, 1460,
	131, 130, 53, 2624, 2625, 2626, 2627, 2628, 2629, 2630,
	2631, 2632, 2633, 3332, 2635, 49, 1204, 3177, 47, 31,
	30, 17, 2384, 1693, 16, 15, 3479, 14, 3481, 3483,
	13, 1458, 12, 1459, 1460, 3530, 11, 2641, 2642, 2643,
	2644, 2645, 3495, 2647, 7, 3488, 1458, 2649, 1459, 1460,
	6, 2654, 2655, 3500, 2656, 39, 1461, 2659, 2660, 2662,
	2664, 2665, 2666, 2667, 2668, 2669, 2671, 2673, 2674, 2675,
	2677, 3519, 2679, 2680, 2682, 2684, 2686, 2688, 2690, 2692,
	2694, 2696, 2698, 2700, 2702, 2704, 2706, 2708, 2710, 2712,
	2714, 2716, 2717, 2718, 731, 2720, 3296, 2722, 3287, 2724,
	2725, 3522, 2727, 2729, 2731, 3293, 3297, 3455, 2734, 3457,
	3458, 3459, 2738, 2386, 3531, 3525, 2743, 2744, 2745, 2746,
	1461, 3524, 3547, 38, 3549, 1461, 3541, 3542, 3485, 2757,
	2758, 2759, 2760, 2761, 2762, 3592, 3593, 2766, 2767, 3326,
	3327, 2755, 1461, 37, 28, 2769, 1461, 1724, 1720, 27,
	2775, 40, 4, 2924, 2479, 2778, 2779, 2780, 2781, 2782,
	0, 3512, 1721, 1461, 0, 0, 2789, 2790, 1461, 2791,
	0, 0, 2794, 2796, 2350, 0, 2798, 1461, 0, 3575,
	3526, 3527, 1461, 3579, 3580, 3581, 2810, 1716, 1717, 1723,
	0, 1722, 0, 1461, 1458, 0, 1459, 1460, 0, 0,
	1461, 0, 0, 1050, 1461, 2754, 1056, 1056, 3594, 1461,
	2753, 2855, 2858, 2859, 2860, 2856, 0, 2857, 2861, 0,
	0, 3515, 3516, 0, 0, 0, 1461, 2752, 3610, 0,
	0, 2751, 0, 0, 1461, 0, 0, 2855, 2858, 2859,
	2860, 2856, 1461, 2857, 2861, 0, 0, 1461, 2750, 0,
	0, 1461, 0, 2749, 0, 0, 0, 0, 1458, 0,
	1459, 1460, 2748, 1458, 0, 1459, 1460, 2742, 1461, 0,
	0, 0, 1461, 3642, 0, 0, 0, 1461, 2741, 0,
	1458, 0, 1459, 1460, 1458, 2740, 1459, 1460, 3661, 2737,
	3662, 3663, 3664, 0, 2736, 0, 1461, 3671, 0, 0,
	3678, 1458, 3680, 1459, 1460, 0, 1458, 0, 1459, 1460,
	0, 2735, 3651, 0, 0, 1458, 0, 1459, 1460, 2733,
	1458, 0, 1459, 1460, 0, 3178, 0, 2726, 87, 3681,
	3178, 1458, 2723, 1459, 1460, 0, 2721, 0, 1458, 0,
	1459, 1460, 1458, 1461, 1459, 1460, 0, 1458, 0, 1459,
	1460, 0, 0, 2719, 3615, 1461, 0, 2678, 0, 2101,
	1461, 2099, 2658, 3711, 1458, 3682, 1459, 1460, 3691, 3690,
	3701, 1461, 1458, 0, 1459, 1460, 1461, 3698, 3703, 3700,
	1458, 2657, 1459, 1460, 0, 1458, 0, 1459, 1460, 1458,
	0, 1459, 1460, 0, 0, 3861, 0, 0, 0, 0,
	0, 0, 3715, 0, 0, 0, 1458, 0, 1459, 1460,
	1458, 0, 1459, 1460, 0, 1458, 0, 1459, 1460, 42,
	0, 3571, 3572, 0, 0, 0, 0, 0, 2653, 0,
	0, 0, 0, 0, 1458, 3853, 1459, 1460, 3852, 0,
	2651, 0, 0, 0, 0, 2616, 3868, 0, 0, 3880,
	0, 0, 0, 3872, 3873, 0, 2610, 0, 0, 0,
	0, 2605, 0, 0, 3851, 0, 0, 3919, 3920, 3028,
	3029, 3030, 3031, 3032, 3705, 0, 0, 3679, 3863, 3864,
	3865, 1458, 0, 1459, 1460, 0, 2101, 0, 2099, 3047,
	3923, 0, 0, 1458, 0, 1459, 1460, 0, 1458, 0,
	1459, 1460, 3712, 3713, 0, 0, 0, 0, 0, 1458,
	0, 1459, 1460, 0, 1458, 0, 1459, 1460, 0, 0,
	0, 0, 3968, 3178, 3174, 3707, 0, 3926, 0, 0,
	3959, 3929, 0, 0, 0, 0, 0, 1531, 1532, 1533,
	1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543,
	1544, 1545, 1546, 1547, 1548, 1549, 1551, 1552, 1553, 1554,
	1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564,
	1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574,
	1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584,
	1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594,
	1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604,
	1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614,
	1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624,
	1625, 1626, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635,
	1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1649, 1650,
	1651, 1652, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673,
	1674, 1675, 1676, 1677, 1678, 1679, 3924, 3969, 3943, 3953,
	3952, 0, 0, 0, 0, 3949, 3177, 3951, 0, 0,
	3987, 3177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3180, 87, 3972,
	0, 0, 0, 0, 0, 0, 1693, 3971, 0, 0,
	0, 0, 0, 0, 0, 3198, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3976, 3856, 0, 3989, 0,
	0, 0, 0, 0, 3992, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3860, 0, 3994, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4001, 0, 0, 0, 0, 0, 0, 0,
	4011, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4012, 0, 0, 4013, 0, 0, 0, 0, 42,
	0, 0, 0, 0, 0, 0, 4035, 0, 0, 0,
	0, 87, 0, 0, 0, 0, 0, 4022, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4029, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1462, 0, 0,
	0, 4041, 1693, 0, 0, 0, 0, 0, 0, 0,
	0, 4052, 0, 3330, 4044, 4066, 4049, 3880, 4055, 4046,
	4045, 4039, 4043, 4048, 4047, 0, 0, 0, 1519, 0,
	0, 0, 0, 0, 0, 3347, 3348, 3973, 3349, 3351,
	3353, 4096, 4074, 0, 3177, 0, 0, 0, 0, 4086,
	4091, 4078, 0, 0, 0, 0, 0, 0, 0, 4104,
	0, 0, 42, 4106, 0, 0, 3366, 4117, 0, 0,
	4066, 3370, 3371, 3372, 3374, 3375, 3376, 3377, 3378, 3379,
	3380, 3381, 3382, 3383, 3384, 3385, 3386, 3388, 3390, 3392,
	3394, 3396, 3398, 3400, 3402, 3404, 3406, 3408, 3410, 3412,
	3414, 3416, 3418, 3419, 3421, 3422, 3423, 3425, 1985, 4121,
	3427, 4116, 3429, 3430, 3431, 4140, 4147, 3435, 3436, 3437,
	3438, 3439, 3440, 3441, 3442, 3443, 3444, 3445, 2101, 4153,
	2099, 4146, 4150, 4151, 4149, 4136, 3451, 4137, 4036, 4161,
	3456, 4031, 0, 0, 3460, 3461, 4066, 3462, 3464, 4169,
	3467, 3469, 4175, 3471, 3472, 3473, 3474, 4177, 0, 1009,
	3174, 2293, 0, 3482, 1010, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2100, 3978, 4186, 4187, 3920, 4185,
	0, 0, 0, 0, 4120, 0, 2101, 0, 2099, 0,
	4184, 0, 0, 0, 1797, 0, 0, 0, 3506, 3507,
	0, 3985, 3511, 0, 0, 0, 0, 0, 0, 3997,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1797, 0, 0, 0, 0, 0, 0, 0, 0,
	967, 968, 969, 970, 971, 972, 973, 974, 975, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 0, 0, 0, 0, 4030, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3586, 0,
	0, 0, 0, 0, 0, 0, 1746, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1785, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3605, 1834, 0, 3609, 0, 0, 0,
	0, 0, 0, 0, 0, 944, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1785, 3621,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 195, 1798, 4134, 0, 717, 0,
	0, 0, 0, 723, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 3644, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 0, 0, 0, 3652, 0, 0, 0,
	0, 0, 1798, 3659, 0, 0, 0, 0, 0, 0,
	0, 0, 1990, 0, 0, 723, 195, 723, 1811, 1814,
	1815, 1816, 1817, 1818, 1819, 0, 1820, 1821, 1823, 1824,
	1822, 1825, 1826, 1799, 1800, 1801, 1802, 1783, 1784, 1812,
	0, 1786, 0, 1787, 1788, 1789, 1790, 1791, 1792, 1793,
	1794, 1795, 0, 0, 1796, 1803, 1804, 1805, 1806, 0,
	1807, 1808, 1809, 1810, 0, 1811, 1814, 1815, 1816, 1817,
	1818, 1819, 0, 1820, 1821, 1823, 1824, 1822, 1825, 1826,
	1799, 1800, 1801, 1802, 1783, 1784, 1812, 0, 1786, 0,
	1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 0,
	0, 1796, 1803, 1804, 1805, 1806, 0, 1807, 1808, 1809,
	1810, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3869, 0, 0, 0, 0, 0, 0, 0,
	0, 3876, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3886, 3887, 3888, 0, 3890, 0, 3891, 3892, 0,
	0, 0, 3895, 3896, 3897, 3898, 3899, 3900, 3901, 3902,
	3903, 3904, 3905, 3906, 3907, 3908, 3909, 3910, 3911, 3912,
	3913, 3914, 3915, 3916, 0, 3918, 3921, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3930, 3931, 3932, 3933, 3934, 3936, 3937, 3939, 3941,
	3942, 3944, 0, 0, 0, 3948, 0, 0, 0, 3950,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2055, 2056, 2057, 2058, 0, 0, 0, 0,
	0, 0, 0, 0, 3977, 0, 0, 2068, 0, 0,
	1813, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2107, 2108, 0, 0, 0, 0, 2131, 0,
	0, 2135, 2136, 0, 0, 0, 2141, 1813, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161,
	2162, 0, 2164, 0, 0, 0, 2186, 2187, 2188, 2189,
	2190, 2191, 2193, 0, 2198, 0, 2200, 2201, 2202, 0,
	2204, 2205, 2206, 0, 2208, 2209, 2210, 2211, 2212, 2213,
	2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223,
	2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233,
	2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243,
	2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253,
	2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266,
	2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276,
	2277, 2278, 2279, 0, 0, 0, 0, 0, 2285, 0,
	2287, 0, 2294, 2295, 2296, 2297, 2298, 2299, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 4002,
	2319, 2320, 2321, 2322, 2323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4017, 0, 0, 0, 0, 0, 4020,
	0, 4021, 0, 0, 0, 0, 0, 0, 0, 0,
	1056, 0, 0, 0, 0, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 4034, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2364, 2365, 129,
	0, 151, 0, 0, 0, 0, 0, 0, 0, 0,
	4060, 4061, 172, 0, 0, 0, 0, 0, 0, 195,
	0, 195, 0, 2403, 4068, 4070, 4072, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4077, 0, 0, 162, 0, 0, 190, 0, 0, 150,
	0, 0, 4099, 0, 0, 0, 0, 2930, 723, 0,
	723, 723, 0, 0, 0, 0, 0, 0, 169, 0,
	129, 170, 151, 0, 0, 0, 0, 0, 0, 0,
	723, 195, 0, 172, 2445, 0, 0, 0, 0, 4118,
	0, 138, 139, 161, 160, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1505,
	0, 190, 0, 0, 162, 0, 0, 0, 0, 0,
	150, 0, 1851, 4141, 4143, 4145, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 129, 0, 151, 0, 169,
	0, 0, 170, 0, 0, 0, 0, 0, 172, 0,
	0, 0, 0, 0, 0, 0, 4166, 0, 0, 0,
	0, 0, 1855, 1856, 161, 160, 189, 0, 0, 0,
	0, 0, 0, 0, 4178, 4179, 0, 0, 0, 162,
	0, 0, 0, 0, 0, 150, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 155, 136, 158, 143,
	135, 0, 156, 157, 169, 0, 0, 170, 0, 173,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 144,
	0, 0, 0, 0, 0, 0, 0, 1855, 1856, 161,
	160, 189, 0, 147, 145, 140, 141, 142, 146, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 0, 0,
	0, 0, 0, 0, 148, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 155, 1857, 158,
	0, 1854, 0, 156, 157, 0, 0, 0, 0, 0,
	173, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1505, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 155, 1857, 158, 0, 1854, 0, 156, 157,
	0, 0, 0, 164, 0, 173, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 195, 0,
	0, 0, 723, 723, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 2614, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2620, 2621, 2622, 2623, 0, 0,
	0, 0, 723, 0, 164, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 723, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 0, 723, 159,
	0, 0, 0, 0, 0, 0, 0, 1519, 723, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 723, 0, 723, 0, 0, 0, 0, 0, 164,
	0, 723, 0, 0, 1505, 723, 0, 0, 723, 723,
	723, 723, 0, 723, 0, 723, 723, 0, 723, 723,
	723, 723, 723, 723, 0, 0, 0, 0, 0, 0,
	159, 1505, 723, 723, 1505, 723, 1505, 195, 723, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 152, 0,
	723, 153, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 723, 0, 0, 723, 0, 195, 195,
	0, 0, 0, 0, 0, 159, 0, 0, 0, 0,
	0, 165, 0, 0, 0, 195, 0, 0, 177, 0,
	0, 0, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	723, 0, 0, 0, 0, 0, 0, 0, 0, 152,
	0, 1746, 153, 0, 0, 0, 0, 0, 0, 185,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 166, 171, 168, 174, 175, 176, 178, 180,
	181, 182, 183, 0, 152, 0, 0, 153, 184, 186,
	187, 188, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 166, 171, 168, 174, 175, 176, 178,
	180, 181, 182, 183, 0, 0, 0, 0, 0, 184,
	186, 187, 188, 0, 0, 185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 723, 723, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	723, 0, 0, 0, 0, 0, 0, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 166, 171,
	168, 174, 175, 176, 178, 180, 181, 182, 183, 0,
	0, 0, 0, 0, 184, 186, 187, 188, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2993,
	0, 0, 0, 0, 0, 0, 0, 0, 723, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1505, 0,
	0, 0, 0, 3019, 3020, 3021, 0, 0, 3023, 0,
	0, 3025, 0, 0, 0, 0, 1505, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3044, 3045, 3046, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3051, 0, 0, 3053, 3054, 3055, 0,
	0, 943, 3056, 3057, 0, 0, 3058, 0, 3059, 0,
	0, 0, 0, 0, 0, 3060, 0, 3061, 0, 0,
	0, 3062, 0, 3063, 0, 0, 3064, 0, 3065, 0,
	3066, 0, 3067, 0, 3068, 0, 3069, 0, 3070, 0,
	3071, 0, 3072, 0, 3073, 0, 3074, 0, 3075, 0,
	3076, 0, 3077, 0, 3078, 0, 3079, 0, 3080, 0,
	3081, 0, 0, 702, 3082, 0, 3083, 0, 3084, 722,
	0, 3085, 0, 3086, 0, 3087, 0, 2257, 3089, 0,
	0, 3091, 0, 0, 3093, 3094, 3095, 3096, 0, 0,
	0, 0, 3097, 2257, 2257, 2257, 2257, 2257, 0, 0,
	2304, 0, 0, 0, 0, 0, 0, 0, 3107, 0,
	0, 0, 0, 0, 0, 0, 3120, 0, 0, 3124,
	0, 722, 0, 722, 0, 0, 0, 0, 3127, 3128,
	3129, 3130, 3131, 3132, 1009, 0, 0, 3133, 3134, 1010,
	3135, 0, 3136, 0, 0, 195, 0, 0, 0, 2100,
	723, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1056, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 723,
	0, 0, 0, 0, 0, 0, 0, 3169, 0, 0,
	0, 0, 0, 195, 0, 0, 0, 723, 0, 0,
	2304, 195, 0, 195, 0, 195, 195, 0, 0, 0,
	0, 0, 3199, 0, 0, 0, 0, 0, 0, 0,
	723, 0, 0, 0, 0, 967, 968, 969, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 0, 0, 0,
	0, 0, 0, 3262, 0, 0, 0, 723, 0, 0,
	0, 0, 0, 0, 723, 723, 723, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 723, 0, 0, 0, 0, 0,
	723, 723, 0, 0, 723, 0, 723, 0, 0, 0,
	0, 0, 723, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 723, 0, 0,
	0, 0, 723, 0, 0, 0, 723, 723, 0, 3355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3369, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 195, 0, 0, 195, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 723,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1699, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 666,
	1505, 0, 2304, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1014,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3567, 0, 0, 0, 0, 0,
	0, 1085, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3591, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3611, 0, 3612, 0, 3613,
	0, 3614, 0, 0, 722, 1421, 722, 722, 0, 3617,
	3618, 0, 0, 0, 0, 0, 0, 0, 3622, 0,
	0, 0, 0, 0, 0, 0, 722, 0, 0, 0,
	0, 0, 3623, 0, 3624, 0, 3625, 0, 3626, 0,
	3627, 0, 3628, 0, 3629, 0, 3630, 0, 3631, 0,
	3632, 0, 3633, 0, 3634, 1504, 3635, 0, 3636, 0,
	3637, 0, 3638, 0, 0, 3639, 0, 0, 0, 3640,
	0, 3641, 0, 195, 0, 0, 0, 3643, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 723, 0, 0, 0, 0, 0, 0, 3660,
	0, 0, 0, 0, 0, 0, 723, 0, 3665, 0,
	3666, 3667, 0, 3668, 0, 3669, 0, 0, 0, 0,
	3670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 0, 0, 195, 0, 900, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3699, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3708, 0, 0, 3710, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3714, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3848, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 723, 0, 721, 0, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	723, 0, 0, 0, 0, 0, 0, 723, 0, 0,
	0, 723, 723, 0, 0, 0, 723, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1504, 1081, 0, 1088,
	0, 0, 1505, 723, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 195, 195, 195, 195,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 722, 722,
	0, 0, 0, 0, 0, 195, 0, 0, 0, 3958,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 723, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 722, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 722, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 722, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 722, 0, 723, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 722, 0, 722,
	0, 0, 0, 0, 0, 0, 0, 722, 0, 0,
	1504, 722, 0, 0, 722, 722, 722, 722, 0, 722,
	0, 722, 722, 0, 722, 722, 722, 722, 722, 722,
	0, 0, 0, 0, 1205, 0, 1211, 1504, 722, 722,
	1504, 722, 1504, 0, 722, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 722, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 722,
	0, 723, 722, 0, 0, 0, 1434, 0, 0, 0,
	0, 0, 0, 723, 0, 0, 0, 0, 0, 95,
	0, 0, 1009, 0, 4000, 0, 949, 1010, 962, 963,
	964, 950, 0, 0, 951, 952, 0, 953, 0, 0,
	0, 0, 0, 0, 723, 0, 722, 0, 0, 0,
	0, 958, 0, 965, 966, 0, 0, 0, 0, 195,
	0, 0, 723, 0, 0, 0, 0, 0, 0, 0,
	4014, 0, 0, 4015, 0, 4016, 723, 0, 0, 0,
	1505, 0, 0, 723, 723, 1505, 195, 195, 195, 195,
	195, 0, 0, 0, 0, 0, 0, 0, 195, 0,
	0, 3298, 3299, 0, 195, 0, 195, 0, 0, 195,
	195, 195, 0, 967, 968, 969, 970, 971, 972, 973,
	974, 975, 976, 977, 978, 979, 980, 981, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 1008, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 723, 0,
	0, 1505, 0, 0, 0, 4097, 723, 0, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 901, 0, 0,
	0, 0, 0, 0, 0, 195, 3300, 0, 0, 0,
	0, 0, 0, 0, 4113, 0, 4114, 0, 4115, 0,
	0, 0, 0, 722, 722, 195, 0, 0, 195, 0,
	0, 0, 0, 0, 0, 0, 722, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 0, 0, 667, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 667, 0, 0, 0,
	0, 0, 0, 0, 3301, 3302, 0, 4164, 0, 4165,
	0, 0, 1037, 0, 722, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1504, 0, 0, 0, 0, 1057,
	1057, 0, 0, 2109, 0, 0, 0, 0, 667, 0,
	0, 0, 1504, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1269, 0, 1269, 1269, 0, 0, 0, 0, 0, 0,
	1758, 0, 0, 0, 723, 0, 0, 0, 0, 0,
	0, 0, 1433, 0, 0, 0, 0, 0, 914, 1775,
	0, 0, 0, 0, 918, 0, 0, 0, 915, 916,
	0, 0, 0, 917, 919, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 1914, 0, 0, 0, 722, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1959, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 195,
	195, 195, 0, 0, 1986, 0, 722, 0, 0, 723,
	723, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1997, 0, 0, 0, 0, 0, 0, 2001, 0, 0,
	0, 0, 0, 0, 0, 722, 0, 0, 2012, 2013,
	2014, 2015, 2016, 2017, 2018, 0, 0, 0, 0, 0,
	0, 0, 0, 722, 0, 0, 722, 0, 723, 723,
	723, 723, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 722, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 722, 0, 0, 0, 0, 0, 0,
	722, 722, 722, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1702, 1703, 0, 0, 0, 0,
	722, 0, 0, 0, 0, 0, 722, 722, 0, 0,
	722, 0, 722, 0, 0, 0, 0, 0, 722, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1752, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1770,
	0, 0, 0, 722, 0, 0, 0, 0, 722, 0,
	1828, 0, 722, 722, 723, 0, 723, 0, 195, 0,
	1837, 0, 0, 0, 2048, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1505, 0, 0,
	0, 195, 0, 1081, 723, 1863, 723, 0, 0, 0,
	0, 0, 0, 1872, 0, 0, 0, 1874, 0, 0,
	1877, 1878, 1880, 1880, 0, 1880, 0, 1880, 1880, 0,
	1889, 1880, 1880, 1880, 1880, 1880, 0, 0, 0, 0,
	0, 0, 0, 0, 1909, 1910, 0, 1081, 0, 0,
	1915, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 723, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	723, 0, 1957, 0, 0, 722, 0, 0, 0, 0,
	0, 0, 0, 723, 0, 1978, 0, 0, 1982, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 667, 0, 667, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1504, 0, 722, 0,
	0, 0, 0, 0, 0, 0, 0, 723, 0, 0,
	0, 0, 0, 667, 723, 0, 723, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1506, 0, 0, 0, 723, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2370, 0,
	0, 0, 0, 0, 0, 0, 2374, 0, 2377, 0,
	0, 2048, 0, 0, 0, 0, 0, 0, 0, 1269,
	1269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2036, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 723, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 723, 195, 0,
	2095, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 722, 0,
	0, 0, 1506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 722, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 723, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 723, 0, 0, 0, 2881, 0, 0,
	667, 0, 0, 1505, 723, 0, 723, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1037, 0, 0, 0, 0, 0, 0,
	0, 723, 2304, 0, 0, 0, 0, 0, 0, 2048,
	0, 0, 0, 0, 0, 0, 2535, 667, 0, 722,
	0, 0, 0, 0, 0, 0, 2554, 2555, 0, 0,
	2559, 0, 0, 0, 0, 0, 667, 0, 0, 0,
	195, 723, 2564, 0, 0, 0, 722, 0, 0, 2567,
	0, 0, 1269, 722, 0, 0, 0, 722, 722, 0,
	0, 0, 722, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2570, 0, 0, 1504, 722,
	0, 723, 0, 0, 0, 0, 1506, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2341, 0, 723, 0, 0, 0, 0, 195,
	0, 0, 0, 1506, 0, 0, 1506, 0, 1506, 667,
	0, 0, 0, 723, 0, 723, 0, 0, 0, 0,
	0, 2354, 0, 0, 0, 0, 0, 0, 0, 1931,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1752,
	0, 0, 1269, 0, 667, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 722, 0, 0, 0, 0, 0,
	1984, 667, 1081, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 667, 0, 0,
	0, 0, 0, 0, 667, 0, 0, 0, 0, 0,
	0, 0, 0, 2010, 2011, 667, 667, 667, 667, 667,
	667, 667, 722, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1088,
	0, 0, 0, 0, 0, 0, 2467, 2468, 2469, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1081, 0, 0, 0,
	0, 0, 1088, 1872, 0, 0, 1872, 0, 1872, 0,
	0, 0, 0, 0, 2499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1081,
	0, 0, 0, 0, 2095, 0, 0, 0, 2095, 2095,
	0, 0, 0, 0, 0, 0, 0, 722, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 722,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	722, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 722, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 667, 722, 0, 0, 0, 1504, 0, 0, 722,
	722, 1504, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2573, 0, 0, 0, 0, 0, 0, 0, 0,
	2868, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3247, 0, 0, 0, 0, 0, 1506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 722, 0, 0, 1504, 0, 0,
	0, 0, 722, 0, 1269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2917, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2966, 2967, 2968, 2969, 2970, 2971, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2048, 2981, 0,
	0, 0, 1984, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2989, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1931, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	722, 0, 0, 1057, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1037, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 667, 0, 0, 0, 0,
	0, 0, 1984, 667, 0, 667, 0, 667, 2393, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2816, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2831, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3535, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 722, 722, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2913, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 722, 722, 722, 722, 0, 0,
	0, 0, 2354, 0, 0, 0, 0, 0, 0, 2938,
	0, 0, 0, 1872, 1872, 0, 0, 0, 2943, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2954, 667, 0, 0, 0,
	0, 0, 0, 667, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 667, 667, 0, 0, 667, 0, 2561,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 667,
	0, 0, 0, 0, 0, 0, 667, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3252, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 667, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3290, 0, 0, 0,
	2095, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3304, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3322, 0, 0, 3325, 0, 0, 0, 0, 0, 0,
	722, 0, 722, 0, 0, 0, 0, 0, 2095, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1506, 1504, 1984, 0, 0, 0, 0, 0,
	722, 0, 722, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	722, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 722, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 722,
	0, 0, 0, 3109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3484, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1880, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3154, 0, 0, 0, 0, 0,
	0, 0, 0, 722, 0, 0, 0, 0, 1269, 0,
	722, 0, 722, 0, 0, 3181, 1880, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 722, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3545, 0, 0, 0, 667, 0, 0, 0, 0,
	0, 0, 0, 1931, 0, 0, 0, 0, 0, 0,
	0, 3560, 0, 0, 3561, 3562, 3563, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1081, 0, 0, 0, 0, 0, 0, 0, 2354, 0,
	0, 0, 667, 0, 0, 0, 0, 667, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 722,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 667, 0, 0, 0, 0, 0, 0, 2923, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 722, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 667, 667, 667,
	667, 667, 667, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1828, 0, 0, 722,
	0, 0, 0, 0, 667, 667, 0, 0, 0, 722,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1504,
	722, 0, 722, 0, 0, 0, 0, 667, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 722, 722, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 722, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 722, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	722, 2354, 2354, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 722,
	0, 722, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3599, 3600, 3601, 3602, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1057,
	0, 667, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1506, 0, 0, 0, 0, 1506, 667, 667,
	667, 667, 667, 0, 0, 0, 0, 0, 0, 0,
	3197, 0, 0, 0, 0, 0, 1931, 0, 667, 0,
	0, 667, 3205, 1984, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3676, 667, 3676, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 667, 0, 0, 3704, 0, 3706, 0,
	0, 0, 0, 0, 0, 0, 0, 667, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3998, 0, 0, 0, 667, 0, 0,
	667, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2354, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3871, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3676,
	0, 0, 0, 0, 0, 0, 3676, 0, 3676, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 667, 0, 0, 0, 2354, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 667,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 667, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 667, 0,
	0, 667, 667, 667, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3736, 3738, 3737, 3801, 3802, 3803, 3804,
	3805, 3806, 3807, 793, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2354, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2354,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4018, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4026, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2354, 0, 4032, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1269, 1269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4081, 0, 0, 0, 0, 0, 0,
	1931, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1506,
	0, 3742, 0, 1931, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4026, 0, 0, 3750, 3751, 0, 0,
	3826, 3825, 3824, 0, 0, 3822, 3823, 3821, 0, 0,
	0, 0, 0, 0, 0, 0, 2354, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1828, 0, 4081, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1931,
	3827, 914, 0, 769, 770, 3828, 3829, 918, 3830, 772,
	773, 915, 916, 0, 767, 771, 917, 919, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3733, 3734, 3735, 3739, 3740, 3741, 3752,
	3799, 3800, 3808, 3810, 870, 3809, 3811, 3812, 3813, 3816,
	3817, 3818, 3819, 3814, 3815, 3820, 3716, 3720, 3717, 3718,
	3719, 3731, 3721, 3722, 3723, 3724, 3725, 3726, 3727, 3728,
	3729, 3730, 3732, 3831, 3832, 3833, 3834, 3835, 3836, 3745,
	3749, 3748, 3746, 3747, 3743, 3744, 3771, 3770, 3772, 3773,
	3774, 3775, 3776, 3777, 3779, 3778, 3780, 3781, 3782, 3783,
	3784, 3785, 3753, 3754, 3757, 3758, 3756, 3755, 3759, 3768,
	3769, 3760, 3761, 3762, 3763, 3764, 3765, 3767, 3766, 3786,
	3787, 3788, 3789, 3790, 3792, 3791, 3795, 3796, 3794, 3793,
	3798, 3797, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 920, 0, 921, 0, 0, 925,
	0, 0, 0, 927, 926, 0, 928, 890, 889, 0,
	0, 922, 923, 0, 924, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3837,
	3838, 3839, 3840, 3841, 3842, 3843, 3844, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1931, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	667, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4054, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1931, 0, 0, 0, 0, 0, 393, 0,
	0, 0, 0, 1404, 1390, 522, 0, 1332, 1407, 1301,
	1320, 1417, 1323, 1326, 1369, 1279, 1347, 413, 1317, 1272,
	1305, 1274, 1312, 1275, 1303, 1334, 269, 1300, 1392, 1351,
	1406, 363, 266, 1281, 1306, 427, 1322, 203, 1371, 483,
	251, 374, 371, 577, 281, 272, 268, 249, 316, 382,
	425, 512, 419, 1413, 367, 1357, 0, 493, 398, 0,
	0, 1984, 1336, 1396, 1345, 1383, 1331, 1370, 1289, 1356,
	1408, 1318, 1366, 1409, 322, 247, 324, 202, 410, 494,
	285, 0, 0, 0, 0, 4056, 945, 0, 0, 0,
	0, 4057, 0, 0, 0, 0, 237, 0, 0, 244,
	0, 0, 0, 348, 357, 356, 337, 338, 340, 342,
	347, 354, 360, 1314, 1363, 601, 1403, 1315, 1365, 264,
	320, 271, 263, 574, 1414, 1395, 1278, 1344, 1402, 1339,
	0, 0, 228, 1405, 1338, 0, 1368, 0, 1420, 1273,
	1359, 0, 1276, 1280, 1416, 1400, 1309, 274, 0, 0,
	0, 0, 0, 0, 0, 1335, 1346, 1380, 1384, 1329,
	0, 0, 0, 0, 0, 0, 0, 0, 1307, 0,
	1355, 0, 0, 0, 1285, 1277, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1333, 0,
	0, 0, 0, 1288, 0, 1308, 1381, 0, 1271, 296,
	1282, 399, 256, 0, 450, 1388, 1399, 1330, 619, 1401,
	1328, 1327, 1375, 1286, 1394, 1321, 362, 1284, 329, 197,
	224, 0, 1319, 409, 458, 470, 1393, 1304, 1313, 252,
	1311, 468, 423, 596, 232, 283, 455, 429, 466, 437,
	286, 1354, 1373, 467, 369, 579, 447, 593, 620, 621,
	262, 403, 606, 516, 614, 638, 225, 259, 417, 501,
	599, 490, 394, 575, 576, 328, 489, 294, 201, 366,
	626, 223, 476, 368, 241, 230, 581, 603, 298, 288,
	453, 633, 212, 511, 591, 238, 480, 0, 0, 641,
	246, 500, 214, 588, 499, 390, 325, 326, 213, 0,
	454, 267, 292, 0, 0, 257, 412, 583, 584, 255,
	642, 227, 613, 219, 1283, 612, 405, 578, 589, 391,
	380, 218, 587, 389, 379, 333, 352, 353, 279, 306,
	444, 372, 445, 305, 307, 401, 400, 402, 206, 600,
	0, 207, 0, 495, 602, 643, 449, 211, 233, 234,
	236, 1299, 278, 282, 290, 293, 302, 303, 312, 364,
	416, 443, 439, 448, 1389, 573, 594, 607, 618, 624,
	625, 627, 628, 629, 630, 631, 634, 632, 404, 310,
	491, 332, 370, 1378, 1419, 422, 469, 239, 598, 492,
	199, 1293, 1298, 1291, 0, 253, 254, 1360, 569, 1294,
	1292, 1349, 1350, 1295, 1410, 1411, 1412, 1397, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 639, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 1382, 1287, 0, 1296,
	1297, 395, 1391, 585, 586, 662, 381, 482, 595, 334,
	346, 349, 339, 358, 0, 359, 335, 336, 341, 343,
	344, 345, 350, 351, 355, 361, 248, 209, 387, 396,
	572, 311, 215, 216, 217, 518, 519, 520, 521, 610,
	611, 615, 204, 459, 460, 461, 462, 291, 605, 308,
	465, 464, 330, 331, 376, 446, 534, 536, 547, 551,
	553, 555, 561, 564, 535, 537, 548, 552, 554, 556,
	562, 565, 524, 526, 528, 530, 543, 542, 539, 567,
	568, 545, 550, 529, 541, 546, 559, 566, 563, 523,
	527, 531, 540, 558, 557, 538, 549, 560, 544, 532,
	525, 533, 1353, 196, 220, 365, 1415, 451, 287, 640,
	609, 604, 205, 222, 1290, 261, 1302, 1310, 0, 1316,
	1324, 1325, 1337, 1340, 1341, 1342, 1343, 1361, 1362, 1364,
	1372, 1374, 1377, 1379, 1386, 1398, 1418, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 309,
	317, 318, 321, 327, 377, 383, 384, 385, 386, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 616, 622, 477, 300,
	301, 441, 442, 313, 314, 636, 637, 299, 592, 623,
	590, 635, 617, 435, 375, 1352, 1358, 378, 280, 304,
	319, 1367, 608, 498, 226, 463, 289, 250, 1385, 1387,
	210, 245, 229, 258, 273, 276, 323, 388, 397, 426,
	431, 295, 270, 243, 456, 240, 481, 513, 514, 515,
	517, 392, 265, 430, 1348, 1376, 373, 570, 571, 315,
	393, 0, 0, 0, 0, 1404, 1390, 522, 0, 1332,
	1407, 1301, 1320, 1417, 1323, 1326, 1369, 1279, 1347, 413,
	1317, 1272, 1305, 1274, 1312, 1275, 1303, 1334, 269, 1300,
	1392, 1351, 1406, 363, 266, 1281, 1306, 427, 1322, 203,
	1371, 483, 251, 374, 371, 577, 281, 272, 268, 249,
	316, 382, 425, 512, 419, 1413, 367, 1357, 0, 493,
	398, 0, 0, 0, 1336, 1396, 1345, 1383, 1331, 1370,
	1289, 1356, 1408, 1318, 1366, 1409, 322, 247, 324, 202,
	410, 494, 285, 0, 0, 0, 0, 0, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 348, 357, 356, 337, 338,
	340, 342, 347, 354, 360, 1314, 1363, 601, 1403, 1315,
	1365, 264, 320, 271, 263, 574, 1414, 1395, 1278, 1344,
	1402, 1339, 0, 0, 228, 1405, 1338, 0, 1368, 0,
	1420, 1273, 1359, 0, 1276, 1280, 1416, 1400, 1309, 274,
	0, 0, 0, 0, 0, 0, 0, 1335, 1346, 1380,
	1384, 1329, 0, 0, 0, 0, 0, 0, 3206, 0,
	1307, 0, 1355, 0, 0, 0, 1285, 1277, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1333, 0, 0, 0, 0, 1288, 0, 1308, 1381, 0,
	1271, 296, 1282, 399, 256, 0, 450, 1388, 1399, 1330,
	619, 1401, 1328, 1327, 1375, 1286, 1394, 1321, 362, 1284,
	329, 197, 224, 0, 1319, 409, 458, 470, 1393, 1304,
	1313, 252, 1311, 468, 423, 596, 232, 283, 455, 429,
	466, 437, 286, 1354, 1373, 467, 369, 579, 447, 593,
	620, 621, 262, 403, 606, 516, 614, 638, 225, 259,
	417, 501, 599, 490, 394, 575, 576, 328, 489, 294,
	201, 366, 626, 223, 476, 368, 241, 230, 581, 603,
	298, 288, 453, 633, 212, 511, 591, 238, 480, 0,
	0, 641, 246, 500, 214, 588, 499, 390, 325, 326,
	213, 0, 454, 267, 292, 0, 0, 257, 412, 583,
	584, 255, 642, 227, 613, 219, 1283, 612, 405, 578,
	589, 391, 380, 218, 587, 389, 379, 333, 352, 353,
	279, 306, 444, 372, 445, 305, 307, 401, 400, 402,
	206, 600, 0, 207, 0, 495, 602, 643, 449, 211,
	233, 234, 236, 1299, 278, 282, 290, 293, 302, 303,
	312, 364, 416, 443, 439, 448, 1389, 573, 594, 607,
	618, 624, 625, 627, 628, 629, 630, 631, 634, 632,
	404, 310, 491, 332, 370, 1378, 1419, 422, 469, 239,
	598, 492, 199, 1293, 1298, 1291, 0, 253, 254, 1360,
	569, 1294, 1292, 1349, 1350, 1295, 1410, 1411, 1412, 1397,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 639, 502,
	508, 503, 504, 505, 506, 507, 0, 509, 1382, 1287,
	0, 1296, 1297, 395, 1391, 585, 586, 662, 381, 482,
	595, 334, 346, 349, 339, 358, 0, 359, 335, 336,
	341, 343, 344, 345, 350, 351, 355, 361, 248, 209,
	387, 396, 572, 311, 215, 216, 217, 518, 519, 520,
	521, 610, 611, 615, 204, 459, 460, 461, 462, 291,
	605, 308, 465, 464, 330, 331, 376, 446, 534, 536,
	547, 551, 553, 555, 561, 564, 535, 537, 548, 552,
	554, 556, 562, 565, 524, 526, 528, 530, 543, 542,
	539, 567, 568, 545, 550, 529, 541, 546, 559, 566,
	563, 523, 527, 531, 540, 558, 557, 538, 549, 560,
	544, 532, 525, 533, 1353, 196, 220, 365, 1415, 451,
	287, 640, 609, 604, 205, 222, 1290, 261, 1302, 1310,
	0, 1316, 1324, 1325, 1337, 1340, 1341, 1342, 1343, 1361,
	1362, 1364, 1372, 1374, 1377, 1379, 1386, 1398, 1418, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 309, 317, 318, 321, 327, 377, 383, 384, 385,
	386, 406, 407, 408, 411, 414, 415, 418, 420, 421,
	424, 428, 432, 433, 434, 436, 438, 440, 452, 457,
	471, 472, 473, 474, 475, 478, 479, 484, 485, 486,
	487, 488, 496, 497, 510, 580, 582, 597, 616, 622,
	477, 300, 301, 441, 442, 313, 314, 636, 637, 299,
	592, 623, 590, 635, 617, 435, 375, 1352, 1358, 378,
	280, 304, 319, 1367, 608, 498, 226, 463, 289, 250,
	1385, 1387, 210, 245, 229, 258, 273, 276, 323, 388,
	397, 426, 431, 295, 270, 243, 456, 240, 481, 513,
	514, 515, 517, 392, 265, 430, 1348, 1376, 373, 570,
	571, 315, 393, 0, 0, 0, 0, 1404, 1390, 522,
	0, 1332, 1407, 1301, 1320, 1417, 1323, 1326, 1369, 1279,
	1347, 413, 1317, 1272, 1305, 1274, 1312, 1275, 1303, 1334,
	269, 1300, 1392, 1351, 1406, 363, 266, 1281, 1306, 427,
	1322, 203, 1371, 483, 251, 374, 371, 577, 281, 272,
	268, 249, 316, 382, 425, 512, 419, 1413, 367, 1357,
	0, 493, 398, 0, 0, 0, 1336, 1396, 1345, 1383,
	1331, 1370, 1289, 1356, 1408, 1318, 1366, 1409, 322, 247,
	324, 202, 410, 494, 285, 0, 0, 0, 0, 0,
	712, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 244, 0, 0, 0, 348, 357, 356,
	337, 338, 340, 342, 347, 354, 360, 1314, 1363, 601,
	1403, 1315, 1365, 264, 320, 271, 263, 574, 1414, 1395,
	1278, 1344, 1402, 1339, 0, 0, 228, 1405, 1338, 0,
	1368, 0, 1420, 1273, 1359, 0, 1276, 1280, 1416, 1400,
	1309, 274, 0, 0, 0, 0, 0, 0, 0, 1335,
	1346, 1380, 1384, 1329, 0, 0, 0, 0, 0, 0,
	3167, 0, 1307, 0, 1355, 0, 0, 0, 1285, 1277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1333, 0, 0, 0, 0, 1288, 0, 1308,
	1381, 0, 1271, 296, 1282, 399, 256, 0, 450, 1388,
	1399, 1330, 619, 1401, 1328, 1327, 1375, 1286, 1394, 1321,
	362, 1284, 329, 197, 224, 0, 1319, 409, 458, 470,
	1393, 1304, 1313, 252, 1311, 468, 423, 596, 232, 283,
	455, 429, 466, 437, 286, 1354, 1373, 467, 369, 579,
	447, 593, 620, 621, 262, 403, 606, 516, 614, 638,
	225, 259, 417, 501, 599, 490, 394, 575, 576, 328,
	489, 294, 201, 366, 626, 223, 476, 368, 241, 230,
	581, 603, 298, 288, 453, 633, 212, 511, 591, 238,
	480, 0, 0, 641, 246, 500, 214, 588, 499, 390,
	325, 326, 213, 0, 454, 267, 292, 0, 0, 257,
	412, 583, 584, 255, 642, 227, 613, 219, 1283, 612,
	405, 578, 589, 391, 380, 218, 587, 389, 379, 333,
	352, 353, 279, 306, 444, 372, 445, 305, 307, 401,
	400, 402, 206, 600, 0, 207, 0, 495, 602, 643,
	449, 211, 233, 234, 236, 1299, 278, 282, 290, 293,
	302, 303, 312, 364, 416, 443, 439, 448, 1389, 573,
	594, 607, 618, 624, 625, 627, 628, 629, 630, 631,
	634, 632, 404, 310, 491, 332, 370, 1378, 1419, 422,
	469, 239, 598, 492, 199, 1293, 1298, 1291, 0, 253,
	254, 1360, 569, 1294, 1292, 1349, 1350, 1295, 1410, 1411,
	1412, 1397, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	639, 502, 508, 503, 504, 505, 506, 507, 0, 509,
	1382, 1287, 0, 1296, 1297, 395, 1391, 585, 586, 662,
	381, 482, 595, 334, 346, 349, 339, 358, 0, 359,
	335, 336, 341, 343, 344, 345, 350, 351, 355, 361,
	248, 209, 387, 396, 572, 311, 215, 216, 217, 518,
	519, 520, 521, 610, 611, 615, 204, 459, 460, 461,
	462, 291, 605, 308, 465, 464, 330, 331, 376, 446,
	534, 536, 547, 551, 553, 555, 561, 564, 535, 537,
	548, 552, 554, 556, 562, 565, 524, 526, 528, 530,
	543, 542, 539, 567, 568, 545, 550, 529, 541, 546,
	559, 566, 563, 523, 527, 531, 540, 558, 557, 538,
	549, 560, 544, 532, 525, 533, 1353, 196, 220, 365,
	1415, 451, 287, 640, 609, 604, 205, 222, 1290, 261,
	1302, 1310, 0, 1316, 1324, 1325, 1337, 1340, 1341, 1342,
	1343, 1361, 1362, 1364, 1372, 1374, 1377, 1379, 1386, 1398,
	1418, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 309, 317, 318, 321, 327, 377, 383,
	384, 385, 386, 406, 407, 408, 411, 414, 415, 418,
	420, 421, 424, 428, 432, 433, 434, 436, 438, 440,
	452, 457, 471, 472, 473, 474, 475, 478, 479, 484,
	485, 486, 487, 488, 496, 497, 510, 580, 582, 597,
	616, 622, 477, 300, 301, 441, 442, 313, 314, 636,
	637, 299, 592, 623, 590, 635, 617, 435, 375, 1352,
	1358, 378, 280, 304, 319, 1367, 608, 498, 226, 463,
	289, 250, 1385, 1387, 210, 245, 229, 258, 273, 276,
	323, 388, 397, 426, 431, 295, 270, 243, 456, 240,
	481, 513, 514, 515, 517, 392, 265, 430, 1348, 1376,
	373, 570, 571, 315, 393, 0, 0, 0, 0, 1404,
	1390, 522, 0, 1332, 1407, 1301, 1320, 1417, 1323, 1326,
	1369, 1279, 1347, 413, 1317, 1272, 1305, 1274, 1312, 1275,
	1303, 1334, 269, 1300, 1392, 1351, 1406, 363, 266, 1281,
	1306, 427, 1322, 203, 1371, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 1413,
	367, 1357, 0, 493, 398, 0, 0, 0, 1336, 1396,
	1345, 1383, 1331, 1370, 1289, 1356, 1408, 1318, 1366, 1409,
	322, 247, 324, 202, 410, 494, 285, 0, 0, 0,
	0, 0, 945, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 348,
	357, 356, 337, 338, 340, 342, 347, 354, 360, 1314,
	1363, 601, 1403, 1315, 1365, 264, 320, 271, 263, 574,
	1414, 1395, 1278, 1344, 1402, 1339, 0, 0, 228, 1405,
	1338, 0, 1368, 0, 1420, 1273, 1359, 0, 1276, 1280,
	1416, 1400, 1309, 274, 0, 0, 0, 0, 0, 0,
	0, 1335, 1346, 1380, 1384, 1329, 0, 0, 0, 0,
	0, 0, 2372, 0, 1307, 0, 1355, 0, 0, 0,
	1285, 1277, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1333, 0, 0, 0, 0, 1288,
	0, 1308, 1381, 0, 1271, 296, 1282, 399, 256, 0,
	450, 1388, 1399, 1330, 619, 1401, 1328, 1327, 1375, 1286,
	1394, 1321, 362, 1284, 329, 197, 224, 0, 1319, 409,
	458, 470, 1393, 1304, 1313, 252, 1311, 468, 423, 596,
	232, 283, 455, 429, 466, 437, 286, 1354, 1373, 467,
	369, 579, 447, 593, 620, 621, 262, 403, 606, 516,
	614, 638, 225, 259, 417, 501, 599, 490, 394, 575,
	576, 328, 489, 294, 201, 366, 626, 223, 476, 368,
	241, 230, 581, 603, 298, 288, 453, 633, 212, 511,
	591, 238, 480, 0, 0, 641, 246, 500, 214, 588,
	499, 390, 325, 326, 213, 0, 454, 267, 292, 0,
	0, 257, 412, 583, 584, 255, 642, 227, 613, 219,
	1283, 612, 405, 578, 589, 391, 380, 218, 587, 389,
	379, 333, 352, 353, 279, 306, 444, 372, 445, 305,
	307, 401, 400, 402, 206, 600, 0, 207, 0, 495,
	602, 643, 449, 211, 233, 234, 236, 1299, 278, 282,
	290, 293, 302, 303, 312, 364, 416, 443, 439, 448,
	1389, 573, 594, 607, 618, 624, 625, 627, 628, 629,
	630, 631, 634, 632, 404, 310, 491, 332, 370, 1378,
	1419, 422, 469, 239, 598, 492, 199, 1293, 1298, 1291,
	0, 253, 254, 1360, 569, 1294, 1292, 1349, 1350, 1295,
	1410, 1411, 1412, 1397, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 639, 502, 508, 503, 504, 505, 506, 507,
	0, 509, 1382, 1287, 0, 1296, 1297, 395, 1391, 585,
	586, 662, 381, 482, 595, 334, 346, 349, 339, 358,
	0, 359, 335, 336, 341, 343, 344, 345, 350, 351,
	355, 361, 248, 209, 387, 396, 572, 311, 215, 216,
	217, 518, 519, 520, 521, 610, 611, 615, 204, 459,
	460, 461, 462, 291, 605, 308, 465, 464, 330, 331,
	376, 446, 534, 536, 547, 551, 553, 555, 561, 564,
	535, 537, 548, 552, 554, 556, 562, 565, 524, 526,
	528, 530, 543, 542, 539, 567, 568, 545, 550, 529,
	541, 546, 559, 566, 563, 523, 527, 531, 540, 558,
	557, 538, 549, 560, 544, 532, 525, 533, 1353, 196,
	220, 365, 1415, 451, 287, 640, 609, 604, 205, 222,
	1290, 261, 1302, 1310, 0, 1316, 1324, 1325, 1337, 1340,
	1341, 1342, 1343, 1361, 1362, 1364, 1372, 1374, 1377, 1379,
	1386, 1398, 1418, 198, 200, 208, 221, 231, 235, 242,
	260, 275, 277, 284, 297, 309, 317, 318, 321, 327,
	377, 383, 384, 385, 386, 406, 407, 408, 411, 414,
	415, 418, 420, 421, 424, 428, 432, 433, 434, 436,
	438, 440, 452, 457, 471, 472, 473, 474, 475, 478,
	479, 484, 485, 486, 487, 488, 496, 497, 510, 580,
	582, 597, 616, 622, 477, 300, 301, 441, 442, 313,
	314, 636, 637, 299, 592, 623, 590, 635, 617, 435,
	375, 1352, 1358, 378, 280, 304, 319, 1367, 608, 498,
	226, 463, 289, 250, 1385, 1387, 210, 245, 229, 258,
	273, 276, 323, 388, 397, 426, 431, 295, 270, 243,
	456, 240, 481, 513, 514, 515, 517, 392, 265, 430,
	1348, 1376, 373, 570, 571, 315, 393, 0, 0, 0,
	0, 1404, 1390, 522, 0, 1332, 1407, 1301, 1320, 1417,
	1323, 1326, 1369, 1279, 1347, 413, 1317, 1272, 1305, 1274,
	1312, 1275, 1303, 1334, 269, 1300, 1392, 1351, 1406, 363,
	266, 1281, 1306, 427, 1322, 203, 1371, 483, 251, 374,
	371, 577, 281, 272, 268, 249, 316, 382, 425, 512,
	419, 1413, 367, 1357, 0, 493, 398, 0, 0, 0,
	1336, 1396, 1345, 1383, 1331, 1370, 1289, 1356, 1408, 1318,
	1366, 1409, 322, 247, 324, 202, 410, 494, 285, 0,
	95, 0, 0, 0, 712, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 348, 357, 356, 337, 338, 340, 342, 347, 354,
	360, 1314, 1363, 601, 1403, 1315, 1365, 264, 320, 271,
	263, 574, 1414, 1395, 1278, 1344, 1402, 1339, 0, 0,
	228, 1405, 1338, 0, 1368, 0, 1420, 1273, 1359, 0,
	1276, 1280, 1416, 1400, 1309, 274, 0, 0, 0, 0,
	0, 0, 0, 1335, 1346, 1380, 1384, 1329, 0, 0,
	0, 0, 0, 0, 0, 0, 1307, 0, 1355, 0,
	0, 0, 1285, 1277, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1333, 0, 0, 0,
	0, 1288, 0, 1308, 1381, 0, 1271, 296, 1282, 399,
	256, 0, 450, 1388, 1399, 1330, 619, 1401, 1328, 1327,
	1375, 1286, 1394, 1321, 362, 1284, 329, 197, 224, 0,
	1319, 409, 458, 470, 1393, 1304, 1313, 252, 1311, 468,
	423, 596, 232, 283, 455, 429, 466, 437, 286, 1354,
	1373, 467, 369, 579, 447, 593, 620, 621, 262, 403,
	606, 516, 614, 638, 225, 259, 417, 501, 599, 490,
	394, 575, 576, 328, 489, 294, 201, 366, 626, 223,
	476, 368, 241, 230, 581, 603, 298, 288, 453, 633,
	212, 511, 591, 238, 480, 0, 0, 641, 246, 500,
	214, 588, 499, 390, 325, 326, 213, 0, 454, 267,
	292, 0, 0, 257, 412, 583, 584, 255, 642, 227,
	613, 219, 1283, 612, 405, 578, 589, 391, 380, 218,
	587, 389, 379, 333, 352, 353, 279, 306, 444, 372,
	445, 305, 307, 401, 400, 402, 206, 600, 0, 207,
	0, 495, 602, 643, 449, 211, 233, 234, 236, 1299,
	278, 282, 290, 293, 302, 303, 312, 364, 416, 443,
	439, 448, 1389, 573, 594, 607, 618, 624, 625, 627,
	628, 629, 630, 631, 634, 632, 404, 310, 491, 332,
	370, 1378, 1419, 422, 469, 239, 598, 492, 199, 1293,
	1298, 1291, 0, 253, 254, 1360, 569, 1294, 1292, 1349,
	1350, 1295, 1410, 1411, 1412, 1397, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 639, 502, 508, 503, 504, 505,
	506, 507, 0, 509, 1382, 1287, 0, 1296, 1297, 395,
	1391, 585, 586, 662, 381, 482, 595, 334, 346, 349,
	339, 358, 0, 359, 335, 336, 341, 343, 344, 345,
	350, 351, 355, 361, 248, 209, 387, 396, 572, 311,
	215, 216, 217, 518, 519, 520, 521, 610, 611, 615,
	204, 459, 460, 461, 462, 291, 605, 308, 465, 464,
	330, 331, 376, 446, 534, 536, 547, 551, 553, 555,
	561, 564, 535, 537, 548, 552, 554, 556, 562, 565,
	524, 526, 528, 530, 543, 542, 539, 567, 568, 545,
	550, 529, 541, 546, 559, 566, 563, 523, 527, 531,
	540, 558, 557, 538, 549, 560, 544, 532, 525, 533,
	1353, 196, 220, 365, 1415, 451, 287, 640, 609, 604,
	205, 222, 1290, 261, 1302, 1310, 0, 1316, 1324, 1325,
	1337, 1340, 1341, 1342, 1343, 1361, 1362, 1364, 1372, 1374,
	1377, 1379, 1386, 1398, 1418, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 309, 317, 318,
	321, 327, 377, 383, 384, 385, 386, 406, 407, 408,
	411, 414, 415, 418, 420, 421, 424, 428, 432, 433,
	434, 436, 438, 440, 452, 457, 471, 472, 473, 474,
	475, 478, 479, 484, 485, 486, 487, 488, 496, 497,
	510, 580, 582, 597, 616, 622, 477, 300, 301, 441,
	442, 313, 314, 636, 637, 299, 592, 623, 590, 635,
	617, 435, 375, 1352, 1358, 378, 280, 304, 319, 1367,
	608, 498, 226, 463, 289, 250, 1385, 1387, 210, 245,
	229, 258, 273, 276, 323, 388, 397, 426, 431, 295,
	270, 243, 456, 240, 481, 513, 514, 515, 517, 392,
	265, 430, 1348, 1376, 373, 570, 571, 315, 393, 0,
	0, 0, 0, 1404, 1390, 522, 0, 1332, 1407, 1301,
	1320, 1417, 1323, 1326, 1369, 1279, 1347, 413, 1317, 1272,
	1305, 1274, 1312, 1275, 1303, 1334, 269, 1300, 1392, 1351,
	1406, 363, 266, 1281, 1306, 427, 1322, 203, 1371, 483,
	251, 374, 371, 577, 281, 272, 268, 249, 316, 382,
	425, 512, 419, 1413, 367, 1357, 0, 493, 398, 0,
	0, 0, 1336, 1396, 1345, 1383, 1331, 1370, 1289, 1356,
	1408, 1318, 1366, 1409, 322, 247, 324, 202, 410, 494,
	285, 0, 0, 0, 0, 0, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 244,
	0, 0, 0, 348, 357, 356, 337, 338, 340, 342,
	347, 354, 360, 1314, 1363, 601, 1403, 1315, 1365, 264,
	320, 271, 263, 574, 1414, 1395, 1278, 1344, 1402, 1339,
	0, 0, 228, 1405, 1338, 0, 1368, 0, 1420, 1273,
	1359, 0, 1276, 1280, 1416, 1400, 1309, 274, 0, 0,
	0, 0, 0, 0, 0, 1335, 1346, 1380, 1384, 1329,
	0, 0, 0, 0, 0, 0, 0, 0, 1307, 0,
	1355, 0, 0, 0, 1285, 1277, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1333, 0,
	0, 0, 0, 1288, 0, 1308, 1381, 0, 1271, 296,
	1282, 399, 256, 0, 450, 1388, 1399, 1330, 619, 1401,
	1328, 1327, 1375, 1286, 1394, 1321, 362, 1284, 329, 197,
	224, 0, 1319, 409, 458, 470, 1393, 1304, 1313, 252,
	1311, 468, 423, 596, 232, 283, 455, 429, 466, 437,
	286, 1354, 1373, 467, 369, 579, 447, 593, 620, 621,
	262, 403, 606, 516, 614, 638, 225, 259, 417, 501,
	599, 490, 394, 575, 576, 328, 489, 294, 201, 366,
	626, 223, 476, 368, 241, 230, 581, 603, 298, 288,
	453, 633, 212, 511, 591, 238, 480, 0, 0, 641,
	246, 500, 214, 588, 499, 390, 325, 326, 213, 0,
	454, 267, 292, 0, 0, 257, 412, 583, 584, 255,
	642, 227, 613, 219, 1283, 612, 405, 578, 589, 391,
	380, 218, 587, 389, 379, 333, 352, 353, 279, 306,
	444, 372, 445, 305, 307, 401, 400, 402, 206, 600,
	0, 207, 0, 495, 602, 643, 449, 211, 233, 234,
	236, 1299, 278, 282, 290, 293, 302, 303, 312, 364,
	416, 443, 439, 448, 1389, 573, 594, 607, 618, 624,
	625, 627, 628, 629, 630, 631, 634, 632, 404, 310,
	491, 332, 370, 1378, 1419, 422, 469, 239, 598, 492,
	199, 1293, 1298, 1291, 0, 253, 254, 1360, 569, 1294,
	1292, 1349, 1350, 1295, 1410, 1411, 1412, 1397, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 639, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 1382, 1287, 0, 1296,
	1297, 395, 1391, 585, 586, 662, 381, 482, 595, 334,
	346, 349, 339, 358, 0, 359, 335, 336, 341, 343,
	344, 345, 350, 351, 355, 361, 248, 209, 387, 396,
	572, 311, 215, 216, 217, 518, 519, 520, 521, 610,
	611, 615, 204, 459, 460, 461, 462, 291, 605, 308,
	465, 464, 330, 331, 376, 446, 534, 536, 547, 551,
	553, 555, 561, 564, 535, 537, 548, 552, 554, 556,
	562, 565, 524, 526, 528, 530, 543, 542, 539, 567,
	568, 545, 550, 529, 541, 546, 559, 566, 563, 523,
	527, 531, 540, 558, 557, 538, 549, 560, 544, 532,
	525, 533, 1353, 196, 220, 365, 1415, 451, 287, 640,
	609, 604, 205, 222, 1290, 261, 1302, 1310, 0, 1316,
	1324, 1325, 1337, 1340, 1341, 1342, 1343, 1361, 1362, 1364,
	1372, 1374, 1377, 1379, 1386, 1398, 1418, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 309,
	317, 318, 321, 327, 377, 383, 384, 385, 386, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 616, 622, 477, 300,
	301, 441, 442, 313, 314, 636, 637, 299, 592, 623,
	590, 635, 617, 435, 375, 1352, 1358, 378, 280, 304,
	319, 1367, 608, 498, 226, 463, 289, 250, 1385, 1387,
	210, 245, 229, 258, 273, 276, 323, 388, 397, 426,
	431, 295, 270, 243, 456, 240, 481, 513, 514, 515,
	517, 392, 265, 430, 1348, 1376, 373, 570, 571, 315,
	393, 0, 0, 0, 0, 1404, 1390, 522, 0, 1332,
	1407, 1301, 1320, 1417, 1323, 1326, 1369, 1279, 1347, 413,
	1317, 1272, 1305, 1274, 1312, 1275, 1303, 1334, 269, 1300,
	1392, 1351, 1406, 363, 266, 1281, 1306, 427, 1322, 203,
	1371, 483, 251, 374, 371, 577, 281, 272, 268, 249,
	316, 382, 425, 512, 419, 1413, 367, 1357, 0, 493,
	398, 0, 0, 0, 1336, 1396, 1345, 1383, 1331, 1370,
	1289, 1356, 1408, 1318, 1366, 1409, 322, 247, 324, 202,
	410, 494, 285, 0, 0, 0, 0, 0, 712, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 348, 357, 356, 337, 338,
	340, 342, 347, 354, 360, 1314, 1363, 601, 1403, 1315,
	1365, 264, 320, 271, 263, 574, 1414, 1395, 1278, 1344,
	1402, 1339, 0, 0, 228, 1405, 1338, 0, 1368, 0,
	1420, 1273, 1359, 0, 1276, 1280, 1416, 1400, 1309, 274,
	0, 0, 0, 0, 0, 0, 0, 1335, 1346, 1380,
	1384, 1329, 0, 0, 0, 0, 0, 0, 0, 0,
	1307, 0, 1355, 0, 0, 0, 1285, 1277, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1333, 0, 0, 0, 0, 1288, 0, 1308, 1381, 0,
	1271, 296, 1282, 399, 256, 0, 450, 1388, 1399, 1330,
	619, 1401, 1328, 1327, 1375, 1286, 1394, 1321, 362, 1284,
	329, 197, 224, 0, 1319, 409, 458, 470, 1393, 1304,
	1313, 252, 1311, 468, 423, 596, 232, 283, 455, 429,
	466, 437, 286, 1354, 1373, 467, 369, 579, 447, 593,
	620, 621, 262, 403, 606, 516, 614, 638, 225, 259,
	417, 501, 599, 490, 394, 575, 576, 328, 489, 294,
	201, 366, 626, 223, 476, 368, 241, 230, 581, 603,
	298, 288, 453, 633, 212, 511, 591, 238, 480, 0,
	0, 641, 246, 500, 214, 588, 499, 390, 325, 326,
	213, 0, 454, 267, 292, 0, 0, 257, 412, 583,
	584, 255, 642, 227, 613, 219, 1283, 612, 405, 578,
	589, 391, 380, 218, 587, 389, 379, 333, 352, 353,
	279, 306, 444, 372, 445, 305, 307, 401, 400, 402,
	206, 600, 0, 207, 0, 495, 602, 643, 449, 211,
	233, 234, 236, 1299, 278, 282, 290, 293, 302, 303,
	312, 364, 416, 443, 439, 448, 1389, 573, 594, 607,
	618, 624, 625, 627, 628, 629, 630, 631, 634, 632,
	404, 310, 491, 332, 370, 1378, 1419, 422, 469, 239,
	598, 492, 199, 1293, 1298, 1291, 0, 253, 254, 1360,
	569, 1294, 1292, 1349, 1350, 1295, 1410, 1411, 1412, 1397,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 639, 502,
	508, 503, 504, 505, 506, 507, 0, 509, 1382, 1287,
	0, 1296, 1297, 395, 1391, 585, 586, 662, 381, 482,
	595, 334, 346, 349, 339, 358, 0, 359, 335, 336,
	341, 343, 344, 345, 350, 351, 355, 361, 248, 209,
	387, 396, 572, 311, 215, 216, 217, 518, 519, 520,
	521, 610, 611, 615, 204, 459, 460, 461, 462, 291,
	605, 308, 465, 464, 330, 331, 376, 446, 534, 536,
	547, 551, 553, 555, 561, 564, 535, 537, 548, 552,
	554, 556, 562, 565, 524, 526, 528, 530, 543, 542,
	539, 567, 568, 545, 550, 529, 541, 546, 559, 566,
	563, 523, 527, 531, 540, 558, 557, 538, 549, 560,
	544, 532, 525, 533, 1353, 196, 220, 365, 1415, 451,
	287, 640, 609, 604, 205, 222, 1290, 261, 1302, 1310,
	0, 1316, 1324, 1325, 1337, 1340, 1341, 1342, 1343, 1361,
	1362, 1364, 1372, 1374, 1377, 1379, 1386, 1398, 1418, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 309, 317, 318, 321, 327, 377, 383, 384, 385,
	386, 406, 407, 408, 411, 414, 415, 418, 420, 421,
	424, 428, 432, 433, 434, 436, 438, 440, 452, 457,
	471, 472, 473, 474, 475, 478, 479, 484, 485, 486,
	487, 488, 496, 497, 510, 580, 582, 597, 616, 622,
	477, 300, 301, 441, 442, 313, 314, 636, 637, 299,
	592, 623, 590, 635, 617, 435, 375, 1352, 1358, 378,
	280, 304, 319, 1367, 608, 498, 226, 463, 289, 250,
	1385, 1387, 210, 245, 229, 258, 273, 276, 323, 388,
	397, 426, 431, 295, 270, 243, 456, 240, 481, 513,
	514, 515, 517, 392, 265, 430, 1348, 1376, 373, 570,
	571, 315, 393, 0, 0, 0, 0, 1404, 1390, 522,
	0, 1332, 1407, 1301, 1320, 1417, 1323, 1326, 1369, 1279,
	1347, 413, 1317, 1272, 1305, 1274, 1312, 1275, 1303, 1334,
	269, 1300, 1392, 1351, 1406, 363, 266, 1281, 1306, 427,
	1322, 203, 1371, 483, 251, 374, 371, 577, 281, 272,
	268, 249, 316, 382, 425, 512, 419, 1413, 367, 1357,
	0, 493, 398, 0, 0, 0, 1336, 1396, 1345, 1383,
	1331, 1370, 1289, 1356, 1408, 1318, 1366, 1409, 322, 247,
	324, 202, 410, 494, 285, 0, 0, 0, 0, 0,
	945, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 244, 0, 0, 0, 348, 357, 356,
	337, 338, 340, 342, 347, 354, 360, 1314, 1363, 601,
	1403, 1315, 1365, 264, 320, 271, 263, 574, 1414, 1395,
	1278, 1344, 1402, 1339, 0, 0, 228, 1405, 1338, 0,
	1368, 0, 1420, 1273, 1359, 0, 1276, 1280, 1416, 1400,
	1309, 274, 0, 0, 0, 0, 0, 0, 0, 1335,
	1346, 1380, 1384, 1329, 0, 0, 0, 0, 0, 0,
	0, 0, 1307, 0, 1355, 0, 0, 0, 1285, 1277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1333, 0, 0, 0, 0, 1288, 0, 1308,
	1381, 0, 1271, 296, 1282, 399, 256, 0, 450, 1388,
	1399, 1330, 619, 1401, 1328, 1327, 1375, 1286, 1394, 1321,
	362, 1284, 329, 197, 224, 0, 1319, 409, 458, 470,
	1393, 1304, 1313, 252, 1311, 468, 423, 596, 232, 283,
	455, 429, 466, 437, 286, 1354, 1373, 467, 369, 579,
	447, 593, 620, 621, 262, 403, 606, 516, 614, 638,
	225, 259, 417, 501, 599, 490, 394, 575, 576, 328,
	489, 294, 201, 366, 626, 223, 476, 368, 241, 230,
	581, 603, 298, 288, 453, 633, 212, 511, 591, 238,
	480, 0, 0, 641, 246, 500, 214, 588, 499, 390,
	325, 326, 213, 0, 454, 267, 292, 0, 0, 257,
	412, 583, 584, 255, 642, 227, 613, 219, 1283, 612,
	405, 578, 589, 391, 380, 218, 587, 389, 379, 333,
	352, 353, 279, 306, 444, 372, 445, 305, 307, 401,
	400, 402, 206, 600, 0, 207, 0, 495, 602, 643,
	449, 211, 233, 234, 236, 1299, 278, 282, 290, 293,
	302, 303, 312, 364, 416, 443, 439, 448, 1389, 573,
	594, 607, 618, 624, 625, 627, 628, 629, 630, 631,
	634, 632, 404, 310, 491, 332, 370, 1378, 1419, 422,
	469, 239, 598, 492, 199, 1293, 1298, 1291, 0, 253,
	254, 1360, 569, 1294, 1292, 1349, 1350, 1295, 1410, 1411,
	1412, 1397, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	639, 502, 508, 503, 504, 505, 506, 507, 0, 509,
	1382, 1287, 0, 1296, 1297, 395, 1391, 585, 586, 662,
	381, 482, 595, 334, 346, 349, 339, 358, 0, 359,
	335, 336, 341, 343, 344, 345, 350, 351, 355, 361,
	248, 209, 387, 396, 572, 311, 215, 216, 217, 518,
	519, 520, 521, 610, 611, 615, 204, 459, 460, 461,
	462, 291, 605, 308, 465, 464, 330, 331, 376, 446,
	534, 536, 547, 551, 553, 555, 561, 564, 535, 537,
	548, 552, 554, 556, 562, 565, 524, 526, 528, 530,
	543, 542, 539, 567, 568, 545, 550, 529, 541, 546,
	559, 566, 563, 523, 527, 531, 540, 558, 557, 538,
	549, 560, 544, 532, 525, 533, 1353, 196, 220, 365,
	1415, 451, 287, 640, 609, 604, 205, 222, 1290, 261,
	1302, 1310, 0, 1316, 1324, 1325, 1337, 1340, 1341, 1342,
	1343, 1361, 1362, 1364, 1372, 1374, 1377, 1379, 1386, 1398,
	1418, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 309, 317, 318, 321, 327, 377, 383,
	384, 385, 386, 406, 407, 408, 411, 414, 415, 418,
	420, 421, 424, 428, 432, 433, 434, 436, 438, 440,
	452, 457, 471, 472, 473, 474, 475, 478, 479, 484,
	485, 486, 487, 488, 496, 497, 510, 580, 582, 597,
	616, 622, 477, 300, 301, 441, 442, 313, 314, 636,
	637, 299, 592, 623, 590, 635, 617, 435, 375, 1352,
	1358, 378, 280, 304, 319, 1367, 608, 498, 226, 463,
	289, 250, 1385, 1387, 210, 245, 229, 258, 273, 276,
	323, 388, 397, 426, 431, 295, 270, 243, 456, 240,
	481, 513, 514, 515, 517, 392, 265, 430, 1348, 1376,
	373, 570, 571, 315, 393, 0, 0, 0, 0, 0,
	0, 522, 0, 765, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 752, 0,
	0, 0, 269, 757, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 764,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	759, 760, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 95, 0,
	0, 1009, 945, 736, 911, 949, 1010, 962, 963, 964,
	950, 0, 237, 951, 952, 244, 953, 0, 910, 795,
	797, 796, 860, 861, 862, 863, 864, 865, 866, 793,
	958, 601, 965, 966, 0, 264, 320, 271, 263, 574,
	0, 0, 2194, 2195, 2196, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 732, 749, 0, 763,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	746, 747, 0, 0, 0, 0, 905, 0, 748, 0,
	0, 756, 967, 968, 969, 970, 971, 972, 973, 974,
	975, 976, 977, 978, 979, 980, 981, 982, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 1008, 758, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 399, 256, 0,
	450, 904, 0, 0, 619, 0, 0, 902, 0, 0,
	0, 0, 362, 0, 329, 197, 224, 0, 0, 409,
	458, 470, 0, 0, 0, 955, 0, 468, 423, 596,
	232, 283, 455, 429, 466, 437, 286, 0, 0, 467,
	369, 579, 447, 593, 620, 621, 262, 403, 606, 516,
	614, 638, 225, 259, 417, 501, 599, 490, 394, 575,
	576, 328, 489, 294, 201, 366, 626, 223, 476, 368,
	241, 230, 581, 603, 298, 288, 453, 633, 212, 511,
	591, 238, 480, 0, 0, 641, 246, 500, 214, 588,
	499, 390, 325, 326, 213, 0, 454, 267, 292, 0,
	0, 257, 412, 956, 957, 255, 642, 801, 613, 219,
	0, 612, 405, 578, 589, 391, 380, 218, 587, 389,
	379, 333, 809, 810, 279, 306, 886, 885, 884, 305,
	307, 882, 883, 881, 206, 600, 0, 207, 0, 495,
	602, 643, 449, 211, 233, 234, 236, 0, 278, 282,
	290, 293, 302, 303, 312, 364, 416, 443, 439, 448,
	0, 573, 594, 607, 618, 624, 625, 627, 628, 629,
	630, 631, 634, 632, 404, 310, 491, 332, 370, 0,
	0, 422, 469, 239, 598, 492, 892, 914, 903, 769,
	770, 893, 894, 918, 895, 772, 773, 915, 916, 766,
	767, 771, 917, 919, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 639, 502, 508, 503, 504, 505, 506, 507,
	0, 509, 906, 755, 754, 0, 761, 762, 0, 791,
	792, 794, 798, 799, 800, 811, 858, 859, 867, 869,
	870, 868, 871, 872, 873, 876, 877, 878, 879, 874,
	875, 880, 774, 778, 775, 776, 777, 789, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 790, 929,
	930, 931, 932, 933, 934, 804, 808, 807, 805, 806,
	802, 803, 830, 829, 831, 832, 833, 834, 835, 836,
	838, 837, 839, 840, 841, 842, 843, 844, 812, 813,
	816, 817, 815, 814, 818, 827, 828, 819, 820, 821,
	822, 823, 824, 826, 825, 845, 846, 847, 848, 849,
	851, 850, 854, 855, 853, 852, 857, 856, 753, 196,
	220, 365, 0, 451, 287, 640, 609, 604, 205, 222,
	920, 261, 921, 0, 0, 925, 0, 0, 0, 927,
	926, 0, 928, 890, 889, 0, 0, 922, 923, 0,
	924, 0, 0, 198, 200, 208, 221, 231, 235, 242,
	260, 275, 277, 284, 297, 309, 317, 318, 321, 327,
	377, 383, 384, 385, 386, 406, 407, 408, 411, 414,
	415, 418, 420, 421, 424, 428, 432, 433, 434, 436,
	438, 440, 452, 457, 471, 472, 473, 474, 475, 478,
	479, 484, 485, 486, 487, 488, 496, 497, 510, 580,
	582, 597, 616, 622, 477, 935, 936, 937, 938, 939,
	940, 941, 942, 299, 592, 623, 590, 635, 617, 435,
	375, 0, 0, 378, 280, 304, 319, 0, 608, 498,
	226, 463, 289, 250, 960, 0, 210, 245, 229, 258,
	273, 276, 323, 388, 397, 426, 431, 295, 270, 243,
	456, 240, 481, 513, 514, 515, 517, 392, 265, 430,
	393, 0, 373, 570, 571, 315, 0, 522, 0, 765,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 752, 0, 0, 0, 269, 757,
	0, 0, 0, 363, 266, 0, 0, 427, 0, 203,
	0, 483, 251, 374, 371, 577, 281, 272, 268, 249,
	316, 382, 425, 512, 419, 764, 367, 0, 0, 493,
	398, 0, 0, 0, 0, 0, 759, 760, 0, 0,
	0, 0, 0, 0, 2401, 0, 322, 247, 324, 202,
	410, 494, 285, 0, 95, 0, 0, 1009, 945, 736,
	911, 949, 1010, 962, 963, 964, 950, 0, 237, 951,
	952, 244, 953, 0, 910, 795, 797, 796, 860, 861,
	862, 863, 864, 865, 866, 793, 958, 601, 965, 966,
	2402, 264, 320, 271, 263, 574, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 732, 749, 0, 763, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 746, 747, 0, 0,
	0, 0, 905, 0, 748, 0, 0, 756, 967, 968,
	969, 970, 971, 972, 973, 974, 975, 976, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	758, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 399, 256, 0, 450, 904, 0, 0,
	619, 0, 0, 902, 0, 0, 0, 0, 362, 0,
	329, 197, 224, 0, 0, 409, 458, 470, 0, 0,
	0, 955, 0, 468, 423, 596, 232, 283, 455, 429,
	466, 437, 286, 0, 0, 467, 369, 579, 447, 593,
	620, 621, 262, 403, 606, 516, 614, 638, 225, 259,
	417, 501, 599, 490, 394, 575, 576, 328, 489, 294,
	201, 366, 626, 223, 476, 368, 241, 230, 581, 603,
	298, 288, 453, 633, 212, 511, 591, 238, 480, 0,
	0, 641, 246, 500, 214, 588, 499, 390, 325, 326,
	213, 0, 454, 267, 292, 0, 0, 257, 412, 956,
	957, 255, 642, 801, 613, 219, 0, 612, 405, 578,
	589, 391, 380, 218, 587, 389, 379, 333, 809, 810,
	279, 306, 886, 885, 884, 305, 307, 882, 883, 881,
	206, 600, 0, 207, 0, 495, 602, 643, 449, 211,
	233, 234, 236, 0, 278, 282, 290, 293, 302, 303,
	312, 364, 416, 443, 439, 448, 0, 573, 594, 607,
	618, 624, 625, 627, 628, 629, 630, 631, 634, 632,
	404, 310, 491, 332, 370, 0, 0, 422, 469, 239,
	598, 492, 892, 914, 903, 769, 770, 893, 894, 918,
	895, 772, 773, 915, 916, 766, 767, 771, 917, 919,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 639, 502,
	508, 503, 504, 505, 506, 507, 0, 509, 906, 755,
	754, 0, 761, 762, 0, 791, 792, 794, 798, 799,
	800, 811, 858, 859, 867, 869, 870, 868, 871, 872,
	873, 876, 877, 878, 879, 874, 875, 880, 774, 778,
	775, 776, 777, 789, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 788, 790, 929, 930, 931, 932, 933,
	934, 804, 808, 807, 805, 806, 802, 803, 830, 829,
	831, 832, 833, 834, 835, 836, 838, 837, 839, 840,
	841, 842, 843, 844, 812, 813, 816, 817, 815, 814,
	818, 827, 828, 819, 820, 821, 822, 823, 824, 826,
	825, 845, 846, 847, 848, 849, 851, 850, 854, 855,
	853, 852, 857, 856, 753, 196, 220, 365, 0, 451,
	287, 640, 609, 604, 205, 222, 920, 261, 921, 0,
	0, 925, 0, 0, 0, 927, 926, 0, 928, 890,
	889, 0, 0, 922, 923, 0, 924, 0, 0, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 309, 317, 318, 321, 327, 377, 383, 384, 385,
	386, 406, 407, 408, 411, 414, 415, 418, 420, 421,
	424, 428, 432, 433, 434, 436, 438, 440, 452, 457,
	471, 472, 473, 474, 475, 478, 479, 484, 485, 486,
	487, 488, 496, 497, 510, 580, 582, 597, 616, 622,
	477, 935, 936, 937, 938, 939, 940, 941, 942, 299,
	592, 623, 590, 635, 617, 435, 375, 0, 0, 378,
	280, 304, 319, 0, 608, 498, 226, 463, 289, 250,
	960, 0, 210, 245, 229, 258, 273, 276, 323, 388,
	397, 426, 431, 295, 270, 243, 456, 240, 481, 513,
	514, 515, 517, 392, 265, 430, 393, 0, 373, 570,
	571, 315, 86, 522, 0, 765, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	752, 0, 0, 0, 269, 757, 0, 0, 0, 363,
	266, 0, 0, 427, 0, 203, 0, 483, 251, 374,
	371, 577, 281, 272, 268, 249, 316, 382, 425, 512,
	419, 764, 367, 0, 0, 493, 398, 0, 0, 0,
	0, 0, 759, 760, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 247, 324, 202, 410, 494, 285, 0,
	95, 0, 0, 1009, 945, 736, 911, 949, 1010, 962,
	963, 964, 950, 0, 237, 951, 952, 244, 953, 0,
	910, 795, 797, 796, 860, 861, 862, 863, 864, 865,
	866, 793, 958, 601, 965, 966, 0, 264, 320, 271,
	263, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 732, 749,
	0, 763, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 746, 747, 0, 0, 0, 0, 905, 0,
	748, 0, 0, 756, 967, 968, 969, 970, 971, 972,
	973, 974, 975, 976, 977, 978, 979, 980, 981, 982,
	983, 984, 985, 986, 987, 988, 989, 990, 991, 992,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 1008, 758, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 399,
	256, 0, 450, 904, 0, 0, 619, 0, 0, 902,
	0, 0, 0, 0, 362, 0, 329, 197, 224, 0,
	0, 409, 458, 470, 0, 0, 0, 955, 0, 468,
	423, 596, 232, 283, 455, 429, 466, 437, 286, 0,
	0, 467, 369, 579, 447, 593, 620, 621, 262, 403,
	606, 516, 614, 638, 225, 259, 417, 501, 599, 490,
	394, 575, 576, 328, 489, 294, 201, 366, 626, 223,
	476, 368, 241, 230, 581, 603, 298, 288, 453, 633,
	212, 511, 591, 238, 480, 0, 0, 641, 246, 500,
	214, 588, 499, 390, 325, 326, 213, 0, 454, 267,
	292, 0, 0, 257, 412, 956, 957, 255, 642, 801,
	613, 219, 0, 612, 405, 578, 589, 391, 380, 218,
	587, 389, 379, 333, 809, 810, 279, 306, 886, 885,
	884, 305, 307, 882, 883, 881, 206, 600, 0, 207,
	0, 495, 602, 643, 449, 211, 233, 234, 236, 0,
	278, 282, 290, 293, 302, 303, 312, 364, 416, 443,
	439, 448, 0, 573, 594, 607, 618, 624, 625, 627,
	628, 629, 630, 631, 634, 632, 404, 310, 491, 332,
	370, 0, 0, 422, 469, 239, 598, 492, 892, 914,
	903, 769, 770, 893, 894, 918, 895, 772, 773, 915,
	916, 766, 767, 771, 917, 919, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 639, 502, 508, 503, 504, 505,
	506, 507, 0, 509, 906, 755, 754, 0, 761, 762,
	0, 791, 792, 794, 798, 799, 800, 811, 858, 859,
	867, 869, 870, 868, 871, 872, 873, 876, 877, 878,
	879, 874, 875, 880, 774, 778, 775, 776, 777, 789,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	790, 929, 930, 931, 932, 933, 934, 804, 808, 807,
	805, 806, 802, 803, 830, 829, 831, 832, 833, 834,
	835, 836, 838, 837, 839, 840, 841, 842, 843, 844,
	812, 813, 816, 817, 815, 814, 818, 827, 828, 819,
	820, 821, 822, 823, 824, 826, 825, 845, 846, 847,
	848, 849, 851, 850, 854, 855, 853, 852, 857, 856,
	753, 196, 220, 365, 94, 451, 287, 640, 609, 604,
	205, 222, 920, 261, 921, 0, 0, 925, 0, 0,
	0, 927, 926, 0, 928, 890, 889, 0, 0, 922,
	923, 0, 924, 0, 0, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 309, 317, 318,
	321, 327, 377, 383, 384, 385, 386, 406, 407, 408,
	411, 414, 415, 418, 420, 421, 424, 428, 432, 433,
	434, 436, 438, 440, 452, 457, 471, 472, 473, 474,
	475, 478, 479, 484, 485, 486, 487, 488, 496, 497,
	510, 580, 582, 597, 616, 622, 477, 935, 936, 937,
	938, 939, 940, 941, 942, 299, 592, 623, 590, 635,
	617, 435, 375, 0, 0, 378, 280, 304, 319, 0,
	608, 498, 226, 463, 289, 250, 960, 0, 210, 245,
	229, 258, 273, 276, 323, 388, 397, 426, 431, 295,
	270, 243, 456, 240, 481, 513, 514, 515, 517, 392,
	265, 430, 393, 0, 373, 570, 571, 315, 0, 522,
	0, 765, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 752, 0, 0, 0,
	269, 757, 0, 0, 0, 363, 266, 0, 0, 427,
	0, 203, 0, 483, 251, 374, 371, 577, 281, 272,
	268, 249, 316, 382, 425, 512, 419, 764, 367, 0,
	0, 493, 398, 0, 0, 0, 0, 0, 759, 760,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 247,
	324, 202, 410, 494, 285, 0, 95, 0, 0, 1009,
	945, 736, 911, 949, 1010, 962, 963, 964, 950, 0,
	237, 951, 952, 244, 953, 0, 910, 795, 797, 796,
	860, 861, 862, 863, 864, 865, 866, 793, 958, 601,
	965, 966, 0, 264, 320, 271, 263, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 732, 749, 0, 763, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 746, 747,
	0, 0, 0, 0, 905, 0, 748, 0, 0, 756,
	967, 968, 969, 970, 971, 972, 973, 974, 975, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 758, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 399, 256, 0, 450, 904,
	0, 0, 619, 0, 0, 902, 0, 0, 0, 0,
	362, 0, 329, 197, 224, 0, 0, 409, 458, 470,
	0, 0, 0, 955, 0, 468, 423, 596, 232, 283,
	455, 429, 466, 437, 286, 4042, 0, 467, 369, 579,
	447, 593, 620, 621, 262, 403, 606, 516, 614, 638,
	225, 259, 417, 501, 599, 490, 394, 575, 576, 328,
	489, 294, 201, 366, 626, 223, 476, 368, 241, 230,
	581, 603, 298, 288, 453, 633, 212, 511, 591, 238,
	480, 0, 0, 641, 246, 500, 214, 588, 499, 390,
	325, 326, 213, 0, 454, 267, 292, 0, 0, 257,
	412, 956, 957, 255, 642, 801, 613, 219, 0, 612,
	405, 578, 589, 391, 380, 218, 587, 389, 379, 333,
	809, 810, 279, 306, 886, 885, 884, 305, 307, 882,
	883, 881, 206, 600, 0, 207, 0, 495, 602, 643,
	449, 211, 233, 234, 236, 0, 278, 282, 290, 293,
	302, 303, 312, 364, 416, 443, 439, 448, 0, 573,
	594, 607, 618, 624, 625, 627, 628, 629, 630, 631,
	634, 632, 404, 310, 491, 332, 370, 0, 0, 422,
	469, 239, 598, 492, 892, 914, 903, 769, 770, 893,
	894, 918, 895, 772, 773, 915, 916, 766, 767, 771,
	917, 919, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	639, 502, 508, 503, 504, 505, 506, 507, 0, 509,
	906, 755, 754, 0, 761, 762, 0, 791, 792, 794,
	798, 799, 800, 811, 858, 859, 867, 869, 870, 868,
	871, 872, 873, 876, 877, 878, 879, 874, 875, 880,
	774, 778, 775, 776, 777, 789, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 788, 790, 929, 930, 931,
	932, 933, 934, 804, 808, 807, 805, 806, 802, 803,
	830, 829, 831, 832, 833, 834, 835, 836, 838, 837,
	839, 840, 841, 842, 843, 844, 812, 813, 816, 817,
	815, 814, 818, 827, 828, 819, 820, 821, 822, 823,
	824, 826, 825, 845, 846, 847, 848, 849, 851, 850,
	854, 855, 853, 852, 857, 856, 753, 196, 220, 365,
	0, 451, 287, 640, 609, 604, 205, 222, 920, 261,
	921, 0, 0, 925, 0, 0, 0, 927, 926, 0,
	928, 890, 889, 0, 0, 922, 923, 0, 924, 0,
	0, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 309, 317, 318, 321, 327, 377, 383,
	384, 385, 386, 406, 407, 408, 411, 414, 415, 418,
	420, 421, 424, 428, 432, 433, 434, 436, 438, 440,
	452, 457, 471, 472, 473, 474, 475, 478, 479, 484,
	485, 486, 487, 488, 496, 497, 510, 580, 582, 597,
	616, 622, 477, 935, 936, 937, 938, 939, 940, 941,
	942, 299, 592, 623, 590, 635, 617, 435, 375, 0,
	0, 378, 280, 304, 319, 0, 608, 498, 226, 463,
	289, 250, 960, 0, 210, 245, 229, 258, 273, 276,
	323, 388, 397, 426, 431, 295, 270, 243, 456, 240,
	481, 513, 514, 515, 517, 392, 265, 430, 393, 0,
	373, 570, 571, 315, 0, 522, 0, 765, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 752, 0, 0, 0, 269, 757, 0, 0,
	0, 363, 266, 0, 0, 427, 0, 203, 0, 483,
	251, 374, 371, 577, 281, 272, 268, 249, 316, 382,
	425, 512, 419, 764, 367, 0, 0, 493, 398, 0,
	0, 0, 0, 0, 759, 760, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 247, 324, 202, 410, 494,
	285, 0, 95, 0, 1726, 1009, 945, 736, 911, 949,
	1010, 962, 963, 964, 950, 0, 237, 951, 952, 244,
	953, 0, 910, 795, 797, 796, 860, 861, 862, 863,
	864, 865, 866, 793, 958, 601, 965, 966, 0, 264,
	320, 271, 263, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	732, 749, 0, 763, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 746, 747, 0, 0, 0, 0,
	905, 0, 748, 0, 0, 756, 967, 968, 969, 970,
	971, 972, 973, 974, 975, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 758, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 399, 256, 0, 450, 904, 0, 0, 619, 0,
	0, 902, 0, 0, 0, 0, 362, 0, 329, 197,
	224, 0, 0, 409, 458, 470, 0, 0, 0, 955,
	0, 468, 423, 596, 232, 283, 455, 429, 466, 437,
	286, 0, 0, 467, 369, 579, 447, 593, 620, 621,
	262, 403, 606, 516, 614, 638, 225, 259, 417, 501,
	599, 490, 394, 575, 576, 328, 489, 294, 201, 366,
	626, 223, 476, 368, 241, 230, 581, 603, 298, 288,
	453, 633, 212, 511, 591, 238, 480, 0, 0, 641,
	246, 500, 214, 588, 499, 390, 325, 326, 213, 0,
	454, 267, 292, 0, 0, 257, 412, 956, 957, 255,
	642, 801, 613, 219, 0, 612, 405, 578, 589, 391,
	380, 218, 587, 389, 379, 333, 809, 810, 279, 306,
	886, 885, 884, 305, 307, 882, 883, 881, 206, 600,
	0, 207, 0, 495, 602, 643, 449, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 302, 303, 312, 364,
	416, 443, 439, 448, 0, 573, 594, 607, 618, 624,
	625, 627, 628, 629, 630, 631, 634, 632, 404, 310,
	491, 332, 370, 0, 0, 422, 469, 239, 598, 492,
	892, 914, 903, 769, 770, 893, 894, 918, 895, 772,
	773, 915, 916, 766, 767, 771, 917, 919, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 639, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 906, 755, 754, 0,
	761, 762, 0, 791, 792, 794, 798, 799, 800, 811,
	858, 859, 867, 869, 870, 868, 871, 872, 873, 876,
	877, 878, 879, 874, 875, 880, 774, 778, 775, 776,
	777, 789, 779, 780, 781, 782, 783, 784, 785, 786,
	787, 788, 790, 929, 930, 931, 932, 933, 934, 804,
	808, 807, 805, 806, 802, 803, 830, 829, 831, 832,
	833, 834, 835, 836, 838, 837, 839, 840, 841, 842,
	843, 844, 812, 813, 816, 817, 815, 814, 818, 827,
	828, 819, 820, 821, 822, 823, 824, 826, 825, 845,
	846, 847, 848, 849, 851, 850, 854, 855, 853, 852,
	857, 856, 753, 196, 220, 365, 0, 451, 287, 640,
	609, 604, 205, 222, 920, 261, 921, 0, 0, 925,
	0, 0, 0, 927, 926, 0, 928, 890, 889, 0,
	0, 922, 923, 0, 924, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 309,
	317, 318, 321, 327, 377, 383, 384, 385, 386, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 616, 622, 477, 935,
	936, 937, 938, 939, 940, 941, 942, 299, 592, 623,
	590, 635, 617, 435, 375, 0, 0, 378, 280, 304,
	319, 0, 608, 498, 226, 463, 289, 250, 960, 0,
	210, 245, 229, 258, 273, 276, 323, 388, 397, 426,
	431, 295, 270, 243, 456, 240, 481, 513, 514, 515,
	517, 392, 265, 430, 393, 0, 373, 570, 571, 315,
	0, 522, 0, 765, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 752, 0,
	0, 0, 269, 757, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 764,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	759, 760, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 95, 0,
	0, 1009, 945, 736, 911, 949, 1010, 962, 963, 964,
	950, 0, 237, 951, 952, 244, 953, 0, 910, 795,
	797, 796, 860, 861, 862, 863, 864, 865, 866, 793,
	958, 601, 965, 966, 0, 264, 320, 271, 263, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 732, 749, 0, 763,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	746, 747, 1055, 0, 0, 0, 905, 0, 748, 0,
	0, 756, 967, 968, 969, 970, 971, 972, 973, 974,
	975, 976, 977, 978, 979, 980, 981, 982, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 1008, 758, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 399, 256, 0,
	450, 904, 0, 0, 619, 0, 0, 902, 0, 0,
	0, 0, 362, 0, 329, 197, 224, 0, 0, 409,
	458, 470, 0, 0, 0, 955, 0, 468, 423, 596,
	232, 283, 455, 429, 466, 437, 286, 0, 0, 467,
	369, 579, 447, 593, 620, 621, 262, 403, 606, 516,
	614, 638, 225, 259, 417, 501, 599, 490, 394, 575,
	576, 328, 489, 294, 201, 366, 626, 223, 476, 368,
	241, 230, 581, 603, 298, 288, 453, 633, 212, 511,
	591, 238, 480, 0, 0, 641, 246, 500, 214, 588,
	499, 390, 325, 326, 213, 0, 454, 267, 292, 0,
	0, 257, 412, 956, 957, 255, 642, 801, 613, 219,
	0, 612, 405, 578, 589, 391, 380, 218, 587, 389,
	379, 333, 809, 810, 279, 306, 886, 885, 884, 305,
	307, 882, 883, 881, 206, 600, 0, 207, 0, 495,
	602, 643, 449, 211, 233, 234, 236, 0, 278, 282,
	290, 293, 302, 303, 312, 364, 416, 443, 439, 448,
	0, 573, 594, 607, 618, 624, 625, 627, 628, 629,
	630, 631, 634, 632, 404, 310, 491, 332, 370, 0,
	0, 422, 469, 239, 598, 492, 892, 914, 903, 769,
	770, 893, 894, 918, 895, 772, 773, 915, 916, 766,
	767, 771, 917, 919, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 639, 502, 508, 503, 504, 505, 506, 507,
	0, 509, 906, 755, 754, 0, 761, 762, 0, 791,
	792, 794, 798, 799, 800, 811, 858, 859, 867, 869,
	870, 868, 871, 872, 873, 876, 877, 878, 879, 874,
	875, 880, 774, 778, 775, 776, 777, 789, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 790, 929,
	930, 931, 932, 933, 934, 804, 808, 807, 805, 806,
	802, 803, 830, 829, 831, 832, 833, 834, 835, 836,
	838, 837, 839, 840, 841, 842, 843, 844, 812, 813,
	816, 817, 815, 814, 818, 827, 828, 819, 820, 821,
	822, 823, 824, 826, 825, 845, 846, 847, 848, 849,
	851, 850, 854, 855, 853, 852, 857, 856, 753, 196,
	220, 365, 0, 451, 287, 640, 609, 604, 205, 222,
	920, 261, 921, 0, 0, 925, 0, 0, 0, 927,
	926, 0, 928, 890, 889, 0, 0, 922, 923, 0,
	924, 0, 0, 198, 200, 208, 221, 231, 235, 242,
	260, 275, 277, 284, 297, 309, 317, 318, 321, 327,
	377, 383, 384, 385, 386, 406, 407, 408, 411, 414,
	415, 418, 420, 421, 424, 428, 432, 433, 434, 436,
	438, 440, 452, 457, 471, 472, 473, 474, 475, 478,
	479, 484, 485, 486, 487, 488, 496, 497, 510, 580,
	582, 597, 616, 622, 477, 935, 936, 937, 938, 939,
	940, 941, 942, 299, 592, 623, 590, 635, 617, 435,
	375, 0, 0, 378, 280, 304, 319, 0, 608, 498,
	226, 463, 289, 250, 960, 0, 210, 245, 229, 258,
	273, 276, 323, 388, 397, 426, 431, 295, 270, 243,
	456, 240, 481, 513, 514, 515, 517, 392, 265, 430,
	393, 0, 373, 570, 571, 315, 0, 522, 0, 765,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 752, 0, 0, 0, 269, 757,
	0, 0, 0, 363, 266, 0, 0, 427, 0, 203,
	0, 483, 251, 374, 371, 577, 281, 272, 268, 249,
	316, 382, 425, 512, 419, 764, 367, 0, 0, 493,
	398, 0, 0, 0, 0, 0, 759, 760, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 247, 324, 202,
	410, 494, 285, 0, 95, 0, 0, 1009, 945, 736,
	911, 949, 1010, 962, 963, 964, 950, 0, 237, 951,
	952, 244, 953, 0, 910, 795, 797, 796, 860, 861,
	862, 863, 864, 865, 866, 793, 958, 601, 965, 966,
	0, 264, 320, 271, 263, 574, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 732, 749, 0, 763, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 746, 747, 0, 0,
	0, 0, 905, 0, 748, 0, 0, 756, 967, 968,
	969, 970, 971, 972, 973, 974, 975, 976, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	758, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 399, 256, 0, 450, 904, 0, 0,
	619, 0, 0, 902, 0, 0, 0, 0, 362, 0,
	329, 197, 224, 0, 0, 409, 458, 470, 0, 0,
	0, 955, 0, 468, 423, 596, 232, 283, 455, 429,
	466, 437, 286, 0, 0, 467, 369, 579, 447, 593,
	620, 621, 262, 403, 606, 516, 614, 638, 225, 259,
	417, 501, 599, 490, 394, 575, 576, 328, 489, 294,
	201, 366, 626, 223, 476, 368, 241, 230, 581, 603,
	298, 288, 453, 633, 212, 511, 591, 238, 480, 0,
	0, 641, 246, 500, 214, 588, 499, 390, 325, 326,
	213, 0, 454, 267, 292, 0, 0, 257, 412, 956,
	957, 255, 642, 801, 613, 219, 0, 612, 405, 578,
	589, 391, 380, 218, 587, 389, 379, 333, 809, 810,
	279, 306, 886, 885, 884, 305, 307, 882, 883, 881,
	206, 600, 0, 207, 0, 495, 602, 643, 449, 211,
	233, 234, 236, 0, 278, 282, 290, 293, 302, 303,
	312, 364, 416, 443, 439, 448, 0, 573, 594, 607,
	618, 624, 625, 627, 628, 629, 630, 631, 634, 632,
	404, 310, 491, 332, 370, 0, 0, 422, 469, 239,
	598, 492, 892, 914, 903, 769, 770, 893, 894, 918,
	895, 772, 773, 915, 916, 766, 767, 771, 917, 919,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 639, 502,
	508, 503, 504, 505, 506, 507, 0, 509, 906, 755,
	754, 0, 761, 762, 0, 791, 792, 794, 798, 799,
	800, 811, 858, 859, 867, 869, 870, 868, 871, 872,
	873, 876, 877, 878, 879, 874, 875, 880, 774, 778,
	775, 776, 777, 789, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 788, 790, 929, 930, 931, 932, 933,
	934, 804, 808, 807, 805, 806, 802, 803, 830, 829,
	831, 832, 833, 834, 835, 836, 838, 837, 839, 840,
	841, 842, 843, 844, 812, 813, 816, 817, 815, 814,
	818, 827, 828, 819, 820, 821, 822, 823, 824, 826,
	825, 845, 846, 847, 848, 849, 851, 850, 854, 855,
	853, 852, 857, 856, 753, 196, 220, 365, 0, 451,
	287, 640, 609, 604, 205, 222, 920, 261, 921, 0,
	0, 925, 0, 0, 0, 927, 926, 0, 928, 890,
	889, 0, 0, 922, 923, 0, 924, 0, 0, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 309, 317, 318, 321, 327, 377, 383, 384, 385,
	386, 406, 407, 408, 411, 414, 415, 418, 420, 421,
	424, 428, 432, 433, 434, 436, 438, 440, 452, 457,
	471, 472, 473, 474, 475, 478, 479, 484, 485, 486,
	487, 488, 496, 497, 510, 580, 582, 597, 616, 622,
	477, 935, 936, 937, 938, 939, 940, 941, 942, 299,
	592, 623, 590, 635, 617, 435, 375, 0, 0, 378,
	280, 304, 319, 0, 608, 498, 226, 463, 289, 250,
	960, 0, 210, 245, 229, 258, 273, 276, 323, 388,
	397, 426, 431, 295, 270, 243, 456, 240, 481, 513,
	514, 515, 517, 392, 265, 430, 393, 0, 373, 570,
	571, 315, 0, 522, 0, 765, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	752, 0, 0, 0, 269, 757, 0, 0, 0, 363,
	266, 0, 0, 427, 0, 203, 0, 483, 251, 374,
	371, 577, 281, 272, 268, 249, 316, 382, 425, 512,
	419, 764, 367, 0, 0, 493, 398, 0, 0, 0,
	0, 0, 759, 760, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 247, 324, 202, 410, 494, 285, 0,
	95, 0, 0, 1009, 945, 736, 911, 949, 1010, 962,
	963, 964, 950, 0, 237, 951, 952, 244, 953, 0,
	910, 795, 797, 796, 860, 861, 862, 863, 864, 865,
	866, 793, 958, 601, 965, 966, 0, 264, 320, 271,
	263, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 732, 749,
	0, 763, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 746, 747, 0, 0, 0, 0, 905, 0,
	748, 0, 0, 756, 967, 968, 969, 970, 971, 972,
	973, 974, 975, 976, 977, 978, 979, 980, 981, 982,
	983, 984, 985, 986, 987, 988, 989, 990, 991, 992,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 1008, 3123, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 399,
	256, 0, 450, 904, 0, 0, 619, 0, 0, 902,
	0, 0, 0, 0, 362, 0, 329, 197, 224, 0,
	0, 409, 458, 470, 0, 0, 0, 955, 0, 468,
	423, 596, 232, 283, 455, 429, 466, 437, 286, 0,
	0, 467, 369, 579, 447, 593, 620, 621, 262, 403,
	606, 516, 614, 638, 225, 259, 417, 501, 599, 490,
	394, 575, 576, 328, 489, 294, 201, 366, 626, 223,
	476, 368, 241, 230, 581, 603, 298, 288, 453, 633,
	212, 511, 591, 238, 480, 0, 0, 641, 246, 500,
	214, 588, 499, 390, 325, 326, 213, 0, 454, 267,
	292, 0, 0, 257, 412, 956, 957, 255, 642, 801,
	613, 219, 0, 612, 405, 578, 589, 391, 380, 218,
	587, 389, 379, 333, 809, 810, 279, 306, 886, 885,
	884, 305, 307, 882, 883, 881, 206, 600, 0, 207,
	0, 495, 602, 643, 449, 211, 233, 234, 236, 0,
	278, 282, 290, 293, 302, 303, 312, 364, 416, 443,
	439, 448, 0, 573, 594, 607, 618, 624, 625, 627,
	628, 629, 630, 631, 634, 632, 404, 310, 491, 332,
	370, 0, 0, 422, 469, 239, 598, 492, 892, 914,
	903, 769, 770, 893, 894, 918, 895, 772, 773, 915,
	916, 766, 767, 771, 917, 919, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 639, 502, 508, 503, 504, 505,
	506, 507, 0, 509, 906, 755, 754, 0, 761, 762,
	0, 791, 792, 794, 798, 799, 800, 811, 858, 859,
	867, 869, 870, 868, 871, 872, 873, 876, 877, 878,
	879, 874, 875, 880, 774, 778, 775, 776, 777, 789,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	790, 929, 930, 931, 932, 933, 934, 804, 808, 807,
	805, 806, 802, 803, 830, 829, 831, 832, 833, 834,
	835, 836, 838, 837, 839, 840, 841, 842, 843, 844,
	812, 813, 816, 817, 815, 814, 818, 827, 828, 819,
	820, 821, 822, 823, 824, 826, 825, 845, 846, 847,
	848, 849, 851, 850, 854, 855, 853, 852, 857, 856,
	753, 196, 220, 365, 0, 451, 287, 640, 609, 604,
	205, 222, 920, 261, 921, 0, 0, 925, 0, 0,
	0, 927, 926, 0, 928, 890, 889, 0, 0, 922,
	923, 0, 924, 0, 0, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 309, 317, 318,
	321, 327, 377, 383, 384, 385, 386, 406, 407, 408,
	411, 414, 415, 418, 420, 421, 424, 428, 432, 433,
	434, 436, 438, 440, 452, 457, 471, 472, 473, 474,
	475, 478, 479, 484, 485, 486, 487, 488, 496, 497,
	510, 580, 582, 597, 616, 622, 477, 935, 936, 937,
	938, 939, 940, 941, 942, 299, 592, 623, 590, 635,
	617, 435, 375, 0, 0, 378, 280, 304, 319, 0,
	608, 498, 226, 463, 289, 250, 960, 0, 210, 245,
	229, 258, 273, 276, 323, 388, 397, 426, 431, 295,
	270, 243, 456, 240, 481, 513, 514, 515, 517, 392,
	265, 430, 393, 0, 373, 570, 571, 315, 0, 522,
	0, 765, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 752, 0, 0, 0,
	269, 757, 0, 0, 0, 363, 266, 0, 0, 427,
	0, 203, 0, 483, 251, 374, 371, 577, 281, 272,
	268, 249, 316, 382, 425, 512, 419, 764, 367, 0,
	0, 493, 398, 0, 0, 0, 0, 0, 759, 760,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 247,
	324, 202, 410, 494, 285, 0, 95, 0, 0, 1009,
	945, 736, 911, 949, 1010, 962, 963, 964, 950, 0,
	237, 951, 952, 244, 953, 0, 910, 795, 797, 796,
	860, 861, 862, 863, 864, 865, 866, 793, 958, 601,
	965, 966, 0, 264, 320, 271, 263, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 732, 749, 0, 763, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 746, 747,
	0, 0, 0, 0, 905, 0, 748, 0, 0, 756,
	967, 968, 969, 970, 971, 972, 973, 974, 975, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 3119, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 399, 256, 0, 450, 904,
	0, 0, 619, 0, 0, 902, 0, 0, 0, 0,
	362, 0, 329, 197, 224, 0, 0, 409, 458, 470,
	0, 0, 0, 955, 0, 468, 423, 596, 232, 283,
	455, 429, 466, 437, 286, 0, 0, 467, 369, 579,
	447, 593, 620, 621, 262, 403, 606, 516, 614, 638,
	225, 259, 417, 501, 599, 490, 394, 575, 576, 328,
	489, 294, 201, 366, 626, 223, 476, 368, 241, 230,
	581, 603, 298, 288, 453, 633, 212, 511, 591, 238,
	480, 0, 0, 641, 246, 500, 214, 588, 499, 390,
	325, 326, 213, 0, 454, 267, 292, 0, 0, 257,
	412, 956, 957, 255, 642, 801, 613, 219, 0, 612,
	405, 578, 589, 391, 380, 218, 587, 389, 379, 333,
	809, 810, 279, 306, 886, 885, 884, 305, 307, 882,
	883, 881, 206, 600, 0, 207, 0, 495, 602, 643,
	449, 211, 233, 234, 236, 0, 278, 282, 290, 293,
	302, 303, 312, 364, 416, 443, 439, 448, 0, 573,
	594, 607, 618, 624, 625, 627, 628, 629, 630, 631,
	634, 632, 404, 310, 491, 332, 370, 0, 0, 422,
	469, 239, 598, 492, 892, 914, 903, 769, 770, 893,
	894, 918, 895, 772, 773, 915, 916, 766, 767, 771,
	917, 919, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	639, 502, 508, 503, 504, 505, 506, 507, 0, 509,
	906, 755, 754, 0, 761, 762, 0, 791, 792, 794,
	798, 799, 800, 811, 858, 859, 867, 869, 870, 868,
	871, 872, 873, 876, 877, 878, 879, 874, 875, 880,
	774, 778, 775, 776, 777, 789, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 788, 790, 929, 930, 931,
	932, 933, 934, 804, 808, 807, 805, 806, 802, 803,
	830, 829, 831, 832, 833, 834, 835, 836, 838, 837,
	839, 840, 841, 842, 843, 844, 812, 813, 816, 817,
	815, 814, 818, 827, 828, 819, 820, 821, 822, 823,
	824, 826, 825, 845, 846, 847, 848, 849, 851, 850,
	854, 855, 853, 852, 857, 856, 753, 196, 220, 365,
	0, 451, 287, 640, 609, 604, 205, 222, 920, 261,
	921, 0, 0, 925, 0, 0, 0, 927, 926, 0,
	928, 890, 889, 0, 0, 922, 923, 0, 924, 0,
	0, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 309, 317, 318, 321, 327, 377, 383,
	384, 385, 386, 406, 407, 408, 411, 414, 415, 418,
	420, 421, 424, 428, 432, 433, 434, 436, 438, 440,
	452, 457, 471, 472, 473, 474, 475, 478, 479, 484,
	485, 486, 487, 488, 496, 497, 510, 580, 582, 597,
	616, 622, 477, 935, 936, 937, 938, 939, 940, 941,
	942, 299, 592, 623, 590, 635, 617, 435, 375, 0,
	0, 378, 280, 304, 319, 0, 608, 498, 226, 463,
	289, 250, 960, 0, 210, 245, 229, 258, 273, 276,
	323, 388, 397, 426, 431, 295, 270, 243, 456, 240,
	481, 513, 514, 515, 517, 392, 265, 430, 393, 0,
	373, 570, 571, 315, 0, 522, 0, 765, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 752, 0, 0, 0, 269, 757, 0, 0,
	0, 363, 266, 0, 0, 427, 0, 203, 0, 483,
	251, 374, 371, 577, 281, 272, 268, 249, 316, 382,
	425, 512, 419, 764, 367, 0, 0, 493, 398, 0,
	0, 0, 0, 0, 759, 760, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 247, 324, 202, 410, 494,
	285, 0, 95, 0, 0, 1009, 945, 1076, 911, 949,
	1010, 962, 963, 964, 950, 0, 237, 951, 952, 244,
	953, 0, 910, 795, 797, 796, 860, 861, 862, 863,
	864, 865, 866, 793, 958, 601, 965, 966, 0, 264,
	320, 271, 263, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 749, 0, 763, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 746, 747, 0, 0, 0, 0,
	905, 0, 748, 0, 0, 756, 967, 968, 969, 970,
	971, 972, 973, 974, 975, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 758, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 399, 256, 0, 450, 904, 0, 0, 619, 0,
	0, 902, 0, 0, 0, 0, 362, 0, 329, 197,
	224, 0, 0, 409, 458, 470, 0, 0, 0, 955,
	0, 468, 423, 596, 232, 283, 455, 429, 466, 437,
	286, 0, 0, 467, 369, 579, 447, 593, 620, 621,
	262, 403, 606, 516, 614, 638, 225, 259, 417, 501,
	599, 490, 394, 575, 576, 328, 489, 294, 201, 366,
	626, 223, 476, 368, 241, 230, 581, 603, 298, 288,
	453, 633, 212, 511, 591, 238, 480, 0, 0, 641,
	246, 500, 214, 588, 499, 390, 325, 326, 213, 0,
	454, 267, 292, 0, 0, 257, 412, 956, 957, 255,
	642, 801, 613, 219, 0, 612, 405, 578, 589, 391,
	380, 218, 587, 389, 379, 333, 809, 810, 279, 306,
	886, 885, 884, 305, 307, 882, 883, 881, 206, 600,
	0, 207, 0, 495, 602, 643, 449, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 302, 303, 312, 364,
	416, 443, 439, 448, 0, 573, 594, 607, 618, 624,
	625, 627, 628, 629, 630, 631, 634, 632, 404, 310,
	491, 332, 370, 0, 0, 422, 469, 239, 598, 492,
	892, 914, 903, 769, 770, 893, 894, 918, 895, 772,
	773, 915, 916, 766, 767, 771, 917, 919, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 639, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 906, 755, 754, 0,
	761, 762, 0, 791, 792, 794, 798, 799, 800, 811,
	858, 859, 867, 869, 870, 868, 871, 872, 873, 876,
	877, 878, 879, 874, 875, 880, 774, 778, 775, 776,
	777, 789, 779, 780, 781, 782, 783, 784, 785, 786,
	787, 788, 790, 929, 930, 931, 932, 933, 934, 804,
	808, 807, 805, 806, 802, 803, 830, 829, 831, 832,
	833, 834, 835, 836, 838, 837, 839, 840, 841, 842,
	843, 844, 812, 813, 816, 817, 815, 814, 818, 827,
	828, 819, 820, 821, 822, 823, 824, 826, 825, 845,
	846, 847, 848, 849, 851, 850, 854, 855, 853, 852,
	857, 856, 753, 196, 220, 365, 0, 451, 287, 640,
	609, 604, 205, 222, 920, 261, 921, 0, 0, 925,
	0, 0, 0, 927, 926, 0, 928, 890, 889, 0,
	0, 922, 923, 0, 924, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 309,
	317, 318, 321, 327, 377, 383, 384, 385, 386, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 616, 622, 477, 935,
	936, 937, 938, 939, 940, 941, 942, 299, 592, 623,
	590, 635, 617, 435, 375, 0, 0, 378, 280, 304,
	319, 0, 608, 498, 226, 463, 289, 250, 960, 0,
	210, 245, 229, 258, 273, 276, 323, 388, 397, 426,
	431, 295, 270, 243, 456, 240, 481, 513, 514, 515,
	517, 392, 265, 430, 393, 0, 373, 570, 571, 315,
	0, 522, 0, 765, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 752, 0,
	0, 0, 269, 757, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 764,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	759, 760, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 95, 0,
	0, 1009, 945, 1076, 911, 949, 1010, 962, 963, 964,
	950, 0, 237, 951, 952, 244, 953, 0, 910, 795,
	797, 796, 860, 861, 862, 863, 864, 865, 866, 793,
	958, 601, 965, 966, 0, 264, 320, 271, 263, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 749, 0, 763,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	746, 747, 0, 0, 0, 0, 905, 0, 748, 0,
	0, 756, 967, 968, 969, 970, 971, 972, 973, 974,
	975, 976, 977, 978, 979, 980, 981, 982, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 1008, 2087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 399, 256, 0,
	450, 904, 0, 0, 619, 0, 0, 902, 0, 0,
	0, 0, 362, 0, 329, 197, 224, 0, 0, 409,
	458, 470, 0, 0, 0, 955, 0, 468, 423, 596,
	232, 283, 455, 429, 466, 437, 286, 0, 0, 467,
	369, 579, 447, 593, 620, 621, 262, 403, 606, 516,
	614, 638, 225, 259, 417, 501, 599, 490, 394, 575,
	576, 328, 489, 294, 201, 366, 626, 223, 476, 368,
	241, 230, 581, 603, 298, 288, 453, 633, 212, 511,
	591, 238, 480, 0, 0, 641, 246, 500, 214, 588,
	499, 390, 325, 326, 213, 0, 454, 267, 292, 0,
	0, 257, 412, 956, 957, 255, 642, 801, 613, 219,
	0, 612, 405, 578, 589, 391, 380, 218, 587, 389,
	379, 333, 809, 810, 279, 306, 886, 885, 884, 305,
	307, 882, 883, 881, 206, 600, 0, 207, 0, 495,
	602, 643, 449, 211, 233, 234, 236, 0, 278, 282,
	290, 293, 302, 303, 312, 364, 416, 443, 439, 448,
	0, 573, 594, 607, 618, 624, 625, 627, 628, 629,
	630, 631, 634, 632, 404, 310, 491, 332, 370, 0,
	0, 422, 469, 239, 598, 492, 892, 914, 903, 769,
	770, 893, 894, 918, 895, 772, 773, 915, 916, 766,
	767, 771, 917, 919, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 639, 502, 508, 503, 504, 505, 506, 507,
	0, 509, 906, 755, 754, 0, 761, 762, 0, 791,
	792, 794, 798, 799, 800, 811, 858, 859, 867, 869,
	870, 868, 871, 872, 873, 876, 877, 878, 879, 874,
	875, 880, 774, 778, 775, 776, 777, 789, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 790, 929,
	930, 931, 932, 933, 934, 804, 808, 807, 805, 806,
	802, 803, 830, 829, 831, 832, 833, 834, 835, 836,
	838, 837, 839, 840, 841, 842, 843, 844, 812, 813,
	816, 817, 815, 814, 818, 827, 828, 819, 820, 821,
	822, 823, 824, 826, 825, 845, 846, 847, 848, 849,
	851, 850, 854, 855, 853, 852, 857, 856, 753, 196,
	220, 365, 0, 451, 287, 640, 609, 604, 205, 222,
	920, 261, 921, 0, 0, 925, 0, 0, 0, 927,
	926, 0, 928, 890, 889, 0, 0, 922, 923, 0,
	924, 0, 0, 198, 200, 208, 221, 231, 235, 242,
	260, 275, 277, 284, 297, 309, 317, 318, 321, 327,
	377, 383, 384, 385, 386, 406, 407, 408, 411, 414,
	415, 418, 420, 421, 424, 428, 432, 433, 434, 436,
	438, 440, 452, 457, 471, 472, 473, 474, 475, 478,
	479, 484, 485, 486, 487, 488, 496, 497, 510, 580,
	582, 597, 616, 622, 477, 935, 936, 937, 938, 939,
	940, 941, 942, 299, 592, 623, 590, 635, 617, 435,
	375, 0, 0, 378, 280, 304, 319, 0, 608, 498,
	226, 463, 289, 250, 960, 0, 210, 245, 229, 258,
	273, 276, 323, 388, 397, 426, 431, 295, 270, 243,
	456, 240, 481, 513, 514, 515, 517, 392, 265, 430,
	393, 0, 373, 570, 571, 315, 0, 522, 0, 765,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 752, 0, 0, 0, 269, 757,
	0, 0, 0, 363, 266, 0, 0, 427, 0, 203,
	0, 483, 251, 374, 371, 577, 281, 272, 268, 249,
	316, 382, 425, 512, 419, 764, 367, 0, 0, 493,
	398, 0, 0, 0, 0, 0, 759, 760, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 247, 324, 202,
	410, 494, 285, 0, 95, 0, 0, 1009, 945, 1076,
	911, 949, 1010, 962, 963, 964, 950, 0, 237, 951,
	952, 244, 953, 0, 910, 795, 797, 796, 860, 861,
	862, 863, 864, 865, 866, 793, 958, 601, 965, 966,
	0, 264, 320, 271, 263, 574, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 749, 0, 763, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 746, 747, 0, 0,
	0, 0, 905, 0, 748, 0, 0, 756, 967, 968,
	969, 970, 971, 972, 973, 974, 975, 976, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	2085, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 399, 256, 0, 450, 904, 0, 0,
	619, 0, 0, 902, 0, 0, 0, 0, 362, 0,
	329, 197, 224, 0, 0, 409, 458, 470, 0, 0,
	0, 955, 0, 468, 423, 596, 232, 283, 455, 429,
	466, 437, 286, 0, 0, 467, 369, 579, 447, 593,
	620, 621, 262, 403, 606, 516, 614, 638, 225, 259,
	417, 501, 599, 490, 394, 575, 576, 328, 489, 294,
	201, 366, 626, 223, 476, 368, 241, 230, 581, 603,
	298, 288, 453, 633, 212, 511, 591, 238, 480, 0,
	0, 641, 246, 500, 214, 588, 499, 390, 325, 326,
	213, 0, 454, 267, 292, 0, 0, 257, 412, 956,
	957, 255, 642, 801, 613, 219, 0, 612, 405, 578,
	589, 391, 380, 218, 587, 389, 379, 333, 809, 810,
	279, 306, 886, 885, 884, 305, 307, 882, 883, 881,
	206, 600, 0, 207, 0, 495, 602, 643, 449, 211,
	233, 234, 236, 0, 278, 282, 290, 293, 302, 303,
	312, 364, 416, 443, 439, 448, 0, 573, 594, 607,
	618, 624, 625, 627, 628, 629, 630, 631, 634, 632,
	404, 310, 491, 332, 370, 0, 0, 422, 469, 239,
	598, 492, 892, 914, 903, 769, 770, 893, 894, 918,
	895, 772, 773, 915, 916, 766, 767, 771, 917, 919,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 639, 502,
	508, 503, 504, 505, 506, 507, 0, 509, 906, 755,
	754, 0, 761, 762, 0, 791, 792, 794, 798, 799,
	800, 811, 858, 859, 867, 869, 870, 868, 871, 872,
	873, 876, 877, 878, 879, 874, 875, 880, 774, 778,
	775, 776, 777, 789, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 788, 790, 929, 930, 931, 932, 933,
	934, 804, 808, 807, 805, 806, 802, 803, 830, 829,
	831, 832, 833, 834, 835, 836, 838, 837, 839, 840,
	841, 842, 843, 844, 812, 813, 816, 817, 815, 814,
	818, 827, 828, 819, 820, 821, 822, 823, 824, 826,
	825, 845, 846, 847, 848, 849, 851, 850, 854, 855,
	853, 852, 857, 856, 753, 196, 220, 365, 0, 451,
	287, 640, 609, 604, 205, 222, 920, 261, 921, 0,
	0, 925, 0, 0, 0, 927, 926, 0, 928, 890,
	889, 0, 0, 922, 923, 0, 924, 0, 0, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 309, 317, 318, 321, 327, 377, 383, 384, 385,
	386, 406, 407, 408, 411, 414, 415, 418, 420, 421,
	424, 428, 432, 433, 434, 436, 438, 440, 452, 457,
	471, 472, 473, 474, 475, 478, 479, 484, 485, 486,
	487, 488, 496, 497, 510, 580, 582, 597, 616, 622,
	477, 935, 936, 937, 938, 939, 940, 941, 942, 299,
	592, 623, 590, 635, 617, 435, 375, 0, 0, 378,
	280, 304, 319, 0, 608, 498, 226, 463, 289, 250,
	960, 0, 210, 245, 229, 258, 273, 276, 323, 388,
	397, 426, 431, 295, 270, 243, 456, 240, 481, 513,
	514, 515, 517, 392, 265, 430, 393, 0, 373, 570,
	571, 315, 0, 522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 363,
	266, 0, 0, 427, 0, 203, 0, 483, 251, 374,
	371, 577, 281, 272, 268, 249, 316, 382, 425, 512,
	419, 0, 367, 0, 0, 493, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 247, 324, 202, 410, 494, 285, 0,
	0, 0, 0, 0, 712, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 348, 357, 356, 337, 338, 340, 342, 347, 354,
	360, 0, 0, 601, 0, 0, 0, 264, 320, 271,
	263, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 1127, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 399,
	256, 0, 450, 0, 0, 1126, 619, 0, 0, 0,
	0, 0, 1123, 1124, 362, 1084, 329, 197, 224, 1117,
	1121, 409, 458, 470, 0, 0, 0, 252, 0, 468,
	423, 596, 232, 283, 455, 429, 466, 437, 286, 0,
	0, 467, 369, 579, 447, 593, 620, 621, 262, 403,
	606, 516, 614, 638, 225, 259, 417, 501, 599, 490,
	394, 575, 576, 328, 489, 294, 201, 366, 626, 223,
	476, 368, 241, 230, 581, 603, 298, 288, 453, 633,
	212, 511, 591, 238, 480, 0, 0, 641, 246, 500,
	214, 588, 499, 390, 325, 326, 213, 0, 454, 267,
	292, 0, 0, 257, 412, 583, 584, 255, 642, 227,
	613, 219, 0, 612, 405, 578, 589, 391, 380, 218,
	587, 389, 379, 333, 352, 353, 279, 306, 444, 372,
	445, 305, 307, 401, 400, 402, 206, 600, 0, 207,
	0, 495, 602, 643, 449, 211, 233, 234, 236, 0,
	278, 282, 290, 293, 302, 303, 312, 364, 416, 443,
	439, 448, 0, 573, 594, 607, 618, 624, 625, 627,
	628, 629, 630, 631, 634, 632, 404, 310, 491, 332,
	370, 0, 0, 422, 469, 239, 598, 492, 199, 0,
	0, 0, 0, 253, 254, 0, 569, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 639, 502, 508, 503, 504, 505,
	506, 507, 0, 509, 0, 0, 0, 0, 0, 395,
	0, 585, 586, 662, 381, 482, 595, 334, 346, 349,
	339, 358, 0, 359, 335, 336, 341, 343, 344, 345,
	350, 351, 355, 361, 248, 209, 387, 396, 572, 311,
	215, 216, 217, 518, 519, 520, 521, 610, 611, 615,
	204, 459, 460, 461, 462, 291, 605, 308, 465, 464,
	330, 331, 376, 446, 534, 536, 547, 551, 553, 555,
	561, 564, 535, 537, 548, 552, 554, 556, 562, 565,
	524, 526, 528, 530, 543, 542, 539, 567, 568, 545,
	550, 529, 541, 546, 559, 566, 563, 523, 527, 531,
	540, 558, 557, 538, 549, 560, 544, 532, 525, 533,
	0, 196, 220, 365, 0, 451, 287, 640, 609, 604,
	205, 222, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 309, 317, 318,
	321, 327, 377, 383, 384, 385, 386, 406, 407, 408,
	411, 414, 415, 418, 420, 421, 424, 428, 432, 433,
	434, 436, 438, 440, 452, 457, 471, 472, 473, 474,
	475, 478, 479, 484, 485, 486, 487, 488, 496, 497,
	510, 580, 582, 597, 616, 622, 477, 300, 301, 441,
	442, 313, 314, 636, 637, 299, 592, 623, 590, 635,
	617, 435, 375, 0, 0, 378, 280, 304, 319, 0,
	608, 498, 226, 463, 289, 250, 0, 0, 210, 245,
	229, 258, 273, 276, 323, 388, 397, 426, 431, 295,
	270, 243, 456, 240, 481, 513, 514, 515, 517, 392,
	265, 430, 393, 0, 373, 570, 571, 315, 0, 522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 363, 266, 0, 0, 427,
	0, 203, 0, 483, 251, 374, 371, 577, 281, 272,
	268, 249, 316, 382, 425, 512, 419, 0, 367, 0,
	0, 493, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 247,
	324, 202, 410, 494, 285, 0, 0, 0, 0, 1687,
	945, 0, 0, 1684, 0, 0, 0, 0, 1682, 0,
	237, 1683, 1681, 244, 1686, 0, 910, 348, 357, 356,
	337, 338, 340, 342, 347, 354, 360, 0, 0, 601,
	0, 0, 0, 264, 320, 271, 263, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 399, 256, 0, 450, 0,
	0, 0, 619, 0, 0, 0, 0, 0, 0, 0,
	362, 0, 329, 197, 224, 0, 0, 409, 458, 470,
	0, 0, 0, 252, 0, 468, 423, 596, 232, 283,
	455, 429, 466, 437, 286, 0, 0, 467, 369, 579,
	447, 593, 620, 621, 262, 403, 606, 516, 614, 638,
	225, 259, 417, 501, 599, 490, 394, 575, 576, 328,
	489, 294, 201, 366, 626, 223, 476, 368, 241, 230,
	581, 603, 298, 288, 453, 633, 212, 511, 591, 238,
	480, 0, 0, 641, 246, 500, 214, 588, 499, 390,
	325, 326, 213, 0, 454, 267, 292, 0, 0, 257,
	412, 583, 584, 255, 642, 227, 613, 219, 0, 612,
	405, 578, 589, 391, 380, 218, 587, 389, 379, 333,
	352, 353, 279, 306, 444, 372, 445, 305, 307, 401,
	400, 402, 206, 600, 0, 207, 0, 495, 602, 643,
	449, 211, 233, 234, 236, 0, 278, 282, 290, 293,
	302, 303, 312, 364, 416, 443, 439, 448, 0, 573,
	594, 607, 618, 624, 625, 627, 628, 629, 630, 631,
	634, 632, 404, 310, 491, 332, 370, 0, 0, 422,
	469, 239, 598, 492, 199, 0, 0, 0, 0, 253,
	254, 0, 569, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	639, 502, 508, 503, 504, 505, 506, 507, 0, 509,
	0, 0, 0, 0, 0, 395, 0, 585, 586, 662,
	381, 482, 595, 334, 346, 349, 339, 358, 0, 359,
	335, 336, 341, 343, 344, 345, 350, 351, 355, 361,
	248, 209, 387, 396, 572, 311, 215, 216, 217, 518,
	519, 520, 521, 610, 611, 615, 204, 459, 460, 461,
	462, 291, 605, 308, 465, 464, 330, 331, 376, 446,
	534, 536, 547, 551, 553, 555, 561, 564, 535, 537,
	548, 552, 554, 556, 562, 565, 524, 526, 528, 530,
	543, 542, 539, 567, 568, 545, 550, 529, 541, 546,
	559, 566, 563, 523, 527, 531, 540, 558, 557, 538,
	549, 560, 544, 532, 525, 533, 0, 196, 220, 365,
	0, 451, 287, 640, 609, 604, 205, 222, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 309, 317, 318, 321, 327, 377, 383,
	384, 385, 386, 406, 407, 408, 411, 414, 415, 418,
	420, 421, 424, 428, 432, 433, 434, 436, 438, 440,
	452, 457, 471, 472, 473, 474, 475, 478, 479, 484,
	485, 486, 487, 488, 496, 497, 510, 580, 582, 597,
	616, 622, 477, 300, 301, 441, 442, 313, 314, 636,
	637, 299, 592, 623, 590, 635, 617, 435, 375, 0,
	0, 378, 280, 304, 319, 0, 608, 498, 226, 463,
	289, 250, 0, 0, 210, 245, 229, 258, 273, 276,
	323, 388, 397, 426, 431, 295, 270, 243, 456, 240,
	481, 513, 514, 515, 517, 392, 265, 430, 393, 0,
	373, 570, 571, 315, 86, 522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 363, 266, 0, 0, 427, 0, 203, 0, 483,
	251, 374, 371, 577, 281, 272, 268, 249, 316, 382,
	425, 512, 419, 0, 367, 0, 0, 493, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 247, 324, 202, 410, 494,
	285, 0, 95, 0, 0, 0, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 244,
	0, 0, 0, 348, 357, 356, 337, 338, 340, 342,
	347, 354, 360, 0, 0, 601, 0, 0, 0, 264,
	320, 271, 263, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 399, 256, 0, 450, 0, 0, 0, 619, 0,
	0, 0, 0, 0, 0, 0, 362, 0, 329, 197,
	224, 0, 0, 409, 458, 470, 0, 0, 0, 252,
	0, 468, 423, 596, 232, 283, 455, 429, 466, 437,
	286, 0, 0, 467, 369, 579, 447, 593, 620, 621,
	262, 403, 606, 516, 614, 638, 225, 259, 417, 501,
	599, 490, 394, 575, 576, 328, 489, 294, 201, 366,
	626, 223, 476, 368, 241, 230, 581, 603, 298, 288,
	453, 633, 212, 511, 591, 238, 480, 0, 0, 641,
	246, 500, 214, 588, 499, 390, 325, 326, 213, 0,
	454, 267, 292, 0, 0, 257, 412, 583, 584, 255,
	642, 227, 613, 219, 0, 612, 405, 578, 589, 391,
	380, 218, 587, 389, 379, 333, 352, 353, 279, 306,
	444, 372, 445, 305, 307, 401, 400, 402, 206, 600,
	0, 207, 0, 495, 602, 643, 449, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 302, 303, 312, 364,
	416, 443, 439, 448, 0, 573, 594, 607, 618, 624,
	625, 627, 628, 629, 630, 631, 634, 632, 404, 310,
	491, 332, 370, 0, 0, 422, 469, 239, 598, 492,
	199, 0, 0, 0, 0, 253, 254, 0, 569, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 639, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 0, 0, 0, 0,
	0, 395, 0, 585, 586, 662, 381, 482, 595, 334,
	346, 349, 339, 358, 0, 359, 335, 336, 341, 343,
	344, 345, 350, 351, 355, 361, 248, 209, 387, 396,
	572, 311, 215, 216, 217, 518, 519, 520, 521, 610,
	611, 615, 204, 459, 460, 461, 462, 291, 605, 308,
	465, 464, 330, 331, 376, 446, 534, 536, 547, 551,
	553, 555, 561, 564, 535, 537, 548, 552, 554, 556,
	562, 565, 524, 526, 528, 530, 543, 542, 539, 567,
	568, 545, 550, 529, 541, 546, 559, 566, 563, 523,
	527, 531, 540, 558, 557, 538, 549, 560, 544, 532,
	525, 533, 0, 196, 220, 365, 94, 451, 287, 640,
	609, 604, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 2388, 0, 0, 2387, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 309,
	317, 318, 321, 327, 377, 383, 384, 385, 386, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 616, 622, 477, 300,
	301, 441, 442, 313, 314, 636, 637, 299, 592, 623,
	590, 635, 617, 435, 375, 0, 0, 378, 280, 304,
	319, 0, 608, 498, 226, 463, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 323, 388, 397, 426,
	431, 295, 270, 243, 456, 240, 481, 513, 514, 515,
	517, 392, 265, 430, 1749, 0, 373, 570, 571, 315,
	0, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 1751, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 0,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 0, 0,
	0, 1753, 712, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 348,
	357, 356, 337, 338, 340, 342, 347, 354, 360, 0,
	0, 601, 0, 0, 0, 264, 320, 271, 263, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 1458, 0, 1459, 1460, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 399, 256, 0,
	450, 0, 0, 0, 619, 0, 0, 0, 0, 0,
	0, 0, 362, 0, 329, 197, 224, 0, 0, 409,
	458, 470, 0, 0, 0, 252, 0, 468, 423, 596,
	232, 283, 455, 429, 466, 437, 286, 0, 0, 467,
	369, 579, 447, 593, 620, 621, 262, 403, 606, 516,
	614, 638, 225, 259, 417, 501, 599, 490, 394, 575,
	576, 328, 489, 294, 201, 366, 626, 223, 476, 368,
	241, 230, 581, 603, 298, 288, 453, 633, 212, 511,
	591, 238, 480, 0, 0, 641, 246, 500, 214, 588,
	499, 390, 325, 326, 213, 0, 454, 267, 292, 0,
	0, 257, 412, 583, 584, 255, 642, 227, 613, 219,
	0, 612, 405, 578, 589, 391, 380, 218, 587, 389,
	379, 333, 352, 353, 279, 306, 444, 372, 445, 305,
	307, 401, 400, 402, 206, 600, 0, 207, 0, 495,
	602, 643, 449, 211, 233, 234, 236, 0, 278, 282,
	290, 293, 302, 303, 312, 364, 416, 443, 439, 448,
	0, 573, 594, 607, 618, 624, 625, 627, 628, 629,
	630, 631, 634, 632, 404, 310, 491, 332, 370, 0,
	0, 422, 469, 239, 598, 492, 199, 0, 0, 0,
	0, 253, 254, 0, 569, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 639, 502, 508, 503, 504, 505, 506, 507,
	0, 509, 0, 0, 0, 0, 0, 395, 0, 585,
	586, 662, 381, 482, 595, 334, 346, 349, 339, 358,
	0, 359, 335, 336, 341, 343, 344, 345, 350, 351,
	355, 361, 248, 209, 387, 396, 572, 311, 215, 216,
	217, 518, 519, 520, 521, 610, 611, 615, 204, 459,
	460, 461, 462, 291, 605, 308, 465, 464, 330, 331,
	376, 446, 534, 536, 547, 551, 553, 555, 561, 564,
	535, 537, 548, 552, 554, 556, 562, 565, 524, 526,
	528, 530, 543, 542, 539, 567, 568, 545, 550, 529,
	541, 546, 559, 566, 563, 523, 527, 531, 540, 558,
	557, 538, 549, 560, 544, 532, 525, 533, 0, 196,
	220, 365, 0, 451, 287, 640, 609, 604, 205, 222,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 208, 221, 231, 235, 242,
	260, 275, 277, 284, 297, 309, 317, 318, 321, 327,
	377, 383, 384, 385, 386, 406, 407, 408, 411, 414,
	415, 418, 420, 421, 424, 428, 432, 433, 434, 436,
	438, 440, 452, 457, 471, 472, 473, 474, 475, 478,
	479, 484, 485, 486, 487, 488, 496, 497, 510, 580,
	582, 597, 616, 622, 477, 300, 301, 441, 442, 313,
	314, 636, 637, 299, 592, 623, 590, 635, 617, 435,
	375, 0, 0, 378, 280, 304, 319, 0, 608, 498,
	226, 463, 289, 250, 0, 0, 210, 245, 229, 258,
	273, 276, 323, 388, 397, 426, 431, 295, 270, 243,
	456, 240, 481, 513, 514, 515, 517, 392, 265, 430,
	393, 0, 373, 570, 571, 315, 86, 522, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 363, 266, 0, 0, 427, 0, 203,
	0, 483, 251, 374, 371, 577, 281, 272, 268, 249,
	316, 382, 425, 512, 419, 0, 367, 0, 0, 493,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 247, 324, 202,
	410, 494, 285, 0, 95, 0, 1726, 0, 712, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 348, 357, 356, 337, 338,
	340, 342, 347, 354, 360, 0, 0, 601, 0, 0,
	0, 264, 320, 271, 263, 574, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 399, 256, 0, 450, 0, 0, 0,
	619, 0, 0, 0, 0, 0, 0, 0, 362, 0,
	329, 197, 224, 0, 0, 409, 458, 470, 0, 0,
	0, 252, 0, 468, 423, 596, 232, 283, 455, 429,
	466, 437, 286, 0, 0, 467, 369, 579, 447, 593,
	620, 621, 262, 403, 606, 516, 614, 638, 225, 259,
	417, 501, 599, 490, 394, 575, 576, 328, 489, 294,
	201, 366, 626, 223, 476, 368, 241, 230, 581, 603,
	298, 288, 453, 633, 212, 511, 591, 238, 480, 0,
	0, 641, 246, 500, 214, 588, 499, 390, 325, 326,
	213, 0, 454, 267, 292, 0, 0, 257, 412, 583,
	584, 255, 642, 227, 613, 219, 0, 612, 405, 578,
	589, 391, 380, 218, 587, 389, 379, 333, 352, 353,
	279, 306, 444, 372, 445, 305, 307, 401, 400, 402,
	206, 600, 0, 207, 0, 495, 602, 643, 449, 211,
	233, 234, 236, 0, 278, 282, 290, 293, 302, 303,
	312, 364, 416, 443, 439, 448, 0, 573, 594, 607,
	618, 624, 625, 627, 628, 629, 630, 631, 634, 632,
	404, 310, 491, 332, 370, 0, 0, 422, 469, 239,
	598, 492, 199, 0, 0, 0, 0, 253, 254, 0,
	569, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 639, 502,
	508, 503, 504, 505, 506, 507, 0, 509, 0, 0,
	0, 0, 0, 395, 0, 585, 586, 662, 381, 482,
	595, 334, 346, 349, 339, 358, 0, 359, 335, 336,
	341, 343, 344, 345, 350, 351, 355, 361, 248, 209,
	387, 396, 572, 311, 215, 216, 217, 518, 519, 520,
	521, 610, 611, 615, 204, 459, 460, 461, 462, 291,
	605, 308, 465, 464, 330, 331, 376, 446, 534, 536,
	547, 551, 553, 555, 561, 564, 535, 537, 548, 552,
	554, 556, 562, 565, 524, 526, 528, 530, 543, 542,
	539, 567, 568, 545, 550, 529, 541, 546, 559, 566,
	563, 523, 527, 531, 540, 558, 557, 538, 549, 560,
	544, 532, 525, 533, 0, 196, 220, 365, 94, 451,
	287, 640, 609, 604, 205, 222, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 309, 317, 318, 321, 327, 377, 383, 384, 385,
	386, 406, 407, 408, 411, 414, 415, 418, 420, 421,
	424, 428, 432, 433, 434, 436, 438, 440, 452, 457,
	471, 472, 473, 474, 475, 478, 479, 484, 485, 486,
	487, 488, 496, 497, 510, 580, 582, 597, 616, 622,
	477, 300, 301, 441, 442, 313, 314, 636, 637, 299,
	592, 623, 590, 635, 617, 435, 375, 0, 0, 378,
	280, 304, 319, 0, 608, 498, 226, 463, 289, 250,
	0, 0, 210, 245, 229, 258, 273, 276, 323, 388,
	397, 426, 431, 295, 270, 243, 456, 240, 481, 513,
	514, 515, 517, 392, 265, 430, 393, 0, 373, 570,
	571, 315, 0, 522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 363,
	266, 0, 0, 427, 0, 203, 0, 483, 251, 374,
	371, 577, 281, 272, 268, 249, 316, 382, 425, 512,
	419, 0, 367, 0, 0, 493, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 247, 324, 202, 410, 494, 285, 0,
	95, 0, 0, 0, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 348, 357, 356, 337, 338, 340, 342, 347, 354,
	360, 0, 0, 601, 0, 0, 0, 264, 320, 271,
	263, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 399,
	256, 0, 450, 0, 0, 0, 619, 0, 0, 0,
	0, 0, 0, 0, 362, 0, 329, 197, 224, 0,
	0, 409, 458, 470, 0, 0, 0, 252, 0, 468,
	423, 596, 232, 283, 455, 429, 466, 437, 286, 0,
	0, 467, 369, 579, 447, 593, 620, 621, 262, 403,
	606, 516, 614, 638, 225, 259, 417, 501, 599, 490,
	394, 575, 576, 328, 489, 294, 201, 366, 626, 223,
	476, 368, 241, 230, 581, 603, 298, 288, 453, 633,
	212, 511, 591, 238, 480, 0, 0, 641, 246, 500,
	214, 588, 499, 390, 325, 326, 213, 0, 454, 267,
	292, 0, 0, 257, 412, 583, 584, 255, 642, 227,
	613, 219, 0, 612, 405, 578, 589, 391, 380, 218,
	587, 389, 379, 333, 352, 353, 279, 306, 444, 372,
	445, 305, 307, 401, 400, 402, 206, 600, 0, 207,
	0, 495, 602, 643, 449, 211, 233, 234, 236, 0,
	278, 282, 290, 293, 302, 303, 312, 364, 416, 443,
	439, 448, 0, 573, 594, 607, 618, 624, 625, 627,
	628, 629, 630, 631, 634, 632, 404, 310, 491, 332,
	370, 0, 0, 422, 469, 239, 598, 492, 199, 0,
	0, 0, 0, 253, 254, 0, 569, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 639, 502, 508, 503, 504, 505,
	506, 507, 0, 509, 0, 0, 0, 0, 0, 395,
	0, 585, 586, 662, 381, 482, 595, 334, 346, 349,
	339, 358, 0, 359, 335, 336, 341, 343, 344, 345,
	350, 351, 355, 361, 248, 209, 387, 396, 572, 311,
	215, 216, 217, 518, 519, 520, 521, 610, 611, 615,
	204, 459, 460, 461, 462, 291, 605, 308, 465, 464,
	330, 331, 376, 446, 534, 536, 547, 551, 553, 555,
	561, 564, 535, 537, 548, 552, 554, 556, 562, 565,
	524, 526, 528, 530, 543, 542, 539, 567, 568, 545,
	550, 529, 541, 546, 559, 566, 563, 523, 527, 531,
	540, 558, 557, 538, 549, 560, 544, 532, 525, 533,
	0, 196, 220, 365, 0, 451, 287, 640, 609, 604,
	205, 222, 0, 261, 0, 0, 0, 0, 0, 0,
	2388, 0, 0, 2387, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 309, 317, 318,
	321, 327, 377, 383, 384, 385, 386, 406, 407, 408,
	411, 414, 415, 418, 420, 421, 424, 428, 432, 433,
	434, 436, 438, 440, 452, 457, 471, 472, 473, 474,
	475, 478, 479, 484, 485, 486, 487, 488, 496, 497,
	510, 580, 582, 597, 616, 622, 477, 300, 301, 441,
	442, 313, 314, 636, 637, 299, 592, 623, 590, 635,
	617, 435, 375, 0, 0, 378, 280, 304, 319, 0,
	608, 498, 226, 463, 289, 250, 0, 0, 210, 245,
	229, 258, 273, 276, 323, 388, 397, 426, 431, 295,
	270, 243, 456, 240, 481, 513, 514, 515, 517, 392,
	265, 430, 393, 0, 373, 570, 571, 315, 0, 522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 2335, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 363, 266, 0, 0, 427,
	0, 203, 0, 483, 251, 374, 371, 577, 281, 272,
	268, 249, 316, 382, 425, 512, 419, 0, 367, 0,
	0, 493, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 247,
	324, 202, 410, 494, 285, 0, 0, 0, 0, 1932,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 244, 0, 0, 0, 348, 357, 356,
	337, 338, 340, 342, 347, 354, 360, 0, 0, 601,
	0, 0, 0, 264, 320, 271, 263, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 399, 256, 0, 450, 0,
	0, 0, 619, 0, 0, 0, 0, 0, 0, 0,
	362, 0, 329, 197, 224, 0, 0, 409, 458, 470,
	0, 0, 0, 252, 0, 468, 423, 596, 232, 283,
	455, 429, 466, 437, 286, 0, 2333, 467, 369, 579,
	447, 593, 620, 621, 262, 403, 606, 516, 614, 638,
	225, 259, 417, 501, 599, 490, 394, 575, 576, 328,
	489, 294, 201, 366, 626, 223, 476, 368, 241, 230,
	581, 603, 298, 288, 453, 633, 212, 511, 591, 238,
	480, 0, 0, 641, 246, 500, 214, 588, 499, 390,
	325, 326, 213, 0, 454, 267, 292, 0, 0, 257,
	412, 583, 584, 255, 642, 227, 613, 219, 0, 612,
	405, 578, 589, 391, 380, 218, 587, 389, 379, 333,
	352, 353, 279, 306, 444, 372, 445, 305, 307, 401,
	400, 402, 206, 600, 0, 207, 0, 495, 602, 643,
	449, 211, 233, 234, 236, 0, 278, 282, 290, 293,
	302, 303, 312, 364, 416, 443, 439, 448, 0, 573,
	594, 607, 618, 624, 625, 627, 628, 629, 630, 631,
	634, 632, 404, 310, 491, 332, 370, 0, 0, 422,
	469, 239, 598, 492, 199, 0, 0, 0, 0, 253,
	254, 0, 569, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	639, 502, 508, 503, 504, 505, 506, 507, 0, 509,
	0, 0, 0, 0, 0, 395, 0, 585, 586, 662,
	381, 482, 595, 334, 346, 349, 339, 358, 0, 359,
	335, 336, 341, 343, 344, 345, 350, 351, 355, 361,
	248, 209, 387, 396, 572, 311, 215, 216, 217, 518,
	519, 520, 521, 610, 611, 615, 204, 459, 460, 461,
	462, 291, 605, 308, 465, 464, 330, 331, 376, 446,
	534, 536, 547, 551, 553, 555, 561, 564, 535, 537,
	548, 552, 554, 556, 562, 565, 524, 526, 528, 530,
	543, 542, 539, 567, 568, 545, 550, 529, 541, 546,
	559, 566, 563, 523, 527, 531, 540, 558, 557, 538,
	549, 560, 544, 532, 525, 533, 0, 196, 220, 365,
	0, 451, 287, 640, 609, 604, 205, 222, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 309, 317, 318, 321, 327, 377, 383,
	384, 385, 386, 406, 407, 408, 411, 414, 415, 418,
	420, 421, 424, 428, 432, 433, 434, 436, 438, 440,
	452, 457, 471, 472, 473, 474, 475, 478, 479, 484,
	485, 486, 487, 488, 496, 497, 510, 580, 582, 597,
	616, 622, 477, 300, 301, 441, 442, 313, 314, 636,
	637, 299, 592, 623, 590, 635, 617, 435, 375, 0,
	0, 378, 280, 304, 319, 0, 608, 498, 226, 463,
	289, 250, 0, 0, 210, 245, 229, 258, 273, 276,
	323, 388, 397, 426, 431, 295, 270, 243, 456, 240,
	481, 513, 514, 515, 517, 392, 265, 430, 393, 0,
	373, 570, 571, 315, 0, 522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 363, 266, 0, 0, 427, 0, 203, 0, 483,
	251, 374, 371, 577, 281, 272, 268, 249, 316, 382,
	425, 512, 419, 0, 367, 0, 0, 493, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 247, 324, 202, 410, 494,
	285, 0, 0, 0, 0, 0, 712, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 244,
	0, 0, 0, 348, 357, 356, 337, 338, 340, 342,
	347, 354, 360, 0, 0, 601, 0, 0, 0, 264,
	320, 271, 263, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 1078, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 399, 256, 0, 450, 0, 0, 0, 619, 0,
	0, 0, 0, 0, 0, 0, 362, 1084, 329, 197,
	224, 1082, 0, 409, 458, 470, 0, 0, 0, 252,
	0, 468, 423, 596, 232, 283, 455, 429, 466, 437,
	286, 0, 0, 467, 369, 579, 447, 593, 620, 621,
	262, 403, 606, 516, 614, 638, 225, 259, 417, 501,
	599, 490, 394, 575, 576, 328, 489, 294, 201, 366,
	626, 223, 476, 368, 241, 230, 581, 603, 298, 288,
	453, 633, 212, 511, 591, 238, 480, 0, 0, 641,
	246, 500, 214, 588, 499, 390, 325, 326, 213, 0,
	454, 267, 292, 0, 0, 257, 412, 583, 584, 255,
	642, 227, 613, 219, 0, 612, 405, 578, 589, 391,
	380, 218, 587, 389, 379, 333, 352, 353, 279, 306,
	444, 372, 445, 305, 307, 401, 400, 402, 206, 600,
	0, 207, 0, 495, 602, 643, 449, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 302, 303, 312, 364,
	416, 443, 439, 448, 0, 573, 594, 607, 618, 624,
	625, 627, 628, 629, 630, 631, 634, 632, 404, 310,
	491, 332, 370, 0, 0, 422, 469, 239, 598, 492,
	199, 0, 0, 0, 0, 253, 254, 0, 569, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 639, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 0, 0, 0, 0,
	0, 395, 0, 585, 586, 662, 381, 482, 595, 334,
	346, 349, 339, 358, 0, 359, 335, 336, 341, 343,
	344, 345, 350, 351, 355, 361, 248, 209, 387, 396,
	572, 311, 215, 216, 217, 518, 519, 520, 521, 610,
	611, 615, 204, 459, 460, 461, 462, 291, 605, 308,
	465, 464, 330, 331, 376, 446, 534, 536, 547, 551,
	553, 555, 561, 564, 535, 537, 548, 552, 554, 556,
	562, 565, 524, 526, 528, 530, 543, 542, 539, 567,
	568, 545, 550, 529, 541, 546, 559, 566, 563, 523,
	527, 531, 540, 558, 557, 538, 549, 560, 544, 532,
	525, 533, 0, 196, 220, 365, 0, 451, 287, 640,
	609, 604, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 309,
	317, 318, 321, 327, 377, 383, 384, 385, 386, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 616, 622, 477, 300,
	301, 441, 442, 313, 314, 636, 637, 299, 592, 623,
	590, 635, 617, 435, 375, 0, 0, 378, 280, 304,
	319, 0, 608, 498, 226, 463, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 323, 388, 397, 426,
	431, 295, 270, 243, 456, 240, 481, 513, 514, 515,
	517, 392, 265, 430, 393, 0, 373, 570, 571, 315,
	0, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 2335, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 0,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 0, 0,
	0, 1932, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 348,
	357, 356, 337, 338, 340, 342, 347, 354, 360, 0,
	0, 601, 0, 0, 0, 264, 320, 271, 263, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 399, 256, 0,
	450, 0, 0, 0, 619, 0, 0, 0, 0, 0,
	0, 0, 362, 0, 329, 197, 224, 0, 0, 409,
	458, 470, 0, 0, 0, 252, 0, 468, 423, 596,
	232, 283, 455, 429, 466, 437, 286, 0, 0, 467,
	369, 579, 447, 593, 620, 621, 262, 403, 606, 516,
	614, 638, 225, 259, 417, 501, 599, 490, 394, 575,
	576, 328, 489, 294, 201, 366, 626, 223, 476, 368,
	241, 230, 581, 603, 298, 288, 453, 633, 212, 511,
	591, 238, 480, 0, 0, 641, 246, 500, 214, 588,
	499, 390, 325, 326, 213, 0, 454, 267, 292, 0,
	0, 257, 412, 583, 584, 255, 642, 227, 613, 219,
	0, 612, 405, 578, 589, 391, 380, 218, 587, 389,
	379, 333, 352, 353, 279, 306, 444, 372, 445, 305,
	307, 401, 400, 402, 206, 600, 0, 207, 0, 495,
	602, 643, 449, 211, 233, 234, 236, 0, 278, 282,
	290, 293, 302, 303, 312, 364, 416, 443, 439, 448,
	0, 573, 594, 607, 618, 624, 625, 627, 628, 629,
	630, 631, 634, 632, 404, 310, 491, 332, 370, 0,
	0, 422, 469, 239, 598, 492, 199, 0, 0, 0,
	0, 253, 254, 0, 569, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 639, 502, 508, 503, 504, 505, 506, 507,
	0, 509, 0, 0, 0, 0, 0, 395, 0, 585,
	586, 662, 381, 482, 595, 334, 346, 349, 339, 358,
	0, 359, 335, 336, 341, 343, 344, 345, 350, 351,
	355, 361, 248, 209, 387, 396, 572, 311, 215, 216,
	217, 518, 519, 520, 521, 610, 611, 615, 204, 459,
	460, 461, 462, 291, 605, 308, 465, 464, 330, 331,
	376, 446, 534, 536, 547, 551, 553, 555, 561, 564,
	535, 537, 548, 552, 554, 556, 562, 565, 524, 526,
	528, 530, 543, 542, 539, 567, 568, 545, 550, 529,
	541, 546, 559, 566, 563, 523, 527, 531, 540, 558,
	557, 538, 549, 560, 544, 532, 525, 533, 0, 196,
	220, 365, 0, 451, 287, 640, 609, 604, 205, 222,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 208, 221, 231, 235, 242,
	260, 275, 277, 284, 297, 309, 317, 318, 321, 327,
	377, 383, 384, 385, 386, 406, 407, 408, 411, 414,
	415, 418, 420, 421, 424, 428, 432, 433, 434, 436,
	438, 440, 452, 457, 471, 472, 473, 474, 475, 478,
	479, 484, 485, 486, 487, 488, 496, 497, 510, 580,
	582, 597, 616, 622, 477, 300, 301, 441, 442, 313,
	314, 636, 637, 299, 592, 623, 590, 635, 617, 435,
	375, 0, 0, 378, 280, 304, 319, 0, 608, 498,
	226, 463, 289, 250, 0, 0, 210, 245, 229, 258,
	273, 276, 323, 388, 397, 426, 431, 295, 270, 243,
	456, 240, 481, 513, 514, 515, 517, 392, 265, 430,
	393, 0, 373, 570, 571, 315, 0, 522, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 363, 266, 0, 0, 427, 0, 203,
	0, 483, 251, 374, 371, 577, 281, 272, 268, 249,
	316, 382, 425, 512, 419, 0, 367, 0, 0, 493,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 247, 324, 202,
	410, 494, 285, 0, 0, 0, 1726, 0, 712, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 348, 357, 356, 337, 338,
	340, 342, 347, 354, 360, 0, 0, 601, 0, 0,
	0, 264, 320, 271, 263, 574, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 399, 256, 0, 450, 0, 0, 0,
	619, 0, 0, 0, 3677, 0, 0, 0, 362, 0,
	329, 197, 224, 0, 0, 409, 458, 470, 0, 0,
	0, 252, 0, 468, 423, 596, 232, 283, 455, 429,
	466, 437, 286, 0, 0, 467, 369, 579, 447, 593,
	620, 621, 262, 403, 606, 516, 614, 638, 225, 259,
	417, 501, 599, 490, 394, 575, 576, 328, 489, 294,
	201, 366, 626, 223, 476, 368, 241, 230, 581, 603,
	298, 288, 453, 633, 212, 511, 591, 238, 480, 0,
	0, 641, 246, 500, 214, 588, 499, 390, 325, 326,
	213, 0, 454, 267, 292, 0, 0, 257, 412, 583,
	584, 255, 642, 227, 613, 219, 0, 612, 405, 578,
	589, 391, 380, 218, 587, 389, 379, 333, 352, 353,
	279, 306, 444, 372, 445, 305, 307, 401, 400, 402,
	206, 600, 0, 207, 0, 495, 602, 643, 449, 211,
	233, 234, 236, 0, 278, 282, 290, 293, 302, 303,
	312, 364, 416, 443, 439, 448, 0, 573, 594, 607,
	618, 624, 625, 627, 628, 629, 630, 631, 634, 632,
	404, 310, 491, 332, 370, 0, 0, 422, 469, 239,
	598, 492, 199, 0, 0, 0, 0, 253, 254, 0,
	569, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 639, 502,
	508, 503, 504, 505, 506, 507, 0, 509, 0, 0,
	0, 0, 0, 395, 0, 585, 586, 662, 381, 482,
	595, 334, 346, 349, 339, 358, 0, 359, 335, 336,
	341, 343, 344, 345, 350, 351, 355, 361, 248, 209,
	387, 396, 572, 311, 215, 216, 217, 518, 519, 520,
	521, 610, 611, 615, 204, 459, 460, 461, 462, 291,
	605, 308, 465, 464, 330, 331, 376, 446, 534, 536,
	547, 551, 553, 555, 561, 564, 535, 537, 548, 552,
	554, 556, 562, 565, 524, 526, 528, 530, 543, 542,
	539, 567, 568, 545, 550, 529, 541, 546, 559, 566,
	563, 523, 527, 531, 540, 558, 557, 538, 549, 560,
	544, 532, 525, 533, 0, 196, 220, 365, 0, 451,
	287, 640, 609, 604, 205, 222, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 309, 317, 318, 321, 327, 377, 383, 384, 385,
	386, 406, 407, 408, 411, 414, 415, 418, 420, 421,
	424, 428, 432, 433, 434, 436, 438, 440, 452, 457,
	471, 472, 473, 474, 475, 478, 479, 484, 485, 486,
	487, 488, 496, 497, 510, 580, 582, 597, 616, 622,
	477, 300, 301, 441, 442, 313, 314, 636, 637, 299,
	592, 623, 590, 635, 617, 435, 375, 0, 0, 378,
	280, 304, 319, 0, 608, 498, 226, 463, 289, 250,
	0, 0, 210, 245, 229, 258, 273, 276, 323, 388,
	397, 426, 431, 295, 270, 243, 456, 240, 481, 513,
	514, 515, 517, 392, 265, 430, 393, 0, 373, 570,
	571, 315, 0, 522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 363,
	266, 0, 0, 427, 0, 203, 0, 483, 251, 374,
	371, 577, 281, 272, 268, 249, 316, 382, 425, 512,
	419, 0, 367, 0, 0, 493, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 247, 324, 202, 410, 494, 285, 0,
	0, 0, 0, 2096, 712, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 348, 357, 356, 337, 338, 340, 342, 347, 354,
	360, 0, 0, 601, 0, 0, 0, 264, 320, 271,
	263, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2097, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 399,
	256, 0, 450, 0, 0, 0, 619, 0, 0, 0,
	0, 0, 0, 0, 362, 0, 329, 197, 224, 0,
	0, 409, 458, 470, 0, 0, 0, 252, 0, 468,
	423, 596, 232, 283, 455, 429, 466, 437, 286, 0,
	0, 467, 369, 579, 447, 593, 620, 621, 262, 403,
	606, 516, 614, 638, 225, 259, 417, 501, 599, 490,
	394, 575, 576, 328, 489, 294, 201, 366, 626, 223,
	476, 368, 241, 230, 581, 603, 298, 288, 453, 633,
	212, 511, 591, 238, 480, 0, 0, 641, 246, 500,
	214, 588, 499, 390, 325, 326, 213, 0, 454, 267,
	292, 0, 0, 257, 412, 583, 584, 255, 642, 227,
	613, 219, 0, 612, 405, 578, 589, 391, 380, 218,
	587, 389, 379, 333, 352, 353, 279, 306, 444, 372,
	445, 305, 307, 401, 400, 402, 206, 600, 0, 207,
	0, 495, 602, 643, 449, 211, 233, 234, 236, 0,
	278, 282, 290, 293, 302, 303, 312, 364, 416, 443,
	439, 448, 0, 573, 594, 607, 618, 624, 625, 627,
	628, 629, 630, 631, 634, 632, 404, 310, 491, 332,
	370, 0, 0, 422, 469, 239, 598, 492, 199, 0,
	0, 0, 0, 253, 254, 0, 569, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 639, 502, 508, 503, 504, 505,
	506, 507, 0, 509, 0, 0, 0, 0, 0, 395,
	0, 585, 586, 662, 381, 482, 595, 334, 346, 349,
	339, 358, 0, 359, 335, 336, 341, 343, 344, 345,
	350, 351, 355, 361, 248, 209, 387, 396, 572, 311,
	215, 216, 217, 518, 519, 520, 521, 610, 611, 615,
	204, 459, 460, 461, 462, 291, 605, 308, 465, 464,
	330, 331, 376, 446, 534, 536, 547, 551, 553, 555,
	561, 564, 535, 537, 548, 552, 554, 556, 562, 565,
	524, 526, 528, 530, 543, 542, 539, 567, 568, 545,
	550, 529, 541, 546, 559, 566, 563, 523, 527, 531,
	540, 558, 557, 538, 549, 560, 544, 532, 525, 533,
	0, 196, 220, 365, 0, 451, 287, 640, 609, 604,
	205, 222, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 309, 317, 318,
	321, 327, 377, 383, 384, 385, 386, 406, 407, 408,
	411, 414, 415, 418, 420, 421, 424, 428, 432, 433,
	434, 436, 438, 440, 452, 457, 471, 472, 473, 474,
	475, 478, 479, 484, 485, 486, 487, 488, 496, 497,
	510, 580, 582, 597, 616, 622, 477, 300, 301, 441,
	442, 313, 314, 636, 637, 299, 592, 623, 590, 635,
	617, 435, 375, 0, 0, 378, 280, 304, 319, 0,
	608, 498, 226, 463, 289, 250, 0, 0, 210, 245,
	229, 258, 273, 276, 323, 388, 397, 426, 431, 295,
	270, 243, 456, 240, 481, 513, 514, 515, 517, 392,
	265, 430, 393, 0, 373, 570, 571, 315, 0, 522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 363, 266, 0, 0, 427,
	0, 203, 0, 483, 251, 374, 371, 577, 281, 272,
	268, 249, 316, 382, 425, 512, 419, 0, 367, 0,
	0, 493, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 247,
	324, 202, 410, 494, 285, 0, 0, 0, 0, 2832,
	712, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 244, 0, 0, 0, 348, 357, 356,
	337, 338, 340, 342, 347, 354, 360, 0, 0, 601,
	0, 0, 0, 264, 320, 271, 263, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2833,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 399, 256, 0, 450, 0,
	0, 0, 619, 0, 0, 0, 0, 0, 0, 0,
	362, 0, 329, 197, 224, 0, 0, 409, 458, 470,
	0, 0, 0, 252, 0, 468, 423, 596, 232, 283,
	455, 429, 466, 437, 286, 0, 0, 467, 369, 579,
	447, 593, 620, 621, 262, 403, 606, 516, 614, 638,
	225, 259, 417, 501, 599, 490, 394, 575, 576, 328,
	489, 294, 201, 366, 626, 223, 476, 368, 241, 230,
	581, 603, 298, 288, 453, 633, 212, 511, 591, 238,
	480, 0, 0, 641, 246, 500, 214, 588, 499, 390,
	325, 326, 213, 0, 454, 267, 292, 0, 0, 257,
	412, 583, 584, 255, 642, 227, 613, 219, 0, 612,
	405, 578, 589, 391, 380, 218, 587, 389, 379, 333,
	352, 353, 279, 306, 444, 372, 445, 305, 307, 401,
	400, 402, 206, 600, 0, 207, 0, 495, 602, 643,
	449, 211, 233, 234, 236, 0, 278, 282, 290, 293,
	302, 303, 312, 364, 416, 443, 439, 448, 0, 573,
	594, 607, 618, 624, 625, 627, 628, 629, 630, 631,
	634, 632, 404, 310, 491, 332, 370, 0, 0, 422,
	469, 239, 598, 492, 199, 0, 0, 0, 0, 253,
	254, 0, 569, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	639, 502, 508, 503, 504, 505, 506, 507, 0, 509,
	0, 0, 0, 0, 0, 395, 0, 585, 586, 662,
	381, 482, 595, 334, 346, 349, 339, 358, 0, 359,
	335, 336, 341, 343, 344, 345, 350, 351, 355, 361,
	248, 209, 387, 396, 572, 311, 215, 216, 217, 518,
	519, 520, 521, 610, 611, 615, 204, 459, 460, 461,
	462, 291, 605, 308, 465, 464, 330, 331, 376, 446,
	534, 536, 547, 551, 553, 555, 561, 564, 535, 537,
	548, 552, 554, 556, 562, 565, 524, 526, 528, 530,
	543, 542, 539, 567, 568, 545, 550, 529, 541, 546,
	559, 566, 563, 523, 527, 531, 540, 558, 557, 538,
	549, 560, 544, 532, 525, 533, 0, 196, 220, 365,
	0, 451, 287, 640, 609, 604, 205, 222, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 309, 317, 318, 321, 327, 377, 383,
	384, 385, 386, 406, 407, 408, 411, 414, 415, 418,
	420, 421, 424, 428, 432, 433, 434, 436, 438, 440,
	452, 457, 471, 472, 473, 474, 475, 478, 479, 484,
	485, 486, 487, 488, 496, 497, 510, 580, 582, 597,
	616, 622, 477, 300, 301, 441, 442, 313, 314, 636,
	637, 299, 592, 623, 590, 635, 617, 435, 375, 0,
	0, 378, 280, 304, 319, 0, 608, 498, 226, 463,
	289, 250, 0, 0, 210, 245, 229, 258, 273, 276,
	323, 388, 397, 426, 431, 295, 270, 243, 456, 240,
	481, 513, 514, 515, 517, 392, 265, 430, 393, 0,
	373, 570, 571, 315, 0, 522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 363, 266, 0, 0, 427, 0, 203, 0, 483,
	251, 374, 371, 577, 281, 272, 268, 249, 316, 382,
	425, 512, 419, 0, 367, 0, 0, 493, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 247, 324, 202, 410, 494,
	285, 0, 0, 0, 0, 0, 712, 0, 0, 0,
	0, 2817, 0, 0, 0, 0, 237, 0, 0, 244,
	2818, 0, 0, 348, 357, 356, 337, 338, 340, 342,
	347, 354, 360, 0, 0, 601, 0, 0, 0, 264,
	320, 271, 263, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 399, 256, 0, 450, 0, 0, 0, 619, 0,
	0, 0, 0, 0, 0, 0, 362, 0, 329, 197,
	224, 0, 0, 409, 458, 470, 0, 0, 0, 252,
	0, 468, 423, 596, 232, 283, 455, 429, 466, 437,
	286, 0, 0, 467, 369, 579, 447, 593, 620, 621,
	262, 403, 606, 516, 614, 638, 225, 259, 417, 501,
	599, 490, 394, 575, 576, 328, 489, 294, 201, 366,
	626, 223, 476, 368, 241, 230, 581, 603, 298, 288,
	453, 633, 212, 511, 591, 238, 480, 0, 0, 641,
	246, 500, 214, 588, 499, 390, 325, 326, 213, 0,
	454, 267, 292, 0, 0, 257, 412, 583, 584, 255,
	642, 227, 613, 219, 0, 612, 405, 578, 589, 391,
	380, 218, 587, 389, 379, 333, 352, 353, 279, 306,
	444, 372, 445, 305, 307, 401, 400, 402, 206, 600,
	0, 207, 0, 495, 602, 643, 449, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 302, 303, 312, 364,
	416, 443, 439, 448, 0, 573, 594, 607, 618, 624,
	625, 627, 628, 629, 630, 631, 634, 632, 404, 310,
	491, 332, 370, 0, 0, 422, 469, 239, 598, 492,
	199, 0, 0, 0, 0, 253, 254, 0, 569, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 639, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 0, 0, 0, 0,
	0, 395, 0, 585, 586, 662, 381, 482, 595, 334,
	346, 349, 339, 358, 0, 359, 335, 336, 341, 343,
	344, 345, 350, 351, 355, 361, 248, 209, 387, 396,
	572, 311, 215, 216, 217, 518, 519, 520, 521, 610,
	611, 615, 204, 459, 460, 461, 462, 291, 605, 308,
	465, 464, 330, 331, 376, 446, 534, 536, 547, 551,
	553, 555, 561, 564, 535, 537, 548, 552, 554, 556,
	562, 565, 524, 526, 528, 530, 543, 542, 539, 567,
	568, 545, 550, 529, 541, 546, 559, 566, 563, 523,
	527, 531, 540, 558, 557, 538, 549, 560, 544, 532,
	525, 533, 0, 196, 220, 365, 0, 451, 287, 640,
	609, 604, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 309,
	317, 318, 321, 327, 377, 383, 384, 385, 386, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 616, 622, 477, 300,
	301, 441, 442, 313, 314, 636, 637, 299, 592, 623,
	590, 635, 617, 435, 375, 0, 0, 378, 280, 304,
	319, 0, 608, 498, 226, 463, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 323, 388, 397, 426,
	431, 295, 270, 243, 456, 240, 481, 513, 514, 515,
	517, 392, 265, 430, 393, 0, 373, 570, 571, 315,
	0, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 1772, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 0,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 0, 0,
	0, 1771, 712, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 348,
	357, 356, 337, 338, 340, 342, 347, 354, 360, 0,
	0, 601, 0, 0, 0, 264, 320, 271, 263, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 399, 256, 0,
	450, 0, 0, 0, 619, 0, 0, 0, 0, 0,
	0, 0, 362, 0, 329, 197, 224, 0, 0, 409,
	458, 470, 0, 0, 0, 252, 0, 468, 423, 596,
	232, 283, 455, 429, 466, 437, 286, 0, 0, 467,
	369, 579, 447, 593, 620, 621, 262, 403, 606, 516,
	614, 638, 225, 259, 417, 501, 599, 490, 394, 575,
	576, 328, 489, 294, 201, 366, 626, 223, 476, 368,
	241, 230, 581, 603, 298, 288, 453, 633, 212, 511,
	591, 238, 480, 0, 0, 641, 246, 500, 214, 588,
	499, 390, 325, 326, 213, 0, 454, 267, 292, 0,
	0, 257, 412, 583, 584, 255, 642, 227, 613, 219,
	0, 612, 405, 578, 589, 391, 380, 218, 587, 389,
	379, 333, 352, 353, 279, 306, 444, 372, 445, 305,
	307, 401, 400, 402, 206, 600, 0, 207, 0, 495,
	602, 643, 449, 211, 233, 234, 236, 0, 278, 282,
	290, 293, 302, 303, 312, 364, 416, 443, 439, 448,
	0, 573, 594, 607, 618, 624, 625, 627, 628, 629,
	630, 631, 634, 632, 404, 310, 491, 332, 370, 0,
	0, 422, 469, 239, 598, 492, 199, 0, 0, 0,
	0, 253, 254, 0, 569, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 639, 502, 508, 503, 504, 505, 506, 507,
	0, 509, 0, 0, 0, 0, 0, 395, 0, 585,
	586, 662, 381, 482, 595, 334, 346, 349, 339, 358,
	0, 359, 335, 336, 341, 343, 344, 345, 350, 351,
	355, 361, 248, 209, 387, 396, 572, 311, 215, 216,
	217, 518, 519, 520, 521, 610, 611, 615, 204, 459,
	460, 461, 462, 291, 605, 308, 465, 464, 330, 331,
	376, 446, 534, 536, 547, 551, 553, 555, 561, 564,
	535, 537, 548, 552, 554, 556, 562, 565, 524, 526,
	528, 530, 543, 542, 539, 567, 568, 545, 550, 529,
	541, 546, 559, 566, 563, 523, 527, 531, 540, 558,
	557, 538, 549, 560, 544, 532, 525, 533, 0, 196,
	220, 365, 0, 451, 287, 640, 609, 604, 205, 222,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 208, 221, 231, 235, 242,
	260, 275, 277, 284, 297, 309, 317, 318, 321, 327,
	377, 383, 384, 385, 386, 406, 407, 408, 411, 414,
	415, 418, 420, 421, 424, 428, 432, 433, 434, 436,
	438, 440, 452, 457, 471, 472, 473, 474, 475, 478,
	479, 484, 485, 486, 487, 488, 496, 497, 510, 580,
	582, 597, 616, 622, 477, 300, 301, 441, 442, 313,
	314, 636, 637, 299, 592, 623, 590, 635, 617, 435,
	375, 0, 0, 378, 280, 304, 319, 0, 608, 498,
	226, 463, 289, 250, 0, 0, 210, 245, 229, 258,
	273, 276, 323, 388, 397, 426, 431, 295, 270, 243,
	456, 240, 481, 513, 514, 515, 517, 392, 265, 430,
	393, 0, 373, 570, 571, 315, 0, 522, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 363, 266, 0, 0, 427, 0, 203,
	0, 483, 251, 374, 371, 577, 281, 272, 268, 249,
	316, 382, 425, 512, 419, 0, 367, 0, 0, 493,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 247, 324, 202,
	410, 494, 285, 0, 0, 0, 0, 0, 714, 715,
	716, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 348, 357, 356, 337, 338,
	340, 342, 347, 354, 360, 0, 0, 601, 0, 0,
	0, 264, 320, 271, 263, 574, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 399, 256, 0, 450, 0, 0, 0,
	619, 0, 0, 0, 0, 0, 0, 0, 362, 0,
	329, 197, 224, 0, 0, 409, 458, 470, 0, 0,
	0, 252, 0, 468, 423, 596, 232, 283, 455, 429,
	466, 437, 286, 0, 0, 467, 369, 579, 447, 593,
	620, 621, 262, 403, 606, 516, 614, 638, 225, 259,
	417, 501, 599, 490, 394, 575, 576, 328, 489, 294,
	201, 366, 626, 223, 476, 368, 241, 230, 581, 603,
	298, 288, 453, 633, 212, 511, 591, 238, 480, 0,
	0, 641, 246, 500, 214, 588, 499, 390, 325, 326,
	213, 0, 454, 267, 292, 0, 0, 257, 412, 583,
	584, 255, 642, 227, 613, 219, 0, 612, 405, 578,
	589, 391, 380, 218, 587, 389, 379, 333, 352, 353,
	279, 306, 444, 372, 445, 305, 307, 401, 400, 402,
	206, 600, 0, 207, 0, 495, 602, 643, 449, 211,
	233, 234, 236, 0, 278, 282, 290, 293, 302, 303,
	312, 364, 416, 443, 439, 448, 0, 573, 594, 607,
	618, 624, 625, 627, 628, 629, 630, 631, 634, 632,
	404, 310, 491, 332, 370, 0, 0, 422, 469, 239,
	598, 492, 199, 0, 0, 0, 0, 253, 254, 0,
	569, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 639, 502,
	508, 503, 504, 505, 506, 507, 0, 509, 0, 0,
	0, 0, 0, 395, 0, 585, 586, 662, 381, 482,
	595, 334, 346, 349, 339, 358, 0, 359, 335, 336,
	341, 343, 344, 345, 350, 351, 355, 361, 248, 209,
	387, 396, 572, 311, 215, 216, 217, 518, 519, 520,
	521, 610, 611, 615, 204, 459, 460, 461, 462, 291,
	605, 308, 465, 464, 330, 331, 376, 446, 534, 536,
	547, 551, 553, 555, 561, 564, 535, 537, 548, 552,
	554, 556, 562, 565, 524, 526, 528, 530, 543, 542,
	539, 567, 568, 545, 550, 529, 541, 546, 559, 566,
	563, 523, 527, 531, 540, 558, 557, 538, 549, 560,
	544, 532, 525, 533, 0, 196, 220, 365, 0, 451,
	287, 640, 609, 604, 205, 222, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 309, 317, 318, 321, 327, 377, 383, 384, 385,
	386, 406, 407, 408, 411, 414, 415, 418, 420, 421,
	424, 428, 432, 433, 434, 436, 438, 440, 452, 457,
	471, 472, 473, 474, 475, 478, 479, 484, 485, 486,
	487, 488, 496, 497, 510, 580, 582, 597, 616, 622,
	477, 300, 301, 441, 442, 313, 314, 636, 637, 299,
	592, 623, 590, 635, 617, 435, 375, 0, 0, 378,
	280, 304, 319, 0, 608, 498, 226, 463, 289, 250,
	0, 0, 210, 245, 229, 258, 273, 276, 323, 388,
	397, 426, 431, 295, 270, 243, 456, 240, 481, 513,
	514, 515, 517, 392, 265, 430, 393, 0, 373, 570,
	571, 315, 0, 522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 363,
	266, 0, 0, 427, 0, 203, 0, 483, 251, 374,
	371, 577, 281, 272, 268, 249, 316, 382, 425, 512,
	419, 0, 367, 0, 0, 493, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 247, 324, 202, 410, 494, 285, 0,
	0, 0, 0, 0, 712, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 348, 357, 356, 337, 338, 340, 342, 347, 354,
	360, 0, 0, 601, 0, 0, 0, 264, 320, 271,
	263, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 399,
	256, 0, 450, 0, 0, 0, 619, 0, 0, 0,
	4019, 0, 0, 0, 362, 0, 329, 197, 224, 0,
	0, 409, 458, 470, 0, 0, 0, 252, 0, 468,
	423, 596, 232, 283, 455, 429, 466, 437, 286, 0,
	0, 467, 369, 579, 447, 593, 620, 621, 262, 403,
	606, 516, 614, 638, 225, 259, 417, 501, 599, 490,
	394, 575, 576, 328, 489, 294, 201, 366, 626, 223,
	476, 368, 241, 230, 581, 603, 298, 288, 453, 633,
	212, 511, 591, 238, 480, 0, 0, 641, 246, 500,
	214, 588, 499, 390, 325, 326, 213, 0, 454, 267,
	292, 0, 0, 257, 412, 583, 584, 255, 642, 227,
	613, 219, 0, 612, 405, 578, 589, 391, 380, 218,
	587, 389, 379, 333, 352, 353, 279, 306, 444, 372,
	445, 305, 307, 401, 400, 402, 206, 600, 0, 207,
	0, 495, 602, 643, 449, 211, 233, 234, 236, 0,
	278, 282, 290, 293, 302, 303, 312, 364, 416, 443,
	439, 448, 0, 573, 594, 607, 618, 624, 625, 627,
	628, 629, 630, 631, 634, 632, 404, 310, 491, 332,
	370, 0, 0, 422, 469, 239, 598, 492, 199, 0,
	0, 0, 0, 253, 254, 0, 569, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 639, 502, 508, 503, 504, 505,
	506, 507, 0, 509, 0, 0, 0, 0, 0, 395,
	0, 585, 586, 662, 381, 482, 595, 334, 346, 349,
	339, 358, 0, 359, 335, 336, 341, 343, 344, 345,
	350, 351, 355, 361, 248, 209, 387, 396, 572, 311,
	215, 216, 217, 518, 519, 520, 521, 610, 611, 615,
	204, 459, 460, 461, 462, 291, 605, 308, 465, 464,
	330, 331, 376, 446, 534, 536, 547, 551, 553, 555,
	561, 564, 535, 537, 548, 552, 554, 556, 562, 565,
	524, 526, 528, 530, 543, 542, 539, 567, 568, 545,
	550, 529, 541, 546, 559, 566, 563, 523, 527, 531,
	540, 558, 557, 538, 549, 560, 544, 532, 525, 533,
	0, 196, 220, 365, 0, 451, 287, 640, 609, 604,
	205, 222, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 309, 317, 318,
	321, 327, 377, 383, 384, 385, 386, 406, 407, 408,
	411, 414, 415, 418, 420, 421, 424, 428, 432, 433,
	434, 436, 438, 440, 452, 457, 471, 472, 473, 474,
	475, 478, 479, 484, 485, 486, 487, 488, 496, 497,
	510, 580, 582, 597, 616, 622, 477, 300, 301, 441,
	442, 313, 314, 636, 637, 299, 592, 623, 590, 635,
	617, 435, 375, 0, 0, 378, 280, 304, 319, 0,
	608, 498, 226, 463, 289, 250, 0, 0, 210, 245,
	229, 258, 273, 276, 323, 388, 397, 426, 431, 295,
	270, 243, 456, 240, 481, 513, 514, 515, 517, 392,
	265, 430, 393, 0, 373, 570, 571, 315, 0, 522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 363, 266, 0, 0, 427,
	0, 203, 0, 483, 251, 374, 371, 577, 281, 272,
	268, 249, 316, 382, 425, 512, 419, 0, 367, 0,
	0, 493, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 247,
	324, 202, 410, 494, 285, 0, 0, 0, 0, 1932,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 244, 0, 0, 0, 348, 357, 356,
	337, 338, 340, 342, 347, 354, 360, 0, 0, 601,
	0, 0, 0, 264, 320, 271, 263, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 399, 256, 0, 450, 0,
	0, 0, 619, 0, 0, 0, 0, 0, 0, 0,
	362, 0, 329, 197, 224, 0, 0, 409, 458, 470,
	0, 0, 0, 252, 0, 468, 423, 596, 232, 283,
	455, 429, 466, 437, 286, 0, 0, 467, 369, 579,
	447, 593, 620, 621, 262, 403, 606, 516, 614, 638,
	225, 259, 417, 501, 599, 490, 394, 575, 576, 328,
	489, 294, 201, 366, 626, 223, 476, 368, 241, 230,
	581, 603, 298, 288, 453, 633, 212, 511, 591, 238,
	480, 0, 0, 641, 246, 500, 214, 588, 499, 390,
	325, 326, 213, 0, 454, 267, 292, 0, 0, 257,
	412, 583, 584, 255, 642, 227, 613, 219, 0, 612,
	405, 578, 589, 391, 380, 218, 587, 389, 379, 333,
	352, 353, 279, 306, 444, 372, 445, 305, 307, 401,
	400, 402, 206, 600, 0, 207, 0, 495, 602, 643,
	449, 211, 233, 234, 236, 0, 278, 282, 290, 293,
	302, 303, 312, 364, 416, 443, 439, 448, 0, 573,
	594, 607, 618, 624, 625, 627, 628, 629, 630, 631,
	634, 632, 404, 310, 491, 332, 370, 0, 0, 422,
	469, 239, 598, 492, 199, 0, 0, 0, 0, 253,
	254, 0, 569, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	639, 502, 508, 503, 504, 505, 506, 507, 0, 509,
	0, 0, 0, 0, 0, 395, 0, 585, 586, 662,
	381, 482, 595, 334, 346, 349, 339, 358, 0, 359,
	335, 336, 341, 343, 344, 345, 350, 351, 355, 361,
	248, 209, 387, 396, 572, 311, 215, 216, 217, 518,
	519, 520, 521, 610, 611, 615, 204, 459, 460, 461,
	462, 291, 605, 308, 465, 464, 330, 331, 376, 446,
	534, 536, 547, 551, 553, 555, 561, 564, 535, 537,
	548, 552, 554, 556, 562, 565, 524, 526, 528, 530,
	543, 542, 539, 567, 568, 545, 550, 529, 541, 546,
	559, 566, 563, 523, 527, 531, 540, 558, 557, 538,
	549, 560, 544, 532, 525, 533, 0, 196, 220, 365,
	0, 451, 287, 640, 609, 604, 205, 222, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 309, 317, 318, 321, 327, 377, 383,
	384, 385, 386, 406, 407, 408, 411, 414, 415, 418,
	420, 421, 424, 428, 432, 433, 434, 436, 438, 440,
	452, 457, 471, 472, 473, 474, 475, 478, 479, 484,
	485, 486, 487, 488, 496, 497, 510, 580, 582, 597,
	616, 622, 477, 300, 301, 441, 442, 313, 314, 636,
	637, 299, 592, 623, 590, 635, 617, 435, 375, 0,
	0, 378, 280, 304, 319, 0, 608, 498, 226, 463,
	289, 250, 0, 0, 210, 245, 229, 258, 273, 276,
	323, 388, 397, 426, 431, 295, 270, 243, 456, 240,
	481, 513, 514, 515, 517, 392, 265, 430, 393, 0,
	373, 570, 571, 315, 0, 522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 363, 266, 0, 0, 427, 0, 203, 0, 483,
	251, 374, 371, 577, 281, 272, 268, 249, 316, 382,
	425, 512, 419, 0, 367, 0, 0, 493, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 247, 324, 202, 410, 494,
	285, 0, 0, 0, 0, 0, 712, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 244,
	0, 0, 0, 348, 357, 356, 337, 338, 340, 342,
	347, 354, 360, 0, 0, 601, 0, 0, 0, 264,
	320, 271, 263, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 399, 256, 0, 450, 0, 0, 0, 619, 0,
	0, 0, 3677, 0, 0, 0, 362, 0, 329, 197,
	224, 0, 0, 409, 458, 470, 0, 0, 0, 252,
	0, 468, 423, 596, 232, 283, 455, 429, 466, 437,
	286, 0, 0, 467, 369, 579, 447, 593, 620, 621,
	262, 403, 606, 516, 614, 638, 225, 259, 417, 501,
	599, 490, 394, 575, 576, 328, 489, 294, 201, 366,
	626, 223, 476, 368, 241, 230, 581, 603, 298, 288,
	453, 633, 212, 511, 591, 238, 480, 0, 0, 641,
	246, 500, 214, 588, 499, 390, 325, 326, 213, 0,
	454, 267, 292, 0, 0, 257, 412, 583, 584, 255,
	642, 227, 613, 219, 0, 612, 405, 578, 589, 391,
	380, 218, 587, 389, 379, 333, 352, 353, 279, 306,
	444, 372, 445, 305, 307, 401, 400, 402, 206, 600,
	0, 207, 0, 495, 602, 643, 449, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 302, 303, 312, 364,
	416, 443, 439, 448, 0, 573, 594, 607, 618, 624,
	625, 627, 628, 629, 630, 631, 634, 632, 404, 310,
	491, 332, 370, 0, 0, 422, 469, 239, 598, 492,
	199, 0, 0, 0, 0, 253, 254, 0, 569, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 639, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 0, 0, 0, 0,
	0, 395, 0, 585, 586, 662, 381, 482, 595, 334,
	346, 349, 339, 358, 0, 359, 335, 336, 341, 343,
	344, 345, 350, 351, 355, 361, 248, 209, 387, 396,
	572, 311, 215, 216, 217, 518, 519, 520, 521, 610,
	611, 615, 204, 459, 460, 461, 462, 291, 605, 308,
	465, 464, 330, 331, 376, 446, 534, 536, 547, 551,
	553, 555, 561, 564, 535, 537, 548, 552, 554, 556,
	562, 565, 524, 526, 528, 530, 543, 542, 539, 567,
	568, 545, 550, 529, 541, 546, 559, 566, 563, 523,
	527, 531, 540, 558, 557, 538, 549, 560, 544, 532,
	525, 533, 0, 196, 220, 365, 0, 451, 287, 640,
	609, 604, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 309,
	317, 318, 321, 327, 377, 383, 384, 385, 386, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 616, 622, 477, 300,
	301, 441, 442, 313, 314, 636, 637, 299, 592, 623,
	590, 635, 617, 435, 375, 0, 0, 378, 280, 304,
	319, 0, 608, 498, 226, 463, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 323, 388, 397, 426,
	431, 295, 270, 243, 456, 240, 481, 513, 514, 515,
	517, 392, 265, 430, 393, 0, 373, 570, 571, 315,
	0, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 0,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 95, 0,
	0, 0, 712, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 348,
	357, 356, 337, 338, 340, 342, 347, 354, 360, 0,
	0, 601, 0, 0, 0, 264, 320, 271, 263, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 399, 256, 0,
	450, 0, 0, 0, 619, 0, 0, 0, 0, 0,
	0, 0, 362, 0, 329, 197, 224, 0, 0, 409,
	458, 470, 0, 0, 0, 252, 0, 468, 423, 596,
	232, 283, 455, 429, 466, 437, 286, 0, 0, 467,
	369, 579, 447, 593, 620, 621, 262, 403, 606, 516,
	614, 638, 225, 259, 417, 501, 599, 490, 394, 575,
	576, 328, 489, 294, 201, 366, 626, 223, 476, 368,
	241, 230, 581, 603, 298, 288, 453, 633, 212, 511,
	591, 238, 480, 0, 0, 641, 246, 500, 214, 588,
	499, 390, 325, 326, 213, 0, 454, 267, 292, 0,
	0, 257, 412, 583, 584, 255, 642, 227, 613, 219,
	0, 612, 405, 578, 589, 391, 380, 218, 587, 389,
	379, 333, 352, 353, 279, 306, 444, 372, 445, 305,
	307, 401, 400, 402, 206, 600, 0, 207, 0, 495,
	602, 643, 449, 211, 233, 234, 236, 0, 278, 282,
	290, 293, 302, 303, 312, 364, 416, 443, 439, 448,
	0, 573, 594, 607, 618, 624, 625, 627, 628, 629,
	630, 631, 634, 632, 404, 310, 491, 332, 370, 0,
	0, 422, 469, 239, 598, 492, 199, 0, 0, 0,
	0, 253, 254, 0, 569, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 639, 502, 508, 503, 504, 505, 506, 507,
	0, 509, 0, 0, 0, 0, 0, 395, 0, 585,
	586, 662, 381, 482, 595, 334, 346, 349, 339, 358,
	0, 359, 335, 336, 341, 343, 344, 345, 350, 351,
	355, 361, 248, 209, 387, 396, 572, 311, 215, 216,
	217, 518, 519, 520, 521, 610, 611, 615, 204, 459,
	460, 461, 462, 291, 605, 308, 465, 464, 330, 331,
	376, 446, 534, 536, 547, 551, 553, 555, 561, 564,
	535, 537, 548, 552, 554, 556, 562, 565, 524, 526,
	528, 530, 543, 542, 539, 567, 568, 545, 550, 529,
	541, 546, 559, 566, 563, 523, 527, 531, 540, 558,
	557, 538, 549, 560, 544, 532, 525, 533, 0, 196,
	220, 365, 0, 451, 287, 640, 609, 604, 205, 222,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 208, 221, 231, 235, 242,
	260, 275, 277, 284, 297, 309, 317, 318, 321, 327,
	377, 383, 384, 385, 386, 406, 407, 408, 411, 414,
	415, 418, 420, 421, 424, 428, 432, 433, 434, 436,
	438, 440, 452, 457, 471, 472, 473, 474, 475, 478,
	479, 484, 485, 486, 487, 488, 496, 497, 510, 580,
	582, 597, 616, 622, 477, 300, 301, 441, 442, 313,
	314, 636, 637, 299, 592, 623, 590, 635, 617, 435,
	375, 0, 0, 378, 280, 304, 319, 0, 608, 498,
	226, 463, 289, 250, 0, 0, 210, 245, 229, 258,
	273, 276, 323, 388, 397, 426, 431, 295, 270, 243,
	456, 240, 481, 513, 514, 515, 517, 392, 265, 430,
	393, 0, 373, 570, 571, 315, 0, 522, 0, 0,
	0, 0, 2389, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 363, 266, 0, 0, 427, 0, 203,
	0, 483, 251, 374, 371, 577, 281, 272, 268, 249,
	316, 382, 425, 512, 419, 0, 367, 0, 0, 493,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 247, 324, 202,
	410, 494, 285, 0, 0, 0, 0, 0, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 348, 357, 356, 337, 338,
	340, 342, 347, 354, 360, 0, 0, 601, 0, 0,
	0, 264, 320, 271, 263, 574, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 399, 256, 0, 450, 0, 0, 0,
	619, 0, 0, 0, 0, 0, 0, 0, 362, 0,
	329, 197, 224, 0, 0, 409, 458, 470, 0, 0,
	0, 252, 0, 468, 423, 596, 232, 283, 455, 429,
	466, 437, 286, 0, 0, 467, 369, 579, 447, 593,
	620, 621, 262, 403, 606, 516, 614, 638, 225, 259,
	417, 501, 599, 490, 394, 575, 576, 328, 489, 294,
	201, 366, 626, 223, 476, 368, 241, 230, 581, 603,
	298, 288, 453, 633, 212, 511, 591, 238, 480, 0,
	0, 641, 246, 500, 214, 588, 499, 390, 325, 326,
	213, 0, 454, 267, 292, 0, 0, 257, 412, 583,
	584, 255, 642, 227, 613, 219, 0, 612, 405, 578,
	589, 391, 380, 218, 587, 389, 379, 333, 352, 353,
	279, 306, 444, 372, 445, 305, 307, 401, 400, 402,
	206, 600, 0, 207, 0, 495, 602, 643, 449, 211,
	233, 234, 236, 0, 278, 282, 290, 293, 302, 303,
	312, 364, 416, 443, 439, 448, 0, 573, 594, 607,
	618, 624, 625, 627, 628, 629, 630, 631, 634, 632,
	404, 310, 491, 332, 370, 0, 0, 422, 469, 239,
	598, 492, 199, 0, 0, 0, 0, 253, 254, 0,
	569, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 639, 502,
	508, 503, 504, 505, 506, 507, 0, 509, 0, 0,
	0, 0, 0, 395, 0, 585, 586, 662, 381, 482,
	595, 334, 346, 349, 339, 358, 0, 359, 335, 336,
	341, 343, 344, 345, 350, 351, 355, 361, 248, 209,
	387, 396, 572, 311, 215, 216, 217, 518, 519, 520,
	521, 610, 611, 615, 204, 459, 460, 461, 462, 291,
	605, 308, 465, 464, 330, 331, 376, 446, 534, 536,
	547, 551, 553, 555, 561, 564, 535, 537, 548, 552,
	554, 556, 562, 565, 524, 526, 528, 530, 543, 542,
	539, 567, 568, 545, 550, 529, 541, 546, 559, 566,
	563, 523, 527, 531, 540, 558, 557, 538, 549, 560,
	544, 532, 525, 533, 0, 196, 220, 365, 0, 451,
	287, 640, 609, 604, 205, 222, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 309, 317, 318, 321, 327, 377, 383, 384, 385,
	386, 406, 407, 408, 411, 414, 415, 418, 420, 421,
	424, 428, 432, 433, 434, 436, 438, 440, 452, 457,
	471, 472, 473, 474, 475, 478, 479, 484, 485, 486,
	487, 488, 496, 497, 510, 580, 582, 597, 616, 622,
	477, 300, 301, 441, 442, 313, 314, 636, 637, 299,
	592, 623, 590, 635, 617, 435, 375, 0, 0, 378,
	280, 304, 319, 0, 608, 498, 226, 463, 289, 250,
	0, 0, 210, 245, 229, 258, 273, 276, 323, 388,
	397, 426, 431, 295, 270, 243, 456, 240, 481, 513,
	514, 515, 517, 392, 265, 430, 393, 0, 373, 570,
	571, 315, 0, 522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 363,
	266, 0, 0, 427, 0, 203, 0, 483, 251, 374,
	371, 577, 281, 272, 268, 249, 316, 382, 425, 512,
	419, 0, 367, 0, 0, 493, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 247, 324, 202, 410, 494, 285, 0,
	0, 0, 0, 1753, 712, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 348, 357, 356, 337, 338, 340, 342, 347, 354,
	360, 0, 0, 601, 0, 0, 0, 264, 320, 271,
	263, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 399,
	256, 0, 450, 0, 0, 0, 619, 0, 0, 0,
	0, 0, 0, 0, 362, 0, 329, 197, 224, 0,
	0, 409, 458, 470, 0, 0, 0, 252, 0, 468,
	423, 596, 232, 283, 455, 429, 466, 437, 286, 0,
	0, 467, 369, 579, 447, 593, 620, 621, 262, 403,
	606, 516, 614, 638, 225, 259, 417, 501, 599, 490,
	394, 575, 576, 328, 489, 294, 201, 366, 626, 223,
	476, 368, 241, 230, 581, 603, 298, 288, 453, 633,
	212, 511, 591, 238, 480, 0, 0, 641, 246, 500,
	214, 588, 499, 390, 325, 326, 213, 0, 454, 267,
	292, 0, 0, 257, 412, 583, 584, 255, 642, 227,
	613, 219, 0, 612, 405, 578, 589, 391, 380, 218,
	587, 389, 379, 333, 352, 353, 279, 306, 444, 372,
	445, 305, 307, 401, 400, 402, 206, 600, 0, 207,
	0, 495, 602, 643, 449, 211, 233, 234, 236, 0,
	278, 282, 290, 293, 302, 303, 312, 364, 416, 443,
	439, 448, 0, 573, 594, 607, 618, 624, 625, 627,
	628, 629, 630, 631, 634, 632, 404, 310, 491, 332,
	370, 0, 0, 422, 469, 239, 598, 492, 199, 0,
	0, 0, 0, 253, 254, 0, 569, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 639, 502, 508, 503, 504, 505,
	506, 507, 0, 509, 0, 0, 0, 0, 0, 395,
	0, 585, 586, 662, 381, 482, 595, 334, 346, 349,
	339, 358, 0, 359, 335, 336, 341, 343, 344, 345,
	350, 351, 355, 361, 248, 209, 387, 396, 572, 311,
	215, 216, 217, 518, 519, 520, 521, 610, 611, 615,
	204, 459, 460, 461, 462, 291, 605, 308, 465, 464,
	330, 331, 376, 446, 534, 536, 547, 551, 553, 555,
	561, 564, 535, 537, 548, 552, 554, 556, 562, 565,
	524, 526, 528, 530, 543, 542, 539, 567, 568, 545,
	550, 529, 541, 546, 559, 566, 563, 523, 527, 531,
	540, 558, 557, 538, 549, 560, 544, 532, 525, 533,
	0, 196, 220, 365, 0, 451, 287, 640, 609, 604,
	205, 222, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 309, 317, 318,
	321, 327, 377, 383, 384, 385, 386, 406, 407, 408,
	411, 414, 415, 418, 420, 421, 424, 428, 432, 433,
	434, 436, 438, 440, 452, 457, 471, 472, 473, 474,
	475, 478, 479, 484, 485, 486, 487, 488, 496, 497,
	510, 580, 582, 597, 616, 622, 477, 300, 301, 441,
	442, 313, 314, 636, 637, 299, 592, 623, 590, 635,
	617, 435, 375, 0, 0, 378, 280, 304, 319, 0,
	608, 498, 226, 463, 289, 250, 0, 0, 210, 245,
	229, 258, 273, 276, 323, 388, 397, 426, 431, 295,
	270, 243, 456, 240, 481, 513, 514, 515, 517, 392,
	265, 430, 393, 0, 373, 570, 571, 315, 0, 522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 363, 266, 0, 0, 427,
	0, 203, 0, 483, 251, 374, 371, 577, 281, 272,
	268, 249, 316, 382, 425, 512, 419, 0, 367, 0,
	0, 493, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 247,
	324, 202, 410, 494, 285, 0, 0, 0, 0, 0,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 244, 0, 0, 0, 348, 357, 356,
	337, 338, 340, 342, 347, 354, 360, 0, 0, 601,
	0, 0, 0, 264, 320, 271, 263, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 399, 256, 0, 450, 0,
	0, 0, 619, 0, 0, 0, 0, 0, 0, 0,
	362, 0, 329, 197, 224, 0, 0, 409, 458, 470,
	0, 0, 0, 252, 0, 468, 423, 596, 232, 283,
	455, 429, 466, 437, 286, 0, 0, 467, 369, 579,
	447, 593, 620, 621, 262, 403, 606, 516, 614, 638,
	225, 259, 417, 501, 599, 490, 394, 575, 576, 328,
	489, 294, 201, 366, 626, 223, 476, 368, 241, 230,
	581, 603, 298, 288, 453, 633, 212, 511, 591, 238,
	480, 0, 0, 641, 246, 500, 214, 588, 499, 390,
	325, 326, 213, 0, 454, 267, 292, 0, 0, 257,
	412, 583, 584, 255, 642, 227, 613, 219, 0, 612,
	405, 578, 589, 391, 380, 218, 587, 389, 379, 333,
	352, 353, 279, 306, 444, 372, 445, 305, 307, 401,
	400, 402, 206, 600, 0, 207, 0, 495, 602, 643,
	449, 211, 233, 234, 236, 0, 278, 282, 290, 293,
	302, 303, 312, 364, 416, 443, 439, 448, 0, 573,
	594, 607, 618, 624, 625, 627, 628, 629, 630, 631,
	634, 632, 404, 310, 491, 332, 370, 0, 0, 422,
	469, 239, 598, 492, 199, 0, 0, 0, 0, 253,
	254, 0, 569, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	639, 502, 508, 503, 504, 505, 506, 507, 0, 509,
	0, 0, 0, 0, 0, 395, 0, 585, 586, 662,
	381, 482, 595, 334, 346, 349, 339, 358, 0, 359,
	335, 336, 341, 343, 344, 345, 350, 351, 355, 361,
	248, 209, 387, 396, 572, 311, 215, 216, 217, 518,
	519, 520, 521, 610, 611, 615, 204, 459, 460, 461,
	462, 291, 605, 308, 465, 464, 330, 331, 376, 446,
	534, 536, 547, 551, 553, 555, 561, 564, 535, 537,
	548, 552, 554, 556, 562, 565, 524, 526, 528, 530,
	543, 542, 539, 567, 568, 545, 550, 529, 541, 546,
	559, 566, 563, 523, 527, 531, 540, 558, 557, 538,
	549, 560, 544, 532, 525, 533, 0, 196, 220, 365,
	2046, 451, 287, 640, 609, 604, 205, 222, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 309, 317, 318, 321, 327, 377, 383,
	384, 385, 386, 406, 407, 408, 411, 414, 415, 418,
	420, 421, 424, 428, 432, 433, 434, 436, 438, 440,
	452, 457, 471, 472, 473, 474, 475, 478, 479, 484,
	485, 486, 487, 488, 496, 497, 510, 580, 582, 597,
	616, 622, 477, 300, 301, 441, 442, 313, 314, 636,
	637, 299, 592, 623, 590, 635, 617, 435, 375, 0,
	0, 378, 280, 304, 319, 0, 608, 498, 226, 463,
	289, 250, 0, 0, 210, 245, 229, 258, 273, 276,
	323, 388, 397, 426, 431, 295, 270, 243, 456, 240,
	481, 513, 514, 515, 517, 392, 265, 430, 393, 0,
	373, 570, 571, 315, 0, 522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 363, 266, 0, 0, 427, 0, 203, 0, 483,
	251, 374, 371, 577, 281, 272, 268, 249, 316, 382,
	425, 512, 419, 0, 367, 0, 0, 493, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 247, 324, 202, 410, 494,
	285, 0, 0, 0, 0, 2037, 712, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 244,
	0, 0, 0, 348, 357, 356, 337, 338, 340, 342,
	347, 354, 360, 0, 0, 601, 0, 0, 0, 264,
	320, 271, 263, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 399, 256, 0, 450, 0, 0, 0, 619, 0,
	0, 0, 0, 0, 0, 0, 362, 0, 329, 197,
	224, 0, 0, 409, 458, 470, 0, 0, 0, 252,
	0, 468, 423, 596, 232, 283, 455, 429, 466, 437,
	286, 0, 0, 467, 369, 579, 447, 593, 620, 621,
	262, 403, 606, 516, 614, 638, 225, 259, 417, 501,
	599, 490, 394, 575, 576, 328, 489, 294, 201, 366,
	626, 223, 476, 368, 241, 230, 581, 603, 298, 288,
	453, 633, 212, 511, 591, 238, 480, 0, 0, 641,
	246, 500, 214, 588, 499, 390, 325, 326, 213, 0,
	454, 267, 292, 0, 0, 257, 412, 583, 584, 255,
	642, 227, 613, 219, 0, 612, 405, 578, 589, 391,
	380, 218, 587, 389, 379, 333, 352, 353, 279, 306,
	444, 372, 445, 305, 307, 401, 400, 402, 206, 600,
	0, 207, 0, 495, 602, 643, 449, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 302, 303, 312, 364,
	416, 443, 439, 448, 0, 573, 594, 607, 618, 624,
	625, 627, 628, 629, 630, 631, 634, 632, 404, 310,
	491, 332, 370, 0, 0, 422, 469, 239, 598, 492,
	199, 0, 0, 0, 0, 253, 254, 0, 569, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 639, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 0, 0, 0, 0,
	0, 395, 0, 585, 586, 662, 381, 482, 595, 334,
	346, 349, 339, 358, 0, 359, 335, 336, 341, 343,
	344, 345, 350, 351, 355, 361, 248, 209, 387, 396,
	572, 311, 215, 216, 217, 518, 519, 520, 521, 610,
	611, 615, 204, 459, 460, 461, 462, 291, 605, 308,
	465, 464, 330, 331, 376, 446, 534, 536, 547, 551,
	553, 555, 561, 564, 535, 537, 548, 552, 554, 556,
	562, 565, 524, 526, 528, 530, 543, 542, 539, 567,
	568, 545, 550, 529, 541, 546, 559, 566, 563, 523,
	527, 531, 540, 558, 557, 538, 549, 560, 544, 532,
	525, 533, 0, 196, 220, 365, 0, 451, 287, 640,
	609, 604, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 309,
	317, 318, 321, 327, 377, 383, 384, 385, 386, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 616, 622, 477, 300,
	301, 441, 442, 313, 314, 636, 637, 299, 592, 623,
	590, 635, 617, 435, 375, 0, 0, 378, 280, 304,
	319, 0, 608, 498, 226, 463, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 323, 388, 397, 426,
	431, 295, 270, 243, 456, 240, 481, 513, 514, 515,
	517, 392, 265, 430, 393, 0, 373, 570, 571, 315,
	0, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 1899, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 0,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 0, 0,
	0, 0, 712, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 348,
	357, 356, 337, 338, 340, 342, 347, 354, 360, 0,
	0, 601, 0, 0, 0, 264, 320, 271, 263, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 399, 256, 0,
	450, 0, 0, 0, 619, 0, 0, 0, 0, 0,
	0, 0, 362, 0, 329, 197, 224, 0, 0, 409,
	458, 470, 0, 0, 0, 252, 0, 468, 423, 596,
	232, 283, 455, 429, 466, 437, 286, 0, 0, 467,
	369, 579, 447, 593, 620, 621, 262, 403, 606, 516,
	614, 638, 225, 259, 417, 501, 599, 490, 394, 575,
	576, 328, 489, 294, 201, 366, 626, 223, 476, 368,
	241, 230, 581, 603, 298, 288, 453, 633, 212, 511,
	591, 238, 480, 0, 0, 641, 246, 500, 214, 588,
	499, 390, 325, 326, 213, 0, 454, 267, 292, 0,
	0, 257, 412, 583, 584, 255, 642, 227, 613, 219,
	0, 612, 405, 578, 589, 391, 380, 218, 587, 389,
	379, 333, 352, 353, 279, 306, 444, 372, 445, 305,
	307, 401, 400, 402, 206, 600, 0, 207, 0, 495,
	602, 643, 449, 211, 233, 234, 236, 0, 278, 282,
	290, 293, 302, 303, 312, 364, 416, 443, 439, 448,
	0, 573, 594, 607, 618, 624, 625, 627, 628, 629,
	630, 631, 634, 632, 404, 310, 491, 332, 370, 0,
	0, 422, 469, 239, 598, 492, 199, 0, 0, 0,
	0, 253, 254, 0, 569, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 639, 502, 508, 503, 504, 505, 506, 507,
	0, 509, 0, 0, 0, 0, 0, 395, 0, 585,
	586, 662, 381, 482, 595, 334, 346, 349, 339, 358,
	0, 359, 335, 336, 341, 343, 344, 345, 350, 351,
	355, 361, 248, 209, 387, 396, 572, 311, 215, 216,
	217, 518, 519, 520, 521, 610, 611, 615, 204, 459,
	460, 461, 462, 291, 605, 308, 465, 464, 330, 331,
	376, 446, 534, 536, 547, 551, 553, 555, 561, 564,
	535, 537, 548, 552, 554, 556, 562, 565, 524, 526,
	528, 530, 543, 542, 539, 567, 568, 545, 550, 529,
	541, 546, 559, 566, 563, 523, 527, 531, 540, 558,
	557, 538, 549, 560, 544, 532, 525, 533, 0, 196,
	220, 365, 0, 451, 287, 640, 609, 604, 205, 222,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 208, 221, 231, 235, 242,
	260, 275, 277, 284, 297, 309, 317, 318, 321, 327,
	377, 383, 384, 385, 386, 406, 407, 408, 411, 414,
	415, 418, 420, 421, 424, 428, 432, 433, 434, 436,
	438, 440, 452, 457, 471, 472, 473, 474, 475, 478,
	479, 484, 485, 486, 487, 488, 496, 497, 510, 580,
	582, 597, 616, 622, 477, 300, 301, 441, 442, 313,
	314, 636, 637, 299, 592, 623, 590, 635, 617, 435,
	375, 0, 0, 378, 280, 304, 319, 0, 608, 498,
	226, 463, 289, 250, 0, 0, 210, 245, 229, 258,
	273, 276, 323, 388, 397, 426, 431, 295, 270, 243,
	456, 240, 481, 513, 514, 515, 517, 392, 265, 430,
	393, 0, 373, 570, 571, 315, 0, 522, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 1897, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 363, 266, 0, 0, 427, 0, 203,
	0, 483, 251, 374, 371, 577, 281, 272, 268, 249,
	316, 382, 425, 512, 419, 0, 367, 0, 0, 493,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 247, 324, 202,
	410, 494, 285, 0, 0, 0, 0, 0, 712, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 348, 357, 356, 337, 338,
	340, 342, 347, 354, 360, 0, 0, 601, 0, 0,
	0, 264, 320, 271, 263, 574, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 399, 256, 0, 450, 0, 0, 0,
	619, 0, 0, 0, 0, 0, 0, 0, 362, 0,
	329, 197, 224, 0, 0, 409, 458, 470, 0, 0,
	0, 252, 0, 468, 423, 596, 232, 283, 455, 429,
	466, 437, 286, 0, 0, 467, 369, 579, 447, 593,
	620, 621, 262, 403, 606, 516, 614, 638, 225, 259,
	417, 501, 599, 490, 394, 575, 576, 328, 489, 294,
	201, 366, 626, 223, 476, 368, 241, 230, 581, 603,
	298, 288, 453, 633, 212, 511, 591, 238, 480, 0,
	0, 641, 246, 500, 214, 588, 499, 390, 325, 326,
	213, 0, 454, 267, 292, 0, 0, 257, 412, 583,
	584, 255, 642, 227, 613, 219, 0, 612, 405, 578,
	589, 391, 380, 218, 587, 389, 379, 333, 352, 353,
	279, 306, 444, 372, 445, 305, 307, 401, 400, 402,
	206, 600, 0, 207, 0, 495, 602, 643, 449, 211,
	233, 234, 236, 0, 278, 282, 290, 293, 302, 303,
	312, 364, 416, 443, 439, 448, 0, 573, 594, 607,
	618, 624, 625, 627, 628, 629, 630, 631, 634, 632,
	404, 310, 491, 332, 370, 0, 0, 422, 469, 239,
	598, 492, 199, 0, 0, 0, 0, 253, 254, 0,
	569, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 639, 502,
	508, 503, 504, 505, 506, 507, 0, 509, 0, 0,
	0, 0, 0, 395, 0, 585, 586, 662, 381, 482,
	595, 334, 346, 349, 339, 358, 0, 359, 335, 336,
	341, 343, 344, 345, 350, 351, 355, 361, 248, 209,
	387, 396, 572, 311, 215, 216, 217, 518, 519, 520,
	521, 610, 611, 615, 204, 459, 460, 461, 462, 291,
	605, 308, 465, 464, 330, 331, 376, 446, 534, 536,
	547, 551, 553, 555, 561, 564, 535, 537, 548, 552,
	554, 556, 562, 565, 524, 526, 528, 530, 543, 542,
	539, 567, 568, 545, 550, 529, 541, 546, 559, 566,
	563, 523, 527, 531, 540, 558, 557, 538, 549, 560,
	544, 532, 525, 533, 0, 196, 220, 365, 0, 451,
	287, 640, 609, 604, 205, 222, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 309, 317, 318, 321, 327, 377, 383, 384, 385,
	386, 406, 407, 408, 411, 414, 415, 418, 420, 421,
	424, 428, 432, 433, 434, 436, 438, 440, 452, 457,
	471, 472, 473, 474, 475, 478, 479, 484, 485, 486,
	487, 488, 496, 497, 510, 580, 582, 597, 616, 622,
	477, 300, 301, 441, 442, 313, 314, 636, 637, 299,
	592, 623, 590, 635, 617, 435, 375, 0, 0, 378,
	280, 304, 319, 0, 608, 498, 226, 463, 289, 250,
	0, 0, 210, 245, 229, 258, 273, 276, 323, 388,
	397, 426, 431, 295, 270, 243, 456, 240, 481, 513,
	514, 515, 517, 392, 265, 430, 393, 0, 373, 570,
	571, 315, 0, 522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 1895, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 363,
	266, 0, 0, 427, 0, 203, 0, 483, 251, 374,
	371, 577, 281, 272, 268, 249, 316, 382, 425, 512,
	419, 0, 367, 0, 0, 493, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 247, 324, 202, 410, 494, 285, 0,
	0, 0, 0, 0, 712, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 348, 357, 356, 337, 338, 340, 342, 347, 354,
	360, 0, 0, 601, 0, 0, 0, 264, 320, 271,
	263, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 399,
	256, 0, 450, 0, 0, 0, 619, 0, 0, 0,
	0, 0, 0, 0, 362, 0, 329, 197, 224, 0,
	0, 409, 458, 470, 0, 0, 0, 252, 0, 468,
	423, 596, 232, 283, 455, 429, 466, 437, 286, 0,
	0, 467, 369, 579, 447, 593, 620, 621, 262, 403,
	606, 516, 614, 638, 225, 259, 417, 501, 599, 490,
	394, 575, 576, 328, 489, 294, 201, 366, 626, 223,
	476, 368, 241, 230, 581, 603, 298, 288, 453, 633,
	212, 511, 591, 238, 480, 0, 0, 641, 246, 500,
	214, 588, 499, 390, 325, 326, 213, 0, 454, 267,
	292, 0, 0, 257, 412, 583, 584, 255, 642, 227,
	613, 219, 0, 612, 405, 578, 589, 391, 380, 218,
	587, 389, 379, 333, 352, 353, 279, 306, 444, 372,
	445, 305, 307, 401, 400, 402, 206, 600, 0, 207,
	0, 495, 602, 643, 449, 211, 233, 234, 236, 0,
	278, 282, 290, 293, 302, 303, 312, 364, 416, 443,
	439, 448, 0, 573, 594, 607, 618, 624, 625, 627,
	628, 629, 630, 631, 634, 632, 404, 310, 491, 332,
	370, 0, 0, 422, 469, 239, 598, 492, 199, 0,
	0, 0, 0, 253, 254, 0, 569, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 639, 502, 508, 503, 504, 505,
	506, 507, 0, 509, 0, 0, 0, 0, 0, 395,
	0, 585, 586, 662, 381, 482, 595, 334, 346, 349,
	339, 358, 0, 359, 335, 336, 341, 343, 344, 345,
	350, 351, 355, 361, 248, 209, 387, 396, 572, 311,
	215, 216, 217, 518, 519, 520, 521, 610, 611, 615,
	204, 459, 460, 461, 462, 291, 605, 308, 465, 464,
	330, 331, 376, 446, 534, 536, 547, 551, 553, 555,
	561, 564, 535, 537, 548, 552, 554, 556, 562, 565,
	524, 526, 528, 530, 543, 542, 539, 567, 568, 545,
	550, 529, 541, 546, 559, 566, 563, 523, 527, 531,
	540, 558, 557, 538, 549, 560, 544, 532, 525, 533,
	0, 196, 220, 365, 0, 451, 287, 640, 609, 604,
	205, 222, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 309, 317, 318,
	321, 327, 377, 383, 384, 385, 386, 406, 407, 408,
	411, 414, 415, 418, 420, 421, 424, 428, 432, 433,
	434, 436, 438, 440, 452, 457, 471, 472, 473, 474,
	475, 478, 479, 484, 485, 486, 487, 488, 496, 497,
	510, 580, 582, 597, 616, 622, 477, 300, 301, 441,
	442, 313, 314, 636, 637, 299, 592, 623, 590, 635,
	617, 435, 375, 0, 0, 378, 280, 304, 319, 0,
	608, 498, 226, 463, 289, 250, 0, 0, 210, 245,
	229, 258, 273, 276, 323, 388, 397, 426, 431, 295,
	270, 243, 456, 240, 481, 513, 514, 515, 517, 392,
	265, 430, 393, 0, 373, 570, 571, 315, 0, 522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 1893, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 363, 266, 0, 0, 427,
	0, 203, 0, 483, 251, 374, 371, 577, 281, 272,
	268, 249, 316, 382, 425, 512, 419, 0, 367, 0,
	0, 493, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 247,
	324, 202, 410, 494, 285, 0, 0, 0, 0, 0,
	712, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 244, 0, 0, 0, 348, 357, 356,
	337, 338, 340, 342, 347, 354, 360, 0, 0, 601,
	0, 0, 0, 264, 320, 271, 263, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 399, 256, 0, 450, 0,
	0, 0, 619, 0, 0, 0, 0, 0, 0, 0,
	362, 0, 329, 197, 224, 0, 0, 409, 458, 470,
	0, 0, 0, 252, 0, 468, 423, 596, 232, 283,
	455, 429, 466, 437, 286, 0, 0, 467, 369, 579,
	447, 593, 620, 621, 262, 403, 606, 516, 614, 638,
	225, 259, 417, 501, 599, 490, 394, 575, 576, 328,
	489, 294, 201, 366, 626, 223, 476, 368, 241, 230,
	581, 603, 298, 288, 453, 633, 212, 511, 591, 238,
	480, 0, 0, 641, 246, 500, 214, 588, 499, 390,
	325, 326, 213, 0, 454, 267, 292, 0, 0, 257,
	412, 583, 584, 255, 642, 227, 613, 219, 0, 612,
	405, 578, 589, 391, 380, 218, 587, 389, 379, 333,
	352, 353, 279, 306, 444, 372, 445, 305, 307, 401,
	400, 402, 206, 600, 0, 207, 0, 495, 602, 643,
	449, 211, 233, 234, 236, 0, 278, 282, 290, 293,
	302, 303, 312, 364, 416, 443, 439, 448, 0, 573,
	594, 607, 618, 624, 625, 627, 628, 629, 630, 631,
	634, 632, 404, 310, 491, 332, 370, 0, 0, 422,
	469, 239, 598, 492, 199, 0, 0, 0, 0, 253,
	254, 0, 569, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	639, 502, 508, 503, 504, 505, 506, 507, 0, 509,
	0, 0, 0, 0, 0, 395, 0, 585, 586, 662,
	381, 482, 595, 334, 346, 349, 339, 358, 0, 359,
	335, 336, 341, 343, 344, 345, 350, 351, 355, 361,
	248, 209, 387, 396, 572, 311, 215, 216, 217, 518,
	519, 520, 521, 610, 611, 615, 204, 459, 460, 461,
	462, 291, 605, 308, 465, 464, 330, 331, 376, 446,
	534, 536, 547, 551, 553, 555, 561, 564, 535, 537,
	548, 552, 554, 556, 562, 565, 524, 526, 528, 530,
	543, 542, 539, 567, 568, 545, 550, 529, 541, 546,
	559, 566, 563, 523, 527, 531, 540, 558, 557, 538,
	549, 560, 544, 532, 525, 533, 0, 196, 220, 365,
	0, 451, 287, 640, 609, 604, 205, 222, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 309, 317, 318, 321, 327, 377, 383,
	384, 385, 386, 406, 407, 408, 411, 414, 415, 418,
	420, 421, 424, 428, 432, 433, 434, 436, 438, 440,
	452, 457, 471, 472, 473, 474, 475, 478, 479, 484,
	485, 486, 487, 488, 496, 497, 510, 580, 582, 597,
	616, 622, 477, 300, 301, 441, 442, 313, 314, 636,
	637, 299, 592, 623, 590, 635, 617, 435, 375, 0,
	0, 378, 280, 304, 319, 0, 608, 498, 226, 463,
	289, 250, 0, 0, 210, 245, 229, 258, 273, 276,
	323, 388, 397, 426, 431, 295, 270, 243, 456, 240,
	481, 513, 514, 515, 517, 392, 265, 430, 393, 0,
	373, 570, 571, 315, 0, 522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 1891,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 363, 266, 0, 0, 427, 0, 203, 0, 483,
	251, 374, 371, 577, 281, 272, 268, 249, 316, 382,
	425, 512, 419, 0, 367, 0, 0, 493, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 247, 324, 202, 410, 494,
	285, 0, 0, 0, 0, 0, 712, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 244,
	0, 0, 0, 348, 357, 356, 337, 338, 340, 342,
	347, 354, 360, 0, 0, 601, 0, 0, 0, 264,
	320, 271, 263, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 399, 256, 0, 450, 0, 0, 0, 619, 0,
	0, 0, 0, 0, 0, 0, 362, 0, 329, 197,
	224, 0, 0, 409, 458, 470, 0, 0, 0, 252,
	0, 468, 423, 596, 232, 283, 455, 429, 466, 437,
	286, 0, 0, 467, 369, 579, 447, 593, 620, 621,
	262, 403, 606, 516, 614, 638, 225, 259, 417, 501,
	599, 490, 394, 575, 576, 328, 489, 294, 201, 366,
	626, 223, 476, 368, 241, 230, 581, 603, 298, 288,
	453, 633, 212, 511, 591, 238, 480, 0, 0, 641,
	246, 500, 214, 588, 499, 390, 325, 326, 213, 0,
	454, 267, 292, 0, 0, 257, 412, 583, 584, 255,
	642, 227, 613, 219, 0, 612, 405, 578, 589, 391,
	380, 218, 587, 389, 379, 333, 352, 353, 279, 306,
	444, 372, 445, 305, 307, 401, 400, 402, 206, 600,
	0, 207, 0, 495, 602, 643, 449, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 302, 303, 312, 364,
	416, 443, 439, 448, 0, 573, 594, 607, 618, 624,
	625, 627, 628, 629, 630, 631, 634, 632, 404, 310,
	491, 332, 370, 0, 0, 422, 469, 239, 598, 492,
	199, 0, 0, 0, 0, 253, 254, 0, 569, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 639, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 0, 0, 0, 0,
	0, 395, 0, 585, 586, 662, 381, 482, 595, 334,
	346, 349, 339, 358, 0, 359, 335, 336, 341, 343,
	344, 345, 350, 351, 355, 361, 248, 209, 387, 396,
	572, 311, 215, 216, 217, 518, 519, 520, 521, 610,
	611, 615, 204, 459, 460, 461, 462, 291, 605, 308,
	465, 464, 330, 331, 376, 446, 534, 536, 547, 551,
	553, 555, 561, 564, 535, 537, 548, 552, 554, 556,
	562, 565, 524, 526, 528, 530, 543, 542, 539, 567,
	568, 545, 550, 529, 541, 546, 559, 566, 563, 523,
	527, 531, 540, 558, 557, 538, 549, 560, 544, 532,
	525, 533, 0, 196, 220, 365, 0, 451, 287, 640,
	609, 604, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 309,
	317, 318, 321, 327, 377, 383, 384, 385, 386, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 616, 622, 477, 300,
	301, 441, 442, 313, 314, 636, 637, 299, 592, 623,
	590, 635, 617, 435, 375, 0, 0, 378, 280, 304,
	319, 0, 608, 498, 226, 463, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 323, 388, 397, 426,
	431, 295, 270, 243, 456, 240, 481, 513, 514, 515,
	517, 392, 265, 430, 393, 0, 373, 570, 571, 315,
	0, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 1887, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 0,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 0, 0,
	0, 0, 712, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 348,
	357, 356, 337, 338, 340, 342, 347, 354, 360, 0,
	0, 601, 0, 0, 0, 264, 320, 271, 263, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 399, 256, 0,
	450, 0, 0, 0, 619, 0, 0, 0, 0, 0,
	0, 0, 362, 0, 329, 197, 224, 0, 0, 409,
	458, 470, 0, 0, 0, 252, 0, 468, 423, 596,
	232, 283, 455, 429, 466, 437, 286, 0, 0, 467,
	369, 579, 447, 593, 620, 621, 262, 403, 606, 516,
	614, 638, 225, 259, 417, 501, 599, 490, 394, 575,
	576, 328, 489, 294, 201, 366, 626, 223, 476, 368,
	241, 230, 581, 603, 298, 288, 453, 633, 212, 511,
	591, 238, 480, 0, 0, 641, 246, 500, 214, 588,
	499, 390, 325, 326, 213, 0, 454, 267, 292, 0,
	0, 257, 412, 583, 584, 255, 642, 227, 613, 219,
	0, 612, 405, 578, 589, 391, 380, 218, 587, 389,
	379, 333, 352, 353, 279, 306, 444, 372, 445, 305,
	307, 401, 400, 402, 206, 600, 0, 207, 0, 495,
	602, 643, 449, 211, 233, 234, 236, 0, 278, 282,
	290, 293, 302, 303, 312, 364, 416, 443, 439, 448,
	0, 573, 594, 607, 618, 624, 625, 627, 628, 629,
	630, 631, 634, 632, 404, 310, 491, 332, 370, 0,
	0, 422, 469, 239, 598, 492, 199, 0, 0, 0,
	0, 253, 254, 0, 569, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 639, 502, 508, 503, 504, 505, 506, 507,
	0, 509, 0, 0, 0, 0, 0, 395, 0, 585,
	586, 662, 381, 482, 595, 334, 346, 349, 339, 358,
	0, 359, 335, 336, 341, 343, 344, 345, 350, 351,
	355, 361, 248, 209, 387, 396, 572, 311, 215, 216,
	217, 518, 519, 520, 521, 610, 611, 615, 204, 459,
	460, 461, 462, 291, 605, 308, 465, 464, 330, 331,
	376, 446, 534, 536, 547, 551, 553, 555, 561, 564,
	535, 537, 548, 552, 554, 556, 562, 565, 524, 526,
	528, 530, 543, 542, 539, 567, 568, 545, 550, 529,
	541, 546, 559, 566, 563, 523, 527, 531, 540, 558,
	557, 538, 549, 560, 544, 532, 525, 533, 0, 196,
	220, 365, 0, 451, 287, 640, 609, 604, 205, 222,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 208, 221, 231, 235, 242,
	260, 275, 277, 284, 297, 309, 317, 318, 321, 327,
	377, 383, 384, 385, 386, 406, 407, 408, 411, 414,
	415, 418, 420, 421, 424, 428, 432, 433, 434, 436,
	438, 440, 452, 457, 471, 472, 473, 474, 475, 478,
	479, 484, 485, 486, 487, 488, 496, 497, 510, 580,
	582, 597, 616, 622, 477, 300, 301, 441, 442, 313,
	314, 636, 637, 299, 592, 623, 590, 635, 617, 435,
	375, 0, 0, 378, 280, 304, 319, 0, 608, 498,
	226, 463, 289, 250, 0, 0, 210, 245, 229, 258,
	273, 276, 323, 388, 397, 426, 431, 295, 270, 243,
	456, 240, 481, 513, 514, 515, 517, 392, 265, 430,
	393, 0, 373, 570, 571, 315, 0, 522, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 1885, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 363, 266, 0, 0, 427, 0, 203,
	0, 483, 251, 374, 371, 577, 281, 272, 268, 249,
	316, 382, 425, 512, 419, 0, 367, 0, 0, 493,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 247, 324, 202,
	410, 494, 285, 0, 0, 0, 0, 0, 712, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 348, 357, 356, 337, 338,
	340, 342, 347, 354, 360, 0, 0, 601, 0, 0,
	0, 264, 320, 271, 263, 574, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 399, 256, 0, 450, 0, 0, 0,
	619, 0, 0, 0, 0, 0, 0, 0, 362, 0,
	329, 197, 224, 0, 0, 409, 458, 470, 0, 0,
	0, 252, 0, 468, 423, 596, 232, 283, 455, 429,
	466, 437, 286, 0, 0, 467, 369, 579, 447, 593,
	620, 621, 262, 403, 606, 516, 614, 638, 225, 259,
	417, 501, 599, 490, 394, 575, 576, 328, 489, 294,
	201, 366, 626, 223, 476, 368, 241, 230, 581, 603,
	298, 288, 453, 633, 212, 511, 591, 238, 480, 0,
	0, 641, 246, 500, 214, 588, 499, 390, 325, 326,
	213, 0, 454, 267, 292, 0, 0, 257, 412, 583,
	584, 255, 642, 227, 613, 219, 0, 612, 405, 578,
	589, 391, 380, 218, 587, 389, 379, 333, 352, 353,
	279, 306, 444, 372, 445, 305, 307, 401, 400, 402,
	206, 600, 0, 207, 0, 495, 602, 643, 449, 211,
	233, 234, 236, 0, 278, 282, 290, 293, 302, 303,
	312, 364, 416, 443, 439, 448, 0, 573, 594, 607,
	618, 624, 625, 627, 628, 629, 630, 631, 634, 632,
	404, 310, 491, 332, 370, 0, 0, 422, 469, 239,
	598, 492, 199, 0, 0, 0, 0, 253, 254, 0,
	569, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 639, 502,
	508, 503, 504, 505, 506, 507, 0, 509, 0, 0,
	0, 0, 0, 395, 0, 585, 586, 662, 381, 482,
	595, 334, 346, 349, 339, 358, 0, 359, 335, 336,
	341, 343, 344, 345, 350, 351, 355, 361, 248, 209,
	387, 396, 572, 311, 215, 216, 217, 518, 519, 520,
	521, 610, 611, 615, 204, 459, 460, 461, 462, 291,
	605, 308, 465, 464, 330, 331, 376, 446, 534, 536,
	547, 551, 553, 555, 561, 564, 535, 537, 548, 552,
	554, 556, 562, 565, 524, 526, 528, 530, 543, 542,
	539, 567, 568, 545, 550, 529, 541, 546, 559, 566,
	563, 523, 527, 531, 540, 558, 557, 538, 549, 560,
	544, 532, 525, 533, 0, 196, 220, 365, 0, 451,
	287, 640, 609, 604, 205, 222, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 309, 317, 318, 321, 327, 377, 383, 384, 385,
	386, 406, 407, 408, 411, 414, 415, 418, 420, 421,
	424, 428, 432, 433, 434, 436, 438, 440, 452, 457,
	471, 472, 473, 474, 475, 478, 479, 484, 485, 486,
	487, 488, 496, 497, 510, 580, 582, 597, 616, 622,
	477, 300, 301, 441, 442, 313, 314, 636, 637, 299,
	592, 623, 590, 635, 617, 435, 375, 0, 0, 378,
	280, 304, 319, 0, 608, 498, 226, 463, 289, 250,
	0, 0, 210, 245, 229, 258, 273, 276, 323, 388,
	397, 426, 431, 295, 270, 243, 456, 240, 481, 513,
	514, 515, 517, 392, 265, 430, 393, 0, 373, 570,
	571, 315, 0, 522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 1883, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 363,
	266, 0, 0, 427, 0, 203, 0, 483, 251, 374,
	371, 577, 281, 272, 268, 249, 316, 382, 425, 512,
	419, 0, 367, 0, 0, 493, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 247, 324, 202, 410, 494, 285, 0,
	0, 0, 0, 0, 712, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 348, 357, 356, 337, 338, 340, 342, 347, 354,
	360, 0, 0, 601, 0, 0, 0, 264, 320, 271,
	263, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 399,
	256, 0, 450, 0, 0, 0, 619, 0, 0, 0,
	0, 0, 0, 0, 362, 0, 329, 197, 224, 0,
	0, 409, 458, 470, 0, 0, 0, 252, 0, 468,
	423, 596, 232, 283, 455, 429, 466, 437, 286, 0,
	0, 467, 369, 579, 447, 593, 620, 621, 262, 403,
	606, 516, 614, 638, 225, 259, 417, 501, 599, 490,
	394, 575, 576, 328, 489, 294, 201, 366, 626, 223,
	476, 368, 241, 230, 581, 603, 298, 288, 453, 633,
	212, 511, 591, 238, 480, 0, 0, 641, 246, 500,
	214, 588, 499, 390, 325, 326, 213, 0, 454, 267,
	292, 0, 0, 257, 412, 583, 584, 255, 642, 227,
	613, 219, 0, 612, 405, 578, 589, 391, 380, 218,
	587, 389, 379, 333, 352, 353, 279, 306, 444, 372,
	445, 305, 307, 401, 400, 402, 206, 600, 0, 207,
	0, 495, 602, 643, 449, 211, 233, 234, 236, 0,
	278, 282, 290, 293, 302, 303, 312, 364, 416, 443,
	439, 448, 0, 573, 594, 607, 618, 624, 625, 627,
	628, 629, 630, 631, 634, 632, 404, 310, 491, 332,
	370, 0, 0, 422, 469, 239, 598, 492, 199, 0,
	0, 0, 0, 253, 254, 0, 569, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 639, 502, 508, 503, 504, 505,
	506, 507, 0, 509, 0, 0, 0, 0, 0, 395,
	0, 585, 586, 662, 381, 482, 595, 334, 346, 349,
	339, 358, 0, 359, 335, 336, 341, 343, 344, 345,
	350, 351, 355, 361, 248, 209, 387, 396, 572, 311,
	215, 216, 217, 518, 519, 520, 521, 610, 611, 615,
	204, 459, 460, 461, 462, 291, 605, 308, 465, 464,
	330, 331, 376, 446, 534, 536, 547, 551, 553, 555,
	561, 564, 535, 537, 548, 552, 554, 556, 562, 565,
	524, 526, 528, 530, 543, 542, 539, 567, 568, 545,
	550, 529, 541, 546, 559, 566, 563, 523, 527, 531,
	540, 558, 557, 538, 549, 560, 544, 532, 525, 533,
	0, 196, 220, 365, 0, 451, 287, 640, 609, 604,
	205, 222, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 309, 317, 318,
	321, 327, 377, 383, 384, 385, 386, 406, 407, 408,
	411, 414, 415, 418, 420, 421, 424, 428, 432, 433,
	434, 436, 438, 440, 452, 457, 471, 472, 473, 474,
	475, 478, 479, 484, 485, 486, 487, 488, 496, 497,
	510, 580, 582, 597, 616, 622, 477, 300, 301, 441,
	442, 313, 314, 636, 637, 299, 592, 623, 590, 635,
	617, 435, 375, 0, 0, 378, 280, 304, 319, 0,
	608, 498, 226, 463, 289, 250, 0, 0, 210, 245,
	229, 258, 273, 276, 323, 388, 397, 426, 431, 295,
	270, 243, 456, 240, 481, 513, 514, 515, 517, 392,
	265, 430, 393, 0, 373, 570, 571, 315, 0, 522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 363, 266, 0, 0, 427,
	0, 203, 0, 483, 251, 374, 371, 577, 281, 272,
	268, 249, 316, 382, 425, 512, 419, 0, 367, 0,
	0, 493, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 247,
	324, 202, 410, 494, 285, 0, 1858, 0, 0, 0,
	712, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 244, 0, 0, 0, 348, 357, 356,
	337, 338, 340, 342, 347, 354, 360, 0, 0, 601,
	0, 0, 0, 264, 320, 271, 263, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 399, 256, 0, 450, 0,
	0, 0, 619, 0, 0, 0, 0, 0, 0, 0,
	362, 0, 329, 197, 224, 0, 0, 409, 458, 470,
	0, 0, 0, 252, 0, 468, 423, 596, 232, 283,
	455, 429, 466, 437, 286, 0, 0, 467, 369, 579,
	447, 593, 620, 621, 262, 403, 606, 516, 614, 638,
	225, 259, 417, 501, 599, 490, 394, 575, 576, 328,
	489, 294, 201, 366, 626, 223, 476, 368, 241, 230,
	581, 603, 298, 288, 453, 633, 212, 511, 591, 238,
	480, 0, 0, 641, 246, 500, 214, 588, 499, 390,
	325, 326, 213, 0, 454, 267, 292, 0, 0, 257,
	412, 583, 584, 255, 642, 227, 613, 219, 0, 612,
	405, 578, 589, 391, 380, 218, 587, 389, 379, 333,
	352, 353, 279, 306, 444, 372, 445, 305, 307, 401,
	400, 402, 206, 600, 0, 207, 0, 495, 602, 643,
	449, 211, 233, 234, 236, 0, 278, 282, 290, 293,
	302, 303, 312, 364, 416, 443, 439, 448, 0, 573,
	594, 607, 618, 624, 625, 627, 628, 629, 630, 631,
	634, 632, 404, 310, 491, 332, 370, 0, 0, 422,
	469, 239, 598, 492, 199, 0, 0, 0, 0, 253,
	254, 0, 569, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	639, 502, 508, 503, 504, 505, 506, 507, 0, 509,
	0, 0, 0, 0, 0, 395, 0, 585, 586, 662,
	381, 482, 595, 334, 346, 349, 339, 358, 0, 359,
	335, 336, 341, 343, 344, 345, 350, 351, 355, 361,
	248, 209, 387, 396, 572, 311, 215, 216, 217, 518,
	519, 520, 521, 610, 611, 615, 204, 459, 460, 461,
	462, 291, 605, 308, 465, 464, 330, 331, 376, 446,
	534, 536, 547, 551, 553, 555, 561, 564, 535, 537,
	548, 552, 554, 556, 562, 565, 524, 526, 528, 530,
	543, 542, 539, 567, 568, 545, 550, 529, 541, 546,
	559, 566, 563, 523, 527, 531, 540, 558, 557, 538,
	549, 560, 544, 532, 525, 533, 0, 196, 220, 365,
	0, 451, 287, 640, 609, 604, 205, 222, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 309, 317, 318, 321, 327, 377, 383,
	384, 385, 386, 406, 407, 408, 411, 414, 415, 418,
	420, 421, 424, 428, 432, 433, 434, 436, 438, 440,
	452, 457, 471, 472, 473, 474, 475, 478, 479, 484,
	485, 486, 487, 488, 496, 497, 510, 580, 582, 597,
	616, 622, 477, 300, 301, 441, 442, 313, 314, 636,
	637, 299, 592, 623, 590, 635, 617, 435, 375, 0,
	0, 378, 280, 304, 319, 0, 608, 498, 226, 463,
	289, 250, 0, 0, 210, 245, 229, 258, 273, 276,
	323, 388, 397, 426, 431, 295, 270, 243, 456, 240,
	481, 513, 514, 515, 517, 392, 265, 430, 393, 0,
	373, 570, 571, 315, 0, 522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 0, 1757, 269, 0, 0, 0,
	0, 363, 266, 0, 0, 427, 0, 203, 0, 483,
	251, 374, 371, 577, 281, 272, 268, 249, 316, 382,
	425, 512, 419, 0, 367, 0, 0, 493, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 247, 324, 202, 410, 494,
	285, 0, 0, 0, 0, 0, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 244,
	0, 0, 0, 348, 357, 356, 337, 338, 340, 342,
	347, 354, 360, 0, 0, 601, 0, 0, 0, 264,
	320, 271, 263, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 399, 256, 0, 450, 0, 0, 0, 619, 0,
	0, 0, 0, 0, 0, 0, 362, 0, 329, 197,
	224, 0, 0, 409, 458, 470, 0, 0, 0, 252,
	0, 468, 423, 596, 232, 283, 455, 429, 466, 437,
	286, 0, 0, 467, 369, 579, 447, 593, 620, 621,
	262, 403, 606, 516, 614, 638, 225, 259, 417, 501,
	599, 490, 394, 575, 576, 328, 489, 294, 201, 366,
	626, 223, 476, 368, 241, 230, 581, 603, 298, 288,
	453, 633, 212, 511, 591, 238, 480, 0, 0, 641,
	246, 500, 214, 588, 499, 390, 325, 326, 213, 0,
	454, 267, 292, 0, 0, 257, 412, 583, 584, 255,
	642, 227, 613, 219, 0, 612, 405, 578, 589, 391,
	380, 218, 587, 389, 379, 333, 352, 353, 279, 306,
	444, 372, 445, 305, 307, 401, 400, 402, 206, 600,
	0, 207, 0, 495, 602, 643, 449, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 302, 303, 312, 364,
	416, 443, 439, 448, 0, 573, 594, 607, 618, 624,
	625, 627, 628, 629, 630, 631, 634, 632, 404, 310,
	491, 332, 370, 0, 0, 422, 469, 239, 598, 492,
	199, 0, 0, 0, 0, 253, 254, 0, 569, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 639, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 0, 0, 0, 0,
	0, 395, 0, 585, 586, 662, 381, 482, 595, 334,
	346, 349, 339, 358, 0, 359, 335, 336, 341, 343,
	344, 345, 350, 351, 355, 361, 248, 209, 387, 396,
	572, 311, 215, 216, 217, 518, 519, 520, 521, 610,
	611, 615, 204, 459, 460, 461, 462, 291, 605, 308,
	465, 464, 330, 331, 376, 446, 534, 536, 547, 551,
	553, 555, 561, 564, 535, 537, 548, 552, 554, 556,
	562, 565, 524, 526, 528, 530, 543, 542, 539, 567,
	568, 545, 550, 529, 541, 546, 559, 566, 563, 523,
	527, 531, 540, 558, 557, 538, 549, 560, 544, 532,
	525, 533, 0, 196, 220, 365, 0, 451, 287, 640,
	609, 604, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 309,
	317, 318, 321, 327, 377, 383, 384, 385, 386, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 616, 622, 477, 300,
	301, 441, 442, 313, 314, 636, 637, 299, 592, 623,
	590, 635, 617, 435, 375, 0, 0, 378, 280, 304,
	319, 0, 608, 498, 226, 463, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 323, 388, 397, 426,
	431, 295, 270, 243, 456, 240, 481, 513, 514, 515,
	517, 392, 265, 430, 393, 0, 373, 570, 571, 315,
	0, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 0,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 95, 0,
	0, 0, 945, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 348,
	357, 356, 337, 338, 340, 342, 347, 354, 360, 0,
	0, 601, 0, 0, 0, 264, 320, 271, 263, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 399, 256, 0,
	450, 0, 0, 0, 619, 0, 0, 0, 0, 0,
	0, 0, 362, 0, 329, 197, 224, 0, 0, 409,
	458, 470, 0, 0, 0, 252, 0, 468, 423, 596,
	232, 283, 455, 429, 466, 437, 286, 0, 0, 467,
	369, 579, 447, 593, 620, 621, 262, 403, 606, 516,
	614, 638, 225, 259, 417, 501, 599, 490, 394, 575,
	576, 328, 489, 294, 201, 366, 626, 223, 476, 368,
	241, 230, 581, 603, 298, 288, 453, 633, 212, 511,
	591, 238, 480, 0, 0, 641, 246, 500, 214, 588,
	499, 390, 325, 326, 213, 0, 454, 267, 292, 0,
	0, 257, 412, 583, 584, 255, 642, 227, 613, 219,
	0, 612, 405, 578, 589, 391, 380, 218, 587, 389,
	379, 333, 352, 353, 279, 306, 444, 372, 445, 305,
	307, 401, 400, 402, 206, 600, 0, 207, 0, 495,
	602, 643, 449, 211, 233, 234, 236, 0, 278, 282,
	290, 293, 302, 303, 312, 364, 416, 443, 439, 448,
	0, 573, 594, 607, 618, 624, 625, 627, 628, 629,
	630, 631, 634, 632, 404, 310, 491, 332, 370, 0,
	0, 422, 469, 239, 598, 492, 199, 0, 0, 0,
	0, 253, 254, 0, 569, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 639, 502, 508, 503, 504, 505, 506, 507,
	0, 509, 0, 0, 0, 0, 0, 395, 0, 585,
	586, 662, 381, 482, 595, 334, 346, 349, 339, 358,
	0, 359, 335, 336, 341, 343, 344, 345, 350, 351,
	355, 361, 248, 209, 387, 396, 572, 311, 215, 216,
	217, 518, 519, 520, 521, 610, 611, 615, 204, 459,
	460, 461, 462, 291, 605, 308, 465, 464, 330, 331,
	376, 446, 534, 536, 547, 551, 553, 555, 561, 564,
	535, 537, 548, 552, 554, 556, 562, 565, 524, 526,
	528, 530, 543, 542, 539, 567, 568, 545, 550, 529,
	541, 546, 559, 566, 563, 523, 527, 531, 540, 558,
	557, 538, 549, 560, 544, 532, 525, 533, 0, 196,
	220, 365, 0, 451, 287, 640, 609, 604, 205, 222,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 208, 221, 231, 235, 242,
	260, 275, 277, 284, 297, 309, 317, 318, 321, 327,
	377, 383, 384, 385, 386, 406, 407, 408, 411, 414,
	415, 418, 420, 421, 424, 428, 432, 433, 434, 436,
	438, 440, 452, 457, 471, 472, 473, 474, 475, 478,
	479, 484, 485, 486, 487, 488, 496, 497, 510, 580,
	582, 597, 616, 622, 477, 300, 301, 441, 442, 313,
	314, 636, 637, 299, 592, 623, 590, 635, 617, 435,
	375, 0, 0, 378, 280, 304, 319, 0, 608, 498,
	226, 463, 289, 250, 0, 0, 210, 245, 229, 258,
	273, 276, 323, 388, 397, 426, 431, 295, 270, 243,
	456, 240, 481, 513, 514, 515, 517, 392, 265, 430,
	393, 0, 373, 570, 571, 315, 0, 522, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 363, 266, 0, 0, 427, 0, 203,
	0, 483, 251, 374, 371, 577, 281, 272, 268, 249,
	316, 382, 425, 512, 419, 0, 367, 0, 0, 493,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 247, 324, 202,
	410, 494, 285, 0, 0, 0, 0, 0, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 348, 357, 356, 337, 338,
	340, 342, 347, 354, 360, 0, 0, 601, 0, 0,
	0, 264, 320, 271, 263, 574, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1437,
	0, 296, 0, 399, 256, 0, 450, 0, 0, 0,
	619, 0, 0, 0, 0, 0, 0, 0, 362, 0,
	329, 197, 224, 0, 0, 409, 458, 470, 0, 0,
	0, 252, 0, 468, 423, 596, 232, 283, 455, 429,
	466, 437, 286, 0, 0, 467, 369, 579, 447, 593,
	620, 621, 262, 403, 606, 516, 614, 638, 225, 259,
	417, 501, 599, 490, 394, 575, 576, 328, 489, 294,
	201, 366, 626, 223, 476, 368, 241, 230, 581, 603,
	298, 288, 453, 633, 212, 511, 591, 238, 480, 0,
	0, 641, 246, 500, 214, 588, 499, 390, 325, 326,
	213, 0, 454, 267, 292, 0, 0, 257, 412, 583,
	584, 255, 642, 227, 613, 219, 0, 612, 405, 578,
	589, 391, 380, 218, 587, 389, 379, 333, 352, 353,
	279, 306, 444, 372, 445, 305, 307, 401, 400, 402,
	206, 600, 0, 207, 0, 495, 602, 643, 449, 211,
	233, 234, 236, 0, 278, 282, 290, 293, 302, 303,
	312, 364, 416, 443, 439, 448, 0, 573, 594, 607,
	618, 624, 625, 627, 628, 629, 630, 631, 634, 632,
	404, 310, 491, 332, 370, 0, 0, 422, 469, 239,
	598, 492, 199, 0, 0, 0, 0, 253, 254, 0,
	569, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 639, 502,
	508, 503, 504, 505, 506, 507, 0, 509, 0, 0,
	0, 0, 0, 395, 0, 585, 586, 662, 381, 482,
	595, 334, 346, 349, 339, 358, 0, 359, 335, 336,
	341, 343, 344, 345, 350, 351, 355, 361, 248, 209,
	387, 396, 572, 311, 215, 216, 217, 518, 519, 520,
	521, 610, 611, 615, 204, 459, 460, 461, 462, 291,
	605, 308, 465, 464, 330, 331, 376, 446, 534, 536,
	547, 551, 553, 555, 561, 564, 535, 537, 548, 552,
	554, 556, 562, 565, 524, 526, 528, 530, 543, 542,
	539, 567, 568, 545, 550, 529, 541, 546, 559, 566,
	563, 523, 527, 531, 540, 558, 557, 538, 549, 560,
	544, 532, 525, 533, 0, 196, 220, 365, 0, 451,
	287, 640, 609, 604, 205, 222, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 309, 317, 318, 321, 327, 377, 383, 384, 385,
	386, 406, 407, 408, 411, 414, 415, 418, 420, 421,
	424, 428, 432, 433, 434, 436, 438, 440, 452, 457,
	471, 472, 473, 474, 475, 478, 479, 484, 485, 486,
	487, 488, 496, 497, 510, 580, 582, 597, 616, 622,
	477, 300, 301, 441, 442, 313, 314, 636, 637, 1436,
	592, 623, 590, 635, 617, 435, 375, 0, 0, 378,
	280, 304, 319, 0, 608, 498, 226, 463, 289, 250,
	0, 0, 210, 245, 229, 258, 273, 276, 323, 388,
	397, 426, 431, 295, 270, 243, 456, 240, 481, 513,
	514, 515, 517, 392, 265, 430, 393, 0, 373, 570,
	571, 315, 0, 522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 363,
	266, 0, 0, 427, 0, 203, 0, 483, 251, 374,
	371, 577, 281, 272, 268, 249, 316, 382, 425, 512,
	419, 0, 367, 0, 0, 493, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 247, 324, 202, 410, 494, 285, 0,
	0, 0, 0, 0, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 348, 357, 356, 337, 338, 340, 342, 347, 354,
	360, 0, 0, 601, 0, 0, 0, 264, 320, 271,
	263, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 399,
	256, 0, 450, 0, 0, 0, 619, 0, 0, 0,
	0, 0, 0, 0, 362, 0, 329, 197, 224, 0,
	0, 409, 458, 470, 0, 0, 0, 252, 0, 468,
	423, 596, 232, 283, 455, 429, 466, 437, 286, 0,
	0, 467, 369, 579, 447, 593, 620, 621, 262, 403,
	606, 516, 614, 638, 225, 259, 417, 501, 599, 490,
	394, 575, 576, 328, 489, 294, 201, 366, 626, 223,
	476, 368, 241, 230, 581, 603, 298, 288, 453, 633,
	212, 511, 591, 238, 480, 0, 0, 641, 246, 500,
	214, 588, 499, 390, 325, 326, 213, 0, 454, 267,
	292, 0, 0, 257, 412, 583, 584, 255, 642, 227,
	613, 219, 0, 612, 405, 578, 589, 391, 380, 218,
	587, 389, 379, 333, 352, 353, 279, 306, 444, 372,
	445, 305, 307, 401, 400, 402, 206, 600, 0, 207,
	0, 495, 602, 643, 449, 211, 233, 234, 236, 0,
	278, 282, 290, 293, 302, 303, 312, 364, 416, 443,
	439, 448, 0, 573, 594, 607, 618, 624, 625, 627,
	628, 629, 630, 631, 634, 632, 404, 310, 491, 332,
	370, 0, 0, 422, 469, 239, 598, 492, 199, 0,
	0, 0, 0, 253, 254, 0, 569, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 639, 502, 508, 503, 504, 505,
	506, 507, 0, 509, 0, 0, 0, 0, 0, 395,
	0, 585, 586, 662, 381, 482, 595, 334, 346, 349,
	339, 358, 0, 359, 335, 336, 341, 343, 344, 345,
	350, 351, 355, 361, 248, 209, 387, 396, 572, 311,
	215, 216, 217, 518, 519, 520, 521, 610, 611, 615,
	204, 459, 460, 461, 462, 291, 605, 308, 465, 464,
	330, 331, 376, 446, 534, 536, 547, 551, 553, 555,
	561, 564, 535, 537, 548, 552, 554, 556, 562, 565,
	524, 526, 528, 530, 543, 542, 539, 567, 568, 545,
	550, 529, 541, 546, 559, 566, 563, 523, 527, 531,
	540, 558, 557, 538, 549, 560, 544, 532, 525, 533,
	0, 196, 220, 365, 0, 451, 287, 640, 609, 604,
	205, 222, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1035, 0, 0, 0, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 309, 317, 318,
	321, 327, 377, 383, 384, 385, 386, 406, 407, 408,
	411, 414, 415, 418, 420, 421, 424, 428, 432, 433,
	434, 436, 438, 440, 452, 457, 471, 472, 473, 474,
	475, 478, 479, 484, 485, 486, 487, 488, 496, 497,
	510, 580, 582, 597, 616, 622, 477, 300, 301, 441,
	442, 313, 314, 636, 637, 299, 592, 623, 590, 635,
	617, 435, 375, 0, 0, 378, 280, 304, 319, 0,
	608, 498, 226, 463, 289, 250, 0, 0, 210, 245,
	229, 258, 273, 276, 323, 388, 397, 426, 431, 295,
	270, 243, 456, 240, 481, 513, 514, 515, 517, 392,
	265, 430, 393, 0, 373, 570, 571, 315, 0, 522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 363, 266, 0, 0, 427,
	0, 203, 0, 483, 251, 374, 371, 577, 281, 272,
	268, 249, 316, 382, 425, 512, 419, 0, 367, 0,
	0, 493, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 247,
	324, 202, 410, 494, 285, 0, 0, 0, 0, 0,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 244, 0, 0, 0, 348, 357, 356,
	337, 338, 340, 342, 347, 354, 360, 0, 0, 601,
	0, 0, 0, 264, 320, 271, 263, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 399, 256, 0, 450, 0,
	665, 0, 619, 0, 0, 0, 0, 0, 0, 0,
	362, 0, 329, 197, 224, 0, 0, 409, 458, 470,
	0, 0, 0, 252, 0, 468, 423, 596, 232, 283,
	455, 429, 466, 437, 286, 0, 0, 467, 369, 579,
	447, 593, 620, 621, 262, 403, 606, 516, 614, 638,
	225, 259, 417, 501, 599, 490, 394, 575, 576, 328,
	489, 294, 201, 366, 626, 223, 476, 368, 241, 230,
	581, 603, 298, 288, 453, 633, 212, 511, 591, 238,
	480, 0, 0, 641, 246, 500, 214, 588, 499, 390,
	325, 326, 213, 0, 454, 267, 292, 0, 0, 257,
	412, 583, 584, 255, 642, 227, 613, 219, 0, 612,
	405, 578, 589, 391, 380, 218, 587, 389, 379, 333,
	352, 353, 279, 306, 444, 372, 445, 305, 307, 401,
	400, 402, 206, 600, 0, 207, 0, 495, 602, 643,
	449, 211, 233, 234, 236, 0, 278, 282, 290, 293,
	302, 303, 312, 364, 416, 443, 439, 448, 0, 573,
	594, 607, 618, 624, 625, 627, 628, 629, 630, 631,
	634, 632, 404, 310, 491, 332, 370, 0, 0, 422,
	469, 239, 598, 492, 199, 0, 0, 0, 0, 253,
	254, 0, 569, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	639, 502, 508, 503, 504, 505, 506, 507, 0, 509,
	0, 0, 0, 0, 0, 395, 0, 585, 586, 662,
	381, 482, 595, 334, 346, 349, 339, 358, 0, 359,
	335, 336, 341, 343, 344, 345, 350, 351, 355, 361,
	248, 209, 387, 396, 572, 311, 215, 216, 217, 518,
	519, 520, 521, 610, 611, 615, 204, 459, 460, 461,
	462, 291, 605, 308, 465, 464, 330, 331, 376, 446,
	534, 536, 547, 551, 553, 555, 561, 564, 535, 537,
	548, 552, 554, 556, 562, 565, 524, 526, 528, 530,
	543, 542, 539, 567, 568, 545, 550, 529, 541, 546,
	559, 566, 563, 523, 527, 531, 540, 558, 557, 538,
	549, 560, 544, 532, 525, 533, 0, 196, 220, 365,
	0, 451, 287, 640, 609, 604, 205, 222, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 309, 317, 318, 321, 327, 377, 383,
	384, 385, 386, 406, 407, 408, 411, 414, 415, 418,
	420, 421, 424, 428, 432, 433, 434, 436, 438, 440,
	452, 457, 471, 472, 473, 474, 475, 478, 479, 484,
	485, 486, 487, 488, 496, 497, 510, 580, 582, 597,
	616, 622, 477, 300, 301, 441, 442, 313, 314, 636,
	637, 299, 592, 623, 590, 635, 617, 435, 375, 0,
	0, 378, 280, 304, 319, 0, 608, 498, 226, 463,
	289, 250, 0, 0, 210, 245, 229, 258, 273, 276,
	323, 388, 397, 426, 431, 295, 270, 243, 456, 240,
	481, 513, 514, 515, 517, 392, 265, 430, 393, 0,
	373, 570, 571, 315, 0, 522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 363, 266, 0, 0, 427, 0, 203, 0, 483,
	251, 374, 371, 577, 281, 272, 268, 249, 316, 382,
	425, 512, 419, 0, 367, 0, 0, 493, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 247, 324, 202, 410, 494,
	285, 0, 0, 0, 0, 0, 712, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 244,
	0, 0, 0, 348, 357, 356, 337, 338, 340, 342,
	347, 354, 360, 0, 0, 601, 0, 0, 0, 264,
	320, 271, 263, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 399, 256, 0, 450, 0, 0, 0, 619, 0,
	0, 0, 0, 0, 0, 0, 362, 0, 329, 197,
	224, 0, 0, 409, 458, 470, 0, 0, 0, 252,
	0, 468, 423, 596, 232, 283, 455, 429, 466, 437,
	286, 0, 0, 467, 369, 579, 447, 593, 620, 621,
	262, 403, 606, 516, 614, 638, 225, 259, 417, 501,
	599, 490, 394, 575, 576, 328, 489, 294, 201, 366,
	626, 223, 476, 368, 241, 230, 581, 603, 298, 288,
	453, 633, 212, 511, 591, 238, 480, 0, 0, 641,
	246, 500, 214, 588, 499, 390, 325, 326, 213, 0,
	454, 267, 292, 0, 0, 257, 412, 583, 584, 255,
	642, 227, 613, 219, 0, 612, 405, 578, 589, 391,
	380, 218, 587, 389, 379, 333, 352, 353, 279, 306,
	444, 372, 445, 305, 307, 401, 400, 402, 206, 600,
	0, 207, 0, 495, 602, 643, 449, 211, 233, 234,
	236, 0, 278, 282, 290, 293, 302, 303, 312, 364,
	416, 443, 439, 448, 0, 573, 594, 607, 618, 624,
	625, 627, 628, 629, 630, 631, 634, 632, 404, 310,
	491, 332, 370, 0, 0, 422, 469, 239, 598, 492,
	199, 0, 0, 0, 0, 253, 254, 0, 569, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 639, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 0, 0, 0, 0,
	0, 395, 0, 585, 586, 662, 381, 482, 595, 334,
	346, 349, 339, 358, 0, 359, 335, 336, 341, 343,
	344, 345, 350, 351, 355, 361, 248, 209, 387, 396,
	572, 311, 215, 216, 217, 518, 519, 520, 521, 610,
	611, 615, 204, 459, 460, 461, 462, 291, 605, 308,
	465, 464, 330, 331, 376, 446, 534, 536, 547, 551,
	553, 555, 561, 564, 535, 537, 548, 552, 554, 556,
	562, 565, 524, 526, 528, 530, 543, 542, 539, 567,
	568, 545, 550, 529, 541, 546, 559, 566, 563, 523,
	527, 531, 540, 558, 557, 538, 549, 560, 544, 532,
	525, 533, 0, 196, 220, 365, 0, 451, 287, 640,
	609, 604, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 309,
	317, 318, 321, 327, 377, 383, 384, 385, 386, 4082,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 616, 622, 477, 300,
	301, 441, 442, 313, 314, 636, 637, 299, 592, 623,
	590, 635, 617, 435, 375, 0, 0, 378, 280, 304,
	319, 0, 608, 498, 226, 463, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 323, 388, 397, 426,
	431, 295, 270, 243, 456, 240, 481, 513, 514, 515,
	517, 392, 265, 430, 393, 0, 373, 570, 571, 315,
	0, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 363, 266, 0,
	0, 427, 0, 203, 0, 483, 251, 374, 371, 577,
	281, 272, 268, 249, 316, 382, 425, 512, 419, 0,
	367, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 247, 324, 202, 410, 494, 285, 0, 0, 0,
	0, 0, 712, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 348,
	357, 356, 337, 338, 340, 342, 347, 354, 360, 0,
	0, 601, 0, 0, 0, 264, 320, 271, 263, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 399, 256, 0,
	450, 0, 0, 0, 619, 0, 0, 0, 0, 0,
	0, 0, 362, 0, 329, 197, 224, 0, 0, 409,
	458, 470, 0, 0, 0, 252, 0, 468, 423, 596,
	232, 283, 455, 429, 466, 437, 286, 0, 0, 467,
	369, 579, 447, 593, 620, 621, 262, 403, 606, 516,
	614, 638, 225, 259, 417, 501, 599, 490, 394, 575,
	576, 328, 489, 294, 201, 366, 626, 223, 476, 368,
	241, 230, 581, 603, 298, 288, 453, 633, 212, 511,
	591, 238, 480, 0, 0, 641, 246, 500, 214, 588,
	499, 390, 325, 326, 213, 0, 454, 267, 292, 0,
	0, 257, 412, 583, 584, 255, 642, 227, 613, 219,
	0, 612, 405, 578, 589, 391, 380, 218, 587, 389,
	379, 333, 352, 353, 279, 306, 444, 372, 445, 305,
	307, 401, 400, 402, 206, 600, 0, 207, 0, 495,
	602, 643, 449, 211, 233, 234, 236, 0, 278, 282,
	290, 293, 302, 303, 312, 364, 416, 443, 439, 448,
	0, 573, 594, 607, 618, 624, 625, 627, 628, 629,
	630, 631, 634, 632, 404, 310, 491, 332, 370, 0,
	0, 422, 469, 239, 598, 492, 199, 0, 0, 0,
	0, 253, 254, 0, 569, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 639, 502, 508, 503, 504, 505, 506, 507,
	0, 509, 0, 0, 0, 0, 0, 395, 0, 585,
	586, 662, 381, 482, 595, 334, 346, 349, 339, 358,
	0, 359, 335, 336, 341, 343, 344, 345, 350, 351,
	355, 361, 248, 209, 387, 396, 572, 311, 215, 216,
	217, 518, 519, 520, 521, 610, 611, 615, 204, 459,
	460, 461, 462, 291, 605, 308, 465, 464, 330, 331,
	376, 446, 534, 536, 547, 551, 553, 555, 561, 564,
	535, 537, 548, 552, 554, 556, 562, 565, 524, 526,
	528, 530, 543, 542, 539, 567, 568, 545, 550, 529,
	541, 546, 559, 566, 563, 523, 527, 531, 540, 558,
	557, 538, 549, 560, 544, 532, 525, 533, 0, 196,
	220, 365, 0, 451, 287, 640, 609, 604, 205, 222,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 208, 221, 231, 235, 242,
	260, 275, 277, 284, 297, 309, 317, 318, 321, 327,
	377, 383, 384, 385, 386, 406, 407, 408, 411, 414,
	415, 418, 420, 421, 424, 428, 432, 433, 434, 436,
	438, 440, 452, 457, 471, 472, 473, 474, 475, 478,
	479, 484, 485, 486, 487, 488, 496, 497, 510, 580,
	582, 597, 616, 622, 477, 300, 301, 441, 442, 313,
	314, 636, 637, 299, 592, 623, 590, 635, 617, 435,
	375, 0, 0, 378, 280, 304, 319, 0, 608, 498,
	226, 463, 289, 250, 0, 0, 210, 245, 229, 258,
	273, 276, 323, 388, 397, 426, 431, 295, 270, 243,
	456, 240, 481, 513, 514, 515, 517, 392, 265, 430,
	393, 0, 373, 570, 571, 315, 0, 522, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 363, 266, 0, 0, 427, 0, 203,
	0, 483, 251, 374, 371, 577, 281, 272, 268, 249,
	316, 382, 425, 512, 419, 0, 367, 0, 0, 493,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 247, 324, 202,
	410, 494, 285, 0, 0, 0, 0, 0, 945, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 348, 357, 356, 337, 338,
	340, 342, 347, 354, 360, 0, 0, 601, 0, 0,
	0, 264, 320, 271, 263, 574, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 399, 256, 0, 450, 0, 0, 0,
	619, 0, 0, 0, 0, 0, 0, 0, 362, 0,
	329, 197, 224, 0, 0, 409, 458, 470, 0, 0,
	0, 252, 0, 468, 423, 596, 232, 283, 455, 429,
	466, 437, 286, 0, 0, 467, 369, 579, 447, 593,
	620, 621, 262, 403, 606, 516, 614, 638, 225, 259,
	417, 501, 599, 490, 394, 575, 576, 328, 489, 294,
	201, 366, 626, 223, 476, 368, 241, 230, 581, 603,
	298, 288, 453, 633, 212, 511, 591, 238, 480, 0,
	0, 641, 246, 500, 214, 588, 499, 390, 325, 326,
	213, 0, 454, 267, 292, 0, 0, 257, 412, 583,
	584, 255, 642, 227, 613, 219, 0, 612, 405, 578,
	589, 391, 380, 218, 587, 389, 379, 333, 352, 353,
	279, 306, 444, 372, 445, 305, 307, 401, 400, 402,
	206, 600, 0, 207, 0, 495, 602, 643, 449, 211,
	233, 234, 236, 0, 278, 282, 290, 293, 302, 303,
	312, 364, 416, 443, 439, 448, 0, 573, 594, 607,
	618, 624, 625, 627, 628, 629, 630, 631, 634, 632,
	404, 310, 491, 332, 370, 0, 0, 422, 469, 239,
	598, 492, 199, 0, 0, 0, 0, 253, 254, 0,
	569, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 639, 502,
	508, 503, 504, 505, 506, 507, 0, 509, 0, 0,
	0, 0, 0, 395, 0, 585, 586, 662, 381, 482,
	595, 334, 346, 349, 339, 358, 0, 359, 335, 336,
	341, 343, 344, 345, 350, 351, 355, 361, 248, 209,
	387, 396, 572, 311, 215, 216, 217, 518, 519, 520,
	521, 610, 611, 615, 204, 459, 460, 461, 462, 291,
	605, 308, 465, 464, 330, 331, 376, 446, 534, 536,
	547, 551, 553, 555, 561, 564, 535, 537, 548, 552,
	554, 556, 562, 565, 524, 526, 528, 530, 543, 542,
	539, 567, 568, 545, 550, 529, 541, 546, 559, 566,
	563, 523, 527, 531, 540, 558, 557, 538, 549, 560,
	544, 532, 525, 533, 0, 196, 220, 365, 0, 451,
	287, 640, 609, 604, 205, 222, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 309, 317, 318, 321, 327, 377, 383, 384, 385,
	386, 406, 407, 408, 411, 414, 415, 418, 420, 421,
	424, 428, 432, 433, 434, 436, 438, 440, 452, 457,
	471, 472, 473, 474, 475, 478, 479, 484, 485, 486,
	487, 488, 496, 497, 510, 580, 582, 597, 616, 622,
	477, 300, 301, 441, 442, 313, 314, 636, 637, 299,
	592, 623, 590, 635, 617, 435, 375, 0, 0, 378,
	280, 304, 319, 0, 608, 498, 226, 463, 289, 250,
	0, 0, 210, 245, 229, 258, 273, 276, 323, 388,
	397, 426, 431, 295, 270, 243, 456, 240, 481, 513,
	514, 515, 517, 392, 265, 430, 393, 0, 373, 570,
	571, 315, 0, 522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 363,
	266, 0, 0, 427, 0, 203, 0, 483, 251, 374,
	371, 577, 281, 272, 268, 249, 316, 382, 425, 512,
	419, 0, 367, 0, 0, 493, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 247, 324, 202, 410, 494, 285, 0,
	0, 0, 0, 0, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 348, 357, 356, 337, 338, 340, 342, 347, 354,
	360, 0, 0, 601, 0, 0, 0, 264, 320, 271,
	263, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 399,
	256, 0, 450, 0, 0, 0, 619, 0, 0, 0,
	0, 0, 0, 0, 362, 0, 329, 197, 224, 0,
	0, 409, 458, 470, 0, 0, 0, 252, 0, 468,
	423, 596, 232, 283, 455, 429, 466, 437, 286, 0,
	0, 467, 369, 579, 447, 593, 620, 621, 262, 403,
	606, 516, 614, 638, 225, 259, 417, 501, 599, 490,
	394, 575, 576, 328, 489, 294, 201, 366, 626, 223,
	476, 368, 241, 230, 581, 603, 298, 288, 453, 633,
	212, 511, 591, 238, 480, 0, 0, 641, 246, 500,
	214, 588, 499, 390, 325, 326, 213, 0, 454, 267,
	292, 0, 0, 257, 412, 583, 584, 255, 642, 227,
	613, 219, 0, 612, 405, 578, 589, 391, 380, 218,
	587, 389, 379, 333, 352, 353, 279, 306, 444, 372,
	445, 305, 307, 401, 400, 402, 206, 600, 0, 207,
	0, 495, 602, 643, 449, 211, 233, 234, 236, 0,
	278, 282, 290, 293, 302, 303, 312, 364, 416, 443,
	439, 448, 0, 573, 594, 607, 618, 624, 625, 627,
	628, 629, 630, 631, 634, 632, 404, 310, 491, 332,
	370, 0, 0, 422, 469, 239, 598, 492, 199, 0,
	0, 0, 0, 253, 254, 0, 569, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 639, 502, 508, 503, 504, 505,
	506, 507, 0, 509, 0, 0, 0, 0, 0, 395,
	0, 585, 586, 662, 381, 482, 595, 334, 346, 349,
	339, 358, 0, 359, 335, 336, 341, 343, 344, 345,
	350, 351, 355, 361, 248, 209, 387, 396, 572, 311,
	215, 216, 217, 518, 519, 520, 521, 610, 611, 615,
	204, 459, 460, 461, 462, 291, 605, 308, 465, 464,
	330, 331, 376, 446, 534, 536, 547, 551, 553, 555,
	561, 564, 535, 537, 548, 552, 554, 556, 562, 565,
	524, 526, 528, 530, 543, 542, 539, 567, 568, 545,
	550, 529, 541, 546, 559, 566, 563, 523, 527, 531,
	540, 558, 557, 538, 549, 560, 544, 532, 525, 533,
	0, 196, 220, 365, 0, 451, 287, 640, 609, 604,
	205, 222, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 309, 317, 318,
	321, 327, 377, 383, 384, 385, 386, 406, 407, 408,
	411, 414, 415, 418, 420, 421, 424, 428, 432, 433,
	434, 436, 438, 440, 452, 457, 471, 472, 473, 474,
	475, 478, 479, 484, 485, 486, 487, 488, 496, 497,
	510, 580, 582, 597, 616, 622, 477, 300, 301, 441,
	442, 313, 314, 636, 637, 299, 592, 623, 590, 635,
	617, 435, 375, 0, 0, 378, 280, 304, 319, 0,
	608, 498, 226, 463, 289, 250, 0, 0, 210, 245,
	229, 258, 273, 276, 323, 388, 397, 426, 431, 295,
	270, 243, 456, 240, 481, 513, 514, 515, 517, 392,
	265, 430, 0, 0, 373, 570, 571, 315,
}

var yyPact = [...]int{
	-1000, -1000, 1703, -1000, -525, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2442, 2617, -1000, -1000, -1000, -1000, 2643, -1000, 1022,
	2053, -1000, 2365, 4986, -1000, 54972, 774, -1000, 52068, -407,
	879, 237, 36096, -1000, 200, -1000, 189, 53520, 194, -1000,
	-1000, -1000, -1000, -407, 21576, 2309, 71, 63, 54972, -1000,
	-1000, -1000, -1000, -353, 2597, 2027, -1000, 392, -1000, -1000,
	-1000, -1000, -1000, -1000, 51342, -1000, 1119, -1000, -1000, 2373,
	2362, 2299, 921, 2305, -1000, 2489, 2027, -1000, 21576, 2560,
	2457, 20850, 20850, 470, -1000, -1000, 278, -1000, -1000, 31014,
	54972, 39000, 320, -1000, 2365, -1000, -1000, -1000, 218, -1000,
	362, 1974, -1000, 1964, -1000, 896, 1040, 400, 890, 889,
	397, 396, 387, 383, 382, 379, 378, 376, 389, -1000,
	939, 939, -201, -202, 1332, 472, 451, 451, 1031, 485,
	2341, 2332, -1000, -1000, 939, 939, 939, 384, 939, 939,
	939, 939, 325, 311, 939, 939, 939, 939, 939, 939,
	939, 939, 939, 939, 939, 939, 939, 939, 939, 939,
	939, 866, 2365, 279, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 54972, 190, 54972, -1000, 831, 772, -1000,
	-1000, -412, 1075, 1075, 70, 1075, 1075, 1075, 1075, 209,
	968, 57, -1000, 188, 269, 195, 271, 1063, 213, -1000,
	-1000, 249, 1063, 1783, -1000, 925, 264, 191, -1000, 1075,
	1075, -1000, 14292, 204, 14292, 14292, -1000, 2348, -1000, -1000,
	-1000, -1000, -1000, 1336, -1000, -1000, -1000, -1000, -16, 481,
	-1000, -1000, -1000, -1000, 53520, 50616, 263, -1000, -1000, 301,
	1835, 1177, 21576, 1155, 919, -1000, -1000, 1377, 895, -1000,
	-1000, -1000, -1000, -1000, 813, -1000, 23754, 23754, 23754, 23754,
	-1000, -1000, 1976, 49890, 1976, 1976, 23754, 1976, 23754, 1976,
	1976, 1976, 1976, 21576, 1976, 1976, 1976, 1976, -1000, 1976,
	1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
	1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
	1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
	1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
	1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
	1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
	1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
	1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
	1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
	1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
	1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
	1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
	1976, 1976, 1976, 1976, 1976, 1976, -1000, -1000, -1000, -1000,
	1976, 830, 1976, 1976, 1976, 1976, 1976, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1976, 1976, 1976, 1976, 1976, 1976,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1976,
	1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
	1976, 1976, 1976, -1000, -1000, -1000, 1588, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 26658, 1476, 1471, 1469, -1000, 18672,
	1976, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 54972, -1000, 1976, 219, 53520, 53520, 412, 1334,
	-1000, -1000, 2489, 2027, -1000, 2597, 2698, 392, -1000, 3302,
	1512, 1592, 1520, 2027, 1926, 54972, -1000, 1994, -1000, -1000,
	-1000, -322, -339, 2218, 1468, 1778, -1000, -1000, -1000, -1000,
	1781, 21576, -1000, -1000, 2626, -1000, 28110, 828, 2613, 49164,
	-1000, 470, 470, 1945, 429, 33, -1000, -1000, -1000, -1000,
	964, 35370, -1000, -1000, -1000, -1000, -1000, 1790, 54972, -1000,
	-1000, 4217, 53520, -1000, 2048, -1000, 1788, -1000, 2022, 21576,
	2081, 522, 53520, 508, 507, 493, -1000, -49, -1000, -1000,
	-1000, -1000, -1000, -1000, 939, 939, 939, -1000, 350, 2557,
	4986, 5122, -1000, -1000, -1000, 48438, 2047, 53520, -1000, 2044,
	-1000, 1045, 847, 880, 880, 53520, -1000, -1000, 54246, 53520,
	1043, 1036, 53520, 53520, 53520, 53520, -1000, 47712, -1000, 46986,
	46260, 1331, 53520, 45534, 44808, 44082, 43356, 42630, -1000, 2523,
	-1000, 2017, -1000, -1000, -1000, 54246, 53520, 53520, 54246, 53520,
	54246, 54972, 53520, -1000, -1000, 367, -1000, -1000, 1328, 1313,
	1305, 939, 939, 1304, 1759, 1743, 1723, 939, 939, 1299,
	1715, 37548, 1706, 291, 1295, 1291, 1282, 1327, 1701, 193,
	1677, 1270, 1248, 1279, 53520, 2042, 54972, -1000, 259, 948,
	894, 960, 2365, 2293, 1944, 479, 510, 53520, 461, 461,
	53520, -1000, 15024, 54972, 238, -1000, 1673, 21576, -1000, 1093,
	1063, 1063, -1000, -1000, -1000, -1000, -1000, -1000, 1075, 54972,
	1093, -1000, -1000, -1000, 1063, 1075, 54972, 1075, 1075, 1075,
	1075, 1063, 1063, 1063, 1075, 54972, 54972, 54972, 54972, 54972,
	54972, 54972, 54972, 54972, 14292, 925, 1075, -416, -1000, 1670,
	-1000, -1000, -1000, 2176, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 14292, 14292, -1000, -1000, -1000, -1000, -1000, 1943, -1000,
	184, 15, 192, -1000, 41904, 457, 959, -1000, 457, -1000,
	-1000, -1000, 1939, 41178, -1000, -419, -438, -439, -450, -1000,
	-1000, -1000, -451, -457, -1000, -1000, -1000, 21576, 21576, 21576,
	21576, -239, -1000, 1260, 23754, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 21576, 262, 978, 23754, 23754, 23754, 23754, 23754,
	23754, 23754, 25206, 24480, 23754, 23754, 23754, 23754, 23754, 23754,
	-1000, -1000, 33192, 5973, 5973, 895, 895, 895, 895, -1000,
	-160, 1930, 54246, -1000, -1000, -1000, 827, 21576, 21576, 895,
	-1000, 1343, 1984, 18672, 21576, 21576, 21576, 21576, 977, 1177,
	54246, 21576, -1000, 1520, -1000, -1000, -1000, -1000, 1185, -1000,
	-1000, 1096, 2347, 2347, 2347, 2347, 21576, 21576, 21576, 21576,
	21576, 21576, 21576, 21576, 21576, 21576, 2347, 21576, 950, 950,
	1018, 21576, 21576, 21576, 21576, 21576, 21576, 17220, 21576, 21576,
	23754, 21576, 21576, 21576, 1520, 21576, 21576, 21576, 21576, 21576,
	21576, 21576, 21576, 21576, 21576, 21576, 21576, 21576, 21576, 21576,
	21576, 21576, 21576, 21576, 21576, 21576, 21576, 21576, 21576, 21576,
	21576, 21576, 21576, 21576, 21576, 21576, 21576, 21576, 21576, 21576,
	21576, 21576, 21576, 21576, 21576, 21576, 21576, 21576, 21576, 21576,
	21576, 21576, 21576, 21576, 21576, 21576, 21576, 21576, 21576, 21576,
	21576, 21576, 21576, 21576, 21576, 21576, 21576, 21576, 21576, 21576,
	21576, 21576, 21576, 21576, 21576, 21576, 21576, 21576, 21576, 21576,
	21576, 21576, 21576, 21576, 1520, 21576, 1481, 21576, 21576, 21576,
	21576, 21576, 21576, 21576, 16488, 21576, 21576, 21576, 21576, 21576,
	-1000, -1000, -1000, -1000, -1000, -1000, 21576, 21576, 21576, 21576,
	21576, 21576, 21576, 21576, 1520, 21576, 21576, 21576, 21576, 21576,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1669, 1635, 1550, 21576, -1000, 1929, -1000, -180, 30288,
	21576, 1649, 2608, 2099, 53520, -1000, -1000, -1000, -1000, 2489,
	-1000, 2489, 1669, 2723, 2225, 20850, -1000, -1000, 2723, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1747, -1000,
	54972, 1926, 2429, 53520, -1000, -275, -1000, -278, 2208, 1643,
	363, -1000, 21576, 21576, 1925, -1000, 2248, 54972, -1000, -239,
	-1000, 40452, -1000, -1000, 13560, 54972, 360, 54972, -1000, 29562,
	39726, 313, -1000, 33, 1896, -1000, 35, 8, 17946, 882,
	-1000, -1000, -1000, 1332, 25932, 1822, 882, 112, -1000, -1000,
	-1000, 2022, -1000, 2022, 2022, 2022, 2022, 363, 363, 363,
	363, -1000, -1000, -1000, -1000, -1000, 2041, 2040, -1000, 2022,
	2022, 2022, 2022, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2037, 2037, 2037, 2036, 2036, 2024, 2024, 445, -1000, 21576,
	425, 39000, 2445, 1277, 1607, 259, 465, 2095, 53520, 53520,
	53520, 465, -1000, 1466, 1464, 1444, -1000, -514, 1918, -1000,
	-1000, 2553, -1000, -1000, 1077, 1067, 1062, 1095, 53520, 231,
	348, -1000, 443, -1000, 39000, 53520, 1035, 880, 53520, -1000,
	53520, -1000, -1000, -1000, -1000, -1000, 53520, -1000, -1000, 1917,
	-1000, 1886, 1123, 1060, 1104, 1009, 1917, -1000, -1000, -167,
	1917, -1000, 1917, -1000, 1917, -1000, 1917, -1000, 1917, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 993, 300,
	-335, 53520, 231, 475, -1000, 474, 33192, -1000, -1000, -1000,
	33192, 33192, -1000, -1000, -1000, -1000, 1630, 1619, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -502, 54972, -1000,
	236, 957, 330, 323, 315, 54972, 359, 2482, 2478, 2473,
	2465, 2459, 2440, 242, 309, 54972, 54972, 461, 2170, 54972,
	2385, 54972, -1000, -1000, -1000, -1000, -1000, 1594, 1590, -1000,
	1177, 54972, -1000, -1000, 1075, 1075, -1000, -1000, 54972, 1075,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1075, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 54972, -1000, -1000, -1000, -1000, -16,
	179, -1000, -1000, 53520, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -71, -1000, 46, 24, 385, -1000, -1000,
	-1000, -1000, -1000, 2486, -1000, 1177, 1007, 1021, -1000, 1976,
	-1000, -1000, 1322, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 262, 23754, 23754, 23754, 1461, 824, 1672,
	1325, 1787, 929, 929, 983, 23754, 983, 23754, 899, 899,
	899, 899, 899, -1000, -1000, -1000, -1000, -1000, -1000, 1588,
	-1000, 1585, -1000, 1976, 54246, 1777, 16488, 2541, 1253, 1520,
	908, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3552, 1520, 1835, 1520, 1437, 3547, 998, -1000, 21576,
	1520, 3536, -1000, -1000, 1520, 1520, 21576, -1000, -1000, 21576,
	21576, 21576, 21576, 1607, 1607, 1607, 1607, 1607, 1607, 1607,
	1607, 1607, 1607, 21576, 1607, 1916, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1911, 2607, 1373, 1607, 1607, 1607,
	1607, 1607, 21576, 1205, -1000, -1000, -1000, 1524, 3531, 1423,
	3519, 1607, 1607, -1000, 1607, 3472, 3453, 1520, 2792, 2767,
	1607, 1607, 1607, 1607, 1607, 2755, 2749, 1607, 1607, 2725,
	1607, 3448, 1607, 2721, 2705, 2662, 2656, 2612, 2598, 2589,
	2561, 2525, 2510, 2502, 2496, 2490, 2483, 2477, 2453, 2419,
	2415, 1607, 1607, 1607, 3444, 1607, 3427, 1607, 3423, 1607,
	1607, 3418, 2406, 2402, 1520, 1909, -1000, 3410, 1607, 3402,
	3385, 3380, 2327, 3376, 3369, 3358, 1607, 1607, 1607, 2319,
	3353, 3344, 3339, 3322, 3318, 3301, 3296, 3232, 3084, 1607,
	1550, 1550, 1550, 1550, 1550, 3069, -243, 1607, 1520, -1000,
	-1000, -1000, -1000, -1000, 3034, 2310, 3027, 3023, 3012, 3002,
	1520, 1976, 825, -1000, -1000, 1550, 1520, 1520, 1550, 1550,
	2987, 2948, 2936, 2926, 2921, 2916, 1607, 1607, -1000, 1607,
	2906, 2901, 2306, 2276, 1520, -1000, 1550, 54972, -1000, -404,
	-1000, 6, 954, 1976, -1000, 37548, 1520, -1000, 4078, -1000,
	1184, -1000, -1000, -1000, -1000, -1000, 34644, 1779, -1000, -1000,
	-1000, -1000, 1976, 1765, -1000, -1000, -1000, -1000, 363, 95,
	33918, 868, 868, 125, 1177, 1177, 21576, -1000, -1000, -1000,
	-1000, -1000, -1000, 823, 2535, 380, 1976, -1000, 1905, 3349,
	-1000, -1000, -1000, 2426, 27384, -1000, -1000, 1976, 1976, 54972,
	1740, 1657, -1000, 821, -1000, 1346, 1896, 33, 23, -1000,
	-1000, -1000, -1000, 1177, -1000, 1363, 373, 358, -1000, 454,
	-1000, -1000, -1000, -1000, 2325, 109, -1000, -1000, -1000, 335,
	363, -1000, -1000, -1000, -1000, -1000, -1000, 1577, 1577, -1000,
	-1000, -1000, -1000, -1000, 1276, -1000, -1000, -1000, -1000, 1273,
	-1000, -1000, 1271, -1000, -1000, 2566, 2133, 425, -1000, -1000,
	939, 1553, -1000, -1000, 2311, 939, 939, 53520, -1000, -1000,
	1811, 2445, 236, 54972, 982, 2157, -1000, 2095, 2095, 2095,
	54972, -1000, -1000, -1000, -1000, -1000, -1000, -504, 167, 567,
	-1000, -1000, -1000, 5057, 53520, 1763, -1000, 229, -1000, 1803,
	-1000, 53520, -1000, 1737, 2035, 53520, 53520, -1000, -1000, -1000,
	53520, 1976, -1000, -1000, -1000, -1000, 504, 2361, 340, -1000,
	-1000, -264, -1000, -1000, 231, 229, 54246, 53520, 882, -1000,
	-1000, -1000, -1000, -1000, -505, 1733, 489, 233, 512, 54972,
	54972, 54972, 54972, 54972, 54972, 804, -1000, -1000, 45, -1000,
	-1000, 214, -1000, -1000, -1000, -1000, -1000, 214, -1000, -1000,
	-1000, -1000, -1000, 287, 473, -1000, 54972, 54972, 936, -1000,
	-1000, -1000, -1000, -1000, 1063, -1000, -1000, 1063, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2349, 54972,
	18, -471, -1000, -466, 21576, -1000, -1000, -1000, -1000, 1314,
	503, 1672, 23754, 23754, 1984, 1984, 23754, -1000, -1000, -1000,
	343, 343, 33192, -1000, 23754, 21576, -1000, -1000, 21576, 21576,
	21576, 971, -1000, 21576, 1195, -1000, 21576, -1000, -243, 1550,
	1607, 1607, 1607, 1607, -243, -243, -243, -243, -243, -243,
	-243, -243, -243, -243, 1894, -1000, 21576, 21576, 21576, 1520,
	312, -1000, -1000, -1000, -1000, -1000, 2602, -1000, 21576, -1000,
	33192, 21576, 21576, 21576, -1000, -1000, -1000, 21576, 21576, -1000,
	-1000, 21576, -1000, 21576, -1000, -1000, -1000, -1000, -1000, -1000,
	21576, -1000, 21576, -1000, -1000, -1000, 21576, -1000, 21576, -1000,
	-1000, 21576, -1000, 21576, -1000, 21576, -1000, 21576, -1000, 21576,
	-1000, 21576, -1000, 21576, -1000, 21576, -1000, 21576, -1000, 21576,
	-1000, 21576, -1000, 21576, -1000, 21576, -1000, 21576, -1000, 21576,
	-1000, 21576, -1000, 21576, -1000, 21576, -1000, -1000, -1000, 21576,
	-1000, 21576, -1000, 21576, -1000, -1000, 21576, -1000, 21576, -1000,
	21576, -1000, 21576, 21576, -1000, 21576, 21576, 21576, -1000, 21576,
	21576, 21576, 21576, -1000, -1000, -1000, -1000, 21576, 21576, 21576,
	21576, 21576, 21576, 21576, 21576, 21576, 21576, -1000, -1000, -1000,
	-1000, -1000, -1000, 21576, -1000, 39000, 58, -243, 1481, 58,
	1481, 23028, 835, 833, 22302, -1000, 21576, 15756, -1000, -1000,
	-1000, -1000, -1000, 21576, 21576, 21576, 21576, 21576, 21576, -1000,
	-1000, -1000, 21576, 21576, -1000, 21576, -1000, 21576, -1000, -1000,
	-1000, -1000, -1000, 954, -1000, 877, 853, 880, 53520, -1000,
	-1000, -1000, -1000, 1891, -1000, 2469, -1000, 2242, 2235, 2580,
	2535, 20850, -1000, 29562, -1000, -1000, 53520, -390, -1000, 2288,
	2240, 868, 868, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	12828, 2489, 21576, 2155, 54246, 253, -1000, 28836, 53520, 54246,
	29562, 29562, 29562, 29562, 29562, -1000, 2171, 2132, -1000, 2211,
	2203, 2229, 54972, -1000, 1669, 1727, -1000, 21576, 31740, 1821,
	29562, -1000, -1000, 29562, 54972, 12096, -1000, -1000, 11, 1,
	-1000, -1000, -1000, -1000, 1332, -1000, -1000, 1145, 2422, 2302,
	-1000, -1000, -1000, -1000, -1000, 1711, -1000, 1704, 1885, 1700,
	1698, 300, -1000, 2063, 2346, 939, 939, -1000, 1265, -1000,
	1343, 1531, 1528, -1000, -1000, -1000, 487, -1000, 2383, 54972,
	2148, 2146, 2136, -1000, -519, 1262, 2032, 2060, 21576, 2029,
	2548, 1855, 53520, -1000, -1000, 54246, -1000, 251, -1000, 425,
	53520, -1000, -1000, -1000, 348, 54972, -1000, 7071, -1000, -1000,
	-1000, 229, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 54972,
	248, -1000, 2028, 1199, -1000, -1000, 2014, -1000, -1000, -1000,
	-1000, -1000, 228, 223, 1494, 210, 1489, 210, -1000, 54972,
	934, 2133, 54972, -1000, -1000, -1000, 1075, 1075, -1000, -1000,
	2344, -1000, 1343, 1607, 23754, 23754, -1000, 895, -1000, -1000,
	408, -212, 2022, 2022, -1000, 2022, 2024, -1000, 2022, 169,
	2022, 164, 2022, -1000, -1000, 1520, 1520, -1000, 1550, 2270,
	1227, 2888, -1000, 1177, 21576, 2837, -1000, -1000, -243, -243,
	-243, -243, -243, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -56, 2830, 2641, 1607, -1000, 2020, 2019,
	21576, 1607, 1520, 2226, 1607, 1607, 1607, 1607, 1607, 1607,
	1607, 1607, 1607, 1607, 1607, 1607, 2219, 2206, 2202, 2198,
	2193, 2180, 2122, 2118, 2114, 2105, 2101, 2092, 2087, 2083,
	2077, 2073, 1607, 1607, 2005, 1607, 2000, 1989, -1000, 1177,
	1550, 2632, 1550, 1607, 1607, 2531, 296, 1607, 1694, 1694,
	1694, 1694, 1694, 1550, 1550, 1550, 1550, 1607, 53520, -1000,
	-243, -1000, -1000, -292, -307, -1000, 1520, -243, 1880, 23754,
	1607, 23754, 23754, 23754, 1607, 1520, -1000, 1969, 1927, 2379,
	1907, 1607, 2371, 1607, 1607, 1607, 1807, -1000, 2446, 1976,
	2446, 1976, 2446, 1681, 1184, 54972, -1000, -1000, -1000, -1000,
	2535, 2544, -1000, 1861, -1000, 95, 638, -1000, 2255, 2240,
	-1000, 2534, 2282, 2528, -1000, -1000, -1000, -1000, -1000, 1177,
	-1000, 2369, 1820, -1000, 943, 1879, -1000, -1000, 20124, 1683,
	2234, 818, 1681, 1913, 3349, 2120, 2135, 3323, -1000, -1000,
	-1000, -1000, 2128, -1000, 2015, -1000, -1000, 1994, -1000, 1995,
	360, 29562, 1899, 1899, -1000, 817, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1094, 7071, 2635, -1000, 1485, -1000, 1341,
	205, 1258, -1000, -1000, 939, 939, -1000, 1033, 1030, -1000,
	54972, 2018, -1000, 363, 1478, 363, 1239, -1000, -1000, 1236,
	-1000, -1000, -1000, -1000, 1990, 2495, -1000, -1000, -1000, -1000,
	54972, -1000, -1000, 54972, 54972, 54972, 2011, 2519, -1000, 21576,
	2010, 940, 2175, 53520, 53520, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 452, 939, -483, 305,
	302, 939, 939, 939, -520, -1000, -1000, 1664, 1654, -1000,
	-190, -1000, 21576, -1000, -1000, -1000, -1000, -1000, 1287, 1287,
	1476, 1471, 1469, -1000, 1994, -1000, -1000, -1000, 1795, -1000,
	-1000, -171, 53520, 53520, 53520, 53520, -1000, -1000, -1000, 1173,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 895, 1520, 345, -173, 1520, -1000, -1000, 363,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	21576, -1000, 21576, -1000, 21576, 1177, 21576, -1000, -1000, -1000,
	-1000, -1000, 2489, 1442, 21576, 21576, -1000, 1232, 1226, 1607,
	-1000, -1000, -1000, 21576, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 21576, -1000, 21576,
	-1000, 21576, -1000, 21576, -1000, 21576, -1000, 21576, -1000, 21576,
	-1000, 21576, -1000, 21576, -1000, 21576, -1000, 21576, -1000, 21576,
	-1000, 21576, -1000, 21576, -1000, 21576, -1000, 21576, -1000, -1000,
	21576, -1000, -1000, -1000, 21576, -1000, 21576, -1000, 21576, -1000,
	-1000, -1000, 21576, 307, 343, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1520, 353, -1000, -1000,
	-1000, 2567, -1000, 1520, 21576, 1984, -1000, 1984, 1984, 1984,
	-1000, -1000, -1000, 21576, -1000, 21576, 21576, -1000, 21576, -1000,
	21576, -1000, -1000, -1000, -1000, 21576, 1976, 2354, 38274, 1976,
	38274, 1976, 31740, -1000, -1000, 2544, 2498, 2518, 2256, 2272,
	2272, 2255, -1000, 2515, 2509, -1000, 1440, 2501, 1433, 1029,
	-1000, 54246, 21576, -1000, 253, 37548, -1000, 390, 53520, 253,
	53520, -1000, 2511, -1000, -1000, 21576, 2009, -1000, 21576, -1000,
	-1000, -1000, -1000, 5973, 2535, 1899, -1000, -1000, 905, -1000,
	21576, -1000, 10484, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1428, 1425, -1000, -1000, 2004, 21576, -1000, -1000, -1000,
	1734, 1712, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1994, -1000, -1000, -1000, -1000, 348, -509, 2161, 53520, 1202,
	-1000, 1642, 1855, 328, 253, 1417, 939, 939, 939, 1182,
	1167, 37548, 1640, -1000, 53520, 398, -1000, 348, -1000, -207,
	-208, 1607, -1000, -1000, 2420, -1000, -1000, 15756, -1000, -1000,
	1992, 2090, -1000, -1000, -1000, -1000, 2204, -164, -185, -1000,
	-1000, 1607, 1607, 1607, 1718, 1520, -1000, 1607, 1607, 1614,
	1604, -1000, 1607, 1607, 1607, 1607, 1607, 1607, 1607, 1607,
	1607, 1607, 1607, 1607, 1607, 1607, 1607, 1607, 1607, 1607,
	1607, 1607, 1550, 1801, -1000, 307, 1520, 2127, -1000, -1000,
	5973, -1000, -1000, 2511, 2499, 58, -1000, -1000, 227, 58,
	1177, 994, 1520, 1520, 994, 1731, 1607, 1691, 1686, 1607,
	1607, 32466, -1000, 2497, 2491, 1617, -1000, -1000, 38274, 1617,
	38274, 954, 2498, -250, 21576, 21576, 2262, 1137, -1000, -1000,
	-1000, -1000, 1414, 1412, -1000, 1369, -1000, 2629, -1000, 1177,
	-1000, 1976, 253, -1000, 812, 1879, -1000, 2489, 1177, 53520,
	1177, 89, 2511, -1000, 1607, -1000, 1976, 1976, 1976, 1976,
	1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
	1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
	1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
	1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
	1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
	1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
	1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
	1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
	1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
	1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
	1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
	1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976, 1976,
	1976, 1976, 1976, 1976, 1976, -1000, -1000, 53520, 2096, -1000,
	-1000, 2397, 1628, 165, -1000, 1572, 1855, -1000, -1000, 246,
	-1000, 21576, -1000, 37548, 1365, 1359, -1000, -1000, -1000, -1000,
	-520, -1000, -1000, -1000, -1000, -1000, -1000, 392, 1851, -1000,
	937, 53520, 54972, -1000, 2197, -1000, -1000, -1000, -1000, 21576,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 21576, -1000, 1520,
	2115, -1000, -352, -1000, -486, 21576, -243, -1000, -1000, -243,
	-1000, -1000, -1000, -1000, -1000, 21576, -1000, -1000, 21576, -1000,
	21576, -1000, -1000, 1617, -1000, -1000, -1000, 36822, -1000, 1617,
	-1000, 1617, -1000, -250, -1000, 1848, -1000, 53520, 1177, 1835,
	-1000, 1124, -1000, -1000, -1000, -1000, -1000, 54246, 53520, 1879,
	53520, -1000, -1000, 1598, 1520, 1976, 2489, -1000, 1571, -1000,
	392, -1000, 1985, 2060, -1000, -1000, -1000, 19398, -1000, -1000,
	-1000, -1000, -1000, 245, -170, 15756, 11364, 1552, -1000, -169,
	1607, 1550, -1000, -459, -1000, -1000, -1000, -1000, 284, -1000,
	-1000, 1835, -1000, -1000, 1613, 1603, 1582, -1000, -1000, -1000,
	-1000, -1000, -1000, -250, -1000, -1000, 2380, -1000, -1000, 1826,
	1519, -1000, -1000, -1000, 31740, 52794, -1000, -157, 416, -170,
	21576, 1978, 1520, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -8, -1000, -1000, 797, -1000, -1000, -1000, 2014, -175,
	-1000, -1000, -1000, 289, -475, -260, -281, 23754, -1000, 21576,
	-1000, 21576, -1000, 21576, -1000, 53520, 1976, -1000, -1000, 1475,
	-1000, 4170, -326, 2111, -1000, -97, -1000, -1000, -1000, 1078,
	1355, -1000, -1000, -1000, -1000, -1000, -1000, 1923, 53520, -1000,
	444, -1000, -1000, 15024, -171, -188, 1017, -1000, -1000, -1000,
	-1000, -1000, 1984, 1362, 1212, 1607, -1000, 53520, -1000, 52794,
	-320, 882, 5973, -1000, 2109, 2102, 2595, -1000, -1000, -1000,
	-1000, -1000, -1000, -522, 1439, 243, -1000, -1000, -1000, 289,
	-305, -1000, 21576, -1000, 21576, -1000, 1520, -1000, -1000, 2374,
	89, -1000, 2599, -1000, 2618, 1010, 1010, -1000, 1153, -522,
	-1000, -1000, -1000, -1000, 1607, 1607, -1000, -330, -1000, -1000,
	-1000, -1000, -1000, 434, 1180, -1000, -1000, -1000, -1000, -1000,
	5973, -1000, -1000, -1000, 281, 281, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3334, 3333, 27, 7, 40, 39, 3332, 3331, 3329,
	173, 3324, 3323, 3303, 3235, 3230, 3224, 2712, 2681, 2677,
	3216, 3212, 3210, 3207, 3205, 3204, 3201, 3200, 3199, 50,
	103, 91, 101, 206, 201, 3198, 182, 164, 196, 3196,
	3195, 3182, 117, 195, 78, 82, 194, 3181, 3180, 73,
	3177, 3166, 3163, 188, 187, 186, 1063, 3161, 184, 116,
	48, 3160, 3159, 3155, 3153, 3151, 3150, 3149, 3148, 3143,
	3141, 3137, 3136, 3134, 3133, 3130, 3128, 3127, 3126, 278,
	3125, 3122, 11, 3121, 75, 3119, 3118, 3117, 3114, 3110,
	9, 3109, 3107, 23, 34, 66, 3104, 3103, 51, 3102,
	3100, 3094, 3089, 3087, 45, 3086, 28, 3085, 33, 3084,
	3083, 126, 3082, 3079, 3077, 43, 3075, 3072, 3069, 12,
	170, 3064, 3062, 139, 3059, 3057, 3053, 165, 204, 3049,
	2183, 3044, 96, 3042, 3041, 3040, 163, 199, 3039, 121,
	3036, 3035, 3034, 151, 3029, 3274, 3028, 3024, 61, 79,
	167, 3023, 3021, 197, 71, 16, 3014, 17, 19, 3012,
	3011, 70, 72, 3008, 106, 3007, 3004, 104, 93, 3002,
	112, 105, 3001, 3000, 6, 8, 2999, 1, 4, 2,
	63, 2998, 2997, 111, 2996, 2994, 2993, 92, 2992, 2985,
	6420, 2984, 84, 131, 97, 65, 2980, 168, 157, 2976,
	2973, 2971, 2961, 2956, 49, 2953, 2941, 2935, 135, 24,
	108, 2933, 144, 351, 54, 146, 2932, 202, 74, 210,
	172, 2931, 2929, 137, 136, 2923, 2922, 59, 166, 192,
	2921, 90, 130, 120, 171, 85, 132, 2916, 2914, 58,
	69, 2913, 2908, 2906, 2904, 183, 2903, 2902, 62, 2898,
	56, 2896, 178, 2889, 337, 83, 2888, 176, 159, 2887,
	64, 2886, 2884, 100, 98, 60, 29, 2883, 155, 160,
	129, 158, 2880, 2878, 55, 2876, 2873, 2868, 200, 306,
	2842, 2840, 332, 174, 141, 147, 87, 2837, 318, 2836,
	2831, 14, 4375, 6767, 190, 31, 161, 2829, 2828, 7327,
	41, 44, 26, 2826, 205, 2825, 181, 2823, 2820, 2819,
	207, 203, 114, 156, 57, 2818, 2817, 2816, 37, 2813,
	2812, 2808, 2805, 2803, 2799, 38, 36, 35, 102, 215,
	68, 22, 95, 169, 152, 67, 2797, 2793, 2787, 125,
	89, 2784, 154, 153, 124, 162, 2782, 180, 142, 115,
	2775, 81, 32, 2769, 2768, 2767, 2761, 118, 2755, 2750,
	2747, 2744, 150, 143, 123, 77, 2741, 80, 119, 149,
	148, 52, 2739, 46, 2738, 2737, 30, 193, 25, 2736,
	42, 110, 109, 2735, 5931, 2732, 10, 317, 145, 2728,
	2727, 5, 13, 18, 2726, 2724, 2716, 2714, 134, 2713,
	2690, 2689, 2682, 21, 47, 20, 15, 113, 138, 76,
	2672, 2671, 140, 2664, 2663, 2662, 0, 1029, 127, 2653,
	208,
}

//line sql.y:8643
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) intPtrUnion() *int {
	v, _ := st.union.(*int)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalType {
	v, _ := st.union.(IntervalType)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) killTypeUnion() KillType {
	v, _ := st.union.(KillType)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) rowAliasUnion() *RowAlias {
	v, _ := st.union.(*RowAlias)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 414, 415, 415, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 260, 384, 258, 258, 28, 74, 36, 36, 35,
	35, 38, 38, 37, 31, 31, 31, 32, 32, 32,
	32, 32, 32, 32, 32, 33, 33, 33, 33, 33,
	29, 29, 29, 29, 30, 30, 30, 30, 30, 15,
	16, 34, 34, 17, 17, 109, 109, 18, 19, 19,
	19, 19, 418, 418, 185, 185, 183, 183, 184, 184,
	263, 263, 20, 267, 267, 269, 269, 269, 269, 259,
	259, 259, 21, 21, 268, 268, 270, 270, 270, 273,
	273, 273, 273, 313, 313, 313, 22, 22, 22, 22,
	22, 129, 129, 386, 386, 385, 380, 380, 379, 379,
	378, 383, 383, 382, 382, 381, 40, 41, 50, 50,
	50, 50, 51, 52, 387, 387, 353, 57, 57, 56,
	56, 56, 56, 56, 56, 58, 58, 54, 54, 53,
	53, 55, 55, 355, 355, 341, 341, 354, 354, 354,
	354, 354, 354, 354, 340, 340, 140, 140, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 402, 402, 402, 401, 401,
	238, 238, 238, 238, 238, 238, 238, 238, 149, 149,
	161, 161, 161, 161, 161, 161, 147, 147, 148, 146,
	146, 146, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 406,
	406, 406, 406, 406, 406, 406, 406, 406, 406, 406,
	406, 406, 406, 406, 406, 406, 406, 406, 406, 406,
	406, 406, 406, 406, 406, 406, 406, 406, 406, 406,
	406, 406, 406, 406, 406, 406, 406, 406, 406, 406,
	406, 160, 160, 155, 155, 155, 157, 157, 156, 156,
	156, 158, 158, 403, 403, 403, 403, 318, 318, 318,
	318, 321, 321, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 320, 320, 320, 320, 320, 320, 320, 322,
	322, 322, 322, 322, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	324, 324, 324, 324, 324, 324, 324, 324, 339, 339,
	328, 328, 333, 333, 334, 334, 335, 335, 335, 336,
	336, 336, 337, 337, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 332, 332, 331, 331, 331, 342, 367,
	367, 366, 366, 364, 364, 364, 364, 364, 364, 364,
	364, 351, 351, 361, 361, 361, 361, 361, 350, 350,
	346, 346, 346, 347, 347, 348, 348, 345, 345, 349,
	349, 363, 363, 362, 362, 343, 343, 344, 344, 369,
	404, 404, 404, 404, 404, 405, 405, 370, 394, 396,
	396, 396, 395, 395, 392, 393, 391, 391, 391, 391,
	391, 84, 84, 84, 286, 286, 287, 287, 359, 359,
	358, 358, 358, 360, 360, 357, 357, 357, 357, 357,
	357, 357, 357, 357, 357, 357, 357, 357, 357, 357,
	357, 357, 357, 357, 357, 357, 357, 357, 357, 357,
	357, 357, 357, 357, 357, 357, 281, 281, 281, 390,
	390, 390, 390, 390, 390, 389, 389, 389, 356, 356,
	356, 356, 388, 388, 59, 59, 218, 218, 407, 407,
	409, 409, 409, 47, 47, 47, 47, 47, 47, 46,
	46, 46, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 48, 48, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 111, 111, 112,
	112, 112, 112, 114, 114, 114, 372, 372, 60, 60,
	3, 3, 173, 175, 176, 176, 174, 174, 174, 174,
	174, 174, 62, 62, 61, 61, 178, 177, 179, 179,
	179, 1, 1, 2, 2, 4, 4, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 338,
	338, 338, 371, 371, 373, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 117, 116, 116, 115, 118,
	118, 118, 118, 118, 118, 118, 118, 375, 375, 375,
	63, 63, 376, 325, 326, 327, 5, 6, 352, 374,
	125, 125, 24, 39, 39, 25, 25, 25, 25, 26,
	26, 64, 67, 67, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 280, 280, 289,
	289, 279, 279, 304, 304, 304, 282, 282, 282, 283,
	283, 400, 400, 400, 276, 276, 66, 66, 66, 305,
	305, 305, 305, 69, 69, 410, 410, 411, 411, 412,
	412, 412, 70, 71, 71, 308, 308, 309, 309, 72,
	73, 85, 85, 85, 85, 85, 86, 86, 86, 86,
	110, 110, 110, 10, 10, 10, 10, 81, 81, 81,
	9, 9, 11, 68, 68, 75, 397, 397, 398, 399,
	399, 399, 399, 76, 78, 27, 27, 27, 27, 27,
	27, 135, 135, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 130, 130, 130, 124, 124,
	419, 79, 80, 80, 128, 128, 128, 121, 121, 121,
	127, 127, 127, 12, 12, 13, 262, 262, 14, 14,
	134, 134, 133, 133, 136, 136, 136, 136, 136, 136,
	136, 131, 131, 132, 132, 132, 132, 297, 297, 297,
	296, 296, 167, 167, 169, 168, 168, 170, 170, 171,
	171, 171, 171, 216, 216, 193, 193, 255, 255, 256,
	256, 254, 254, 261, 261, 257, 257, 257, 257, 264,
	264, 172, 172, 172, 172, 180, 180, 181, 181, 182,
	182, 307, 307, 302, 302, 302, 301, 301, 186, 186,
	186, 188, 187, 187, 187, 187, 189, 189, 191, 191,
	190, 190, 192, 197, 197, 196, 196, 194, 194, 194,
	194, 194, 194, 195, 195, 195, 195, 198, 198, 145,
	145, 145, 145, 145, 145, 145, 145, 408, 408, 159,
	159, 159, 159, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 245, 245, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 221, 221, 220, 220,
	87, 87, 87, 88, 88, 89, 89, 89, 89, 89,
	90, 90, 90, 90, 90, 90, 90, 92, 92, 91,
	91, 211, 211, 294, 294, 93, 94, 94, 95, 95,
	98, 98, 97, 96, 96, 102, 102, 99, 99, 101,
	101, 100, 103, 103, 104, 105, 105, 277, 277, 199,
	199, 207, 207, 207, 207, 200, 200, 200, 200, 200,
	200, 200, 208, 208, 208, 215, 209, 209, 205, 205,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 164, 164, 164, 164, 226, 226, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 152, 152, 165, 165, 165, 165, 166,
	166, 166, 166, 166, 166, 166, 315, 315, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 420, 420, 329, 329,
	329, 206, 206, 206, 206, 206, 126, 126, 126, 126,
	126, 312, 312, 312, 316, 316, 316, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 317, 317, 224, 224, 122, 122, 222, 222,
	223, 225, 225, 217, 217, 217, 217, 219, 219, 202,
	202, 202, 227, 227, 228, 228, 106, 107, 107, 108,
	108, 229, 229, 231, 230, 230, 232, 233, 233, 233,
	234, 234, 235, 235, 235, 49, 49, 49, 49, 49,
	44, 44, 44, 44, 45, 45, 45, 45, 137, 137,
	137, 137, 139, 139, 138, 138, 82, 82, 83, 83,
	83, 143, 143, 144, 144, 144, 141, 141, 142, 142,
	252, 252, 252, 252, 252, 252, 252, 236, 236, 236,
	243, 243, 243, 239, 239, 241, 241, 241, 242, 242,
	242, 240, 249, 249, 251, 251, 250, 250, 246, 246,
	247, 247, 248, 248, 248, 244, 244, 201, 201, 201,
	201, 201, 253, 253, 253, 253, 306, 306, 306, 265,
	265, 212, 212, 214, 214, 213, 213, 163, 266, 266,
	274, 271, 271, 272, 272, 298, 298, 298, 275, 275,
	288, 288, 284, 284, 285, 285, 278, 278, 290, 290,
	290, 77, 210, 210, 368, 368, 365, 293, 293, 295,
	295, 299, 299, 303, 303, 300, 300, 8, 413, 413,
	413, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 416, 417,
	310, 311, 311, 311,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 1, 2, 3, 2, 3, 0,
	1, 3, 1, 4, 3, 3, 4, 3, 2, 3,
	4, 3, 4, 2, 7, 1, 3, 3, 3, 3,
	1, 2, 1, 1, 3, 2, 3, 3, 2, 5,
	7, 10, 9, 7, 8, 1, 1, 10, 11, 9,
	8, 8, 1, 1, 1, 3, 1, 3, 1, 3,
	0, 4, 3, 1, 3, 3, 3, 3, 3, 1,
	1, 2, 5, 4, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 2, 2, 6, 12,
	2, 0, 2, 0, 2, 1, 0, 2, 1, 3,
	3, 0, 1, 1, 3, 3, 6, 4, 7, 8,
	8, 8, 6, 3, 1, 1, 5, 0, 1, 1,
	1, 1, 2, 2, 2, 0, 1, 4, 4, 4,
	4, 4, 4, 2, 4, 1, 3, 1, 1, 3,
	4, 3, 3, 3, 5, 10, 0, 2, 0, 2,
	3, 5, 3, 4, 2, 3, 2, 3, 3, 3,
	3, 2, 2, 4, 4, 1, 1, 1, 1, 1,
	0, 2, 2, 3, 3, 2, 2, 2, 1, 1,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 5, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 5, 1, 3, 0, 3, 5, 0,
	1, 1, 0, 1, 0, 3, 3, 2, 2, 2,
	1, 2, 2, 0, 1, 0, 2, 2, 5, 0,
	1, 1, 2, 1, 3, 2, 1, 1, 3, 3,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 4, 3, 1, 3, 1, 7,
	6, 7, 7, 8, 8, 0, 1, 5, 2, 1,
	1, 1, 0, 1, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 1, 1, 2, 0, 1, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	1, 1, 0, 1, 0, 1, 0, 2, 0, 2,
	0, 2, 2, 0, 1, 5, 1, 3, 7, 1,
	3, 3, 1, 2, 2, 2, 5, 5, 5, 6,
	8, 5, 5, 4, 4, 4, 6, 5, 5, 5,
	2, 2, 2, 2, 3, 3, 3, 4, 3, 3,
	1, 3, 5, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 3, 4, 4, 2, 11,
	3, 6, 8, 6, 6, 6, 13, 8, 6, 6,
	10, 7, 5, 5, 5, 7, 5, 5, 5, 5,
	5, 7, 7, 5, 5, 5, 5, 0, 6, 5,
	6, 4, 5, 0, 8, 9, 0, 3, 0, 1,
	0, 3, 8, 4, 1, 3, 3, 6, 7, 7,
	8, 4, 0, 1, 0, 1, 3, 3, 1, 1,
	2, 1, 1, 0, 2, 0, 2, 5, 3, 7,
	4, 4, 4, 4, 3, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 0,
	2, 2, 1, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 3, 1, 3, 3, 0,
	2, 2, 2, 2, 2, 2, 2, 4, 4, 3,
	0, 1, 4, 3, 4, 4, 3, 3, 3, 2,
	1, 3, 3, 3, 5, 7, 7, 6, 5, 3,
	2, 4, 5, 5, 3, 3, 7, 3, 3, 3,
	3, 4, 7, 5, 2, 4, 4, 4, 4, 4,
	5, 5, 4, 4, 4, 4, 4, 4, 4, 4,
	2, 2, 4, 4, 4, 4, 4, 2, 3, 3,
	3, 3, 3, 5, 2, 3, 3, 2, 3, 4,
	4, 4, 3, 4, 4, 5, 3, 0, 1, 0,
	1, 1, 1, 0, 2, 2, 0, 2, 2, 0,
	2, 0, 1, 1, 1, 1, 2, 1, 3, 1,
	1, 1, 1, 1, 3, 0, 1, 1, 3, 3,
	2, 2, 1, 1, 5, 0, 1, 0, 1, 2,
	3, 0, 3, 3, 3, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	4, 4, 4, 2, 2, 3, 1, 3, 2, 1,
	2, 1, 2, 2, 4, 3, 3, 6, 4, 7,
	6, 1, 3, 2, 2, 2, 2, 1, 1, 1,
	3, 2, 1, 1, 1, 0, 1, 1, 0, 3,
	0, 2, 0, 2, 1, 2, 2, 0, 1, 1,
	0, 1, 1, 5, 5, 4, 0, 2, 4, 4,
	0, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 1, 0, 1, 2, 1, 3, 1, 1, 1,
	4, 3, 1, 1, 2, 3, 7, 0, 3, 0,
	1, 1, 3, 1, 3, 1, 1, 3, 3, 1,
	3, 4, 4, 4, 3, 2, 4, 0, 1, 0,
	2, 0, 1, 0, 1, 2, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 2, 2, 2, 1,
	1, 3, 3, 0, 1, 1, 2, 6, 5, 6,
	6, 5, 5, 0, 2, 3, 3, 0, 2, 3,
	3, 3, 2, 3, 1, 3, 6, 1, 1, 3,
	4, 3, 1, 3, 4, 5, 6, 3, 4, 5,
	6, 3, 4, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 5, 5, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 3, 1, 1, 1, 2,
	2, 2, 2, 1, 1, 2, 7, 7, 6, 6,
	2, 2, 5, 6, 3, 3, 1, 3, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 4, 2, 4, 0, 1, 2,
	5, 0, 3, 0, 1, 4, 4, 2, 1, 0,
	0, 1, 1, 2, 2, 1, 1, 2, 2, 0,
	1, 1, 1, 1, 5, 1, 3, 0, 3, 1,
	1, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 4, 8, 8, 6, 8, 6, 5, 4, 10,
	2, 2, 1, 2, 2, 2, 2, 2, 5, 6,
	6, 6, 6, 6, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 8, 4, 8, 8, 6, 5,
	4, 4, 4, 4, 4, 7, 4, 4, 6, 6,
	6, 8, 6, 6, 4, 4, 3, 4, 6, 6,
	4, 4, 6, 4, 6, 4, 4, 4, 4, 4,
	4, 6, 4, 6, 4, 4, 4, 6, 4, 6,
	4, 4, 6, 4, 6, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 4, 4, 6, 4, 6, 4,
	8, 6, 4, 4, 6, 4, 6, 8, 4, 6,
	8, 4, 4, 6, 8, 6, 4, 6, 6, 8,
	10, 7, 8, 8, 9, 4, 4, 4, 4, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 4,
	4, 4, 4, 4, 4, 6, 4, 6, 5, 9,
	6, 9, 8, 6, 8, 8, 8, 6, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 6, 8,
	10, 12, 14, 6, 8, 8, 10, 12, 14, 6,
	8, 10, 12, 6, 8, 4, 4, 3, 4, 6,
	6, 4, 6, 4, 6, 8, 0, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 0, 2,
	3, 4, 4, 4, 4, 4, 0, 3, 4, 7,
	3, 1, 1, 1, 0, 5, 5, 2, 3, 1,
	2, 2, 1, 2, 1, 2, 2, 1, 2, 2,
	1, 1, 0, 1, 0, 1, 0, 2, 1, 2,
	4, 0, 2, 1, 1, 3, 5, 1, 1, 1,
	2, 2, 0, 3, 0, 2, 2, 1, 3, 0,
	1, 0, 1, 3, 1, 3, 2, 0, 1, 1,
	0, 1, 2, 4, 4, 0, 2, 2, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 0, 3,
	3, 3, 0, 3, 1, 1, 0, 4, 0, 1,
	1, 0, 3, 1, 3, 2, 1, 1, 0, 1,
	2, 3, 4, 2, 3, 4, 4, 9, 3, 5,
	0, 3, 3, 0, 1, 0, 2, 2, 0, 2,
	2, 2, 0, 2, 1, 2, 3, 3, 0, 2,
	1, 2, 3, 4, 3, 0, 1, 3, 1, 6,
	5, 4, 1, 3, 3, 5, 0, 2, 5, 0,
	5, 1, 3, 1, 2, 3, 4, 1, 1, 3,
	3, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 0, 3, 0, 1, 0, 1,
	1, 5, 0, 1, 0, 1, 2, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -414, -79, -419, -7, -29, -15, -16, -17, -18,
	-19, -20, -21, -22, -23, -24, -25, -26, -64, -67,
	-65, -66, -69, -70, -71, -72, -73, -9, -11, -68,
	-27, -28, -74, -75, -76, -77, -78, -12, -13, -14,
	-8, -32, -31, -30, 11, 12, -109, -35, 34, -40,
	-50, 229, -51, -41, 230, -52, 232, 231, 269, 233,
	382, 262, 76, 318, 319, 321, 322, 323, 324, -110,
	688, 267, 268, 235, 38, 47, 35, 36, 39, 239,
	275, 276, 238, 135, -33, -36, 10, -416, 13, 472,
	264, 263, 30, -34, 582, 88, -80, -415, 736, -252,
	-236, 24, 35, 31, -235, -231, -128, -236, 22, 20,
	9, -79, -79, -79, 14, 15, -79, -353, -355, 88,
	162, 88, -79, -57, -56, -54, -53, -55, -58, 33,
	-47, -48, -377, -46, -43, 234, 231, 279, 125, 126,
	269, 270, 271, 233, 253, 268, 272, 267, 288, -42,
	83, 35, 582, 585, -360, 230, 236, 237, 232, 473,
	128, 127, 77, -357, 377, 615, 706, -58, 708, 102,
	105, 707, 46, 243, 709, 710, 711, 622, 712, 252,
	713, 714, 715, 716, 722, 663, 723, 724, 725, 129,
	9, -79, -303, -299, 92, -292, 579, 255, 613, 426,
	614, 304, 83, 43, 518, 588, 374, 377, 615, 503,
	706, 383, 318, 334, 328, 508, 509, 510, 357, 349,
	580, 616, 589, 307, 256, 292, 700, 347, 138, 708,
	311, 617, 270, 384, 385, 618, 386, 102, 321, 423,
	721, 310, 619, 719, 105, 707, 326, 81, 502, 53,
	703, 46, 265, 431, 432, 345, 238, 341, 709, 293,
	620, 591, 286, 128, 125, 728, 38, 337, 52, 32,
	718, 127, 51, 710, 153, 621, 711, 622, 388, 364,
	694, 50, 389, 271, 623, 86, 276, 584, 315, 702,
	390, 523, 338, 391, 303, 717, 235, 624, 314, 683,
	675, 676, 392, 393, 695, 369, 365, 370, 525, 625,
	415, 507, 394, 679, 680, 735, 54, 626, 627, 696,
	126, 628, 80, 712, 82, 332, 333, 629, 301, 254,
	528, 529, 417, 361, 485, 492, 493, 112, 113, 488,
	114, 494, 115, 495, 496, 497, 486, 116, 109, 487,
	498, 499, 362, 363, 117, 500, 111, 110, 489, 491,
	118, 501, 252, 37, 395, 581, 305, 60, 309, 280,
	418, 48, 367, 732, 47, 690, 530, 630, 693, 360,
	356, 482, 55, 631, 632, 633, 634, 504, 713, 359,
	331, 355, 727, 4, 298, 477, 505, 714, 64, 237,
	372, 371, 373, 287, 414, 352, 635, 636, 637, 259,
	84, 638, 342, 23, 639, 640, 396, 294, 641, 58,
	642, 643, 421, 268, 644, 56, 715, 41, 645, 273,
	729, 716, 646, 647, 648, 689, 649, 275, 650, 398,
	651, 677, 678, 397, 366, 368, 531, 282, 399, 382,
	240, 583, 652, 316, 336, 272, 720, 653, 260, 519,
	520, 521, 522, 701, 527, 526, 274, 279, 267, 422,
	261, 654, 655, 656, 657, 658, 308, 674, 659, 660,
	322, 722, 483, 45, 661, 662, 663, 664, 665, 302,
	297, 416, 425, 63, 85, 379, 666, 667, 699, 330,
	327, 295, 463, 465, 466, 467, 468, 469, 464, 471,
	668, 319, 57, 723, 724, 725, 289, 726, 511, 512,
	513, 514, 11, 565, 548, 576, 549, 566, 550, 559,
	551, 567, 575, 577, 532, 540, 533, 541, 571, 554,
	568, 560, 553, 552, 574, 557, 561, 534, 542, 572,
	558, 535, 543, 536, 544, 537, 545, 570, 569, 562,
	573, 538, 546, 564, 539, 547, 563, 555, 556, 434,
	733, 734, 506, 401, 129, 299, 300, 49, 353, 281,
	669, 312, 670, 343, 344, 479, 480, 358, 329, 354,
	686, 320, 684, 283, 402, 484, 269, 671, 424, 296,
	375, 121, 380, 313, 587, 524, 288, 403, 698, 586,
	515, 516, 351, 348, 290, 517, 672, 688, 404, 244,
	284, 285, 673, 685, 405, 406, 306, 407, 408, 409,
	410, 411, 413, 317, 412, 687, 681, 682, 291, 462,
	585, 325, 346, 381, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	460, 461, 481, 242, -79, 242, -190, -299, -130, 690,
	692, 181, -271, 385, -289, 387, 400, 395, 405, 393,
	-280, 396, 398, 282, -400, 415, 242, 402, 229, 388,
	397, 406, 407, 306, 413, 408, 317, 412, 291, 409,
	410, 411, -384, 181, 711, 726, 138, 350, 392, 390,
	416, 690, 92, -305, 92, 93, 94, -292, 320, -308,
	325, -293, -384, -292, 323, -79, -79, -310, -310, -130,
	-209, -145, 146, -159, -260, -162, 93, -150, -153, -203,
	-204, -205, -206, -160, -219, -258, 170, 171, 178, 147,
	-215, -163, 28, 578, 474, 473, 181, 33, 224, 70,
	71, 476, 477, 149, 59, 13, 439, 440, -161, 429,
	430, 441, 435, 436, 502, 504, 505, 506, 503, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 507,
	518, 479, 480, 119, 481, 109, 111, 110, 482, 483,
	484, 347, 530, 531, 525, 528, 529, 527, 526, 362,
	363, 485, 548, 549, 553, 552, 550, 551, 554, 557,
	558, 559, 560, 561, 562, 564, 563, 555, 556, 533,
	532, 534, 535, 536, 537, 538, 539, 541, 540, 542,
	543, 544, 545, 546, 547, 565, 566, 567, 568, 569,
	571, 570, 575, 574, 572, 573, 577, 576, 486, 487,
	112, 113, 114, 115, 116, 117, 118, 488, 491, 489,
	490, 492, 493, 494, 499, 500, 495, 496, 497, 498,
	501, 373, 371, 372, 368, 367, 366, -89, -102, 604,
	603, -103, 426, 431, 432, 434, -151, -152, -165, -166,
	-293, -299, 247, 428, 241, 176, 472, -154, -148, -217,
	108, 94, -31, -213, 427, 437, 438, 442, 433, 443,
	590, 592, 607, 608, 610, 595, 600, 599, 602, 519,
	520, 521, 522, 523, 524, 675, 676, 677, 678, 679,
	680, 681, 682, -384, -292, 92, -157, -155, -199, 95,
	100, 103, 104, 106, -406, 265, 343, 344, 120, -416,
	704, -156, 97, 98, 99, 122, 123, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 91,
	96, 46, 401, 401, -190, -79, -79, -79, -79, -413,
	707, 583, -229, -128, -231, -33, -31, -416, 10, -79,
	-31, -32, -30, -36, -38, 609, -37, -299, 101, -236,
	-252, 14, 63, 165, 44, 52, -234, -235, -34, -31,
	-145, 21, 25, 26, -132, 172, -145, -299, -132, -278,
	246, -79, -79, -267, -313, 320, -269, 416, 690, 415,
	-259, -272, 92, -258, -271, 414, 93, -354, 162, -340,
	-344, -293, 257, -370, 253, -190, -363, -362, -293, -416,
	-129, -288, 243, 251, 250, 139, -387, 142, 299, 428,
	241, -53, -54, -55, -271, 180, 710, -111, 274, 278,
	89, 89, -344, -343, -342, -388, 278, 257, -369, -361,
	249, 258, -350, 250, 251, -345, 243, 140, -388, -345,
	248, 258, 253, 257, 278, 278, 129, 278, 129, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 273, -351,
	154, -351, 586, 586, -357, -388, 253, 243, -388, -388,
	249, -290, -345, 245, 27, 245, 37, 37, -351, -351,
	-351, -271, 180, -351, -351, -351, -351, 286, 286, -351,
	-351, -351, -351, -351, -351, -351, -351, -351, -351, -351,
	-351, -351, -351, -351, -351, -351, 242, -387, -137, 412,
	306, 83, -56, 288, -39, -190, -288, 243, 244, -387,
	275, -190, 225, 242, 693, -282, 162, 17, -282, -279,
	401, 399, 386, 391, -282, -282, -282, -282, 289, 384,
	-346, 243, 37, 254, 401, 289, 384, 289, 290, 289,
	290, 394, 404, 289, -304, 16, 165, 428, 389, 393,
	282, 242, 283, 244, 403, 290, -304, 91, -283, 162,
	289, 401, 395, 285, -282, -282, -311, -416, -295, -293,
	-291, 234, 25, 145, 27, 29, 148, 181, 132, 21,
	149, 39, 236, 350, 253, 180, 249, 473, 229, 74,
	590, 429, 436, 427, 435, 439, 475, 476, 428, 387,
	33, 15, 592, 30, 263, 26, 40, 174, 231, 152,
	593, 266, 28, 264, 119, 123, 595, 24, 77, 258,
	16, 251, 42, 18, 596, 597, 19, 247, 246, 165,
	243, 72, 13, 224, 31, 161, 68, 598, 140, 135,
	599, 600, 601, 602, 133, 70, 162, 22, 730, 437,
	438, 35, 691, 578, 277, 176, 75, 61, 692, 146,
	433, 603, 604, 120, 605, 124, 78, 697, 142, 20,
	73, 44, 606, 278, 607, 248, 731, 608, 419, 609,
	163, 232, 472, 71, 164, 704, 610, 705, 241, 400,
	10, 478, 34, 262, 250, 131, 69, 443, 611, 242,
	151, 245, 134, 122, 9, 139, 36, 14, 76, 79,
	440, 441, 442, 59, 130, 582, 150, 17, 612, 420,
	144, -384, 693, -311, -311, 34, 93, -410, -411, -412,
	582, 419, 245, -293, -190, -85, 683, 233, -86, 689,
	25, 240, -135, 401, -123, 181, 711, 694, 695, 696,
	693, 398, 701, 699, 697, 289, 698, 89, 142, 144,
	145, 4, -145, 161, -200, 154, 155, 156, 157, 158,
	159, 160, 166, 165, 146, 148, 162, -245, 143, 167,
	168, 169, 170, 171, 172, 173, 175, 174, 176, 177,
	163, 164, 180, 227, 228, -153, -153, -153, -153, -215,
	-221, -220, -416, -217, -384, -292, -299, -416, -416, -153,
	-277, -416, -150, -416, -416, -416, -416, -416, -224, -145,
	-416, -416, -420, -416, -420, -420, -420, -329, -416, -329,
	-329, -416, -416, -416, -416, -416, -416, -416, -416, -416,
	-416, -416, -416, -416, -416, -416, -416, -416, -416, -416,
	-416, -416, -416, -416, -416, -416, -416, -416, -416, -416,
	-416, -416, -416, -416, -416, -416, -416, -416, -416, -416,
	-416, -416, -416, -416, -416, -416, -416, -416, -416, -416,
	-416, -416, -416, -416, -416, -416, -416, -416, -416, -416,
	-416, -416, -416, -416, -416, -416, -416, -416, -416, -416,
	-416, -416, -416, -416, -416, -416, -416, -416, -416, -416,
	-416, -416, -416, -416, -416, -416, -416, -416, -416, -416,
	-416, -416, -416, -416, -416, -416, -416, -416, -416, -416,
	-416, -416, -416, -416, -416, -416, -416, -416, -416, -416,
	-416, -416, -416, -416, -416, -416, -416, -416, -416, -416,
	-416, -416, -416, -416, 225, -416, -416, -416, -416, -416,
	-329, -329, -329, -329, -329, -329, -416, -416, -416, -416,
	-416, -416, -416, -416, -416, -416, -416, -416, -416, -416,
	91, 104, 100, 103, 95, -219, 106, 91, 91, 91,
	91, -31, -32, -209, -416, -310, -397, -398, -193, -190,
	-416, 306, -293, -293, 275, 97, -234, -34, -31, -229,
	-235, -231, -31, -79, -121, -134, 65, 66, -133, -136,
	26, 40, 69, 67, 25, -417, 90, -417, -252, -417,
	89, -38, -255, 88, 637, 667, 637, 667, 63, 45,
	91, 91, 89, 23, -230, -232, -145, 16, -297, 4,
	-296, 27, -293, 91, 225, 16, -191, 31, -190, -278,
	-278, 89, 92, 320, -268, -270, 417, 419, 154, -298,
	-293, 91, 33, 90, 89, -190, -318, -321, -323, -322,
	-324, -319, -320, 347, 348, 181, 351, 353, 354, 355,
	356, 357, 358, 359, 360, 361, 364, 34, 265, 343,
	344, 345, 346, 365, 366, 367, 368, 370, 371, 372,
	373, 328, 349, 580, 329, 330, 331, 332, 333, 334,
	336, 337, 340, 338, 339, 341, 342, -294, -293, 88,
	90, 89, -328, 88, -145, -137, 242, -293, 243, 243,
	243, -79, 472, -351, -351, -351, 273, 21, -46, -43,
	-377, 20, -42, -43, 234, 125, 126, 231, 88, -340,
	88, -349, -294, -293, 88, 140, 248, 139, -348, -345,
	-348, -349, -293, -217, -293, 140, 140, -293, -293, -264,
	-293, -264, -264, 25, -264, 25, -264, 25, 97, -293,
	-264, 25, -264, 25, -264, 25, -264, 25, -264, 25,
	33, 80, 81, 82, 33, 84, 85, 86, -217, -293,
	-293, -217, -340, -217, -190, -293, -271, 97, 97, 97,
	-351, -351, 97, 91, 91, 91, -351, -351, 97, 91,
	-301, -299, 91, 91, -389, 259, 303, 305, 97, 97,
	97, 97, 33, 91, -390, 33, 718, 717, 719, 720,
	721, 91, 97, 33, 97, 33, 97, -293, 88, -190,
	-143, 293, 229, 231, 234, 78, 91, 309, 310, 307,
	312, 313, 314, 154, 46, 89, 245, 242, -293, -284,
	247, -284, -293, -300, -299, -291, -190, 245, 383, 91,
	-145, -347, 16, 165, -304, -304, -282, -190, -347, -304,
	-282, -190, -282, -282, -282, -282, -304, -304, -304, -282,
	-299, -299, -190, -190, -190, -190, -190, -190, -190, -311,
	-283, -282, 693, 91, -276, 16, 78, -311, -311, 89,
	326, 420, 421, -309, 323, -81, -293, 91, -10, -29,
	-18, -17, -19, 154, -10, 89, 582, -183, -190, 693,
	693, 693, 693, 693, 693, -145, -145, -145, -145, 605,
	-207, -408, 146, 122, 123, 120, 121, -162, -145, -208,
	-213, -215, 107, 165, 148, 162, -245, -150, -153, -150,
	-150, -150, -150, -150, -150, 224, -150, 224, -150, -150,
	-150, -150, -150, -150, -312, -293, 91, 181, -158, -157,
	106, -406, -158, 579, 89, -220, 225, -145, -145, -384,
	-119, 445, 446, 447, 448, 450, 451, 452, 455, 456,
	460, 461, 444, 462, 449, 454, 457, 458, 459, 453,
	346, -145, -210, -209, -210, -145, -145, -222, -223, 150,
	-217, -145, -417, -417, 97, 172, -127, 26, 40, -127,
	-127, -127, -127, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -127, -145, -120, 444, 462, 449, 454,
	457, 458, 459, 453, 346, 463, 464, 465, 466, 467,
	468, 469, 470, 471, -120, -119, -145, -145, -145, -145,
	-145, -145, -87, -145, 132, 133, 134, -209, -145, -150,
	-145, -145, -145, -417, -145, -145, -145, -210, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -383, -382, -381, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-209, -209, -209, -209, -209, -145, -417, -145, -164, -148,
	97, -260, 106, 93, -145, -145, -145, -145, -145, -145,
	-210, -295, -300, -291, -292, -209, -210, -210, -209, -209,
	-145, -145, -145, -145, -145, -145, -145, -145, -417, -145,
	-145, -145, -145, -145, -252, -417, -209, 89, -399, 419,
	420, 691, -302, 278, -301, 27, -210, 91, 16, -262,
	79, -293, -234, -234, 65, 66, 61, -131, -132, -136,
	-417, -37, 27, -254, -293, 630, 630, 64, 91, -330,
	-271, 374, 375, 181, -145, -145, 89, -233, 29, 30,
	-190, -296, 172, -300, -190, -263, 278, -190, -168, -170,
	-171, -172, -193, -216, -416, -173, -31, 601, 598, 16,
	-183, -184, -192, -299, -269, -313, -268, 89, 418, 420,
	421, 78, 124, -145, -331, 180, -359, -358, -357, -340,
	-342, -343, -344, 90, -331, -336, 380, 379, -328, -328,
	-328, -328, -328, -330, -330, -330, -330, 88, 88, -328,
	-328, -328, -328, -333, 88, -333, -333, -334, -333, 88,
	-334, -335, 88, -335, -370, -145, -367, -366, -364, -365,
	252, 102, 673, 629, 582, 622, 663, 79, -362, -233,
	97, -417, -143, -285, 247, -368, -365, -293, -293, -293,
	-285, 92, 91, 92, 91, 92, 91, -112, -60, -1,
	730, 731, 732, 89, 21, -341, -340, -59, 303, -373,
	-374, 278, -369, -363, -349, 140, -348, -349, -349, -293,
	89, 31, 129, 129, 129, 129, 582, 231, 34, -286,
	621, 146, 673, 629, -340, -59, 245, 245, -312, -312,
	-312, 91, 91, -281, 726, -183, -139, 295, 154, 284,
	284, 242, 297, 242, 297, -190, 308, 311, 309, 310,
	307, 312, 313, 314, 25, 25, 25, 25, 25, 25,
	296, 298, 300, 286, -190, -190, -284, 78, -185, -190,
	28, -299, 91, 91, -190, -282, -282, -190, -282, -282,
	-190, -412, 327, -293, 361, 684, 686, -123, 419, 89,
	582, 24, -124, 24, -416, -408, 122, 123, -208, -150,
	-153, -150, 145, 266, -150, -150, -416, -217, -417, -295,
	27, 89, 79, -417, 170, 89, -417, -417, 89, 16,
	89, -225, -223, 152, -145, -417, 89, -417, -417, -209,
	-145, -145, -145, -145, -417, -417, -417, -417, -417, -417,
	-417, -417, -417, -417, -209, -417, 89, 89, 16, -316,
	27, -417, -417, -417, -417, -417, -224, -417, 16, -417,
	79, 89, 165, 89, -417, -417, -417, 89, 89, -417,
	-417, 89, -417, 89, -417, -417, -417, -417, -417, -417,
	89, -417, 89, -417, -417, -417, 89, -417, 89, -417,
	-417, 89, -417, 89, -417, 89, -417, 89, -417, 89,
	-417, 89, -417, 89, -417, 89, -417, 89, -417, 89,
	-417, 89, -417, 89, -417, 89, -417, 89, -417, 89,
	-417, 89, -417, 89, -417, 89, -417, -417, -417, 89,
	-417, 89, -417, 89, -417, -417, 89, -417, 89, -417,
	89, -417, 89, 89, -417, 89, 89, 89, -417, 89,
	89, 89, 89, -417, -417, -417, -417, 89, 89, 89,
	89, 89, 89, 89, 89, 89, 89, -417, -417, -417,
	-417, -417, -417, 89, -94, 606, -417, -417, 89, -417,
	89, 89, 89, 89, 89, -417, -416, 225, -417, -417,
	-417, -417, -417, 89, 89, 89, 89, 89, 89, -417,
	-417, -417, 89, 89, -417, 89, -417, 89, -417, -398,
	690, 420, -197, -196, -194, 76, 246, 77, -416, -301,
	-417, -158, -260, -261, -260, -202, -293, 97, 106, -236,
	-167, 89, -169, 16, -215, 90, 89, -330, -240, -246,
	-279, -293, 91, 181, -332, 181, -332, 374, 375, -232,
	225, -198, 17, -201, 34, 59, -29, -416, -416, 34,
	89, -186, -188, -187, -189, 68, 72, 74, 69, 70,
	71, 75, -307, 27, -31, -168, -31, -416, -190, -183,
	-418, 16, 79, -418, 89, 225, -270, -273, 422, 419,
	425, -384, 91, -111, 89, -357, -344, -237, -140, 42,
	-337, 381, -330, 589, -330, -339, 91, -339, 97, 97,
	97, 90, -49, -44, -45, 35, 83, -364, -351, 91,
	41, -351, -351, -293, 90, -233, -139, -190, 146, 78,
	-368, -368, -368, -299, -2, 729, 735, 140, 88, 386,
	20, -254, 89, 90, -218, 304, 90, -113, -293, 90,
	88, -349, -349, -293, -416, 242, 33, 33, 673, 629,
	621, -59, -218, -217, -293, -331, 728, 727, 90, 244,
	302, -144, 439, -141, 91, 92, -190, -190, -190, -190,
	-190, -190, 234, 231, 409, -407, 315, -407, 287, 245,
	-183, -190, 89, -84, 261, 256, -304, -304, 35, -190,
	419, 702, 700, -145, 145, 266, -162, -153, -119, -119,
	-150, -314, 181, 347, 265, 345, 341, 361, 352, 379,
	343, 380, 338, 337, 336, -314, -312, -150, -209, -145,
	-145, -145, 153, -145, 151, -145, -95, -94, -417, -417,
	-417, -417, -417, -95, -95, -95, -95, -95, -95, -95,
	-95, -95, -95, -229, -145, -145, -145, -417, 181, 347,
	16, -145, -312, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -381, -145,
	-209, -145, -209, -145, -145, -145, -145, -145, -382, -382,
	-382, -382, -382, -209, -209, -209, -209, -145, -416, -293,
	-98, -97, -96, 656, 246, -94, -164, -98, -164, 224,
	-145, 224, 224, 224, -145, -210, -295, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -194, -345, 284,
	-345, 284, -345, -264, 89, -275, 24, 16, 59, 59,
	-167, -198, -132, -168, -293, -243, 683, -249, 48, -247,
	-248, 49, -244, 50, 58, -332, -332, 172, -234, -145,
	-265, 78, -266, -274, -217, -212, -214, -213, -416, -253,
	-417, -293, -264, -266, -170, -171, -171, -170, -171, 68,
	68, 68, 73, 68, 73, 68, -187, -299, -417, -145,
	-302, 79, -168, -168, -192, -299, 172, 419, 423, 424,
	-357, -405, 120, 146, 33, 78, 377, 102, -403, 180,
	618, 668, 673, 629, 622, 663, -404, 248, 139, 140,
	260, 27, 43, 90, 89, 90, 89, 90, 90, 89,
	-287, -286, -45, -44, -351, -351, 97, -384, 91, 91,
	244, 28, -190, 78, 78, 78, -114, 733, 97, 88,
	-3, 83, -145, 88, 21, -340, -217, -375, -325, -376,
	-326, -327, -5, -6, -352, -117, 59, 102, -63, 46,
	243, 713, 714, 129, -416, 726, -367, -254, -371, -373,
	-190, -149, -416, -161, -147, -146, -148, -154, 170, 171,
	265, 343, 344, -218, -190, -138, 293, 301, 88, -142,
	93, -386, 79, 284, 377, 284, 377, 91, -409, 316,
	91, -409, -190, -84, -49, -190, -282, -282, 35, -384,
	-417, -162, -153, -126, 165, 582, -317, 588, -328, -328,
	-328, -335, -328, 333, -328, 333, -328, -417, -417, -417,
	89, -417, 24, -417, 89, -145, 89, -95, -95, -95,
	-95, -95, -122, 478, 89, 89, -417, 88, 88, -145,
	-417, -417, -417, 89, -417, -417, -417, -417, -417, -417,
	-417, -417, -417, -417, -417, -417, -417, 89, -417, 89,
	-417, 89, -417, 89, -417, 89, -417, 89, -417, 89,
	-417, 89, -417, 89, -417, 89, -417, 89, -417, 89,
	-417, 89, -417, 89, -417, 89, -417, 89, -417, -417,
	89, -417, -417, -417, 89, -417, 89, -417, 89, -417,
	-417, -417, 89, -315, 674, -417, -417, -417, -417, -417,
	-417, -417, -417, -417, -417, -417, -93, -294, -94, 638,
	638, -417, -94, -226, 89, -150, -417, -150, -150, -150,
	-417, -417, -417, 89, -417, 89, 89, -417, 89, -417,
	89, -417, -417, -417, -417, 89, -195, 24, -416, -195,
	-416, -195, -417, -260, -190, -198, -227, 18, -240, 53,
	353, -251, -250, 57, 49, -248, 21, 51, 21, 32,
	-265, 89, 154, -306, 89, 27, -417, -417, 89, 59,
	225, -417, -198, -181, -180, 78, 79, -182, 78, -180,
	68, 68, -255, 89, -263, -168, -198, -198, 225, 120,
	-416, -149, 14, 91, 91, -384, -402, 717, 718, 33,
	97, -351, -351, 140, 140, -190, 88, -330, 91, -330,
	97, 97, 33, 84, 85, 86, 33, 80, 81, 82,
	-190, -190, -190, -190, -372, 88, 21, -145, 88, 154,
	90, -254, -254, 280, 165, -351, 711, 286, 286, -351,
	-351, -351, -116, -115, 733, 90, -417, 89, -338, 582,
	585, -145, -155, -155, -255, 90, -380, 582, -385, -293,
	-293, -293, -293, 97, 99, -417, 580, 75, 583, -417,
	-330, -145, -145, -145, -145, -234, 91, -145, -145, 97,
	97, -417, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -209, -145, -417, -178, -177, -179, 694, 120,
	33, -314, -417, -211, 278, -101, -100, -99, 16, -417,
	-145, -119, -119, -119, -119, -145, -145, -145, -145, -145,
	-145, -416, 68, 20, 18, -257, -293, 248, -416, -257,
	-416, -302, -227, -228, 19, 21, -241, 55, -239, 54,
	-239, -250, 21, 21, 91, 21, 91, 140, -274, -145,
	-214, -301, 59, -29, -293, -212, -293, -229, -145, 88,
	-145, -158, -198, -198, -145, -204, 502, 504, 505, 506,
	503, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 507, 518, 479, 480, 481, 109, 111, 110, 482,
	483, 484, 347, 530, 531, 525, 528, 529, 527, 526,
	362, 363, 485, 548, 549, 553, 552, 550, 551, 554,
	557, 558, 559, 560, 561, 562, 564, 563, 555, 556,
	533, 532, 534, 535, 536, 537, 538, 539, 541, 540,
	542, 543, 544, 545, 546, 547, 565, 566, 567, 568,
	569, 571, 570, 575, 574, 572, 573, 577, 576, 486,
	487, 112, 113, 114, 115, 116, 117, 118, 488, 491,
	489, 492, 493, 494, 499, 500, 495, 496, 497, 498,
	501, 373, 371, 372, 368, 367, 366, 426, 431, 432,
	434, 519, 520, 521, 522, 523, 524, 675, 676, 677,
	678, 679, 680, 681, 682, 91, 91, 88, -145, 90,
	90, -255, -371, -60, 90, -256, -254, 97, 90, 281,
	-213, -416, 91, -351, -351, -351, 97, 97, -301, -417,
	89, -293, -404, -373, 586, 586, -417, 27, -379, -378,
	-295, 88, 79, 64, 581, 584, -417, -417, -417, 89,
	-417, -417, -417, 90, 90, -417, -417, -417, -417, -417,
	-417, -417, -417, -417, -417, -417, -417, -417, -417, -417,
	-417, -417, -417, -417, -417, -417, -417, 89, -417, -177,
	-179, -417, 78, -158, -229, 21, -98, 303, 305, -98,
	-417, -417, -417, -417, -417, 89, -417, -417, 89, -417,
	89, -417, -417, -257, -417, 21, 21, 89, -417, -257,
	-417, -257, -197, -228, -108, -107, -106, 612, -145, -209,
	-242, 56, 78, 124, 91, 91, 91, 14, -416, -212,
	225, -306, -234, -254, -175, 386, -229, -417, -254, 90,
	27, 90, 735, 140, 90, -213, -125, -416, 277, -301,
	91, 91, -115, -118, -29, 89, 154, -254, -190, 64,
	-145, -209, -417, 78, 593, 694, -92, -91, -88, 705,
	731, -209, -94, -94, -145, -145, -145, -417, -293, 248,
	-417, -417, -108, 89, -105, -104, -293, 78, 124, -266,
	-254, -306, -293, 90, -417, -416, -234, 90, -238, -29,
	88, -3, 277, -325, -376, -326, -327, -5, -6, -352,
	-82, 582, -378, -356, -299, -295, 91, 97, 90, 582,
	-417, -417, -90, 148, 703, 671, -155, 224, -417, 89,
	-417, 89, -417, 89, -106, 89, 27, -417, -302, -176,
	-174, -293, 635, -395, -394, 578, -405, -401, 120, 146,
	102, -403, 673, 629, 130, 131, -82, -145, 88, -417,
	-83, 292, 690, 225, -386, 583, -90, 704, 649, 624,
	649, 624, -150, -145, -145, -145, -104, -416, -417, 89,
	24, -318, -62, 646, -392, -393, 78, -396, 392, 645,
	666, 120, 91, 90, -254, 253, -300, -380, 584, 145,
	-119, -417, 89, -417, 89, -417, -93, -174, 642, -331,
	-158, -393, 78, -392, 78, 15, 14, -4, 734, 90,
	294, -90, 649, 624, -145, -145, -417, -61, 28, -175,
	-391, 261, 256, 259, 34, -391, 97, -4, -417, -417,
	646, 255, 33, 120, -158, -178, -177, -177,
}

var yyDef = [...]int{
	880, -2, -2, 882, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	39, 70, 72, 73, 880, 880, 880, 0, 880, 0,
	0, 880, -2, -2, 880, 1623, 0, 880, 0, 875,
	0, -2, 797, 803, 0, 812, -2, 0, 0, 880,
	880, 2250, 2250, 875, 0, 0, 0, 0, 0, 880,
	880, 880, 880, 1628, 1481, 50, 880, 0, 85, 86,
	830, 831, 832, 65, 0, 2248, 881, 1, 3, 71,
	75, 0, 0, 0, 58, 1490, 0, 78, 0, 0,
	884, 0, 0, 1606, 880, 880, 0, 126, 127, 0,
	0, 0, -2, 130, -2, 159, 160, 161, 0, 166,
	607, 526, 578, 524, 563, -2, 512, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 529,
	401, 401, 0, 0, -2, 512, 512, 512, 1608, 0,
	0, 0, 560, 463, 401, 401, 401, 0, 401, 401,
	401, 401, 0, 0, 401, 401, 401, 401, 401, 401,
	401, 401, 401, 401, 401, 401, 401, 401, 401, 401,
	401, 1508, 165, 1624, 1621, 1622, 1781, 1782, 1783, 1784,
	1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794,
	1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804,
	1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814,
	1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824,
	1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834,
	1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844,
	1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854,
	1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864,
	1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874,
	1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884,
	1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894,
	1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904,
	1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914,
	1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924,
	1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934,
	1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944,
	1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954,
	1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964,
	1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974,
	1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984,
	1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994,
	1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,
	2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014,
	2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024,
	2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034,
	2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044,
	2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054,
	2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064,
	2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074,
	2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084,
	2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094,
	2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104,
	2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114,
	2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124,
	2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134,
	2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144,
	2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154,
	2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164,
	2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174,
	2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184,
	2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194,
	2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204,
	2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214,
	2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224,
	2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234,
	2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244,
	2245, 2246, 2247, 0, 1600, 0, 720, 980, 0, 876,
	877, 0, 786, 786, 0, 786, 786, 786, 786, 0,
	0, 0, 734, 0, 0, 0, 0, 783, 0, 750,
	751, 0, 783, 0, 757, 789, 0, 0, 764, 786,
	786, 767, 2251, 0, 2251, 2251, 1591, 0, 780, 778,
	792, 793, 42, 796, 799, 800, 801, 802, 805, 0,
	816, 819, 1617, 1618, 0, 821, 826, 843, 844, 0,
	45, 1136, 0, 1004, 0, 1012, -2, 1023, 1040, 1041,
	1042, 1043, 1044, 1046, 1047, 1048, 0, 0, 0, 0,
	1053, 1054, 0, 0, 0, 0, 0, 1117, 0, 0,
	0, 0, 1980, 1454, 0, 0, 1416, 1416, 1152, 1416,
	1416, 1418, 1418, 1418, 1833, 1972, 1981, 2157, 1794, 1800,
	1801, 1802, 2103, 2104, 2105, 2106, 2195, 2196, 2200, 1896,
	1789, 2170, 2171, 0, 2247, 1933, 1941, 1942, 1966, 2067,
	2180, 1812, 1961, 2031, 1893, 1915, 1916, 2049, 2050, 1937,
	1938, 1919, 2109, 2111, 2127, 2128, 2113, 2115, 2124, 2130,
	2135, 2114, 2126, 2131, 2144, 2148, 2151, 2152, 2153, 2121,
	2119, 2132, 2136, 2138, 2140, 2146, 2149, 2122, 2120, 2133,
	2137, 2139, 2141, 2147, 2150, 2108, 2112, 2116, 2125, 2143,
	2123, 2142, 2117, 2129, 2134, 2145, 2118, 2110, 1931, 1934,
	1922, 1923, 1925, 1927, 1932, 1939, 1945, 1924, 1944, 1943,
	0, 1920, 1921, 1926, 1936, 1940, 1928, 1929, 1930, 1935,
	1946, 1987, 1986, 1985, 2030, 1957, 2029, 0, 0, 0,
	0, 0, 1784, 1838, 1839, 2154, 1338, 1339, 1340, 1341,
	0, 0, 0, 0, 0, 0, 0, 291, 292, 1467,
	1468, 44, 1135, 1587, 1418, 1418, 1418, 1418, 1418, 1418,
	1075, 1076, 1077, 1078, 1079, 1105, 1106, 1112, 1113, 2044,
	2045, 2046, 2047, 1876, 2190, 1885, 1886, 2026, 2027, 1898,
	1899, 2221, 2222, -2, -2, -2, 232, 233, 234, 235,
	236, 237, 238, 239, 0, 1837, 2168, 2169, 228, 0,
	0, 296, 293, 294, 295, 1119, 1120, 249, 250, 251,
	252, 253, 254, 255, 256, 257, 258, 259, 260, 261,
	262, 263, 264, 265, 266, 267, 268, 269, 270, 271,
	272, 273, 274, 275, 276, 277, 278, 279, 280, 281,
	282, 283, 284, 285, 286, 287, 288, 289, 290, 298,
	299, 2250, 0, 853, 0, 0, 0, 0, 0, 0,
	1629, 1630, 1490, 0, 1482, 1481, 63, 0, 880, -2,
	0, 0, 0, 0, 47, 0, 52, 937, 883, 77,
	76, 1530, 1533, 0, 0, 0, 59, 1491, 67, 69,
	1492, 0, 885, 886, 0, 913, 917, 0, 0, 0,
	1607, 1606, 1606, 102, 0, 0, 103, 123, 124, 125,
	0, 0, 109, 110, 1593, 1594, 43, 0, 0, 177,
	178, 0, 1093, 428, 0, 173, 0, 421, 360, 0,
	1508, 0, 0, 0, 0, 0, 880, 0, 1601, 154,
	155, 162, 163, 164, 401, 401, 401, 575, 0, 0,
	165, 165, 533, 534, 535, 0, 0, -2, 426, 0,
	513, 0, 0, 415, 415, 419, 417, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 552, 0, 553, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 668, 0,
	402, 0, 573, 574, 464, 0, 0, 0, 0, 0,
	0, 0, 0, 1609, 1610, 0, 550, 551, 0, 0,
	0, 401, 401, 0, 0, 0, 0, 401, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 153, 1521, 0,
	0, 0, -2, 0, 712, 0, 0, 0, 1602, 1602,
	0, 719, 0, 0, 0, 724, 0, 0, 725, 0,
	783, 783, 781, 782, 727, 728, 729, 730, 786, 0,
	0, 410, 411, 412, 783, 786, 0, 786, 786, 786,
	786, 783, 783, 783, 786, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2251, 789, 786, 0, 758, 0,
	759, 760, 761, 762, 765, 766, 768, 2252, 2253, 1619,
	1620, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639,
	1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649,
	1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659,
	1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669,
	1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679,
	1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689,
	1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699,
	1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709,
	1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719,
	1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729,
	1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739,
	1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749,
	1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759,
	1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769,
	1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779,
	1780, 2251, 2251, 772, 776, 1592, 798, 804, 806, 807,
	0, 0, 817, 820, 837, 49, 1884, 825, 49, 827,
	828, 829, 855, 856, 861, 0, 0, 0, 0, 867,
	868, 869, 0, 0, 872, 873, 874, 0, 0, 0,
	0, 0, 1002, 0, 0, 1125, 1126, 1127, 1128, 1129,
	1130, 1131, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1024, 1025, 0, 0, 0, 1049, 1050, 1051, 1052, 1055,
	0, 1066, 0, 1068, 1463, -2, 0, 0, 0, 1060,
	1061, 0, 0, 0, 1612, 1612, 0, 0, 0, 1455,
	0, 0, 1150, 0, 1151, 1153, 1154, 1155, 0, 1156,
	1157, 890, 890, 890, 890, 890, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 890, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1612, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 141, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1612, 0, 0, 1612, 1612, 0, 0,
	220, 221, 222, 223, 224, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 240, 241, 242, 243, 244, 245, 300, 246, 247,
	248, 1135, 0, 0, 0, 46, 845, 846, 0, 963,
	1612, 0, 0, 896, 0, 1627, 57, 66, 68, 1490,
	61, 1490, 0, 900, 0, 0, -2, -2, 901, 902,
	906, 907, 908, 909, 910, 54, 2249, 55, 0, 74,
	0, 48, 0, 0, 1531, 0, 1534, 0, 0, 0,
	374, 1538, 0, 0, 1483, 1484, 1487, 0, 914, 1978,
	918, 0, 920, 921, 0, 0, 100, 0, 979, 0,
	0, 0, 111, 0, 113, 114, 0, 0, 0, 385,
	1595, 1596, 1597, -2, 408, 0, 385, 369, 308, 309,
	310, 360, 312, 360, 360, 360, 360, 374, 374, 374,
	374, 343, 344, 345, 346, 347, 0, 0, 329, 360,
	360, 360, 360, 350, 351, 352, 353, 354, 355, 356,
	357, 313, 314, 315, 316, 317, 318, 319, 320, 321,
	362, 362, 362, 362, 362, 366, 366, 0, 1094, 0,
	389, 0, 1487, 0, 0, 1521, 1604, 1614, 0, 0,
	0, 1604, 132, 0, 0, 0, 576, 618, 527, 564,
	577, 0, 530, 531, -2, 0, 0, 512, 0, 514,
	0, 409, 0, -2, 0, 419, 0, 415, 419, 416,
	419, 407, 420, 554, 555, 556, 0, 558, 559, 648,
	949, 0, 0, 0, 0, 0, 654, 655, 656, 0,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	565, 566, 567, 568, 569, 570, 571, 572, 0, 0,
	0, 0, 514, 0, 561, 0, 0, 465, 466, 467,
	0, 0, 470, 471, 472, 473, 0, 0, 476, 477,
	478, 966, 967, 479, 480, 505, 506, 507, 481, 482,
	483, 484, 485, 486, 487, 499, 500, 501, 502, 503,
	504, 488, 489, 490, 491, 492, 493, 496, 0, 147,
	1512, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1602, 0, 0,
	0, 0, 899, 981, 1625, 1626, 721, 0, 0, 787,
	788, 0, 413, 414, 786, 786, 731, 773, 0, 786,
	735, 774, 736, 738, 737, 739, 752, 753, 786, 742,
	784, 785, 743, 744, 745, 746, 747, 748, 749, 769,
	754, 755, 756, 790, 0, 794, 795, 770, 771, 0,
	0, 810, 811, 0, 818, 840, 838, 839, 841, 833,
	834, 835, 836, 0, 842, 0, 0, 858, 96, 863,
	864, 865, 866, 878, 871, 1137, 999, 1000, 1001, 0,
	1003, 1009, 0, 1121, 1123, 1007, 1008, 1011, 1005, 1013,
	1132, 1133, 1134, 0, 0, 0, 0, 0, 1017, 1021,
	1026, 1027, 1028, 1029, 1030, 0, 1031, 0, 1034, 1035,
	1036, 1037, 1038, 1039, 1045, 1431, 1432, 1433, 1064, 301,
	302, 0, 1065, 0, 0, 0, 0, 0, 0, 0,
	0, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386,
	1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396,
	1397, 1136, 0, 1613, 0, 0, 0, 1461, 1458, 0,
	0, 0, 1417, 1419, 0, 0, 0, 891, 892, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1398, 1399, 1400, 1401,
	1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411,
	1412, 1413, 1414, 1415, 0, 0, 1434, 0, 0, 0,
	0, 0, 1454, 0, 1070, 1071, 1072, 0, 0, 0,
	0, 0, 0, 1196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 142, 143, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1342,
	1343, 1344, 1345, 41, 0, 0, 0, 0, 0, 0,
	0, 1465, 0, -2, -2, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1367, 0,
	0, 0, 0, 0, 0, 1585, 0, 0, 848, 849,
	851, 0, 983, 0, 964, 0, 0, 854, 0, 895,
	0, 898, 60, 62, 904, 905, 0, 922, 911, 903,
	56, 51, 0, 0, 941, 1532, 1535, 1536, 374, 1558,
	0, 383, 383, 380, 1493, 1494, 0, 1486, 1488, 1489,
	79, 919, 915, 0, 997, 0, 0, 978, 0, 925,
	927, 928, 929, 961, 0, 932, 933, 0, 0, 0,
	0, 0, 98, 980, 104, 0, 112, 0, 0, 117,
	118, 105, 106, 107, 108, 0, 607, -2, 460, 179,
	181, 182, 183, 174, -2, 372, 370, 371, 311, 374,
	374, 337, 338, 339, 340, 341, 342, 0, 0, 330,
	331, 332, 333, 322, 0, 323, 324, 325, 364, 0,
	326, 327, 0, 328, 427, 0, 1495, 390, 391, 393,
	401, 0, 396, 397, 0, 401, 401, 0, 422, 423,
	0, 1487, 1512, 0, 0, 0, 1615, 1614, 1614, 1614,
	0, 167, 168, 169, 170, 171, 172, 643, 0, 0,
	619, 641, 642, 165, 0, 0, 175, 516, 515, 0,
	675, 0, 425, 0, 0, 419, 419, 404, 405, 557,
	0, 0, 650, 651, 652, 653, 0, 0, 0, 543,
	454, 0, 544, 545, 514, 516, 0, 0, 385, 468,
	469, 474, 475, 494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 592, 593, 594, 597,
	599, 518, 603, 605, 596, 598, 600, 518, 604, 606,
	1509, 1510, 1511, 0, 0, 713, 0, 0, 451, 94,
	1603, 718, 722, 723, 783, 741, 775, 783, 733, 740,
	763, 808, 809, 814, 822, 823, 824, 862, 0, 0,
	0, 0, 870, 0, 0, 1010, 1122, 1124, 1014, 0,
	1018, 1022, 0, 0, 0, 0, 0, 1069, 1067, 1465,
	0, 0, 0, 1118, 0, 0, 1140, 1141, 0, 0,
	0, 0, 1459, 0, 0, 1148, 0, 1420, 1099, 0,
	0, 0, 0, 0, 1099, 1099, 1099, 1099, 1099, 1099,
	1099, 1099, 1099, 1099, 1481, 1175, 0, 0, 0, 0,
	0, 1180, 1181, 1182, 1183, 1184, 0, 1186, 0, 1187,
	0, 0, 0, 0, 1194, 1195, 1197, 0, 0, 1200,
	1201, 0, 1203, 0, 1205, 1206, 1207, 1208, 1209, 1210,
	0, 1212, 0, 1214, 1215, 1216, 0, 1218, 0, 1220,
	1221, 0, 1223, 0, 1225, 0, 1228, 0, 1231, 0,
	1234, 0, 1237, 0, 1240, 0, 1243, 0, 1246, 0,
	1249, 0, 1252, 0, 1255, 0, 1258, 0, 1261, 0,
	1264, 0, 1267, 0, 1270, 0, 1273, 1274, 1275, 0,
	1277, 0, 1279, 0, 1282, 1283, 0, 1285, 0, 1288,
	0, 1291, 0, 0, 1292, 0, 0, 0, 1296, 0,
	0, 0, 0, 1305, 1306, 1307, 1308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1319, 1320, 1321,
	1322, 1323, 1324, 0, 1326, 0, 1100, 0, 0, 1100,
	0, 0, 0, 0, 0, 1138, 1612, 0, 1421, 1422,
	1423, 1424, 1425, 0, 0, 0, 0, 0, 0, 1365,
	1366, 1368, 0, 0, 1371, 0, 1373, 0, 1586, 847,
	850, 852, 935, 984, 985, 0, 0, 0, 0, 965,
	1611, 893, 894, 897, 943, 0, 1469, 0, 0, 922,
	997, 0, 923, 0, 53, 938, 0, 1540, 1539, 1552,
	1565, 383, 383, 377, 378, 384, 379, 381, 382, 1485,
	0, 1490, 0, 1579, 0, 0, 1568, 0, 0, 0,
	0, 0, 0, 0, 0, 968, 0, 0, 971, 0,
	0, 0, 0, 962, 933, 0, 934, 0, -2, 0,
	0, 92, 93, 0, 0, 0, 115, 116, 0, 0,
	122, 386, 387, 156, 165, 462, 180, 435, 0, 0,
	307, 373, 334, 335, 336, 0, 358, 0, 0, 0,
	0, 456, 128, 1499, 1498, 401, 401, 392, 0, 395,
	0, 0, 0, 1616, 361, 424, 0, 146, 0, 0,
	0, 0, 0, 152, 613, 0, 0, 620, 0, 0,
	0, 525, 0, 536, 537, 0, 647, -2, 709, 389,
	0, 403, 406, 950, 0, 0, 538, 0, 541, 542,
	455, 516, 547, 548, 562, 549, 497, 498, 495, 0,
	0, 1522, 1523, 1528, 1526, 1527, 133, 583, 585, 589,
	584, 588, 0, 0, 0, 520, 0, 520, 581, 0,
	451, 1495, 0, 717, 452, 453, 786, 786, 857, 97,
	0, 860, 0, 0, 0, 0, 1015, 1019, 1032, 1033,
	1426, 1452, 360, 360, 1439, 360, 366, 1442, 360, 1444,
	360, 1447, 360, 1450, 1451, 0, 0, 1062, 0, 0,
	0, 0, 1147, 1462, 0, 0, 1158, 1098, 1099, 1099,
	1099, 1099, 1099, 1164, 1165, 1166, 1167, 1168, 1169, 1170,
	1171, 1172, 1173, 1456, 0, 0, 0, 1179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 144, 145,
	0, 0, 0, 0, 0, 0, 1376, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1093, 1097,
	0, 1101, 1102, 0, 0, 1328, 0, 0, 1346, 0,
	0, 0, 0, 0, 0, 0, 1466, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 986, 993, 0,
	993, 0, 993, 0, 0, 0, 1598, 1599, 1470, 1471,
	997, 1472, 912, 924, 942, 1558, 0, 1551, 0, -2,
	1560, 0, 0, 0, 1566, 375, 376, 916, 80, 998,
	83, 0, 1579, 1588, 0, 1576, 1581, 1583, 0, 0,
	0, 1572, 0, 997, 926, 957, 959, 0, 954, 969,
	970, 972, 0, 974, 0, 976, 977, 937, 931, 0,
	100, 0, 997, 997, 99, 0, 982, 119, 120, 121,
	461, 184, 189, 0, 0, 0, 194, 0, 196, 0,
	0, 0, 201, 202, 401, 401, 436, 0, 304, 306,
	0, 0, 187, 374, 0, 374, 0, 365, 367, 0,
	437, 457, 1496, 1497, 0, 0, 394, 398, 399, 400,
	0, 1605, 148, 0, 0, 0, 616, 0, 644, 0,
	0, 0, 0, 0, 0, 176, 517, 676, 677, 678,
	679, 680, 681, 682, 683, 684, 0, 401, 0, 0,
	0, 401, 401, 401, 0, 701, 388, 0, 0, 672,
	669, 539, 0, 218, 219, 226, 227, 229, 0, 0,
	0, 0, 0, 546, 937, 1513, 1514, 1515, 0, 1525,
	1529, 136, 0, 0, 0, 0, 591, 595, 601, 0,
	519, 602, 714, 715, 716, 95, 726, 732, 859, 879,
	1006, 1016, 1020, 0, 0, 0, 0, 1453, 1437, 374,
	1440, 1441, 1443, 1445, 1446, 1448, 1449, 1058, 1059, 1063,
	0, 1144, 0, 1146, 0, 1460, 0, 1159, 1160, 1161,
	1162, 1163, 1490, 0, 0, 0, 1178, 0, 0, 0,
	1189, 1188, 1190, 0, 1192, 1193, 1198, 1199, 1202, 1204,
	1211, 1213, 1217, 1219, 1222, 1224, 1226, 0, 1229, 0,
	1232, 0, 1235, 0, 1238, 0, 1241, 0, 1244, 0,
	1247, 0, 1250, 0, 1253, 0, 1256, 0, 1259, 0,
	1262, 0, 1265, 0, 1268, 0, 1271, 0, 1276, 1278,
	0, 1281, 1284, 1286, 0, 1289, 0, 1293, 0, 1295,
	1297, 1298, 0, 0, 0, 1309, 1310, 1311, 1312, 1313,
	1314, 1315, 1316, 1317, 1318, 1325, 0, 1091, 1327, 1103,
	1104, 1109, 1330, 0, 0, 0, 1333, 0, 0, 0,
	1337, 1139, 1348, 0, 1353, 0, 0, 1359, 0, 1363,
	0, 1369, 1370, 1372, 1374, 0, 0, 0, 0, 0,
	0, 0, 963, 944, 64, 1472, 1474, 0, 1545, 1543,
	1543, 1553, 1554, 0, 0, 1561, 0, 0, 0, 0,
	84, 0, 0, 1567, 0, 0, 1584, 0, 0, 0,
	0, 101, 1481, 951, 958, 0, 0, 952, 0, 953,
	973, 975, 930, 0, 997, 997, 90, 91, 0, 190,
	0, 192, 0, 195, 197, 198, 199, 205, 206, 207,
	200, 0, 0, 303, 305, 0, 0, 348, 359, 349,
	0, 0, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507,
	937, 149, 150, 151, 608, 0, 618, 0, 939, 0,
	611, 0, 528, 0, 0, 0, 401, 401, 401, 0,
	0, 0, 0, 686, 0, 0, 649, 0, 657, 0,
	0, 0, 230, 231, 0, 1524, 582, 0, 134, 135,
	0, 0, 587, 521, 522, 1056, 0, 0, 0, 1057,
	1438, 0, 0, 0, 0, 0, 1457, 0, 0, 0,
	0, 1185, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1301, 0, 0, 0, 638, 639,
	0, 1377, 1096, 1481, 0, 1100, 1110, 1111, 0, 1100,
	1347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 994, 0, 0, 0, 945, 946, 0, 0,
	0, 983, 1474, 1479, 0, 0, 1548, 0, 1541, 1544,
	1542, 1555, 0, 0, 1562, 0, 1564, 0, 1589, 1590,
	1582, 1577, 0, 1571, 1574, 1576, 1573, 1490, 955, 0,
	960, 0, 1481, 89, 0, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 203, 204, 0, 0, 363,
	368, 0, 0, 0, 609, 0, 940, 621, 612, 0,
	699, 0, 703, 0, 0, 0, 706, 707, 708, 685,
	0, 689, 429, 673, 670, 671, 540, 0, 137, 138,
	0, 0, 0, 1427, 0, 1430, 1142, 1145, 1143, 0,
	1174, 1176, 1177, 1435, 1436, 1191, 1227, 1230, 1233, 1236,
	1239, 1242, 1245, 1248, 1251, 1254, 1257, 1260, 1263, 1266,
	1269, 1272, 1280, 1287, 1290, 1294, 1299, 0, 1302, 0,
	0, 1303, 0, 640, 1087, 0, 0, 1107, 1108, 0,
	1332, 1334, 1335, 1336, 1349, 0, 1354, 1355, 0, 1360,
	0, 1364, 1375, 0, 988, 995, 996, 0, 991, 0,
	992, 0, 936, 1479, 82, 1480, 1477, 0, 1475, 1473,
	1537, 0, 1546, 1547, 1556, 1557, 1563, 0, 0, 1576,
	0, 1570, 87, 0, 0, 0, 1490, 191, 0, 210,
	0, 617, 0, 620, 610, 697, 698, 0, 710, 702,
	704, 705, 687, -2, 1516, 0, 0, 0, 590, 1428,
	0, 0, 1304, 0, 636, 637, 1095, 1088, 0, 1073,
	1074, 1092, 1329, 1331, 0, 0, 0, 987, 947, 948,
	989, 990, 81, 0, 1476, 1115, 0, 1549, 1550, 1580,
	0, 1569, 1575, 956, 963, 0, 88, 442, 435, 1516,
	0, 0, 0, 690, 691, 692, 693, 694, 695, 696,
	579, 1518, 139, 140, 0, 509, 510, 511, 133, 0,
	1149, 1300, 1089, 0, 0, 0, 0, 0, 1350, 0,
	1356, 0, 1361, 0, 1478, 0, 0, 1578, 622, 0,
	624, 0, -2, 430, 443, 0, 185, 211, 212, 0,
	0, 215, 216, 217, 208, 209, 129, 0, 0, 711,
	0, 1519, 1520, 0, 136, 0, 0, 1080, 1081, 1082,
	1083, 1085, 0, 0, 0, 0, 1116, 1093, 623, 0,
	0, 385, 0, 633, 431, 432, 0, 438, 439, 440,
	441, 213, 214, 645, 0, 0, 508, 586, 1429, 0,
	0, 1351, 0, 1357, 0, 1362, 0, 625, 626, 634,
	0, 433, 0, 434, 0, 0, 0, 614, 0, 645,
	1517, 1090, 1084, 1086, 0, 0, 1114, 0, 635, 631,
	444, 446, 447, 0, 0, 445, 646, 615, 1352, 1358,
	0, 448, 449, 450, 627, 628, 629, 630,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 147, 3, 3, 3, 175, 167, 3,
	88, 90, 172, 170, 89, 171, 225, 173, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 736,
	155, 154, 156, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 177, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 143, 3, 178,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 144, 145,
	146, 148, 149, 150, 151, 152, 153, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 168, 169, 174,
	176, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 58022, 697, 58023, 698, 58024, 699,
	58025, 700, 58026, 701, 58027, 702, 58028, 703, 58029, 704,
	58030, 705, 58031, 706, 58032, 707, 58033, 708, 58034, 709,
	58035, 710, 58036, 711, 58037, 712, 58038, 713, 58039, 714,
	58040, 715, 58041, 716, 58042, 717, 58043, 718, 58044, 719,
	58045, 720, 58046, 721, 58047, 722, 58048, 723, 58049, 724,
	58050, 725, 58051, 726, 58052, 727, 58053, 728, 58054, 729,
	58055, 730, 58056, 731, 58057, 732, 58058, 733, 58059, 734,
	58060, 735, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:615
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:628
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:629
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:633
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:672
		{
			setParseTree(yylex, nil)
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:678
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:684
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:690
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:694
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:700
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:706
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:712
		{
			yyLOCAL = &With{CTEs: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:716
		{
			yyLOCAL = &With{CTEs: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:721
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:725
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:731
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:735
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:741
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:747
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:751
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:755
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:778
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:784
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:789
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:795
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:802
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:808
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:815
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 64:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:819
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:825
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:829
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:833
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:837
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:841
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:847
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:851
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:856
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:860
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:866
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:870
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:875
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:881
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:887
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:894
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:900
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:908
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:912
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:918
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = getAliasedTableExprFromTableName(yyDollar[4].tableName)
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:930
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: getAliasedTableExprFromTableName(yyDollar[4].tableName), Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:942
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:946
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:952
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:958
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:962
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:966
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:970
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:975
		{
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:976
		{
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:980
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:984
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:990
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:994
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1000
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1004
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1009
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1013
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1019
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1025
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1029
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1035
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1039
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1043
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1047
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1053
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1057
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1061
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1067
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1071
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1077
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1081
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1087
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1091
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1095
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1101
		{
			yyVAL.str = RepeatableReadStr
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1105
		{
			yyVAL.str = ReadCommittedStr
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1109
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1113
		{
			yyVAL.str = SerializableStr
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1119
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1123
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1127
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1133
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1139
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1146
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1155
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1159
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1166
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1170
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1175
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1179
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1185
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1190
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1195
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1201
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1206
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1212
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 141:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1217
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1221
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1227
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1231
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1237
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 146:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1243
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1250
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1257
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1262
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeFullText}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1267
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeSpatial}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1272
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeUnique}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1279
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1286
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1297
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1304
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1308
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1314
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1318
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1322
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1326
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1330
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1334
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 165:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1340
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1344
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1350
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1354
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1360
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1364
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1370
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1374
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1380
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1384
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1390
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1394
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1400
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1405
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1410
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 180:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1414
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1419
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1423
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1427
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 184:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1438
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1447
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1456
		{
			yyVAL.str = ""
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1460
		{
			yyVAL.str = ""
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1469
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1473
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1478
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1483
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1488
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyDollar[1].columnTypeOptionsUnion().DefaultLiteral = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1494
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1499
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1504
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1509
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1514
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1518
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1523
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1527
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1532
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1537
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1542
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 204:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1546
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1552
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1556
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1560
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1566
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1570
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1575
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1579
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1584
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1589
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1594
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1599
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1604
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1609
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1616
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1623
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1627
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1631
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1635
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1639
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1643
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("sysdate"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1653
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1660
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1664
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1670
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1674
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1678
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1682
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1686
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1690
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1694
		{
			yyLOCAL = NewBitLiteral("0b" + yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1698
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1702
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral("0b" + yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1706
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1710
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1714
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1718
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1722
		{
			arg := parseBindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: arg}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1727
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1731
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1735
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1741
		{
			yyVAL.str = Armscii8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1745
		{
			yyVAL.str = ASCIIStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1749
		{
			yyVAL.str = Big5Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1753
		{
			yyVAL.str = UBinaryStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1757
		{
			yyVAL.str = Cp1250Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1761
		{
			yyVAL.str = Cp1251Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1765
		{
			yyVAL.str = Cp1256Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1769
		{
			yyVAL.str = Cp1257Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1773
		{
			yyVAL.str = Cp850Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1777
		{
			yyVAL.str = Cp852Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1781
		{
			yyVAL.str = Cp866Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1785
		{
			yyVAL.str = Cp932Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1789
		{
			yyVAL.str = Dec8Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1793
		{
			yyVAL.str = EucjpmsStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1797
		{
			yyVAL.str = EuckrStr
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1801
		{
			yyVAL.str = Gb18030Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1805
		{
			yyVAL.str = Gb2312Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1809
		{
			yyVAL.str = GbkStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1813
		{
			yyVAL.str = Geostd8Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1817
		{
			yyVAL.str = GreekStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1821
		{
			yyVAL.str = HebrewStr
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1825
		{
			yyVAL.str = Hp8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1829
		{
			yyVAL.str = Keybcs2Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1833
		{
			yyVAL.str = Koi8rStr
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1837
		{
			yyVAL.str = Koi8uStr
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1841
		{
			yyVAL.str = Latin1Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1845
		{
			yyVAL.str = Latin2Str
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1849
		{
			yyVAL.str = Latin5Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1853
		{
			yyVAL.str = Latin7Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1857
		{
			yyVAL.str = MacceStr
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1861
		{
			yyVAL.str = MacromanStr
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1865
		{
			yyVAL.str = SjisStr
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1869
		{
			yyVAL.str = Swe7Str
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1873
		{
			yyVAL.str = Tis620Str
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1877
		{
			yyVAL.str = Ucs2Str
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1881
		{
			yyVAL.str = UjisStr
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1885
		{
			yyVAL.str = Utf16Str
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1889
		{
			yyVAL.str = Utf16leStr
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1893
		{
			yyVAL.str = Utf32Str
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1897
		{
			yyVAL.str = Utf8mb3Str
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1901
		{
			yyVAL.str = Utf8mb4Str
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1905
		{
			yyVAL.str = Utf8mb3Str
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1915
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1919
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1923
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1929
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1933
		{
			yyLOCAL = AppendString(yyDollar[1].exprUnion(), yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1939
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1943
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1947
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1953
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1957
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1963
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1967
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1971
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1975
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1981
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1992
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].intPtrUnion()
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1997
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2003
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2007
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2011
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2015
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2019
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2023
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2027
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2031
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2035
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2041
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2047
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2053
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2059
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2065
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2071
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2077
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2085
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2089
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2093
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2097
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2101
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2107
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2111
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].intPtrUnion()}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2117
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2121
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2125
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2129
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2133
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2137
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2141
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2145
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2149
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2153
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2157
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2161
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2165
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 349:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2170
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2176
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2180
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2184
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2188
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2192
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2196
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2200
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2204
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2210
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2215
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *int
//line sql.y:2220
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *int
//line sql.y:2224
		{
			yyLOCAL = ptr.Of(convertStringToInt(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2229
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 363:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2233
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2242
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2246
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2253
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2257
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2263
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2271
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2275
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2279
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2284
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2288
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2293
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2297
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2301
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2305
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2309
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2314
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2319
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2324
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2329
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2335
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2339
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2344
		{
			yyVAL.str = ""
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2348
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2352
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 388:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2358
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2363
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2367
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2373
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2377
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2383
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2387
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2392
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2396
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2400
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2404
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2408
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2412
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2418
		{
			yyVAL.str = ""
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2422
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 403:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2428
		{
			yyLOCAL = &IndexInfo{Type: IndexTypePrimary, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY")}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2432
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeSpatial, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2436
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeFullText, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2440
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeUnique, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2444
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeDefault, Name: NewIdentifierCI(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2449
		{
			yyVAL.str = ""
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2453
		{
			yyVAL.str = yyDollar[2].str
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2459
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2463
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2467
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2473
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2477
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 415:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2482
		{
			yyVAL.str = ""
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2486
		{
			yyVAL.str = yyDollar[1].str
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2492
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2496
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2501
		{
			yyVAL.str = ""
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2505
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2511
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2515
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2521
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].intPtrUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2525
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2531
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2535
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2541
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2545
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2551
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2557
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2561
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2565
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2569
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2573
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2578
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2582
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2588
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2594
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2600
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2604
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2608
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2613
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2617
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2623
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2629
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2635
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2639
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2643
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2647
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2651
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2656
		{
			yyVAL.str = ""
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2660
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2664
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2670
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2674
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2679
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2683
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2688
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2692
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2698
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2702
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2706
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2712
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2716
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2722
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2726
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2730
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2734
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2738
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2742
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2746
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2750
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2754
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2758
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2762
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2766
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2770
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2774
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2778
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2782
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2786
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2790
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2794
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2798
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2802
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2806
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2810
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2814
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2818
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2822
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2826
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2830
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2834
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2838
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2842
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2847
		{
			yyVAL.str = ""
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2851
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2855
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2874
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2878
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2882
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2886
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2891
		{
			yyVAL.str = ""
		}
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2897
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2901
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2906
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2910
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2915
		{
			yyVAL.str = ""
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2919
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2924
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2928
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2932
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2937
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2941
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2945
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2949
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2953
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 528:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2957
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2963
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2967
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2971
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2977
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2981
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2985
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2989
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2993
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2997
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3001
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3005
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion(), DefaultLiteral: true}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3009
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3013
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(false)}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3017
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(true)}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3021
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3025
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3029
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3033
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3037
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3041
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3045
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3049
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3053
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3057
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3061
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3065
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3069
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3073
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3077
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3081
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3085
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3089
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3093
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3097
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3103
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3107
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3113
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3117
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3121
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3125
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3129
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3133
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3137
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3141
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3145
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3149
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3155
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3162
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3169
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3176
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3182
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3192
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3199
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3206
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3218
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3228
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3232
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3236
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3249
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3259
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3263
		{
			yyLOCAL = &AlterVschema{Action: DropSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3267
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3278
		{
			yyLOCAL = &AlterVschema{
				Action: DropAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3285
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3292
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3299
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3306
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3314
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3320
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3327
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3333
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3340
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3346
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3355
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3363
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3370
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3376
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3383
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3390
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3394
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3403
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3411
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3420
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3427
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3435
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3439
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3448
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3459
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3463
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3468
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3472
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3477
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3481
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3487
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3493
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3499
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3503
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3509
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3513
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3519
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3525
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3531
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3537
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3543
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3547
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3551
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3555
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3561
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3567
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3573
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3577
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3581
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3587
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3591
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3596
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3600
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3605
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3609
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3615
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3619
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3623
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3627
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3631
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3635
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3639
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3643
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3647
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3651
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3655
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3659
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3663
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3667
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3671
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3675
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3679
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3683
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3687
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3691
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3695
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3699
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3704
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3708
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3712
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3718
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3722
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3728
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3733
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3737
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3742
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3747
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3752
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3757
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3762
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3767
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3772
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3777
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3783
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3789
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3793
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3799
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3804
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3808
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3813
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3818
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3823
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3828
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3833
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3838
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3845
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3852
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3859
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3867
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3871
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3877
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3883
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3889
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3895
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3901
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3907
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3913
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3919
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3925
		{
			yyVAL.str = ""
		}
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3929
		{
			yyVAL.str = ""
		}
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3935
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3941
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3945
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 715:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3951
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3955
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3964
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3968
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3974
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3978
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3984
		{
			yyLOCAL = &Analyze{IsLocal: yyDollar[2].booleanUnion(), Table: yyDollar[4].tableName}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3990
		{
			yyLOCAL = &PurgeBinaryLogs{To: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3994
		{
			yyLOCAL = &PurgeBinaryLogs{Before: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4000
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4004
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4008
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4012
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4016
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4020
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4024
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4028
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4032
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4036
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4040
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4044
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4048
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4052
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4056
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4060
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4064
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4068
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4072
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4076
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4080
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4084
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4088
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4092
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4096
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4100
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4104
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4108
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4112
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4116
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4120
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4124
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4128
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4132
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4136
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4140
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4144
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4148
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaKeyspaces}}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4152
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4156
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4160
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4164
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4168
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4172
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4179
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4183
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4187
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4191
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4195
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4199
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4203
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4207
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4211
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4217
		{
			yyVAL.str = ""
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4221
		{
			yyVAL.str = "extended "
		}
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4227
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4231
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4237
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4241
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4247
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4251
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4255
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4261
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4265
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4269
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4275
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4279
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4285
		{
			yyVAL.empty = struct{}{}
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4289
		{
			yyVAL.empty = struct{}{}
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4293
		{
			yyVAL.empty = struct{}{}
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4299
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4303
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4309
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4313
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4317
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4324
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4328
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4332
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4336
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4343
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4347
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4352
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4356
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4362
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4366
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4372
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4376
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4380
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4387
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4393
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4397
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4402
		{
			yyVAL.empty = struct{}{}
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4404
		{
			yyVAL.empty = struct{}{}
		}
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4407
		{
			yyVAL.empty = struct{}{}
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4409
		{
			yyVAL.empty = struct{}{}
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4413
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4419
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4424
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4428
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4432
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4436
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4440
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4445
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4449
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4453
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4457
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4463
		{
			yyVAL.str = yyDollar[1].str
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4467
		{
			yyVAL.str = yyDollar[1].str
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4471
		{
			yyVAL.str = yyDollar[1].str
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4477
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4481
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4485
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4489
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4494
		{
			yyVAL.str = ""
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4498
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4502
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 840:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4508
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4512
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4518
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4524
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4528
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4534
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4540
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4544
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4550
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4556
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4560
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4564
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4568
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4574
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4580
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4586
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4590
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4594
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4598
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4602
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4606
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4612
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4616
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4622
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4626
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4630
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4634
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4638
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4642
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4646
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4650
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4654
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4658
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4662
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4666
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4671
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4675
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4679
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4684
		{
			yyVAL.str = ""
		}
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4688
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4693
		{
			setAllowComments(yylex, true)
		}
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4697
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4703
		{
			yyVAL.strs = nil
		}
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4707
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4713
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4717
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4721
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4726
		{
			yyVAL.str = ""
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4730
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4734
		{
			yyVAL.str = SQLCacheStr
		}
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4739
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4743
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4747
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4753
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4757
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4767
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4772
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4776
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4782
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4786
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4791
		{
			yyVAL.strs = nil
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4795
		{
			yyVAL.strs = yyDollar[1].strs
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4801
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4805
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4811
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4815
		{
			yyVAL.str = SQLCacheStr
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4819
		{
			yyVAL.str = DistinctStr
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4823
		{
			yyVAL.str = DistinctStr
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4827
		{
			yyVAL.str = StraightJoinHint
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4831
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4835
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4841
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4845
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4851
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4855
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4859
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4863
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4868
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4872
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4876
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4883
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4888
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4892
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4898
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4904
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4908
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4918
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4922
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4926
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4930
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4936
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4940
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4946
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4950
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4955
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4959
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4964
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4968
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4974
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4978
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4984
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4988
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4994
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4998
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5002
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5006
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5012
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5016
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5029
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5033
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5037
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5041
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5047
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5049
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 957:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5053
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5055
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 959:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5059
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5061
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 961:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5064
		{
			yyVAL.empty = struct{}{}
		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5066
		{
			yyVAL.empty = struct{}{}
		}
	case 963:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5069
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5073
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5077
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5084
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5090
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5094
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5098
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5104
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5110
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5114
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5118
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5122
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5128
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5132
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5142
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5146
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5152
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5156
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5162
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 983:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5167
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5171
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5177
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5181
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 987:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5187
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5191
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5195
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5199
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5203
		{
			yyLOCAL = &IndexHint{Type: UseVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5207
		{
			yyLOCAL = &IndexHint{Type: IgnoreVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5212
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5216
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5220
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5224
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5230
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5234
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5241
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5245
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5249
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5253
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5257
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5261
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5265
		{
			yyLOCAL = &AssignmentExpr{Left: yyDollar[1].variableUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5269
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5275
		{
		}
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5278
		{
		}
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5283
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5287
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5291
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5295
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5301
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5305
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5309
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5313
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5317
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5321
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5325
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5329
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5333
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5337
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5341
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5347
		{
		}
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5350
		{
		}
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5356
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5360
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5364
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5368
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5372
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5376
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5380
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAdd, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5384
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinarySub, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5388
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5392
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5396
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5400
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5404
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5408
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5412
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5418
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5422
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5426
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5430
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5434
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5438
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5442
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5446
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5450
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5454
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5458
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5462
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5466
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5470
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5474
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5478
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5482
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5486
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5490
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5494
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5502
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5506
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAddLeft, Date: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion(), Interval: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5510
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5514
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5518
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5524
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5528
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5534
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5538
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5544
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5548
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5552
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5558
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5562
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5569
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5573
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5577
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5581
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5585
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5591
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5595
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5599
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5603
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5607
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5611
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5615
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5620
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5624
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5630
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5634
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5639
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5643
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5648
		{
		}
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5651
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5657
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5663
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5667
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5673
		{
			yyLOCAL = yyDollar[1].overClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5677
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5683
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5690
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5696
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5700
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5706
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5710
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5716
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5720
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5725
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5732
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5738
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5742
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5748
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5754
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5758
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1117:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5764
		{
			yyVAL.str = ""
		}
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5768
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5774
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5778
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5785
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5789
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5793
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5797
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5803
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5807
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5811
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5815
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5819
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5823
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5827
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5833
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5837
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5841
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			markBindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5848
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5854
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5858
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5868
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5872
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5882
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5886
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5890
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5894
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5898
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5902
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5906
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5910
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5914
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5918
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5922
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5933
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5937
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5943
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5947
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("curdate")}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5951
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5956
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("curtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5961
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5965
		{
			yyLOCAL = &CountStar{OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5969
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5973
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5977
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5981
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5985
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5989
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5993
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5997
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6001
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6005
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6009
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6013
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6017
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6021
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6025
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6029
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6033
		{
			yyLOCAL = &AnyValue{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6037
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprTimestampadd, Date: yyDollar[7].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6041
		{
			yyLOCAL = &TimestampDiffExpr{Unit: yyDollar[3].intervalTypeUnion(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6045
		{
			yyLOCAL = &ExtractFuncExpr{IntervalType: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6049
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6053
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6057
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6061
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6065
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, Type: LeadingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6069
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, Type: TrailingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6073
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6077
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6081
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6085
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6089
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6093
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6097
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6101
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6105
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6109
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6113
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6117
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6121
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6125
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6129
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6133
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6137
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6141
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6145
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6149
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6153
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsEmpty, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6157
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsSimple, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6161
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Dimension, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6165
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Envelope, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6169
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: GeometryType, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6173
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6177
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6181
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6185
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6189
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: EndPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6193
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: IsClosed, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6197
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6201
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6205
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: NumPoints, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6209
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: PointN, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6213
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: StartPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6217
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6221
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6225
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6229
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6233
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6237
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6241
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6245
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6249
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6253
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6257
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6261
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6265
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6269
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6273
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6277
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6281
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6285
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6289
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6293
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6297
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6301
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6305
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6309
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6313
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6317
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6321
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6325
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6329
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6333
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6337
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6341
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6345
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6349
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6353
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6357
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6361
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6365
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6369
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6373
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6377
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6381
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6385
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6389
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6393
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6397
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6401
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6405
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6409
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6413
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6417
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6421
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6425
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Area, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6429
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Centroid, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6433
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: ExteriorRing, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6437
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: InteriorRingN, Polygon: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6441
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: NumInteriorRings, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6445
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: GeometryN, GeomColl: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6449
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: NumGeometries, GeomColl: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6453
		{
			yyLOCAL = &GeoHashFromLatLongExpr{Longitude: yyDollar[3].exprUnion(), Latitude: yyDollar[5].exprUnion(), MaxLength: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6457
		{
			yyLOCAL = &GeoHashFromPointExpr{Point: yyDollar[3].exprUnion(), MaxLength: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6461
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LatitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6465
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LongitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6469
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: PointFromHash, GeoHash: yyDollar[3].exprUnion(), SridOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6473
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6477
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6481
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion(), Srid: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6485
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6489
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6493
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion(), Bitmask: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6497
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6501
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6505
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6509
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6513
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6517
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6521
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6525
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6529
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6533
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6537
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6541
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6545
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6549
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6553
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6557
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6561
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6565
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6569
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6573
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6577
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6581
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6585
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6589
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6593
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6597
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6601
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6605
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6609
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6613
		{
			yyLOCAL = &MultiPolygonExpr{PolygonParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6617
		{
			yyLOCAL = &MultiPointExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6621
		{
			yyLOCAL = &MultiLinestringExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6625
		{
			yyLOCAL = &PolygonExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6629
		{
			yyLOCAL = &LineStringExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6633
		{
			yyLOCAL = &PointExpr{XCordinate: yyDollar[3].exprUnion(), YCordinate: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6637
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6641
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6645
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6649
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6653
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6657
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6661
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6665
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6669
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateAdd, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6673
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateSub, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6677
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6681
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6691
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6695
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6699
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6703
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6708
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6712
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6718
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6722
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6726
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6730
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6734
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6739
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6743
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6747
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6751
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6755
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6759
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6764
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6768
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6772
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6776
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6783
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6787
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6793
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6797
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6801
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6805
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6811
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6815
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6819
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6823
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6827
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6831
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6835
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6840
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6844
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6850
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6854
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6858
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6862
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6866
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6870
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6874
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6878
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6882
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6886
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6890
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6894
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6898
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6902
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6906
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6910
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6914
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6918
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6922
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6926
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6932
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6936
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6940
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6944
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6948
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6952
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6956
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6960
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6964
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6968
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6972
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6976
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6980
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6984
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6988
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6992
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6996
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7000
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:7010
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:7014
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:7018
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7028
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7032
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7036
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7040
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7044
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7050
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7054
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7058
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7062
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7066
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7072
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7076
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7080
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7086
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7090
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7094
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7100
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7104
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7108
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7112
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7116
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7122
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7126
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7130
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7134
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7138
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7142
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7146
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7150
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7154
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7158
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7164
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7168
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7173
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7177
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7182
		{
			yyVAL.str = string("")
		}
	case 1457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7186
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 1458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7192
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7196
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1460:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7202
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7207
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7211
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7217
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7221
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7225
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7229
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7235
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7239
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7245
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7254
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7258
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7263
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7267
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7272
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7276
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7282
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7288
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7292
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1479:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7297
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7301
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7306
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7310
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7316
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7322
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7326
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7332
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7337
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7341
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7345
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7350
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7354
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7360
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7364
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7368
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7373
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7377
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7381
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7385
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7389
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7396
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7400
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7404
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7408
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7414
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7418
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7422
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7426
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7431
		{
			yyVAL.str = ""
		}
	case 1509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7435
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1510:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7439
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1511:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7443
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1512:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7448
		{
			yyVAL.str = ""
		}
	case 1513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7452
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7458
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7462
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1516:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7467
		{
			yyVAL.str = ""
		}
	case 1517:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7471
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7476
		{
			yyVAL.str = "cascaded"
		}
	case 1519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7480
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7484
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7489
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7493
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7499
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7505
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7511
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7520
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7524
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1528:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7529
		{
			yyVAL.str = ""
		}
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7533
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7539
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7543
		{
			yyLOCAL = ForUpdateLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7547
		{
			yyLOCAL = ForUpdateLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7551
		{
			yyLOCAL = ForShareLock
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7555
		{
			yyLOCAL = ForShareLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7559
		{
			yyLOCAL = ForShareLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7563
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7569
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7573
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7577
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7582
		{
			yyVAL.str = ""
		}
	case 1541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7586
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7590
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1543:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7595
		{
			yyVAL.str = ""
		}
	case 1544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7599
		{
			yyVAL.str = " header"
		}
	case 1545:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7604
		{
			yyVAL.str = ""
		}
	case 1546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7608
		{
			yyVAL.str = " manifest on"
		}
	case 1547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7612
		{
			yyVAL.str = " manifest off"
		}
	case 1548:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7617
		{
			yyVAL.str = ""
		}
	case 1549:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7621
		{
			yyVAL.str = " overwrite on"
		}
	case 1550:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7625
		{
			yyVAL.str = " overwrite off"
		}
	case 1551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7631
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1552:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7636
		{
			yyVAL.str = ""
		}
	case 1553:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7640
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7646
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7650
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1556:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7656
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7660
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1558:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7665
		{
			yyVAL.str = ""
		}
	case 1559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7669
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7675
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7679
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7685
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1563:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7689
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7693
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1565:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7698
		{
			yyVAL.str = ""
		}
	case 1566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7702
		{
			yyVAL.str = " optionally"
		}
	case 1567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7715
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion(), RowAlias: yyDollar[3].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7719
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7723
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion(), RowAlias: yyDollar[6].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7727
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion(), RowAlias: yyDollar[5].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7731
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7737
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7741
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7745
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1575:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7749
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1576:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7754
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7758
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7762
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7767
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7771
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7777
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7781
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7787
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7791
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7797
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7801
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7806
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7816
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7820
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7826
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7833
		{
			yyVAL.str = "charset"
		}
	case 1595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7843
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7847
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7851
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7860
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7862
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7865
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7867
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7870
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7872
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7875
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7877
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7880
		{
			yyVAL.empty = struct{}{}
		}
	case 1609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7882
		{
			yyVAL.empty = struct{}{}
		}
	case 1610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7884
		{
			yyVAL.empty = struct{}{}
		}
	case 1611:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7888
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7893
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7897
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1614:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7902
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7904
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7908
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7914
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7918
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7925
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7931
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7935
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1623:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7941
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7945
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7952
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7958
		{
			yyLOCAL = &Kill{Type: yyDollar[2].killTypeUnion(), ProcesslistID: convertStringToUInt64(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 1628:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL KillType
//line sql.y:7964
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:7968
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:7972
		{
			yyLOCAL = QueryType
		}
		yyVAL.union = yyLOCAL
	case 2248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8618
		{
		}
	case 2249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8623
		{
		}
	case 2250:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8627
		{
			skipToEnd(yylex)
		}
	case 2251:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8632
		{
			skipToEnd(yylex)
		}
	case 2252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8636
		{
			skipToEnd(yylex)
		}
	case 2253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8640
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
