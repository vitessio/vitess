// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const ALGORITHM = 57422
const NONE = 57423
const SHARED = 57424
const EXCLUSIVE = 57425
const SUBQUERY_AS_EXPR = 57426
const ID = 57427
const AT_ID = 57428
const AT_AT_ID = 57429
const HEX = 57430
const STRING = 57431
const NCHAR_STRING = 57432
const INTEGRAL = 57433
const FLOAT = 57434
const DECIMAL = 57435
const HEXNUM = 57436
const VALUE_ARG = 57437
const LIST_ARG = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BIT_LITERAL = 57441
const COMPRESSION = 57442
const JSON_PRETTY = 57443
const JSON_STORAGE_SIZE = 57444
const JSON_STORAGE_FREE = 57445
const JSON_CONTAINS = 57446
const JSON_CONTAINS_PATH = 57447
const JSON_EXTRACT = 57448
const JSON_KEYS = 57449
const JSON_OVERLAPS = 57450
const JSON_SEARCH = 57451
const JSON_VALUE = 57452
const EXTRACT = 57453
const NULL = 57454
const TRUE = 57455
const FALSE = 57456
const OFF = 57457
const DISCARD = 57458
const IMPORT = 57459
const ENABLE = 57460
const DISABLE = 57461
const TABLESPACE = 57462
const VIRTUAL = 57463
const STORED = 57464
const BOTH = 57465
const LEADING = 57466
const TRAILING = 57467
const EMPTY_FROM_CLAUSE = 57468
const LOWER_THAN_CHARSET = 57469
const CHARSET = 57470
const UNIQUE = 57471
const KEY = 57472
const EXPRESSION_PREC_SETTER = 57473
const OR = 57474
const XOR = 57475
const AND = 57476
const NOT = 57477
const BETWEEN = 57478
const CASE = 57479
const WHEN = 57480
const THEN = 57481
const ELSE = 57482
const END = 57483
const LE = 57484
const GE = 57485
const NE = 57486
const NULL_SAFE_EQUAL = 57487
const IS = 57488
const LIKE = 57489
const REGEXP = 57490
const IN = 57491
const SHIFT_LEFT = 57492
const SHIFT_RIGHT = 57493
const DIV = 57494
const MOD = 57495
const UNARY = 57496
const COLLATE = 57497
const BINARY = 57498
const UNDERSCORE_ARMSCII8 = 57499
const UNDERSCORE_ASCII = 57500
const UNDERSCORE_BIG5 = 57501
const UNDERSCORE_BINARY = 57502
const UNDERSCORE_CP1250 = 57503
const UNDERSCORE_CP1251 = 57504
const UNDERSCORE_CP1256 = 57505
const UNDERSCORE_CP1257 = 57506
const UNDERSCORE_CP850 = 57507
const UNDERSCORE_CP852 = 57508
const UNDERSCORE_CP866 = 57509
const UNDERSCORE_CP932 = 57510
const UNDERSCORE_DEC8 = 57511
const UNDERSCORE_EUCJPMS = 57512
const UNDERSCORE_EUCKR = 57513
const UNDERSCORE_GB18030 = 57514
const UNDERSCORE_GB2312 = 57515
const UNDERSCORE_GBK = 57516
const UNDERSCORE_GEOSTD8 = 57517
const UNDERSCORE_GREEK = 57518
const UNDERSCORE_HEBREW = 57519
const UNDERSCORE_HP8 = 57520
const UNDERSCORE_KEYBCS2 = 57521
const UNDERSCORE_KOI8R = 57522
const UNDERSCORE_KOI8U = 57523
const UNDERSCORE_LATIN1 = 57524
const UNDERSCORE_LATIN2 = 57525
const UNDERSCORE_LATIN5 = 57526
const UNDERSCORE_LATIN7 = 57527
const UNDERSCORE_MACCE = 57528
const UNDERSCORE_MACROMAN = 57529
const UNDERSCORE_SJIS = 57530
const UNDERSCORE_SWE7 = 57531
const UNDERSCORE_TIS620 = 57532
const UNDERSCORE_UCS2 = 57533
const UNDERSCORE_UJIS = 57534
const UNDERSCORE_UTF16 = 57535
const UNDERSCORE_UTF16LE = 57536
const UNDERSCORE_UTF32 = 57537
const UNDERSCORE_UTF8 = 57538
const UNDERSCORE_UTF8MB4 = 57539
const INTERVAL = 57540
const JSON_EXTRACT_OP = 57541
const JSON_UNQUOTE_EXTRACT_OP = 57542
const CREATE = 57543
const ALTER = 57544
const DROP = 57545
const RENAME = 57546
const ANALYZE = 57547
const ADD = 57548
const FLUSH = 57549
const CHANGE = 57550
const MODIFY = 57551
const DEALLOCATE = 57552
const REVERT = 57553
const SCHEMA = 57554
const TABLE = 57555
const INDEX = 57556
const VIEW = 57557
const TO = 57558
const IGNORE = 57559
const IF = 57560
const PRIMARY = 57561
const COLUMN = 57562
const SPATIAL = 57563
const FULLTEXT = 57564
const KEY_BLOCK_SIZE = 57565
const CHECK = 57566
const INDEXES = 57567
const ACTION = 57568
const CASCADE = 57569
const CONSTRAINT = 57570
const FOREIGN = 57571
const NO = 57572
const REFERENCES = 57573
const RESTRICT = 57574
const SHOW = 57575
const DESCRIBE = 57576
const EXPLAIN = 57577
const DATE = 57578
const ESCAPE = 57579
const REPAIR = 57580
const OPTIMIZE = 57581
const TRUNCATE = 57582
const COALESCE = 57583
const EXCHANGE = 57584
const REBUILD = 57585
const PARTITIONING = 57586
const REMOVE = 57587
const PREPARE = 57588
const EXECUTE = 57589
const MAXVALUE = 57590
const PARTITION = 57591
const REORGANIZE = 57592
const LESS = 57593
const THAN = 57594
const PROCEDURE = 57595
const TRIGGER = 57596
const VINDEX = 57597
const VINDEXES = 57598
const DIRECTORY = 57599
const NAME = 57600
const UPGRADE = 57601
const STATUS = 57602
const VARIABLES = 57603
const WARNINGS = 57604
const CASCADED = 57605
const DEFINER = 57606
const OPTION = 57607
const SQL = 57608
const UNDEFINED = 57609
const SEQUENCE = 57610
const MERGE = 57611
const TEMPORARY = 57612
const TEMPTABLE = 57613
const INVOKER = 57614
const SECURITY = 57615
const FIRST = 57616
const AFTER = 57617
const LAST = 57618
const VITESS_MIGRATION = 57619
const CANCEL = 57620
const RETRY = 57621
const COMPLETE = 57622
const CLEANUP = 57623
const BEGIN = 57624
const START = 57625
const TRANSACTION = 57626
const COMMIT = 57627
const ROLLBACK = 57628
const SAVEPOINT = 57629
const RELEASE = 57630
const WORK = 57631
const BIT = 57632
const TINYINT = 57633
const SMALLINT = 57634
const MEDIUMINT = 57635
const INT = 57636
const INTEGER = 57637
const BIGINT = 57638
const INTNUM = 57639
const REAL = 57640
const DOUBLE = 57641
const FLOAT_TYPE = 57642
const DECIMAL_TYPE = 57643
const NUMERIC = 57644
const TIME = 57645
const TIMESTAMP = 57646
const DATETIME = 57647
const YEAR = 57648
const CHAR = 57649
const VARCHAR = 57650
const BOOL = 57651
const CHARACTER = 57652
const VARBINARY = 57653
const NCHAR = 57654
const TEXT = 57655
const TINYTEXT = 57656
const MEDIUMTEXT = 57657
const LONGTEXT = 57658
const BLOB = 57659
const TINYBLOB = 57660
const MEDIUMBLOB = 57661
const LONGBLOB = 57662
const JSON = 57663
const JSON_SCHEMA_VALID = 57664
const JSON_SCHEMA_VALIDATION_REPORT = 57665
const ENUM = 57666
const GEOMETRY = 57667
const POINT = 57668
const LINESTRING = 57669
const POLYGON = 57670
const GEOMETRYCOLLECTION = 57671
const MULTIPOINT = 57672
const MULTILINESTRING = 57673
const MULTIPOLYGON = 57674
const ASCII = 57675
const UNICODE = 57676
const NULLX = 57677
const AUTO_INCREMENT = 57678
const APPROXNUM = 57679
const SIGNED = 57680
const UNSIGNED = 57681
const ZEROFILL = 57682
const CODE = 57683
const COLLATION = 57684
const COLUMNS = 57685
const DATABASES = 57686
const ENGINES = 57687
const EVENT = 57688
const EXTENDED = 57689
const FIELDS = 57690
const FULL = 57691
const FUNCTION = 57692
const GTID_EXECUTED = 57693
const KEYSPACES = 57694
const OPEN = 57695
const PLUGINS = 57696
const PRIVILEGES = 57697
const PROCESSLIST = 57698
const SCHEMAS = 57699
const TABLES = 57700
const TRIGGERS = 57701
const USER = 57702
const VGTID_EXECUTED = 57703
const VITESS_KEYSPACES = 57704
const VITESS_METADATA = 57705
const VITESS_MIGRATIONS = 57706
const VITESS_REPLICATION_STATUS = 57707
const VITESS_SHARDS = 57708
const VITESS_TABLETS = 57709
const VITESS_TARGET = 57710
const VSCHEMA = 57711
const NAMES = 57712
const GLOBAL = 57713
const SESSION = 57714
const ISOLATION = 57715
const LEVEL = 57716
const READ = 57717
const WRITE = 57718
const ONLY = 57719
const REPEATABLE = 57720
const COMMITTED = 57721
const UNCOMMITTED = 57722
const SERIALIZABLE = 57723
const CURRENT_TIMESTAMP = 57724
const DATABASE = 57725
const CURRENT_DATE = 57726
const NOW = 57727
const CURRENT_TIME = 57728
const LOCALTIME = 57729
const LOCALTIMESTAMP = 57730
const CURRENT_USER = 57731
const UTC_DATE = 57732
const UTC_TIME = 57733
const UTC_TIMESTAMP = 57734
const DAY = 57735
const DAY_HOUR = 57736
const DAY_MICROSECOND = 57737
const DAY_MINUTE = 57738
const DAY_SECOND = 57739
const HOUR = 57740
const HOUR_MICROSECOND = 57741
const HOUR_MINUTE = 57742
const HOUR_SECOND = 57743
const MICROSECOND = 57744
const MINUTE = 57745
const MINUTE_MICROSECOND = 57746
const MINUTE_SECOND = 57747
const MONTH = 57748
const QUARTER = 57749
const SECOND = 57750
const SECOND_MICROSECOND = 57751
const YEAR_MONTH = 57752
const WEEK = 57753
const REPLACE = 57754
const CONVERT = 57755
const CAST = 57756
const SUBSTR = 57757
const SUBSTRING = 57758
const GROUP_CONCAT = 57759
const SEPARATOR = 57760
const TIMESTAMPADD = 57761
const TIMESTAMPDIFF = 57762
const WEIGHT_STRING = 57763
const LTRIM = 57764
const RTRIM = 57765
const TRIM = 57766
const JSON_ARRAY = 57767
const JSON_OBJECT = 57768
const JSON_QUOTE = 57769
const JSON_DEPTH = 57770
const JSON_TYPE = 57771
const JSON_LENGTH = 57772
const JSON_VALID = 57773
const JSON_ARRAY_APPEND = 57774
const JSON_ARRAY_INSERT = 57775
const JSON_INSERT = 57776
const JSON_MERGE = 57777
const JSON_MERGE_PATCH = 57778
const JSON_MERGE_PRESERVE = 57779
const JSON_REMOVE = 57780
const JSON_REPLACE = 57781
const JSON_SET = 57782
const JSON_UNQUOTE = 57783
const MATCH = 57784
const AGAINST = 57785
const BOOLEAN = 57786
const LANGUAGE = 57787
const WITH = 57788
const QUERY = 57789
const EXPANSION = 57790
const WITHOUT = 57791
const VALIDATION = 57792
const UNUSED = 57793
const ARRAY = 57794
const CUME_DIST = 57795
const DESCRIPTION = 57796
const DENSE_RANK = 57797
const EMPTY = 57798
const EXCEPT = 57799
const FIRST_VALUE = 57800
const GROUPING = 57801
const GROUPS = 57802
const JSON_TABLE = 57803
const LAG = 57804
const LAST_VALUE = 57805
const LATERAL = 57806
const LEAD = 57807
const NTH_VALUE = 57808
const NTILE = 57809
const OF = 57810
const OVER = 57811
const PERCENT_RANK = 57812
const RANK = 57813
const RECURSIVE = 57814
const ROW_NUMBER = 57815
const SYSTEM = 57816
const WINDOW = 57817
const ACTIVE = 57818
const ADMIN = 57819
const AUTOEXTEND_SIZE = 57820
const BUCKETS = 57821
const CLONE = 57822
const COLUMN_FORMAT = 57823
const COMPONENT = 57824
const DEFINITION = 57825
const ENFORCED = 57826
const ENGINE_ATTRIBUTE = 57827
const EXCLUDE = 57828
const FOLLOWING = 57829
const GEOMCOLLECTION = 57830
const GET_MASTER_PUBLIC_KEY = 57831
const HISTOGRAM = 57832
const HISTORY = 57833
const INACTIVE = 57834
const INVISIBLE = 57835
const LOCKED = 57836
const MASTER_COMPRESSION_ALGORITHMS = 57837
const MASTER_PUBLIC_KEY_PATH = 57838
const MASTER_TLS_CIPHERSUITES = 57839
const MASTER_ZSTD_COMPRESSION_LEVEL = 57840
const NESTED = 57841
const NETWORK_NAMESPACE = 57842
const NOWAIT = 57843
const NULLS = 57844
const OJ = 57845
const OLD = 57846
const OPTIONAL = 57847
const ORDINALITY = 57848
const ORGANIZATION = 57849
const OTHERS = 57850
const PARTIAL = 57851
const PATH = 57852
const PERSIST = 57853
const PERSIST_ONLY = 57854
const PRECEDING = 57855
const PRIVILEGE_CHECKS_USER = 57856
const PROCESS = 57857
const RANDOM = 57858
const REFERENCE = 57859
const REQUIRE_ROW_FORMAT = 57860
const RESOURCE = 57861
const RESPECT = 57862
const RESTART = 57863
const RETAIN = 57864
const REUSE = 57865
const ROLE = 57866
const SECONDARY = 57867
const SECONDARY_ENGINE = 57868
const SECONDARY_ENGINE_ATTRIBUTE = 57869
const SECONDARY_LOAD = 57870
const SECONDARY_UNLOAD = 57871
const SIMPLE = 57872
const SKIP = 57873
const SRID = 57874
const THREAD_PRIORITY = 57875
const TIES = 57876
const UNBOUNDED = 57877
const VCPU = 57878
const VISIBLE = 57879
const RETURNING = 57880
const FORMAT = 57881
const TREE = 57882
const VITESS = 57883
const TRADITIONAL = 57884
const LOCAL = 57885
const LOW_PRIORITY = 57886
const NO_WRITE_TO_BINLOG = 57887
const LOGS = 57888
const ERROR = 57889
const GENERAL = 57890
const HOSTS = 57891
const OPTIMIZER_COSTS = 57892
const USER_RESOURCES = 57893
const SLOW = 57894
const CHANNEL = 57895
const RELAY = 57896
const EXPORT = 57897
const AVG_ROW_LENGTH = 57898
const CONNECTION = 57899
const CHECKSUM = 57900
const DELAY_KEY_WRITE = 57901
const ENCRYPTION = 57902
const ENGINE = 57903
const INSERT_METHOD = 57904
const MAX_ROWS = 57905
const MIN_ROWS = 57906
const PACK_KEYS = 57907
const PASSWORD = 57908
const FIXED = 57909
const DYNAMIC = 57910
const COMPRESSED = 57911
const REDUNDANT = 57912
const COMPACT = 57913
const ROW_FORMAT = 57914
const STATS_AUTO_RECALC = 57915
const STATS_PERSISTENT = 57916
const STATS_SAMPLE_PAGES = 57917
const STORAGE = 57918
const MEMORY = 57919
const DISK = 57920
const PARTITIONS = 57921
const LINEAR = 57922
const RANGE = 57923
const LIST = 57924
const SUBPARTITION = 57925
const SUBPARTITIONS = 57926
const HASH = 57927

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	603, 145,
	-2, 153,
	-1, 48,
	131, 153,
	171, 153,
	327, 153,
	-2, 485,
	-1, 55,
	35, 700,
	231, 700,
	242, 700,
	277, 714,
	278, 714,
	-2, 702,
	-1, 60,
	233, 727,
	-2, 725,
	-1, 114,
	230, 1251,
	-2, 119,
	-1, 116,
	1, 146,
	603, 146,
	-2, 153,
	-1, 127,
	132, 377,
	236, 377,
	-2, 479,
	-1, 146,
	131, 153,
	171, 153,
	327, 153,
	-2, 494,
	-1, 687,
	215, 1272,
	-2, 1268,
	-1, 688,
	215, 1273,
	-2, 1269,
	-1, 762,
	59, 795,
	-2, 810,
	-1, 799,
	147, 1676,
	-2, 112,
	-1, 800,
	147, 1519,
	-2, 113,
	-1, 806,
	147, 1602,
	-2, 1245,
	-1, 954,
	147, 1448,
	-2, 1242,
	-1, 995,
	241, 41,
	246, 41,
	-2, 388,
	-1, 1075,
	1, 533,
	603, 533,
	-2, 153,
	-1, 1312,
	59, 796,
	-2, 815,
	-1, 1313,
	59, 797,
	-2, 816,
	-1, 1366,
	131, 153,
	171, 153,
	327, 153,
	-2, 426,
	-1, 1445,
	132, 377,
	236, 377,
	-2, 479,
	-1, 1454,
	241, 42,
	246, 42,
	-2, 389,
	-1, 1756,
	215, 1277,
	-2, 1271,
	-1, 1839,
	131, 153,
	171, 153,
	327, 153,
	-2, 427,
	-1, 1846,
	25, 174,
	-2, 176,
	-1, 2086,
	86, 39,
	-2, 852,
	-1, 2138,
	77, 94,
	86, 94,
	-2, 872,
	-1, 2205,
	578, 628,
	-2, 615,
	-1, 2338,
	49, 1213,
	-2, 1207,
	-1, 2553,
	86, 39,
	-2, 853,
	-1, 2591,
	7, 53,
	18, 53,
	20, 53,
	87, 53,
	-2, 844,
	-1, 2912,
	22, 1604,
	32, 1604,
	172, 1604,
	253, 1604,
	307, 1604,
	308, 1604,
	309, 1604,
	310, 1604,
	311, 1604,
	312, 1604,
	313, 1604,
	315, 1604,
	316, 1604,
	317, 1604,
	318, 1604,
	319, 1604,
	320, 1604,
	321, 1604,
	322, 1604,
	323, 1604,
	324, 1604,
	325, 1604,
	326, 1604,
	328, 1604,
	330, 1604,
	331, 1604,
	332, 1604,
	333, 1604,
	334, 1604,
	335, 1604,
	336, 1604,
	337, 1604,
	338, 1604,
	341, 1604,
	342, 1604,
	343, 1604,
	344, 1604,
	345, 1604,
	346, 1604,
	347, 1604,
	348, 1604,
	349, 1604,
	461, 1604,
	-2, 573,
}

const yyPrivate = 57344

const yyLast = 42184

var yyAct = [...]int{
	687, 2689, 2966, 2690, 2974, 2688, 2844, 2942, 1836, 2943,
	2665, 1369, 2910, 1770, 696, 2484, 2297, 2894, 1790, 2391,
	2398, 2797, 2040, 2703, 2440, 777, 689, 1772, 2352, 3,
	609, 2349, 755, 2820, 1291, 2074, 2406, 1906, 680, 37,
	1327, 2467, 1138, 605, 2466, 2353, 2350, 96, 2708, 2562,
	690, 186, 681, 2295, 186, 2259, 570, 186, 2296, 2132,
	2556, 678, 585, 679, 186, 2109, 631, 602, 1296, 2469,
	1809, 2347, 186, 2582, 2339, 2101, 1869, 2170, 2202, 2242,
	2548, 1874, 2171, 1894, 1825, 2172, 1423, 186, 155, 2121,
	38, 778, 804, 1314, 1794, 36, 1087, 1814, 2093, 603,
	2076, 1750, 597, 957, 601, 1726, 1813, 1915, 1656, 585,
	1666, 1893, 585, 186, 585, 141, 759, 1725, 763, 1614,
	2164, 1801, 539, 1948, 757, 985, 1876, 1452, 1358, 95,
	1816, 1468, 588, 990, 1336, 91, 780, 2140, 1294, 1563,
	750, 1159, 614, 1223, 1678, 1633, 1559, 964, 993, 1891,
	996, 801, 1545, 991, 1459, 961, 992, 965, 1357, 1130,
	1355, 1795, 1865, 769, 1418, 1341, 1136, 119, 159, 1722,
	765, 1003, 1568, 98, 117, 764, 118, 124, 1444, 125,
	1071, 963, 791, 767, 592, 85, 76, 102, 97, 1230,
	1226, 2853, 2195, 89, 2967, 1763, 1908, 1909, 1910, 2458,
	2437, 1908, 2221, 2220, 1946, 2193, 8, 1530, 766, 77,
	7, 6, 2455, 785, 2611, 790, 120, 542, 2648, 2250,
	1753, 1116, 2251, 2693, 2693, 2874, 771, 126, 104, 105,
	2875, 108, 90, 574, 114, 1030, 1621, 183, 1767, 1768,
	537, 1620, 1160, 1619, 1618, 958, 188, 189, 190, 1617,
	593, 1616, 1599, 595, 1608, 596, 2456, 2072, 2931, 2335,
	751, 752, 753, 754, 758, 756, 762, 2536, 2946, 798,
	805, 2103, 974, 983, 969, 2983, 2941, 1006, 2462, 1321,
	2957, 2624, 982, 779, 981, 120, 1626, 772, 2421, 2793,
	2792, 980, 1029, 979, 793, 794, 1031, 1032, 1033, 2920,
	1007, 2658, 1028, 78, 2659, 2982, 2904, 2692, 2692, 1986,
	78, 78, 2970, 2918, 80, 2870, 2875, 2955, 2666, 2895,
	182, 1044, 2924, 2925, 1934, 2903, 1038, 2112, 78, 2869,
	2408, 2409, 2258, 2915, 2518, 1433, 2073, 2919, 2229, 1359,
	1192, 1360, 2228, 1123, 121, 1125, 2387, 1170, 1074, 2388,
	2389, 2249, 2113, 120, 1983, 973, 1830, 164, 975, 2721,
	1106, 2802, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1201,
	1200, 1202, 1203, 1984, 978, 2149, 1080, 1081, 2148, 1160,
	87, 2150, 749, 1122, 1124, 1133, 2459, 87, 87, 1831,
	1832, 1111, 1112, 748, 1885, 1094, 1094, 2196, 2845, 2154,
	1095, 1095, 1107, 2161, 1100, 87, 574, 1769, 1083, 1093,
	2486, 1092, 1849, 1848, 161, 574, 162, 574, 1879, 2509,
	2507, 583, 1607, 2285, 2559, 587, 1551, 581, 2947, 575,
	1298, 2203, 976, 1520, 2407, 1916, 181, 1960, 1957, 1959,
	1958, 2224, 1166, 2479, 1954, 1158, 2410, 1949, 2969, 2948,
	1546, 2480, 978, 1127, 970, 1045, 1070, 2394, 1109, 1110,
	1076, 972, 971, 1962, 1115, 1963, 2237, 1964, 2650, 2649,
	1965, 1051, 1953, 1609, 1610, 1611, 1120, 1521, 2488, 1522,
	1121, 1951, 1113, 1108, 1170, 1101, 1050, 1132, 1005, 2780,
	1126, 2487, 1114, 2646, 1919, 87, 986, 978, 1069, 1955,
	987, 1810, 2395, 1014, 1012, 987, 1023, 1022, 1437, 1021,
	976, 1020, 1019, 1119, 1952, 1018, 1301, 2410, 1017, 1025,
	1016, 1011, 1024, 1204, 962, 1204, 2978, 2397, 2984, 999,
	962, 2953, 962, 998, 960, 1104, 1560, 186, 2932, 186,
	1892, 2392, 186, 792, 165, 977, 1984, 1458, 2238, 1940,
	2841, 1556, 1146, 171, 1034, 2430, 2241, 1878, 2408, 2409,
	1005, 2223, 1073, 1431, 1430, 2393, 2077, 2079, 1429, 2213,
	1557, 585, 1140, 585, 585, 2286, 1427, 541, 536, 1166,
	2236, 1205, 1206, 2235, 2598, 2578, 1004, 2145, 585, 585,
	2108, 2064, 998, 1001, 1002, 1837, 962, 2399, 1936, 1762,
	995, 999, 575, 1345, 2645, 1078, 2254, 1084, 1998, 1270,
	1086, 575, 1085, 575, 1204, 1203, 2386, 1131, 774, 1152,
	1005, 994, 2864, 977, 116, 1796, 1797, 1026, 37, 1552,
	2641, 2572, 1950, 1165, 1162, 1163, 1164, 1169, 1171, 1168,
	1090, 1167, 1096, 1097, 1098, 1099, 1015, 1013, 1161, 1089,
	2420, 1457, 1553, 1361, 1072, 1638, 2226, 1156, 1004, 111,
	2852, 2194, 2407, 1027, 1134, 1135, 156, 2803, 977, 1639,
	1640, 1637, 2197, 2278, 2410, 2858, 1041, 1042, 1043, 984,
	1046, 1047, 1048, 1049, 1679, 2186, 1052, 1053, 1054, 1055,
	1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065,
	1066, 1067, 1068, 2560, 2244, 1040, 1550, 1175, 2923, 2243,
	1207, 1208, 1209, 1210, 2244, 2717, 1117, 2868, 1004, 2243,
	1215, 1141, 1218, 1008, 998, 2616, 2078, 1284, 2615, 112,
	1005, 1103, 81, 1009, 1569, 2460, 2461, 1289, 2976, 1142,
	1143, 2977, 1105, 2975, 1679, 1923, 2012, 1176, 2463, 186,
	1985, 1176, 2922, 585, 585, 1467, 2691, 2691, 86, 1211,
	1532, 1531, 1533, 1534, 1535, 86, 86, 2609, 2610, 186,
	1165, 1162, 1163, 1164, 1169, 1171, 1168, 1466, 1167, 2396,
	1882, 1302, 1456, 86, 1128, 1161, 1935, 1933, 585, 1088,
	1931, 1305, 186, 1014, 1290, 1304, 1155, 585, 77, 1308,
	1153, 1154, 1005, 585, 1176, 759, 757, 1307, 157, 1075,
	1082, 2949, 1079, 1005, 1012, 169, 1091, 1928, 2599, 1883,
	2880, 1228, 1356, 1229, 1232, 1174, 1175, 1881, 1004, 2813,
	1321, 2980, 2985, 1008, 998, 1176, 188, 189, 190, 801,
	1658, 1346, 2950, 1009, 1990, 1991, 1992, 2788, 1547, 2787,
	1548, 1306, 2778, 1549, 1932, 95, 1290, 177, 1540, 1118,
	1350, 1884, 2881, 1010, 1198, 1199, 1201, 1200, 1202, 1203,
	2834, 1880, 1276, 1277, 1278, 1279, 1280, 1570, 1173, 1295,
	1174, 1175, 1173, 2260, 1174, 1175, 158, 163, 160, 166,
	167, 168, 170, 172, 173, 174, 175, 1928, 2681, 98,
	1004, 2680, 176, 178, 179, 180, 998, 1001, 1002, 2623,
	962, 1004, 2835, 1039, 995, 999, 2986, 2513, 1321, 1176,
	1659, 1539, 1321, 1176, 2400, 87, 2622, 2612, 2404, 1683,
	1538, 796, 1292, 1684, 1930, 1173, 2403, 1174, 1175, 1636,
	1527, 2515, 1303, 2438, 2280, 2426, 2168, 756, 2167, 1309,
	1888, 1541, 1326, 758, 1628, 1630, 1631, 186, 805, 1192,
	1323, 1419, 1525, 1524, 2262, 1523, 1173, 1513, 1174, 1175,
	2405, 1428, 701, 702, 703, 2401, 1351, 1352, 1629, 1507,
	2402, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1201, 1200,
	1202, 1203, 1504, 1537, 585, 1503, 1454, 1502, 1477, 2861,
	2860, 2049, 1321, 1526, 1463, 2838, 1321, 1321, 1465, 1330,
	2837, 585, 585, 2836, 585, 2783, 585, 585, 2768, 585,
	585, 585, 585, 585, 585, 1368, 2272, 2271, 2270, 2264,
	1176, 2268, 2483, 2263, 585, 2261, 2767, 1464, 186, 1501,
	2266, 1196, 1197, 1198, 1199, 1201, 1200, 1202, 1203, 2265,
	1173, 1176, 1174, 1175, 1173, 186, 1174, 1175, 1331, 2716,
	2714, 2029, 1496, 1497, 2677, 2620, 2267, 2269, 585, 2605,
	186, 1194, 1195, 1196, 1197, 1198, 1199, 1201, 1200, 1202,
	1203, 1558, 1515, 1176, 585, 2429, 186, 1180, 1181, 1182,
	1183, 1184, 1185, 1186, 1178, 2428, 2177, 1450, 2165, 1286,
	1334, 1944, 186, 2003, 1943, 1443, 1500, 1793, 1775, 186,
	1600, 1566, 2002, 188, 189, 190, 1536, 2606, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 585, 188, 189,
	190, 1462, 2152, 1528, 1321, 1518, 1514, 1498, 1544, 1145,
	1510, 585, 585, 1470, 1509, 1471, 1508, 1473, 1475, 1426,
	1332, 1479, 1481, 1483, 1485, 1487, 1129, 1461, 1176, 186,
	1453, 1173, 1432, 1174, 1175, 1333, 1441, 1440, 1439, 2810,
	1574, 2099, 2968, 1460, 1460, 2937, 1321, 1578, 1565, 188,
	189, 190, 1173, 1904, 1174, 1175, 2099, 2901, 1589, 1590,
	1591, 1592, 1593, 1594, 1595, 94, 1499, 1573, 188, 189,
	190, 2809, 1902, 2772, 1577, 1657, 1579, 1580, 1581, 1582,
	2771, 1176, 2664, 1586, 1173, 2381, 1174, 1175, 1669, 585,
	1663, 1663, 1660, 1664, 1984, 1598, 2204, 1615, 100, 1561,
	2182, 1176, 1661, 1661, 585, 585, 1176, 188, 189, 190,
	1634, 2951, 1845, 981, 120, 2110, 2008, 688, 2099, 2888,
	980, 2110, 979, 1321, 1802, 1803, 1680, 1641, 1176, 1643,
	1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653,
	1654, 1655, 1176, 2099, 2884, 1575, 2571, 188, 189, 190,
	1723, 1900, 2876, 1321, 1632, 2099, 2854, 1597, 2573, 1173,
	1642, 1174, 1175, 1596, 2849, 1176, 1999, 186, 187, 2656,
	2851, 187, 585, 1172, 187, 2863, 92, 1604, 1605, 586,
	101, 187, 1176, 1754, 1571, 1572, 2118, 93, 2007, 187,
	1176, 100, 2571, 99, 2532, 1321, 186, 2099, 1576, 585,
	1635, 1780, 1723, 1781, 187, 1583, 1584, 1585, 2118, 186,
	2041, 2348, 1173, 585, 1174, 1175, 2099, 2779, 186, 2532,
	186, 2571, 186, 186, 585, 1321, 586, 585, 2416, 586,
	187, 586, 1173, 1756, 1174, 1175, 2323, 1173, 585, 1174,
	1175, 1321, 2656, 1321, 1758, 1759, 1829, 2593, 1846, 2099,
	2654, 95, 1928, 1321, 2576, 1321, 1176, 1929, 1754, 1173,
	1321, 1174, 1175, 1172, 1321, 2776, 801, 2034, 1321, 801,
	95, 1999, 2534, 1173, 2117, 1174, 1175, 1804, 1786, 2034,
	1755, 1812, 2418, 2417, 2018, 1176, 1808, 2017, 1811, 2414,
	2415, 1615, 1928, 585, 2414, 2413, 1173, 2095, 1174, 1175,
	1895, 1896, 1897, 1665, 1911, 1899, 1901, 1903, 1756, 1800,
	1671, 1672, 94, 1173, 1928, 1174, 1175, 2118, 1321, 1325,
	585, 1173, 1176, 1174, 1175, 1840, 585, 1463, 2118, 771,
	1463, 1850, 1463, 1851, 1852, 1853, 1854, 1774, 1927, 2642,
	1765, 1841, 1823, 2021, 1612, 1855, 1856, 1857, 1858, 1861,
	1862, 1863, 1864, 1999, 1321, 1807, 1984, 2222, 1555, 1788,
	1422, 2207, 1757, 1917, 1871, 1760, 1761, 2530, 585, 1999,
	1657, 1844, 1434, 1435, 1436, 1877, 1657, 1657, 1805, 1176,
	2200, 2201, 1353, 1828, 1827, 805, 92, 1173, 805, 1174,
	1175, 1843, 761, 94, 1842, 2099, 2098, 93, 1176, 1422,
	1421, 989, 1785, 1193, 1194, 1195, 1196, 1197, 1198, 1199,
	1201, 1200, 1202, 1203, 186, 1887, 1173, 988, 1174, 1175,
	1176, 186, 2928, 1914, 1176, 2141, 186, 186, 1367, 1366,
	186, 2891, 186, 87, 1505, 1506, 2799, 1328, 2769, 186,
	1511, 1512, 2728, 2640, 1872, 2441, 186, 1867, 1868, 1890,
	1886, 1321, 1898, 1173, 1922, 1174, 1175, 1925, 2637, 1926,
	2485, 2521, 2618, 2524, 2523, 1424, 1870, 1006, 1176, 87,
	2481, 1937, 186, 1921, 1920, 2443, 1938, 585, 1939, 1872,
	2520, 1176, 1615, 1924, 1941, 1942, 1176, 2439, 2142, 1956,
	1007, 2208, 1708, 2141, 1966, 1967, 1192, 2144, 1971, 1188,
	1460, 1189, 1866, 2169, 1860, 2174, 2058, 1974, 1859, 1543,
	1173, 1455, 1174, 1175, 1977, 1190, 1191, 1187, 1193, 1194,
	1195, 1196, 1197, 1198, 1199, 1201, 1200, 1202, 1203, 1173,
	1451, 1174, 1175, 1947, 1420, 113, 1074, 2800, 1975, 1976,
	1980, 2583, 2584, 1978, 2963, 1176, 1885, 1778, 2961, 2944,
	2057, 1173, 1979, 1174, 1175, 1173, 2142, 1174, 1175, 2629,
	1634, 2873, 2818, 2056, 2173, 1984, 2001, 2586, 2055, 2435,
	2434, 2625, 2433, 2348, 1968, 2187, 1994, 1602, 1996, 1700,
	1689, 1690, 1691, 1692, 1702, 1693, 1694, 1695, 1707, 1703,
	1696, 1697, 1704, 1705, 1706, 1698, 1699, 1701, 1969, 1173,
	1176, 1174, 1175, 1192, 1176, 2253, 2630, 2631, 2370, 1995,
	1489, 2174, 1173, 2371, 1174, 1175, 2589, 1173, 1492, 1174,
	1175, 2626, 2627, 2628, 1982, 1193, 1194, 1195, 1196, 1197,
	1198, 1199, 1201, 1200, 1202, 1203, 186, 1176, 2368, 1603,
	2588, 2367, 1176, 2369, 186, 2934, 1176, 2366, 2902, 585,
	1635, 1792, 1329, 1993, 187, 585, 187, 1490, 1491, 187,
	1784, 1663, 2577, 2083, 2328, 2327, 585, 2087, 1493, 1494,
	1495, 2081, 1192, 1661, 1997, 2070, 1173, 2564, 1174, 1175,
	2833, 2372, 2054, 2127, 2128, 2563, 2053, 2707, 586, 186,
	586, 586, 2011, 186, 1193, 1194, 1195, 1196, 1197, 1198,
	1199, 1201, 1200, 1202, 1203, 586, 586, 2709, 2151, 2114,
	2123, 2126, 2127, 2128, 2124, 1176, 2125, 2129, 37, 2052,
	2583, 2584, 2567, 2337, 2051, 1756, 1554, 2134, 2050, 2027,
	101, 1173, 747, 1174, 1175, 1173, 2412, 1174, 1175, 2340,
	2342, 100, 2698, 99, 2697, 775, 2159, 2178, 2343, 1176,
	2096, 671, 94, 776, 1036, 1035, 585, 2495, 2100, 2215,
	2173, 2138, 186, 2247, 1675, 2009, 1295, 1144, 1173, 186,
	1174, 1175, 1755, 1173, 2071, 1174, 1175, 1173, 1676, 1174,
	1175, 2214, 92, 585, 2133, 1176, 121, 2569, 94, 94,
	585, 2092, 2696, 93, 1463, 1463, 92, 2044, 2155, 585,
	2850, 2199, 2097, 1802, 1803, 2107, 2972, 93, 2431, 1972,
	1321, 2219, 2139, 584, 2795, 2411, 2162, 2163, 2218, 2131,
	1789, 1176, 186, 186, 186, 186, 186, 1961, 2146, 1877,
	2185, 2043, 2143, 2326, 2153, 783, 784, 2549, 1988, 186,
	186, 2325, 2061, 2062, 99, 2156, 1173, 2825, 1174, 1175,
	1176, 2166, 2824, 2715, 100, 186, 2713, 2712, 1319, 1315,
	803, 2705, 2638, 959, 2568, 966, 187, 2042, 2566, 2444,
	586, 586, 2175, 1316, 1657, 1912, 1438, 2188, 2189, 2190,
	1173, 2183, 1174, 1175, 2184, 101, 187, 2217, 782, 2704,
	2230, 2231, 2232, 2233, 2234, 2557, 100, 1443, 1782, 1783,
	1318, 2110, 1317, 2039, 2095, 586, 2287, 1615, 2240, 187,
	2965, 2964, 2277, 2019, 586, 2216, 1173, 1176, 1174, 1175,
	586, 2209, 2210, 2248, 1663, 1776, 1663, 757, 2273, 1663,
	1347, 1338, 2038, 2964, 1663, 585, 1661, 2965, 1661, 2839,
	2298, 1661, 2298, 2604, 1176, 2298, 1661, 106, 107, 773,
	2298, 585, 1173, 103, 1174, 1175, 1319, 1315, 2239, 88,
	2310, 2311, 2312, 2313, 1, 2300, 186, 2608, 2256, 2917,
	585, 1316, 2255, 2303, 554, 1766, 1293, 2317, 2304, 585,
	2257, 1173, 2274, 1174, 1175, 2945, 585, 585, 2913, 186,
	186, 186, 186, 186, 2914, 1529, 1312, 1313, 1318, 2037,
	1317, 186, 1519, 2667, 1724, 2345, 186, 2796, 2449, 186,
	2291, 186, 2447, 2351, 186, 186, 186, 101, 2351, 2360,
	1918, 2317, 2380, 1176, 763, 2331, 2035, 2636, 100, 2330,
	99, 1875, 997, 1176, 146, 2316, 2354, 1838, 2305, 2306,
	2307, 2308, 2309, 101, 1308, 2134, 2318, 1839, 1173, 2427,
	1174, 1175, 2897, 110, 100, 955, 99, 109, 186, 2454,
	2332, 2329, 1000, 1102, 1913, 94, 2245, 2657, 2160, 2246,
	2382, 585, 1847, 2383, 187, 1173, 765, 1174, 1175, 585,
	2451, 764, 2322, 2450, 186, 2448, 1373, 2362, 2363, 2373,
	2365, 1371, 1372, 1370, 186, 2361, 95, 2465, 2364, 2384,
	1375, 2377, 2378, 1374, 2446, 2031, 2020, 2535, 1565, 186,
	1606, 586, 186, 2390, 582, 2030, 2130, 184, 2359, 2319,
	2320, 2321, 2496, 1362, 1339, 2423, 2432, 2422, 586, 586,
	1037, 586, 544, 586, 586, 2419, 586, 586, 586, 586,
	586, 586, 1945, 550, 1216, 1601, 2324, 2473, 2147, 2472,
	802, 586, 2468, 795, 1173, 187, 1174, 1175, 1777, 2464,
	2085, 1877, 2477, 2356, 1173, 2476, 1174, 1175, 2561, 2336,
	2338, 2102, 187, 2341, 2445, 2334, 2832, 2489, 2706, 2889,
	2492, 2157, 1335, 2010, 1677, 586, 2529, 187, 2491, 2490,
	1817, 1627, 607, 606, 585, 186, 604, 2088, 2111, 1179,
	691, 586, 2075, 187, 1348, 2122, 2120, 2119, 1970, 1824,
	2585, 2505, 2493, 2494, 2581, 2909, 1819, 2502, 2503, 187,
	2504, 1815, 2094, 2506, 2499, 2508, 187, 2510, 2498, 615,
	608, 600, 2601, 2471, 2225, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 586, 2482, 2227, 2123, 2126, 2127,
	2128, 2124, 186, 2125, 2129, 2158, 2478, 1157, 586, 586,
	1311, 594, 968, 2554, 1674, 2555, 2801, 2856, 2176, 1987,
	2607, 2550, 2551, 2179, 2180, 2517, 187, 1310, 1687, 1688,
	2558, 186, 2436, 2565, 2205, 2590, 1905, 63, 41, 1715,
	589, 2570, 2930, 1148, 789, 32, 2580, 31, 30, 29,
	28, 186, 23, 22, 186, 186, 186, 21, 2587, 20,
	19, 2595, 25, 18, 585, 585, 17, 16, 2596, 2597,
	2457, 2594, 803, 2940, 803, 803, 2473, 2971, 2472, 115,
	50, 2602, 2643, 2644, 2603, 47, 586, 45, 123, 1147,
	1149, 122, 48, 44, 1077, 42, 27, 26, 15, 2617,
	14, 586, 586, 13, 12, 11, 585, 585, 585, 585,
	10, 9, 5, 4, 35, 34, 33, 1151, 24, 2632,
	2, 2453, 2633, 2634, 2635, 2452, 2192, 1907, 2619, 0,
	2621, 0, 0, 0, 0, 0, 0, 0, 2663, 0,
	0, 0, 0, 0, 0, 2661, 2662, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2676, 187, 1663, 0, 1663, 0, 586,
	0, 0, 0, 186, 0, 0, 0, 1661, 0, 1661,
	0, 2298, 0, 2298, 0, 0, 2701, 0, 2672, 0,
	0, 0, 0, 187, 0, 0, 586, 585, 1287, 585,
	0, 0, 0, 0, 2684, 0, 187, 0, 0, 0,
	586, 2685, 2694, 0, 0, 187, 0, 187, 2673, 187,
	187, 586, 2351, 0, 586, 2722, 2724, 0, 1663, 2710,
	2730, 2711, 0, 2726, 37, 586, 2702, 0, 2718, 2720,
	1661, 0, 0, 0, 0, 0, 2354, 0, 757, 0,
	2354, 0, 0, 0, 1299, 1300, 0, 0, 0, 0,
	0, 585, 0, 0, 0, 0, 0, 0, 2734, 0,
	0, 0, 0, 0, 186, 0, 0, 0, 0, 2777,
	2731, 2732, 0, 0, 0, 0, 0, 585, 0, 1343,
	586, 0, 0, 2773, 0, 0, 2775, 0, 803, 0,
	0, 2789, 2774, 0, 1363, 0, 0, 0, 0, 0,
	2815, 2790, 2816, 2424, 2425, 0, 585, 586, 2791, 2781,
	585, 585, 0, 586, 0, 0, 0, 0, 1663, 2798,
	2819, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1661, 0, 0, 0, 0, 0, 2829, 0, 0, 585,
	0, 0, 0, 2826, 2827, 0, 0, 2828, 0, 0,
	2831, 0, 0, 0, 0, 586, 0, 2843, 0, 0,
	2840, 0, 2842, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2846, 0, 0, 0, 0, 0,
	585, 0, 0, 0, 2354, 0, 0, 0, 0, 757,
	0, 0, 0, 0, 0, 186, 0, 0, 2848, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 187, 0,
	585, 186, 0, 187, 187, 0, 0, 187, 0, 187,
	0, 0, 2859, 0, 0, 0, 187, 0, 2865, 0,
	0, 0, 0, 187, 0, 2862, 0, 0, 0, 0,
	0, 0, 0, 2855, 37, 0, 0, 0, 0, 0,
	0, 0, 585, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 586, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 585, 585, 0, 0, 0, 2866,
	2351, 2882, 2887, 0, 0, 959, 0, 585, 2892, 0,
	2890, 0, 0, 0, 0, 2896, 186, 585, 1287, 37,
	0, 0, 1469, 1469, 2905, 1469, 0, 1469, 1469, 2908,
	1478, 1469, 1469, 1469, 1469, 1469, 2798, 2898, 2926, 2916,
	2921, 0, 0, 1287, 1287, 959, 0, 2933, 0, 0,
	0, 0, 0, 2939, 2613, 2614, 0, 0, 0, 585,
	0, 0, 0, 1320, 0, 0, 0, 672, 585, 0,
	0, 0, 0, 0, 2954, 0, 0, 2952, 2958, 1542,
	2956, 2962, 2960, 0, 0, 1663, 0, 2959, 0, 0,
	0, 0, 0, 0, 0, 1562, 2973, 1661, 0, 0,
	2979, 2981, 0, 0, 0, 0, 2647, 0, 0, 0,
	2651, 2652, 2653, 0, 0, 0, 0, 0, 185, 2989,
	2990, 540, 2816, 2988, 580, 0, 0, 0, 1663, 0,
	2987, 540, 0, 0, 0, 0, 0, 182, 803, 540,
	1661, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	0, 187, 803, 803, 770, 0, 586, 0, 0, 0,
	0, 121, 586, 143, 0, 0, 0, 0, 0, 0,
	788, 0, 788, 586, 164, 0, 0, 0, 182, 0,
	540, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	187, 0, 121, 0, 0, 153, 0, 0, 0, 0,
	142, 0, 0, 0, 0, 164, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1670, 161, 0, 162, 0, 0, 0, 1287, 0, 0,
	0, 0, 0, 0, 0, 1685, 1686, 0, 0, 130,
	131, 152, 151, 181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 586, 0, 0, 0, 0, 0, 187,
	0, 0, 161, 0, 162, 0, 187, 0, 0, 0,
	0, 0, 803, 0, 0, 0, 0, 0, 0, 0,
	586, 0, 0, 0, 181, 0, 0, 586, 2784, 2785,
	2786, 0, 0, 0, 0, 0, 586, 0, 0, 0,
	0, 0, 0, 1779, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	187, 187, 187, 187, 0, 0, 0, 0, 0, 0,
	1791, 0, 0, 0, 0, 0, 187, 187, 0, 147,
	128, 154, 135, 127, 1343, 148, 149, 803, 0, 0,
	0, 165, 187, 0, 0, 803, 0, 0, 803, 0,
	171, 136, 0, 0, 0, 0, 0, 0, 0, 959,
	0, 0, 0, 0, 0, 139, 137, 132, 133, 134,
	138, 0, 0, 0, 0, 0, 0, 129, 0, 0,
	0, 0, 165, 0, 0, 0, 140, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 966, 0, 0, 0, 0, 0,
	0, 0, 586, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 586, 0,
	0, 959, 0, 0, 0, 0, 0, 966, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 586, 0, 0,
	0, 0, 0, 156, 0, 0, 586, 0, 0, 0,
	0, 0, 0, 586, 586, 0, 187, 187, 187, 187,
	187, 0, 0, 0, 0, 0, 0, 0, 187, 959,
	0, 0, 0, 187, 0, 0, 187, 0, 187, 0,
	0, 187, 187, 187, 156, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	150, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 586, 0,
	0, 0, 0, 0, 0, 0, 586, 0, 0, 0,
	0, 187, 0, 144, 0, 0, 145, 0, 0, 0,
	0, 187, 0, 0, 540, 0, 540, 0, 0, 540,
	0, 0, 0, 0, 0, 0, 187, 0, 1981, 187,
	0, 0, 0, 0, 0, 157, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 169, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 586, 187, 158, 163, 160, 166, 167, 168, 170,
	172, 173, 174, 175, 0, 177, 0, 0, 0, 176,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 163, 160, 166, 167, 168,
	170, 172, 173, 174, 175, 0, 0, 0, 0, 187,
	176, 178, 179, 180, 1288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 803, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	1791, 0, 0, 0, 0, 0, 2089, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2104, 187, 0,
	0, 187, 187, 187, 0, 0, 540, 0, 0, 0,
	0, 586, 586, 0, 0, 0, 0, 0, 1322, 1324,
	0, 0, 0, 0, 0, 0, 770, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 540,
	0, 0, 0, 586, 586, 586, 586, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2198, 0,
	0, 0, 0, 0, 0, 0, 0, 2181, 0, 0,
	0, 121, 0, 143, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 164, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1791, 0, 0, 0, 0, 0,
	187, 2206, 0, 0, 0, 0, 0, 0, 0, 0,
	2211, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	142, 0, 0, 0, 586, 0, 586, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 161, 0, 162, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1446,
	1447, 152, 151, 181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 586, 0,
	0, 0, 0, 0, 540, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 586, 0, 0, 0, 0, 0,
	0, 1287, 0, 1287, 0, 0, 1287, 0, 0, 0,
	0, 1287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 586, 1288, 0, 803, 586, 586, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 147,
	1448, 154, 1469, 1445, 0, 148, 149, 0, 0, 1288,
	1288, 165, 0, 0, 0, 540, 586, 0, 0, 0,
	171, 2333, 0, 0, 0, 0, 0, 0, 0, 0,
	803, 0, 1516, 0, 1287, 0, 0, 2358, 1469, 1287,
	0, 0, 0, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 586, 0, 0,
	0, 0, 0, 1564, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 540,
	0, 0, 0, 0, 0, 0, 540, 586, 187, 0,
	0, 0, 0, 0, 0, 1587, 1588, 540, 540, 540,
	540, 540, 540, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 959, 0, 0, 1287, 0, 0, 0, 586,
	1791, 0, 0, 156, 0, 0, 540, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 586, 586, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 586, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 586, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	788, 0, 0, 0, 0, 0, 0, 788, 788, 0,
	0, 1681, 0, 1288, 0, 1682, 0, 0, 0, 0,
	150, 0, 0, 0, 0, 0, 586, 0, 0, 0,
	0, 0, 0, 0, 0, 586, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 144, 0, 2333, 145, 788, 1564, 788,
	788, 788, 788, 788, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1322, 1764, 0, 0, 0, 0,
	0, 0, 0, 0, 1516, 157, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 788,
	0, 0, 0, 0, 0, 0, 0, 1787, 0, 0,
	0, 0, 0, 770, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 0, 0, 0,
	0, 0, 0, 1564, 177, 540, 0, 540, 0, 540,
	1826, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 163, 160, 166, 167, 168, 170,
	172, 173, 174, 175, 0, 1791, 1791, 0, 182, 176,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 1442,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 121, 0, 143, 0, 0, 0, 0, 1889,
	0, 0, 0, 0, 0, 164, 0, 2668, 2669, 2670,
	2671, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 0, 0,
	0, 142, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1287, 0, 1287, 0, 0, 0, 0, 0,
	0, 0, 161, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1446, 1447, 152, 151, 181, 0, 0, 0, 0, 0,
	0, 0, 0, 1287, 0, 0, 0, 0, 2723, 0,
	2725, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 540, 0, 0, 0, 0, 0, 0, 540, 0,
	0, 0, 0, 540, 540, 0, 0, 540, 0, 1973,
	0, 0, 0, 0, 0, 0, 540, 0, 0, 0,
	0, 0, 0, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 1791, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 540,
	147, 1448, 154, 0, 1445, 0, 148, 149, 803, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 0,
	2938, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	1390, 0, 0, 0, 0, 0, 0, 2822, 0, 0,
	0, 2822, 2822, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2000,
	0, 0, 0, 2004, 0, 2005, 2006, 0, 0, 0,
	1791, 0, 788, 0, 2014, 0, 0, 2015, 2016, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2022, 2023, 2024, 2025, 2026, 0,
	2028, 1791, 0, 0, 0, 0, 2032, 0, 2033, 0,
	0, 0, 2036, 0, 0, 0, 0, 0, 0, 0,
	2045, 2046, 2047, 2048, 156, 0, 0, 0, 0, 0,
	0, 1791, 787, 2059, 2060, 0, 0, 0, 0, 788,
	788, 2065, 2066, 2067, 2068, 2069, 0, 1787, 0, 0,
	1564, 0, 0, 540, 0, 0, 0, 0, 2082, 0,
	1378, 1516, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1287, 0, 2883, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 803, 803, 0, 0, 0,
	598, 150, 0, 0, 0, 0, 540, 0, 2906, 0,
	540, 0, 0, 0, 0, 0, 0, 0, 2911, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 781, 0, 144, 0, 0, 145, 0, 0,
	0, 1391, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1791, 0, 0, 0, 0, 0, 157, 0, 0, 2911,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 540,
	0, 0, 0, 0, 0, 0, 2191, 0, 0, 0,
	0, 0, 0, 0, 0, 1404, 1407, 1408, 1409, 1410,
	1411, 1412, 0, 1413, 1414, 1415, 1416, 1417, 1392, 1393,
	1394, 1395, 1376, 1377, 1405, 177, 1379, 0, 1380, 1381,
	1382, 1383, 1384, 1385, 1386, 1387, 1388, 698, 79, 1389,
	1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 0, 540,
	540, 540, 540, 540, 158, 163, 160, 166, 167, 168,
	170, 172, 173, 174, 175, 0, 540, 540, 0, 0,
	176, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 540, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 788, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2284, 760, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2299, 760, 0, 1288, 0, 1288,
	0, 0, 1288, 0, 0, 0, 0, 1288, 0, 0,
	0, 967, 0, 0, 0, 2314, 2315, 0, 0, 1406,
	2084, 788, 0, 699, 700, 0, 0, 0, 0, 1662,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2357,
	1288, 0, 0, 0, 0, 1288, 540, 540, 540, 540,
	540, 0, 0, 0, 0, 0, 2375, 2376, 2374, 0,
	0, 0, 0, 540, 0, 0, 1516, 0, 540, 0,
	0, 540, 2385, 1564, 706, 707, 708, 709, 710, 711,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 744, 745, 746, 540, 0, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 1288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 540, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 540, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 574, 0, 540, 0, 0, 540,
	0, 0, 0, 0, 0, 0, 2497, 0, 0, 0,
	0, 0, 0, 2501, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2511, 2512, 2514,
	2516, 0, 0, 0, 0, 571, 0, 2522, 0, 0,
	0, 0, 2526, 2527, 2528, 0, 0, 0, 0, 2531,
	0, 0, 0, 0, 0, 2533, 0, 0, 2537, 2538,
	2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 0, 0,
	2547, 0, 0, 0, 0, 0, 2552, 0, 0, 0,
	0, 558, 540, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 556, 0, 0, 0, 0, 0, 0,
	0, 0, 1177, 0, 0, 0, 0, 0, 0, 2574,
	2575, 0, 0, 2579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1224, 2591, 2592, 553, 0, 0, 0, 0, 0, 540,
	0, 0, 566, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 563, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 540, 0,
	0, 0, 0, 0, 2736, 2738, 2737, 2747, 2748, 2749,
	2750, 2751, 2752, 2753, 637, 0, 0, 0, 540, 0,
	575, 540, 540, 540, 0, 0, 0, 0, 0, 0,
	0, 598, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2655, 0, 543, 0, 545, 559, 0, 577, 0, 576,
	549, 0, 547, 551, 560, 552, 0, 546, 0, 557,
	0, 0, 548, 561, 562, 564, 567, 568, 569, 565,
	0, 555, 578, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1137, 0,
	1137, 1137, 0, 0, 0, 0, 0, 0, 0, 2682,
	0, 0, 0, 2683, 0, 1337, 0, 79, 1288, 2687,
	1288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1516, 0, 0, 0, 760, 1212, 1213, 1214, 0, 1217,
	0, 1219, 1220, 1221, 1222, 0, 1225, 1227, 1227, 1288,
	1227, 1231, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239,
	1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249,
	1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259,
	1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269,
	0, 1271, 1272, 1273, 1274, 1275, 0, 0, 0, 0,
	1231, 1231, 1231, 1231, 1231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2742,
	2743, 1516, 0, 0, 2794, 0, 0, 0, 0, 0,
	0, 0, 0, 579, 0, 0, 0, 0, 2804, 2805,
	2806, 0, 2807, 2808, 0, 0, 0, 0, 2811, 0,
	2812, 572, 2814, 2817, 0, 0, 0, 0, 1297, 2821,
	0, 0, 0, 0, 760, 0, 573, 0, 760, 0,
	0, 0, 0, 0, 760, 0, 0, 0, 0, 682,
	1425, 632, 686, 634, 683, 684, 0, 630, 633, 685,
	0, 0, 0, 0, 0, 0, 0, 2847, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1390, 635, 636, 2735, 2739,
	2740, 2741, 2744, 2745, 2746, 2754, 2756, 660, 2755, 2757,
	2758, 2759, 2762, 2763, 2764, 2765, 2760, 2761, 2766, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1516, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2867, 0, 0, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2872,
	0, 0, 0, 0, 2877, 0, 0, 0, 0, 0,
	2878, 2879, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1567, 0, 0, 0, 0, 1288, 2885, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 78, 39, 40, 80,
	0, 0, 0, 1516, 0, 1378, 0, 2929, 0, 0,
	0, 0, 0, 0, 0, 0, 84, 0, 0, 2935,
	43, 69, 70, 2936, 67, 71, 0, 0, 0, 0,
	0, 0, 0, 68, 0, 1622, 1623, 1624, 1625, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 56, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 87, 0, 0, 1667, 1668, 0, 0,
	0, 0, 0, 0, 1673, 0, 1391, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1709,
	1710, 1711, 1712, 1713, 1714, 1716, 1720, 1721, 598, 1727,
	1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737,
	1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747,
	1748, 1749, 0, 0, 0, 0, 0, 0, 0, 0,
	1404, 1407, 1408, 1409, 1410, 1411, 1412, 0, 1413, 1414,
	1415, 1416, 1417, 1392, 1393, 1394, 1395, 1376, 1377, 1405,
	598, 1379, 0, 1380, 1381, 1382, 1383, 1384, 1385, 1386,
	1387, 1388, 0, 0, 1389, 1396, 1397, 1398, 1399, 1400,
	1401, 1402, 1403, 0, 1137, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1798, 1799, 1137, 1137,
	0, 0, 0, 0, 0, 0, 46, 49, 52, 51,
	54, 0, 66, 0, 0, 75, 72, 0, 0, 0,
	0, 0, 0, 0, 1835, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 55, 83,
	82, 0, 0, 64, 65, 53, 0, 87, 0, 0,
	0, 73, 74, 692, 699, 700, 701, 702, 703, 693,
	695, 0, 0, 0, 694, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 697, 704, 705,
	0, 0, 0, 1873, 0, 0, 0, 57, 58, 0,
	59, 60, 61, 62, 1406, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2474, 2475, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 706, 707, 708, 709, 710,
	711, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1818,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 86, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	967, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 87, 0, 0, 0, 0, 0, 692, 699,
	700, 701, 702, 703, 693, 695, 0, 0, 0, 694,
	0, 0, 0, 967, 0, 0, 0, 0, 0, 0,
	0, 0, 697, 704, 705, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	699, 700, 2013, 0, 0, 0, 1662, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 682, 0, 0, 686, 0, 683, 684, 2474, 2475,
	0, 685, 0, 0, 0, 0, 0, 0, 1224, 0,
	706, 707, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 706, 707, 708, 709, 710, 711, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
	735, 736, 737, 738, 739, 740, 741, 742, 743, 744,
	745, 746, 0, 1337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1989, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2063, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2080,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 760, 0, 0,
	0, 0, 2252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2115, 2116, 0,
	2275, 2276, 0, 0, 0, 2279, 2135, 0, 2136, 2137,
	2281, 2282, 2283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2288, 2289, 2290, 0, 0, 1727, 2292, 0,
	2293, 2294, 0, 0, 0, 2301, 2302, 0, 0, 0,
	0, 0, 0, 1727, 1727, 1727, 1727, 1727, 598, 598,
	598, 598, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2212, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2379, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2442,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2519, 0, 0, 0, 0, 0, 0,
	2525, 0, 0, 1818, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2355, 0, 79, 0, 0, 1818, 1818, 1818, 1818,
	1818, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2135, 760, 0, 0, 0, 1818, 0,
	0, 1818, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 598, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2639, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2660, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2674, 0, 2675, 0,
	0, 0, 0, 2678, 2679, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2719, 0, 0, 0, 1818,
	0, 0, 0, 0, 0, 0, 2727, 0, 0, 2729,
	0, 0, 2600, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2733, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2770, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2830, 598, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2695, 0, 2699, 2700,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2355, 0, 79, 0, 2355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 598, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2871, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2782, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	598, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2927, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1236, 1237, 1238, 1239, 1240, 1241, 1242,
	1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252,
	1253, 1254, 1255, 1256, 1257, 1259, 1260, 1261, 1262, 1263,
	1264, 1265, 1266, 1267, 1268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2857, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 0, 0,
	937, 922, 460, 79, 868, 940, 837, 856, 950, 859,
	862, 904, 816, 882, 377, 853, 808, 841, 811, 848,
	812, 839, 870, 250, 836, 924, 886, 939, 332, 247,
	818, 842, 391, 858, 197, 906, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	946, 336, 892, 2886, 444, 362, 0, 0, 79, 872,
	928, 880, 918, 867, 905, 826, 891, 941, 854, 901,
	942, 294, 232, 196, 374, 445, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 2899, 0, 2900, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 850, 898, 936,
	851, 900, 245, 292, 252, 244, 464, 947, 927, 815,
	879, 935, 0, 0, 214, 938, 874, 0, 903, 0,
	953, 810, 894, 0, 813, 817, 949, 931, 845, 255,
	0, 0, 0, 0, 0, 0, 0, 871, 881, 915,
	865, 0, 0, 0, 0, 0, 0, 0, 843, 0,
	890, 0, 0, 0, 822, 814, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 869, 0, 0,
	0, 825, 0, 844, 916, 0, 807, 275, 819, 363,
	237, 0, 920, 930, 866, 498, 934, 864, 863, 910,
	823, 926, 857, 331, 821, 300, 192, 210, 0, 855,
	373, 415, 421, 925, 840, 849, 235, 847, 419, 387,
	482, 218, 264, 412, 393, 417, 400, 267, 889, 908,
	418, 337, 469, 407, 479, 499, 500, 243, 367, 489,
	458, 495, 512, 211, 240, 381, 451, 485, 441, 360,
	465, 466, 299, 440, 273, 195, 335, 505, 209, 427,
	227, 216, 202, 453, 477, 224, 431, 0, 0, 514,
	204, 475, 450, 356, 296, 297, 203, 0, 411, 248,
	271, 238, 376, 472, 473, 236, 515, 213, 494, 206,
	1139, 493, 369, 468, 476, 357, 347, 205, 474, 355,
	346, 302, 321, 322, 260, 282, 405, 340, 406, 283,
	365, 364, 366, 198, 486, 0, 199, 0, 446, 487,
	516, 219, 220, 222, 835, 259, 263, 270, 272, 278,
	279, 286, 333, 380, 404, 402, 408, 921, 463, 480,
	490, 497, 503, 504, 506, 507, 508, 509, 510, 511,
	368, 285, 442, 301, 338, 913, 952, 386, 420, 225,
	484, 443, 830, 834, 828, 895, 829, 884, 885, 831,
	943, 944, 945, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 917, 824, 0, 832, 833, 0, 923, 932,
	933, 535, 348, 433, 481, 303, 315, 318, 308, 327,
	0, 328, 304, 305, 310, 312, 313, 314, 319, 320,
	324, 330, 888, 191, 207, 334, 948, 409, 268, 513,
	492, 488, 809, 827, 242, 838, 846, 0, 852, 860,
	861, 873, 875, 876, 877, 878, 896, 897, 899, 907,
	909, 912, 914, 919, 929, 951, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 276, 281, 284,
	289, 290, 293, 298, 344, 350, 351, 352, 353, 370,
	371, 372, 375, 378, 379, 382, 384, 385, 388, 392,
	396, 397, 398, 399, 401, 403, 410, 414, 422, 423,
	424, 425, 426, 429, 430, 435, 436, 437, 438, 439,
	447, 448, 452, 470, 471, 483, 496, 501, 428, 277,
	478, 502, 0, 343, 887, 893, 345, 261, 280, 291,
	902, 491, 449, 212, 416, 269, 201, 231, 215, 239,
	254, 257, 295, 354, 361, 390, 395, 274, 251, 229,
	413, 226, 432, 455, 456, 457, 459, 358, 246, 394,
	883, 911, 341, 461, 462, 287, 359, 0, 0, 937,
	922, 460, 0, 868, 940, 837, 856, 950, 859, 862,
	904, 816, 882, 377, 853, 808, 841, 811, 848, 812,
	839, 870, 250, 836, 924, 886, 939, 332, 247, 818,
	842, 391, 858, 197, 906, 434, 234, 342, 339, 467,
	262, 253, 249, 233, 288, 349, 389, 454, 383, 946,
	336, 892, 0, 444, 362, 0, 0, 0, 872, 928,
	880, 918, 867, 905, 826, 891, 941, 854, 901, 942,
	294, 232, 196, 374, 445, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 317, 326, 325, 306,
	307, 309, 311, 316, 323, 329, 850, 898, 936, 851,
	900, 245, 292, 252, 244, 464, 947, 927, 815, 879,
	935, 0, 0, 214, 938, 874, 0, 903, 0, 953,
	810, 894, 0, 813, 817, 949, 931, 845, 255, 0,
	0, 0, 0, 0, 0, 0, 871, 881, 915, 865,
	0, 0, 0, 0, 0, 2386, 0, 843, 0, 890,
	0, 0, 0, 822, 814, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 869, 0, 0, 0,
	825, 0, 844, 916, 0, 807, 275, 819, 363, 237,
	0, 920, 930, 866, 498, 934, 864, 863, 910, 823,
	926, 857, 331, 821, 300, 192, 210, 0, 855, 373,
	415, 421, 925, 840, 849, 235, 847, 419, 387, 482,
	218, 264, 412, 393, 417, 400, 267, 889, 908, 418,
	337, 469, 407, 479, 499, 500, 243, 367, 489, 458,
	495, 512, 211, 240, 381, 451, 485, 441, 360, 465,
	466, 299, 440, 273, 195, 335, 505, 209, 427, 227,
	216, 202, 453, 477, 224, 431, 0, 0, 514, 204,
	475, 450, 356, 296, 297, 203, 0, 411, 248, 271,
	238, 376, 472, 473, 236, 515, 213, 494, 206, 1139,
	493, 369, 468, 476, 357, 347, 205, 474, 355, 346,
	302, 321, 322, 260, 282, 405, 340, 406, 283, 365,
	364, 366, 198, 486, 0, 199, 0, 446, 487, 516,
	219, 220, 222, 835, 259, 263, 270, 272, 278, 279,
	286, 333, 380, 404, 402, 408, 921, 463, 480, 490,
	497, 503, 504, 506, 507, 508, 509, 510, 511, 368,
	285, 442, 301, 338, 913, 952, 386, 420, 225, 484,
	443, 830, 834, 828, 895, 829, 884, 885, 831, 943,
	944, 945, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 917, 824, 0, 832, 833, 0, 923, 932, 933,
	535, 348, 433, 481, 303, 315, 318, 308, 327, 0,
	328, 304, 305, 310, 312, 313, 314, 319, 320, 324,
	330, 888, 191, 207, 334, 948, 409, 268, 513, 492,
	488, 809, 827, 242, 838, 846, 0, 852, 860, 861,
	873, 875, 876, 877, 878, 896, 897, 899, 907, 909,
	912, 914, 919, 929, 951, 193, 194, 200, 208, 217,
	221, 228, 241, 256, 258, 265, 276, 281, 284, 289,
	290, 293, 298, 344, 350, 351, 352, 353, 370, 371,
	372, 375, 378, 379, 382, 384, 385, 388, 392, 396,
	397, 398, 399, 401, 403, 410, 414, 422, 423, 424,
	425, 426, 429, 430, 435, 436, 437, 438, 439, 447,
	448, 452, 470, 471, 483, 496, 501, 428, 277, 478,
	502, 0, 343, 887, 893, 345, 261, 280, 291, 902,
	491, 449, 212, 416, 269, 201, 231, 215, 239, 254,
	257, 295, 354, 361, 390, 395, 274, 251, 229, 413,
	226, 432, 455, 456, 457, 459, 358, 246, 394, 883,
	911, 341, 461, 462, 287, 359, 0, 0, 937, 922,
	460, 0, 868, 940, 837, 856, 950, 859, 862, 904,
	816, 882, 377, 853, 808, 841, 811, 848, 812, 839,
	870, 250, 836, 924, 886, 939, 332, 247, 818, 842,
	391, 858, 197, 906, 434, 234, 342, 339, 467, 262,
	253, 249, 233, 288, 349, 389, 454, 383, 946, 336,
	892, 0, 444, 362, 0, 0, 0, 872, 928, 880,
	918, 867, 905, 826, 891, 941, 854, 901, 942, 294,
	232, 196, 374, 445, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 317, 326, 325, 306, 307,
	309, 311, 316, 323, 329, 850, 898, 936, 851, 900,
	245, 292, 252, 244, 464, 947, 927, 815, 879, 935,
	0, 0, 214, 938, 874, 0, 903, 0, 953, 810,
	894, 0, 813, 817, 949, 931, 845, 255, 0, 0,
	0, 0, 0, 0, 0, 871, 881, 915, 865, 0,
	0, 0, 0, 0, 2344, 0, 843, 0, 890, 0,
	0, 0, 822, 814, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 869, 0, 0, 0, 825,
	0, 844, 916, 0, 807, 275, 819, 363, 237, 0,
	920, 930, 866, 498, 934, 864, 863, 910, 823, 926,
	857, 331, 821, 300, 192, 210, 0, 855, 373, 415,
	421, 925, 840, 849, 235, 847, 419, 387, 482, 218,
	264, 412, 393, 417, 400, 267, 889, 908, 418, 337,
	469, 407, 479, 499, 500, 243, 367, 489, 458, 495,
	512, 211, 240, 381, 451, 485, 441, 360, 465, 466,
	299, 440, 273, 195, 335, 505, 209, 427, 227, 216,
	202, 453, 477, 224, 431, 0, 0, 514, 204, 475,
	450, 356, 296, 297, 203, 0, 411, 248, 271, 238,
	376, 472, 473, 236, 515, 213, 494, 206, 1139, 493,
	369, 468, 476, 357, 347, 205, 474, 355, 346, 302,
	321, 322, 260, 282, 405, 340, 406, 283, 365, 364,
	366, 198, 486, 0, 199, 0, 446, 487, 516, 219,
	220, 222, 835, 259, 263, 270, 272, 278, 279, 286,
	333, 380, 404, 402, 408, 921, 463, 480, 490, 497,
	503, 504, 506, 507, 508, 509, 510, 511, 368, 285,
	442, 301, 338, 913, 952, 386, 420, 225, 484, 443,
	830, 834, 828, 895, 829, 884, 885, 831, 943, 944,
	945, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	917, 824, 0, 832, 833, 0, 923, 932, 933, 535,
	348, 433, 481, 303, 315, 318, 308, 327, 0, 328,
	304, 305, 310, 312, 313, 314, 319, 320, 324, 330,
	888, 191, 207, 334, 948, 409, 268, 513, 492, 488,
	809, 827, 242, 838, 846, 0, 852, 860, 861, 873,
	875, 876, 877, 878, 896, 897, 899, 907, 909, 912,
	914, 919, 929, 951, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 276, 281, 284, 289, 290,
	293, 298, 344, 350, 351, 352, 353, 370, 371, 372,
	375, 378, 379, 382, 384, 385, 388, 392, 396, 397,
	398, 399, 401, 403, 410, 414, 422, 423, 424, 425,
	426, 429, 430, 435, 436, 437, 438, 439, 447, 448,
	452, 470, 471, 483, 496, 501, 428, 277, 478, 502,
	0, 343, 887, 893, 345, 261, 280, 291, 902, 491,
	449, 212, 416, 269, 201, 231, 215, 239, 254, 257,
	295, 354, 361, 390, 395, 274, 251, 229, 413, 226,
	432, 455, 456, 457, 459, 358, 246, 394, 883, 911,
	341, 461, 462, 287, 359, 0, 0, 937, 922, 460,
	0, 868, 940, 837, 856, 950, 859, 862, 904, 816,
	882, 377, 853, 808, 841, 811, 848, 812, 839, 870,
	250, 836, 924, 886, 939, 332, 247, 818, 842, 391,
	858, 197, 906, 434, 234, 342, 339, 467, 262, 253,
	249, 233, 288, 349, 389, 454, 383, 946, 336, 892,
	0, 444, 362, 0, 0, 0, 872, 928, 880, 918,
	867, 905, 826, 891, 941, 854, 901, 942, 294, 232,
	196, 374, 445, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 317, 326, 325, 306, 307, 309,
	311, 316, 323, 329, 850, 898, 936, 851, 900, 245,
	292, 252, 244, 464, 947, 927, 815, 879, 935, 0,
	0, 214, 938, 874, 0, 903, 0, 953, 810, 894,
	0, 813, 817, 949, 931, 845, 255, 0, 0, 0,
	0, 0, 0, 0, 871, 881, 915, 865, 0, 0,
	0, 0, 0, 1806, 0, 843, 0, 890, 0, 0,
	0, 822, 814, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 869, 0, 0, 0, 825, 0,
	844, 916, 0, 807, 275, 819, 363, 237, 0, 920,
	930, 866, 498, 934, 864, 863, 910, 823, 926, 857,
	331, 821, 300, 192, 210, 0, 855, 373, 415, 421,
	925, 840, 849, 235, 847, 419, 387, 482, 218, 264,
	412, 393, 417, 400, 267, 889, 908, 418, 337, 469,
	407, 479, 499, 500, 243, 367, 489, 458, 495, 512,
	211, 240, 381, 451, 485, 441, 360, 465, 466, 299,
	440, 273, 195, 335, 505, 209, 427, 227, 216, 202,
	453, 477, 224, 431, 0, 0, 514, 204, 475, 450,
	356, 296, 297, 203, 0, 411, 248, 271, 238, 376,
	472, 473, 236, 515, 213, 494, 206, 1139, 493, 369,
	468, 476, 357, 347, 205, 474, 355, 346, 302, 321,
	322, 260, 282, 405, 340, 406, 283, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 516, 219, 220,
	222, 835, 259, 263, 270, 272, 278, 279, 286, 333,
	380, 404, 402, 408, 921, 463, 480, 490, 497, 503,
	504, 506, 507, 508, 509, 510, 511, 368, 285, 442,
	301, 338, 913, 952, 386, 420, 225, 484, 443, 830,
	834, 828, 895, 829, 884, 885, 831, 943, 944, 945,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 917,
	824, 0, 832, 833, 0, 923, 932, 933, 535, 348,
	433, 481, 303, 315, 318, 308, 327, 0, 328, 304,
	305, 310, 312, 313, 314, 319, 320, 324, 330, 888,
	191, 207, 334, 948, 409, 268, 513, 492, 488, 809,
	827, 242, 838, 846, 0, 852, 860, 861, 873, 875,
	876, 877, 878, 896, 897, 899, 907, 909, 912, 914,
	919, 929, 951, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 276, 281, 284, 289, 290, 293,
	298, 344, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 392, 396, 397, 398,
	399, 401, 403, 410, 414, 422, 423, 424, 425, 426,
	429, 430, 435, 436, 437, 438, 439, 447, 448, 452,
	470, 471, 483, 496, 501, 428, 277, 478, 502, 0,
	343, 887, 893, 345, 261, 280, 291, 902, 491, 449,
	212, 416, 269, 201, 231, 215, 239, 254, 257, 295,
	354, 361, 390, 395, 274, 251, 229, 413, 226, 432,
	455, 456, 457, 459, 358, 246, 394, 883, 911, 341,
	461, 462, 287, 359, 0, 0, 937, 922, 460, 0,
	868, 940, 837, 856, 950, 859, 862, 904, 816, 882,
	377, 853, 808, 841, 811, 848, 812, 839, 870, 250,
	836, 924, 886, 939, 332, 247, 818, 842, 391, 858,
	197, 906, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 946, 336, 892, 0,
	444, 362, 0, 0, 0, 872, 928, 880, 918, 867,
	905, 826, 891, 941, 854, 901, 942, 294, 232, 196,
	374, 445, 266, 0, 87, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 850, 898, 936, 851, 900, 245, 292,
	252, 244, 464, 947, 927, 815, 879, 935, 0, 0,
	214, 938, 874, 0, 903, 0, 953, 810, 894, 0,
	813, 817, 949, 931, 845, 255, 0, 0, 0, 0,
	0, 0, 0, 871, 881, 915, 865, 0, 0, 0,
	0, 0, 0, 0, 843, 0, 890, 0, 0, 0,
	822, 814, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 869, 0, 0, 0, 825, 0, 844,
	916, 0, 807, 275, 819, 363, 237, 0, 920, 930,
	866, 498, 934, 864, 863, 910, 823, 926, 857, 331,
	821, 300, 192, 210, 0, 855, 373, 415, 421, 925,
	840, 849, 235, 847, 419, 387, 482, 218, 264, 412,
	393, 417, 400, 267, 889, 908, 418, 337, 469, 407,
	479, 499, 500, 243, 367, 489, 458, 495, 512, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 299, 440,
	273, 195, 335, 505, 209, 427, 227, 216, 202, 453,
	477, 224, 431, 0, 0, 514, 204, 475, 450, 356,
	296, 297, 203, 0, 411, 248, 271, 238, 376, 472,
	473, 236, 515, 213, 494, 206, 1139, 493, 369, 468,
	476, 357, 347, 205, 474, 355, 346, 302, 321, 322,
	260, 282, 405, 340, 406, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 516, 219, 220, 222,
	835, 259, 263, 270, 272, 278, 279, 286, 333, 380,
	404, 402, 408, 921, 463, 480, 490, 497, 503, 504,
	506, 507, 508, 509, 510, 511, 368, 285, 442, 301,
	338, 913, 952, 386, 420, 225, 484, 443, 830, 834,
	828, 895, 829, 884, 885, 831, 943, 944, 945, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 917, 824,
	0, 832, 833, 0, 923, 932, 933, 535, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 888, 191,
	207, 334, 948, 409, 268, 513, 492, 488, 809, 827,
	242, 838, 846, 0, 852, 860, 861, 873, 875, 876,
	877, 878, 896, 897, 899, 907, 909, 912, 914, 919,
	929, 951, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	471, 483, 496, 501, 428, 277, 478, 502, 0, 343,
	887, 893, 345, 261, 280, 291, 902, 491, 449, 212,
	416, 269, 201, 231, 215, 239, 254, 257, 295, 354,
	361, 390, 395, 274, 251, 229, 413, 226, 432, 455,
	456, 457, 459, 358, 246, 394, 883, 911, 341, 461,
	462, 287, 359, 0, 0, 937, 922, 460, 0, 868,
	940, 837, 856, 950, 859, 862, 904, 816, 882, 377,
	853, 808, 841, 811, 848, 812, 839, 870, 250, 836,
	924, 886, 939, 332, 247, 818, 842, 391, 858, 197,
	906, 434, 234, 342, 339, 467, 262, 253, 249, 233,
	288, 349, 389, 454, 383, 946, 336, 892, 0, 444,
	362, 0, 0, 0, 872, 928, 880, 918, 867, 905,
	826, 891, 941, 854, 901, 942, 294, 232, 196, 374,
	445, 266, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 317, 326, 325, 306, 307, 309, 311, 316,
	323, 329, 850, 898, 936, 851, 900, 245, 292, 252,
	244, 464, 947, 927, 815, 879, 935, 0, 0, 214,
	938, 874, 0, 903, 0, 953, 810, 894, 0, 813,
	817, 949, 931, 845, 255, 0, 0, 0, 0, 0,
	0, 0, 871, 881, 915, 865, 0, 0, 0, 0,
	0, 0, 0, 843, 0, 890, 0, 0, 0, 822,
	814, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 869, 0, 0, 0, 825, 0, 844, 916,
	0, 807, 275, 819, 363, 237, 0, 920, 930, 866,
	498, 934, 864, 863, 910, 823, 926, 857, 331, 821,
	300, 192, 210, 0, 855, 373, 415, 421, 925, 840,
	849, 235, 847, 419, 387, 482, 218, 264, 412, 393,
	417, 400, 267, 889, 908, 418, 337, 469, 407, 479,
	499, 500, 243, 367, 489, 458, 495, 512, 211, 240,
	381, 451, 485, 441, 360, 465, 466, 299, 440, 273,
	195, 335, 505, 209, 427, 227, 216, 202, 453, 477,
	224, 431, 0, 0, 514, 204, 475, 450, 356, 296,
	297, 203, 0, 411, 248, 271, 238, 376, 472, 473,
	236, 515, 213, 494, 206, 1139, 493, 369, 468, 476,
	357, 347, 205, 474, 355, 346, 302, 321, 322, 260,
	282, 405, 340, 406, 283, 365, 364, 366, 198, 486,
	0, 199, 0, 446, 487, 516, 219, 220, 222, 835,
	259, 263, 270, 272, 278, 279, 286, 333, 380, 404,
	402, 408, 921, 463, 480, 490, 497, 503, 504, 506,
	507, 508, 509, 510, 511, 368, 285, 442, 301, 338,
	913, 952, 386, 420, 225, 484, 443, 830, 834, 828,
	895, 829, 884, 885, 831, 943, 944, 945, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 917, 824, 0,
	832, 833, 0, 923, 932, 933, 535, 348, 433, 481,
	303, 315, 318, 308, 327, 0, 328, 304, 305, 310,
	312, 313, 314, 319, 320, 324, 330, 888, 191, 207,
	334, 948, 409, 268, 513, 492, 488, 809, 827, 242,
	838, 846, 0, 852, 860, 861, 873, 875, 876, 877,
	878, 896, 897, 899, 907, 909, 912, 914, 919, 929,
	951, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 276, 281, 284, 289, 290, 293, 298, 344,
	350, 351, 352, 353, 370, 371, 372, 375, 378, 379,
	382, 384, 385, 388, 392, 396, 397, 398, 399, 401,
	403, 410, 414, 422, 423, 424, 425, 426, 429, 430,
	435, 436, 437, 438, 439, 447, 448, 452, 470, 471,
	483, 496, 501, 428, 277, 478, 502, 0, 343, 887,
	893, 345, 261, 280, 291, 902, 491, 449, 212, 416,
	269, 201, 231, 215, 239, 254, 257, 295, 354, 361,
	390, 395, 274, 251, 229, 413, 226, 432, 455, 456,
	457, 459, 358, 246, 394, 883, 911, 341, 461, 462,
	287, 359, 0, 0, 937, 922, 460, 0, 868, 940,
	837, 856, 950, 859, 862, 904, 816, 882, 377, 853,
	808, 841, 811, 848, 812, 839, 870, 250, 836, 924,
	886, 939, 332, 247, 818, 842, 391, 858, 197, 906,
	434, 234, 342, 339, 467, 262, 253, 249, 233, 288,
	349, 389, 454, 383, 946, 336, 892, 0, 444, 362,
	0, 0, 0, 872, 928, 880, 918, 867, 905, 826,
	891, 941, 854, 901, 942, 294, 232, 196, 374, 445,
	266, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 317, 326, 325, 306, 307, 309, 311, 316, 323,
	329, 850, 898, 936, 851, 900, 245, 292, 252, 244,
	464, 947, 927, 815, 879, 935, 0, 0, 954, 938,
	874, 0, 903, 0, 953, 810, 894, 0, 813, 817,
	949, 931, 845, 255, 0, 0, 0, 0, 0, 0,
	0, 871, 881, 915, 865, 0, 0, 0, 0, 0,
	0, 0, 843, 0, 890, 0, 0, 0, 822, 814,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 869, 0, 0, 0, 825, 0, 844, 916, 0,
	807, 275, 819, 363, 237, 0, 920, 930, 866, 498,
	934, 864, 863, 910, 823, 926, 857, 331, 821, 300,
	192, 210, 0, 855, 373, 415, 421, 925, 840, 849,
	235, 847, 419, 387, 482, 218, 264, 412, 393, 417,
	400, 267, 889, 908, 418, 337, 469, 407, 479, 499,
	500, 243, 367, 489, 458, 495, 512, 211, 240, 381,
	451, 485, 441, 360, 465, 466, 299, 440, 273, 195,
	335, 505, 209, 427, 227, 216, 202, 453, 477, 224,
	431, 0, 0, 514, 204, 475, 450, 356, 296, 297,
	203, 0, 411, 248, 271, 238, 376, 472, 473, 236,
	515, 213, 494, 206, 820, 493, 369, 468, 476, 357,
	347, 205, 474, 355, 346, 302, 321, 322, 260, 282,
	405, 340, 406, 283, 365, 364, 366, 198, 486, 0,
	199, 0, 446, 487, 516, 219, 220, 222, 835, 259,
	263, 270, 272, 278, 279, 286, 333, 380, 404, 402,
	408, 921, 463, 480, 490, 497, 503, 504, 506, 507,
	508, 509, 510, 511, 806, 800, 799, 301, 338, 913,
	952, 386, 420, 225, 484, 443, 830, 834, 828, 895,
	829, 884, 885, 831, 943, 944, 945, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 917, 824, 0, 832,
	833, 0, 923, 932, 933, 535, 348, 433, 481, 303,
	315, 318, 308, 327, 0, 328, 304, 305, 310, 312,
	313, 314, 319, 320, 324, 330, 888, 191, 207, 334,
	948, 409, 268, 513, 492, 488, 809, 827, 242, 838,
	846, 0, 852, 860, 861, 873, 875, 876, 877, 878,
	896, 897, 899, 907, 909, 912, 914, 919, 929, 951,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 276, 281, 284, 289, 290, 293, 298, 344, 350,
	351, 352, 353, 370, 371, 372, 375, 378, 379, 382,
	384, 385, 388, 392, 396, 397, 398, 399, 401, 403,
	410, 414, 422, 423, 424, 425, 426, 429, 430, 435,
	436, 437, 438, 439, 447, 448, 452, 470, 471, 483,
	496, 501, 428, 277, 478, 502, 0, 343, 887, 893,
	345, 261, 280, 291, 902, 491, 449, 212, 416, 269,
	201, 231, 215, 239, 254, 257, 295, 354, 361, 390,
	395, 274, 251, 229, 413, 226, 432, 455, 456, 457,
	459, 358, 246, 394, 883, 911, 341, 461, 462, 287,
	359, 0, 0, 937, 922, 460, 0, 868, 940, 837,
	856, 950, 859, 862, 904, 816, 882, 377, 853, 808,
	841, 811, 848, 812, 839, 870, 250, 836, 924, 886,
	939, 332, 247, 818, 842, 391, 858, 197, 906, 434,
	234, 342, 339, 467, 262, 253, 249, 233, 288, 349,
	389, 454, 383, 946, 336, 892, 0, 444, 362, 0,
	0, 0, 872, 928, 880, 918, 867, 905, 826, 891,
	941, 854, 901, 942, 294, 232, 196, 374, 445, 266,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	317, 326, 325, 306, 307, 309, 311, 316, 323, 329,
	850, 898, 936, 851, 900, 245, 292, 252, 244, 464,
	947, 927, 815, 879, 935, 0, 0, 954, 938, 874,
	0, 903, 0, 953, 810, 894, 0, 813, 817, 949,
	931, 845, 255, 0, 0, 0, 0, 0, 0, 0,
	871, 881, 915, 865, 0, 0, 0, 0, 0, 0,
	0, 843, 0, 890, 0, 0, 0, 822, 814, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	869, 0, 0, 0, 825, 0, 844, 916, 0, 807,
	275, 819, 363, 237, 0, 920, 930, 866, 498, 934,
	864, 863, 910, 823, 926, 857, 331, 821, 300, 192,
	210, 0, 855, 373, 415, 421, 925, 840, 849, 235,
	847, 419, 387, 482, 218, 264, 412, 393, 417, 400,
	267, 889, 908, 418, 337, 469, 407, 479, 499, 500,
	243, 367, 489, 458, 495, 512, 211, 240, 381, 451,
	485, 441, 360, 465, 466, 299, 440, 273, 195, 335,
	505, 209, 427, 227, 216, 202, 453, 1354, 224, 431,
	0, 0, 514, 204, 475, 450, 356, 296, 297, 203,
	0, 411, 248, 271, 238, 376, 472, 473, 236, 515,
	213, 494, 206, 820, 493, 369, 468, 476, 357, 347,
	205, 474, 355, 346, 302, 321, 322, 260, 282, 405,
	340, 406, 283, 365, 364, 366, 198, 486, 0, 199,
	0, 446, 487, 516, 219, 220, 222, 835, 259, 263,
	270, 272, 278, 279, 286, 333, 380, 404, 402, 408,
	921, 463, 480, 490, 497, 503, 504, 506, 507, 508,
	509, 510, 511, 806, 800, 799, 301, 338, 913, 952,
	386, 420, 225, 484, 443, 830, 834, 828, 895, 829,
	884, 885, 831, 943, 944, 945, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 917, 824, 0, 832, 833,
	0, 923, 932, 933, 535, 348, 433, 481, 303, 315,
	318, 308, 327, 0, 328, 304, 305, 310, 312, 313,
	314, 319, 320, 324, 330, 888, 191, 207, 334, 948,
	409, 268, 513, 492, 488, 809, 827, 242, 838, 846,
	0, 852, 860, 861, 873, 875, 876, 877, 878, 896,
	897, 899, 907, 909, 912, 914, 919, 929, 951, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	276, 281, 284, 289, 290, 293, 298, 344, 350, 351,
	352, 353, 370, 371, 372, 375, 378, 379, 382, 384,
	385, 388, 392, 396, 397, 398, 399, 401, 403, 410,
	414, 422, 423, 424, 425, 426, 429, 430, 435, 436,
	437, 438, 439, 447, 448, 452, 470, 471, 483, 496,
	501, 428, 277, 478, 502, 0, 343, 887, 893, 345,
	261, 280, 291, 902, 491, 449, 212, 416, 269, 201,
	231, 215, 239, 254, 257, 295, 354, 361, 390, 395,
	274, 251, 229, 413, 226, 432, 455, 456, 457, 459,
	358, 246, 394, 883, 911, 341, 461, 462, 287, 359,
	0, 0, 937, 922, 460, 0, 868, 940, 837, 856,
	950, 859, 862, 904, 816, 882, 377, 853, 808, 841,
	811, 848, 812, 839, 870, 250, 836, 924, 886, 939,
	332, 247, 818, 842, 391, 858, 197, 906, 434, 234,
	342, 339, 467, 262, 253, 249, 233, 288, 349, 389,
	454, 383, 946, 336, 892, 0, 444, 362, 0, 0,
	0, 872, 928, 880, 918, 867, 905, 826, 891, 941,
	854, 901, 942, 294, 232, 196, 374, 445, 266, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 317,
	326, 325, 306, 307, 309, 311, 316, 323, 329, 850,
	898, 936, 851, 900, 245, 292, 252, 244, 464, 947,
	927, 815, 879, 935, 0, 0, 954, 938, 874, 0,
	903, 0, 953, 810, 894, 0, 813, 817, 949, 931,
	845, 255, 0, 0, 0, 0, 0, 0, 0, 871,
	881, 915, 865, 0, 0, 0, 0, 0, 0, 0,
	843, 0, 890, 0, 0, 0, 822, 814, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 869,
	0, 0, 0, 825, 0, 844, 916, 0, 807, 275,
	819, 363, 237, 0, 920, 930, 866, 498, 934, 864,
	863, 910, 823, 926, 857, 331, 821, 300, 192, 210,
	0, 855, 373, 415, 421, 925, 840, 849, 235, 847,
	419, 387, 482, 218, 264, 412, 393, 417, 400, 267,
	889, 908, 418, 337, 469, 407, 479, 499, 500, 243,
	367, 489, 458, 495, 512, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 299, 440, 273, 195, 335, 505,
	209, 427, 227, 216, 202, 453, 797, 224, 431, 0,
	0, 514, 204, 475, 450, 356, 296, 297, 203, 0,
	411, 248, 271, 238, 376, 472, 473, 236, 515, 213,
	494, 206, 820, 493, 369, 468, 476, 357, 347, 205,
	474, 355, 346, 302, 321, 322, 260, 282, 405, 340,
	406, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 516, 219, 220, 222, 835, 259, 263, 270,
	272, 278, 279, 286, 333, 380, 404, 402, 408, 921,
	463, 480, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 511, 806, 800, 799, 301, 338, 913, 952, 386,
	420, 225, 484, 443, 830, 834, 828, 895, 829, 884,
	885, 831, 943, 944, 945, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 917, 824, 0, 832, 833, 0,
	923, 932, 933, 535, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 888, 191, 207, 334, 948, 409,
	268, 513, 492, 488, 809, 827, 242, 838, 846, 0,
	852, 860, 861, 873, 875, 876, 877, 878, 896, 897,
	899, 907, 909, 912, 914, 919, 929, 951, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 471, 483, 496, 501,
	428, 277, 478, 502, 0, 343, 887, 893, 345, 261,
	280, 291, 902, 491, 449, 212, 416, 269, 201, 231,
	215, 239, 254, 257, 295, 354, 361, 390, 395, 274,
	251, 229, 413, 226, 432, 455, 456, 457, 459, 358,
	246, 394, 883, 911, 341, 461, 462, 287, 359, 0,
	0, 0, 0, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 1751, 0,
	616, 0, 0, 0, 250, 621, 0, 0, 0, 332,
	247, 0, 1752, 391, 0, 197, 0, 434, 234, 342,
	339, 467, 262, 253, 249, 233, 288, 349, 389, 454,
	383, 628, 336, 0, 0, 444, 362, 0, 0, 0,
	0, 0, 623, 624, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 232, 196, 374, 445, 266, 0, 87,
	0, 0, 188, 189, 190, 692, 699, 700, 701, 702,
	703, 693, 695, 0, 0, 223, 694, 230, 639, 641,
	640, 650, 651, 652, 653, 654, 655, 656, 637, 697,
	704, 705, 0, 245, 292, 252, 244, 464, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 599, 613, 0, 627, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 610, 611, 786, 0, 0,
	0, 676, 0, 612, 0, 0, 620, 706, 707, 708,
	709, 710, 711, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 745, 746, 622, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	363, 237, 0, 675, 0, 0, 498, 0, 0, 673,
	0, 0, 0, 0, 331, 0, 300, 192, 210, 0,
	0, 373, 415, 421, 0, 0, 0, 235, 0, 419,
	387, 482, 218, 264, 412, 393, 417, 400, 267, 0,
	0, 418, 337, 469, 407, 479, 499, 500, 243, 367,
	489, 458, 495, 512, 211, 240, 381, 451, 485, 441,
	360, 465, 466, 299, 440, 273, 195, 335, 505, 209,
	427, 227, 216, 202, 453, 477, 224, 431, 0, 0,
	514, 204, 475, 450, 356, 296, 297, 203, 0, 411,
	248, 271, 238, 376, 472, 473, 236, 515, 213, 494,
	206, 0, 493, 369, 468, 476, 357, 347, 205, 474,
	355, 346, 302, 645, 646, 260, 282, 405, 340, 406,
	283, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 516, 219, 220, 222, 0, 259, 263, 270, 272,
	278, 279, 286, 333, 380, 404, 402, 408, 0, 463,
	480, 490, 497, 503, 504, 506, 507, 508, 509, 510,
	511, 368, 285, 442, 301, 338, 0, 0, 386, 420,
	225, 484, 443, 682, 674, 632, 686, 634, 683, 684,
	629, 630, 633, 685, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 677, 619, 618, 0, 625, 626, 0,
	635, 636, 638, 642, 643, 644, 647, 648, 649, 657,
	659, 660, 658, 661, 662, 663, 666, 667, 668, 669,
	664, 665, 670, 617, 191, 207, 334, 0, 409, 268,
	513, 492, 488, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 276, 281,
	284, 289, 290, 293, 298, 344, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	392, 396, 397, 398, 399, 401, 403, 410, 414, 422,
	423, 424, 425, 426, 429, 430, 435, 436, 437, 438,
	439, 447, 448, 452, 470, 471, 483, 496, 501, 428,
	277, 478, 502, 0, 343, 0, 0, 345, 261, 280,
	291, 0, 491, 449, 212, 416, 269, 201, 231, 215,
	239, 254, 257, 295, 354, 361, 390, 395, 274, 251,
	229, 413, 226, 432, 455, 456, 457, 459, 358, 246,
	394, 0, 359, 341, 461, 462, 287, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 616, 0, 0, 0, 250, 621,
	0, 0, 0, 332, 247, 0, 0, 391, 0, 197,
	0, 434, 234, 342, 339, 467, 262, 253, 249, 233,
	288, 349, 389, 454, 383, 628, 336, 0, 0, 444,
	362, 0, 0, 0, 0, 0, 623, 624, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 232, 196, 374,
	445, 266, 0, 87, 0, 0, 188, 189, 190, 692,
	699, 700, 701, 702, 703, 693, 695, 0, 0, 223,
	694, 230, 639, 641, 640, 650, 651, 652, 653, 654,
	655, 656, 637, 697, 704, 705, 0, 245, 292, 252,
	244, 464, 0, 0, 1717, 1718, 1719, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 599, 613, 0,
	627, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 610,
	611, 0, 0, 0, 0, 676, 0, 612, 0, 0,
	620, 706, 707, 708, 709, 710, 711, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
	735, 736, 737, 738, 739, 740, 741, 742, 743, 744,
	745, 746, 622, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 363, 237, 0, 675, 0, 0,
	498, 0, 0, 673, 0, 0, 0, 0, 331, 0,
	300, 192, 210, 0, 0, 373, 415, 421, 0, 0,
	0, 235, 0, 419, 387, 482, 218, 264, 412, 393,
	417, 400, 267, 0, 0, 418, 337, 469, 407, 479,
	499, 500, 243, 367, 489, 458, 495, 512, 211, 240,
	381, 451, 485, 441, 360, 465, 466, 299, 440, 273,
	195, 335, 505, 209, 427, 227, 216, 202, 453, 477,
	224, 431, 0, 0, 514, 204, 475, 450, 356, 296,
	297, 203, 0, 411, 248, 271, 238, 376, 472, 473,
	236, 515, 213, 494, 206, 0, 493, 369, 468, 476,
	357, 347, 205, 474, 355, 346, 302, 645, 646, 260,
	282, 405, 340, 406, 283, 365, 364, 366, 198, 486,
	0, 199, 0, 446, 487, 516, 219, 220, 222, 0,
	259, 263, 270, 272, 278, 279, 286, 333, 380, 404,
	402, 408, 0, 463, 480, 490, 497, 503, 504, 506,
	507, 508, 509, 510, 511, 368, 285, 442, 301, 338,
	0, 0, 386, 420, 225, 484, 443, 682, 674, 632,
	686, 634, 683, 684, 629, 630, 633, 685, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 677, 619, 618,
	0, 625, 626, 0, 635, 636, 638, 642, 643, 644,
	647, 648, 649, 657, 659, 660, 658, 661, 662, 663,
	666, 667, 668, 669, 664, 665, 670, 617, 191, 207,
	334, 0, 409, 268, 513, 492, 488, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 276, 281, 284, 289, 290, 293, 298, 344,
	350, 351, 352, 353, 370, 371, 372, 375, 378, 379,
	382, 384, 385, 388, 392, 396, 397, 398, 399, 401,
	403, 410, 414, 422, 423, 424, 425, 426, 429, 430,
	435, 436, 437, 438, 439, 447, 448, 452, 470, 471,
	483, 496, 501, 428, 277, 478, 502, 0, 343, 0,
	0, 345, 261, 280, 291, 0, 491, 449, 212, 416,
	269, 201, 231, 215, 239, 254, 257, 295, 354, 361,
	390, 395, 274, 251, 229, 413, 226, 432, 455, 456,
	457, 459, 358, 246, 394, 0, 359, 341, 461, 462,
	287, 460, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 0, 616, 0,
	0, 0, 250, 621, 0, 0, 0, 332, 247, 0,
	0, 391, 0, 197, 0, 434, 234, 342, 339, 467,
	262, 253, 249, 233, 288, 349, 389, 454, 383, 628,
	336, 0, 0, 444, 362, 0, 0, 0, 0, 0,
	623, 624, 0, 0, 0, 0, 0, 0, 1833, 0,
	294, 232, 196, 374, 445, 266, 0, 87, 0, 0,
	188, 189, 190, 692, 699, 700, 701, 702, 703, 693,
	695, 0, 0, 223, 694, 230, 639, 641, 640, 650,
	651, 652, 653, 654, 655, 656, 637, 697, 704, 705,
	1834, 245, 292, 252, 244, 464, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 599, 613, 0, 627, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 610, 611, 0, 0, 0, 0, 676,
	0, 612, 0, 0, 620, 706, 707, 708, 709, 710,
	711, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 622, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 363, 237,
	0, 675, 0, 0, 498, 0, 0, 673, 0, 0,
	0, 0, 331, 0, 300, 192, 210, 0, 0, 373,
	415, 421, 0, 0, 0, 235, 0, 419, 387, 482,
	218, 264, 412, 393, 417, 400, 267, 0, 0, 418,
	337, 469, 407, 479, 499, 500, 243, 367, 489, 458,
	495, 512, 211, 240, 381, 451, 485, 441, 360, 465,
	466, 299, 440, 273, 195, 335, 505, 209, 427, 227,
	216, 202, 453, 477, 224, 431, 0, 0, 514, 204,
	475, 450, 356, 296, 297, 203, 0, 411, 248, 271,
	238, 376, 472, 473, 236, 515, 213, 494, 206, 0,
	493, 369, 468, 476, 357, 347, 205, 474, 355, 346,
	302, 645, 646, 260, 282, 405, 340, 406, 283, 365,
	364, 366, 198, 486, 0, 199, 0, 446, 487, 516,
	219, 220, 222, 0, 259, 263, 270, 272, 278, 279,
	286, 333, 380, 404, 402, 408, 0, 463, 480, 490,
	497, 503, 504, 506, 507, 508, 509, 510, 511, 368,
	285, 442, 301, 338, 0, 0, 386, 420, 225, 484,
	443, 682, 674, 632, 686, 634, 683, 684, 629, 630,
	633, 685, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 677, 619, 618, 0, 625, 626, 0, 635, 636,
	638, 642, 643, 644, 647, 648, 649, 657, 659, 660,
	658, 661, 662, 663, 666, 667, 668, 669, 664, 665,
	670, 617, 191, 207, 334, 0, 409, 268, 513, 492,
	488, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 241, 256, 258, 265, 276, 281, 284, 289,
	290, 293, 298, 344, 350, 351, 352, 353, 370, 371,
	372, 375, 378, 379, 382, 384, 385, 388, 392, 396,
	397, 398, 399, 401, 403, 410, 414, 422, 423, 424,
	425, 426, 429, 430, 435, 436, 437, 438, 439, 447,
	448, 452, 470, 471, 483, 496, 501, 428, 277, 478,
	502, 0, 343, 0, 0, 345, 261, 280, 291, 0,
	491, 449, 212, 416, 269, 201, 231, 215, 239, 254,
	257, 295, 354, 361, 390, 395, 274, 251, 229, 413,
	226, 432, 455, 456, 457, 459, 358, 246, 394, 0,
	0, 341, 461, 462, 287, 359, 0, 0, 0, 78,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 0, 616, 0, 0,
	0, 250, 621, 0, 0, 0, 332, 247, 0, 0,
	391, 0, 197, 0, 434, 234, 342, 339, 467, 262,
	253, 249, 233, 288, 349, 389, 454, 383, 628, 336,
	0, 0, 444, 362, 0, 0, 0, 0, 0, 623,
	624, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	232, 196, 374, 445, 266, 0, 87, 0, 0, 188,
	189, 190, 692, 699, 700, 701, 702, 703, 693, 695,
	0, 0, 223, 694, 230, 639, 641, 640, 650, 651,
	652, 653, 654, 655, 656, 637, 697, 704, 705, 0,
	245, 292, 252, 244, 464, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	599, 613, 0, 627, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 610, 611, 0, 0, 0, 0, 676, 0,
	612, 0, 0, 620, 706, 707, 708, 709, 710, 711,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 744, 745, 746, 622, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 363, 237, 0,
	675, 0, 0, 498, 0, 0, 673, 0, 0, 0,
	0, 331, 0, 300, 192, 210, 0, 0, 373, 415,
	421, 0, 0, 0, 235, 0, 419, 387, 482, 218,
	264, 412, 393, 417, 400, 267, 0, 0, 418, 337,
	469, 407, 479, 499, 500, 243, 367, 489, 458, 495,
	512, 211, 240, 381, 451, 485, 441, 360, 465, 466,
	299, 440, 273, 195, 335, 505, 209, 427, 227, 216,
	202, 453, 477, 224, 431, 0, 0, 514, 204, 475,
	450, 356, 296, 297, 203, 0, 411, 248, 271, 238,
	376, 472, 473, 236, 515, 213, 494, 206, 0, 493,
	369, 468, 476, 357, 347, 205, 474, 355, 346, 302,
	645, 646, 260, 282, 405, 340, 406, 283, 365, 364,
	366, 198, 486, 0, 199, 0, 446, 487, 516, 219,
	220, 222, 0, 259, 263, 270, 272, 278, 279, 286,
	333, 380, 404, 402, 408, 0, 463, 480, 490, 497,
	503, 504, 506, 507, 508, 509, 510, 511, 368, 285,
	442, 301, 338, 0, 0, 386, 420, 225, 484, 443,
	682, 674, 632, 686, 634, 683, 684, 629, 630, 633,
	685, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	677, 619, 618, 0, 625, 626, 0, 635, 636, 638,
	642, 643, 644, 647, 648, 649, 657, 659, 660, 658,
	661, 662, 663, 666, 667, 668, 669, 664, 665, 670,
	617, 191, 207, 334, 86, 409, 268, 513, 492, 488,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 276, 281, 284, 289, 290,
	293, 298, 344, 350, 351, 352, 353, 370, 371, 372,
	375, 378, 379, 382, 384, 385, 388, 392, 396, 397,
	398, 399, 401, 403, 410, 414, 422, 423, 424, 425,
	426, 429, 430, 435, 436, 437, 438, 439, 447, 448,
	452, 470, 471, 483, 496, 501, 428, 277, 478, 502,
	0, 343, 0, 0, 345, 261, 280, 291, 0, 491,
	449, 212, 416, 269, 201, 231, 215, 239, 254, 257,
	295, 354, 361, 390, 395, 274, 251, 229, 413, 226,
	432, 455, 456, 457, 459, 358, 246, 394, 0, 359,
	341, 461, 462, 287, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	0, 616, 0, 0, 0, 250, 621, 0, 0, 0,
	332, 247, 0, 0, 391, 0, 197, 0, 434, 234,
	342, 339, 467, 262, 253, 249, 233, 288, 349, 389,
	454, 383, 628, 336, 0, 0, 444, 362, 0, 0,
	0, 0, 0, 623, 624, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 232, 196, 374, 445, 266, 0,
	87, 0, 0, 188, 189, 190, 692, 699, 700, 701,
	702, 703, 693, 695, 0, 0, 223, 694, 230, 639,
	641, 640, 650, 651, 652, 653, 654, 655, 656, 637,
	697, 704, 705, 0, 245, 292, 252, 244, 464, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 599, 613, 0, 627, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 610, 611, 0, 0,
	0, 0, 676, 0, 612, 0, 0, 620, 706, 707,
	708, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 737,
	738, 739, 740, 741, 742, 743, 744, 745, 746, 622,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 363, 237, 0, 675, 0, 0, 498, 0, 0,
	673, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 373, 415, 421, 0, 0, 0, 235, 0,
	419, 387, 482, 218, 264, 412, 393, 417, 400, 267,
	2893, 0, 418, 337, 469, 407, 479, 499, 500, 243,
	367, 489, 458, 495, 512, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 299, 440, 273, 195, 335, 505,
	209, 427, 227, 216, 202, 453, 477, 224, 431, 0,
	0, 514, 204, 475, 450, 356, 296, 297, 203, 0,
	411, 248, 271, 238, 376, 472, 473, 236, 515, 213,
	494, 206, 0, 493, 369, 468, 476, 357, 347, 205,
	474, 355, 346, 302, 645, 646, 260, 282, 405, 340,
	406, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 516, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 380, 404, 402, 408, 0,
	463, 480, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 511, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 225, 484, 443, 682, 674, 632, 686, 634, 683,
	684, 629, 630, 633, 685, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 677, 619, 618, 0, 625, 626,
	0, 635, 636, 638, 642, 643, 644, 647, 648, 649,
	657, 659, 660, 658, 661, 662, 663, 666, 667, 668,
	669, 664, 665, 670, 617, 191, 207, 334, 0, 409,
	268, 513, 492, 488, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 471, 483, 496, 501,
	428, 277, 478, 502, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 491, 449, 212, 416, 269, 201, 231,
	215, 239, 254, 257, 295, 354, 361, 390, 395, 274,
	251, 229, 413, 226, 432, 455, 456, 457, 459, 358,
	246, 394, 0, 359, 341, 461, 462, 287, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 616, 0, 0, 0, 250,
	621, 0, 0, 0, 332, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 628, 336, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 623, 624, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	374, 445, 266, 0, 87, 0, 1321, 188, 189, 190,
	692, 699, 700, 701, 702, 703, 693, 695, 0, 0,
	223, 694, 230, 639, 641, 640, 650, 651, 652, 653,
	654, 655, 656, 637, 697, 704, 705, 0, 245, 292,
	252, 244, 464, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 599, 613,
	0, 627, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	610, 611, 0, 0, 0, 0, 676, 0, 612, 0,
	0, 620, 706, 707, 708, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	744, 745, 746, 622, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 363, 237, 0, 675, 0,
	0, 498, 0, 0, 673, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 373, 415, 421, 0,
	0, 0, 235, 0, 419, 387, 482, 218, 264, 412,
	393, 417, 400, 267, 0, 0, 418, 337, 469, 407,
	479, 499, 500, 243, 367, 489, 458, 495, 512, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 299, 440,
	273, 195, 335, 505, 209, 427, 227, 216, 202, 453,
	477, 224, 431, 0, 0, 514, 204, 475, 450, 356,
	296, 297, 203, 0, 411, 248, 271, 238, 376, 472,
	473, 236, 515, 213, 494, 206, 0, 493, 369, 468,
	476, 357, 347, 205, 474, 355, 346, 302, 645, 646,
	260, 282, 405, 340, 406, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 516, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 380,
	404, 402, 408, 0, 463, 480, 490, 497, 503, 504,
	506, 507, 508, 509, 510, 511, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 225, 484, 443, 682, 674,
	632, 686, 634, 683, 684, 629, 630, 633, 685, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 677, 619,
	618, 0, 625, 626, 0, 635, 636, 638, 642, 643,
	644, 647, 648, 649, 657, 659, 660, 658, 661, 662,
	663, 666, 667, 668, 669, 664, 665, 670, 617, 191,
	207, 334, 0, 409, 268, 513, 492, 488, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	471, 483, 496, 501, 428, 277, 478, 502, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 491, 449, 212,
	416, 269, 201, 231, 215, 239, 254, 257, 295, 354,
	361, 390, 395, 274, 251, 229, 413, 226, 432, 455,
	456, 457, 459, 358, 246, 394, 0, 359, 341, 461,
	462, 287, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 616,
	0, 0, 0, 250, 621, 0, 0, 0, 332, 247,
	0, 0, 391, 0, 197, 0, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	628, 336, 0, 0, 444, 362, 0, 0, 0, 0,
	0, 623, 624, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 374, 445, 266, 0, 87, 0,
	0, 188, 189, 190, 692, 699, 700, 701, 702, 703,
	693, 695, 0, 0, 223, 694, 230, 639, 641, 640,
	650, 651, 652, 653, 654, 655, 656, 637, 697, 704,
	705, 0, 245, 292, 252, 244, 464, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 599, 613, 0, 627, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 610, 611, 786, 0, 0, 0,
	676, 0, 612, 0, 0, 620, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 746, 622, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 363,
	237, 0, 675, 0, 0, 498, 0, 0, 673, 0,
	0, 0, 0, 331, 0, 300, 192, 210, 0, 0,
	373, 415, 421, 0, 0, 0, 235, 0, 419, 387,
	482, 218, 264, 412, 393, 417, 400, 267, 0, 0,
	418, 337, 469, 407, 479, 499, 500, 243, 367, 489,
	458, 495, 512, 211, 240, 381, 451, 485, 441, 360,
	465, 466, 299, 440, 273, 195, 335, 505, 209, 427,
	227, 216, 202, 453, 477, 224, 431, 0, 0, 514,
	204, 475, 450, 356, 296, 297, 203, 0, 411, 248,
	271, 238, 376, 472, 473, 236, 515, 213, 494, 206,
	0, 493, 369, 468, 476, 357, 347, 205, 474, 355,
	346, 302, 645, 646, 260, 282, 405, 340, 406, 283,
	365, 364, 366, 198, 486, 0, 199, 0, 446, 487,
	516, 219, 220, 222, 0, 259, 263, 270, 272, 278,
	279, 286, 333, 380, 404, 402, 408, 0, 463, 480,
	490, 497, 503, 504, 506, 507, 508, 509, 510, 511,
	368, 285, 442, 301, 338, 0, 0, 386, 420, 225,
	484, 443, 682, 674, 632, 686, 634, 683, 684, 629,
	630, 633, 685, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 677, 619, 618, 0, 625, 626, 0, 635,
	636, 638, 642, 643, 644, 647, 648, 649, 657, 659,
	660, 658, 661, 662, 663, 666, 667, 668, 669, 664,
	665, 670, 617, 191, 207, 334, 0, 409, 268, 513,
	492, 488, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 276, 281, 284,
	289, 290, 293, 298, 344, 350, 351, 352, 353, 370,
	371, 372, 375, 378, 379, 382, 384, 385, 388, 392,
	396, 397, 398, 399, 401, 403, 410, 414, 422, 423,
	424, 425, 426, 429, 430, 435, 436, 437, 438, 439,
	447, 448, 452, 470, 471, 483, 496, 501, 428, 277,
	478, 502, 0, 343, 0, 0, 345, 261, 280, 291,
	0, 491, 449, 212, 416, 269, 201, 231, 215, 239,
	254, 257, 295, 354, 361, 390, 395, 274, 251, 229,
	413, 226, 432, 455, 456, 457, 459, 358, 246, 394,
	0, 359, 341, 461, 462, 287, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 0, 616, 0, 0, 0, 250, 621, 0,
	0, 0, 332, 247, 0, 0, 391, 0, 197, 0,
	434, 234, 342, 339, 467, 262, 253, 249, 233, 288,
	349, 389, 454, 383, 628, 336, 0, 0, 444, 362,
	0, 0, 0, 0, 0, 623, 624, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 232, 196, 374, 445,
	266, 0, 87, 0, 0, 188, 189, 190, 692, 699,
	700, 701, 702, 703, 693, 695, 0, 0, 223, 694,
	230, 639, 641, 640, 650, 651, 652, 653, 654, 655,
	656, 637, 697, 704, 705, 0, 245, 292, 252, 244,
	464, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 599, 613, 0, 627,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 610, 611,
	0, 0, 0, 0, 676, 0, 612, 0, 0, 620,
	706, 707, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 622, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 363, 237, 0, 675, 0, 0, 498,
	0, 0, 673, 0, 0, 0, 0, 331, 0, 300,
	192, 210, 0, 0, 373, 415, 421, 0, 0, 0,
	235, 0, 419, 387, 482, 218, 264, 412, 393, 417,
	400, 267, 0, 0, 418, 337, 469, 407, 479, 499,
	500, 243, 367, 489, 458, 495, 512, 211, 240, 381,
	451, 485, 441, 360, 465, 466, 299, 440, 273, 195,
	335, 505, 209, 427, 227, 216, 202, 453, 477, 224,
	431, 0, 0, 514, 204, 475, 450, 356, 296, 297,
	203, 0, 411, 248, 271, 238, 376, 472, 473, 236,
	515, 213, 494, 206, 0, 493, 369, 468, 476, 357,
	347, 205, 474, 355, 346, 302, 645, 646, 260, 282,
	405, 340, 406, 283, 365, 364, 366, 198, 486, 0,
	199, 0, 446, 487, 516, 219, 220, 222, 0, 259,
	263, 270, 272, 278, 279, 286, 333, 380, 404, 402,
	408, 0, 463, 480, 490, 497, 503, 504, 506, 507,
	508, 509, 510, 511, 368, 285, 442, 301, 338, 0,
	0, 386, 420, 225, 484, 443, 682, 674, 632, 686,
	634, 683, 684, 629, 630, 633, 685, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 677, 619, 618, 0,
	625, 626, 0, 635, 636, 638, 642, 643, 644, 647,
	648, 649, 657, 659, 660, 658, 661, 662, 663, 666,
	667, 668, 669, 664, 665, 670, 617, 191, 207, 334,
	0, 409, 268, 513, 492, 488, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 276, 281, 284, 289, 290, 293, 298, 344, 350,
	351, 352, 353, 370, 371, 372, 375, 378, 379, 382,
	384, 385, 388, 392, 396, 397, 398, 399, 401, 403,
	410, 414, 422, 423, 424, 425, 426, 429, 430, 435,
	436, 437, 438, 439, 447, 448, 452, 470, 471, 483,
	496, 501, 428, 277, 478, 502, 0, 343, 0, 0,
	345, 261, 280, 291, 0, 491, 449, 212, 416, 269,
	201, 231, 215, 239, 254, 257, 295, 354, 361, 390,
	395, 274, 251, 229, 413, 226, 432, 455, 456, 457,
	459, 358, 246, 394, 0, 359, 341, 461, 462, 287,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 0, 616, 0, 0,
	0, 250, 621, 0, 0, 0, 332, 247, 0, 0,
	391, 0, 197, 0, 434, 234, 342, 339, 467, 262,
	253, 249, 233, 288, 349, 389, 454, 383, 628, 336,
	0, 0, 444, 362, 0, 0, 0, 0, 0, 623,
	624, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	232, 196, 374, 445, 266, 0, 87, 0, 0, 188,
	189, 190, 692, 699, 700, 701, 702, 703, 693, 695,
	0, 0, 223, 694, 230, 639, 641, 640, 650, 651,
	652, 653, 654, 655, 656, 637, 697, 704, 705, 0,
	245, 292, 252, 244, 464, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 613, 0, 627, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 610, 611, 0, 0, 0, 0, 676, 0,
	612, 0, 0, 620, 706, 707, 708, 709, 710, 711,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 744, 745, 746, 622, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 363, 237, 0,
	675, 0, 0, 498, 0, 0, 673, 0, 0, 0,
	0, 331, 0, 300, 192, 210, 0, 0, 373, 415,
	421, 0, 0, 0, 235, 0, 419, 387, 482, 218,
	264, 412, 393, 417, 400, 267, 0, 0, 418, 337,
	469, 407, 479, 499, 500, 243, 367, 489, 458, 495,
	512, 211, 240, 381, 451, 485, 441, 360, 465, 466,
	299, 440, 273, 195, 335, 505, 209, 427, 227, 216,
	202, 453, 477, 224, 431, 0, 0, 514, 204, 475,
	450, 356, 296, 297, 203, 0, 411, 248, 271, 238,
	376, 472, 473, 236, 515, 213, 494, 206, 0, 493,
	369, 468, 476, 357, 347, 205, 474, 355, 346, 302,
	645, 646, 260, 282, 405, 340, 406, 283, 365, 364,
	366, 198, 486, 0, 199, 0, 446, 487, 516, 219,
	220, 222, 0, 259, 263, 270, 272, 278, 279, 286,
	333, 380, 404, 402, 408, 0, 463, 480, 490, 497,
	503, 504, 506, 507, 508, 509, 510, 511, 368, 285,
	442, 301, 338, 0, 0, 386, 420, 225, 484, 443,
	682, 674, 632, 686, 634, 683, 684, 629, 630, 633,
	685, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	677, 619, 618, 0, 625, 626, 0, 635, 636, 638,
	642, 643, 644, 647, 648, 649, 657, 659, 660, 658,
	661, 662, 663, 666, 667, 668, 669, 664, 665, 670,
	617, 191, 207, 334, 0, 409, 268, 513, 492, 488,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 276, 281, 284, 289, 290,
	293, 298, 344, 350, 351, 352, 353, 370, 371, 372,
	375, 378, 379, 382, 384, 385, 388, 392, 396, 397,
	398, 399, 401, 403, 410, 414, 422, 423, 424, 425,
	426, 429, 430, 435, 436, 437, 438, 439, 447, 448,
	452, 470, 471, 483, 496, 501, 428, 277, 478, 502,
	0, 343, 0, 0, 345, 261, 280, 291, 0, 491,
	449, 212, 416, 269, 201, 231, 215, 239, 254, 257,
	295, 354, 361, 390, 395, 274, 251, 229, 413, 226,
	432, 455, 456, 457, 459, 358, 246, 394, 0, 359,
	341, 461, 462, 287, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	332, 247, 0, 0, 391, 0, 197, 0, 434, 234,
	342, 339, 467, 262, 253, 249, 233, 288, 349, 389,
	454, 383, 0, 336, 0, 0, 444, 362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 232, 196, 374, 445, 266, 0,
	0, 0, 0, 188, 189, 190, 0, 699, 700, 0,
	0, 0, 0, 1662, 0, 0, 223, 0, 230, 317,
	326, 325, 306, 307, 309, 311, 316, 323, 329, 0,
	0, 0, 0, 0, 245, 292, 252, 244, 464, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 706, 707,
	708, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 737,
	738, 739, 740, 741, 742, 743, 744, 745, 746, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 363, 237, 0, 0, 0, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 373, 415, 421, 0, 0, 0, 235, 0,
	419, 387, 482, 218, 264, 412, 393, 417, 400, 267,
	0, 0, 418, 337, 469, 407, 479, 499, 500, 243,
	367, 489, 458, 495, 512, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 299, 440, 273, 195, 335, 505,
	209, 427, 227, 216, 202, 453, 477, 224, 431, 0,
	0, 514, 204, 475, 450, 356, 296, 297, 203, 0,
	411, 248, 271, 238, 376, 472, 473, 236, 515, 213,
	494, 206, 0, 493, 369, 468, 476, 357, 347, 205,
	474, 355, 346, 302, 321, 322, 260, 282, 405, 340,
	406, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 516, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 380, 404, 402, 408, 0,
	463, 480, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 511, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 225, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 409,
	268, 513, 492, 488, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 471, 483, 496, 501,
	428, 277, 478, 502, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 491, 449, 212, 416, 269, 201, 231,
	215, 239, 254, 257, 295, 354, 361, 390, 395, 274,
	251, 229, 413, 226, 432, 455, 456, 457, 459, 358,
	246, 394, 0, 359, 341, 461, 462, 287, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 332, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 0, 336, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	374, 445, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 0, 0, 0, 0, 0, 245, 292,
	252, 244, 464, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 1005, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 363, 237, 0, 0, 0,
	1004, 498, 0, 0, 0, 0, 0, 1001, 1002, 331,
	962, 300, 192, 210, 995, 999, 373, 415, 421, 0,
	0, 0, 235, 0, 419, 387, 482, 218, 264, 412,
	393, 417, 400, 267, 0, 0, 418, 337, 469, 407,
	479, 499, 500, 243, 367, 489, 458, 495, 512, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 299, 440,
	273, 195, 335, 505, 209, 427, 227, 216, 202, 453,
	477, 224, 431, 0, 0, 514, 204, 475, 450, 356,
	296, 297, 203, 0, 411, 248, 271, 238, 376, 472,
	473, 236, 515, 213, 494, 206, 0, 493, 369, 468,
	476, 357, 347, 205, 474, 355, 346, 302, 321, 322,
	260, 282, 405, 340, 406, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 516, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 380,
	404, 402, 408, 0, 463, 480, 490, 497, 503, 504,
	506, 507, 508, 509, 510, 511, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 225, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 535, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 0, 409, 268, 513, 492, 488, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	471, 483, 496, 501, 428, 277, 478, 502, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 491, 449, 212,
	416, 269, 201, 231, 215, 239, 254, 257, 295, 354,
	361, 390, 395, 274, 251, 229, 413, 226, 432, 455,
	456, 457, 459, 358, 246, 394, 0, 0, 341, 461,
	462, 287, 359, 0, 0, 0, 78, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 332, 247, 0, 0, 391, 0, 197,
	0, 434, 234, 342, 339, 467, 262, 253, 249, 233,
	288, 349, 389, 454, 383, 0, 336, 0, 0, 444,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 232, 196, 374,
	445, 266, 0, 87, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 317, 326, 325, 306, 307, 309, 311, 316,
	323, 329, 0, 0, 0, 0, 0, 245, 292, 252,
	244, 464, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 363, 237, 0, 0, 0, 0,
	498, 0, 0, 0, 0, 0, 0, 0, 331, 0,
	300, 192, 210, 0, 0, 373, 415, 421, 0, 0,
	0, 235, 0, 419, 387, 482, 218, 264, 412, 393,
	417, 400, 267, 0, 0, 418, 337, 469, 407, 479,
	499, 500, 243, 367, 489, 458, 495, 512, 211, 240,
	381, 451, 485, 441, 360, 465, 466, 299, 440, 273,
	195, 335, 505, 209, 427, 227, 216, 202, 453, 477,
	224, 431, 0, 0, 514, 204, 475, 450, 356, 296,
	297, 203, 0, 411, 248, 271, 238, 376, 472, 473,
	236, 515, 213, 494, 206, 0, 493, 369, 468, 476,
	357, 347, 205, 474, 355, 346, 302, 321, 322, 260,
	282, 405, 340, 406, 283, 365, 364, 366, 198, 486,
	0, 199, 0, 446, 487, 516, 219, 220, 222, 0,
	259, 263, 270, 272, 278, 279, 286, 333, 380, 404,
	402, 408, 0, 463, 480, 490, 497, 503, 504, 506,
	507, 508, 509, 510, 511, 368, 285, 442, 301, 338,
	0, 0, 386, 420, 225, 484, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 535, 348, 433, 481,
	303, 315, 318, 308, 327, 0, 328, 304, 305, 310,
	312, 313, 314, 319, 320, 324, 330, 0, 191, 207,
	334, 86, 409, 268, 513, 492, 488, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 1821, 0, 0, 1820,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 276, 281, 284, 289, 290, 293, 298, 344,
	350, 351, 352, 353, 370, 371, 372, 375, 378, 379,
	382, 384, 385, 388, 392, 396, 397, 398, 399, 401,
	403, 410, 414, 422, 423, 424, 425, 426, 429, 430,
	435, 436, 437, 438, 439, 447, 448, 452, 470, 471,
	483, 496, 501, 428, 277, 478, 502, 0, 343, 0,
	0, 345, 261, 280, 291, 0, 491, 449, 212, 416,
	269, 201, 231, 215, 239, 254, 257, 295, 354, 361,
	390, 395, 274, 251, 229, 413, 226, 432, 455, 456,
	457, 459, 358, 246, 394, 0, 1340, 341, 461, 462,
	287, 460, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 1342, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 332, 247, 0,
	0, 391, 0, 197, 0, 434, 234, 342, 339, 467,
	262, 253, 249, 233, 288, 349, 389, 454, 383, 0,
	336, 0, 0, 444, 362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 232, 196, 374, 445, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 1344, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 317, 326, 325, 306,
	307, 309, 311, 316, 323, 329, 0, 0, 0, 0,
	0, 245, 292, 252, 244, 464, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 1173, 0, 1174,
	1175, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 363, 237,
	0, 0, 0, 0, 498, 0, 0, 0, 0, 0,
	0, 0, 331, 0, 300, 192, 210, 0, 0, 373,
	415, 421, 0, 0, 0, 235, 0, 419, 387, 482,
	218, 264, 412, 393, 417, 400, 267, 0, 0, 418,
	337, 469, 407, 479, 499, 500, 243, 367, 489, 458,
	495, 512, 211, 240, 381, 451, 485, 441, 360, 465,
	466, 299, 440, 273, 195, 335, 505, 209, 427, 227,
	216, 202, 453, 477, 224, 431, 0, 0, 514, 204,
	475, 450, 356, 296, 297, 203, 0, 411, 248, 271,
	238, 376, 472, 473, 236, 515, 213, 494, 206, 0,
	493, 369, 468, 476, 357, 347, 205, 474, 355, 346,
	302, 321, 322, 260, 282, 405, 340, 406, 283, 365,
	364, 366, 198, 486, 0, 199, 0, 446, 487, 516,
	219, 220, 222, 0, 259, 263, 270, 272, 278, 279,
	286, 333, 380, 404, 402, 408, 0, 463, 480, 490,
	497, 503, 504, 506, 507, 508, 509, 510, 511, 368,
	285, 442, 301, 338, 0, 0, 386, 420, 225, 484,
	443, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	535, 348, 433, 481, 303, 315, 318, 308, 327, 0,
	328, 304, 305, 310, 312, 313, 314, 319, 320, 324,
	330, 0, 191, 207, 334, 0, 409, 268, 513, 492,
	488, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 241, 256, 258, 265, 276, 281, 284, 289,
	290, 293, 298, 344, 350, 351, 352, 353, 370, 371,
	372, 375, 378, 379, 382, 384, 385, 388, 392, 396,
	397, 398, 399, 401, 403, 410, 414, 422, 423, 424,
	425, 426, 429, 430, 435, 436, 437, 438, 439, 447,
	448, 452, 470, 471, 483, 496, 501, 428, 277, 478,
	502, 0, 343, 0, 0, 345, 261, 280, 291, 0,
	491, 449, 212, 416, 269, 201, 231, 215, 239, 254,
	257, 295, 354, 361, 390, 395, 274, 251, 229, 413,
	226, 432, 455, 456, 457, 459, 358, 246, 394, 0,
	359, 341, 461, 462, 287, 460, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 0, 0, 0,
	0, 332, 247, 0, 0, 391, 0, 197, 0, 434,
	234, 342, 339, 467, 262, 253, 249, 233, 288, 349,
	389, 454, 383, 0, 336, 0, 0, 444, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 232, 196, 374, 445, 266,
	0, 0, 0, 0, 188, 189, 190, 1283, 1286, 0,
	0, 0, 0, 1282, 1285, 0, 0, 223, 1281, 230,
	317, 326, 325, 306, 307, 309, 311, 316, 323, 329,
	0, 0, 0, 0, 0, 245, 292, 252, 244, 464,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 363, 237, 0, 0, 0, 0, 498, 0,
	0, 0, 0, 0, 0, 0, 331, 0, 300, 192,
	210, 0, 0, 373, 415, 421, 0, 0, 0, 235,
	0, 419, 387, 482, 218, 264, 412, 393, 417, 400,
	267, 0, 0, 418, 337, 469, 407, 479, 499, 500,
	243, 367, 489, 458, 495, 512, 211, 240, 381, 451,
	485, 441, 360, 465, 466, 299, 440, 273, 195, 335,
	505, 209, 427, 227, 216, 202, 453, 477, 224, 431,
	0, 0, 514, 204, 475, 450, 356, 296, 297, 203,
	0, 411, 248, 271, 238, 376, 472, 473, 236, 515,
	213, 494, 206, 0, 493, 369, 468, 476, 357, 347,
	205, 474, 355, 346, 302, 321, 322, 260, 282, 405,
	340, 406, 283, 365, 364, 366, 198, 486, 0, 199,
	0, 446, 487, 516, 219, 220, 222, 0, 259, 263,
	270, 272, 278, 279, 286, 333, 380, 404, 402, 408,
	0, 463, 480, 490, 497, 503, 504, 506, 507, 508,
	509, 510, 511, 368, 285, 442, 301, 338, 0, 0,
	386, 420, 225, 484, 443, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 535, 348, 433, 481, 303, 315,
	318, 308, 327, 0, 328, 304, 305, 310, 312, 313,
	314, 319, 320, 324, 330, 0, 191, 207, 334, 0,
	409, 268, 513, 492, 488, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	276, 281, 284, 289, 290, 293, 298, 344, 350, 351,
	352, 353, 370, 371, 372, 375, 378, 379, 382, 384,
	385, 388, 392, 396, 397, 398, 399, 401, 403, 410,
	414, 422, 423, 424, 425, 426, 429, 430, 435, 436,
	437, 438, 439, 447, 448, 452, 470, 471, 483, 496,
	501, 428, 277, 478, 502, 0, 343, 0, 0, 345,
	261, 280, 291, 0, 491, 449, 212, 416, 269, 201,
	231, 215, 239, 254, 257, 295, 354, 361, 390, 395,
	274, 251, 229, 413, 226, 432, 455, 456, 457, 459,
	358, 246, 394, 0, 0, 341, 461, 462, 287, 359,
	0, 0, 0, 78, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	332, 247, 0, 0, 391, 0, 197, 0, 434, 234,
	342, 339, 467, 262, 253, 249, 233, 288, 349, 389,
	454, 383, 0, 336, 0, 0, 444, 362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 232, 196, 374, 445, 266, 0,
	87, 0, 1321, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 317,
	326, 325, 306, 307, 309, 311, 316, 323, 329, 0,
	0, 0, 0, 0, 245, 292, 252, 244, 464, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 363, 237, 0, 0, 0, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 373, 415, 421, 0, 0, 0, 235, 0,
	419, 387, 482, 218, 264, 412, 393, 417, 400, 267,
	0, 0, 418, 337, 469, 407, 479, 499, 500, 243,
	367, 489, 458, 495, 512, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 299, 440, 273, 195, 335, 505,
	209, 427, 227, 216, 202, 453, 477, 224, 431, 0,
	0, 514, 204, 475, 450, 356, 296, 297, 203, 0,
	411, 248, 271, 238, 376, 472, 473, 236, 515, 213,
	494, 206, 0, 493, 369, 468, 476, 357, 347, 205,
	474, 355, 346, 302, 321, 322, 260, 282, 405, 340,
	406, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 516, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 380, 404, 402, 408, 0,
	463, 480, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 511, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 225, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 86, 409,
	268, 513, 492, 488, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 471, 483, 496, 501,
	428, 277, 478, 502, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 491, 449, 212, 416, 269, 201, 231,
	215, 239, 254, 257, 295, 354, 361, 390, 395, 274,
	251, 229, 413, 226, 432, 455, 456, 457, 459, 358,
	246, 394, 0, 359, 341, 461, 462, 287, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 332, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 0, 336, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	374, 445, 266, 0, 87, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 0, 0, 0, 0, 0, 245, 292,
	252, 244, 464, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 363, 237, 0, 0, 0,
	0, 498, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 373, 415, 421, 0,
	0, 0, 235, 0, 419, 387, 482, 218, 264, 412,
	393, 417, 400, 267, 0, 0, 418, 337, 469, 407,
	479, 499, 500, 243, 367, 489, 458, 495, 512, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 299, 440,
	273, 195, 335, 505, 209, 427, 227, 216, 202, 453,
	477, 224, 431, 0, 0, 514, 204, 475, 450, 356,
	296, 297, 203, 0, 411, 248, 271, 238, 376, 472,
	473, 236, 515, 213, 494, 206, 0, 493, 369, 468,
	476, 357, 347, 205, 474, 355, 346, 302, 321, 322,
	260, 282, 405, 340, 406, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 516, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 380,
	404, 402, 408, 0, 463, 480, 490, 497, 503, 504,
	506, 507, 508, 509, 510, 511, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 225, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 535, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 0, 409, 268, 513, 492, 488, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 1821, 0, 0,
	1820, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	471, 483, 496, 501, 428, 277, 478, 502, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 491, 449, 212,
	416, 269, 201, 231, 215, 239, 254, 257, 295, 354,
	361, 390, 395, 274, 251, 229, 413, 226, 432, 455,
	456, 457, 459, 358, 246, 394, 0, 359, 341, 461,
	462, 287, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 1773, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 332, 247,
	0, 0, 391, 0, 197, 0, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	0, 336, 0, 0, 444, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 374, 445, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 1517, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 0, 0, 0,
	0, 0, 245, 292, 252, 244, 464, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 363,
	237, 0, 0, 0, 0, 498, 0, 0, 0, 0,
	0, 0, 0, 331, 0, 300, 192, 210, 0, 0,
	373, 415, 421, 0, 0, 0, 235, 0, 419, 387,
	482, 218, 264, 412, 393, 417, 400, 267, 0, 1771,
	418, 337, 469, 407, 479, 499, 500, 243, 367, 489,
	458, 495, 512, 211, 240, 381, 451, 485, 441, 360,
	465, 466, 299, 440, 273, 195, 335, 505, 209, 427,
	227, 216, 202, 453, 477, 224, 431, 0, 0, 514,
	204, 475, 450, 356, 296, 297, 203, 0, 411, 248,
	271, 238, 376, 472, 473, 236, 515, 213, 494, 206,
	0, 493, 369, 468, 476, 357, 347, 205, 474, 355,
	346, 302, 321, 322, 260, 282, 405, 340, 406, 283,
	365, 364, 366, 198, 486, 0, 199, 0, 446, 487,
	516, 219, 220, 222, 0, 259, 263, 270, 272, 278,
	279, 286, 333, 380, 404, 402, 408, 0, 463, 480,
	490, 497, 503, 504, 506, 507, 508, 509, 510, 511,
	368, 285, 442, 301, 338, 0, 0, 386, 420, 225,
	484, 443, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 535, 348, 433, 481, 303, 315, 318, 308, 327,
	0, 328, 304, 305, 310, 312, 313, 314, 319, 320,
	324, 330, 0, 191, 207, 334, 0, 409, 268, 513,
	492, 488, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 276, 281, 284,
	289, 290, 293, 298, 344, 350, 351, 352, 353, 370,
	371, 372, 375, 378, 379, 382, 384, 385, 388, 392,
	396, 397, 398, 399, 401, 403, 410, 414, 422, 423,
	424, 425, 426, 429, 430, 435, 436, 437, 438, 439,
	447, 448, 452, 470, 471, 483, 496, 501, 428, 277,
	478, 502, 0, 343, 0, 0, 345, 261, 280, 291,
	0, 491, 449, 212, 416, 269, 201, 231, 215, 239,
	254, 257, 295, 354, 361, 390, 395, 274, 251, 229,
	413, 226, 432, 455, 456, 457, 459, 358, 246, 394,
	0, 359, 341, 461, 462, 287, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 332, 247, 0, 0, 391, 0, 197, 0,
	434, 234, 342, 339, 467, 262, 253, 249, 233, 288,
	349, 389, 454, 383, 0, 336, 0, 0, 444, 362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 232, 196, 374, 445,
	266, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 317, 326, 325, 306, 307, 309, 311, 316, 323,
	329, 0, 0, 0, 0, 0, 245, 292, 252, 244,
	464, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 956, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 363, 237, 0, 0, 0, 0, 498,
	0, 0, 0, 0, 0, 0, 0, 331, 962, 300,
	192, 210, 960, 0, 373, 415, 421, 0, 0, 0,
	235, 0, 419, 387, 482, 218, 264, 412, 393, 417,
	400, 267, 0, 0, 418, 337, 469, 407, 479, 499,
	500, 243, 367, 489, 458, 495, 512, 211, 240, 381,
	451, 485, 441, 360, 465, 466, 299, 440, 273, 195,
	335, 505, 209, 427, 227, 216, 202, 453, 477, 224,
	431, 0, 0, 514, 204, 475, 450, 356, 296, 297,
	203, 0, 411, 248, 271, 238, 376, 472, 473, 236,
	515, 213, 494, 206, 0, 493, 369, 468, 476, 357,
	347, 205, 474, 355, 346, 302, 321, 322, 260, 282,
	405, 340, 406, 283, 365, 364, 366, 198, 486, 0,
	199, 0, 446, 487, 516, 219, 220, 222, 0, 259,
	263, 270, 272, 278, 279, 286, 333, 380, 404, 402,
	408, 0, 463, 480, 490, 497, 503, 504, 506, 507,
	508, 509, 510, 511, 368, 285, 442, 301, 338, 0,
	0, 386, 420, 225, 484, 443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 535, 348, 433, 481, 303,
	315, 318, 308, 327, 0, 328, 304, 305, 310, 312,
	313, 314, 319, 320, 324, 330, 0, 191, 207, 334,
	0, 409, 268, 513, 492, 488, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 276, 281, 284, 289, 290, 293, 298, 344, 350,
	351, 352, 353, 370, 371, 372, 375, 378, 379, 382,
	384, 385, 388, 392, 396, 397, 398, 399, 401, 403,
	410, 414, 422, 423, 424, 425, 426, 429, 430, 435,
	436, 437, 438, 439, 447, 448, 452, 470, 471, 483,
	496, 501, 428, 277, 478, 502, 0, 343, 0, 0,
	345, 261, 280, 291, 0, 491, 449, 212, 416, 269,
	201, 231, 215, 239, 254, 257, 295, 354, 361, 390,
	395, 274, 251, 229, 413, 226, 432, 455, 456, 457,
	459, 358, 246, 394, 0, 359, 341, 461, 462, 287,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 1773, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 332, 247, 0, 0,
	391, 0, 197, 0, 434, 234, 342, 339, 467, 262,
	253, 249, 233, 288, 349, 389, 454, 383, 0, 336,
	0, 0, 444, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	232, 196, 374, 445, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 1517, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 317, 326, 325, 306, 307,
	309, 311, 316, 323, 329, 0, 0, 0, 0, 0,
	245, 292, 252, 244, 464, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 363, 237, 0,
	0, 0, 0, 498, 0, 0, 0, 0, 0, 0,
	0, 331, 0, 300, 192, 210, 0, 0, 373, 415,
	421, 0, 0, 0, 235, 0, 419, 387, 482, 218,
	264, 412, 393, 417, 400, 267, 0, 0, 418, 337,
	469, 407, 479, 499, 500, 243, 367, 489, 458, 495,
	512, 211, 240, 381, 451, 485, 441, 360, 465, 466,
	299, 440, 273, 195, 335, 505, 209, 427, 227, 216,
	202, 453, 477, 224, 431, 0, 0, 514, 204, 475,
	450, 356, 296, 297, 203, 0, 411, 248, 271, 238,
	376, 472, 473, 236, 515, 213, 494, 206, 0, 493,
	369, 468, 476, 357, 347, 205, 474, 355, 346, 302,
	321, 322, 260, 282, 405, 340, 406, 283, 365, 364,
	366, 198, 486, 0, 199, 0, 446, 487, 516, 219,
	220, 222, 0, 259, 263, 270, 272, 278, 279, 286,
	333, 380, 404, 402, 408, 0, 463, 480, 490, 497,
	503, 504, 506, 507, 508, 509, 510, 511, 368, 285,
	442, 301, 338, 0, 0, 386, 420, 225, 484, 443,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 535,
	348, 433, 481, 303, 315, 318, 308, 327, 0, 328,
	304, 305, 310, 312, 313, 314, 319, 320, 324, 330,
	0, 191, 207, 334, 0, 409, 268, 513, 492, 488,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 276, 281, 284, 289, 290,
	293, 298, 344, 350, 351, 352, 353, 370, 371, 372,
	375, 378, 379, 382, 384, 385, 388, 392, 396, 397,
	398, 399, 401, 403, 410, 414, 422, 423, 424, 425,
	426, 429, 430, 435, 436, 437, 438, 439, 447, 448,
	452, 470, 471, 483, 496, 501, 428, 277, 478, 502,
	0, 343, 0, 0, 345, 261, 280, 291, 0, 491,
	449, 212, 416, 269, 201, 231, 215, 239, 254, 257,
	295, 354, 361, 390, 395, 274, 251, 229, 413, 226,
	432, 455, 456, 457, 459, 358, 246, 394, 0, 359,
	341, 461, 462, 287, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	332, 247, 0, 0, 391, 0, 197, 0, 434, 234,
	342, 339, 467, 262, 253, 249, 233, 288, 349, 389,
	454, 383, 0, 336, 0, 0, 444, 362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 232, 196, 374, 445, 266, 0,
	0, 0, 1321, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 317,
	326, 325, 306, 307, 309, 311, 316, 323, 329, 0,
	0, 0, 0, 0, 245, 292, 252, 244, 464, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 363, 237, 0, 0, 0, 0, 498, 0, 0,
	0, 2823, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 373, 415, 421, 0, 0, 0, 235, 0,
	419, 387, 482, 218, 264, 412, 393, 417, 400, 267,
	0, 0, 418, 337, 469, 407, 479, 499, 500, 243,
	367, 489, 458, 495, 512, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 299, 440, 273, 195, 335, 505,
	209, 427, 227, 216, 202, 453, 477, 224, 431, 0,
	0, 514, 204, 475, 450, 356, 296, 297, 203, 0,
	411, 248, 271, 238, 376, 472, 473, 236, 515, 213,
	494, 206, 0, 493, 369, 468, 476, 357, 347, 205,
	474, 355, 346, 302, 321, 322, 260, 282, 405, 340,
	406, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 516, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 380, 404, 402, 408, 0,
	463, 480, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 511, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 225, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 409,
	268, 513, 492, 488, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 471, 483, 496, 501,
	428, 277, 478, 502, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 491, 449, 212, 416, 269, 201, 231,
	215, 239, 254, 257, 295, 354, 361, 390, 395, 274,
	251, 229, 413, 226, 432, 455, 456, 457, 459, 358,
	246, 394, 0, 359, 341, 461, 462, 287, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 332, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 0, 336, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	374, 445, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 2105, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 0, 0, 0, 0, 0, 245, 292,
	252, 244, 464, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2106, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 363, 237, 0, 0, 0,
	0, 498, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 373, 415, 421, 0,
	0, 0, 235, 0, 419, 387, 482, 218, 264, 412,
	393, 417, 400, 267, 0, 0, 418, 337, 469, 407,
	479, 499, 500, 243, 367, 489, 458, 495, 512, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 299, 440,
	273, 195, 335, 505, 209, 427, 227, 216, 202, 453,
	477, 224, 431, 0, 0, 514, 204, 475, 450, 356,
	296, 297, 203, 0, 411, 248, 271, 238, 376, 472,
	473, 236, 515, 213, 494, 206, 0, 493, 369, 468,
	476, 357, 347, 205, 474, 355, 346, 302, 321, 322,
	260, 282, 405, 340, 406, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 516, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 380,
	404, 402, 408, 0, 463, 480, 490, 497, 503, 504,
	506, 507, 508, 509, 510, 511, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 225, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 535, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 0, 409, 268, 513, 492, 488, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	471, 483, 496, 501, 428, 277, 478, 502, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 491, 449, 212,
	416, 269, 201, 231, 215, 239, 254, 257, 295, 354,
	361, 390, 395, 274, 251, 229, 413, 226, 432, 455,
	456, 457, 459, 358, 246, 394, 0, 359, 341, 461,
	462, 287, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 332, 247,
	0, 0, 391, 0, 197, 0, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	0, 336, 0, 0, 444, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 374, 445, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 2090, 0, 0,
	0, 2091, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 0, 0, 0,
	0, 0, 245, 292, 252, 244, 464, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 363,
	237, 0, 0, 0, 0, 498, 0, 0, 0, 0,
	0, 0, 0, 331, 0, 300, 192, 210, 0, 0,
	373, 415, 421, 0, 0, 0, 235, 0, 419, 387,
	482, 218, 264, 412, 393, 417, 400, 267, 0, 0,
	418, 337, 469, 407, 479, 499, 500, 243, 367, 489,
	458, 495, 512, 211, 240, 381, 451, 485, 441, 360,
	465, 466, 299, 440, 273, 195, 335, 505, 209, 427,
	227, 216, 202, 453, 477, 224, 431, 0, 0, 514,
	204, 475, 450, 356, 296, 297, 203, 0, 411, 248,
	271, 238, 376, 472, 473, 236, 515, 213, 494, 206,
	0, 493, 369, 468, 476, 357, 347, 205, 474, 355,
	346, 302, 321, 322, 260, 282, 405, 340, 406, 283,
	365, 364, 366, 198, 486, 0, 199, 0, 446, 487,
	516, 219, 220, 222, 0, 259, 263, 270, 272, 278,
	279, 286, 333, 380, 404, 402, 408, 0, 463, 480,
	490, 497, 503, 504, 506, 507, 508, 509, 510, 511,
	368, 285, 442, 301, 338, 0, 0, 386, 420, 225,
	484, 443, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 535, 348, 433, 481, 303, 315, 318, 308, 327,
	0, 328, 304, 305, 310, 312, 313, 314, 319, 320,
	324, 330, 0, 191, 207, 334, 0, 409, 268, 513,
	492, 488, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 276, 281, 284,
	289, 290, 293, 298, 344, 350, 351, 352, 353, 370,
	371, 372, 375, 378, 379, 382, 384, 385, 388, 392,
	396, 397, 398, 399, 401, 403, 410, 414, 422, 423,
	424, 425, 426, 429, 430, 435, 436, 437, 438, 439,
	447, 448, 452, 470, 471, 483, 496, 501, 428, 277,
	478, 502, 0, 343, 0, 0, 345, 261, 280, 291,
	0, 491, 449, 212, 416, 269, 201, 231, 215, 239,
	254, 257, 295, 354, 361, 390, 395, 274, 251, 229,
	413, 226, 432, 455, 456, 457, 459, 358, 246, 394,
	0, 359, 341, 461, 462, 287, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 1365, 0,
	0, 0, 332, 247, 0, 0, 391, 0, 197, 0,
	434, 234, 342, 339, 467, 262, 253, 249, 233, 288,
	349, 389, 454, 383, 0, 336, 0, 0, 444, 362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 232, 196, 374, 445,
	266, 0, 0, 0, 0, 188, 189, 190, 0, 1364,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 317, 326, 325, 306, 307, 309, 311, 316, 323,
	329, 0, 0, 0, 0, 0, 245, 292, 252, 244,
	464, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 363, 237, 0, 0, 0, 0, 498,
	0, 0, 0, 0, 0, 0, 0, 331, 0, 300,
	192, 210, 0, 0, 373, 415, 421, 0, 0, 0,
	235, 0, 419, 387, 482, 218, 264, 412, 393, 417,
	400, 267, 0, 0, 418, 337, 469, 407, 479, 499,
	500, 243, 367, 489, 458, 495, 512, 211, 240, 381,
	451, 485, 441, 360, 465, 466, 299, 440, 273, 195,
	335, 505, 209, 427, 227, 216, 202, 453, 477, 224,
	431, 0, 0, 514, 204, 475, 450, 356, 296, 297,
	203, 0, 411, 248, 271, 238, 376, 472, 473, 236,
	515, 213, 494, 206, 0, 493, 369, 468, 476, 357,
	347, 205, 474, 355, 346, 302, 321, 322, 260, 282,
	405, 340, 406, 283, 365, 364, 366, 198, 486, 0,
	199, 0, 446, 487, 516, 219, 220, 222, 0, 259,
	263, 270, 272, 278, 279, 286, 333, 380, 404, 402,
	408, 0, 463, 480, 490, 497, 503, 504, 506, 507,
	508, 509, 510, 511, 368, 285, 442, 301, 338, 0,
	0, 386, 420, 225, 484, 443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 535, 348, 433, 481, 303,
	315, 318, 308, 327, 0, 328, 304, 305, 310, 312,
	313, 314, 319, 320, 324, 330, 0, 191, 207, 334,
	0, 409, 268, 513, 492, 488, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 276, 281, 284, 289, 290, 293, 298, 344, 350,
	351, 352, 353, 370, 371, 372, 375, 378, 379, 382,
	384, 385, 388, 392, 396, 397, 398, 399, 401, 403,
	410, 414, 422, 423, 424, 425, 426, 429, 430, 435,
	436, 437, 438, 439, 447, 448, 452, 470, 471, 483,
	496, 501, 428, 277, 478, 502, 0, 343, 0, 0,
	345, 261, 280, 291, 0, 491, 449, 212, 416, 269,
	201, 231, 215, 239, 254, 257, 295, 354, 361, 390,
	395, 274, 251, 229, 413, 226, 432, 455, 456, 457,
	459, 358, 246, 394, 0, 359, 341, 461, 462, 287,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 332, 247, 0, 0,
	391, 0, 197, 0, 434, 234, 342, 339, 467, 262,
	253, 249, 233, 288, 349, 389, 454, 383, 0, 336,
	0, 0, 444, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	232, 196, 374, 445, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 317, 326, 325, 306, 307,
	309, 311, 316, 323, 329, 0, 0, 0, 0, 0,
	245, 292, 252, 244, 464, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 363, 237, 0,
	0, 0, 0, 498, 0, 0, 0, 2907, 0, 0,
	0, 331, 0, 300, 192, 210, 0, 0, 373, 415,
	421, 0, 0, 0, 235, 0, 419, 387, 482, 218,
	264, 412, 393, 417, 400, 267, 0, 0, 418, 337,
	469, 407, 479, 499, 500, 243, 367, 489, 458, 495,
	512, 211, 240, 381, 451, 485, 441, 360, 465, 466,
	299, 440, 273, 195, 335, 505, 209, 427, 227, 216,
	202, 453, 477, 224, 431, 0, 0, 514, 204, 475,
	450, 356, 296, 297, 203, 0, 411, 248, 271, 238,
	376, 472, 473, 236, 515, 213, 494, 206, 0, 493,
	369, 468, 476, 357, 347, 205, 474, 355, 346, 302,
	321, 322, 260, 282, 405, 340, 406, 283, 365, 364,
	366, 198, 486, 0, 199, 0, 446, 487, 516, 219,
	220, 222, 0, 259, 263, 270, 272, 278, 279, 286,
	333, 380, 404, 402, 408, 0, 463, 480, 490, 497,
	503, 504, 506, 507, 508, 509, 510, 511, 368, 285,
	442, 301, 338, 0, 0, 386, 420, 225, 484, 443,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 535,
	348, 433, 481, 303, 315, 318, 308, 327, 0, 328,
	304, 305, 310, 312, 313, 314, 319, 320, 324, 330,
	0, 191, 207, 334, 0, 409, 268, 513, 492, 488,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 276, 281, 284, 289, 290,
	293, 298, 344, 350, 351, 352, 353, 370, 371, 372,
	375, 378, 379, 382, 384, 385, 388, 392, 396, 397,
	398, 399, 401, 403, 410, 414, 422, 423, 424, 425,
	426, 429, 430, 435, 436, 437, 438, 439, 447, 448,
	452, 470, 471, 483, 496, 501, 428, 277, 478, 502,
	0, 343, 0, 0, 345, 261, 280, 291, 0, 491,
	449, 212, 416, 269, 201, 231, 215, 239, 254, 257,
	295, 354, 361, 390, 395, 274, 251, 229, 413, 226,
	432, 455, 456, 457, 459, 358, 246, 394, 0, 359,
	341, 461, 462, 287, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	332, 247, 0, 0, 391, 0, 197, 0, 434, 234,
	342, 339, 467, 262, 253, 249, 233, 288, 349, 389,
	454, 383, 0, 336, 0, 0, 444, 362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 232, 196, 374, 445, 266, 0,
	0, 0, 0, 188, 189, 190, 0, 1517, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 317,
	326, 325, 306, 307, 309, 311, 316, 323, 329, 0,
	0, 0, 0, 0, 245, 292, 252, 244, 464, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 363, 237, 0, 0, 0, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 373, 415, 421, 0, 0, 0, 235, 0,
	419, 387, 482, 218, 264, 412, 393, 417, 400, 267,
	0, 0, 418, 337, 469, 407, 479, 499, 500, 243,
	367, 489, 458, 495, 512, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 299, 440, 273, 195, 335, 505,
	209, 427, 227, 216, 202, 453, 477, 224, 431, 0,
	0, 514, 204, 475, 450, 356, 296, 297, 203, 0,
	411, 248, 271, 238, 376, 472, 473, 236, 515, 213,
	494, 206, 0, 493, 369, 468, 476, 357, 347, 205,
	474, 355, 346, 302, 321, 322, 260, 282, 405, 340,
	406, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 516, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 380, 404, 402, 408, 0,
	463, 480, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 511, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 225, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 409,
	268, 513, 492, 488, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 471, 483, 496, 501,
	428, 277, 478, 502, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 491, 449, 212, 416, 269, 201, 231,
	215, 239, 254, 257, 295, 354, 361, 390, 395, 274,
	251, 229, 413, 226, 432, 455, 456, 457, 459, 358,
	246, 394, 0, 359, 341, 461, 462, 287, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 332, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 0, 336, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	374, 445, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 0, 0, 0, 0, 0, 245, 292,
	252, 244, 464, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 363, 237, 0, 0, 0,
	0, 498, 0, 0, 0, 2823, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 373, 415, 421, 0,
	0, 0, 235, 0, 419, 387, 482, 218, 264, 412,
	393, 417, 400, 267, 0, 0, 418, 337, 469, 407,
	479, 499, 500, 243, 367, 489, 458, 495, 512, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 299, 440,
	273, 195, 335, 505, 209, 427, 227, 216, 202, 453,
	477, 224, 431, 0, 0, 514, 204, 475, 450, 356,
	296, 297, 203, 0, 411, 248, 271, 238, 376, 472,
	473, 236, 515, 213, 494, 206, 0, 493, 369, 468,
	476, 357, 347, 205, 474, 355, 346, 302, 321, 322,
	260, 282, 405, 340, 406, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 516, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 380,
	404, 402, 408, 0, 463, 480, 490, 497, 503, 504,
	506, 507, 508, 509, 510, 511, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 225, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 535, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 0, 409, 268, 513, 492, 488, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	471, 483, 496, 501, 428, 277, 478, 502, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 491, 449, 212,
	416, 269, 201, 231, 215, 239, 254, 257, 295, 354,
	361, 390, 395, 274, 251, 229, 413, 226, 432, 455,
	456, 457, 459, 358, 246, 394, 0, 359, 341, 461,
	462, 287, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 332, 247,
	0, 0, 391, 0, 197, 0, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	0, 336, 0, 0, 444, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 374, 445, 266, 0, 87, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 0, 0, 0,
	0, 0, 245, 292, 252, 244, 464, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 363,
	237, 0, 0, 0, 0, 498, 0, 0, 0, 0,
	0, 0, 0, 331, 0, 300, 192, 210, 0, 0,
	373, 415, 421, 0, 0, 0, 235, 0, 419, 387,
	482, 218, 264, 412, 393, 417, 400, 267, 0, 0,
	418, 337, 469, 407, 479, 499, 500, 243, 367, 489,
	458, 495, 512, 211, 240, 381, 451, 485, 441, 360,
	465, 466, 299, 440, 273, 195, 335, 505, 209, 427,
	227, 216, 202, 453, 477, 224, 431, 0, 0, 514,
	204, 475, 450, 356, 296, 297, 203, 0, 411, 248,
	271, 238, 376, 472, 473, 236, 515, 213, 494, 206,
	0, 493, 369, 468, 476, 357, 347, 205, 474, 355,
	346, 302, 321, 322, 260, 282, 405, 340, 406, 283,
	365, 364, 366, 198, 486, 0, 199, 0, 446, 487,
	516, 219, 220, 222, 0, 259, 263, 270, 272, 278,
	279, 286, 333, 380, 404, 402, 408, 0, 463, 480,
	490, 497, 503, 504, 506, 507, 508, 509, 510, 511,
	368, 285, 442, 301, 338, 0, 0, 386, 420, 225,
	484, 443, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 535, 348, 433, 481, 303, 315, 318, 308, 327,
	0, 328, 304, 305, 310, 312, 313, 314, 319, 320,
	324, 330, 0, 191, 207, 334, 0, 409, 268, 513,
	492, 488, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 276, 281, 284,
	289, 290, 293, 298, 344, 350, 351, 352, 353, 370,
	371, 372, 375, 378, 379, 382, 384, 385, 388, 392,
	396, 397, 398, 399, 401, 403, 410, 414, 422, 423,
	424, 425, 426, 429, 430, 435, 436, 437, 438, 439,
	447, 448, 452, 470, 471, 483, 496, 501, 428, 277,
	478, 502, 0, 343, 0, 0, 345, 261, 280, 291,
	0, 491, 449, 212, 416, 269, 201, 231, 215, 239,
	254, 257, 295, 354, 361, 390, 395, 274, 251, 229,
	413, 226, 432, 455, 456, 457, 459, 358, 246, 394,
	0, 359, 341, 461, 462, 287, 460, 0, 0, 0,
	0, 1822, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 332, 247, 0, 0, 391, 0, 197, 0,
	434, 234, 342, 339, 467, 262, 253, 249, 233, 288,
	349, 389, 454, 383, 0, 336, 0, 0, 444, 362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 232, 196, 374, 445,
	266, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 317, 326, 325, 306, 307, 309, 311, 316, 323,
	329, 0, 0, 0, 0, 0, 245, 292, 252, 244,
	464, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 363, 237, 0, 0, 0, 0, 498,
	0, 0, 0, 0, 0, 0, 0, 331, 0, 300,
	192, 210, 0, 0, 373, 415, 421, 0, 0, 0,
	235, 0, 419, 387, 482, 218, 264, 412, 393, 417,
	400, 267, 0, 0, 418, 337, 469, 407, 479, 499,
	500, 243, 367, 489, 458, 495, 512, 211, 240, 381,
	451, 485, 441, 360, 465, 466, 299, 440, 273, 195,
	335, 505, 209, 427, 227, 216, 202, 453, 477, 224,
	431, 0, 0, 514, 204, 475, 450, 356, 296, 297,
	203, 0, 411, 248, 271, 238, 376, 472, 473, 236,
	515, 213, 494, 206, 0, 493, 369, 468, 476, 357,
	347, 205, 474, 355, 346, 302, 321, 322, 260, 282,
	405, 340, 406, 283, 365, 364, 366, 198, 486, 0,
	199, 0, 446, 487, 516, 219, 220, 222, 0, 259,
	263, 270, 272, 278, 279, 286, 333, 380, 404, 402,
	408, 0, 463, 480, 490, 497, 503, 504, 506, 507,
	508, 509, 510, 511, 368, 285, 442, 301, 338, 0,
	0, 386, 420, 225, 484, 443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 535, 348, 433, 481, 303,
	315, 318, 308, 327, 0, 328, 304, 305, 310, 312,
	313, 314, 319, 320, 324, 330, 0, 191, 207, 334,
	0, 409, 268, 513, 492, 488, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 276, 281, 284, 289, 290, 293, 298, 344, 350,
	351, 352, 353, 370, 371, 372, 375, 378, 379, 382,
	384, 385, 388, 392, 396, 397, 398, 399, 401, 403,
	410, 414, 422, 423, 424, 425, 426, 429, 430, 435,
	436, 437, 438, 439, 447, 448, 452, 470, 471, 483,
	496, 501, 428, 277, 478, 502, 0, 343, 0, 0,
	345, 261, 280, 291, 0, 491, 449, 212, 416, 269,
	201, 231, 215, 239, 254, 257, 295, 354, 361, 390,
	395, 274, 251, 229, 413, 226, 432, 455, 456, 457,
	459, 358, 246, 394, 0, 359, 341, 461, 462, 287,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 332, 247, 0, 0,
	391, 0, 197, 0, 434, 234, 342, 339, 467, 262,
	253, 249, 233, 288, 349, 389, 454, 383, 0, 336,
	0, 0, 444, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	232, 196, 374, 445, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 1344, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 317, 326, 325, 306, 307,
	309, 311, 316, 323, 329, 0, 0, 0, 0, 0,
	245, 292, 252, 244, 464, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 363, 237, 0,
	0, 0, 0, 498, 0, 0, 0, 0, 0, 0,
	0, 331, 0, 300, 192, 210, 0, 0, 373, 415,
	421, 0, 0, 0, 235, 0, 419, 387, 482, 218,
	264, 412, 393, 417, 400, 267, 0, 0, 418, 337,
	469, 407, 479, 499, 500, 243, 367, 489, 458, 495,
	512, 211, 240, 381, 451, 485, 441, 360, 465, 466,
	299, 440, 273, 195, 335, 505, 209, 427, 227, 216,
	202, 453, 477, 224, 431, 0, 0, 514, 204, 475,
	450, 356, 296, 297, 203, 0, 411, 248, 271, 238,
	376, 472, 473, 236, 515, 213, 494, 206, 0, 493,
	369, 468, 476, 357, 347, 205, 474, 355, 346, 302,
	321, 322, 260, 282, 405, 340, 406, 283, 365, 364,
	366, 198, 486, 0, 199, 0, 446, 487, 516, 219,
	220, 222, 0, 259, 263, 270, 272, 278, 279, 286,
	333, 380, 404, 402, 408, 0, 463, 480, 490, 497,
	503, 504, 506, 507, 508, 509, 510, 511, 368, 285,
	442, 301, 338, 0, 0, 386, 420, 225, 484, 443,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 535,
	348, 433, 481, 303, 315, 318, 308, 327, 0, 328,
	304, 305, 310, 312, 313, 314, 319, 320, 324, 330,
	0, 191, 207, 334, 0, 409, 268, 513, 492, 488,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 276, 281, 284, 289, 290,
	293, 298, 344, 350, 351, 352, 353, 370, 371, 372,
	375, 378, 379, 382, 384, 385, 388, 392, 396, 397,
	398, 399, 401, 403, 410, 414, 422, 423, 424, 425,
	426, 429, 430, 435, 436, 437, 438, 439, 447, 448,
	452, 470, 471, 483, 496, 501, 428, 277, 478, 502,
	0, 343, 0, 0, 345, 261, 280, 291, 0, 491,
	449, 212, 416, 269, 201, 231, 215, 239, 254, 257,
	295, 354, 361, 390, 395, 274, 251, 229, 413, 226,
	432, 455, 456, 457, 459, 358, 246, 394, 0, 359,
	341, 461, 462, 287, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	332, 247, 0, 0, 391, 0, 197, 0, 434, 234,
	342, 339, 467, 262, 253, 249, 233, 288, 349, 389,
	454, 383, 0, 336, 0, 0, 444, 362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 232, 196, 374, 445, 266, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 317,
	326, 325, 306, 307, 309, 311, 316, 323, 329, 0,
	0, 0, 0, 0, 245, 292, 252, 244, 464, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1204, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 363, 237, 0, 0, 0, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 373, 415, 421, 0, 0, 0, 235, 0,
	419, 387, 482, 218, 264, 412, 393, 417, 400, 267,
	0, 0, 418, 337, 469, 407, 479, 499, 500, 243,
	367, 489, 458, 495, 512, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 299, 440, 273, 195, 335, 505,
	209, 427, 227, 216, 202, 453, 477, 224, 431, 0,
	0, 514, 204, 475, 450, 356, 296, 297, 203, 0,
	411, 248, 271, 238, 376, 472, 473, 236, 515, 213,
	494, 206, 0, 493, 369, 468, 476, 357, 347, 205,
	474, 355, 346, 302, 321, 322, 260, 282, 405, 340,
	406, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 516, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 380, 404, 402, 408, 0,
	463, 480, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 511, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 225, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 409,
	268, 513, 492, 488, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 471, 483, 496, 501,
	428, 277, 478, 502, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 491, 449, 212, 416, 269, 201, 231,
	215, 239, 254, 257, 295, 354, 361, 390, 395, 274,
	251, 229, 413, 226, 432, 455, 456, 457, 459, 358,
	246, 394, 0, 359, 341, 461, 462, 287, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 332, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 0, 336, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	374, 445, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 0, 0, 0, 0, 0, 245, 292,
	252, 244, 464, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 363, 237, 0, 0, 0,
	0, 498, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 373, 415, 421, 0,
	0, 0, 235, 0, 419, 387, 482, 218, 264, 412,
	393, 417, 400, 267, 0, 0, 418, 337, 469, 407,
	479, 499, 500, 243, 367, 489, 458, 495, 512, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 299, 440,
	273, 195, 335, 505, 209, 427, 227, 216, 202, 453,
	477, 224, 431, 0, 0, 514, 204, 475, 450, 356,
	296, 297, 203, 0, 411, 248, 271, 238, 376, 472,
	473, 236, 515, 213, 494, 206, 0, 493, 369, 468,
	476, 357, 347, 205, 474, 355, 346, 302, 321, 322,
	260, 282, 405, 340, 406, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 516, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 380,
	404, 402, 408, 0, 463, 480, 490, 497, 503, 504,
	506, 507, 508, 509, 510, 511, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 225, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 535, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 1613, 409, 268, 513, 492, 488, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	471, 483, 496, 501, 428, 277, 478, 502, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 491, 449, 212,
	416, 269, 201, 231, 215, 239, 254, 257, 295, 354,
	361, 390, 395, 274, 251, 229, 413, 226, 432, 455,
	456, 457, 459, 358, 246, 394, 0, 359, 341, 461,
	462, 287, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 1488, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 332, 247,
	0, 0, 391, 0, 197, 0, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	0, 336, 0, 0, 444, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 374, 445, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 0, 0, 0,
	0, 0, 245, 292, 252, 244, 464, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 363,
	237, 0, 0, 0, 0, 498, 0, 0, 0, 0,
	0, 0, 0, 331, 0, 300, 192, 210, 0, 0,
	373, 415, 421, 0, 0, 0, 235, 0, 419, 387,
	482, 218, 264, 412, 393, 417, 400, 267, 0, 0,
	418, 337, 469, 407, 479, 499, 500, 243, 367, 489,
	458, 495, 512, 211, 240, 381, 451, 485, 441, 360,
	465, 466, 299, 440, 273, 195, 335, 505, 209, 427,
	227, 216, 202, 453, 477, 224, 431, 0, 0, 514,
	204, 475, 450, 356, 296, 297, 203, 0, 411, 248,
	271, 238, 376, 472, 473, 236, 515, 213, 494, 206,
	0, 493, 369, 468, 476, 357, 347, 205, 474, 355,
	346, 302, 321, 322, 260, 282, 405, 340, 406, 283,
	365, 364, 366, 198, 486, 0, 199, 0, 446, 487,
	516, 219, 220, 222, 0, 259, 263, 270, 272, 278,
	279, 286, 333, 380, 404, 402, 408, 0, 463, 480,
	490, 497, 503, 504, 506, 507, 508, 509, 510, 511,
	368, 285, 442, 301, 338, 0, 0, 386, 420, 225,
	484, 443, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 535, 348, 433, 481, 303, 315, 318, 308, 327,
	0, 328, 304, 305, 310, 312, 313, 314, 319, 320,
	324, 330, 0, 191, 207, 334, 0, 409, 268, 513,
	492, 488, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 276, 281, 284,
	289, 290, 293, 298, 344, 350, 351, 352, 353, 370,
	371, 372, 375, 378, 379, 382, 384, 385, 388, 392,
	396, 397, 398, 399, 401, 403, 410, 414, 422, 423,
	424, 425, 426, 429, 430, 435, 436, 437, 438, 439,
	447, 448, 452, 470, 471, 483, 496, 501, 428, 277,
	478, 502, 0, 343, 0, 0, 345, 261, 280, 291,
	0, 491, 449, 212, 416, 269, 201, 231, 215, 239,
	254, 257, 295, 354, 361, 390, 395, 274, 251, 229,
	413, 226, 432, 455, 456, 457, 459, 358, 246, 394,
	0, 359, 341, 461, 462, 287, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	1486, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 332, 247, 0, 0, 391, 0, 197, 0,
	434, 234, 342, 339, 467, 262, 253, 249, 233, 288,
	349, 389, 454, 383, 0, 336, 0, 0, 444, 362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 232, 196, 374, 445,
	266, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 317, 326, 325, 306, 307, 309, 311, 316, 323,
	329, 0, 0, 0, 0, 0, 245, 292, 252, 244,
	464, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 363, 237, 0, 0, 0, 0, 498,
	0, 0, 0, 0, 0, 0, 0, 331, 0, 300,
	192, 210, 0, 0, 373, 415, 421, 0, 0, 0,
	235, 0, 419, 387, 482, 218, 264, 412, 393, 417,
	400, 267, 0, 0, 418, 337, 469, 407, 479, 499,
	500, 243, 367, 489, 458, 495, 512, 211, 240, 381,
	451, 485, 441, 360, 465, 466, 299, 440, 273, 195,
	335, 505, 209, 427, 227, 216, 202, 453, 477, 224,
	431, 0, 0, 514, 204, 475, 450, 356, 296, 297,
	203, 0, 411, 248, 271, 238, 376, 472, 473, 236,
	515, 213, 494, 206, 0, 493, 369, 468, 476, 357,
	347, 205, 474, 355, 346, 302, 321, 322, 260, 282,
	405, 340, 406, 283, 365, 364, 366, 198, 486, 0,
	199, 0, 446, 487, 516, 219, 220, 222, 0, 259,
	263, 270, 272, 278, 279, 286, 333, 380, 404, 402,
	408, 0, 463, 480, 490, 497, 503, 504, 506, 507,
	508, 509, 510, 511, 368, 285, 442, 301, 338, 0,
	0, 386, 420, 225, 484, 443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 535, 348, 433, 481, 303,
	315, 318, 308, 327, 0, 328, 304, 305, 310, 312,
	313, 314, 319, 320, 324, 330, 0, 191, 207, 334,
	0, 409, 268, 513, 492, 488, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 276, 281, 284, 289, 290, 293, 298, 344, 350,
	351, 352, 353, 370, 371, 372, 375, 378, 379, 382,
	384, 385, 388, 392, 396, 397, 398, 399, 401, 403,
	410, 414, 422, 423, 424, 425, 426, 429, 430, 435,
	436, 437, 438, 439, 447, 448, 452, 470, 471, 483,
	496, 501, 428, 277, 478, 502, 0, 343, 0, 0,
	345, 261, 280, 291, 0, 491, 449, 212, 416, 269,
	201, 231, 215, 239, 254, 257, 295, 354, 361, 390,
	395, 274, 251, 229, 413, 226, 432, 455, 456, 457,
	459, 358, 246, 394, 0, 359, 341, 461, 462, 287,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 1484, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 332, 247, 0, 0,
	391, 0, 197, 0, 434, 234, 342, 339, 467, 262,
	253, 249, 233, 288, 349, 389, 454, 383, 0, 336,
	0, 0, 444, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	232, 196, 374, 445, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 317, 326, 325, 306, 307,
	309, 311, 316, 323, 329, 0, 0, 0, 0, 0,
	245, 292, 252, 244, 464, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 363, 237, 0,
	0, 0, 0, 498, 0, 0, 0, 0, 0, 0,
	0, 331, 0, 300, 192, 210, 0, 0, 373, 415,
	421, 0, 0, 0, 235, 0, 419, 387, 482, 218,
	264, 412, 393, 417, 400, 267, 0, 0, 418, 337,
	469, 407, 479, 499, 500, 243, 367, 489, 458, 495,
	512, 211, 240, 381, 451, 485, 441, 360, 465, 466,
	299, 440, 273, 195, 335, 505, 209, 427, 227, 216,
	202, 453, 477, 224, 431, 0, 0, 514, 204, 475,
	450, 356, 296, 297, 203, 0, 411, 248, 271, 238,
	376, 472, 473, 236, 515, 213, 494, 206, 0, 493,
	369, 468, 476, 357, 347, 205, 474, 355, 346, 302,
	321, 322, 260, 282, 405, 340, 406, 283, 365, 364,
	366, 198, 486, 0, 199, 0, 446, 487, 516, 219,
	220, 222, 0, 259, 263, 270, 272, 278, 279, 286,
	333, 380, 404, 402, 408, 0, 463, 480, 490, 497,
	503, 504, 506, 507, 508, 509, 510, 511, 368, 285,
	442, 301, 338, 0, 0, 386, 420, 225, 484, 443,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 535,
	348, 433, 481, 303, 315, 318, 308, 327, 0, 328,
	304, 305, 310, 312, 313, 314, 319, 320, 324, 330,
	0, 191, 207, 334, 0, 409, 268, 513, 492, 488,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 276, 281, 284, 289, 290,
	293, 298, 344, 350, 351, 352, 353, 370, 371, 372,
	375, 378, 379, 382, 384, 385, 388, 392, 396, 397,
	398, 399, 401, 403, 410, 414, 422, 423, 424, 425,
	426, 429, 430, 435, 436, 437, 438, 439, 447, 448,
	452, 470, 471, 483, 496, 501, 428, 277, 478, 502,
	0, 343, 0, 0, 345, 261, 280, 291, 0, 491,
	449, 212, 416, 269, 201, 231, 215, 239, 254, 257,
	295, 354, 361, 390, 395, 274, 251, 229, 413, 226,
	432, 455, 456, 457, 459, 358, 246, 394, 0, 359,
	341, 461, 462, 287, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 1482, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	332, 247, 0, 0, 391, 0, 197, 0, 434, 234,
	342, 339, 467, 262, 253, 249, 233, 288, 349, 389,
	454, 383, 0, 336, 0, 0, 444, 362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 232, 196, 374, 445, 266, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 317,
	326, 325, 306, 307, 309, 311, 316, 323, 329, 0,
	0, 0, 0, 0, 245, 292, 252, 244, 464, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 363, 237, 0, 0, 0, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 373, 415, 421, 0, 0, 0, 235, 0,
	419, 387, 482, 218, 264, 412, 393, 417, 400, 267,
	0, 0, 418, 337, 469, 407, 479, 499, 500, 243,
	367, 489, 458, 495, 512, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 299, 440, 273, 195, 335, 505,
	209, 427, 227, 216, 202, 453, 477, 224, 431, 0,
	0, 514, 204, 475, 450, 356, 296, 297, 203, 0,
	411, 248, 271, 238, 376, 472, 473, 236, 515, 213,
	494, 206, 0, 493, 369, 468, 476, 357, 347, 205,
	474, 355, 346, 302, 321, 322, 260, 282, 405, 340,
	406, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 516, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 380, 404, 402, 408, 0,
	463, 480, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 511, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 225, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 409,
	268, 513, 492, 488, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 471, 483, 496, 501,
	428, 277, 478, 502, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 491, 449, 212, 416, 269, 201, 231,
	215, 239, 254, 257, 295, 354, 361, 390, 395, 274,
	251, 229, 413, 226, 432, 455, 456, 457, 459, 358,
	246, 394, 0, 359, 341, 461, 462, 287, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 1480, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 332, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 0, 336, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	374, 445, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 0, 0, 0, 0, 0, 245, 292,
	252, 244, 464, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 363, 237, 0, 0, 0,
	0, 498, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 373, 415, 421, 0,
	0, 0, 235, 0, 419, 387, 482, 218, 264, 412,
	393, 417, 400, 267, 0, 0, 418, 337, 469, 407,
	479, 499, 500, 243, 367, 489, 458, 495, 512, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 299, 440,
	273, 195, 335, 505, 209, 427, 227, 216, 202, 453,
	477, 224, 431, 0, 0, 514, 204, 475, 450, 356,
	296, 297, 203, 0, 411, 248, 271, 238, 376, 472,
	473, 236, 515, 213, 494, 206, 0, 493, 369, 468,
	476, 357, 347, 205, 474, 355, 346, 302, 321, 322,
	260, 282, 405, 340, 406, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 516, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 380,
	404, 402, 408, 0, 463, 480, 490, 497, 503, 504,
	506, 507, 508, 509, 510, 511, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 225, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 535, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 0, 409, 268, 513, 492, 488, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	471, 483, 496, 501, 428, 277, 478, 502, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 491, 449, 212,
	416, 269, 201, 231, 215, 239, 254, 257, 295, 354,
	361, 390, 395, 274, 251, 229, 413, 226, 432, 455,
	456, 457, 459, 358, 246, 394, 0, 359, 341, 461,
	462, 287, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 1476, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 332, 247,
	0, 0, 391, 0, 197, 0, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	0, 336, 0, 0, 444, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 374, 445, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 0, 0, 0,
	0, 0, 245, 292, 252, 244, 464, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 363,
	237, 0, 0, 0, 0, 498, 0, 0, 0, 0,
	0, 0, 0, 331, 0, 300, 192, 210, 0, 0,
	373, 415, 421, 0, 0, 0, 235, 0, 419, 387,
	482, 218, 264, 412, 393, 417, 400, 267, 0, 0,
	418, 337, 469, 407, 479, 499, 500, 243, 367, 489,
	458, 495, 512, 211, 240, 381, 451, 485, 441, 360,
	465, 466, 299, 440, 273, 195, 335, 505, 209, 427,
	227, 216, 202, 453, 477, 224, 431, 0, 0, 514,
	204, 475, 450, 356, 296, 297, 203, 0, 411, 248,
	271, 238, 376, 472, 473, 236, 515, 213, 494, 206,
	0, 493, 369, 468, 476, 357, 347, 205, 474, 355,
	346, 302, 321, 322, 260, 282, 405, 340, 406, 283,
	365, 364, 366, 198, 486, 0, 199, 0, 446, 487,
	516, 219, 220, 222, 0, 259, 263, 270, 272, 278,
	279, 286, 333, 380, 404, 402, 408, 0, 463, 480,
	490, 497, 503, 504, 506, 507, 508, 509, 510, 511,
	368, 285, 442, 301, 338, 0, 0, 386, 420, 225,
	484, 443, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 535, 348, 433, 481, 303, 315, 318, 308, 327,
	0, 328, 304, 305, 310, 312, 313, 314, 319, 320,
	324, 330, 0, 191, 207, 334, 0, 409, 268, 513,
	492, 488, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 276, 281, 284,
	289, 290, 293, 298, 344, 350, 351, 352, 353, 370,
	371, 372, 375, 378, 379, 382, 384, 385, 388, 392,
	396, 397, 398, 399, 401, 403, 410, 414, 422, 423,
	424, 425, 426, 429, 430, 435, 436, 437, 438, 439,
	447, 448, 452, 470, 471, 483, 496, 501, 428, 277,
	478, 502, 0, 343, 0, 0, 345, 261, 280, 291,
	0, 491, 449, 212, 416, 269, 201, 231, 215, 239,
	254, 257, 295, 354, 361, 390, 395, 274, 251, 229,
	413, 226, 432, 455, 456, 457, 459, 358, 246, 394,
	0, 359, 341, 461, 462, 287, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	1474, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 332, 247, 0, 0, 391, 0, 197, 0,
	434, 234, 342, 339, 467, 262, 253, 249, 233, 288,
	349, 389, 454, 383, 0, 336, 0, 0, 444, 362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 232, 196, 374, 445,
	266, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 317, 326, 325, 306, 307, 309, 311, 316, 323,
	329, 0, 0, 0, 0, 0, 245, 292, 252, 244,
	464, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 363, 237, 0, 0, 0, 0, 498,
	0, 0, 0, 0, 0, 0, 0, 331, 0, 300,
	192, 210, 0, 0, 373, 415, 421, 0, 0, 0,
	235, 0, 419, 387, 482, 218, 264, 412, 393, 417,
	400, 267, 0, 0, 418, 337, 469, 407, 479, 499,
	500, 243, 367, 489, 458, 495, 512, 211, 240, 381,
	451, 485, 441, 360, 465, 466, 299, 440, 273, 195,
	335, 505, 209, 427, 227, 216, 202, 453, 477, 224,
	431, 0, 0, 514, 204, 475, 450, 356, 296, 297,
	203, 0, 411, 248, 271, 238, 376, 472, 473, 236,
	515, 213, 494, 206, 0, 493, 369, 468, 476, 357,
	347, 205, 474, 355, 346, 302, 321, 322, 260, 282,
	405, 340, 406, 283, 365, 364, 366, 198, 486, 0,
	199, 0, 446, 487, 516, 219, 220, 222, 0, 259,
	263, 270, 272, 278, 279, 286, 333, 380, 404, 402,
	408, 0, 463, 480, 490, 497, 503, 504, 506, 507,
	508, 509, 510, 511, 368, 285, 442, 301, 338, 0,
	0, 386, 420, 225, 484, 443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 535, 348, 433, 481, 303,
	315, 318, 308, 327, 0, 328, 304, 305, 310, 312,
	313, 314, 319, 320, 324, 330, 0, 191, 207, 334,
	0, 409, 268, 513, 492, 488, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 276, 281, 284, 289, 290, 293, 298, 344, 350,
	351, 352, 353, 370, 371, 372, 375, 378, 379, 382,
	384, 385, 388, 392, 396, 397, 398, 399, 401, 403,
	410, 414, 422, 423, 424, 425, 426, 429, 430, 435,
	436, 437, 438, 439, 447, 448, 452, 470, 471, 483,
	496, 501, 428, 277, 478, 502, 0, 343, 0, 0,
	345, 261, 280, 291, 0, 491, 449, 212, 416, 269,
	201, 231, 215, 239, 254, 257, 295, 354, 361, 390,
	395, 274, 251, 229, 413, 226, 432, 455, 456, 457,
	459, 358, 246, 394, 0, 359, 341, 461, 462, 287,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 1472, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 332, 247, 0, 0,
	391, 0, 197, 0, 434, 234, 342, 339, 467, 262,
	253, 249, 233, 288, 349, 389, 454, 383, 0, 336,
	0, 0, 444, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	232, 196, 374, 445, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 317, 326, 325, 306, 307,
	309, 311, 316, 323, 329, 0, 0, 0, 0, 0,
	245, 292, 252, 244, 464, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 363, 237, 0,
	0, 0, 0, 498, 0, 0, 0, 0, 0, 0,
	0, 331, 0, 300, 192, 210, 0, 0, 373, 415,
	421, 0, 0, 0, 235, 0, 419, 387, 482, 218,
	264, 412, 393, 417, 400, 267, 0, 0, 418, 337,
	469, 407, 479, 499, 500, 243, 367, 489, 458, 495,
	512, 211, 240, 381, 451, 485, 441, 360, 465, 466,
	299, 440, 273, 195, 335, 505, 209, 427, 227, 216,
	202, 453, 477, 224, 431, 0, 0, 514, 204, 475,
	450, 356, 296, 297, 203, 0, 411, 248, 271, 238,
	376, 472, 473, 236, 515, 213, 494, 206, 0, 493,
	369, 468, 476, 357, 347, 205, 474, 355, 346, 302,
	321, 322, 260, 282, 405, 340, 406, 283, 365, 364,
	366, 198, 486, 0, 199, 0, 446, 487, 516, 219,
	220, 222, 0, 259, 263, 270, 272, 278, 279, 286,
	333, 380, 404, 402, 408, 0, 463, 480, 490, 497,
	503, 504, 506, 507, 508, 509, 510, 511, 368, 285,
	442, 301, 338, 0, 0, 386, 420, 225, 484, 443,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 535,
	348, 433, 481, 303, 315, 318, 308, 327, 0, 328,
	304, 305, 310, 312, 313, 314, 319, 320, 324, 330,
	0, 191, 207, 334, 0, 409, 268, 513, 492, 488,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 276, 281, 284, 289, 290,
	293, 298, 344, 350, 351, 352, 353, 370, 371, 372,
	375, 378, 379, 382, 384, 385, 388, 392, 396, 397,
	398, 399, 401, 403, 410, 414, 422, 423, 424, 425,
	426, 429, 430, 435, 436, 437, 438, 439, 447, 448,
	452, 470, 471, 483, 496, 501, 428, 277, 478, 502,
	0, 343, 0, 0, 345, 261, 280, 291, 0, 491,
	449, 212, 416, 269, 201, 231, 215, 239, 254, 257,
	295, 354, 361, 390, 395, 274, 251, 229, 413, 226,
	432, 455, 456, 457, 459, 358, 246, 394, 0, 359,
	341, 461, 462, 287, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	332, 247, 0, 0, 391, 0, 197, 0, 434, 234,
	342, 339, 467, 262, 253, 249, 233, 288, 349, 389,
	454, 383, 0, 336, 0, 0, 444, 362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 232, 196, 374, 445, 266, 0,
	1449, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 317,
	326, 325, 306, 307, 309, 311, 316, 323, 329, 0,
	0, 0, 0, 0, 245, 292, 252, 244, 464, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 363, 237, 0, 0, 0, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 373, 415, 421, 0, 0, 0, 235, 0,
	419, 387, 482, 218, 264, 412, 393, 417, 400, 267,
	0, 0, 418, 337, 469, 407, 479, 499, 500, 243,
	367, 489, 458, 495, 512, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 299, 440, 273, 195, 335, 505,
	209, 427, 227, 216, 202, 453, 477, 224, 431, 0,
	0, 514, 204, 475, 450, 356, 296, 297, 203, 0,
	411, 248, 271, 238, 376, 472, 473, 236, 515, 213,
	494, 206, 0, 493, 369, 468, 476, 357, 347, 205,
	474, 355, 346, 302, 321, 322, 260, 282, 405, 340,
	406, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 516, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 380, 404, 402, 408, 0,
	463, 480, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 511, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 225, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 409,
	268, 513, 492, 488, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 471, 483, 496, 501,
	428, 277, 478, 502, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 491, 449, 212, 416, 269, 201, 231,
	215, 239, 254, 257, 295, 354, 361, 390, 395, 274,
	251, 229, 413, 226, 432, 455, 456, 457, 459, 358,
	246, 394, 0, 359, 341, 461, 462, 287, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 1349, 250,
	0, 0, 0, 0, 332, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 0, 336, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	374, 445, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 0, 0, 0, 0, 0, 245, 292,
	252, 244, 464, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 363, 237, 0, 0, 0,
	0, 498, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 373, 415, 421, 0,
	0, 0, 235, 0, 419, 387, 482, 218, 264, 412,
	393, 417, 400, 267, 0, 0, 418, 337, 469, 407,
	479, 499, 500, 243, 367, 489, 458, 495, 512, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 299, 440,
	273, 195, 335, 505, 209, 427, 227, 216, 202, 453,
	477, 224, 431, 0, 0, 514, 204, 475, 450, 356,
	296, 297, 203, 0, 411, 248, 271, 238, 376, 472,
	473, 236, 515, 213, 494, 206, 0, 493, 369, 468,
	476, 357, 347, 205, 474, 355, 346, 302, 321, 322,
	260, 282, 405, 340, 406, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 516, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 380,
	404, 402, 408, 0, 463, 480, 490, 497, 503, 504,
	506, 507, 508, 509, 510, 511, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 225, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 535, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 0, 409, 268, 513, 492, 488, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	471, 483, 496, 501, 428, 277, 478, 502, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 491, 449, 212,
	416, 269, 201, 231, 215, 239, 254, 257, 295, 354,
	361, 390, 395, 274, 251, 229, 413, 226, 432, 455,
	456, 457, 459, 358, 246, 394, 0, 359, 341, 461,
	462, 287, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 332, 247,
	0, 0, 391, 0, 197, 0, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	0, 336, 0, 0, 444, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 374, 445, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 1150, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 0, 0, 0,
	0, 0, 245, 292, 252, 244, 464, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 363,
	237, 0, 0, 0, 0, 498, 0, 0, 0, 0,
	0, 0, 0, 331, 0, 300, 192, 210, 0, 0,
	373, 415, 421, 0, 0, 0, 235, 0, 419, 387,
	482, 218, 264, 412, 393, 417, 400, 267, 0, 0,
	418, 337, 469, 407, 479, 499, 500, 243, 367, 489,
	458, 495, 512, 211, 240, 381, 451, 485, 441, 360,
	465, 466, 299, 440, 273, 195, 335, 505, 209, 427,
	227, 216, 202, 453, 477, 224, 431, 0, 0, 514,
	204, 475, 450, 356, 296, 297, 203, 0, 411, 248,
	271, 238, 376, 472, 473, 236, 515, 213, 494, 206,
	0, 493, 369, 468, 476, 357, 347, 205, 474, 355,
	346, 302, 321, 322, 260, 282, 405, 340, 406, 283,
	365, 364, 366, 198, 486, 0, 199, 0, 446, 487,
	516, 219, 220, 222, 0, 259, 263, 270, 272, 278,
	279, 286, 333, 380, 404, 402, 408, 0, 463, 480,
	490, 497, 503, 504, 506, 507, 508, 509, 510, 511,
	368, 285, 442, 301, 338, 0, 0, 386, 420, 225,
	484, 443, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 535, 348, 433, 481, 303, 315, 318, 308, 327,
	0, 328, 304, 305, 310, 312, 313, 314, 319, 320,
	324, 330, 0, 191, 207, 334, 0, 409, 268, 513,
	492, 488, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 276, 281, 284,
	289, 290, 293, 298, 344, 350, 351, 352, 353, 370,
	371, 372, 375, 378, 379, 382, 384, 385, 388, 392,
	396, 397, 398, 399, 401, 403, 410, 414, 422, 423,
	424, 425, 426, 429, 430, 435, 436, 437, 438, 439,
	447, 448, 452, 470, 471, 483, 496, 501, 428, 277,
	478, 502, 0, 343, 0, 0, 345, 261, 280, 291,
	0, 491, 449, 212, 416, 269, 201, 231, 215, 239,
	254, 257, 295, 354, 361, 390, 395, 274, 251, 229,
	413, 226, 432, 455, 456, 457, 459, 358, 246, 394,
	0, 359, 341, 461, 462, 287, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 332, 247, 0, 0, 391, 0, 197, 0,
	434, 234, 342, 339, 467, 262, 253, 249, 233, 288,
	349, 389, 454, 383, 0, 336, 0, 0, 444, 362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 232, 196, 374, 445,
	266, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 317, 326, 325, 306, 307, 309, 311, 316, 323,
	329, 0, 0, 0, 0, 0, 245, 292, 252, 244,
	464, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 363, 237, 0, 0, 0, 0, 498,
	0, 0, 0, 0, 0, 0, 0, 331, 0, 300,
	192, 210, 0, 0, 373, 415, 421, 0, 0, 0,
	235, 0, 419, 387, 482, 218, 264, 412, 393, 417,
	400, 267, 0, 0, 418, 337, 469, 407, 479, 499,
	500, 243, 367, 489, 458, 495, 512, 211, 240, 381,
	451, 485, 441, 360, 465, 466, 299, 440, 273, 195,
	335, 505, 209, 427, 227, 216, 202, 453, 477, 224,
	431, 0, 0, 514, 204, 475, 450, 356, 296, 297,
	203, 0, 411, 248, 271, 238, 376, 472, 473, 236,
	515, 213, 494, 206, 0, 493, 369, 468, 476, 357,
	347, 205, 474, 355, 346, 302, 321, 322, 260, 282,
	405, 340, 406, 283, 365, 364, 366, 198, 486, 0,
	199, 0, 446, 487, 516, 219, 220, 222, 0, 259,
	263, 270, 272, 278, 279, 286, 333, 380, 404, 402,
	408, 0, 463, 480, 490, 497, 503, 504, 506, 507,
	508, 509, 510, 511, 368, 285, 442, 301, 338, 0,
	0, 386, 420, 225, 484, 443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 535, 348, 433, 481, 303,
	315, 318, 308, 327, 0, 328, 304, 305, 310, 312,
	313, 314, 319, 320, 324, 330, 0, 191, 207, 334,
	0, 409, 268, 513, 492, 488, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 768, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 276, 281, 284, 289, 290, 293, 298, 344, 350,
	351, 352, 353, 370, 371, 372, 375, 378, 379, 382,
	384, 385, 388, 392, 396, 397, 398, 399, 401, 403,
	410, 414, 422, 423, 424, 425, 426, 429, 430, 435,
	436, 437, 438, 439, 447, 448, 452, 470, 471, 483,
	496, 501, 428, 277, 478, 502, 0, 343, 0, 0,
	345, 261, 280, 291, 0, 491, 449, 212, 416, 269,
	201, 231, 215, 239, 254, 257, 295, 354, 361, 390,
	395, 274, 251, 229, 413, 226, 432, 455, 456, 457,
	459, 358, 246, 394, 0, 359, 341, 461, 462, 287,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 332, 247, 0, 0,
	391, 0, 197, 0, 434, 234, 342, 339, 467, 262,
	253, 249, 233, 288, 349, 389, 454, 383, 0, 336,
	0, 0, 444, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	232, 196, 374, 445, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 317, 326, 325, 306, 307,
	309, 311, 316, 323, 329, 0, 0, 0, 0, 0,
	245, 292, 252, 244, 464, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 591, 0, 275, 0, 363, 237, 0,
	0, 0, 0, 498, 0, 0, 0, 0, 0, 0,
	0, 331, 0, 300, 192, 210, 0, 0, 373, 415,
	421, 0, 0, 0, 235, 0, 419, 387, 482, 218,
	264, 412, 393, 417, 400, 267, 0, 0, 418, 337,
	469, 407, 479, 499, 500, 243, 367, 489, 458, 495,
	512, 211, 240, 381, 451, 485, 441, 360, 465, 466,
	299, 440, 273, 195, 335, 505, 209, 427, 227, 216,
	202, 453, 477, 224, 431, 0, 0, 514, 204, 475,
	450, 356, 296, 297, 203, 0, 411, 248, 271, 238,
	376, 472, 473, 236, 515, 213, 494, 206, 0, 493,
	369, 468, 476, 357, 347, 205, 474, 355, 346, 302,
	321, 322, 260, 282, 405, 340, 406, 283, 365, 364,
	366, 198, 486, 0, 199, 0, 446, 487, 516, 219,
	220, 222, 0, 259, 263, 270, 272, 278, 279, 286,
	333, 380, 404, 402, 408, 0, 463, 480, 490, 497,
	503, 504, 506, 507, 508, 509, 510, 511, 368, 285,
	442, 301, 338, 0, 0, 386, 420, 225, 484, 443,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 535,
	348, 433, 481, 303, 315, 318, 308, 327, 0, 328,
	304, 305, 310, 312, 313, 314, 319, 320, 324, 330,
	0, 191, 207, 334, 0, 409, 268, 513, 492, 488,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 276, 281, 284, 289, 290,
	293, 298, 344, 350, 351, 352, 353, 370, 371, 372,
	375, 378, 379, 382, 384, 385, 388, 392, 396, 397,
	398, 399, 401, 403, 410, 414, 422, 423, 424, 425,
	426, 429, 430, 435, 436, 437, 438, 439, 447, 448,
	452, 470, 471, 483, 496, 501, 428, 590, 478, 502,
	0, 343, 0, 0, 345, 261, 280, 291, 0, 491,
	449, 212, 416, 269, 201, 231, 215, 239, 254, 257,
	295, 354, 361, 390, 395, 274, 251, 229, 413, 226,
	432, 455, 456, 457, 459, 358, 246, 394, 0, 359,
	341, 461, 462, 287, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	332, 247, 0, 0, 391, 0, 197, 0, 434, 234,
	342, 339, 467, 262, 253, 249, 233, 288, 349, 389,
	454, 383, 0, 336, 0, 0, 444, 362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 232, 196, 374, 445, 266, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 317,
	326, 325, 306, 307, 309, 311, 316, 323, 329, 0,
	0, 0, 0, 0, 245, 292, 252, 244, 464, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 363, 237, 0, 0, 538, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 373, 415, 421, 0, 0, 0, 235, 0,
	419, 387, 482, 218, 264, 412, 393, 417, 400, 267,
	0, 0, 418, 337, 469, 407, 479, 499, 500, 243,
	367, 489, 458, 495, 512, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 299, 440, 273, 195, 335, 505,
	209, 427, 227, 216, 202, 453, 477, 224, 431, 0,
	0, 514, 204, 475, 450, 356, 296, 297, 203, 0,
	411, 248, 271, 238, 376, 472, 473, 236, 515, 213,
	494, 206, 0, 493, 369, 468, 476, 357, 347, 205,
	474, 355, 346, 302, 321, 322, 260, 282, 405, 340,
	406, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 516, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 380, 404, 402, 408, 0,
	463, 480, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 511, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 225, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 409,
	268, 513, 492, 488, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 471, 483, 496, 501,
	428, 277, 478, 502, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 491, 449, 212, 416, 269, 201, 231,
	215, 239, 254, 257, 295, 354, 361, 390, 395, 274,
	251, 229, 413, 226, 432, 455, 456, 457, 459, 358,
	246, 394, 0, 359, 341, 461, 462, 287, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 332, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 0, 336, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	374, 445, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 0, 0, 0, 0, 0, 245, 292,
	252, 244, 464, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 363, 237, 0, 0, 0,
	0, 498, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 373, 415, 421, 0,
	0, 0, 235, 0, 419, 387, 482, 218, 264, 412,
	393, 417, 400, 267, 0, 0, 418, 337, 469, 407,
	479, 499, 500, 243, 367, 489, 458, 495, 512, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 299, 440,
	273, 195, 335, 505, 209, 427, 227, 216, 202, 453,
	477, 224, 431, 0, 0, 514, 204, 475, 450, 356,
	296, 297, 203, 0, 411, 248, 271, 238, 376, 472,
	473, 236, 515, 213, 494, 206, 0, 493, 369, 468,
	476, 357, 347, 205, 474, 355, 346, 302, 321, 322,
	260, 282, 405, 340, 406, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 516, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 380,
	404, 402, 408, 0, 463, 480, 490, 497, 503, 504,
	506, 507, 508, 509, 510, 511, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 225, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 535, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 0, 409, 268, 513, 492, 488, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 2912, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	471, 483, 496, 501, 428, 277, 478, 502, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 491, 449, 212,
	416, 269, 201, 231, 215, 239, 254, 257, 295, 354,
	361, 390, 395, 274, 251, 229, 413, 226, 432, 455,
	456, 457, 459, 358, 246, 394, 0, 359, 341, 461,
	462, 287, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 332, 247,
	0, 0, 391, 0, 197, 0, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	0, 336, 0, 0, 444, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 374, 445, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 0, 0, 0,
	0, 0, 245, 292, 252, 244, 464, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 363,
	237, 0, 0, 0, 0, 498, 0, 0, 0, 0,
	0, 0, 0, 331, 0, 300, 192, 210, 0, 0,
	373, 415, 421, 0, 0, 0, 235, 0, 419, 387,
	482, 218, 264, 412, 393, 417, 400, 267, 0, 0,
	418, 337, 469, 407, 479, 499, 500, 243, 367, 489,
	458, 495, 512, 211, 240, 381, 451, 485, 441, 360,
	465, 466, 299, 440, 273, 195, 335, 505, 209, 427,
	227, 216, 202, 453, 477, 224, 431, 0, 0, 514,
	204, 475, 450, 356, 296, 297, 203, 0, 411, 248,
	271, 238, 376, 472, 473, 236, 515, 213, 494, 206,
	0, 493, 369, 468, 476, 357, 347, 205, 474, 355,
	346, 302, 321, 322, 260, 282, 405, 340, 406, 283,
	365, 364, 366, 198, 486, 0, 199, 0, 446, 487,
	516, 219, 220, 222, 0, 259, 263, 270, 272, 278,
	279, 286, 333, 380, 404, 402, 408, 0, 463, 480,
	490, 497, 503, 504, 506, 507, 508, 509, 510, 511,
	368, 285, 442, 301, 338, 0, 0, 386, 420, 225,
	484, 443, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 535, 348, 433, 481, 303, 315, 318, 308, 327,
	0, 328, 304, 305, 310, 312, 313, 314, 319, 320,
	324, 330, 0, 191, 207, 334, 0, 409, 268, 513,
	492, 488, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 276, 281, 284,
	289, 290, 293, 298, 344, 350, 351, 352, 353, 370,
	371, 372, 375, 378, 379, 382, 384, 385, 388, 392,
	396, 397, 398, 399, 401, 403, 410, 414, 422, 423,
	424, 425, 426, 429, 430, 435, 436, 437, 438, 439,
	447, 448, 452, 470, 471, 483, 496, 501, 428, 277,
	478, 502, 0, 343, 0, 0, 345, 261, 280, 291,
	0, 491, 449, 212, 416, 269, 201, 231, 215, 239,
	254, 257, 295, 354, 361, 390, 395, 274, 251, 229,
	413, 226, 432, 455, 456, 457, 459, 358, 246, 394,
	0, 359, 341, 461, 462, 287, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 332, 247, 0, 0, 391, 0, 197, 0,
	434, 234, 342, 339, 467, 262, 253, 249, 233, 288,
	349, 389, 454, 383, 0, 336, 0, 0, 444, 362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 232, 196, 374, 445,
	266, 0, 0, 0, 0, 188, 2553, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 317, 326, 325, 306, 307, 309, 311, 316, 323,
	329, 0, 0, 0, 0, 0, 245, 292, 252, 244,
	464, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 363, 237, 0, 0, 0, 0, 498,
	0, 0, 0, 0, 0, 0, 0, 331, 0, 300,
	192, 210, 0, 0, 373, 415, 421, 0, 0, 0,
	235, 0, 419, 387, 482, 218, 264, 412, 393, 417,
	400, 267, 0, 0, 418, 337, 469, 407, 479, 499,
	500, 243, 367, 489, 458, 495, 512, 211, 240, 381,
	451, 485, 441, 360, 465, 466, 299, 440, 273, 195,
	335, 505, 209, 427, 227, 216, 202, 453, 477, 224,
	431, 0, 0, 514, 204, 475, 450, 356, 296, 297,
	203, 0, 411, 248, 271, 238, 376, 472, 473, 236,
	515, 213, 494, 206, 0, 493, 369, 468, 476, 357,
	347, 205, 474, 355, 346, 302, 321, 322, 260, 282,
	405, 340, 406, 283, 365, 364, 366, 198, 486, 0,
	199, 0, 446, 487, 516, 219, 220, 222, 0, 259,
	263, 270, 272, 278, 279, 286, 333, 380, 404, 402,
	408, 0, 463, 480, 490, 497, 503, 504, 506, 507,
	508, 509, 510, 511, 368, 285, 442, 301, 338, 0,
	0, 386, 420, 225, 484, 443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 535, 348, 433, 481, 303,
	315, 318, 308, 327, 0, 328, 304, 305, 310, 312,
	313, 314, 319, 320, 324, 330, 0, 191, 207, 334,
	0, 409, 268, 513, 492, 488, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 276, 281, 284, 289, 290, 293, 298, 344, 350,
	351, 352, 353, 370, 371, 372, 375, 378, 379, 382,
	384, 385, 388, 392, 396, 397, 398, 399, 401, 403,
	410, 414, 422, 423, 424, 425, 426, 429, 430, 435,
	436, 437, 438, 439, 447, 448, 452, 470, 471, 483,
	496, 501, 428, 277, 478, 502, 0, 343, 0, 0,
	345, 261, 280, 291, 0, 491, 449, 212, 416, 269,
	201, 231, 215, 239, 254, 257, 295, 354, 361, 390,
	395, 274, 251, 229, 413, 226, 432, 455, 456, 457,
	459, 358, 246, 394, 0, 359, 341, 461, 462, 287,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 332, 247, 0, 0,
	391, 0, 197, 0, 434, 234, 342, 339, 467, 262,
	253, 249, 233, 288, 349, 389, 454, 383, 0, 336,
	0, 0, 444, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	232, 196, 374, 445, 266, 0, 0, 0, 0, 188,
	2086, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 317, 326, 325, 306, 307,
	309, 311, 316, 323, 329, 0, 0, 0, 0, 0,
	245, 292, 252, 244, 464, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 363, 237, 0,
	0, 0, 0, 498, 0, 0, 0, 0, 0, 0,
	0, 331, 0, 300, 192, 210, 0, 0, 373, 415,
	421, 0, 0, 0, 235, 0, 419, 387, 482, 218,
	264, 412, 393, 417, 400, 267, 0, 0, 418, 337,
	469, 407, 479, 499, 500, 243, 367, 489, 458, 495,
	512, 211, 240, 381, 451, 485, 441, 360, 465, 466,
	299, 440, 273, 195, 335, 505, 209, 427, 227, 216,
	202, 453, 477, 224, 431, 0, 0, 514, 204, 475,
	450, 356, 296, 297, 203, 0, 411, 248, 271, 238,
	376, 472, 473, 236, 515, 213, 494, 206, 0, 493,
	369, 468, 476, 357, 347, 205, 474, 355, 346, 302,
	321, 322, 260, 282, 405, 340, 406, 283, 365, 364,
	366, 198, 486, 0, 199, 0, 446, 487, 516, 219,
	220, 222, 0, 259, 263, 270, 272, 278, 279, 286,
	333, 380, 404, 402, 408, 0, 463, 480, 490, 497,
	503, 504, 506, 507, 508, 509, 510, 511, 368, 285,
	442, 301, 338, 0, 0, 386, 420, 225, 484, 443,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 535,
	348, 433, 481, 303, 315, 318, 308, 327, 0, 328,
	304, 305, 310, 312, 313, 314, 319, 320, 324, 330,
	0, 191, 207, 334, 0, 409, 268, 513, 492, 488,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 276, 281, 284, 289, 290,
	293, 298, 344, 350, 351, 352, 353, 370, 371, 372,
	375, 378, 379, 382, 384, 385, 388, 392, 396, 397,
	398, 399, 401, 403, 410, 414, 422, 423, 424, 425,
	426, 429, 430, 435, 436, 437, 438, 439, 447, 448,
	452, 470, 471, 483, 496, 501, 428, 277, 478, 502,
	0, 343, 0, 0, 345, 261, 280, 291, 0, 491,
	449, 212, 416, 269, 201, 231, 215, 239, 254, 257,
	295, 354, 361, 390, 395, 274, 251, 229, 413, 226,
	432, 455, 456, 457, 459, 358, 246, 394, 0, 0,
	341, 461, 462, 287,
}

var yyPact = [...]int{
	5808, -1000, -410, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1890, 2166, -1000, -1000,
	-1000, -1000, 2065, -1000, 574, 1580, -1000, 1885, 3000, -1000,
	40393, 348, -1000, 39205, 347, 5043, 40393, -1000, 126, -1000,
	115, 40393, 121, 38611, -1000, -1000, -307, 17217, 1818, 18,
	7, 40393, -1000, -1000, -1000, -1000, 2008, 1514, -1000, 320,
	-1000, -1000, -1000, -1000, -1000, -1000, 38017, -1000, -1000, -1000,
	1889, 1904, 2067, 461, 1833, -1000, 1954, 1514, -1000, 17217,
	1999, 1942, 16623, -1000, 16623, 309, -1000, -1000, 12455, -1000,
	-1000, 23167, 40393, 28513, 223, -1000, 1885, -1000, -1000, -1000,
	102, -1000, 234, 1461, -1000, 1445, -1000, 355, 597, 255,
	381, 380, 254, 252, 249, 246, 245, 243, 241, 240,
	261, -1000, 480, 480, -165, -175, 3041, 296, 296, 296,
	321, 1850, 1849, -1000, 680, -1000, 480, 480, 480, 284,
	480, 480, 480, 480, 212, 197, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 268, 1885, 184, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 40393, 145, 40393, -1000,
	397, 40393, 634, 634, 36, 634, 634, 634, 634, 127,
	500, -15, -1000, 125, 181, 114, 187, 702, 113, -1000,
	-1000, 175, 702, 1064, 462, 112, -1000, 634, 634, -1000,
	10059, 158, 10059, 10059, -1000, 1865, -1000, -1000, -1000, -1000,
	1050, -1000, 319, -1000, -1000, -1000, -1000, 40393, 37423, 303,
	510, -1000, -1000, -1000, 70, -1000, -1000, 1217, 747, 17217,
	940, -1000, 1490, 443, -1000, -1000, -1000, -1000, -1000, 365,
	17811, 17811, 17811, 17811, -1000, -1000, 1478, 1478, 1478, 1478,
	17811, 1478, 17811, 1478, 1478, 1478, 1478, 17217, 1478, 1478,
	1478, -1000, 1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478,
	1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478,
	1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478,
	1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478,
	1478, 1478, 394, 1478, 1478, 1478, 1478, 1478, -1000, -1000,
	-1000, -1000, 1478, 1478, 1478, 1478, 1478, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 20786, -1000, 14841, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 40393, -1000,
	1478, 136, 40393, 40393, 253, 1954, 1514, -1000, 2008, 2140,
	320, -1000, 2063, 1853, 1494, 920, 1514, 1363, 40393, -1000,
	1482, -1000, -1000, -1000, 1721, 966, 1058, -1000, -1000, -1000,
	-1000, 1079, 17217, -1000, -1000, 2047, -1000, 20192, 388, 741,
	2046, 36829, -1000, 309, 309, 1426, 11856, -51, -1000, -1000,
	-1000, 506, 26137, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1865, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1472, 40393, -1000, -1000, 5653,
	1149, -1000, 1579, -1000, 1443, -1000, 1510, 17217, 1586, 346,
	1149, 337, 333, 332, -1000, -94, -1000, -1000, -1000, -1000,
	-1000, -1000, 480, 480, 480, -1000, 247, 1987, 3000, 4321,
	-1000, -1000, -1000, 36235, 1575, 1149, -1000, 1556, -1000, 649,
	415, 427, 427, 1149, -1000, -1000, 40393, 1149, 644, 622,
	40393, 40393, -1000, 35641, -1000, 35047, 34453, 904, 40393, 33859,
	33265, 32671, 32077, 31483, -1000, 1709, -1000, 1717, -1000, -1000,
	-1000, 40393, 40393, 40393, 286, -1000, -1000, 40393, 1149, -1000,
	-1000, 903, 901, 898, 480, 480, 885, 1054, 1052, 1048,
	480, 480, 873, 1044, 27325, 1043, 186, 871, 869, 868,
	909, 1041, 176, 1024, 899, 827, 857, 40393, 1554, 40393,
	-1000, 169, 630, 334, 505, 1885, 1812, 1402, 318, 340,
	1149, 301, 301, 40393, -1000, 10658, -1000, -1000, 1019, 17217,
	-1000, 720, 702, 702, -1000, -1000, -1000, -1000, -1000, -1000,
	634, 40393, 720, -1000, -1000, -1000, 702, 634, 40393, 634,
	634, 634, 634, 702, 702, 702, 634, 40393, 40393, 40393,
	40393, 40393, 40393, 40393, 40393, 40393, 10059, 462, 634, -311,
	-1000, 1018, -1000, 1693, -1000, -1000, -1000, -1000, -1000, -1000,
	10059, 10059, -1000, -1000, -1000, -1000, 118, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -84, 1388, 30889, -1000,
	-312, -314, -319, -320, -1000, -1000, -1000, -322, -327, -1000,
	-1000, -1000, 17217, 17217, 17217, 17217, -199, -1000, 839, 17811,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 840, 514, 17811,
	17811, 17811, 17811, 17811, 17811, 17811, 17811, 17811, 17811, 17811,
	17811, 17811, 17811, 17811, 748, 6268, 6268, 443, 443, 443,
	443, -1000, 16623, 17217, 17217, 443, -1000, 1149, 30295, 16623,
	16623, 17217, 1870, 541, 747, 40393, -1000, 920, -1000, -1000,
	-1000, 835, -1000, 40393, 40393, 1299, 17217, 17217, 17217, 17217,
	17217, 17217, 13648, 17217, 17217, 17217, 17217, 17217, 17217, 17217,
	17217, 17217, 17217, 17217, 17217, 17217, 17217, 17217, 17217, 17217,
	17217, 17217, 17217, 17217, 17217, 17217, 17217, 17217, 17217, 13054,
	10658, 16623, 16623, 16623, 16623, 16623, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 384, 1303,
	1284, 1307, -1000, 1384, -1000, -154, 22573, 17217, 1016, 2041,
	1600, 40393, -1000, -1000, -1000, 1954, -1000, 1954, 1303, 1965,
	1731, 16623, -1000, -1000, 1965, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1166, -1000, 40393, 1363, 1925, 40393, 1719,
	1015, 275, -1000, 17217, 17217, 1353, -1000, 1227, 40393, -1000,
	-199, -1000, 29701, -1000, -1000, 9460, -1000, 40393, 235, 40393,
	-1000, 21979, 29107, 11257, -51, -1000, 11257, 1290, -1000, -35,
	-4, 14242, 424, -1000, -1000, -1000, 3041, 18999, 1155, 424,
	57, -1000, -1000, -1000, 1510, -1000, 1510, 1510, 1510, 1510,
	275, 275, 275, 275, -1000, -1000, -1000, -1000, -1000, 1553,
	1549, -1000, 1510, 1510, 1510, 1510, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1547, 1547, 1547, 1511, 1511, 291, -1000,
	17217, 317, 28513, 1906, 856, 1268, 169, 305, 1599, 1149,
	1149, 1149, 305, -1000, 1189, 1110, 1091, -1000, -401, 1348,
	-1000, -1000, 1986, -1000, -1000, 669, 691, 670, 487, 40393,
	144, 228, -1000, 283, -1000, 28513, 1149, 612, 427, 1149,
	-1000, 1149, -1000, -1000, -1000, -1000, -1000, 1149, 1336, -1000,
	1358, 811, 667, 731, 664, 1336, -1000, -1000, -139, 1336,
	-1000, 1336, -1000, 1336, -1000, 1336, -1000, 1336, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 566, 40393, 144, 748,
	-1000, 316, -1000, -1000, -1000, 748, 748, -1000, -1000, -1000,
	-1000, 1012, 1009, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -389, 40393, -1000, 164, 485, 209, 242, 214,
	40393, 142, 1934, 179, 196, 40393, 40393, 301, 1652, 40393,
	1913, 40393, -1000, -1000, -1000, -1000, -1000, 747, 40393, -1000,
	-1000, 634, 634, -1000, -1000, 40393, 634, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 634, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 40393, -1000, -1000, -1000, -1000, 40393, -1000, -1000, -1000,
	-1000, -1000, 207, -38, 287, -1000, -1000, -1000, -1000, -1000,
	1946, -1000, 747, 688, 569, -1000, 1478, -1000, -1000, 729,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 840, 17811, 17811,
	17811, 1666, 354, 823, 1375, 912, 880, 880, 701, 701,
	447, 447, 447, 447, 447, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1007, -1000, 1397, -1000, 1671, 1026, 920,
	-1000, 1397, 1397, 1232, 16623, -1000, -1000, 601, -1000, 17217,
	920, -1000, -1000, 920, 920, 1331, 1328, 2029, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1448,
	1268, 1268, 1268, 1268, 1268, 17217, 1047, -1000, -1000, -1000,
	2159, 2149, 920, 1217, 920, 1323, -1000, 2070, 1268, 2043,
	1976, 1947, 1254, 1911, 1875, 1841, 1268, 1268, 1268, 915,
	1772, 1768, 1763, 1730, 1726, 1612, 1607, 1594, 1550, 1268,
	920, 16623, 16623, 1315, 1478, 376, -1000, 1397, 920, 920,
	1397, 1397, 10658, 920, -1000, 40393, -1000, -303, -1000, -57,
	492, 1478, -1000, 27325, 920, -1000, 4911, -1000, 41581, -1000,
	-1000, -1000, -1000, -1000, 25543, 1413, 1965, -1000, -1000, 1478,
	1439, -1000, -1000, 275, 35, 24949, -1000, -1000, 747, 747,
	17217, -1000, -1000, -1000, -1000, -1000, -1000, 375, 2016, 295,
	1478, -1000, 1372, 2311, -1000, -1000, -1000, 1924, 19598, -1000,
	1478, 1478, 40393, 1609, 1541, -1000, 372, -1000, 1290, -51,
	-17, -1000, -1000, -1000, -1000, 747, -1000, 1040, 239, 313,
	-1000, 289, -1000, -1000, -1000, -1000, 1836, 46, -1000, -1000,
	-1000, 275, 275, -1000, -1000, -1000, -1000, -1000, -1000, 1006,
	1006, -1000, -1000, -1000, -1000, -1000, 854, -1000, -1000, -1000,
	852, -1000, -1000, 1546, 1661, 317, -1000, -1000, 480, 1004,
	-1000, -1000, 1838, 480, 480, 40393, -1000, -1000, 1143, 1906,
	164, 40393, 546, 1629, -1000, 1599, 1599, 1599, 40393, -1000,
	-1000, -1000, -1000, -1000, -1000, -391, 59, 312, -1000, -1000,
	-1000, 3740, 40393, 1424, -1000, 139, -1000, 1139, -1000, 40393,
	-1000, 1404, 1536, 1149, 1149, -1000, -1000, -1000, 40393, 1478,
	-1000, -1000, -1000, -1000, 339, 1880, 1858, 144, 139, 424,
	1149, -1000, -1000, -1000, -1000, -1000, -392, 1400, 329, 151,
	250, 40393, 40393, 40393, 40393, 40393, 360, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 191, 315, -1000, 40393, 40393,
	470, -1000, -1000, -1000, 702, -1000, -1000, 702, -1000, -1000,
	-1000, -1000, -1000, 1860, 40393, -41, -353, -1000, -348, 17217,
	-1000, -1000, -1000, -1000, 1597, 352, 823, 17811, 17811, 16623,
	-128, 711, 711, 748, -1000, -1000, -1000, 17217, 17217, 1210,
	527, -1000, 17217, 800, -1000, -1000, -1000, 17217, 17217, 17217,
	920, 251, -1000, -1000, -1000, -1000, -1000, 2022, -1000, 17217,
	17217, 17217, -1000, -1000, 17217, 17217, -1000, 17217, 17217, 18405,
	920, 18405, 17217, 17217, 18405, -1000, -1000, -1000, -1000, 18405,
	17217, 17217, 17217, 17217, 17217, 17217, 17217, 17217, 17217, -1000,
	-1000, 1397, 1397, 16623, 10658, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 492, -1000, 427, 427, 427,
	40393, -1000, -1000, -1000, -1000, -1000, -1000, 1280, 1949, -1000,
	1738, 1737, 2020, 2016, -1000, 21979, 1965, -1000, -1000, 40393,
	-297, -1000, 1807, 1822, -1000, -1000, -1000, -1000, 8861, 1954,
	17217, 1627, 40393, 1478, -1000, 21385, 40393, 40393, 21979, 21979,
	21979, 21979, 21979, -1000, 1711, 1705, -1000, 1702, 1672, 1745,
	40393, -1000, 1361, 920, 2140, 19598, 320, 17217, 23761, 1138,
	21979, -1000, -1000, 21979, 40393, 8262, -1000, -1000, -46, -47,
	-1000, -1000, -1000, -1000, 3041, -1000, -1000, 426, 1920, 1825,
	-1000, -1000, -1000, -1000, 1338, -1000, 1333, 1272, 1326, 149,
	-1000, 1555, 1857, 480, 480, -1000, 851, -1000, 1149, 1003,
	993, -1000, -1000, -1000, 323, -1000, 1912, 40393, 1626, 1624,
	1623, -1000, -400, 849, 1532, 1495, 17217, 1520, 1980, 1241,
	40393, -1000, -1000, 40393, -1000, 155, -1000, 317, 40393, -1000,
	-1000, -1000, 228, 40393, -1000, 6227, 139, -1000, -1000, -1000,
	-1000, -1000, -1000, 40393, 162, -1000, 1515, 943, -1000, -1000,
	1513, -1000, -1000, -1000, -1000, 138, 206, -1000, 40393, 460,
	1661, 40393, -1000, -1000, -1000, 634, 634, -1000, -1000, 1854,
	-1000, 1149, 1268, 17811, 17811, -1000, 443, -1000, 1478, 920,
	1510, 1510, -1000, 1510, 1511, -1000, 1510, 108, 1510, 107,
	1510, -1000, -1000, 920, 920, 831, 919, -101, -1000, 747,
	17217, 1524, 1505, 1268, -1000, 1509, 1508, 17217, 1268, 1268,
	1268, -1000, 747, 1254, 1411, 1238, -1000, -1000, -1000, -1000,
	1263, 1268, 1316, -288, 920, 1311, 1311, 1311, 1311, 1311,
	1307, 1307, 1307, 1307, -1000, -1000, 920, -1000, -1000, 1945,
	1945, 1945, 1296, 40987, 40393, -1000, -1000, -1000, -1000, 2016,
	2009, 1252, -1000, -1000, 35, 373, -1000, 1760, 1822, -1000,
	1979, 1803, 1975, -1000, -1000, -1000, 747, -1000, 1887, 1265,
	-1000, 484, 1202, -1000, -1000, 16029, 1298, 1735, 370, 1296,
	1236, 2311, 1595, 1621, 1774, -1000, -1000, -1000, -1000, 1704,
	-1000, 1680, -1000, -1000, 1482, -1000, -1000, 1284, 920, 1291,
	235, 21979, 1230, 1230, -1000, 369, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 703, 5982, 2061, -1000, 977, -1000, 1025,
	183, 833, -1000, -1000, 480, 480, -1000, 595, 592, -1000,
	40393, 1507, -1000, 275, 973, 275, 832, -1000, 815, -1000,
	-1000, -220, -1000, -1000, 1670, 1658, -1000, -1000, -1000, -1000,
	40393, -1000, -1000, 40393, 40393, 40393, 1503, 1973, -1000, 17217,
	1488, 483, 1382, 40393, 40393, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 336, 480, -360, 195, 194,
	480, 480, 480, -1000, -1000, 1293, 1286, -1000, -162, -1000,
	17217, -1000, -1000, -1000, 878, 878, -1000, 1482, -1000, -1000,
	-1000, 1125, -1000, -1000, -145, 40393, 40393, 40393, 40393, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 443,
	17811, -1000, -1000, 275, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 17217, -1000, 17217, -1000, 1954, 972, 747,
	17217, 17217, -1000, 807, 804, 1268, -1000, -1000, -1000, 920,
	18405, -1000, 18405, -1000, 17217, 192, 711, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1478, 1856,
	1478, 1478, 23761, -1000, -1000, 2009, 2002, 1972, 1764, 1785,
	1785, 1760, -1000, 1968, 1967, -1000, 968, 1964, 967, 582,
	-1000, 40393, 17217, 1478, -1000, 302, 40393, 1478, 40393, -1000,
	1966, -1000, -1000, 17217, 1487, -1000, 17217, -1000, -1000, -1000,
	-1000, -1000, -1000, 6268, 2016, 1230, -1000, -1000, 453, -1000,
	17217, -1000, -1000, -1000, 5250, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 944, 926, -1000, -1000, 1483, 17217, -1000,
	-1000, -1000, 1123, 1116, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1482, -1000, -1000, -1000, -1000, 228, -396, 1308,
	40393, 758, -1000, 1260, 1241, 220, 1478, 923, 480, 480,
	480, 755, 753, 27325, 269, -1000, 228, -1000, -177, -178,
	1268, -1000, -1000, 1919, -1000, -1000, 10658, -1000, -1000, 1481,
	1590, -1000, 204, -1000, 1268, 1268, 920, -1000, 1268, 1268,
	1114, 1082, -1000, -1000, 1238, -1000, 743, -1000, 192, 920,
	1616, -1000, -1000, 6268, -1000, 24355, -1000, 1963, 1958, 27919,
	27919, 492, 2002, -1000, 17217, 17217, 1756, 794, -1000, -1000,
	-1000, -1000, 921, 918, -1000, 913, -1000, 2057, -1000, 747,
	-1000, 1478, -1000, 335, 1202, -1000, 1954, 747, 40393, 747,
	38, 1966, -1000, 1268, -1000, 1478, 1478, 1478, 1478, 1478,
	1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478,
	1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478,
	1478, 1478, 1478, 1478, 1478, 1478, 1478, -1000, -1000, 40393,
	1207, -1000, -1000, 1905, 1213, 58, -1000, 1199, -1000, -1000,
	410, -1000, 17217, -1000, 27325, 908, 907, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 320, 1219, -1000, 475, 40393,
	40393, 920, 256, -149, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 17217, -1000, 920, 1615, -1000, -248, -1000,
	1196, -1000, -1000, -1000, -1000, -1000, 1196, 1196, -1000, -1000,
	747, 1217, -1000, 744, -1000, -1000, -1000, -1000, -1000, 40393,
	1202, 40393, -1000, 1187, 920, 1478, 1954, -1000, 1162, -1000,
	320, -1000, 1476, 1495, -1000, -1000, -1000, 15435, -1000, -1000,
	-1000, -1000, -144, 10658, 7663, 1100, -1000, -1000, 1716, -137,
	-159, 1254, -1000, -334, -1000, -1000, 26731, -1000, -1000, -1000,
	-1000, -1000, 1190, -1000, -1000, 23761, 39799, -1000, -126, 198,
	-144, 17217, 1467, 920, -1000, -22, -1000, -1000, -1000, -1000,
	-1000, 1513, -1000, 1713, -1000, 920, -1000, -1000, -1000, 1089,
	-1000, 4538, -251, 1603, -1000, -98, -1000, -1000, -1000, 696,
	750, -1000, -1000, -1000, -1000, -1000, -1000, 1154, 40393, -1000,
	290, -1000, -1000, -145, -146, -1000, -1000, 39799, -243, 424,
	6268, -1000, 1602, 1598, 2028, -1000, -1000, -1000, -1000, -1000,
	-1000, -407, 1085, 166, -1000, -152, -1000, -1000, 1910, 38,
	-1000, 2055, -1000, 2050, 494, 494, -1000, 737, -407, -1000,
	-160, -252, -1000, -1000, -1000, -1000, -1000, 285, 801, -1000,
	-1000, -1000, -1000, 6268, -1000, -1000, -1000, 193, 193, -1000,
	-1000,
}

var yyPgo = [...]int{
	0, 2507, 2506, 24, 2, 2505, 2501, 2500, 38, 95,
	186, 29, 185, 90, 2498, 2497, 2496, 2495, 2494, 2493,
	2492, 211, 210, 206, 2491, 2490, 2485, 2484, 2483, 2480,
	2478, 2477, 2476, 2475, 208, 163, 183, 2474, 2473, 2472,
	115, 178, 82, 85, 179, 2471, 2468, 77, 2467, 2465,
	2460, 176, 174, 167, 624, 2459, 168, 107, 37, 2457,
	2453, 2450, 2447, 2446, 2443, 2442, 2440, 2439, 2437, 2433,
	2432, 2430, 2429, 2428, 2427, 2425, 187, 2424, 2423, 17,
	2422, 79, 2420, 2419, 2418, 2417, 125, 2416, 2414, 2412,
	2409, 2408, 2407, 2405, 141, 2399, 2397, 2396, 2394, 188,
	2392, 2391, 220, 101, 110, 2390, 2387, 93, 180, 2386,
	123, 2385, 2376, 2375, 152, 2364, 4682, 2363, 69, 63,
	2362, 67, 99, 61, 50, 26, 16, 2361, 2360, 66,
	104, 2359, 98, 59, 2352, 106, 97, 2351, 2346, 12,
	6, 2345, 1, 5, 3, 73, 2344, 2340, 119, 2339,
	2338, 2337, 89, 2336, 2335, 68, 2334, 84, 130, 100,
	80, 2332, 35, 65, 2330, 2329, 2328, 2327, 2326, 43,
	2323, 2322, 2321, 145, 34, 169, 28, 52, 45, 142,
	2320, 30, 78, 2314, 144, 143, 2313, 60, 23, 32,
	2312, 47, 134, 121, 25, 91, 135, 2311, 2309, 48,
	75, 2308, 2306, 2305, 2303, 2301, 2300, 74, 2299, 49,
	2298, 195, 2293, 18, 2290, 40, 33, 2288, 70, 131,
	71, 31, 2283, 161, 2280, 46, 160, 128, 158, 2278,
	2276, 2275, 2274, 182, 271, 2273, 2272, 96, 159, 146,
	149, 2265, 274, 2262, 2260, 92, 1247, 1881, 42, 165,
	2254, 2253, 2937, 139, 27, 13, 2247, 221, 2246, 2244,
	2240, 184, 166, 108, 822, 55, 2237, 2236, 11, 2233,
	2230, 2223, 2222, 2221, 2216, 86, 2215, 2213, 2210, 189,
	94, 8, 162, 76, 2202, 2198, 2197, 120, 103, 2194,
	156, 153, 133, 171, 2193, 172, 154, 127, 2192, 519,
	2189, 2187, 2185, 2183, 2182, 88, 2177, 2167, 2164, 2162,
	157, 147, 126, 83, 2161, 81, 111, 150, 155, 44,
	2157, 41, 2150, 2142, 2138, 177, 21, 2137, 10, 58,
	53, 22, 105, 117, 2134, 0, 2133, 15, 164, 272,
	148, 2132, 2125, 4, 7, 9, 2124, 2118, 2115, 2106,
	138, 2105, 2104, 2099, 2097, 20, 36, 19, 14, 2094,
	2089, 4877, 2933, 137, 2083, 190,
}

//line sql.y:6904
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 359, 360, 360, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 335, 335,
	335, 338, 338, 32, 71, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 84, 84, 22, 23, 23, 23, 23,
	363, 363, 150, 150, 148, 148, 149, 149, 218, 218,
	24, 25, 25, 228, 228, 227, 227, 227, 229, 229,
	229, 229, 264, 264, 26, 26, 26, 26, 26, 100,
	100, 337, 337, 336, 328, 328, 327, 327, 326, 334,
	334, 333, 333, 332, 38, 39, 48, 48, 48, 48,
	49, 50, 339, 339, 301, 55, 55, 54, 54, 54,
	54, 54, 54, 56, 56, 52, 52, 51, 51, 53,
	53, 303, 303, 289, 289, 302, 302, 302, 302, 302,
	302, 302, 288, 288, 111, 111, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 354, 354, 354, 353, 353, 198, 198,
	198, 198, 198, 198, 198, 198, 120, 120, 129, 129,
	129, 129, 129, 118, 118, 119, 117, 117, 117, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 358, 358, 358, 358, 358, 358, 358, 358, 358,
	358, 358, 358, 358, 358, 358, 358, 358, 358, 358,
	358, 358, 358, 358, 358, 358, 358, 358, 358, 358,
	358, 358, 358, 358, 358, 358, 358, 358, 358, 358,
	358, 358, 128, 128, 124, 124, 124, 125, 125, 125,
	126, 126, 355, 355, 355, 355, 268, 268, 268, 268,
	271, 271, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 270, 270, 270, 270, 270, 272, 272, 272, 272,
	272, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 273, 274, 274, 274, 274,
	274, 274, 274, 274, 287, 287, 275, 275, 282, 282,
	283, 283, 283, 284, 284, 284, 285, 285, 280, 280,
	280, 280, 280, 280, 281, 281, 281, 290, 315, 315,
	314, 314, 312, 312, 312, 312, 312, 312, 312, 312,
	299, 299, 309, 309, 309, 309, 309, 298, 298, 294,
	294, 294, 295, 295, 296, 296, 293, 293, 297, 297,
	311, 311, 310, 310, 291, 291, 292, 292, 317, 356,
	356, 356, 356, 356, 357, 357, 318, 346, 348, 348,
	348, 347, 347, 344, 345, 343, 343, 343, 343, 343,
	81, 81, 81, 241, 241, 241, 307, 307, 306, 306,
	306, 308, 308, 305, 305, 305, 305, 305, 305, 305,
	305, 305, 305, 305, 305, 305, 305, 305, 305, 305,
	305, 305, 305, 305, 305, 305, 305, 305, 305, 305,
	305, 305, 305, 305, 236, 236, 236, 342, 342, 342,
	342, 342, 342, 341, 341, 341, 304, 304, 304, 340,
	340, 57, 57, 182, 182, 45, 45, 45, 45, 45,
	45, 44, 44, 44, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 46, 46, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 86, 86,
	87, 87, 87, 87, 89, 89, 89, 320, 320, 58,
	58, 3, 3, 138, 140, 141, 141, 139, 139, 139,
	139, 139, 139, 60, 60, 59, 59, 143, 142, 144,
	144, 144, 1, 1, 2, 2, 4, 4, 325, 325,
	325, 325, 325, 325, 325, 325, 325, 325, 325, 325,
	325, 325, 325, 325, 325, 325, 325, 325, 325, 325,
	286, 286, 286, 319, 319, 321, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 323, 323, 323, 61, 61,
	324, 276, 277, 278, 5, 6, 300, 322, 96, 96,
	28, 37, 37, 29, 29, 29, 29, 30, 30, 62,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	235, 235, 243, 243, 234, 234, 257, 257, 257, 237,
	237, 237, 238, 238, 352, 352, 352, 231, 231, 64,
	64, 64, 66, 66, 67, 68, 68, 259, 259, 260,
	260, 69, 70, 82, 82, 82, 82, 82, 82, 85,
	85, 85, 15, 15, 15, 15, 78, 78, 78, 14,
	14, 65, 65, 72, 349, 349, 350, 351, 351, 351,
	351, 73, 75, 31, 31, 31, 31, 31, 31, 106,
	106, 94, 94, 94, 94, 94, 94, 94, 94, 94,
	94, 94, 94, 101, 101, 101, 95, 95, 364, 76,
	77, 77, 99, 99, 99, 92, 92, 92, 98, 98,
	98, 16, 16, 17, 217, 217, 18, 18, 103, 103,
	105, 105, 105, 105, 105, 107, 107, 107, 107, 107,
	107, 107, 102, 102, 104, 104, 104, 104, 250, 250,
	250, 249, 249, 132, 132, 134, 133, 133, 135, 135,
	136, 136, 136, 136, 180, 180, 158, 158, 215, 215,
	213, 213, 214, 214, 216, 216, 216, 216, 219, 219,
	137, 137, 137, 137, 145, 145, 146, 146, 147, 147,
	258, 258, 255, 255, 255, 254, 254, 151, 151, 151,
	153, 152, 152, 152, 152, 154, 154, 156, 156, 155,
	155, 157, 162, 162, 161, 161, 159, 159, 159, 159,
	160, 160, 160, 160, 163, 163, 116, 116, 116, 116,
	116, 116, 116, 127, 127, 127, 127, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 83, 83, 83, 232, 232, 164,
	164, 172, 172, 172, 172, 165, 165, 165, 165, 165,
	165, 165, 173, 173, 173, 179, 174, 174, 170, 170,
	170, 170, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	266, 266, 331, 331, 330, 330, 329, 329, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 365,
	365, 279, 279, 279, 279, 171, 171, 171, 171, 171,
	97, 97, 97, 97, 97, 263, 263, 263, 267, 267,
	267, 265, 265, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 265, 185, 185, 93, 93,
	183, 183, 184, 186, 186, 181, 181, 181, 167, 167,
	167, 187, 187, 188, 188, 189, 189, 191, 190, 190,
	192, 193, 193, 193, 194, 194, 195, 195, 195, 47,
	47, 47, 47, 47, 42, 42, 42, 42, 43, 43,
	43, 108, 108, 108, 108, 110, 110, 109, 109, 79,
	79, 80, 80, 80, 114, 114, 115, 115, 115, 112,
	112, 113, 113, 211, 211, 196, 196, 196, 203, 203,
	203, 199, 199, 201, 201, 201, 202, 202, 202, 200,
	208, 208, 210, 210, 209, 209, 205, 205, 206, 206,
	207, 207, 207, 204, 204, 166, 166, 166, 166, 166,
	212, 212, 212, 212, 220, 220, 176, 176, 178, 178,
	177, 131, 221, 221, 225, 222, 222, 226, 226, 226,
	226, 226, 223, 223, 224, 224, 251, 251, 251, 230,
	230, 242, 242, 239, 239, 240, 240, 233, 233, 244,
	244, 244, 74, 175, 175, 316, 316, 313, 247, 247,
	248, 248, 252, 252, 256, 256, 253, 253, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	361, 362, 261, 262, 262, 262,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 1,
	2, 2, 2, 0, 1, 4, 4, 4, 4, 4,
	4, 2, 4, 1, 3, 1, 1, 3, 4, 3,
	3, 3, 5, 10, 0, 2, 0, 2, 3, 5,
	3, 4, 2, 3, 2, 3, 3, 3, 3, 2,
	2, 4, 4, 1, 1, 1, 1, 1, 0, 2,
	2, 3, 3, 2, 2, 2, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 3, 1, 1, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 3, 3, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 5, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 3, 0, 5,
	0, 3, 5, 0, 1, 1, 0, 1, 0, 2,
	2, 2, 1, 1, 0, 2, 2, 5, 0, 1,
	1, 2, 1, 3, 2, 1, 1, 3, 3, 3,
	0, 1, 4, 3, 3, 4, 2, 0, 2, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	1, 3, 3, 4, 3, 1, 3, 1, 7, 6,
	7, 7, 8, 8, 0, 1, 5, 2, 1, 1,
	1, 0, 1, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 1, 0, 1, 2, 0, 1, 1, 3,
	2, 1, 2, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 4, 4, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 4, 5, 0, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 1, 0, 2, 0, 1, 5, 1, 3,
	7, 1, 3, 3, 1, 2, 2, 2, 5, 5,
	5, 6, 8, 6, 5, 5, 2, 2, 2, 2,
	3, 3, 3, 4, 1, 3, 5, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 3, 4,
	4, 2, 11, 3, 6, 8, 6, 6, 6, 13,
	8, 6, 10, 5, 5, 5, 5, 5, 0, 6,
	5, 6, 4, 5, 0, 8, 9, 0, 3, 0,
	1, 0, 3, 8, 4, 1, 3, 3, 6, 7,
	7, 8, 4, 0, 1, 0, 1, 3, 3, 1,
	1, 2, 1, 1, 0, 2, 0, 2, 5, 3,
	7, 4, 4, 4, 4, 3, 3, 3, 7, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	0, 2, 2, 1, 3, 2, 0, 2, 2, 2,
	2, 2, 2, 2, 2, 4, 4, 3, 0, 1,
	4, 3, 4, 4, 3, 3, 3, 2, 1, 3,
	3, 3, 5, 7, 7, 6, 5, 3, 2, 3,
	3, 3, 7, 3, 3, 3, 3, 4, 7, 5,
	2, 4, 4, 4, 4, 4, 5, 5, 4, 4,
	4, 4, 4, 4, 4, 4, 2, 2, 4, 4,
	4, 4, 4, 3, 3, 3, 5, 2, 3, 3,
	2, 3, 4, 4, 4, 3, 4, 4, 5, 3,
	0, 1, 0, 1, 1, 1, 0, 2, 2, 0,
	2, 2, 0, 2, 0, 1, 1, 1, 1, 2,
	1, 3, 1, 2, 1, 1, 5, 0, 1, 0,
	1, 2, 3, 0, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 3,
	3, 2, 2, 3, 1, 3, 2, 1, 2, 1,
	2, 2, 4, 3, 3, 6, 4, 7, 6, 1,
	3, 2, 2, 2, 2, 1, 1, 1, 3, 2,
	1, 1, 1, 0, 1, 1, 0, 3, 0, 2,
	0, 2, 1, 2, 2, 0, 1, 1, 0, 1,
	1, 5, 5, 4, 0, 2, 4, 4, 0, 1,
	0, 1, 2, 3, 4, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 2, 3, 5, 0, 1,
	2, 1, 1, 0, 1, 2, 1, 3, 1, 1,
	1, 4, 3, 1, 3, 4, 3, 7, 0, 3,
	1, 3, 1, 3, 1, 1, 3, 3, 1, 3,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 0, 1, 2, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 2, 2, 2, 1, 1,
	3, 3, 0, 1, 1, 2, 6, 5, 6, 6,
	0, 2, 3, 3, 0, 2, 3, 3, 3, 2,
	3, 1, 6, 3, 4, 3, 1, 3, 4, 5,
	6, 3, 4, 5, 6, 3, 4, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 3, 1, 1, 2, 2,
	2, 2, 1, 1, 2, 9, 6, 6, 6, 2,
	2, 3, 3, 3, 1, 1, 1, 0, 3, 1,
	1, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 5,
	5, 6, 4, 4, 8, 6, 8, 6, 8, 5,
	4, 2, 2, 1, 2, 2, 2, 8, 8, 6,
	5, 4, 4, 4, 4, 4, 7, 4, 6, 6,
	6, 4, 4, 4, 7, 8, 6, 5, 6, 8,
	11, 7, 8, 8, 9, 4, 4, 4, 4, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 4,
	0, 2, 0, 2, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	2, 0, 2, 3, 3, 4, 4, 4, 4, 4,
	0, 3, 4, 7, 3, 1, 1, 1, 0, 5,
	5, 2, 3, 1, 2, 2, 1, 2, 1, 2,
	2, 1, 2, 2, 1, 1, 0, 1, 0, 2,
	1, 2, 4, 0, 2, 1, 3, 5, 1, 2,
	2, 0, 3, 0, 2, 0, 1, 3, 1, 3,
	2, 0, 1, 1, 0, 1, 2, 4, 4, 0,
	2, 2, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 0, 3, 3, 3, 0, 3, 1, 1, 0,
	4, 0, 1, 1, 0, 3, 1, 3, 2, 1,
	1, 0, 1, 2, 4, 9, 3, 5, 0, 3,
	3, 0, 1, 0, 2, 2, 0, 2, 2, 2,
	0, 2, 1, 2, 3, 3, 0, 2, 1, 2,
	3, 4, 3, 0, 1, 2, 1, 5, 4, 4,
	1, 3, 3, 5, 0, 5, 1, 3, 1, 2,
	3, 1, 1, 3, 3, 1, 3, 3, 3, 3,
	3, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 2, 0, 3, 0, 1, 0,
	1, 1, 5, 0, 1, 0, 1, 2, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -359, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -62, -63, -64, -66,
	-67, -68, -69, -70, -14, -65, -31, -32, -71, -72,
	-73, -74, -75, -16, -17, -18, -9, -8, -13, 9,
	10, -84, -33, 32, -38, -48, 218, -49, -39, 219,
	-50, 221, 220, 257, 222, 250, 74, 299, 300, 302,
	303, 304, 305, -85, 255, 256, 224, 36, 45, 33,
	34, 37, 228, 263, 264, 227, -10, -34, 8, -361,
	11, 429, 252, 251, 28, -12, 463, 85, -360, 603,
	-211, -196, 22, 33, 29, -195, -191, -99, -196, 20,
	18, 7, -76, -364, -76, -76, 12, 13, -76, -301,
	-303, 85, 155, 85, -76, -55, -54, -52, -51, -53,
	-56, 31, -45, -46, -325, -44, -41, 223, 220, 267,
	119, 120, 257, 258, 259, 222, 241, 256, 260, 255,
	276, -40, 80, 33, 463, 466, -308, 219, 225, 226,
	430, 122, 121, 75, 221, -305, 353, 495, 573, -56,
	575, 101, 103, 574, 44, 231, 576, 577, 578, 502,
	579, 240, 580, 581, 582, 583, 589, 544, 590, 591,
	592, 123, 7, -76, -256, -252, -335, -246, 88, 89,
	90, 460, 243, 493, 494, 292, 80, 41, 350, 353,
	495, 573, 299, 313, 307, 334, 326, 461, 496, 295,
	244, 280, 570, 324, 131, 575, 298, 497, 258, 358,
	359, 498, 360, 101, 302, 396, 588, 297, 499, 586,
	103, 574, 79, 51, 44, 253, 322, 227, 318, 576,
	281, 500, 471, 274, 122, 119, 595, 36, 316, 50,
	30, 585, 121, 49, 577, 146, 501, 578, 502, 362,
	341, 564, 48, 363, 259, 503, 83, 264, 465, 572,
	364, 317, 365, 291, 584, 224, 504, 556, 366, 367,
	565, 505, 342, 346, 506, 388, 368, 602, 52, 507,
	508, 566, 120, 509, 78, 579, 311, 312, 510, 289,
	242, 390, 338, 442, 449, 450, 107, 108, 445, 109,
	451, 110, 452, 453, 454, 443, 111, 104, 444, 455,
	456, 339, 340, 112, 457, 106, 105, 446, 448, 113,
	458, 240, 35, 369, 462, 293, 58, 268, 391, 46,
	344, 599, 45, 560, 511, 563, 337, 333, 439, 53,
	512, 513, 514, 515, 580, 336, 310, 332, 594, 4,
	286, 581, 62, 226, 348, 347, 349, 275, 387, 329,
	516, 517, 518, 247, 81, 519, 319, 21, 520, 521,
	370, 282, 522, 56, 523, 524, 394, 256, 525, 54,
	582, 39, 526, 261, 596, 583, 527, 528, 529, 530,
	263, 531, 372, 532, 371, 343, 345, 270, 373, 464,
	533, 315, 260, 587, 534, 248, 571, 262, 267, 255,
	395, 249, 535, 536, 537, 538, 539, 296, 555, 540,
	541, 303, 589, 440, 43, 542, 543, 544, 545, 546,
	290, 285, 389, 398, 61, 82, 355, 547, 548, 569,
	309, 283, 549, 300, 55, 590, 591, 592, 277, 593,
	9, 600, 601, 375, 123, 287, 288, 47, 330, 269,
	550, 551, 320, 321, 335, 308, 331, 301, 557, 271,
	376, 441, 257, 552, 397, 284, 351, 356, 468, 276,
	377, 568, 467, 328, 325, 278, 553, 378, 232, 272,
	273, 554, 558, 379, 380, 294, 381, 382, 383, 384,
	385, 386, 279, 466, 306, 323, 357, 410, 411, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 438, 230, -76, 230, -155,
	-252, 230, -223, 359, -243, 361, 374, 369, 379, 367,
	-235, 370, 372, 270, -352, 388, 230, 376, 218, 362,
	371, 380, 381, 294, 382, 386, 279, 383, 384, 385,
	-335, 172, 578, 593, 131, 327, 366, 364, 389, 560,
	-252, 301, -259, 306, -247, -335, -246, 304, -155, -82,
	556, 222, -261, -261, -101, 560, 562, -174, -116, 139,
	-127, -130, -121, -122, -168, -169, -170, -171, -128, -181,
	161, 162, 169, 140, -179, -131, 26, 459, 431, 430,
	172, 31, 214, 68, 69, 433, 434, 142, 57, 406,
	407, -129, 401, 408, 403, 436, 437, 114, 438, 104,
	106, 105, 439, 440, 441, 339, 340, 442, 443, 444,
	107, 108, 109, 110, 111, 112, 113, 445, 448, 446,
	447, 449, 450, 451, 456, 457, 452, 453, 454, 455,
	458, -247, -252, 235, 400, 229, 167, 429, -123, -119,
	-8, -177, 399, 404, 405, 409, 402, -335, -246, -125,
	-124, -164, 91, 97, 102, 98, -358, 115, -361, 92,
	93, 94, 95, 96, 116, 117, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 44, 375, 375,
	-155, -76, -76, -76, -76, -189, -99, -191, -10, -8,
	-361, 8, -76, -8, -9, -13, -34, -36, 489, -35,
	-252, -196, -211, 12, 157, 42, 50, -194, -195, -12,
	-8, -116, 19, 23, 24, -104, 163, -116, -252, -77,
	-104, -233, 234, -76, -76, -222, -264, 301, -226, 389,
	388, -248, -224, -247, -245, -223, 387, 223, 23, 469,
	138, 25, 27, 141, 172, 126, 19, 142, 37, 225,
	327, 241, 171, 237, 430, 218, 72, 470, 401, 403,
	399, 406, 432, 433, 400, 361, 31, 13, 472, 28,
	251, 24, 38, 165, 220, 145, 473, 254, 26, 252,
	114, 117, 475, 22, 75, 246, 14, 239, 40, 16,
	476, 477, 17, 235, 234, 157, 231, 70, 11, 214,
	29, 154, 66, 478, 133, 479, 480, 481, 482, 127,
	68, 155, 20, 597, 404, 405, 33, 561, 459, 265,
	167, 73, 59, 562, 139, 402, 483, 484, 115, 485,
	118, 76, 567, 135, 18, 71, 42, 486, 266, 487,
	236, 598, 488, 392, 489, 156, 221, 429, 69, 490,
	229, 374, 8, 435, 32, 250, 238, 125, 67, 491,
	230, 144, 436, 437, 233, 128, 116, 7, 132, 34,
	12, 74, 77, 407, 408, 409, 57, 124, 463, 143,
	15, 492, 393, 137, 131, -302, 155, -288, -292, -247,
	245, -318, 241, -155, -311, -310, -247, -361, -100, -242,
	231, 239, 238, 132, -339, 135, 287, 400, 229, -51,
	-52, -53, -223, 171, 577, -86, 262, 266, 86, 86,
	-292, -291, -290, -340, 266, 245, -317, -309, 237, 246,
	-298, 238, 239, -293, 231, 133, -340, -293, 236, 246,
	266, 266, 123, 266, 123, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 261, -299, 147, -299, 467, 467,
	-305, -340, -340, -340, 233, 35, 35, -244, -293, 233,
	25, -299, -299, -299, -223, 171, -299, -299, -299, -299,
	274, 274, -299, -299, -299, -299, -299, -299, -299, -299,
	-299, -299, -299, -299, -299, -299, -299, -299, -299, 230,
	-339, -108, 386, 294, 80, -54, 276, -37, -155, -242,
	231, 232, -339, 263, -155, 215, -155, -237, 155, 15,
	-237, -234, 375, 373, 360, 365, -237, -237, -237, -237,
	277, 358, -294, 231, 35, 242, 375, 277, 358, 277,
	278, 277, 278, 368, 378, 277, -257, 14, 157, 400,
	363, 367, 270, 230, 271, 232, 377, 278, -257, 92,
	-238, 155, 375, 273, -237, -237, -262, -361, -248, 327,
	-335, 563, -262, -262, 32, 89, 233, -247, -78, -247,
	92, -15, -11, -22, -21, -23, 147, -106, 375, -94,
	172, 578, 564, 565, 566, 563, 372, 571, 569, 567,
	277, 568, 86, 135, 137, 138, 4, -116, 154, -165,
	147, 148, 149, 150, 151, 152, 153, 157, 139, 141,
	155, 156, 136, 158, 159, 160, 161, 162, 163, 164,
	166, 165, 167, 168, 171, 216, 217, -122, -122, -122,
	-122, -179, -361, -361, -361, -122, -232, -361, -122, -361,
	-361, -361, -361, -185, -116, -361, -365, -361, -365, -365,
	-279, -361, -279, -361, -361, -361, -361, -361, -361, -361,
	-361, -361, -361, -361, -361, -361, -361, -361, -361, -361,
	-361, -361, -361, -361, -361, -361, -361, -361, -361, -361,
	-361, -361, -361, -361, -361, -361, -361, -361, -361, -361,
	215, -361, -361, -361, -361, -361, -279, -279, -279, -279,
	-279, 102, 97, 91, -181, 98, 92, -247, -252, -8,
	-9, -174, -261, -349, -350, -158, -155, -361, 294, -247,
	-247, 263, -194, -12, -8, -189, -195, -191, -8, -76,
	-92, -105, 63, 64, -107, 24, 38, 67, 65, 23,
	-362, 87, -362, -211, -362, 86, -36, -215, 85, 61,
	43, 92, 92, 86, 21, -190, -192, -116, 14, -250,
	4, -249, 25, -247, 92, 215, 100, 14, -156, 29,
	-155, -233, -233, 86, 301, -226, -264, -228, -227, 390,
	392, 147, -251, -247, 92, 31, 87, 86, -155, -268,
	-271, -273, -272, -274, -269, -270, 324, 325, 172, 328,
	330, 331, 332, 333, 334, 335, 336, 337, 338, 341,
	32, 253, 320, 321, 322, 323, 342, 343, 344, 345,
	346, 347, 348, 349, 307, 326, 461, 308, 309, 310,
	311, 312, 313, 315, 316, 317, 318, 319, -338, -335,
	85, 87, 86, -275, 85, -116, -108, 230, -335, 231,
	231, 231, -76, 429, -299, -299, -299, 261, 19, -44,
	-41, -325, 18, -40, -41, 223, 119, 120, 220, 85,
	-288, 85, -297, -338, -335, 85, 133, 236, 132, -296,
	-293, -296, -297, -335, -181, -335, 133, 133, -219, -247,
	-219, -219, 23, -219, 23, -219, 23, 94, -247, -219,
	23, -219, 23, -219, 23, -219, 23, -219, 23, 31,
	78, 79, 31, 81, 82, 83, -181, -181, -288, -223,
	-155, -335, 94, 94, 94, -299, -299, 94, 92, 92,
	92, -299, -299, 94, 92, -254, -252, 92, 92, -341,
	247, 291, 293, 94, 94, 94, 94, 31, 92, -342,
	31, 585, 584, 586, 587, 588, 92, 94, 31, 94,
	31, 94, -247, 85, -155, -114, 281, 218, 220, 223,
	76, 92, 295, 147, 44, 86, 233, 230, -335, -239,
	235, -239, -247, -253, -252, -245, 92, -116, -295, 14,
	157, -257, -257, -237, -155, -295, -257, -237, -155, -237,
	-237, -237, -237, -257, -257, -257, -237, -252, -252, -155,
	-155, -155, -155, -155, -155, -155, -262, -238, -237, 563,
	92, -231, 14, 76, -262, -262, -260, 304, 338, 557,
	558, 559, 86, 463, -148, -155, 563, 563, 563, 563,
	563, 563, -116, -116, -116, -116, 485, -172, 115, 139,
	116, 117, -130, -173, -177, -179, 99, 157, 141, 155,
	156, -121, -122, -121, -121, -121, -121, -121, -121, -121,
	-121, -121, -121, -121, -121, -121, -263, -335, 92, 172,
	-126, -125, 98, -358, -126, -102, -104, -116, -116, -335,
	-247, -102, -102, -116, -98, 24, 38, -183, -184, 143,
	-181, -362, -362, 94, 98, -247, -247, -91, -90, 411,
	412, 413, 414, 416, 417, 418, 421, 422, 426, 427,
	410, 428, 415, 420, 423, 424, 425, 419, 323, -116,
	-116, -116, -116, -116, -116, -83, -116, 126, 127, 128,
	-116, -116, -175, -174, -334, -333, -332, -116, -116, -116,
	-116, -116, -116, -116, -116, -116, -116, -116, -116, -116,
	-116, -116, -116, -116, -116, -116, -116, -116, -116, -116,
	-103, 24, 38, -102, -248, -253, -245, -102, -103, -103,
	-102, -102, 215, -211, -362, 86, -351, 392, 393, 561,
	-255, 266, -254, 25, -175, 92, 14, -217, 77, -247,
	-194, -194, 63, 64, 59, -102, -107, -362, -35, 25,
	-213, -247, 62, 92, -280, -223, 350, 351, -116, -116,
	86, -193, 27, 28, -155, -249, 163, -253, -155, -218,
	266, -155, -133, -135, -136, -137, -158, -180, -361, -138,
	481, 478, 14, -148, -149, -157, -252, -226, -228, 86,
	391, 393, 394, 76, 118, -116, -281, 171, -307, -306,
	-305, -288, -290, -291, -292, 87, -281, -284, 356, 355,
	-275, -275, -275, -275, -275, -280, -280, -280, -280, 85,
	85, -275, -275, -275, -275, -282, 85, -282, -282, -283,
	85, -283, -318, -116, -315, -314, -312, -313, 240, 101,
	554, 510, 463, 502, 544, 77, -310, -193, 94, -362,
	-114, -240, 235, -316, -313, -335, -335, -335, -240, -335,
	92, -335, 92, -335, 92, -87, -58, -1, 597, 598,
	599, 86, 19, -289, -288, -57, 291, -321, -322, 266,
	-317, -311, -297, 133, -296, -297, -297, -335, 86, 29,
	123, 123, 123, 123, 463, 220, 32, -288, -57, -263,
	233, -263, -263, 92, 92, -236, 593, -148, -110, 283,
	147, 272, 272, 230, 230, 285, -155, 296, 298, 297,
	295, 23, 284, 286, 288, 274, -155, -155, -239, 76,
	-150, -155, 26, -252, -155, -237, -237, -155, -237, -237,
	-155, -247, -94, 392, 86, 463, 22, -95, 22, -361,
	115, 116, 117, -173, -121, -122, -121, 138, 254, 86,
	-362, 25, 86, 77, -362, -362, -362, 86, 14, -102,
	-186, -184, 145, -116, -362, -362, -362, 86, 86, 14,
	-267, 25, -362, -362, -362, -362, -362, -185, -362, 14,
	86, 86, -362, -362, 86, 86, -362, 86, 86, 86,
	-331, 86, 86, 86, 86, -362, -362, -362, -362, 86,
	86, 86, 86, 86, 86, 86, 86, 86, 86, -362,
	-362, -102, -102, -361, 215, -362, -362, -362, -362, -362,
	-248, -350, 560, 393, -162, -161, -159, 74, 234, 75,
	-361, -254, -362, -126, 89, -214, 89, -213, -167, -247,
	94, 98, -196, -132, -134, 14, -107, -179, 87, 86,
	-280, -200, -205, -234, -247, 92, 172, -192, 215, -163,
	15, -166, 32, 57, -11, -361, -361, 32, 86, -151,
	-153, -152, -154, 66, 70, 72, 67, 68, 69, 73,
	-258, 25, -133, -9, -8, -361, -361, -361, -155, -148,
	-363, 14, 77, -363, 86, 215, -227, -229, 395, 392,
	398, -335, 92, -86, 86, -305, -292, -197, -111, 40,
	-285, 357, -280, -280, -287, 92, -287, 94, 94, 87,
	-47, -42, -43, 33, 80, -312, -299, 92, 39, -299,
	-299, -247, 87, -193, -110, -155, 139, 76, -316, -316,
	-316, -252, -2, 596, 602, 133, 85, 360, 18, -213,
	86, 87, -182, 292, 87, -88, -247, 87, 85, -297,
	-297, -247, -361, 230, 31, 31, -57, -182, -281, -335,
	595, 594, 87, 232, 290, -115, 406, -112, 92, 88,
	-155, -155, -155, -155, -155, 223, 220, 275, 233, -148,
	-155, 86, -81, 249, 244, -257, -257, 33, -155, 392,
	572, 570, -116, 138, 254, -130, -122, -104, 460, -265,
	172, 324, 253, 322, 318, 338, 329, 355, 320, 356,
	317, 316, 315, -265, -263, -116, -116, -189, 146, -116,
	144, -116, -116, -116, -362, 172, 324, 14, -116, -116,
	-116, -332, -116, -116, -116, -330, -329, -126, -181, -362,
	-330, -116, -116, -329, -329, -333, -333, -333, -333, -333,
	-174, -174, -174, -174, -362, -362, -103, -248, -159, -293,
	-293, -293, -219, 86, -230, 22, 14, 57, 57, -132,
	-163, -133, -107, -247, -203, 556, -208, 46, -206, -207,
	47, -204, 48, 56, 163, -194, -116, -220, 76, -221,
	-225, -181, -176, -178, -177, -361, -212, -362, -247, -219,
	-221, -135, -136, -136, -135, -136, 66, 66, 66, 71,
	66, 71, 66, -152, -252, -362, -362, -9, -9, -116,
	-255, 77, -133, -133, -157, -252, 163, 392, 396, 397,
	-305, -357, 115, 139, 31, 76, 353, 101, -355, 171,
	498, 549, 554, 510, 502, 544, -356, 236, 132, 133,
	248, 25, 41, 87, 86, 87, 86, 87, 86, -241,
	501, 139, -43, -42, -299, -299, 94, -335, 92, 92,
	232, 26, -155, 76, 76, 76, -89, 600, 94, 85,
	-3, 80, -116, 85, 19, -288, -181, -323, -276, -324,
	-277, -278, -5, -6, -300, 57, 101, -61, 44, 231,
	580, 581, 123, 593, -315, -213, -319, -321, -155, -118,
	-361, -117, -119, -123, 161, 162, -182, -155, -109, 281,
	289, 85, -113, 89, -337, 77, 272, 353, 272, -155,
	-81, -47, -155, -237, -237, 33, -335, -362, -130, -122,
	-361, -362, -275, -275, -275, -283, -275, 312, -275, 312,
	-275, -362, -362, 86, -362, 22, -362, -93, 435, -116,
	86, 86, -362, 85, 85, -116, -362, -362, -362, -331,
	86, -362, 86, -362, 86, -266, 555, -362, -362, -362,
	-362, -362, -362, -362, -362, -362, -362, -362, -160, 22,
	-160, -160, -362, 89, -155, -163, -187, 16, -200, 51,
	330, -210, -209, 55, 47, -207, 19, 49, 19, 30,
	-220, 86, 147, 86, -362, -362, 86, 57, 215, -362,
	-163, -146, -145, 76, 77, -147, 76, -145, 66, 66,
	-215, -362, -362, 86, -218, -133, -163, -163, 215, 115,
	-361, -120, -129, -118, 12, 92, 92, -335, -354, 584,
	585, 31, 94, -299, -299, 133, 133, -155, 85, -280,
	92, -280, 94, 94, 501, 31, 81, 82, 83, 31,
	78, 79, -155, -155, -155, -155, -320, 85, 19, -116,
	85, 147, 87, -213, -213, 268, 157, -299, 578, 274,
	274, -299, -299, -299, 87, -362, 86, -286, 463, 466,
	-116, -124, -124, -215, 87, -328, 463, -336, -247, -247,
	-247, -247, -121, -280, -116, -116, -194, 92, -116, -116,
	94, 94, -362, -362, -330, -329, -116, -362, -143, -142,
	-144, 564, 115, 31, -265, -361, 66, 18, 16, -361,
	-361, -255, -187, -188, 17, 19, -201, 53, -199, 52,
	-199, -209, 19, 19, 92, 19, 92, 133, -225, -116,
	-178, 57, -11, -247, -176, -247, -189, -116, 85, -116,
	-126, -163, -163, -116, -169, 438, 104, 106, 105, 439,
	440, 441, 339, 340, 442, 443, 444, 107, 108, 109,
	110, 111, 112, 113, 445, 448, 446, 449, 450, 451,
	456, 457, 452, 453, 454, 455, 458, 92, 92, 85,
	-116, 87, 87, -215, -319, -58, 87, -213, 94, 87,
	269, -177, -361, 92, -299, -299, -299, 94, 94, -254,
	-356, -321, 467, 467, -362, 25, -327, -326, -248, 85,
	77, -97, 157, 463, -362, -362, -362, -362, -362, 87,
	87, -362, -362, 86, -362, -142, -144, -362, 76, -126,
	-216, -362, -247, 236, 19, 19, -216, -216, -162, -188,
	-116, -174, -202, 54, 76, 118, 92, 92, 92, 12,
	-176, 215, -194, -213, -140, 360, -189, -362, -213, 87,
	25, 87, 602, 133, 87, -177, -96, -361, 265, -254,
	92, 92, -11, 86, 147, -213, -155, -362, 461, 73,
	464, -116, -362, 76, 473, 564, 86, -362, -362, -362,
	76, 118, -221, -247, 87, -362, -361, -194, 87, -198,
	-11, 85, -3, 265, -79, 463, -326, -304, -248, 92,
	94, 87, 62, 462, 465, -331, -247, 236, -255, -141,
	-139, -247, 516, -347, -346, 459, -357, -353, 115, 139,
	101, -355, 554, 510, 124, 125, -79, -116, 85, -362,
	-80, 280, 560, -337, 62, -362, -362, 86, 22, -268,
	-60, 527, -344, -345, 76, -348, 366, 526, 547, 115,
	92, 87, -213, 241, -328, 463, -139, 523, -281, -126,
	-345, 76, -344, 76, 13, 12, -4, 601, 87, 282,
	464, -59, 26, -140, -343, 249, 244, 247, 32, -343,
	94, -4, 465, 527, 243, 31, 115, -126, -143, -142,
	-142,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 788,
	788, 788, 0, 788, 0, 0, 788, -2, -2, 788,
	1274, 0, 788, 0, 0, -2, 720, 722, 0, 724,
	-2, 0, 0, 733, 1772, 1772, 783, 0, 0, 0,
	0, 0, 788, 788, 788, 788, 1135, 48, 788, 0,
	83, 84, 739, 740, 741, 63, 0, 1770, 1, 3,
	69, 73, 0, 0, 0, 56, 1144, 0, 76, 0,
	0, 792, 0, 790, 0, 1257, 788, 788, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 149,
	0, 154, 548, 488, 531, 486, 517, -2, 479, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 491, 370, 370, 0, 0, -2, 479, 479, 479,
	0, 0, 0, 514, 1259, 431, 370, 370, 370, 0,
	370, 370, 370, 370, 0, 0, 370, 370, 370, 370,
	370, 370, 370, 370, 370, 370, 370, 370, 370, 370,
	370, 370, 370, 1161, 153, 1275, 1272, 1273, 38, 39,
	40, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433,
	1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443,
	1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453,
	1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463,
	1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473,
	1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483,
	1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503,
	1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513,
	1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523,
	1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533,
	1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543,
	1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553,
	1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563,
	1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573,
	1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583,
	1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593,
	1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603,
	1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613,
	1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623,
	1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633,
	1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643,
	1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653,
	1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663,
	1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673,
	1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683,
	1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693,
	1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703,
	1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713,
	1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723,
	1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733,
	1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743,
	1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753,
	1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763,
	1764, 1765, 1766, 1767, 1768, 1769, 0, 1251, 0, 648,
	889, 0, 709, 709, 0, 709, 709, 709, 709, 0,
	0, 0, 660, 0, 0, 0, 0, 706, 0, 676,
	677, 0, 706, 0, 712, 0, 687, 709, 709, 690,
	1773, 0, 1773, 1773, 1242, 0, 703, 701, 715, 716,
	719, 723, 0, 728, 731, 1268, 1269, 0, 746, 47,
	1511, 738, 751, 752, 0, 784, 785, 43, 986, 0,
	911, 916, 927, 940, 941, 942, 943, 944, 946, 947,
	0, 0, 0, 0, 952, 953, 0, 0, 0, 0,
	0, 967, 0, 0, 0, 0, 0, 1116, 0, 1079,
	1079, 1003, 1079, 1081, 1081, 0, 0, 0, 1769, 1551,
	1559, 1560, 1582, 1667, 1715, 1555, 1556, 1537, 1549, 1552,
	1540, 1541, 1543, 1545, 1550, 1557, 1563, 1542, 1562, 1561,
	0, 1538, 1539, 1544, 1554, 1558, 1546, 1547, 1548, 1553,
	1564, 1125, 0, 0, 0, 0, 0, 0, 272, 273,
	985, 1231, 1081, 1081, 1081, 1081, 1081, -2, -2, 219,
	220, 221, 222, 223, 224, 225, 0, 215, 0, 277,
	278, 274, 275, 276, 969, 970, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 243, 244,
	245, 246, 247, 248, 249, 250, 251, 252, 253, 254,
	255, 256, 257, 258, 259, 260, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 271, 1772, 0, 761,
	0, 0, 0, 0, 0, 1144, 0, 1136, 1135, 61,
	0, 788, -2, 0, 0, 0, 0, 45, 0, 50,
	848, 75, 74, 1183, 0, 0, 0, 57, 1145, 65,
	67, 1146, 0, 793, 794, 0, 824, 828, 0, 789,
	0, 0, 1258, 1257, 1257, 100, 0, 1711, 1235, -2,
	-2, 0, 0, 1270, 1271, 1244, -2, 1278, 1279, 1280,
	1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290,
	1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300,
	1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310,
	1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320,
	1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330,
	1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340,
	1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350,
	1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360,
	1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370,
	1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380,
	1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390,
	1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400,
	1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410,
	1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420,
	1421, 1422, 1423, 1424, -2, 0, 0, 165, 166, 0,
	41, 397, 0, 161, 0, 390, 336, 0, 1161, 0,
	0, 0, 0, 0, 788, 0, 1252, 142, 143, 150,
	151, 152, 370, 370, 370, 528, 0, 0, 153, 153,
	495, 496, 497, 0, 0, -2, 395, 0, 480, 0,
	0, 384, 384, 388, 386, 387, 0, 0, 0, 0,
	0, 0, 508, 0, 509, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 609, 0, 371, 0, 526, 527,
	432, 0, 0, 0, 0, 506, 507, 0, 0, 1260,
	1261, 0, 0, 0, 370, 370, 0, 0, 0, 0,
	370, 370, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	141, 1174, 0, 0, 0, -2, 0, 640, 0, 0,
	0, 1253, 1253, 0, 647, 0, 649, 650, 0, 0,
	651, 0, 706, 706, 704, 705, 653, 654, 655, 656,
	709, 0, 0, 379, 380, 381, 706, 709, 0, 709,
	709, 709, 709, 706, 706, 706, 709, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1773, 712, 709, 0,
	683, 0, 684, 685, 688, 689, 691, 1774, 1775, 1291,
	1773, 1773, 695, 699, 1243, 721, 729, 732, 749, 747,
	748, 750, 742, 743, 744, 745, 0, 763, 764, 769,
	0, 0, 0, 0, 775, 776, 777, 0, 0, 780,
	781, 782, 0, 0, 0, 0, 0, 909, 0, 0,
	975, 976, 977, 978, 979, 980, 981, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 948, 949, 950,
	951, 954, 0, 0, 0, 959, 960, 0, 0, 0,
	0, 0, 798, 0, 1117, 0, 1001, 0, 1002, 1004,
	1005, 0, 1006, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1263, 129, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 808,
	0, 0, 808, 808, 0, 0, 208, 209, 210, 211,
	212, 226, 227, 228, 229, 230, 279, 1125, 0, 985,
	0, 0, 44, 753, 754, 0, 872, 1263, 0, 0,
	804, 0, 55, 64, 66, 1144, 59, 1144, 0, 810,
	0, 0, -2, -2, 811, 817, 818, 819, 820, 821,
	52, 1771, 53, 0, 72, 0, 46, 0, 0, 0,
	0, 348, 1186, 0, 0, 1137, 1138, 1141, 0, 825,
	1593, 829, 0, 831, 832, 0, 791, 0, 98, 0,
	888, 0, 0, 0, 1711, 1241, 0, 102, 103, 0,
	0, 0, 354, 1246, 1247, 1248, -2, 377, 0, 354,
	343, 287, 288, 289, 336, 291, 336, 336, 336, 336,
	348, 348, 348, 348, 319, 320, 321, 322, 323, 0,
	0, 306, 336, 336, 336, 336, 326, 327, 328, 329,
	330, 331, 332, 333, 292, 293, 294, 295, 296, 297,
	298, 299, 300, 338, 338, 338, 340, 340, 0, 42,
	0, 358, 0, 1141, 0, 0, 1174, 1255, 1265, 0,
	0, 0, 1255, 120, 0, 0, 0, 529, 559, 489,
	518, 530, 0, 492, 493, -2, 0, 0, 479, 0,
	481, 0, 378, 0, -2, 0, 388, 0, 384, 388,
	385, 388, 376, 389, 510, 511, 512, 0, 589, 858,
	0, 0, 0, 0, 0, 595, 596, 597, 0, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 519,
	520, 521, 522, 523, 524, 525, 0, 0, 481, 0,
	515, 0, 433, 434, 435, 0, 0, 438, 439, 440,
	441, 0, 0, 444, 445, 446, 875, 876, 447, 448,
	473, 474, 475, 449, 450, 451, 452, 453, 454, 455,
	467, 468, 469, 470, 471, 472, 456, 457, 458, 459,
	460, 461, 464, 0, 135, 1165, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1253, 0, 0,
	0, 0, 807, 890, 1276, 1277, 710, 711, 0, 382,
	383, 709, 709, 657, 696, 0, 709, 661, 697, 662,
	664, 663, 665, 678, 679, 709, 668, 707, 708, 669,
	670, 671, 672, 673, 674, 675, 692, 680, 681, 682,
	713, 0, 717, 718, 693, 694, 0, 730, 734, 735,
	736, 737, 0, 0, 766, 94, 771, 772, 773, 774,
	786, 779, 987, 906, 907, 908, 0, 910, 913, 0,
	971, 973, 915, 917, 982, 983, 984, 0, 0, 0,
	0, 0, 921, 925, 928, 929, 930, 931, 932, 933,
	934, 935, 936, 937, 938, 939, 945, 1095, 1096, 1097,
	962, 280, 281, 0, 963, 0, 822, 0, 0, 0,
	961, 0, 0, 0, 0, 799, 800, 1123, 1120, 0,
	0, 1080, 1082, 0, 0, 0, 0, 0, 1058, 1059,
	1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069,
	1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1098,
	0, 0, 0, 0, 0, 1116, 0, 964, 965, 966,
	0, 0, 0, 1264, 0, 130, 131, 0, 0, 0,
	0, 0, 1052, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 809, 1126, 0, -2, 0, 0, 0,
	0, 0, 0, 0, 1230, 0, 756, 757, 759, 0,
	892, 0, 873, 0, 0, 762, 0, 803, 0, 806,
	58, 60, 815, 816, 0, 833, 812, 54, 49, 0,
	0, 850, 1184, 348, 1206, 0, 352, 353, 1147, 1148,
	0, 1140, 1142, 1143, 77, 830, 826, 0, 904, 0,
	0, 887, 0, 836, 838, 839, 840, 870, 0, 843,
	0, 0, 0, 0, 0, 96, 889, 1236, 101, 0,
	0, 106, 107, 1237, 1238, 1239, 1240, 0, 548, -2,
	428, 167, 169, 170, 171, 162, -2, 346, 344, 345,
	290, 348, 348, 313, 314, 315, 316, 317, 318, 0,
	0, 307, 308, 309, 310, 301, 0, 302, 303, 304,
	0, 305, 396, 0, 1149, 359, 360, 362, 370, 0,
	365, 366, 0, 370, 370, 0, 391, 392, 0, 1141,
	1165, 0, 0, 0, 1266, 1265, 1265, 1265, 0, 155,
	156, 157, 158, 159, 160, 584, 0, 0, 560, 582,
	583, 153, 0, 0, 163, 483, 482, 0, 616, 0,
	394, 0, 0, 388, 388, 373, 374, 513, 0, 0,
	591, 592, 593, 594, 0, 0, 0, 481, 483, 354,
	0, 436, 437, 442, 443, 462, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 543, 544, 545,
	546, 547, 1162, 1163, 1164, 0, 0, 641, 0, 0,
	420, 92, 1254, 646, 706, 667, 698, 706, 659, 666,
	686, 726, 770, 0, 0, 0, 0, 778, 0, 0,
	914, 972, 974, 918, 0, 922, 926, 0, 0, 0,
	0, 0, 0, 0, 968, 992, 993, 0, 0, 1135,
	0, 1121, 0, 0, 1000, 1083, 1084, 0, 0, 0,
	0, 0, 1011, 1012, 1013, 1014, 1015, 0, 1017, 0,
	0, 0, 1021, 1022, 0, 0, 1023, 0, 0, 0,
	0, 0, 0, 0, 0, 1035, 1036, 1037, 1038, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1049,
	988, 0, 0, 808, 0, 1085, 1086, 1087, 1088, 1089,
	1126, 755, 758, 760, 846, 893, 894, 0, 0, 0,
	0, 874, 1262, 801, 802, 805, -2, 0, 0, 1128,
	0, 0, 833, 904, 834, 0, 813, 51, 849, 0,
	1188, 1187, 1200, 1213, 349, 350, 351, 1139, 0, 1144,
	0, 1224, 0, 0, 1216, 0, 0, 0, 0, 0,
	0, 0, 0, 877, 0, 0, 880, 0, 0, 0,
	0, 871, 0, 0, 0, 0, 0, 0, -2, 0,
	0, 90, 91, 0, 0, 0, 104, 105, 0, 0,
	111, 355, 356, 144, 153, 430, 168, 404, 0, 0,
	286, 347, 311, 312, 0, 334, 0, 0, 0, 423,
	116, 1153, 1152, 370, 370, 361, 0, 364, 0, 0,
	0, 1267, 337, 393, 0, 134, 0, 0, 0, 0,
	0, 140, 554, 0, 0, 561, 0, 0, 0, 487,
	0, 498, 499, 0, 588, -2, 637, 358, 0, 372,
	375, 859, 0, 0, 500, 0, 483, 504, 505, 516,
	465, 466, 463, 0, 0, 1175, 1176, 1181, 1179, 1180,
	121, 536, 538, 537, 541, 0, 0, 534, 0, 420,
	1149, 0, 645, 421, 422, 709, 709, 765, 95, 0,
	768, 0, 0, 0, 0, 919, 923, 823, 0, 0,
	336, 336, 1103, 336, 340, 1106, 336, 1108, 336, 1111,
	336, 1114, 1115, 0, 0, 0, 0, 1118, 999, 1124,
	0, 0, 0, 0, 1010, 0, 0, 0, 0, 0,
	0, 132, 133, 1052, 0, 0, 1054, 1056, 1057, 1027,
	1053, 0, 0, 1050, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 989, 990, 0, 1127, 895, 900,
	900, 900, 0, 0, 0, 1249, 1250, 1129, 1130, 904,
	1131, 835, 814, 851, 1206, 0, 1199, 0, -2, 1208,
	0, 0, 0, 1214, 827, 78, 905, 81, 0, 1224,
	1232, 0, 1215, 1226, 1228, 0, 0, 0, 1220, 0,
	904, 837, 866, 868, 0, 863, 878, 879, 881, 0,
	883, 0, 885, 886, 848, 842, 844, 0, 0, 0,
	98, 0, 904, 904, 97, 0, 891, 108, 109, 110,
	429, 172, 177, 0, 0, 0, 182, 0, 184, 0,
	0, 0, 189, 190, 370, 370, 405, 0, 283, 285,
	0, 0, 175, 348, 0, 348, 0, 341, 0, 406,
	424, 0, 1150, 1151, 0, 0, 363, 367, 368, 369,
	0, 1256, 136, 0, 0, 0, 557, 0, 585, 0,
	0, 0, 0, 0, 0, 164, 484, 617, 618, 619,
	620, 621, 622, 623, 624, 0, 370, 0, 0, 0,
	370, 370, 370, 629, 357, 0, 0, 613, 610, 501,
	0, 213, 214, 216, 0, 0, 503, 848, 1166, 1167,
	1168, 0, 1178, 1182, 124, 0, 0, 0, 0, 642,
	643, 644, 93, 652, 658, 767, 787, 912, 920, 924,
	0, 956, 1101, 348, 1104, 1105, 1107, 1109, 1110, 1112,
	1113, 957, 958, 0, 995, 0, 997, 1144, 0, 1122,
	0, 0, 1009, 0, 0, 0, 1018, 1019, 1020, 0,
	0, 1026, 0, 1028, 0, 0, 0, 1039, 1040, 1041,
	1042, 1043, 1044, 1045, 1046, 1047, 1048, 991, 0, 0,
	0, 0, 872, -2, 62, 1131, 1133, 0, 1193, 1191,
	1191, 1201, 1202, 0, 0, 1209, 0, 0, 0, 0,
	82, 0, 0, 0, 1229, 0, 0, 0, 0, 99,
	1135, 860, 867, 0, 0, 861, 0, 862, 882, 884,
	841, -2, 845, 0, 904, 904, 88, 89, 0, 178,
	0, 180, 206, 207, 0, 183, 185, 186, 187, 193,
	194, 195, 188, 0, 0, 282, 284, 0, 0, 324,
	335, 325, 0, 0, 425, 1154, 1155, 1156, 1157, 1158,
	1159, 1160, 848, 137, 138, 139, 549, 0, 559, 0,
	0, 0, 552, 0, 490, 0, 0, 0, 370, 370,
	370, 0, 0, 0, 0, 590, 0, 598, 0, 0,
	0, 217, 218, 0, 1177, 535, 0, 122, 123, 0,
	0, 540, 1090, 1102, 0, 0, 0, 1119, 0, 0,
	0, 0, 1016, 1024, 0, 1055, 0, 1031, 0, 0,
	0, 579, 580, 0, 1051, 0, 901, 0, 0, 0,
	0, 892, 1133, 80, 0, 0, 1196, 0, 1189, 1192,
	1190, 1203, 0, 0, 1210, 0, 1212, 0, 1233, 1234,
	1227, 0, 1219, 1222, 1218, 1221, 1144, 864, 0, 869,
	0, 1135, 87, 0, 181, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 192, 0,
	0, 339, 342, 0, 0, 0, 550, 0, 562, 553,
	0, 627, 0, 631, 0, 0, 0, 634, 635, 636,
	398, 614, 611, 612, 502, 0, 125, 126, 0, 0,
	0, 0, 0, 0, 994, 996, 998, 1007, 1008, 1099,
	1100, 1025, 1029, 0, 1032, 0, 0, 1033, 0, 581,
	0, 897, 854, 855, 902, 903, 0, 0, 847, 79,
	1134, 1132, 1185, 0, 1194, 1195, 1204, 1205, 1211, 0,
	1217, 0, 85, 0, 0, 0, 1144, 179, 0, 198,
	0, 558, 0, 561, 551, 625, 626, 0, 638, 630,
	632, 633, 1169, 0, 0, 0, 542, 955, 0, 0,
	0, 1052, 1034, 0, 577, 578, 0, 896, 898, 899,
	1197, 1198, 1225, 1223, 865, 872, 0, 86, 411, 404,
	1169, 0, 0, 0, 532, 1171, 127, 128, 476, 477,
	478, 121, 1091, 0, 1094, 0, 856, 857, 563, 0,
	565, 0, -2, 399, 412, 0, 173, 199, 200, 0,
	0, 203, 204, 205, 196, 197, 117, 0, 0, 639,
	0, 1172, 1173, 124, 1092, 1030, 564, 0, 0, 354,
	0, 574, 400, 401, 0, 407, 408, 409, 410, 201,
	202, 586, 0, 0, 539, 0, 566, 567, 575, 0,
	402, 0, 403, 0, 0, 0, 555, 0, 586, 1170,
	0, 0, 576, 572, 413, 415, 416, 0, 0, 414,
	587, 556, 1093, 0, 417, 418, 419, 568, 569, 570,
	571,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 140, 3, 3, 3, 166, 158, 3,
	85, 87, 163, 161, 86, 162, 215, 164, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 603,
	148, 147, 149, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 168, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 136, 3, 169,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 137, 138, 139, 141, 142, 143, 144, 145, 146,
	150, 151, 152, 153, 154, 155, 156, 157, 159, 160,
	165, 167, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:521
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:526
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:527
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:531
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:567
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:573
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:577
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:581
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:586
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:590
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:596
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:602
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:608
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:612
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:617
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:621
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:627
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:631
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:637
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:643
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:647
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:651
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:674
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:680
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:685
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:691
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:698
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:704
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:711
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:715
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:721
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:725
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:729
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:733
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:737
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:743
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:747
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:752
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:756
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:762
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:766
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:771
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:777
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:783
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:790
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:796
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:804
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:808
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:816
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:828
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:840
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:844
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:850
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:856
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:860
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:864
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:868
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:873
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:874
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:878
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:882
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:888
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:892
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:898
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:902
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:907
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:911
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:917
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:923
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:927
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:933
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:937
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:943
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:947
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:951
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:957
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:961
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:965
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:969
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:975
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:979
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:985
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:991
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:998
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1007
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1011
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1018
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1022
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1027
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1031
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1037
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1042
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1047
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1053
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1058
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1064
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1069
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1073
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1079
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1083
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1089
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1095
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1102
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1109
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1114
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1119
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1124
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1131
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1138
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1149
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1156
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1160
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1166
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1170
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1174
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1178
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1182
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1186
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1192
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1196
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1202
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1206
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1212
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1216
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1222
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1226
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1232
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1236
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1242
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1246
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1252
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1257
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1262
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1266
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1271
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1275
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1279
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1290
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1299
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1308
		{
			yyVAL.str = ""
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1312
		{
			yyVAL.str = ""
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1321
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1325
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1331
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1337
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1342
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1347
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1352
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1357
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1362
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1367
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1371
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1376
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1380
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1385
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1391
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1397
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1401
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1407
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1411
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1415
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1421
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1425
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1430
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1434
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1439
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1445
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1451
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1456
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1461
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1467
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1475
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1482
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1486
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1490
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1494
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1498
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1509
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1516
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1520
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1526
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1530
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1534
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1538
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1542
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1546
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1550
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1555
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1559
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1563
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1567
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1571
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1578
		{
			yyVAL.str = Armscii8Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1582
		{
			yyVAL.str = ASCIIStr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1586
		{
			yyVAL.str = Big5Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1590
		{
			yyVAL.str = UBinaryStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1594
		{
			yyVAL.str = Cp1250Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1598
		{
			yyVAL.str = Cp1251Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1602
		{
			yyVAL.str = Cp1256Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1606
		{
			yyVAL.str = Cp1257Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1610
		{
			yyVAL.str = Cp850Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1614
		{
			yyVAL.str = Cp852Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1618
		{
			yyVAL.str = Cp866Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1622
		{
			yyVAL.str = Cp932Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1626
		{
			yyVAL.str = Dec8Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1630
		{
			yyVAL.str = EucjpmsStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1634
		{
			yyVAL.str = EuckrStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1638
		{
			yyVAL.str = Gb18030Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1642
		{
			yyVAL.str = Gb2312Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1646
		{
			yyVAL.str = GbkStr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1650
		{
			yyVAL.str = Geostd8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1654
		{
			yyVAL.str = GreekStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1658
		{
			yyVAL.str = HebrewStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1662
		{
			yyVAL.str = Hp8Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1666
		{
			yyVAL.str = Keybcs2Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1670
		{
			yyVAL.str = Koi8rStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1674
		{
			yyVAL.str = Koi8uStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1678
		{
			yyVAL.str = Latin1Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1682
		{
			yyVAL.str = Latin2Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1686
		{
			yyVAL.str = Latin5Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1690
		{
			yyVAL.str = Latin7Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1694
		{
			yyVAL.str = MacceStr
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1698
		{
			yyVAL.str = MacromanStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1702
		{
			yyVAL.str = SjisStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1706
		{
			yyVAL.str = Swe7Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1710
		{
			yyVAL.str = Tis620Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1714
		{
			yyVAL.str = Ucs2Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1718
		{
			yyVAL.str = UjisStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1722
		{
			yyVAL.str = Utf16Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1726
		{
			yyVAL.str = Utf16leStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1730
		{
			yyVAL.str = Utf32Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1734
		{
			yyVAL.str = Utf8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1738
		{
			yyVAL.str = Utf8mb4Str
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1748
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1752
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1756
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1762
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1766
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1770
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1776
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1780
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1787
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1791
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1795
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1799
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1805
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1816
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1821
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1827
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1831
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1835
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1839
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1843
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1847
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1851
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1855
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1859
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1865
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1871
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1877
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1883
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1889
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1897
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1901
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1905
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1909
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1913
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1919
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1923
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1927
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1931
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1935
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1939
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1943
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1947
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1951
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1955
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1959
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1963
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1967
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1971
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 325:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1976
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1982
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1986
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1990
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1994
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1998
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2002
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2006
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2010
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2016
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2021
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 336:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2026
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2030
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2035
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 339:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2039
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2047
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2051
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2057
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2065
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2069
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2073
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2078
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2082
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2087
		{
			yyVAL.str = ""
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2091
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2095
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2099
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2103
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2108
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2114
		{
			yyVAL.str = ""
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2118
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2122
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 357:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2129
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2134
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2138
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2144
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2148
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2154
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2158
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2163
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2167
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2171
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2175
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2179
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2183
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2189
		{
			yyVAL.str = ""
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2193
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 372:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2199
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2203
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2207
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2211
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2215
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2220
		{
			yyVAL.str = ""
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2224
		{
			yyVAL.str = yyDollar[2].str
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2230
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2234
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2238
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2245
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2249
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2254
		{
			yyVAL.str = "key"
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2258
		{
			yyVAL.str = yyDollar[1].str
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2264
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2268
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2273
		{
			yyVAL.str = ""
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2277
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2283
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2287
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2293
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2297
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2303
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2307
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2313
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2317
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2323
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2329
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2333
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2337
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2341
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2345
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2350
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2354
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2360
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2366
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2372
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2376
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2380
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2385
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2389
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2395
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2401
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2407
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2411
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2415
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2419
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2423
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2428
		{
			yyVAL.str = ""
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2432
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2436
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 423:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2441
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2445
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2449
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2454
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2458
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2464
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2468
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2472
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2478
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2482
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2488
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2492
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2496
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2500
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2504
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2508
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2512
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2516
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2520
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2524
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2528
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2532
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2536
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2540
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2544
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2548
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2552
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2556
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2560
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2564
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2568
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2572
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2576
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2580
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2584
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2588
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2592
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2596
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2600
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2604
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2608
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2613
		{
			yyVAL.str = ""
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2617
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2621
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2640
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2644
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2648
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2653
		{
			yyVAL.str = ""
		}
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2659
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2663
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2668
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2672
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2677
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2681
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2685
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2689
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2693
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 490:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2697
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2703
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2707
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2711
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2717
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2721
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2725
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2729
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2733
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2737
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2741
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2745
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2749
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2753
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2757
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2761
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2765
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2769
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2773
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2777
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2781
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2785
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2789
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2793
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2797
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2801
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2805
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2811
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2815
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2821
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2825
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2829
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2833
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2837
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2841
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2845
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2849
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2853
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2859
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2866
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2873
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2880
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2886
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2896
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2903
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2910
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2922
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2932
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2936
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2940
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2953
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2963
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2967
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2978
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2985
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2992
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2999
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3006
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3013
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3017
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3026
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3034
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3043
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3050
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3058
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3062
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3071
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3082
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3086
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3091
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3095
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3100
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3104
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3110
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3116
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3122
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3126
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3132
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3136
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3142
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3148
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3154
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3160
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3166
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3170
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3174
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3178
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3184
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3190
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3196
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3200
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3204
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3210
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3214
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3219
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3223
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3228
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3232
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3238
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3242
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3246
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3250
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3254
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3258
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3262
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3266
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3270
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3274
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3278
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3282
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3286
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3290
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3294
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3298
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3302
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3306
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3310
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3314
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3318
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3322
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3327
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3331
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3335
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3342
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3346
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3352
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3357
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3361
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3366
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3371
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3376
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3381
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3386
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3392
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3398
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3405
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3412
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3419
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3427
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3431
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3437
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3443
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3449
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3455
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3461
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3467
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3473
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3479
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3485
		{
			yyVAL.str = ""
		}
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3489
		{
			yyVAL.str = ""
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3495
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3501
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3505
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 643:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3511
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3515
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3524
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3528
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3534
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3538
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3543
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3549
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3553
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3557
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3561
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3565
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3569
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3573
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3577
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3581
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3585
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3589
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3593
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3597
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3601
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3605
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3609
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3613
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3617
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3621
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3625
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3629
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3633
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3637
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3641
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3645
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3649
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3653
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3657
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3661
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3665
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3669
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3673
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3677
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3681
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3685
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3689
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3693
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3697
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3701
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3705
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3709
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3716
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].colIdent.String())}}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3720
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3724
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()}}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3728
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3732
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3736
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3740
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3744
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3748
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3754
		{
			yyVAL.str = ""
		}
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3758
		{
			yyVAL.str = "extended "
		}
	case 702:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3764
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3768
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3774
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3778
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 706:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3784
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3788
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3792
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3798
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3802
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3806
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3812
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3816
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3822
		{
			yyVAL.empty = struct{}{}
		}
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3826
		{
			yyVAL.empty = struct{}{}
		}
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3830
		{
			yyVAL.empty = struct{}{}
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3836
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3840
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3846
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3850
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3854
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3860
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3864
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3870
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3876
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3880
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3885
		{
			yyVAL.empty = struct{}{}
		}
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3887
		{
			yyVAL.empty = struct{}{}
		}
	case 729:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3890
		{
			yyVAL.empty = struct{}{}
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3892
		{
			yyVAL.empty = struct{}{}
		}
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3897
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3903
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3908
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3912
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3916
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3920
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3924
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3928
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3934
		{
			yyVAL.str = yyDollar[1].str
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3938
		{
			yyVAL.str = yyDollar[1].str
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3942
		{
			yyVAL.str = yyDollar[1].str
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3948
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3952
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3956
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3960
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3965
		{
			yyVAL.str = ""
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3969
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3973
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3979
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3983
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3989
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3993
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3999
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4005
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4009
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4015
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4021
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4025
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4029
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4033
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4039
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4045
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4051
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4055
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4059
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4063
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4067
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4071
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4077
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4081
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4087
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4091
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4095
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4099
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4103
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4107
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4111
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4115
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4119
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4123
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4127
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4131
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4136
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4140
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4144
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4149
		{
			yyVAL.str = ""
		}
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4153
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4158
		{
			setAllowComments(yylex, true)
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4162
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4168
		{
			yyVAL.strs = nil
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4172
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4178
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4182
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4186
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4191
		{
			yyVAL.str = ""
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4195
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4199
		{
			yyVAL.str = SQLCacheStr
		}
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4204
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4208
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4212
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4218
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4222
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4234
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4239
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4243
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4249
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4253
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4258
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4262
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4267
		{
			yyVAL.strs = nil
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4271
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4275
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4279
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 814:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4283
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4289
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4293
		{
			yyVAL.str = SQLCacheStr
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4297
		{
			yyVAL.str = DistinctStr
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4301
		{
			yyVAL.str = DistinctStr
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4305
		{
			yyVAL.str = StraightJoinHint
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4309
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4313
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4319
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4323
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4329
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4333
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4337
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4341
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4346
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4350
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4354
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4361
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 833:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4366
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4370
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4376
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4382
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4386
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4396
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4400
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4404
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4408
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4414
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4418
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4424
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4428
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4433
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4437
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4443
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4447
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4453
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4457
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4463
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4467
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4471
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4475
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4481
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4485
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 860:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4498
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4502
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4506
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4510
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4516
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 865:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4518
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4522
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4524
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4528
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4530
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 870:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4533
		{
			yyVAL.empty = struct{}{}
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4535
		{
			yyVAL.empty = struct{}{}
		}
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4538
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4542
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4546
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4553
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4559
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4563
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4567
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4573
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4579
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4583
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4587
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4591
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4597
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4601
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4611
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4615
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4621
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4625
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4631
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4636
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4640
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4646
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4650
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 896:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4656
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4660
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4664
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4668
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4673
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4677
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4681
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4685
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4691
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4695
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4702
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4706
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4710
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4714
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4718
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4722
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4726
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4733
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4737
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4741
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4745
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4751
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4755
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4759
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4763
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4767
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4771
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4775
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4779
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4783
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4787
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4791
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4797
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4801
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4805
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4809
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4813
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4817
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4821
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4825
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4829
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4833
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4837
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4841
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4845
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4851
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4855
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4859
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4863
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4867
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4871
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4875
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4879
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4883
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4887
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4891
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4895
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4899
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4903
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4907
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4911
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4915
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4919
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4923
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4931
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4935
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4943
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4947
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4953
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4957
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4961
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4967
		{
			yyVAL.str = ""
		}
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4971
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4977
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4981
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4988
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4992
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4996
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5000
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5006
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5010
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5014
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5018
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5022
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5026
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5030
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5036
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5040
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5044
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5051
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5057
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5061
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 988:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5071
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5075
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5079
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5083
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5093
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5097
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5101
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5105
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5109
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5113
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5117
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5121
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5125
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5129
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5140
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5144
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5150
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5154
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5159
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5163
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5167
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5171
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5175
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5179
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5183
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5187
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5191
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5195
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5199
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5203
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5207
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5211
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5215
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5219
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5223
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5227
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5231
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5235
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5239
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5243
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5247
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5251
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5255
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5259
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5263
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5267
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5271
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5275
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5279
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5283
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5287
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5291
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5295
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5299
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5303
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5307
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5311
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5315
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5319
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5323
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5327
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5331
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5336
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5340
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5345
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5349
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5355
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5359
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5365
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5369
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5375
		{
		}
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5377
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5381
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5385
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5389
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5393
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5397
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5401
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5405
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5409
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5413
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5417
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5423
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5427
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5431
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5435
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5439
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5443
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5447
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5451
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5455
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5465
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5469
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5473
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5477
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5488
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5492
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5496
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5500
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5504
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5510
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5514
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5518
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5522
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5526
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5532
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5536
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5540
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1098:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5546
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5550
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5554
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5560
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5564
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5568
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5572
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5576
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5582
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5586
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5590
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5594
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5598
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5602
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5606
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5610
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5614
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5618
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5624
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5628
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5633
		{
			yyVAL.str = string("")
		}
	case 1119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5637
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5643
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5647
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1122:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5653
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5658
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5662
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5668
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5672
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5676
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5682
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5691
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5695
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5701
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5705
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5710
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5714
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5719
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5723
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5729
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5735
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5739
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5745
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5750
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5754
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5758
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5763
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5767
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5773
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5777
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5781
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5786
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5790
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5794
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5798
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5802
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5809
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5813
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5817
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5821
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5827
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5831
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5835
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5840
		{
			yyVAL.str = ""
		}
	case 1162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5844
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5848
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5852
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1165:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5857
		{
			yyVAL.str = ""
		}
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5861
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5867
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5871
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1169:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5876
		{
			yyVAL.str = ""
		}
	case 1170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5880
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1171:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5885
		{
			yyVAL.str = "cascaded"
		}
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5889
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5893
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1174:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5898
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5902
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5908
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5914
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5920
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5929
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5933
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1181:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5938
		{
			yyVAL.str = ""
		}
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5942
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5948
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5952
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5958
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5962
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5966
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5971
		{
			yyVAL.str = ""
		}
	case 1189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5975
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5979
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1191:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5984
		{
			yyVAL.str = ""
		}
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5988
		{
			yyVAL.str = " header"
		}
	case 1193:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5993
		{
			yyVAL.str = ""
		}
	case 1194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5997
		{
			yyVAL.str = " manifest on"
		}
	case 1195:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6001
		{
			yyVAL.str = " manifest off"
		}
	case 1196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6006
		{
			yyVAL.str = ""
		}
	case 1197:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6010
		{
			yyVAL.str = " overwrite on"
		}
	case 1198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6014
		{
			yyVAL.str = " overwrite off"
		}
	case 1199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6020
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6025
		{
			yyVAL.str = ""
		}
	case 1201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6029
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6035
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6039
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6045
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6049
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1206:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6054
		{
			yyVAL.str = ""
		}
	case 1207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6058
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6064
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6068
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1210:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6074
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6078
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1212:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6082
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1213:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6087
		{
			yyVAL.str = ""
		}
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6091
		{
			yyVAL.str = " optionally"
		}
	case 1215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6104
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6108
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6112
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6116
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6120
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6126
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6130
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6134
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1223:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6138
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1224:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6143
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6147
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6153
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6157
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6163
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6167
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6173
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6178
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6188
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6192
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1234:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6198
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6204
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6208
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6214
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6218
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6222
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6226
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6230
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6238
		{
			yyVAL.str = "charset"
		}
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6248
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6252
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6256
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6265
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6267
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6270
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6272
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6275
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6277
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6280
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6282
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6285
		{
			yyVAL.empty = struct{}{}
		}
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6287
		{
			yyVAL.empty = struct{}{}
		}
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6289
		{
			yyVAL.empty = struct{}{}
		}
	case 1262:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6293
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6298
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6302
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6307
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6309
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6313
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6319
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6323
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6330
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6336
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6340
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1274:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6346
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6350
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6357
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6874
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6883
		{
			decNesting(yylex)
		}
	case 1772:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6888
		{
			skipToEnd(yylex)
		}
	case 1773:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6893
		{
			skipToEnd(yylex)
		}
	case 1774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6897
		{
			skipToEnd(yylex)
		}
	case 1775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6901
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
