// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const KEY = 57371
const DEFAULT = 57372
const SET = 57373
const LOCK = 57374
const UNLOCK = 57375
const KEYS = 57376
const DO = 57377
const CALL = 57378
const DISTINCTROW = 57379
const PARSER = 57380
const OUTFILE = 57381
const S3 = 57382
const DATA = 57383
const LOAD = 57384
const LINES = 57385
const TERMINATED = 57386
const ESCAPED = 57387
const ENCLOSED = 57388
const DUMPFILE = 57389
const CSV = 57390
const HEADER = 57391
const MANIFEST = 57392
const OVERWRITE = 57393
const STARTING = 57394
const OPTIONALLY = 57395
const VALUES = 57396
const LAST_INSERT_ID = 57397
const NEXT = 57398
const VALUE = 57399
const SHARE = 57400
const MODE = 57401
const SQL_NO_CACHE = 57402
const SQL_CACHE = 57403
const SQL_CALC_FOUND_ROWS = 57404
const JOIN = 57405
const STRAIGHT_JOIN = 57406
const LEFT = 57407
const RIGHT = 57408
const INNER = 57409
const OUTER = 57410
const CROSS = 57411
const NATURAL = 57412
const USE = 57413
const FORCE = 57414
const ON = 57415
const USING = 57416
const INPLACE = 57417
const COPY = 57418
const ALGORITHM = 57419
const NONE = 57420
const SHARED = 57421
const EXCLUSIVE = 57422
const ID = 57423
const AT_ID = 57424
const AT_AT_ID = 57425
const HEX = 57426
const STRING = 57427
const INTEGRAL = 57428
const FLOAT = 57429
const HEXNUM = 57430
const VALUE_ARG = 57431
const LIST_ARG = 57432
const COMMENT = 57433
const COMMENT_KEYWORD = 57434
const BIT_LITERAL = 57435
const COMPRESSION = 57436
const NULL = 57437
const TRUE = 57438
const FALSE = 57439
const OFF = 57440
const DISCARD = 57441
const IMPORT = 57442
const ENABLE = 57443
const DISABLE = 57444
const TABLESPACE = 57445
const OR = 57446
const XOR = 57447
const AND = 57448
const NOT = 57449
const BETWEEN = 57450
const CASE = 57451
const WHEN = 57452
const THEN = 57453
const ELSE = 57454
const END = 57455
const LE = 57456
const GE = 57457
const NE = 57458
const NULL_SAFE_EQUAL = 57459
const IS = 57460
const LIKE = 57461
const REGEXP = 57462
const IN = 57463
const SHIFT_LEFT = 57464
const SHIFT_RIGHT = 57465
const DIV = 57466
const MOD = 57467
const UNARY = 57468
const COLLATE = 57469
const BINARY = 57470
const UNDERSCORE_BINARY = 57471
const UNDERSCORE_UTF8MB4 = 57472
const UNDERSCORE_UTF8 = 57473
const UNDERSCORE_LATIN1 = 57474
const INTERVAL = 57475
const JSON_EXTRACT_OP = 57476
const JSON_UNQUOTE_EXTRACT_OP = 57477
const CREATE = 57478
const ALTER = 57479
const DROP = 57480
const RENAME = 57481
const ANALYZE = 57482
const ADD = 57483
const FLUSH = 57484
const CHANGE = 57485
const MODIFY = 57486
const REVERT = 57487
const SCHEMA = 57488
const TABLE = 57489
const INDEX = 57490
const VIEW = 57491
const TO = 57492
const IGNORE = 57493
const IF = 57494
const UNIQUE = 57495
const PRIMARY = 57496
const COLUMN = 57497
const SPATIAL = 57498
const FULLTEXT = 57499
const KEY_BLOCK_SIZE = 57500
const CHECK = 57501
const INDEXES = 57502
const ACTION = 57503
const CASCADE = 57504
const CONSTRAINT = 57505
const FOREIGN = 57506
const NO = 57507
const REFERENCES = 57508
const RESTRICT = 57509
const SHOW = 57510
const DESCRIBE = 57511
const EXPLAIN = 57512
const DATE = 57513
const ESCAPE = 57514
const REPAIR = 57515
const OPTIMIZE = 57516
const TRUNCATE = 57517
const COALESCE = 57518
const EXCHANGE = 57519
const REBUILD = 57520
const PARTITIONING = 57521
const REMOVE = 57522
const MAXVALUE = 57523
const PARTITION = 57524
const REORGANIZE = 57525
const LESS = 57526
const THAN = 57527
const PROCEDURE = 57528
const TRIGGER = 57529
const VINDEX = 57530
const VINDEXES = 57531
const DIRECTORY = 57532
const NAME = 57533
const UPGRADE = 57534
const STATUS = 57535
const VARIABLES = 57536
const WARNINGS = 57537
const CASCADED = 57538
const DEFINER = 57539
const OPTION = 57540
const SQL = 57541
const UNDEFINED = 57542
const SEQUENCE = 57543
const MERGE = 57544
const TEMPORARY = 57545
const TEMPTABLE = 57546
const INVOKER = 57547
const SECURITY = 57548
const FIRST = 57549
const AFTER = 57550
const LAST = 57551
const VITESS_MIGRATION = 57552
const CANCEL = 57553
const RETRY = 57554
const COMPLETE = 57555
const BEGIN = 57556
const START = 57557
const TRANSACTION = 57558
const COMMIT = 57559
const ROLLBACK = 57560
const SAVEPOINT = 57561
const RELEASE = 57562
const WORK = 57563
const BIT = 57564
const TINYINT = 57565
const SMALLINT = 57566
const MEDIUMINT = 57567
const INT = 57568
const INTEGER = 57569
const BIGINT = 57570
const INTNUM = 57571
const REAL = 57572
const DOUBLE = 57573
const FLOAT_TYPE = 57574
const DECIMAL = 57575
const NUMERIC = 57576
const TIME = 57577
const TIMESTAMP = 57578
const DATETIME = 57579
const YEAR = 57580
const CHAR = 57581
const VARCHAR = 57582
const BOOL = 57583
const CHARACTER = 57584
const VARBINARY = 57585
const NCHAR = 57586
const TEXT = 57587
const TINYTEXT = 57588
const MEDIUMTEXT = 57589
const LONGTEXT = 57590
const BLOB = 57591
const TINYBLOB = 57592
const MEDIUMBLOB = 57593
const LONGBLOB = 57594
const JSON = 57595
const ENUM = 57596
const GEOMETRY = 57597
const POINT = 57598
const LINESTRING = 57599
const POLYGON = 57600
const GEOMETRYCOLLECTION = 57601
const MULTIPOINT = 57602
const MULTILINESTRING = 57603
const MULTIPOLYGON = 57604
const NULLX = 57605
const AUTO_INCREMENT = 57606
const APPROXNUM = 57607
const SIGNED = 57608
const UNSIGNED = 57609
const ZEROFILL = 57610
const CODE = 57611
const COLLATION = 57612
const COLUMNS = 57613
const DATABASES = 57614
const ENGINES = 57615
const EVENT = 57616
const EXTENDED = 57617
const FIELDS = 57618
const FULL = 57619
const FUNCTION = 57620
const GTID_EXECUTED = 57621
const KEYSPACES = 57622
const OPEN = 57623
const PLUGINS = 57624
const PRIVILEGES = 57625
const PROCESSLIST = 57626
const SCHEMAS = 57627
const TABLES = 57628
const TRIGGERS = 57629
const USER = 57630
const VGTID_EXECUTED = 57631
const VITESS_KEYSPACES = 57632
const VITESS_METADATA = 57633
const VITESS_MIGRATIONS = 57634
const VITESS_SHARDS = 57635
const VITESS_TABLETS = 57636
const VSCHEMA = 57637
const NAMES = 57638
const CHARSET = 57639
const GLOBAL = 57640
const SESSION = 57641
const ISOLATION = 57642
const LEVEL = 57643
const READ = 57644
const WRITE = 57645
const ONLY = 57646
const REPEATABLE = 57647
const COMMITTED = 57648
const UNCOMMITTED = 57649
const SERIALIZABLE = 57650
const CURRENT_TIMESTAMP = 57651
const DATABASE = 57652
const CURRENT_DATE = 57653
const CURRENT_TIME = 57654
const LOCALTIME = 57655
const LOCALTIMESTAMP = 57656
const CURRENT_USER = 57657
const UTC_DATE = 57658
const UTC_TIME = 57659
const UTC_TIMESTAMP = 57660
const REPLACE = 57661
const CONVERT = 57662
const CAST = 57663
const SUBSTR = 57664
const SUBSTRING = 57665
const GROUP_CONCAT = 57666
const SEPARATOR = 57667
const TIMESTAMPADD = 57668
const TIMESTAMPDIFF = 57669
const MATCH = 57670
const AGAINST = 57671
const BOOLEAN = 57672
const LANGUAGE = 57673
const WITH = 57674
const QUERY = 57675
const EXPANSION = 57676
const WITHOUT = 57677
const VALIDATION = 57678
const UNUSED = 57679
const ARRAY = 57680
const CUME_DIST = 57681
const DESCRIPTION = 57682
const DENSE_RANK = 57683
const EMPTY = 57684
const EXCEPT = 57685
const FIRST_VALUE = 57686
const GROUPING = 57687
const GROUPS = 57688
const JSON_TABLE = 57689
const LAG = 57690
const LAST_VALUE = 57691
const LATERAL = 57692
const LEAD = 57693
const MEMBER = 57694
const NTH_VALUE = 57695
const NTILE = 57696
const OF = 57697
const OVER = 57698
const PERCENT_RANK = 57699
const RANK = 57700
const RECURSIVE = 57701
const ROW_NUMBER = 57702
const SYSTEM = 57703
const WINDOW = 57704
const ACTIVE = 57705
const ADMIN = 57706
const BUCKETS = 57707
const CLONE = 57708
const COMPONENT = 57709
const DEFINITION = 57710
const ENFORCED = 57711
const EXCLUDE = 57712
const FOLLOWING = 57713
const GEOMCOLLECTION = 57714
const GET_MASTER_PUBLIC_KEY = 57715
const HISTOGRAM = 57716
const HISTORY = 57717
const INACTIVE = 57718
const INVISIBLE = 57719
const LOCKED = 57720
const MASTER_COMPRESSION_ALGORITHMS = 57721
const MASTER_PUBLIC_KEY_PATH = 57722
const MASTER_TLS_CIPHERSUITES = 57723
const MASTER_ZSTD_COMPRESSION_LEVEL = 57724
const NESTED = 57725
const NETWORK_NAMESPACE = 57726
const NOWAIT = 57727
const NULLS = 57728
const OJ = 57729
const OLD = 57730
const OPTIONAL = 57731
const ORDINALITY = 57732
const ORGANIZATION = 57733
const OTHERS = 57734
const PATH = 57735
const PERSIST = 57736
const PERSIST_ONLY = 57737
const PRECEDING = 57738
const PRIVILEGE_CHECKS_USER = 57739
const PROCESS = 57740
const RANDOM = 57741
const REFERENCE = 57742
const REQUIRE_ROW_FORMAT = 57743
const RESOURCE = 57744
const RESPECT = 57745
const RESTART = 57746
const RETAIN = 57747
const REUSE = 57748
const ROLE = 57749
const SECONDARY = 57750
const SECONDARY_ENGINE = 57751
const SECONDARY_LOAD = 57752
const SECONDARY_UNLOAD = 57753
const SKIP = 57754
const SRID = 57755
const THREAD_PRIORITY = 57756
const TIES = 57757
const UNBOUNDED = 57758
const VCPU = 57759
const VISIBLE = 57760
const FORMAT = 57761
const TREE = 57762
const VITESS = 57763
const TRADITIONAL = 57764
const LOCAL = 57765
const LOW_PRIORITY = 57766
const NO_WRITE_TO_BINLOG = 57767
const LOGS = 57768
const ERROR = 57769
const GENERAL = 57770
const HOSTS = 57771
const OPTIMIZER_COSTS = 57772
const USER_RESOURCES = 57773
const SLOW = 57774
const CHANNEL = 57775
const RELAY = 57776
const EXPORT = 57777
const AVG_ROW_LENGTH = 57778
const CONNECTION = 57779
const CHECKSUM = 57780
const DELAY_KEY_WRITE = 57781
const ENCRYPTION = 57782
const ENGINE = 57783
const INSERT_METHOD = 57784
const MAX_ROWS = 57785
const MIN_ROWS = 57786
const PACK_KEYS = 57787
const PASSWORD = 57788
const FIXED = 57789
const DYNAMIC = 57790
const COMPRESSED = 57791
const REDUNDANT = 57792
const COMPACT = 57793
const ROW_FORMAT = 57794
const STATS_AUTO_RECALC = 57795
const STATS_PERSISTENT = 57796
const STATS_SAMPLE_PAGES = 57797
const STORAGE = 57798
const MEMORY = 57799
const DISK = 57800

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 45,
	1, 112,
	476, 112,
	-2, 118,
	-1, 46,
	143, 118,
	259, 118,
	314, 118,
	-2, 326,
	-1, 53,
	34, 474,
	165, 474,
	177, 474,
	210, 488,
	211, 488,
	-2, 476,
	-1, 58,
	167, 498,
	-2, 496,
	-1, 84,
	56, 566,
	-2, 574,
	-1, 97,
	164, 936,
	-2, 91,
	-1, 99,
	1, 113,
	476, 113,
	-2, 118,
	-1, 109,
	170, 231,
	171, 231,
	-2, 320,
	-1, 128,
	143, 118,
	259, 118,
	314, 118,
	-2, 335,
	-1, 563,
	150, 957,
	-2, 953,
	-1, 564,
	150, 958,
	-2, 954,
	-1, 583,
	56, 567,
	-2, 579,
	-1, 584,
	56, 568,
	-2, 580,
	-1, 605,
	118, 1302,
	-2, 84,
	-1, 606,
	118, 1183,
	-2, 85,
	-1, 612,
	118, 1234,
	-2, 930,
	-1, 750,
	118, 1120,
	-2, 927,
	-1, 786,
	176, 38,
	181, 38,
	-2, 242,
	-1, 863,
	1, 373,
	476, 373,
	-2, 118,
	-1, 1104,
	1, 269,
	476, 269,
	-2, 118,
	-1, 1180,
	170, 231,
	171, 231,
	-2, 320,
	-1, 1189,
	176, 39,
	181, 39,
	-2, 243,
	-1, 1397,
	150, 962,
	-2, 956,
	-1, 1490,
	74, 66,
	82, 66,
	-2, 70,
	-1, 1511,
	1, 270,
	476, 270,
	-2, 118,
	-1, 1934,
	5, 823,
	18, 823,
	20, 823,
	32, 823,
	83, 823,
	-2, 606,
	-1, 2159,
	46, 898,
	-2, 892,
}

const yyPrivate = 57344

const yyLast = 28077

var yyAct = [...]int{
	563, 2253, 2244, 2084, 2199, 2186, 2137, 1991, 1727, 2212,
	2109, 506, 83, 3, 1434, 1694, 1576, 1508, 1811, 2160,
	2081, 1915, 1005, 521, 1728, 1911, 1914, 1526, 1541, 1052,
	1791, 576, 1854, 1059, 1561, 1546, 753, 535, 1815, 816,
	504, 1487, 1792, 1926, 501, 1793, 903, 1873, 1086, 165,
	1391, 1654, 165, 1295, 469, 165, 1574, 874, 923, 610,
	485, 1714, 165, 1383, 1187, 1607, 123, 81, 1560, 1548,
	165, 1785, 781, 1096, 1469, 1089, 1476, 585, 1079, 1057,
	1205, 137, 1082, 1161, 1044, 1360, 1417, 1062, 497, 1436,
	33, 1292, 485, 1080, 941, 485, 165, 485, 784, 1558,
	760, 570, 1394, 508, 794, 1194, 1278, 757, 1069, 1537,
	1452, 1095, 761, 787, 782, 1093, 783, 79, 1492, 921,
	140, 100, 101, 106, 1179, 1021, 859, 8, 7, 6,
	1156, 78, 1527, 1834, 1833, 1300, 1605, 1018, 107, 492,
	1264, 1861, 1862, 1431, 1432, 2111, 1349, 1348, 1347, 1346,
	607, 167, 168, 169, 1345, 1344, 495, 1337, 496, 769,
	2226, 1692, 764, 2156, 1960, 818, 102, 754, 2060, 2133,
	571, 108, 2132, 820, 592, 596, 942, 2079, 832, 833,
	2080, 836, 837, 838, 839, 819, 444, 842, 843, 844,
	845, 846, 847, 848, 849, 850, 851, 852, 853, 854,
	855, 856, 2252, 493, 2209, 1644, 84, 604, 2247, 797,
	821, 1553, 2181, 2240, 942, 798, 2085, 1593, 2208, 2180,
	102, 775, 774, 1890, 611, 80, 2024, 1170, 822, 823,
	824, 1693, 1551, 1758, 1841, 776, 1757, 1940, 1840, 1759,
	1860, 829, 952, 86, 87, 88, 89, 90, 91, 1941,
	1942, 97, 1503, 1504, 162, 1642, 1097, 439, 1098, 35,
	1502, 161, 72, 39, 40, 1433, 773, 1493, 868, 869,
	167, 168, 169, 834, 473, 893, 567, 569, 881, 919,
	952, 835, 777, 882, 102, 566, 103, 881, 125, 898,
	899, 880, 882, 879, 161, 1775, 1520, 145, 483, 2146,
	967, 966, 976, 977, 969, 970, 971, 972, 973, 974,
	975, 968, 1550, 1993, 978, 894, 770, 887, 862, 103,
	2015, 2183, 858, 771, 1338, 1339, 1340, 2013, 135, 472,
	145, 1336, 948, 124, 71, 940, 487, 548, 1048, 554,
	555, 552, 553, 1816, 551, 550, 549, 481, 1618, 1616,
	1617, 142, 1284, 143, 556, 557, 1575, 1254, 112, 113,
	134, 133, 160, 1837, 1620, 1987, 1621, 2246, 1622, 1613,
	948, 1762, 773, 1988, 765, 900, 918, 1608, 1279, 768,
	896, 897, 767, 766, 142, 901, 143, 2227, 916, 1994,
	902, 895, 864, 888, 1623, 160, 1849, 473, 473, 1255,
	841, 1256, 840, 1995, 773, 857, 1610, 778, 2129, 2074,
	129, 110, 136, 117, 109, 1577, 130, 131, 1612, 2238,
	1470, 146, 814, 1614, 813, 812, 811, 810, 809, 771,
	772, 151, 118, 808, 807, 802, 805, 803, 1173, 165,
	1959, 165, 815, 1493, 165, 473, 121, 119, 114, 115,
	116, 120, 472, 472, 146, 2130, 111, 2259, 758, 1611,
	789, 758, 914, 2257, 151, 122, 790, 1293, 861, 758,
	485, 485, 485, 756, 1559, 947, 944, 945, 946, 951,
	953, 950, 1839, 949, 598, 1853, 1552, 1850, 485, 485,
	943, 1599, 1285, 910, 1289, 912, 2179, 891, 1193, 1192,
	472, 928, 934, 877, 825, 883, 884, 885, 886, 1967,
	915, 1836, 917, 947, 944, 945, 946, 951, 953, 950,
	2147, 949, 796, 1899, 1695, 1697, 920, 1874, 943, 806,
	804, 1898, 909, 911, 1643, 2184, 772, 138, 1897, 1168,
	1856, 1167, 1166, 1826, 1290, 1855, 1164, 1848, 443, 438,
	1847, 990, 991, 860, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1673, 2167, 2044, 165, 772, 2200,
	138, 1876, 99, 1595, 1266, 1265, 1267, 1268, 1269, 1772,
	1767, 1939, 1856, 1719, 1670, 1050, 796, 1855, 1283, 73,
	925, 926, 878, 132, 1662, 485, 1585, 1498, 165, 870,
	165, 165, 867, 485, 1049, 126, 1073, 988, 127, 485,
	1003, 2255, 1046, 1509, 2256, 872, 2254, 937, 935, 936,
	907, 1696, 968, 1768, 908, 978, 796, 1006, 890, 796,
	978, 1754, 831, 1878, 913, 1882, 1367, 1877, 796, 1875,
	892, 1078, 1448, 955, 1880, 1770, 796, 904, 1765, 1045,
	1365, 1366, 1364, 1879, 1301, 1332, 906, 94, 795, 958,
	1766, 607, 876, 1063, 441, 958, 1881, 1883, 1280, 2175,
	1281, 817, 1924, 1282, 488, 1024, 1026, 1609, 1029, 1031,
	1286, 1034, 568, 957, 955, 1061, 1020, 1023, 1025, 1027,
	1028, 1030, 1032, 1033, 167, 168, 169, 1594, 1385, 1099,
	958, 938, 95, 990, 991, 1042, 1892, 1418, 759, 139,
	144, 141, 147, 148, 149, 150, 152, 153, 154, 155,
	1773, 1771, 795, 990, 991, 156, 157, 158, 159, 789,
	792, 793, 1418, 758, 1680, 611, 863, 786, 790, 1804,
	1587, 1944, 139, 144, 141, 147, 148, 149, 150, 152,
	153, 154, 155, 165, 1386, 1587, 785, 1157, 156, 157,
	158, 159, 795, 905, 1591, 795, 1165, 1592, 799, 789,
	1302, 799, 789, 1590, 795, 875, 830, 805, 800, 1589,
	1051, 800, 795, 803, 1066, 485, 597, 1189, 2059, 789,
	792, 793, 1094, 758, 71, 1198, 801, 786, 790, 1202,
	2260, 2058, 485, 485, 2241, 485, 1363, 485, 485, 1199,
	485, 485, 485, 485, 485, 485, 1171, 1172, 167, 168,
	169, 1185, 1780, 1273, 1965, 485, 956, 957, 955, 165,
	1238, 1769, 2242, 1789, 1233, 1234, 969, 970, 971, 972,
	973, 974, 975, 968, 958, 1251, 978, 1178, 1355, 1357,
	1358, 1453, 1454, 1788, 2021, 1556, 485, 1274, 165, 1197,
	1356, 1235, 971, 972, 973, 974, 975, 968, 2261, 1291,
	978, 1271, 2232, 165, 1241, 1242, 599, 600, 1781, 1259,
	1247, 1248, 1272, 1207, 602, 1208, 1258, 1210, 1212, 165,
	1163, 1216, 1218, 1220, 1222, 1224, 165, 1195, 1195, 1196,
	2233, 1261, 1901, 1176, 1175, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 485, 485, 485, 1188, 1174, 1257,
	956, 957, 955, 1647, 1648, 1649, 1303, 1304, 1894, 1249,
	1270, 1243, 1297, 956, 957, 955, 1240, 1239, 958, 1214,
	1308, 165, 167, 168, 169, 1305, 1761, 1315, 1316, 1317,
	1902, 958, 1309, 2236, 1311, 1312, 1313, 1314, 1236, 1990,
	1260, 1318, 1294, 967, 966, 976, 977, 969, 970, 971,
	972, 973, 974, 975, 968, 1333, 1169, 978, 2235, 1384,
	2234, 2220, 2218, 2100, 102, 775, 774, 2056, 1387, 1343,
	167, 168, 169, 1668, 1569, 2032, 167, 168, 169, 1361,
	1567, 1667, 485, 1947, 1903, 1359, 1798, 580, 1368, 1369,
	1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379,
	1380, 1381, 1382, 1406, 1409, 1307, 956, 957, 955, 1419,
	1450, 1388, 1389, 1328, 1329, 1330, 485, 485, 1786, 1638,
	1401, 167, 168, 169, 958, 1252, 1603, 165, 167, 168,
	169, 866, 2127, 871, 1602, 1442, 873, 1396, 1790, 1298,
	1262, 485, 1395, 1397, 1250, 1362, 1246, 1421, 165, 1245,
	1441, 485, 1669, 1244, 80, 165, 2126, 165, 1974, 2237,
	1006, 1443, 956, 957, 955, 165, 165, 1974, 2206, 1425,
	1426, 1455, 485, 1449, 1923, 485, 2083, 1488, 1974, 2173,
	958, 1974, 2168, 1974, 580, 1818, 485, 2077, 580, 1801,
	1402, 1403, 1974, 2075, 1408, 1411, 1412, 82, 956, 957,
	955, 1715, 1398, 1587, 580, 2042, 580, 1467, 1957, 1956,
	1953, 1954, 1395, 1397, 1491, 1517, 958, 1953, 1952, 2061,
	1424, 1463, 1513, 1427, 1428, 1461, 580, 1528, 1529, 1530,
	607, 35, 580, 607, 1493, 1835, 956, 957, 955, 1160,
	1820, 485, 1813, 1814, 1473, 580, 1494, 1562, 1563, 1564,
	954, 580, 1566, 1568, 958, 1160, 1159, 2039, 1516, 1465,
	1105, 1104, 2174, 1461, 1543, 485, 1512, 2062, 2063, 2064,
	1473, 485, 1198, 35, 1549, 1198, 1521, 1198, 1522, 1523,
	1524, 1525, 1912, 954, 1500, 1586, 1496, 1499, 1974, 1715,
	1077, 1923, 1955, 1088, 1533, 1534, 1535, 1536, 1722, 1588,
	1515, 1573, 1514, 1473, 611, 1501, 71, 611, 1495, 524,
	523, 526, 527, 528, 529, 485, 1497, 1384, 525, 1462,
	530, 1723, 1384, 1384, 967, 966, 976, 977, 969, 970,
	971, 972, 973, 974, 975, 968, 1580, 1685, 978, 1583,
	1472, 1584, 1539, 1540, 1544, 573, 580, 1494, 71, 1565,
	1557, 1596, 1555, 1554, 1587, 1748, 35, 165, 1923, 1684,
	1461, 1587, 797, 1493, 165, 1570, 1451, 594, 798, 165,
	165, 1579, 1597, 165, 1229, 165, 1544, 564, 1195, 1582,
	1598, 165, 1578, 1429, 1655, 1600, 1601, 1341, 165, 1461,
	1288, 1473, 967, 966, 976, 977, 969, 970, 971, 972,
	973, 974, 975, 968, 2116, 1606, 978, 1091, 780, 1495,
	779, 2198, 71, 2139, 2082, 165, 485, 1493, 2050, 1162,
	71, 1542, 1230, 1231, 1232, 2065, 166, 1989, 1821, 166,
	1538, 71, 166, 498, 1532, 1531, 1276, 486, 1190, 166,
	1186, 1633, 1634, 1158, 96, 1106, 1636, 166, 2027, 1794,
	1478, 1481, 1482, 1483, 1479, 1637, 1480, 1484, 1795, 862,
	1927, 1928, 1626, 1927, 1928, 1992, 1226, 2140, 1553, 486,
	2066, 2067, 486, 166, 486, 2229, 2249, 2245, 1972, 1971,
	1970, 1930, 1361, 1912, 2026, 1805, 1627, 1334, 1739, 1933,
	1651, 1652, 1653, 1740, 1795, 967, 966, 976, 977, 969,
	970, 971, 972, 973, 974, 975, 968, 1932, 1736, 978,
	165, 1227, 1228, 1664, 1737, 1735, 1641, 2207, 165, 1738,
	1904, 1237, 1478, 1481, 1482, 1483, 1479, 1704, 1480, 1484,
	1650, 967, 966, 976, 977, 969, 970, 971, 972, 973,
	974, 975, 968, 165, 1741, 978, 1482, 1483, 1362, 1060,
	1277, 2161, 2163, 1701, 165, 165, 165, 165, 165, 2043,
	2164, 2231, 1724, 1977, 1729, 1708, 165, 1713, 1712, 571,
	165, 2211, 2213, 165, 165, 1659, 1660, 165, 165, 165,
	1663, 1306, 1746, 1679, 1717, 2188, 2191, 1702, 1310, 2158,
	1760, 1287, 1045, 2187, 1691, 1703, 1677, 565, 1799, 1321,
	1322, 1323, 1324, 1325, 1326, 1327, 827, 1699, 1779, 826,
	1720, 1707, 2002, 1053, 1749, 1794, 1859, 927, 1751, 1828,
	1827, 1718, 1414, 2114, 1778, 1054, 1782, 1783, 1784, 1716,
	1776, 1777, 1730, 1088, 485, 1733, 103, 1415, 1297, 165,
	1949, 1742, 1948, 1581, 1204, 1747, 165, 1203, 1731, 1732,
	1191, 1734, 485, 1752, 2037, 1755, 1453, 1454, 485, 590,
	586, 1446, 1549, 1198, 1968, 1630, 1764, 1817, 485, 2169,
	1797, 2134, 1486, 1763, 1711, 587, 574, 575, 1619, 1646,
	1832, 577, 1710, 2219, 1787, 1715, 2217, 2216, 2192, 590,
	586, 165, 165, 165, 165, 165, 1831, 1796, 1064, 1065,
	589, 2190, 588, 1802, 2036, 587, 1973, 165, 165, 1571,
	578, 1806, 1807, 1808, 82, 2035, 1830, 1178, 1907, 1396,
	2251, 2250, 2251, 1674, 1823, 1397, 1671, 1822, 583, 584,
	589, 1074, 588, 1829, 1067, 2165, 1946, 1447, 573, 80,
	85, 77, 533, 485, 1, 456, 1430, 1043, 468, 1384,
	2243, 1420, 1263, 1253, 2086, 1851, 2136, 1980, 1547, 1857,
	1464, 788, 1858, 128, 1510, 1511, 2202, 1468, 93, 1471,
	751, 92, 791, 889, 1872, 1572, 2078, 1871, 1490, 485,
	1865, 1866, 1774, 1863, 1519, 1111, 1109, 1110, 1108, 1113,
	165, 1891, 1869, 1112, 1107, 1886, 1887, 1885, 1888, 1889,
	485, 1870, 484, 1335, 482, 1485, 485, 485, 163, 1895,
	1896, 1913, 1884, 1100, 1729, 1068, 166, 828, 166, 446,
	1958, 166, 1331, 1604, 452, 986, 1709, 1756, 608, 165,
	601, 1918, 1910, 2185, 609, 579, 2157, 755, 2159, 762,
	2110, 1916, 2162, 2155, 2230, 2210, 1518, 486, 486, 486,
	1445, 1056, 2034, 1906, 1678, 1015, 1416, 1931, 1870, 1900,
	1083, 507, 1440, 1354, 522, 486, 486, 519, 959, 1922,
	1936, 520, 1456, 1721, 1950, 1951, 960, 505, 499, 1075,
	1966, 1477, 1475, 1474, 1628, 1087, 165, 1921, 1929, 1935,
	1925, 1937, 1945, 1938, 485, 1081, 1460, 1838, 1986, 939,
	582, 494, 485, 763, 498, 1413, 2145, 165, 1976, 1645,
	2023, 581, 61, 1016, 1963, 1964, 1962, 165, 1961, 38,
	1979, 489, 1981, 2225, 1943, 930, 591, 32, 31, 30,
	1975, 165, 161, 29, 165, 1549, 1978, 28, 23, 22,
	21, 20, 19, 2003, 166, 1055, 1058, 25, 1984, 1983,
	18, 17, 16, 98, 48, 45, 43, 103, 105, 104,
	46, 42, 865, 1998, 1997, 27, 26, 15, 145, 1088,
	14, 13, 486, 12, 11, 166, 1615, 166, 166, 10,
	486, 1624, 1625, 2006, 9, 1629, 486, 2011, 5, 2004,
	4, 933, 24, 1632, 1004, 2000, 2001, 2, 0, 0,
	1635, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2033, 0, 0, 0, 0, 1729, 0, 0, 0, 2038,
	0, 0, 142, 0, 143, 0, 0, 1639, 2047, 0,
	0, 0, 0, 160, 0, 0, 2046, 0, 2008, 2009,
	0, 2010, 0, 0, 2012, 0, 2014, 0, 165, 2052,
	2054, 165, 165, 165, 485, 485, 0, 0, 0, 0,
	2055, 0, 2057, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2072, 2087, 485, 485, 485, 0, 2053, 976,
	977, 969, 970, 971, 972, 973, 974, 975, 968, 0,
	2093, 978, 146, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 151, 0, 0, 0, 0, 0, 0, 485,
	485, 485, 165, 0, 0, 0, 2091, 2092, 0, 0,
	0, 0, 0, 485, 0, 485, 2107, 2103, 2105, 2106,
	166, 485, 0, 0, 2117, 2099, 0, 0, 0, 2113,
	2108, 2115, 0, 2094, 2095, 2096, 2097, 2098, 0, 2122,
	2119, 2101, 2102, 2124, 0, 2125, 0, 1916, 2121, 0,
	0, 1916, 486, 485, 2123, 0, 485, 0, 0, 2128,
	0, 0, 0, 0, 2131, 0, 0, 0, 0, 486,
	486, 2135, 486, 0, 486, 486, 1750, 486, 486, 486,
	486, 486, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 486, 2154, 0, 0, 166, 0, 138, 0,
	0, 165, 609, 609, 609, 0, 0, 0, 0, 0,
	485, 165, 0, 2166, 2138, 0, 0, 2172, 0, 0,
	929, 931, 0, 486, 1916, 166, 0, 0, 2176, 0,
	0, 0, 0, 2020, 1299, 0, 2182, 0, 485, 0,
	166, 1803, 0, 0, 2193, 485, 485, 1729, 0, 2189,
	0, 2201, 2195, 0, 0, 0, 166, 0, 0, 0,
	0, 2215, 0, 166, 2214, 0, 0, 0, 0, 485,
	2221, 0, 166, 166, 166, 166, 166, 166, 166, 166,
	166, 486, 486, 486, 2228, 2196, 0, 2224, 0, 0,
	0, 0, 0, 1842, 1843, 1844, 1845, 1846, 0, 0,
	0, 0, 2239, 2138, 2203, 0, 2019, 0, 166, 1088,
	1852, 0, 1350, 1351, 1352, 1353, 2248, 0, 0, 0,
	0, 0, 0, 2258, 0, 0, 0, 1071, 0, 0,
	0, 0, 0, 0, 0, 609, 0, 0, 0, 0,
	0, 1101, 967, 966, 976, 977, 969, 970, 971, 972,
	973, 974, 975, 968, 0, 0, 978, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1404, 1405, 486,
	139, 144, 141, 147, 148, 149, 150, 152, 153, 154,
	155, 0, 2018, 0, 0, 0, 156, 157, 158, 159,
	0, 0, 1905, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 486, 486, 498, 0, 0, 0, 0,
	167, 168, 169, 0, 166, 967, 966, 976, 977, 969,
	970, 971, 972, 973, 974, 975, 968, 0, 486, 978,
	0, 0, 0, 0, 0, 166, 0, 0, 486, 0,
	0, 0, 166, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 166, 166, 0, 0, 0, 1507, 0, 486,
	0, 0, 486, 0, 0, 0, 0, 0, 0, 0,
	461, 0, 0, 486, 0, 0, 0, 0, 0, 460,
	0, 0, 0, 0, 0, 0, 0, 0, 1969, 0,
	458, 967, 966, 976, 977, 969, 970, 971, 972, 973,
	974, 975, 968, 0, 0, 978, 0, 0, 0, 1982,
	0, 0, 0, 0, 0, 0, 1545, 755, 0, 1985,
	0, 0, 0, 0, 0, 0, 0, 0, 486, 455,
	1200, 0, 0, 1996, 1206, 1206, 1999, 1206, 467, 1206,
	1206, 0, 1215, 1206, 1206, 1206, 1206, 1206, 0, 0,
	0, 962, 486, 965, 0, 1200, 1200, 755, 486, 979,
	980, 981, 982, 983, 984, 985, 0, 963, 964, 961,
	967, 966, 976, 977, 969, 970, 971, 972, 973, 974,
	975, 968, 0, 0, 978, 473, 0, 0, 1275, 967,
	966, 976, 977, 969, 970, 971, 972, 973, 974, 975,
	968, 0, 486, 978, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 445, 0, 447, 462, 0, 475, 0,
	474, 451, 0, 449, 453, 463, 454, 0, 448, 0,
	459, 0, 0, 450, 464, 465, 479, 478, 466, 0,
	472, 457, 476, 0, 166, 0, 609, 609, 609, 0,
	2068, 166, 0, 2069, 2070, 2071, 166, 166, 1864, 0,
	166, 0, 166, 0, 0, 0, 0, 0, 166, 0,
	0, 534, 0, 0, 0, 166, 0, 0, 967, 966,
	976, 977, 969, 970, 971, 972, 973, 974, 975, 968,
	0, 0, 978, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 166, 486, 966, 976, 977, 969, 970, 971,
	972, 973, 974, 975, 968, 0, 0, 978, 0, 0,
	164, 0, 0, 442, 0, 0, 480, 0, 0, 0,
	0, 0, 0, 442, 1390, 0, 609, 0, 0, 0,
	0, 442, 0, 0, 0, 0, 1399, 1400, 0, 0,
	1200, 0, 0, 0, 0, 0, 0, 0, 595, 595,
	0, 0, 0, 0, 0, 0, 477, 442, 1422, 1423,
	0, 0, 0, 0, 0, 0, 1681, 0, 0, 0,
	0, 0, 0, 0, 470, 0, 0, 0, 0, 0,
	0, 0, 1444, 1457, 0, 0, 0, 166, 0, 471,
	0, 0, 0, 1071, 0, 166, 609, 1705, 1706, 1058,
	0, 0, 0, 2171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2177, 609, 0, 0, 609, 0, 0,
	166, 0, 0, 0, 0, 0, 0, 0, 755, 0,
	0, 166, 166, 166, 166, 166, 0, 0, 0, 0,
	0, 0, 0, 166, 0, 0, 0, 166, 1656, 0,
	166, 166, 0, 0, 166, 166, 166, 0, 0, 0,
	0, 35, 36, 37, 72, 39, 40, 0, 967, 966,
	976, 977, 969, 970, 971, 972, 973, 974, 975, 968,
	0, 76, 978, 762, 0, 0, 41, 67, 68, 0,
	65, 69, 0, 0, 0, 0, 0, 66, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 755, 0, 0,
	0, 486, 0, 762, 0, 0, 166, 0, 0, 0,
	0, 0, 0, 166, 0, 0, 54, 0, 0, 486,
	0, 0, 0, 0, 0, 486, 71, 0, 0, 0,
	0, 0, 0, 0, 0, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 755, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 166, 166,
	166, 166, 166, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 166, 166, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 44, 47,
	50, 49, 52, 0, 64, 0, 0, 70, 0, 0,
	486, 0, 0, 0, 0, 0, 0, 0, 1893, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	53, 75, 74, 0, 0, 62, 63, 51, 0, 0,
	0, 0, 0, 0, 0, 0, 486, 0, 1640, 0,
	0, 0, 0, 1908, 0, 0, 0, 166, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 486, 0, 0,
	0, 0, 0, 486, 486, 0, 55, 56, 0, 57,
	58, 59, 60, 0, 0, 0, 0, 0, 0, 0,
	442, 0, 442, 0, 0, 442, 166, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1657,
	0, 0, 0, 1658, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1665, 1666, 0, 0, 0, 0,
	1672, 0, 0, 1675, 1676, 0, 0, 0, 0, 0,
	0, 1682, 0, 1683, 0, 0, 1686, 1687, 1688, 1689,
	1690, 0, 0, 166, 0, 0, 0, 0, 0, 0,
	0, 486, 1700, 0, 0, 0, 0, 0, 0, 486,
	0, 0, 0, 0, 166, 0, 0, 0, 0, 0,
	0, 73, 0, 0, 166, 1200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 166, 0,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 1744,
	1745, 0, 0, 0, 0, 0, 0, 0, 442, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2025, 0, 595, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 442,
	0, 442, 1090, 0, 0, 498, 0, 0, 0, 0,
	0, 0, 2048, 0, 0, 2049, 1800, 0, 2051, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1812, 0, 0, 0, 1200, 0,
	1819, 0, 0, 0, 0, 0, 0, 0, 609, 0,
	1824, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 166, 0, 0, 166, 166,
	166, 486, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 486, 486, 486, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2112, 498, 609, 486, 486, 486, 166,
	0, 1867, 1868, 0, 0, 0, 0, 0, 0, 0,
	486, 0, 486, 0, 0, 0, 0, 0, 486, 0,
	0, 0, 0, 0, 442, 0, 0, 0, 0, 0,
	0, 1206, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 536, 34, 0, 0, 0, 0, 0, 0,
	486, 0, 609, 486, 0, 1200, 0, 0, 1920, 1206,
	0, 0, 0, 0, 0, 0, 0, 1919, 0, 1201,
	0, 0, 0, 0, 0, 0, 0, 34, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1934, 0,
	0, 0, 0, 0, 1201, 1201, 0, 0, 166, 0,
	442, 0, 0, 0, 0, 0, 0, 486, 166, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 0, 0, 442,
	0, 0, 0, 0, 0, 486, 0, 0, 0, 0,
	0, 0, 486, 486, 1296, 0, 755, 0, 0, 1200,
	0, 0, 0, 0, 1812, 0, 0, 0, 0, 0,
	442, 0, 0, 0, 0, 0, 486, 442, 0, 0,
	0, 0, 0, 0, 0, 0, 1319, 1320, 442, 442,
	442, 442, 442, 442, 442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2005, 442, 0, 0, 2007, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2016, 2017, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2031, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1200, 0, 0, 2040,
	2041, 0, 0, 2045, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 595, 1296, 0, 0, 0, 595,
	595, 0, 0, 595, 595, 595, 0, 0, 0, 1201,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1812, 2073, 0, 595,
	595, 595, 595, 595, 0, 0, 0, 0, 1438, 0,
	0, 0, 2076, 0, 0, 0, 2088, 2089, 2090, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 442,
	0, 0, 0, 0, 0, 1296, 442, 0, 442, 0,
	0, 0, 0, 0, 0, 0, 442, 442, 0, 0,
	0, 1812, 1812, 1812, 0, 0, 0, 0, 0, 0,
	2104, 0, 0, 0, 0, 2118, 0, 2120, 0, 0,
	0, 0, 0, 1812, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1128, 0, 0, 1812, 0, 0, 609, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2141, 2142, 2143, 2144,
	0, 2148, 0, 2149, 2150, 2151, 0, 2152, 2153, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1812, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2178, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1200, 0,
	2194, 0, 0, 0, 0, 0, 0, 609, 609, 0,
	0, 0, 922, 922, 922, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1116, 0, 0, 0, 0,
	0, 1812, 34, 0, 0, 0, 0, 0, 2222, 2223,
	0, 0, 0, 0, 0, 987, 989, 0, 442, 0,
	0, 0, 0, 0, 0, 442, 0, 0, 0, 0,
	442, 442, 0, 0, 442, 0, 1631, 0, 0, 1129,
	0, 0, 442, 0, 0, 0, 1002, 0, 0, 442,
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 0, 1017,
	1019, 1022, 1022, 1022, 1019, 1022, 1022, 1019, 1022, 1035,
	1036, 1037, 1038, 1039, 1040, 1041, 442, 0, 0, 0,
	0, 1047, 0, 0, 0, 34, 0, 0, 0, 0,
	1142, 1145, 1146, 1147, 1148, 1149, 1150, 0, 1151, 1152,
	1153, 1154, 1155, 1130, 1131, 1132, 1133, 1114, 1115, 1143,
	0, 1117, 1084, 1118, 1119, 1120, 1121, 1122, 1123, 1124,
	1125, 1126, 1127, 1134, 1135, 1136, 1137, 1138, 1139, 1140,
	1141, 0, 0, 0, 595, 595, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 161, 0, 595, 0, 0, 0, 0,
	0, 0, 0, 0, 1810, 0, 0, 0, 0, 0,
	0, 442, 0, 0, 0, 0, 0, 0, 103, 1438,
	125, 0, 0, 0, 0, 0, 0, 0, 0, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 1144, 0,
	0, 0, 0, 595, 442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1201, 442, 442, 442, 442, 442,
	135, 0, 0, 0, 0, 124, 0, 1743, 0, 0,
	0, 442, 0, 0, 442, 442, 0, 0, 442, 1753,
	1296, 0, 0, 142, 0, 143, 0, 0, 0, 0,
	1181, 1182, 134, 133, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 161,
	442, 0, 129, 1183, 136, 0, 1180, 1809, 130, 131,
	1177, 0, 0, 146, 0, 0, 0, 1201, 0, 0,
	0, 0, 0, 151, 103, 0, 125, 1296, 0, 0,
	0, 0, 0, 0, 0, 145, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 442, 442, 442, 442, 442, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 135, 0, 442, 442,
	0, 124, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 142,
	0, 143, 0, 0, 0, 0, 1181, 1182, 134, 133,
	160, 0, 0, 595, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 922, 922, 922, 138,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 1183,
	136, 442, 1180, 0, 130, 131, 0, 0, 0, 146,
	0, 0, 0, 0, 1201, 0, 0, 0, 0, 151,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 132, 0, 0, 0, 0,
	442, 0, 0, 0, 0, 0, 0, 126, 0, 0,
	127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 442, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1201, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 442, 0,
	0, 0, 0, 0, 0, 138, 0, 0, 442, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 442, 0, 0, 442, 0, 1489, 0, 0,
	0, 139, 144, 141, 147, 148, 149, 150, 152, 153,
	154, 155, 0, 0, 0, 0, 0, 156, 157, 158,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 132, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 0, 0, 127, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1201, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 442,
	0, 0, 442, 442, 442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 139, 144, 141,
	147, 148, 149, 150, 152, 153, 154, 155, 0, 0,
	0, 0, 0, 156, 157, 158, 159, 0, 0, 0,
	0, 0, 0, 1438, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 442, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 442, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1201, 1661, 0,
	0, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1698, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1084, 0, 0, 0, 0,
	0, 0, 1725, 1726, 0, 0, 1084, 1084, 1084, 1084,
	1084, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1489, 0, 0, 1084, 0, 0, 0, 1084,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 313, 0, 0, 0, 0, 0, 0,
	0, 1825, 222, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 327, 0, 365, 208, 280, 278, 393, 232,
	225, 221, 207, 255, 286, 325, 383, 319, 0, 275,
	0, 0, 374, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	206, 175, 310, 375, 236, 0, 0, 0, 167, 168,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 197,
	0, 204, 0, 0, 0, 0, 218, 259, 224, 217,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 967, 966, 976, 977, 969, 970, 971,
	972, 973, 974, 975, 968, 0, 0, 978, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 299, 1917, 0, 34, 0,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 267, 171, 186, 0, 0, 309, 348, 354, 0,
	0, 1084, 209, 0, 352, 323, 407, 193, 234, 345,
	328, 350, 0, 0, 351, 276, 395, 340, 405, 423,
	424, 216, 303, 413, 387, 419, 434, 187, 213, 317,
	380, 410, 371, 296, 391, 392, 266, 370, 242, 174,
	274, 431, 185, 360, 201, 178, 382, 403, 198, 363,
	0, 0, 0, 180, 401, 379, 293, 263, 264, 179,
	0, 344, 220, 240, 211, 312, 398, 399, 210, 436,
	189, 418, 182, 0, 417, 305, 394, 402, 294, 285,
	181, 400, 292, 284, 269, 230, 250, 338, 279, 339,
	251, 301, 300, 302, 0, 176, 0, 376, 411, 437,
	194, 195, 196, 0, 229, 233, 239, 241, 0, 247,
	254, 272, 316, 337, 335, 341, 0, 389, 406, 414,
	421, 427, 428, 432, 429, 430, 433, 304, 190, 253,
	372, 268, 277, 0, 0, 322, 353, 199, 409, 373,
	0, 0, 0, 2022, 0, 0, 0, 0, 0, 0,
	2028, 2029, 2030, 0, 0, 0, 0, 0, 0, 0,
	170, 183, 273, 0, 342, 237, 435, 416, 412, 0,
	0, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 173, 184, 192, 202, 214,
	227, 235, 245, 249, 252, 256, 257, 260, 265, 282,
	287, 288, 289, 290, 306, 307, 308, 311, 314, 315,
	318, 320, 321, 324, 330, 331, 332, 333, 334, 336,
	343, 347, 355, 356, 357, 358, 359, 361, 362, 366,
	367, 368, 369, 377, 381, 396, 397, 408, 420, 425,
	246, 404, 426, 0, 281, 0, 0, 283, 231, 248,
	258, 0, 415, 378, 188, 349, 238, 177, 205, 191,
	212, 226, 228, 262, 291, 297, 326, 329, 243, 223,
	203, 346, 200, 364, 384, 385, 386, 388, 295, 219,
	0, 0, 1917, 0, 34, 0, 1917, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1917,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2170, 0, 0, 0, 0, 34, 0, 0,
	0, 0, 734, 721, 0, 0, 670, 737, 641, 659,
	746, 661, 664, 704, 620, 683, 313, 656, 0, 645,
	616, 652, 617, 643, 672, 222, 676, 640, 723, 686,
	736, 271, 34, 622, 646, 327, 706, 365, 208, 280,
	278, 393, 232, 225, 221, 207, 255, 286, 325, 383,
	319, 743, 275, 693, 0, 374, 298, 0, 0, 0,
	674, 726, 681, 717, 669, 705, 630, 692, 738, 657,
	701, 739, 261, 206, 175, 310, 375, 236, 0, 0,
	0, 167, 168, 169, 0, 2204, 2205, 0, 0, 0,
	0, 0, 197, 0, 204, 698, 733, 654, 700, 218,
	259, 224, 217, 390, 703, 749, 615, 695, 0, 618,
	621, 745, 729, 649, 650, 0, 0, 0, 0, 0,
	0, 0, 673, 682, 714, 667, 0, 0, 0, 0,
	0, 0, 0, 0, 647, 0, 691, 0, 0, 0,
	626, 619, 0, 0, 0, 0, 671, 0, 0, 0,
	629, 0, 648, 715, 0, 613, 244, 623, 299, 0,
	719, 728, 668, 422, 732, 666, 665, 735, 710, 627,
	725, 660, 270, 625, 267, 171, 186, 0, 658, 309,
	348, 354, 724, 644, 653, 209, 651, 352, 323, 407,
	193, 234, 345, 328, 350, 690, 708, 351, 276, 395,
	340, 405, 423, 424, 216, 303, 413, 387, 419, 434,
	187, 213, 317, 380, 410, 371, 296, 391, 392, 266,
	370, 242, 174, 274, 431, 185, 360, 201, 178, 382,
	403, 198, 363, 0, 0, 0, 180, 401, 379, 293,
	263, 264, 179, 0, 344, 220, 240, 211, 312, 398,
	399, 210, 436, 189, 418, 182, 924, 417, 305, 394,
	402, 294, 285, 181, 400, 292, 284, 269, 230, 250,
	338, 279, 339, 251, 301, 300, 302, 0, 176, 0,
	376, 411, 437, 194, 195, 196, 639, 229, 233, 239,
	241, 0, 247, 254, 272, 316, 337, 335, 341, 720,
	389, 406, 414, 421, 427, 428, 432, 429, 430, 433,
	304, 190, 253, 372, 268, 277, 712, 748, 322, 353,
	199, 409, 373, 634, 638, 632, 633, 684, 685, 635,
	740, 741, 742, 716, 628, 0, 636, 637, 0, 722,
	730, 731, 689, 170, 183, 273, 744, 342, 237, 435,
	416, 412, 614, 631, 215, 642, 0, 0, 655, 662,
	663, 675, 677, 678, 679, 680, 688, 696, 697, 699,
	707, 709, 711, 713, 718, 727, 747, 172, 173, 184,
	192, 202, 214, 227, 235, 245, 249, 252, 256, 257,
	260, 265, 282, 287, 288, 289, 290, 306, 307, 308,
	311, 314, 315, 318, 320, 321, 324, 330, 331, 332,
	333, 334, 336, 343, 347, 355, 356, 357, 358, 359,
	361, 362, 366, 367, 368, 369, 377, 381, 396, 397,
	408, 420, 425, 246, 404, 426, 0, 281, 687, 694,
	283, 231, 248, 258, 702, 415, 378, 188, 349, 238,
	177, 205, 191, 212, 226, 228, 262, 291, 297, 326,
	329, 243, 223, 203, 346, 200, 364, 384, 385, 386,
	388, 295, 219, 734, 721, 0, 0, 670, 737, 641,
	659, 746, 661, 664, 704, 620, 683, 313, 656, 0,
	645, 616, 652, 617, 643, 672, 222, 676, 640, 723,
	686, 736, 271, 0, 622, 646, 327, 706, 365, 208,
	280, 278, 393, 232, 225, 221, 207, 255, 286, 325,
	383, 319, 743, 275, 693, 0, 374, 298, 0, 0,
	0, 674, 726, 681, 717, 669, 705, 630, 692, 738,
	657, 701, 739, 261, 206, 175, 310, 375, 236, 0,
	0, 0, 167, 168, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 197, 0, 204, 698, 733, 654, 700,
	218, 259, 224, 217, 390, 703, 749, 615, 695, 0,
	618, 621, 745, 729, 649, 650, 0, 0, 0, 0,
	0, 0, 0, 673, 682, 714, 667, 0, 0, 0,
	0, 0, 0, 1909, 0, 647, 0, 691, 0, 0,
	0, 626, 619, 0, 0, 0, 0, 671, 0, 0,
	0, 629, 0, 648, 715, 0, 613, 244, 623, 299,
	0, 719, 728, 668, 422, 732, 666, 665, 735, 710,
	627, 725, 660, 270, 625, 267, 171, 186, 0, 658,
	309, 348, 354, 724, 644, 653, 209, 651, 352, 323,
	407, 193, 234, 345, 328, 350, 690, 708, 351, 276,
	395, 340, 405, 423, 424, 216, 303, 413, 387, 419,
	434, 187, 213, 317, 380, 410, 371, 296, 391, 392,
	266, 370, 242, 174, 274, 431, 185, 360, 201, 178,
	382, 403, 198, 363, 0, 0, 0, 180, 401, 379,
	293, 263, 264, 179, 0, 344, 220, 240, 211, 312,
	398, 399, 210, 436, 189, 418, 182, 924, 417, 305,
	394, 402, 294, 285, 181, 400, 292, 284, 269, 230,
	250, 338, 279, 339, 251, 301, 300, 302, 0, 176,
	0, 376, 411, 437, 194, 195, 196, 639, 229, 233,
	239, 241, 0, 247, 254, 272, 316, 337, 335, 341,
	720, 389, 406, 414, 421, 427, 428, 432, 429, 430,
	433, 304, 190, 253, 372, 268, 277, 712, 748, 322,
	353, 199, 409, 373, 634, 638, 632, 633, 684, 685,
	635, 740, 741, 742, 716, 628, 0, 636, 637, 0,
	722, 730, 731, 689, 170, 183, 273, 744, 342, 237,
	435, 416, 412, 614, 631, 215, 642, 0, 0, 655,
	662, 663, 675, 677, 678, 679, 680, 688, 696, 697,
	699, 707, 709, 711, 713, 718, 727, 747, 172, 173,
	184, 192, 202, 214, 227, 235, 245, 249, 252, 256,
	257, 260, 265, 282, 287, 288, 289, 290, 306, 307,
	308, 311, 314, 315, 318, 320, 321, 324, 330, 331,
	332, 333, 334, 336, 343, 347, 355, 356, 357, 358,
	359, 361, 362, 366, 367, 368, 369, 377, 381, 396,
	397, 408, 420, 425, 246, 404, 426, 0, 281, 687,
	694, 283, 231, 248, 258, 702, 415, 378, 188, 349,
	238, 177, 205, 191, 212, 226, 228, 262, 291, 297,
	326, 329, 243, 223, 203, 346, 200, 364, 384, 385,
	386, 388, 295, 219, 734, 721, 0, 0, 670, 737,
	641, 659, 746, 661, 664, 704, 620, 683, 313, 656,
	0, 645, 616, 652, 617, 643, 672, 222, 676, 640,
	723, 686, 736, 271, 0, 622, 646, 327, 706, 365,
	208, 280, 278, 393, 232, 225, 221, 207, 255, 286,
	325, 383, 319, 743, 275, 693, 0, 374, 298, 0,
	0, 0, 674, 726, 681, 717, 669, 705, 630, 692,
	738, 657, 701, 739, 261, 206, 175, 310, 375, 236,
	0, 0, 0, 167, 168, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 197, 0, 204, 698, 733, 654,
	700, 218, 259, 224, 217, 390, 703, 749, 615, 695,
	0, 618, 621, 745, 729, 649, 650, 0, 0, 0,
	0, 0, 0, 0, 673, 682, 714, 667, 0, 0,
	0, 0, 0, 0, 1754, 0, 647, 0, 691, 0,
	0, 0, 626, 619, 0, 0, 0, 0, 671, 0,
	0, 0, 629, 0, 648, 715, 0, 613, 244, 623,
	299, 0, 719, 728, 668, 422, 732, 666, 665, 735,
	710, 627, 725, 660, 270, 625, 267, 171, 186, 0,
	658, 309, 348, 354, 724, 644, 653, 209, 651, 352,
	323, 407, 193, 234, 345, 328, 350, 690, 708, 351,
	276, 395, 340, 405, 423, 424, 216, 303, 413, 387,
	419, 434, 187, 213, 317, 380, 410, 371, 296, 391,
	392, 266, 370, 242, 174, 274, 431, 185, 360, 201,
	178, 382, 403, 198, 363, 0, 0, 0, 180, 401,
	379, 293, 263, 264, 179, 0, 344, 220, 240, 211,
	312, 398, 399, 210, 436, 189, 418, 182, 924, 417,
	305, 394, 402, 294, 285, 181, 400, 292, 284, 269,
	230, 250, 338, 279, 339, 251, 301, 300, 302, 0,
	176, 0, 376, 411, 437, 194, 195, 196, 639, 229,
	233, 239, 241, 0, 247, 254, 272, 316, 337, 335,
	341, 720, 389, 406, 414, 421, 427, 428, 432, 429,
	430, 433, 304, 190, 253, 372, 268, 277, 712, 748,
	322, 353, 199, 409, 373, 634, 638, 632, 633, 684,
	685, 635, 740, 741, 742, 716, 628, 0, 636, 637,
	0, 722, 730, 731, 689, 170, 183, 273, 744, 342,
	237, 435, 416, 412, 614, 631, 215, 642, 0, 0,
	655, 662, 663, 675, 677, 678, 679, 680, 688, 696,
	697, 699, 707, 709, 711, 713, 718, 727, 747, 172,
	173, 184, 192, 202, 214, 227, 235, 245, 249, 252,
	256, 257, 260, 265, 282, 287, 288, 289, 290, 306,
	307, 308, 311, 314, 315, 318, 320, 321, 324, 330,
	331, 332, 333, 334, 336, 343, 347, 355, 356, 357,
	358, 359, 361, 362, 366, 367, 368, 369, 377, 381,
	396, 397, 408, 420, 425, 246, 404, 426, 0, 281,
	687, 694, 283, 231, 248, 258, 702, 415, 378, 188,
	349, 238, 177, 205, 191, 212, 226, 228, 262, 291,
	297, 326, 329, 243, 223, 203, 346, 200, 364, 384,
	385, 386, 388, 295, 219, 734, 721, 0, 0, 670,
	737, 641, 659, 746, 661, 664, 704, 620, 683, 313,
	656, 0, 645, 616, 652, 617, 643, 672, 222, 676,
	640, 723, 686, 736, 271, 0, 622, 646, 327, 706,
	365, 208, 280, 278, 393, 232, 225, 221, 207, 255,
	286, 325, 383, 319, 743, 275, 693, 0, 374, 298,
	0, 0, 0, 674, 726, 681, 717, 669, 705, 630,
	692, 738, 657, 701, 739, 261, 206, 175, 310, 375,
	236, 0, 0, 0, 167, 168, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 197, 0, 204, 698, 733,
	654, 700, 218, 259, 224, 217, 390, 703, 749, 615,
	695, 0, 618, 621, 745, 729, 649, 650, 0, 0,
	0, 0, 0, 0, 0, 673, 682, 714, 667, 0,
	0, 0, 0, 0, 0, 1466, 0, 647, 0, 691,
	0, 0, 0, 626, 619, 0, 0, 0, 0, 671,
	0, 0, 0, 629, 0, 648, 715, 0, 613, 244,
	623, 299, 0, 719, 728, 668, 422, 732, 666, 665,
	735, 710, 627, 725, 660, 270, 625, 267, 171, 186,
	0, 658, 309, 348, 354, 724, 644, 653, 209, 651,
	352, 323, 407, 193, 234, 345, 328, 350, 690, 708,
	351, 276, 395, 340, 405, 423, 424, 216, 303, 413,
	387, 419, 434, 187, 213, 317, 380, 410, 371, 296,
	391, 392, 266, 370, 242, 174, 274, 431, 185, 360,
	201, 178, 382, 403, 198, 363, 0, 0, 0, 180,
	401, 379, 293, 263, 264, 179, 0, 344, 220, 240,
	211, 312, 398, 399, 210, 436, 189, 418, 182, 924,
	417, 305, 394, 402, 294, 285, 181, 400, 292, 284,
	269, 230, 250, 338, 279, 339, 251, 301, 300, 302,
	0, 176, 0, 376, 411, 437, 194, 195, 196, 639,
	229, 233, 239, 241, 0, 247, 254, 272, 316, 337,
	335, 341, 720, 389, 406, 414, 421, 427, 428, 432,
	429, 430, 433, 304, 190, 253, 372, 268, 277, 712,
	748, 322, 353, 199, 409, 373, 634, 638, 632, 633,
	684, 685, 635, 740, 741, 742, 716, 628, 0, 636,
	637, 0, 722, 730, 731, 689, 170, 183, 273, 744,
	342, 237, 435, 416, 412, 614, 631, 215, 642, 0,
	0, 655, 662, 663, 675, 677, 678, 679, 680, 688,
	696, 697, 699, 707, 709, 711, 713, 718, 727, 747,
	172, 173, 184, 192, 202, 214, 227, 235, 245, 249,
	252, 256, 257, 260, 265, 282, 287, 288, 289, 290,
	306, 307, 308, 311, 314, 315, 318, 320, 321, 324,
	330, 331, 332, 333, 334, 336, 343, 347, 355, 356,
	357, 358, 359, 361, 362, 366, 367, 368, 369, 377,
	381, 396, 397, 408, 420, 425, 246, 404, 426, 0,
	281, 687, 694, 283, 231, 248, 258, 702, 415, 378,
	188, 349, 238, 177, 205, 191, 212, 226, 228, 262,
	291, 297, 326, 329, 243, 223, 203, 346, 200, 364,
	384, 385, 386, 388, 295, 219, 734, 721, 0, 0,
	670, 737, 641, 659, 746, 661, 664, 704, 620, 683,
	313, 656, 0, 645, 616, 652, 617, 643, 672, 222,
	676, 640, 723, 686, 736, 271, 0, 622, 646, 327,
	706, 365, 208, 280, 278, 393, 232, 225, 221, 207,
	255, 286, 325, 383, 319, 743, 275, 693, 0, 374,
	298, 0, 0, 0, 674, 726, 681, 717, 669, 705,
	630, 692, 738, 657, 701, 739, 261, 206, 175, 310,
	375, 236, 71, 0, 0, 167, 168, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 197, 0, 204, 698,
	733, 654, 700, 218, 259, 224, 217, 390, 703, 749,
	615, 695, 0, 618, 621, 745, 729, 649, 650, 0,
	0, 0, 0, 0, 0, 0, 673, 682, 714, 667,
	0, 0, 0, 0, 0, 0, 0, 0, 647, 0,
	691, 0, 0, 0, 626, 619, 0, 0, 0, 0,
	671, 0, 0, 0, 629, 0, 648, 715, 0, 613,
	244, 623, 299, 0, 719, 728, 668, 422, 732, 666,
	665, 735, 710, 627, 725, 660, 270, 625, 267, 171,
	186, 0, 658, 309, 348, 354, 724, 644, 653, 209,
	651, 352, 323, 407, 193, 234, 345, 328, 350, 690,
	708, 351, 276, 395, 340, 405, 423, 424, 216, 303,
	413, 387, 419, 434, 187, 213, 317, 380, 410, 371,
	296, 391, 392, 266, 370, 242, 174, 274, 431, 185,
	360, 201, 178, 382, 403, 198, 363, 0, 0, 0,
	180, 401, 379, 293, 263, 264, 179, 0, 344, 220,
	240, 211, 312, 398, 399, 210, 436, 189, 418, 182,
	924, 417, 305, 394, 402, 294, 285, 181, 400, 292,
	284, 269, 230, 250, 338, 279, 339, 251, 301, 300,
	302, 0, 176, 0, 376, 411, 437, 194, 195, 196,
	639, 229, 233, 239, 241, 0, 247, 254, 272, 316,
	337, 335, 341, 720, 389, 406, 414, 421, 427, 428,
	432, 429, 430, 433, 304, 190, 253, 372, 268, 277,
	712, 748, 322, 353, 199, 409, 373, 634, 638, 632,
	633, 684, 685, 635, 740, 741, 742, 716, 628, 0,
	636, 637, 0, 722, 730, 731, 689, 170, 183, 273,
	744, 342, 237, 435, 416, 412, 614, 631, 215, 642,
	0, 0, 655, 662, 663, 675, 677, 678, 679, 680,
	688, 696, 697, 699, 707, 709, 711, 713, 718, 727,
	747, 172, 173, 184, 192, 202, 214, 227, 235, 245,
	249, 252, 256, 257, 260, 265, 282, 287, 288, 289,
	290, 306, 307, 308, 311, 314, 315, 318, 320, 321,
	324, 330, 331, 332, 333, 334, 336, 343, 347, 355,
	356, 357, 358, 359, 361, 362, 366, 367, 368, 369,
	377, 381, 396, 397, 408, 420, 425, 246, 404, 426,
	0, 281, 687, 694, 283, 231, 248, 258, 702, 415,
	378, 188, 349, 238, 177, 205, 191, 212, 226, 228,
	262, 291, 297, 326, 329, 243, 223, 203, 346, 200,
	364, 384, 385, 386, 388, 295, 219, 734, 721, 0,
	0, 670, 737, 641, 659, 746, 661, 664, 704, 620,
	683, 313, 656, 0, 645, 616, 652, 617, 643, 672,
	222, 676, 640, 723, 686, 736, 271, 0, 622, 646,
	327, 706, 365, 208, 280, 278, 393, 232, 225, 221,
	207, 255, 286, 325, 383, 319, 743, 275, 693, 0,
	374, 298, 0, 0, 0, 674, 726, 681, 717, 669,
	705, 630, 692, 738, 657, 701, 739, 261, 206, 175,
	310, 375, 236, 0, 0, 0, 167, 168, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 197, 0, 204,
	698, 733, 654, 700, 218, 259, 224, 217, 390, 703,
	749, 615, 695, 0, 618, 621, 745, 729, 649, 650,
	0, 0, 0, 0, 0, 0, 0, 673, 682, 714,
	667, 0, 0, 0, 0, 0, 0, 0, 0, 647,
	0, 691, 0, 0, 0, 626, 619, 0, 0, 0,
	0, 671, 0, 0, 0, 629, 0, 648, 715, 0,
	613, 244, 623, 299, 0, 719, 728, 668, 422, 732,
	666, 665, 735, 710, 627, 725, 660, 270, 625, 267,
	171, 186, 0, 658, 309, 348, 354, 724, 644, 653,
	209, 651, 352, 323, 407, 193, 234, 345, 328, 350,
	690, 708, 351, 276, 395, 340, 405, 423, 424, 216,
	303, 413, 387, 419, 434, 187, 213, 317, 380, 410,
	371, 296, 391, 392, 266, 370, 242, 174, 274, 431,
	185, 360, 201, 178, 382, 403, 198, 363, 0, 0,
	0, 180, 401, 379, 293, 263, 264, 179, 0, 344,
	220, 240, 211, 312, 398, 399, 210, 436, 189, 418,
	182, 924, 417, 305, 394, 402, 294, 285, 181, 400,
	292, 284, 269, 230, 250, 338, 279, 339, 251, 301,
	300, 302, 0, 176, 0, 376, 411, 437, 194, 195,
	196, 639, 229, 233, 239, 241, 0, 247, 254, 272,
	316, 337, 335, 341, 720, 389, 406, 414, 421, 427,
	428, 432, 429, 430, 433, 304, 190, 253, 372, 268,
	277, 712, 748, 322, 353, 199, 409, 373, 634, 638,
	632, 633, 684, 685, 635, 740, 741, 742, 716, 628,
	0, 636, 637, 0, 722, 730, 731, 689, 170, 183,
	273, 744, 342, 237, 435, 416, 412, 614, 631, 215,
	642, 0, 0, 655, 662, 663, 675, 677, 678, 679,
	680, 688, 696, 697, 699, 707, 709, 711, 713, 718,
	727, 747, 172, 173, 184, 192, 202, 214, 227, 235,
	245, 249, 252, 256, 257, 260, 265, 282, 287, 288,
	289, 290, 306, 307, 308, 311, 314, 315, 318, 320,
	321, 324, 330, 331, 332, 333, 334, 336, 343, 347,
	355, 356, 357, 358, 359, 361, 362, 366, 367, 368,
	369, 377, 381, 396, 397, 408, 420, 425, 246, 404,
	426, 0, 281, 687, 694, 283, 231, 248, 258, 702,
	415, 378, 188, 349, 238, 177, 205, 191, 212, 226,
	228, 262, 291, 297, 326, 329, 243, 223, 203, 346,
	200, 364, 384, 385, 386, 388, 295, 219, 734, 721,
	0, 0, 670, 737, 641, 659, 746, 661, 664, 704,
	620, 683, 313, 656, 0, 645, 616, 652, 617, 643,
	672, 222, 676, 640, 723, 686, 736, 271, 0, 622,
	646, 327, 706, 365, 208, 280, 278, 393, 232, 225,
	221, 207, 255, 286, 325, 383, 319, 743, 275, 693,
	0, 374, 298, 0, 0, 0, 674, 726, 681, 717,
	669, 705, 630, 692, 738, 657, 701, 739, 261, 206,
	175, 310, 375, 236, 0, 0, 0, 167, 168, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 197, 0,
	204, 698, 733, 654, 700, 218, 259, 224, 217, 390,
	703, 749, 615, 695, 0, 618, 621, 745, 729, 649,
	650, 0, 0, 0, 0, 0, 0, 0, 673, 682,
	714, 667, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 0, 691, 0, 0, 0, 626, 619, 0, 0,
	0, 0, 671, 0, 0, 0, 629, 0, 648, 715,
	0, 613, 244, 623, 299, 0, 719, 728, 668, 422,
	732, 666, 665, 735, 710, 627, 725, 660, 270, 625,
	267, 171, 186, 0, 658, 309, 348, 354, 724, 644,
	653, 209, 651, 352, 323, 407, 193, 234, 345, 328,
	350, 690, 708, 351, 276, 395, 340, 405, 423, 424,
	216, 303, 413, 387, 419, 434, 187, 213, 317, 380,
	410, 371, 296, 391, 392, 266, 370, 242, 174, 274,
	431, 185, 360, 201, 178, 382, 403, 198, 363, 0,
	0, 0, 180, 401, 379, 293, 263, 264, 179, 0,
	344, 220, 240, 211, 312, 398, 399, 210, 436, 189,
	418, 182, 624, 417, 305, 394, 402, 294, 285, 181,
	400, 292, 284, 269, 230, 250, 338, 279, 339, 251,
	301, 300, 302, 0, 176, 0, 376, 411, 437, 194,
	195, 196, 639, 229, 233, 239, 241, 0, 247, 254,
	272, 316, 337, 335, 341, 720, 389, 406, 414, 421,
	427, 428, 432, 429, 430, 433, 612, 750, 606, 605,
	268, 277, 712, 748, 322, 353, 199, 409, 373, 634,
	638, 632, 633, 684, 685, 635, 740, 741, 742, 716,
	628, 0, 636, 637, 0, 722, 730, 731, 689, 170,
	183, 273, 744, 342, 237, 435, 416, 412, 614, 631,
	215, 642, 0, 0, 655, 662, 663, 675, 677, 678,
	679, 680, 688, 696, 697, 699, 707, 709, 711, 713,
	718, 727, 747, 172, 173, 184, 192, 202, 214, 227,
	235, 245, 249, 252, 256, 257, 260, 265, 282, 287,
	288, 289, 290, 306, 307, 308, 311, 314, 315, 318,
	320, 321, 324, 330, 331, 332, 333, 334, 336, 343,
	347, 355, 356, 357, 358, 359, 361, 362, 366, 367,
	368, 369, 377, 381, 396, 397, 408, 420, 425, 246,
	404, 426, 0, 281, 687, 694, 283, 231, 248, 258,
	702, 415, 378, 188, 349, 238, 177, 205, 191, 212,
	226, 228, 262, 291, 297, 326, 329, 243, 223, 203,
	346, 200, 364, 384, 385, 386, 388, 295, 219, 734,
	721, 0, 0, 670, 737, 641, 659, 746, 661, 664,
	704, 620, 683, 313, 656, 0, 645, 616, 652, 617,
	643, 672, 222, 676, 640, 723, 686, 736, 271, 0,
	622, 646, 327, 706, 365, 208, 280, 278, 393, 232,
	225, 221, 207, 255, 286, 325, 383, 319, 743, 275,
	693, 0, 374, 298, 0, 0, 0, 674, 726, 681,
	717, 669, 705, 630, 692, 738, 657, 701, 739, 261,
	206, 175, 310, 375, 236, 0, 0, 0, 167, 168,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 197,
	0, 204, 698, 733, 654, 700, 218, 259, 224, 217,
	390, 703, 749, 615, 695, 0, 618, 621, 745, 729,
	649, 650, 0, 0, 0, 0, 0, 0, 0, 673,
	682, 714, 667, 0, 0, 0, 0, 0, 0, 0,
	0, 647, 0, 691, 0, 0, 0, 626, 619, 0,
	0, 0, 0, 671, 0, 0, 0, 629, 0, 648,
	715, 0, 613, 244, 623, 299, 0, 719, 728, 668,
	422, 732, 666, 665, 735, 710, 627, 725, 660, 270,
	625, 267, 171, 186, 0, 658, 309, 348, 354, 724,
	644, 653, 209, 651, 352, 323, 407, 193, 234, 345,
	328, 350, 690, 708, 351, 276, 395, 340, 405, 423,
	424, 216, 303, 413, 387, 419, 434, 187, 213, 317,
	380, 410, 371, 296, 391, 392, 266, 370, 242, 174,
	274, 431, 185, 360, 201, 178, 382, 1092, 198, 363,
	0, 0, 0, 180, 401, 379, 293, 263, 264, 179,
	0, 344, 220, 240, 211, 312, 398, 399, 210, 436,
	189, 418, 182, 624, 417, 305, 394, 402, 294, 285,
	181, 400, 292, 284, 269, 230, 250, 338, 279, 339,
	251, 301, 300, 302, 0, 176, 0, 376, 411, 437,
	194, 195, 196, 639, 229, 233, 239, 241, 0, 247,
	254, 272, 316, 337, 335, 341, 720, 389, 406, 414,
	421, 427, 428, 432, 429, 430, 433, 612, 750, 606,
	605, 268, 277, 712, 748, 322, 353, 199, 409, 373,
	634, 638, 632, 633, 684, 685, 635, 740, 741, 742,
	716, 628, 0, 636, 637, 0, 722, 730, 731, 689,
	170, 183, 273, 744, 342, 237, 435, 416, 412, 614,
	631, 215, 642, 0, 0, 655, 662, 663, 675, 677,
	678, 679, 680, 688, 696, 697, 699, 707, 709, 711,
	713, 718, 727, 747, 172, 173, 184, 192, 202, 214,
	227, 235, 245, 249, 252, 256, 257, 260, 265, 282,
	287, 288, 289, 290, 306, 307, 308, 311, 314, 315,
	318, 320, 321, 324, 330, 331, 332, 333, 334, 336,
	343, 347, 355, 356, 357, 358, 359, 361, 362, 366,
	367, 368, 369, 377, 381, 396, 397, 408, 420, 425,
	246, 404, 426, 0, 281, 687, 694, 283, 231, 248,
	258, 702, 415, 378, 188, 349, 238, 177, 205, 191,
	212, 226, 228, 262, 291, 297, 326, 329, 243, 223,
	203, 346, 200, 364, 384, 385, 386, 388, 295, 219,
	734, 721, 0, 0, 670, 737, 641, 659, 746, 661,
	664, 704, 620, 683, 313, 656, 0, 645, 616, 652,
	617, 643, 672, 222, 676, 640, 723, 686, 736, 271,
	0, 622, 646, 327, 706, 365, 208, 280, 278, 393,
	232, 225, 221, 207, 255, 286, 325, 383, 319, 743,
	275, 693, 0, 374, 298, 0, 0, 0, 674, 726,
	681, 717, 669, 705, 630, 692, 738, 657, 701, 739,
	261, 206, 175, 310, 375, 236, 0, 0, 0, 167,
	168, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	197, 0, 204, 698, 733, 654, 700, 218, 259, 224,
	217, 390, 703, 749, 615, 695, 0, 618, 621, 745,
	729, 649, 650, 0, 0, 0, 0, 0, 0, 0,
	673, 682, 714, 667, 0, 0, 0, 0, 0, 0,
	0, 0, 647, 0, 691, 0, 0, 0, 626, 619,
	0, 0, 0, 0, 671, 0, 0, 0, 629, 0,
	648, 715, 0, 613, 244, 623, 299, 0, 719, 728,
	668, 422, 732, 666, 665, 735, 710, 627, 725, 660,
	270, 625, 267, 171, 186, 0, 658, 309, 348, 354,
	724, 644, 653, 209, 651, 352, 323, 407, 193, 234,
	345, 328, 350, 690, 708, 351, 276, 395, 340, 405,
	423, 424, 216, 303, 413, 387, 419, 434, 187, 213,
	317, 380, 410, 371, 296, 391, 392, 266, 370, 242,
	174, 274, 431, 185, 360, 201, 178, 382, 603, 198,
	363, 0, 0, 0, 180, 401, 379, 293, 263, 264,
	179, 0, 344, 220, 240, 211, 312, 398, 399, 210,
	436, 189, 418, 182, 624, 417, 305, 394, 402, 294,
	285, 181, 400, 292, 284, 269, 230, 250, 338, 279,
	339, 251, 301, 300, 302, 0, 176, 0, 376, 411,
	437, 194, 195, 196, 639, 229, 233, 239, 241, 0,
	247, 254, 272, 316, 337, 335, 341, 720, 389, 406,
	414, 421, 427, 428, 432, 429, 430, 433, 612, 750,
	606, 605, 268, 277, 712, 748, 322, 353, 199, 409,
	373, 634, 638, 632, 633, 684, 685, 635, 740, 741,
	742, 716, 628, 0, 636, 637, 0, 722, 730, 731,
	689, 170, 183, 273, 744, 342, 237, 435, 416, 412,
	614, 631, 215, 642, 0, 0, 655, 662, 663, 675,
	677, 678, 679, 680, 688, 696, 697, 699, 707, 709,
	711, 713, 718, 727, 747, 172, 173, 184, 192, 202,
	214, 227, 235, 245, 249, 252, 256, 257, 260, 265,
	282, 287, 288, 289, 290, 306, 307, 308, 311, 314,
	315, 318, 320, 321, 324, 330, 331, 332, 333, 334,
	336, 343, 347, 355, 356, 357, 358, 359, 361, 362,
	366, 367, 368, 369, 377, 381, 396, 397, 408, 420,
	425, 246, 404, 426, 0, 281, 687, 694, 283, 231,
	248, 258, 702, 415, 378, 188, 349, 238, 177, 205,
	191, 212, 226, 228, 262, 291, 297, 326, 329, 243,
	223, 203, 346, 200, 364, 384, 385, 386, 388, 295,
	219, 313, 0, 0, 1392, 0, 503, 0, 0, 0,
	222, 0, 502, 0, 0, 0, 271, 0, 0, 1393,
	327, 0, 365, 208, 280, 278, 393, 232, 225, 221,
	207, 255, 286, 325, 383, 319, 546, 275, 0, 0,
	374, 298, 0, 0, 0, 0, 0, 537, 538, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 206, 175,
	310, 375, 236, 71, 0, 0, 167, 168, 169, 524,
	523, 526, 527, 528, 529, 0, 0, 197, 525, 204,
	530, 531, 532, 0, 218, 259, 224, 217, 390, 0,
	0, 0, 500, 517, 0, 545, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 514, 515, 593, 0, 0,
	0, 561, 0, 516, 0, 0, 509, 510, 512, 511,
	513, 518, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 299, 0, 560, 0, 0, 422, 0,
	0, 558, 0, 0, 0, 0, 0, 270, 0, 267,
	171, 186, 0, 0, 309, 348, 354, 0, 0, 0,
	209, 0, 352, 323, 407, 193, 234, 345, 328, 350,
	0, 0, 351, 276, 395, 340, 405, 423, 424, 216,
	303, 413, 387, 419, 434, 187, 213, 317, 380, 410,
	371, 296, 391, 392, 266, 370, 242, 174, 274, 431,
	185, 360, 201, 178, 382, 403, 198, 363, 0, 0,
	0, 180, 401, 379, 293, 263, 264, 179, 0, 344,
	220, 240, 211, 312, 398, 399, 210, 436, 189, 418,
	182, 0, 417, 305, 394, 402, 294, 285, 181, 400,
	292, 284, 269, 230, 250, 338, 279, 339, 251, 301,
	300, 302, 0, 176, 0, 376, 411, 437, 194, 195,
	196, 0, 229, 233, 239, 241, 0, 247, 254, 272,
	316, 337, 335, 341, 0, 389, 406, 414, 421, 427,
	428, 432, 429, 430, 433, 304, 190, 253, 372, 268,
	277, 0, 0, 322, 353, 199, 409, 373, 548, 559,
	554, 555, 552, 553, 547, 551, 550, 549, 562, 539,
	540, 541, 542, 544, 0, 556, 557, 543, 170, 183,
	273, 0, 342, 237, 435, 416, 412, 0, 0, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 173, 184, 192, 202, 214, 227, 235,
	245, 249, 252, 256, 257, 260, 265, 282, 287, 288,
	289, 290, 306, 307, 308, 311, 314, 315, 318, 320,
	321, 324, 330, 331, 332, 333, 334, 336, 343, 347,
	355, 356, 357, 358, 359, 361, 362, 366, 367, 368,
	369, 377, 381, 396, 397, 408, 420, 425, 246, 404,
	426, 0, 281, 0, 0, 283, 231, 248, 258, 0,
	415, 378, 188, 349, 238, 177, 205, 191, 212, 226,
	228, 262, 291, 297, 326, 329, 243, 223, 203, 346,
	200, 364, 384, 385, 386, 388, 295, 219, 313, 0,
	0, 0, 0, 503, 0, 0, 0, 222, 0, 502,
	0, 0, 0, 271, 0, 0, 0, 327, 0, 365,
	208, 280, 278, 393, 232, 225, 221, 207, 255, 286,
	325, 383, 319, 546, 275, 0, 0, 374, 298, 0,
	0, 0, 0, 0, 537, 538, 0, 0, 0, 0,
	0, 0, 1505, 0, 261, 206, 175, 310, 375, 236,
	71, 0, 0, 167, 168, 169, 524, 523, 526, 527,
	528, 529, 0, 0, 197, 525, 204, 530, 531, 532,
	1506, 218, 259, 224, 217, 390, 0, 0, 0, 500,
	517, 0, 545, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 514, 515, 0, 0, 0, 0, 561, 0,
	516, 0, 0, 509, 510, 512, 511, 513, 518, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	299, 0, 560, 0, 0, 422, 0, 0, 558, 0,
	0, 0, 0, 0, 270, 0, 267, 171, 186, 0,
	0, 309, 348, 354, 0, 0, 0, 209, 0, 352,
	323, 407, 193, 234, 345, 328, 350, 0, 0, 351,
	276, 395, 340, 405, 423, 424, 216, 303, 413, 387,
	419, 434, 187, 213, 317, 380, 410, 371, 296, 391,
	392, 266, 370, 242, 174, 274, 431, 185, 360, 201,
	178, 382, 403, 198, 363, 0, 0, 0, 180, 401,
	379, 293, 263, 264, 179, 0, 344, 220, 240, 211,
	312, 398, 399, 210, 436, 189, 418, 182, 0, 417,
	305, 394, 402, 294, 285, 181, 400, 292, 284, 269,
	230, 250, 338, 279, 339, 251, 301, 300, 302, 0,
	176, 0, 376, 411, 437, 194, 195, 196, 0, 229,
	233, 239, 241, 0, 247, 254, 272, 316, 337, 335,
	341, 0, 389, 406, 414, 421, 427, 428, 432, 429,
	430, 433, 304, 190, 253, 372, 268, 277, 0, 0,
	322, 353, 199, 409, 373, 548, 559, 554, 555, 552,
	553, 547, 551, 550, 549, 562, 539, 540, 541, 542,
	544, 0, 556, 557, 543, 170, 183, 273, 0, 342,
	237, 435, 416, 412, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	173, 184, 192, 202, 214, 227, 235, 245, 249, 252,
	256, 257, 260, 265, 282, 287, 288, 289, 290, 306,
	307, 308, 311, 314, 315, 318, 320, 321, 324, 330,
	331, 332, 333, 334, 336, 343, 347, 355, 356, 357,
	358, 359, 361, 362, 366, 367, 368, 369, 377, 381,
	396, 397, 408, 420, 425, 246, 404, 426, 0, 281,
	0, 0, 283, 231, 248, 258, 0, 415, 378, 188,
	349, 238, 177, 205, 191, 212, 226, 228, 262, 291,
	297, 326, 329, 243, 223, 203, 346, 200, 364, 384,
	385, 386, 388, 295, 219, 313, 0, 0, 0, 0,
	503, 0, 0, 0, 222, 0, 502, 0, 0, 0,
	271, 0, 0, 0, 327, 0, 365, 208, 280, 278,
	393, 232, 225, 221, 207, 255, 286, 325, 383, 319,
	546, 275, 0, 0, 374, 298, 0, 0, 0, 0,
	0, 537, 538, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 206, 175, 310, 375, 236, 71, 0, 580,
	167, 168, 169, 524, 523, 526, 527, 528, 529, 0,
	0, 197, 525, 204, 530, 531, 532, 0, 218, 259,
	224, 217, 390, 0, 0, 0, 500, 517, 0, 545,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 514,
	515, 0, 0, 0, 0, 561, 0, 516, 0, 0,
	509, 510, 512, 511, 513, 518, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 299, 0, 560,
	0, 0, 422, 0, 0, 558, 0, 0, 0, 0,
	0, 270, 0, 267, 171, 186, 0, 0, 309, 348,
	354, 0, 0, 0, 209, 0, 352, 323, 407, 193,
	234, 345, 328, 350, 0, 0, 351, 276, 395, 340,
	405, 423, 424, 216, 303, 413, 387, 419, 434, 187,
	213, 317, 380, 410, 371, 296, 391, 392, 266, 370,
	242, 174, 274, 431, 185, 360, 201, 178, 382, 403,
	198, 363, 0, 0, 0, 180, 401, 379, 293, 263,
	264, 179, 0, 344, 220, 240, 211, 312, 398, 399,
	210, 436, 189, 418, 182, 0, 417, 305, 394, 402,
	294, 285, 181, 400, 292, 284, 269, 230, 250, 338,
	279, 339, 251, 301, 300, 302, 0, 176, 0, 376,
	411, 437, 194, 195, 196, 0, 229, 233, 239, 241,
	0, 247, 254, 272, 316, 337, 335, 341, 0, 389,
	406, 414, 421, 427, 428, 432, 429, 430, 433, 304,
	190, 253, 372, 268, 277, 0, 0, 322, 353, 199,
	409, 373, 548, 559, 554, 555, 552, 553, 547, 551,
	550, 549, 562, 539, 540, 541, 542, 544, 0, 556,
	557, 543, 170, 183, 273, 0, 342, 237, 435, 416,
	412, 0, 0, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 173, 184, 192,
	202, 214, 227, 235, 245, 249, 252, 256, 257, 260,
	265, 282, 287, 288, 289, 290, 306, 307, 308, 311,
	314, 315, 318, 320, 321, 324, 330, 331, 332, 333,
	334, 336, 343, 347, 355, 356, 357, 358, 359, 361,
	362, 366, 367, 368, 369, 377, 381, 396, 397, 408,
	420, 425, 246, 404, 426, 0, 281, 0, 0, 283,
	231, 248, 258, 0, 415, 378, 188, 349, 238, 177,
	205, 191, 212, 226, 228, 262, 291, 297, 326, 329,
	243, 223, 203, 346, 200, 364, 384, 385, 386, 388,
	295, 219, 313, 0, 0, 0, 0, 503, 0, 0,
	0, 222, 0, 502, 0, 0, 0, 271, 0, 0,
	0, 327, 0, 365, 208, 280, 278, 393, 232, 225,
	221, 207, 255, 286, 325, 383, 319, 546, 275, 0,
	0, 374, 298, 0, 0, 0, 0, 0, 537, 538,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 206,
	175, 310, 375, 236, 71, 0, 0, 167, 168, 169,
	524, 523, 526, 527, 528, 529, 0, 0, 197, 525,
	204, 530, 531, 532, 0, 218, 259, 224, 217, 390,
	0, 0, 0, 500, 517, 0, 545, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 514, 515, 593, 0,
	0, 0, 561, 0, 516, 0, 0, 509, 510, 512,
	511, 513, 518, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 299, 0, 560, 0, 0, 422,
	0, 0, 558, 0, 0, 0, 0, 0, 270, 0,
	267, 171, 186, 0, 0, 309, 348, 354, 0, 0,
	0, 209, 0, 352, 323, 407, 193, 234, 345, 328,
	350, 0, 0, 351, 276, 395, 340, 405, 423, 424,
	216, 303, 413, 387, 419, 434, 187, 213, 317, 380,
	410, 371, 296, 391, 392, 266, 370, 242, 174, 274,
	431, 185, 360, 201, 178, 382, 403, 198, 363, 0,
	0, 0, 180, 401, 379, 293, 263, 264, 179, 0,
	344, 220, 240, 211, 312, 398, 399, 210, 436, 189,
	418, 182, 0, 417, 305, 394, 402, 294, 285, 181,
	400, 292, 284, 269, 230, 250, 338, 279, 339, 251,
	301, 300, 302, 0, 176, 0, 376, 411, 437, 194,
	195, 196, 0, 229, 233, 239, 241, 0, 247, 254,
	272, 316, 337, 335, 341, 0, 389, 406, 414, 421,
	427, 428, 432, 429, 430, 433, 304, 190, 253, 372,
	268, 277, 0, 0, 322, 353, 199, 409, 373, 548,
	559, 554, 555, 552, 553, 547, 551, 550, 549, 562,
	539, 540, 541, 542, 544, 0, 556, 557, 543, 170,
	183, 273, 0, 342, 237, 435, 416, 412, 0, 0,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 173, 184, 192, 202, 214, 227,
	235, 245, 249, 252, 256, 257, 260, 265, 282, 287,
	288, 289, 290, 306, 307, 308, 311, 314, 315, 318,
	320, 321, 324, 330, 331, 332, 333, 334, 336, 343,
	347, 355, 356, 357, 358, 359, 361, 362, 366, 367,
	368, 369, 377, 381, 396, 397, 408, 420, 425, 246,
	404, 426, 0, 281, 0, 0, 283, 231, 248, 258,
	0, 415, 378, 188, 349, 238, 177, 205, 191, 212,
	226, 228, 262, 291, 297, 326, 329, 243, 223, 203,
	346, 200, 364, 384, 385, 386, 388, 295, 219, 313,
	0, 0, 0, 0, 503, 0, 0, 0, 222, 0,
	502, 0, 0, 0, 271, 0, 0, 0, 327, 0,
	365, 208, 280, 278, 393, 232, 225, 221, 207, 255,
	286, 325, 383, 319, 546, 275, 0, 0, 374, 298,
	0, 0, 0, 0, 0, 537, 538, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 206, 175, 310, 375,
	236, 71, 0, 0, 167, 168, 169, 524, 1410, 526,
	527, 528, 529, 0, 0, 197, 525, 204, 530, 531,
	532, 0, 218, 259, 224, 217, 390, 0, 0, 0,
	500, 517, 0, 545, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 514, 515, 593, 0, 0, 0, 561,
	0, 516, 0, 0, 509, 510, 512, 511, 513, 518,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 299, 0, 560, 0, 0, 422, 0, 0, 558,
	0, 0, 0, 0, 0, 270, 0, 267, 171, 186,
	0, 0, 309, 348, 354, 0, 0, 0, 209, 0,
	352, 323, 407, 193, 234, 345, 328, 350, 0, 0,
	351, 276, 395, 340, 405, 423, 424, 216, 303, 413,
	387, 419, 434, 187, 213, 317, 380, 410, 371, 296,
	391, 392, 266, 370, 242, 174, 274, 431, 185, 360,
	201, 178, 382, 403, 198, 363, 0, 0, 0, 180,
	401, 379, 293, 263, 264, 179, 0, 344, 220, 240,
	211, 312, 398, 399, 210, 436, 189, 418, 182, 0,
	417, 305, 394, 402, 294, 285, 181, 400, 292, 284,
	269, 230, 250, 338, 279, 339, 251, 301, 300, 302,
	0, 176, 0, 376, 411, 437, 194, 195, 196, 0,
	229, 233, 239, 241, 0, 247, 254, 272, 316, 337,
	335, 341, 0, 389, 406, 414, 421, 427, 428, 432,
	429, 430, 433, 304, 190, 253, 372, 268, 277, 0,
	0, 322, 353, 199, 409, 373, 548, 559, 554, 555,
	552, 553, 547, 551, 550, 549, 562, 539, 540, 541,
	542, 544, 0, 556, 557, 543, 170, 183, 273, 0,
	342, 237, 435, 416, 412, 0, 0, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 173, 184, 192, 202, 214, 227, 235, 245, 249,
	252, 256, 257, 260, 265, 282, 287, 288, 289, 290,
	306, 307, 308, 311, 314, 315, 318, 320, 321, 324,
	330, 331, 332, 333, 334, 336, 343, 347, 355, 356,
	357, 358, 359, 361, 362, 366, 367, 368, 369, 377,
	381, 396, 397, 408, 420, 425, 246, 404, 426, 0,
	281, 0, 0, 283, 231, 248, 258, 0, 415, 378,
	188, 349, 238, 177, 205, 191, 212, 226, 228, 262,
	291, 297, 326, 329, 243, 223, 203, 346, 200, 364,
	384, 385, 386, 388, 295, 219, 313, 0, 0, 0,
	0, 503, 0, 0, 0, 222, 0, 502, 0, 0,
	0, 271, 0, 0, 0, 327, 0, 365, 208, 280,
	278, 393, 232, 225, 221, 207, 255, 286, 325, 383,
	319, 546, 275, 0, 0, 374, 298, 0, 0, 0,
	0, 0, 537, 538, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 206, 175, 310, 375, 236, 71, 0,
	0, 167, 168, 169, 524, 1407, 526, 527, 528, 529,
	0, 0, 197, 525, 204, 530, 531, 532, 0, 218,
	259, 224, 217, 390, 0, 0, 0, 500, 517, 0,
	545, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	514, 515, 593, 0, 0, 0, 561, 0, 516, 0,
	0, 509, 510, 512, 511, 513, 518, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 299, 0,
	560, 0, 0, 422, 0, 0, 558, 0, 0, 0,
	0, 0, 270, 0, 267, 171, 186, 0, 0, 309,
	348, 354, 0, 0, 0, 209, 0, 352, 323, 407,
	193, 234, 345, 328, 350, 0, 0, 351, 276, 395,
	340, 405, 423, 424, 216, 303, 413, 387, 419, 434,
	187, 213, 317, 380, 410, 371, 296, 391, 392, 266,
	370, 242, 174, 274, 431, 185, 360, 201, 178, 382,
	403, 198, 363, 0, 0, 0, 180, 401, 379, 293,
	263, 264, 179, 0, 344, 220, 240, 211, 312, 398,
	399, 210, 436, 189, 418, 182, 0, 417, 305, 394,
	402, 294, 285, 181, 400, 292, 284, 269, 230, 250,
	338, 279, 339, 251, 301, 300, 302, 0, 176, 0,
	376, 411, 437, 194, 195, 196, 0, 229, 233, 239,
	241, 0, 247, 254, 272, 316, 337, 335, 341, 0,
	389, 406, 414, 421, 427, 428, 432, 429, 430, 433,
	304, 190, 253, 372, 268, 277, 0, 0, 322, 353,
	199, 409, 373, 548, 559, 554, 555, 552, 553, 547,
	551, 550, 549, 562, 539, 540, 541, 542, 544, 0,
	556, 557, 543, 170, 183, 273, 0, 342, 237, 435,
	416, 412, 0, 0, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 173, 184,
	192, 202, 214, 227, 235, 245, 249, 252, 256, 257,
	260, 265, 282, 287, 288, 289, 290, 306, 307, 308,
	311, 314, 315, 318, 320, 321, 324, 330, 331, 332,
	333, 334, 336, 343, 347, 355, 356, 357, 358, 359,
	361, 362, 366, 367, 368, 369, 377, 381, 396, 397,
	408, 420, 425, 246, 404, 426, 0, 281, 0, 0,
	283, 231, 248, 258, 0, 415, 378, 188, 349, 238,
	177, 205, 191, 212, 226, 228, 262, 291, 297, 326,
	329, 243, 223, 203, 346, 200, 364, 384, 385, 386,
	388, 295, 219, 573, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 0, 0, 0,
	0, 503, 0, 0, 0, 222, 0, 502, 0, 0,
	0, 271, 0, 0, 0, 327, 0, 365, 208, 280,
	278, 393, 232, 225, 221, 207, 255, 286, 325, 383,
	319, 546, 275, 0, 0, 374, 298, 0, 0, 0,
	0, 0, 537, 538, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 206, 175, 310, 375, 236, 71, 0,
	0, 167, 168, 169, 524, 523, 526, 527, 528, 529,
	0, 0, 197, 525, 204, 530, 531, 532, 0, 218,
	259, 224, 217, 390, 0, 0, 0, 500, 517, 0,
	545, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	514, 515, 0, 0, 0, 0, 561, 0, 516, 0,
	0, 509, 510, 512, 511, 513, 518, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 299, 0,
	560, 0, 0, 422, 0, 0, 558, 0, 0, 0,
	0, 0, 270, 0, 267, 171, 186, 0, 0, 309,
	348, 354, 0, 0, 0, 209, 0, 352, 323, 407,
	193, 234, 345, 328, 350, 0, 0, 351, 276, 395,
	340, 405, 423, 424, 216, 303, 413, 387, 419, 434,
	187, 213, 317, 380, 410, 371, 296, 391, 392, 266,
	370, 242, 174, 274, 431, 185, 360, 201, 178, 382,
	403, 198, 363, 0, 0, 0, 180, 401, 379, 293,
	263, 264, 179, 0, 344, 220, 240, 211, 312, 398,
	399, 210, 436, 189, 418, 182, 0, 417, 305, 394,
	402, 294, 285, 181, 400, 292, 284, 269, 230, 250,
	338, 279, 339, 251, 301, 300, 302, 0, 176, 0,
	376, 411, 437, 194, 195, 196, 0, 229, 233, 239,
	241, 0, 247, 254, 272, 316, 337, 335, 341, 0,
	389, 406, 414, 421, 427, 428, 432, 429, 430, 433,
	304, 190, 253, 372, 268, 277, 0, 0, 322, 353,
	199, 409, 373, 548, 559, 554, 555, 552, 553, 547,
	551, 550, 549, 562, 539, 540, 541, 542, 544, 0,
	556, 557, 543, 170, 183, 273, 0, 342, 237, 435,
	416, 412, 0, 0, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 173, 184,
	192, 202, 214, 227, 235, 245, 249, 252, 256, 257,
	260, 265, 282, 287, 288, 289, 290, 306, 307, 308,
	311, 314, 315, 318, 320, 321, 324, 330, 331, 332,
	333, 334, 336, 343, 347, 355, 356, 357, 358, 359,
	361, 362, 366, 367, 368, 369, 377, 381, 396, 397,
	408, 420, 425, 246, 404, 426, 0, 281, 0, 0,
	283, 231, 248, 258, 0, 415, 378, 188, 349, 238,
	177, 205, 191, 212, 226, 228, 262, 291, 297, 326,
	329, 243, 223, 203, 346, 200, 364, 384, 385, 386,
	388, 295, 219, 313, 0, 0, 0, 0, 503, 0,
	0, 0, 222, 0, 502, 0, 0, 0, 271, 0,
	0, 0, 327, 0, 365, 208, 280, 278, 393, 232,
	225, 221, 207, 255, 286, 325, 383, 319, 546, 275,
	0, 0, 374, 298, 0, 0, 0, 0, 0, 537,
	538, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	206, 175, 310, 375, 236, 71, 0, 0, 167, 168,
	169, 524, 523, 526, 527, 528, 529, 0, 0, 197,
	525, 204, 530, 531, 532, 0, 218, 259, 224, 217,
	390, 0, 0, 0, 500, 517, 0, 545, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 514, 515, 0,
	0, 0, 0, 561, 0, 516, 0, 0, 509, 510,
	512, 511, 513, 518, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 299, 0, 560, 0, 0,
	422, 0, 0, 558, 0, 0, 0, 0, 0, 270,
	0, 267, 171, 186, 0, 0, 309, 348, 354, 0,
	0, 0, 209, 0, 352, 323, 407, 193, 234, 345,
	328, 350, 0, 0, 351, 276, 395, 340, 405, 423,
	424, 216, 303, 413, 387, 419, 434, 187, 213, 317,
	380, 410, 371, 296, 391, 392, 266, 370, 242, 174,
	274, 431, 185, 360, 201, 178, 382, 403, 198, 363,
	0, 0, 0, 180, 401, 379, 293, 263, 264, 179,
	0, 344, 220, 240, 211, 312, 398, 399, 210, 436,
	189, 418, 182, 0, 417, 305, 394, 402, 294, 285,
	181, 400, 292, 284, 269, 230, 250, 338, 279, 339,
	251, 301, 300, 302, 0, 176, 0, 376, 411, 437,
	194, 195, 196, 0, 229, 233, 239, 241, 0, 247,
	254, 272, 316, 337, 335, 341, 0, 389, 406, 414,
	421, 427, 428, 432, 429, 430, 433, 304, 190, 253,
	372, 268, 277, 0, 0, 322, 353, 199, 409, 373,
	548, 559, 554, 555, 552, 553, 547, 551, 550, 549,
	562, 539, 540, 541, 542, 544, 0, 556, 557, 543,
	170, 183, 273, 0, 342, 237, 435, 416, 412, 0,
	0, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 173, 184, 192, 202, 214,
	227, 235, 245, 249, 252, 256, 257, 260, 265, 282,
	287, 288, 289, 290, 306, 307, 308, 311, 314, 315,
	318, 320, 321, 324, 330, 331, 332, 333, 334, 336,
	343, 347, 355, 356, 357, 358, 359, 361, 362, 366,
	367, 368, 369, 377, 381, 396, 397, 408, 420, 425,
	246, 404, 426, 0, 281, 0, 0, 283, 231, 248,
	258, 0, 415, 378, 188, 349, 238, 177, 205, 191,
	212, 226, 228, 262, 291, 297, 326, 329, 243, 223,
	203, 346, 200, 364, 384, 385, 386, 388, 295, 219,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 327,
	0, 365, 208, 280, 278, 393, 232, 225, 221, 207,
	255, 286, 325, 383, 319, 546, 275, 0, 0, 374,
	298, 0, 0, 0, 0, 0, 537, 538, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 206, 175, 310,
	375, 236, 71, 0, 0, 167, 168, 169, 524, 523,
	526, 527, 528, 529, 0, 0, 197, 525, 204, 530,
	531, 532, 0, 218, 259, 224, 217, 390, 0, 0,
	0, 0, 517, 0, 545, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 514, 515, 0, 0, 0, 0,
	561, 0, 516, 0, 0, 509, 510, 512, 511, 513,
	518, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 299, 0, 560, 0, 0, 422, 0, 0,
	558, 0, 0, 0, 0, 0, 270, 0, 267, 171,
	186, 0, 0, 309, 348, 354, 0, 0, 0, 209,
	0, 352, 323, 407, 193, 234, 345, 328, 350, 2197,
	0, 351, 276, 395, 340, 405, 423, 424, 216, 303,
	413, 387, 419, 434, 187, 213, 317, 380, 410, 371,
	296, 391, 392, 266, 370, 242, 174, 274, 431, 185,
	360, 201, 178, 382, 403, 198, 363, 0, 0, 0,
	180, 401, 379, 293, 263, 264, 179, 0, 344, 220,
	240, 211, 312, 398, 399, 210, 436, 189, 418, 182,
	0, 417, 305, 394, 402, 294, 285, 181, 400, 292,
	284, 269, 230, 250, 338, 279, 339, 251, 301, 300,
	302, 0, 176, 0, 376, 411, 437, 194, 195, 196,
	0, 229, 233, 239, 241, 0, 247, 254, 272, 316,
	337, 335, 341, 0, 389, 406, 414, 421, 427, 428,
	432, 429, 430, 433, 304, 190, 253, 372, 268, 277,
	0, 0, 322, 353, 199, 409, 373, 548, 559, 554,
	555, 552, 553, 547, 551, 550, 549, 562, 539, 540,
	541, 542, 544, 0, 556, 557, 543, 170, 183, 273,
	0, 342, 237, 435, 416, 412, 0, 0, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 173, 184, 192, 202, 214, 227, 235, 245,
	249, 252, 256, 257, 260, 265, 282, 287, 288, 289,
	290, 306, 307, 308, 311, 314, 315, 318, 320, 321,
	324, 330, 331, 332, 333, 334, 336, 343, 347, 355,
	356, 357, 358, 359, 361, 362, 366, 367, 368, 369,
	377, 381, 396, 397, 408, 420, 425, 246, 404, 426,
	0, 281, 0, 0, 283, 231, 248, 258, 0, 415,
	378, 188, 349, 238, 177, 205, 191, 212, 226, 228,
	262, 291, 297, 326, 329, 243, 223, 203, 346, 200,
	364, 384, 385, 386, 388, 295, 219, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 327, 0, 365, 208,
	280, 278, 393, 232, 225, 221, 207, 255, 286, 325,
	383, 319, 546, 275, 0, 0, 374, 298, 0, 0,
	0, 0, 0, 537, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 206, 175, 310, 375, 236, 71,
	0, 580, 167, 168, 169, 524, 523, 526, 527, 528,
	529, 0, 0, 197, 525, 204, 530, 531, 532, 0,
	218, 259, 224, 217, 390, 0, 0, 0, 0, 517,
	0, 545, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 514, 515, 0, 0, 0, 0, 561, 0, 516,
	0, 0, 509, 510, 512, 511, 513, 518, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 299,
	0, 560, 0, 0, 422, 0, 0, 558, 0, 0,
	0, 0, 0, 270, 0, 267, 171, 186, 0, 0,
	309, 348, 354, 0, 0, 0, 209, 0, 352, 323,
	407, 193, 234, 345, 328, 350, 0, 0, 351, 276,
	395, 340, 405, 423, 424, 216, 303, 413, 387, 419,
	434, 187, 213, 317, 380, 410, 371, 296, 391, 392,
	266, 370, 242, 174, 274, 431, 185, 360, 201, 178,
	382, 403, 198, 363, 0, 0, 0, 180, 401, 379,
	293, 263, 264, 179, 0, 344, 220, 240, 211, 312,
	398, 399, 210, 436, 189, 418, 182, 0, 417, 305,
	394, 402, 294, 285, 181, 400, 292, 284, 269, 230,
	250, 338, 279, 339, 251, 301, 300, 302, 0, 176,
	0, 376, 411, 437, 194, 195, 196, 0, 229, 233,
	239, 241, 0, 247, 254, 272, 316, 337, 335, 341,
	0, 389, 406, 414, 421, 427, 428, 432, 429, 430,
	433, 304, 190, 253, 372, 268, 277, 0, 0, 322,
	353, 199, 409, 373, 548, 559, 554, 555, 552, 553,
	547, 551, 550, 549, 562, 539, 540, 541, 542, 544,
	0, 556, 557, 543, 170, 183, 273, 0, 342, 237,
	435, 416, 412, 0, 0, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 173,
	184, 192, 202, 214, 227, 235, 245, 249, 252, 256,
	257, 260, 265, 282, 287, 288, 289, 290, 306, 307,
	308, 311, 314, 315, 318, 320, 321, 324, 330, 331,
	332, 333, 334, 336, 343, 347, 355, 356, 357, 358,
	359, 361, 362, 366, 367, 368, 369, 377, 381, 396,
	397, 408, 420, 425, 246, 404, 426, 0, 281, 0,
	0, 283, 231, 248, 258, 0, 415, 378, 188, 349,
	238, 177, 205, 191, 212, 226, 228, 262, 291, 297,
	326, 329, 243, 223, 203, 346, 200, 364, 384, 385,
	386, 388, 295, 219, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 327, 0, 365, 208, 280, 278, 393,
	232, 225, 221, 207, 255, 286, 325, 383, 319, 546,
	275, 0, 0, 374, 298, 0, 0, 0, 0, 0,
	537, 538, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 206, 175, 310, 375, 236, 71, 0, 0, 167,
	168, 169, 524, 523, 526, 527, 528, 529, 0, 0,
	197, 525, 204, 530, 531, 532, 0, 218, 259, 224,
	217, 390, 0, 0, 0, 0, 517, 0, 545, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 514, 515,
	0, 0, 0, 0, 561, 0, 516, 0, 0, 509,
	510, 512, 511, 513, 518, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 299, 0, 560, 0,
	0, 422, 0, 0, 558, 0, 0, 0, 0, 0,
	270, 0, 267, 171, 186, 0, 0, 309, 348, 354,
	0, 0, 0, 209, 0, 352, 323, 407, 193, 234,
	345, 328, 350, 0, 0, 351, 276, 395, 340, 405,
	423, 424, 216, 303, 413, 387, 419, 434, 187, 213,
	317, 380, 410, 371, 296, 391, 392, 266, 370, 242,
	174, 274, 431, 185, 360, 201, 178, 382, 403, 198,
	363, 0, 0, 0, 180, 401, 379, 293, 263, 264,
	179, 0, 344, 220, 240, 211, 312, 398, 399, 210,
	436, 189, 418, 182, 0, 417, 305, 394, 402, 294,
	285, 181, 400, 292, 284, 269, 230, 250, 338, 279,
	339, 251, 301, 300, 302, 0, 176, 0, 376, 411,
	437, 194, 195, 196, 0, 229, 233, 239, 241, 0,
	247, 254, 272, 316, 337, 335, 341, 0, 389, 406,
	414, 421, 427, 428, 432, 429, 430, 433, 304, 190,
	253, 372, 268, 277, 0, 0, 322, 353, 199, 409,
	373, 548, 559, 554, 555, 552, 553, 547, 551, 550,
	549, 562, 539, 540, 541, 542, 544, 0, 556, 557,
	543, 170, 183, 273, 0, 342, 237, 435, 416, 412,
	0, 0, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 173, 184, 192, 202,
	214, 227, 235, 245, 249, 252, 256, 257, 260, 265,
	282, 287, 288, 289, 290, 306, 307, 308, 311, 314,
	315, 318, 320, 321, 324, 330, 331, 332, 333, 334,
	336, 343, 347, 355, 356, 357, 358, 359, 361, 362,
	366, 367, 368, 369, 377, 381, 396, 397, 408, 420,
	425, 246, 404, 426, 0, 281, 0, 0, 283, 231,
	248, 258, 0, 415, 378, 188, 349, 238, 177, 205,
	191, 212, 226, 228, 262, 291, 297, 326, 329, 243,
	223, 203, 346, 200, 364, 384, 385, 386, 388, 295,
	219, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 796, 0, 0, 0, 0, 271, 0, 0, 0,
	327, 0, 365, 208, 280, 278, 393, 232, 225, 221,
	207, 255, 286, 325, 383, 319, 0, 275, 0, 0,
	374, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 206, 175,
	310, 375, 236, 0, 0, 0, 167, 168, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 197, 0, 204,
	0, 0, 0, 0, 218, 259, 224, 217, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 299, 0, 0, 0, 795, 422, 0,
	0, 0, 0, 0, 0, 792, 793, 270, 758, 267,
	171, 186, 786, 790, 309, 348, 354, 0, 0, 0,
	209, 0, 352, 323, 407, 193, 234, 345, 328, 350,
	0, 0, 351, 276, 395, 340, 405, 423, 424, 216,
	303, 413, 387, 419, 434, 187, 213, 317, 380, 410,
	371, 296, 391, 392, 266, 370, 242, 174, 274, 431,
	185, 360, 201, 178, 382, 403, 198, 363, 0, 0,
	0, 180, 401, 379, 293, 263, 264, 179, 0, 344,
	220, 240, 211, 312, 398, 399, 210, 436, 189, 418,
	182, 0, 417, 305, 394, 402, 294, 285, 181, 400,
	292, 284, 269, 230, 250, 338, 279, 339, 251, 301,
	300, 302, 0, 176, 0, 376, 411, 437, 194, 195,
	196, 0, 229, 233, 239, 241, 0, 247, 254, 272,
	316, 337, 335, 341, 0, 389, 406, 414, 421, 427,
	428, 432, 429, 430, 433, 304, 190, 253, 372, 268,
	277, 0, 0, 322, 353, 199, 409, 373, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 183,
	273, 0, 342, 237, 435, 416, 412, 0, 0, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 173, 184, 192, 202, 214, 227, 235,
	245, 249, 252, 256, 257, 260, 265, 282, 287, 288,
	289, 290, 306, 307, 308, 311, 314, 315, 318, 320,
	321, 324, 330, 331, 332, 333, 334, 336, 343, 347,
	355, 356, 357, 358, 359, 361, 362, 366, 367, 368,
	369, 377, 381, 396, 397, 408, 420, 425, 246, 404,
	426, 0, 281, 0, 0, 283, 231, 248, 258, 0,
	415, 378, 188, 349, 238, 177, 205, 191, 212, 226,
	228, 262, 291, 297, 326, 329, 243, 223, 203, 346,
	200, 364, 384, 385, 386, 388, 295, 219, 313, 0,
	0, 0, 1070, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 327, 0, 365,
	208, 280, 278, 393, 232, 225, 221, 207, 255, 286,
	325, 383, 319, 0, 275, 0, 0, 374, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 206, 175, 310, 375, 236,
	0, 0, 0, 167, 168, 169, 0, 1072, 0, 0,
	0, 0, 0, 0, 197, 0, 204, 0, 0, 0,
	0, 218, 259, 224, 217, 390, 956, 957, 955, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 958, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	299, 0, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 267, 171, 186, 0,
	0, 309, 348, 354, 0, 0, 0, 209, 0, 352,
	323, 407, 193, 234, 345, 328, 350, 0, 0, 351,
	276, 395, 340, 405, 423, 424, 216, 303, 413, 387,
	419, 434, 187, 213, 317, 380, 410, 371, 296, 391,
	392, 266, 370, 242, 174, 274, 431, 185, 360, 201,
	178, 382, 403, 198, 363, 0, 0, 0, 180, 401,
	379, 293, 263, 264, 179, 0, 344, 220, 240, 211,
	312, 398, 399, 210, 436, 189, 418, 182, 0, 417,
	305, 394, 402, 294, 285, 181, 400, 292, 284, 269,
	230, 250, 338, 279, 339, 251, 301, 300, 302, 0,
	176, 0, 376, 411, 437, 194, 195, 196, 0, 229,
	233, 239, 241, 0, 247, 254, 272, 316, 337, 335,
	341, 0, 389, 406, 414, 421, 427, 428, 432, 429,
	430, 433, 304, 190, 253, 372, 268, 277, 0, 0,
	322, 353, 199, 409, 373, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 170, 183, 273, 0, 342,
	237, 435, 416, 412, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	173, 184, 192, 202, 214, 227, 235, 245, 249, 252,
	256, 257, 260, 265, 282, 287, 288, 289, 290, 306,
	307, 308, 311, 314, 315, 318, 320, 321, 324, 330,
	331, 332, 333, 334, 336, 343, 347, 355, 356, 357,
	358, 359, 361, 362, 366, 367, 368, 369, 377, 381,
	396, 397, 408, 420, 425, 246, 404, 426, 0, 281,
	0, 0, 283, 231, 248, 258, 0, 415, 378, 188,
	349, 238, 177, 205, 191, 212, 226, 228, 262, 291,
	297, 326, 329, 243, 223, 203, 346, 200, 364, 384,
	385, 386, 388, 295, 219, 35, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 327, 0, 365,
	208, 280, 278, 393, 232, 225, 221, 207, 255, 286,
	325, 383, 319, 0, 275, 0, 0, 374, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 206, 175, 310, 375, 236,
	71, 0, 580, 167, 168, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 197, 0, 204, 0, 0, 0,
	0, 218, 259, 224, 217, 390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	299, 0, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 267, 171, 186, 0,
	0, 309, 348, 354, 0, 0, 0, 209, 0, 352,
	323, 407, 193, 234, 345, 328, 350, 0, 0, 351,
	276, 395, 340, 405, 423, 424, 216, 303, 413, 387,
	419, 434, 187, 213, 317, 380, 410, 371, 296, 391,
	392, 266, 370, 242, 174, 274, 431, 185, 360, 201,
	178, 382, 403, 198, 363, 0, 0, 0, 180, 401,
	379, 293, 263, 264, 179, 0, 344, 220, 240, 211,
	312, 398, 399, 210, 436, 189, 418, 182, 0, 417,
	305, 394, 402, 294, 285, 181, 400, 292, 284, 269,
	230, 250, 338, 279, 339, 251, 301, 300, 302, 0,
	176, 0, 376, 411, 437, 194, 195, 196, 0, 229,
	233, 239, 241, 0, 247, 254, 272, 316, 337, 335,
	341, 0, 389, 406, 414, 421, 427, 428, 432, 429,
	430, 433, 304, 190, 253, 372, 268, 277, 0, 0,
	322, 353, 199, 409, 373, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 170, 183, 273, 0, 342,
	237, 435, 416, 412, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	173, 184, 192, 202, 214, 227, 235, 245, 249, 252,
	256, 257, 260, 265, 282, 287, 288, 289, 290, 306,
	307, 308, 311, 314, 315, 318, 320, 321, 324, 330,
	331, 332, 333, 334, 336, 343, 347, 355, 356, 357,
	358, 359, 361, 362, 366, 367, 368, 369, 377, 381,
	396, 397, 408, 420, 425, 246, 404, 426, 0, 281,
	0, 0, 283, 231, 248, 258, 0, 415, 378, 188,
	349, 238, 177, 205, 191, 212, 226, 228, 262, 291,
	297, 326, 329, 243, 223, 203, 346, 200, 364, 384,
	385, 386, 388, 295, 219, 313, 0, 0, 0, 1437,
	0, 0, 0, 0, 222, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 327, 0, 365, 208, 280, 278,
	393, 232, 225, 221, 207, 255, 286, 325, 383, 319,
	0, 275, 0, 0, 374, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 206, 175, 310, 375, 236, 0, 0, 0,
	167, 168, 169, 0, 1439, 0, 0, 0, 0, 0,
	0, 197, 0, 204, 0, 0, 0, 0, 218, 259,
	224, 217, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 299, 0, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 267, 171, 186, 0, 0, 309, 348,
	354, 0, 0, 0, 209, 0, 352, 323, 407, 193,
	234, 345, 328, 350, 0, 1435, 351, 276, 395, 340,
	405, 423, 424, 216, 303, 413, 387, 419, 434, 187,
	213, 317, 380, 410, 371, 296, 391, 392, 266, 370,
	242, 174, 274, 431, 185, 360, 201, 178, 382, 403,
	198, 363, 0, 0, 0, 180, 401, 379, 293, 263,
	264, 179, 0, 344, 220, 240, 211, 312, 398, 399,
	210, 436, 189, 418, 182, 0, 417, 305, 394, 402,
	294, 285, 181, 400, 292, 284, 269, 230, 250, 338,
	279, 339, 251, 301, 300, 302, 0, 176, 0, 376,
	411, 437, 194, 195, 196, 0, 229, 233, 239, 241,
	0, 247, 254, 272, 316, 337, 335, 341, 0, 389,
	406, 414, 421, 427, 428, 432, 429, 430, 433, 304,
	190, 253, 372, 268, 277, 0, 0, 322, 353, 199,
	409, 373, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 183, 273, 0, 342, 237, 435, 416,
	412, 0, 0, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 173, 184, 192,
	202, 214, 227, 235, 245, 249, 252, 256, 257, 260,
	265, 282, 287, 288, 289, 290, 306, 307, 308, 311,
	314, 315, 318, 320, 321, 324, 330, 331, 332, 333,
	334, 336, 343, 347, 355, 356, 357, 358, 359, 361,
	362, 366, 367, 368, 369, 377, 381, 396, 397, 408,
	420, 425, 246, 404, 426, 0, 281, 0, 0, 283,
	231, 248, 258, 0, 415, 378, 188, 349, 238, 177,
	205, 191, 212, 226, 228, 262, 291, 297, 326, 329,
	243, 223, 203, 346, 200, 364, 384, 385, 386, 388,
	295, 219, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 327, 0, 365, 208, 280, 278, 393, 232, 225,
	221, 207, 255, 286, 325, 383, 319, 0, 275, 0,
	0, 374, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 206,
	175, 310, 375, 236, 0, 0, 0, 167, 168, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 197, 0,
	204, 0, 0, 0, 0, 218, 259, 224, 217, 390,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 752,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 299, 0, 0, 0, 0, 422,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 758,
	267, 171, 186, 756, 0, 309, 348, 354, 0, 0,
	0, 209, 0, 352, 323, 407, 193, 234, 345, 328,
	350, 0, 0, 351, 276, 395, 340, 405, 423, 424,
	216, 303, 413, 387, 419, 434, 187, 213, 317, 380,
	410, 371, 296, 391, 392, 266, 370, 242, 174, 274,
	431, 185, 360, 201, 178, 382, 403, 198, 363, 0,
	0, 0, 180, 401, 379, 293, 263, 264, 179, 0,
	344, 220, 240, 211, 312, 398, 399, 210, 436, 189,
	418, 182, 0, 417, 305, 394, 402, 294, 285, 181,
	400, 292, 284, 269, 230, 250, 338, 279, 339, 251,
	301, 300, 302, 0, 176, 0, 376, 411, 437, 194,
	195, 196, 0, 229, 233, 239, 241, 0, 247, 254,
	272, 316, 337, 335, 341, 0, 389, 406, 414, 421,
	427, 428, 432, 429, 430, 433, 304, 190, 253, 372,
	268, 277, 0, 0, 322, 353, 199, 409, 373, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 170,
	183, 273, 0, 342, 237, 435, 416, 412, 0, 0,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 173, 184, 192, 202, 214, 227,
	235, 245, 249, 252, 256, 257, 260, 265, 282, 287,
	288, 289, 290, 306, 307, 308, 311, 314, 315, 318,
	320, 321, 324, 330, 331, 332, 333, 334, 336, 343,
	347, 355, 356, 357, 358, 359, 361, 362, 366, 367,
	368, 369, 377, 381, 396, 397, 408, 420, 425, 246,
	404, 426, 0, 281, 0, 0, 283, 231, 248, 258,
	0, 415, 378, 188, 349, 238, 177, 205, 191, 212,
	226, 228, 262, 291, 297, 326, 329, 243, 223, 203,
	346, 200, 364, 384, 385, 386, 388, 295, 219, 313,
	0, 0, 0, 1437, 0, 0, 0, 0, 222, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 327, 0,
	365, 208, 280, 278, 393, 232, 225, 221, 207, 255,
	286, 325, 383, 319, 0, 275, 0, 0, 374, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 206, 175, 310, 375,
	236, 0, 0, 0, 167, 168, 169, 0, 1439, 0,
	0, 0, 0, 0, 0, 197, 0, 204, 0, 0,
	0, 0, 218, 259, 224, 217, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 299, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 267, 171, 186,
	0, 0, 309, 348, 354, 0, 0, 0, 209, 0,
	352, 323, 407, 193, 234, 345, 328, 350, 0, 0,
	351, 276, 395, 340, 405, 423, 424, 216, 303, 413,
	387, 419, 434, 187, 213, 317, 380, 410, 371, 296,
	391, 392, 266, 370, 242, 174, 274, 431, 185, 360,
	201, 178, 382, 403, 198, 363, 0, 0, 0, 180,
	401, 379, 293, 263, 264, 179, 0, 344, 220, 240,
	211, 312, 398, 399, 210, 436, 189, 418, 182, 0,
	417, 305, 394, 402, 294, 285, 181, 400, 292, 284,
	269, 230, 250, 338, 279, 339, 251, 301, 300, 302,
	0, 176, 0, 376, 411, 437, 194, 195, 196, 0,
	229, 233, 239, 241, 0, 247, 254, 272, 316, 337,
	335, 341, 0, 389, 406, 414, 421, 427, 428, 432,
	429, 430, 433, 304, 190, 253, 372, 268, 277, 0,
	0, 322, 353, 199, 409, 373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 183, 273, 0,
	342, 237, 435, 416, 412, 0, 0, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 173, 184, 192, 202, 214, 227, 235, 245, 249,
	252, 256, 257, 260, 265, 282, 287, 288, 289, 290,
	306, 307, 308, 311, 314, 315, 318, 320, 321, 324,
	330, 331, 332, 333, 334, 336, 343, 347, 355, 356,
	357, 358, 359, 361, 362, 366, 367, 368, 369, 377,
	381, 396, 397, 408, 420, 425, 246, 404, 426, 0,
	281, 0, 0, 283, 231, 248, 258, 0, 415, 378,
	188, 349, 238, 177, 205, 191, 212, 226, 228, 262,
	291, 297, 326, 329, 243, 223, 203, 346, 200, 364,
	384, 385, 386, 388, 295, 219, 35, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 327, 0,
	365, 208, 280, 278, 393, 232, 225, 221, 207, 255,
	286, 325, 383, 319, 0, 275, 0, 0, 374, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 206, 175, 310, 375,
	236, 71, 0, 0, 167, 168, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 197, 0, 204, 0, 0,
	0, 0, 218, 259, 224, 217, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 299, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 267, 171, 186,
	0, 0, 309, 348, 354, 0, 0, 0, 209, 0,
	352, 323, 407, 193, 234, 345, 328, 350, 0, 0,
	351, 276, 395, 340, 405, 423, 424, 216, 303, 413,
	387, 419, 434, 187, 213, 317, 380, 410, 371, 296,
	391, 392, 266, 370, 242, 174, 274, 431, 185, 360,
	201, 178, 382, 403, 198, 363, 0, 0, 0, 180,
	401, 379, 293, 263, 264, 179, 0, 344, 220, 240,
	211, 312, 398, 399, 210, 436, 189, 418, 182, 0,
	417, 305, 394, 402, 294, 285, 181, 400, 292, 284,
	269, 230, 250, 338, 279, 339, 251, 301, 300, 302,
	0, 176, 0, 376, 411, 437, 194, 195, 196, 0,
	229, 233, 239, 241, 0, 247, 254, 272, 316, 337,
	335, 341, 0, 389, 406, 414, 421, 427, 428, 432,
	429, 430, 433, 304, 190, 253, 372, 268, 277, 0,
	0, 322, 353, 199, 409, 373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 183, 273, 0,
	342, 237, 435, 416, 412, 0, 0, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 173, 184, 192, 202, 214, 227, 235, 245, 249,
	252, 256, 257, 260, 265, 282, 287, 288, 289, 290,
	306, 307, 308, 311, 314, 315, 318, 320, 321, 324,
	330, 331, 332, 333, 334, 336, 343, 347, 355, 356,
	357, 358, 359, 361, 362, 366, 367, 368, 369, 377,
	381, 396, 397, 408, 420, 425, 246, 404, 426, 0,
	281, 0, 0, 283, 231, 248, 258, 0, 415, 378,
	188, 349, 238, 177, 205, 191, 212, 226, 228, 262,
	291, 297, 326, 329, 243, 223, 203, 346, 200, 364,
	384, 385, 386, 388, 295, 219, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 327, 0, 365, 208, 280,
	278, 393, 232, 225, 221, 207, 255, 286, 325, 383,
	319, 0, 275, 0, 0, 374, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 206, 175, 310, 375, 236, 0, 0,
	0, 167, 168, 169, 0, 0, 1458, 0, 0, 1459,
	0, 0, 197, 0, 204, 0, 0, 0, 0, 218,
	259, 224, 217, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 299, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 267, 171, 186, 0, 0, 309,
	348, 354, 0, 0, 0, 209, 0, 352, 323, 407,
	193, 234, 345, 328, 350, 0, 0, 351, 276, 395,
	340, 405, 423, 424, 216, 303, 413, 387, 419, 434,
	187, 213, 317, 380, 410, 371, 296, 391, 392, 266,
	370, 242, 174, 274, 431, 185, 360, 201, 178, 382,
	403, 198, 363, 0, 0, 0, 180, 401, 379, 293,
	263, 264, 179, 0, 344, 220, 240, 211, 312, 398,
	399, 210, 436, 189, 418, 182, 0, 417, 305, 394,
	402, 294, 285, 181, 400, 292, 284, 269, 230, 250,
	338, 279, 339, 251, 301, 300, 302, 0, 176, 0,
	376, 411, 437, 194, 195, 196, 0, 229, 233, 239,
	241, 0, 247, 254, 272, 316, 337, 335, 341, 0,
	389, 406, 414, 421, 427, 428, 432, 429, 430, 433,
	304, 190, 253, 372, 268, 277, 0, 0, 322, 353,
	199, 409, 373, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 170, 183, 273, 0, 342, 237, 435,
	416, 412, 0, 0, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 173, 184,
	192, 202, 214, 227, 235, 245, 249, 252, 256, 257,
	260, 265, 282, 287, 288, 289, 290, 306, 307, 308,
	311, 314, 315, 318, 320, 321, 324, 330, 331, 332,
	333, 334, 336, 343, 347, 355, 356, 357, 358, 359,
	361, 362, 366, 367, 368, 369, 377, 381, 396, 397,
	408, 420, 425, 246, 404, 426, 0, 281, 0, 0,
	283, 231, 248, 258, 0, 415, 378, 188, 349, 238,
	177, 205, 191, 212, 226, 228, 262, 291, 297, 326,
	329, 243, 223, 203, 346, 200, 364, 384, 385, 386,
	388, 295, 219, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 1103, 0, 0, 0, 271, 0,
	0, 0, 327, 0, 365, 208, 280, 278, 393, 232,
	225, 221, 207, 255, 286, 325, 383, 319, 0, 275,
	0, 0, 374, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	206, 175, 310, 375, 236, 0, 0, 0, 167, 168,
	169, 0, 1102, 0, 0, 0, 0, 0, 0, 197,
	0, 204, 0, 0, 0, 0, 218, 259, 224, 217,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 299, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 267, 171, 186, 0, 0, 309, 348, 354, 0,
	0, 0, 209, 0, 352, 323, 407, 193, 234, 345,
	328, 350, 0, 0, 351, 276, 395, 340, 405, 423,
	424, 216, 303, 413, 387, 419, 434, 187, 213, 317,
	380, 410, 371, 296, 391, 392, 266, 370, 242, 174,
	274, 431, 185, 360, 201, 178, 382, 403, 198, 363,
	0, 0, 0, 180, 401, 379, 293, 263, 264, 179,
	0, 344, 220, 240, 211, 312, 398, 399, 210, 436,
	189, 418, 182, 0, 417, 305, 394, 402, 294, 285,
	181, 400, 292, 284, 269, 230, 250, 338, 279, 339,
	251, 301, 300, 302, 0, 176, 0, 376, 411, 437,
	194, 195, 196, 0, 229, 233, 239, 241, 0, 247,
	254, 272, 316, 337, 335, 341, 0, 389, 406, 414,
	421, 427, 428, 432, 429, 430, 433, 304, 190, 253,
	372, 268, 277, 0, 0, 322, 353, 199, 409, 373,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	170, 183, 273, 0, 342, 237, 435, 416, 412, 0,
	0, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 173, 184, 192, 202, 214,
	227, 235, 245, 249, 252, 256, 257, 260, 265, 282,
	287, 288, 289, 290, 306, 307, 308, 311, 314, 315,
	318, 320, 321, 324, 330, 331, 332, 333, 334, 336,
	343, 347, 355, 356, 357, 358, 359, 361, 362, 366,
	367, 368, 369, 377, 381, 396, 397, 408, 420, 425,
	246, 404, 426, 0, 281, 0, 0, 283, 231, 248,
	258, 0, 415, 378, 188, 349, 238, 177, 205, 191,
	212, 226, 228, 262, 291, 297, 326, 329, 243, 223,
	203, 346, 200, 364, 384, 385, 386, 388, 295, 219,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 327,
	0, 365, 208, 280, 278, 393, 232, 225, 221, 207,
	255, 286, 325, 383, 319, 0, 275, 0, 0, 374,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 206, 175, 310,
	375, 236, 0, 0, 580, 167, 168, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 197, 0, 204, 0,
	0, 0, 0, 218, 259, 224, 217, 390, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 299, 0, 0, 0, 0, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 267, 171,
	186, 0, 0, 309, 348, 354, 0, 0, 0, 209,
	0, 352, 323, 407, 193, 234, 345, 328, 350, 0,
	0, 351, 276, 395, 340, 405, 423, 424, 216, 303,
	413, 387, 419, 434, 187, 213, 317, 380, 410, 371,
	296, 391, 392, 266, 370, 242, 174, 274, 431, 185,
	360, 201, 178, 382, 403, 198, 363, 0, 0, 0,
	180, 401, 379, 293, 263, 264, 179, 0, 344, 220,
	240, 211, 312, 398, 399, 210, 436, 189, 418, 182,
	0, 417, 305, 394, 402, 294, 285, 181, 400, 292,
	284, 269, 230, 250, 338, 279, 339, 251, 301, 300,
	302, 0, 176, 0, 376, 411, 437, 194, 195, 196,
	0, 229, 233, 239, 241, 0, 247, 254, 272, 316,
	337, 335, 341, 0, 389, 406, 414, 421, 427, 428,
	432, 429, 430, 433, 304, 190, 253, 372, 268, 277,
	0, 0, 322, 353, 199, 409, 373, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 170, 183, 273,
	0, 342, 237, 435, 416, 412, 0, 0, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 173, 184, 192, 202, 214, 227, 235, 245,
	249, 252, 256, 257, 260, 265, 282, 287, 288, 289,
	290, 306, 307, 308, 311, 314, 315, 318, 320, 321,
	324, 330, 331, 332, 333, 334, 336, 343, 347, 355,
	356, 357, 358, 359, 361, 362, 366, 367, 368, 369,
	377, 381, 396, 397, 408, 420, 425, 246, 404, 426,
	0, 281, 0, 0, 283, 231, 248, 258, 0, 415,
	378, 188, 349, 238, 177, 205, 191, 212, 226, 228,
	262, 291, 297, 326, 329, 243, 223, 203, 346, 200,
	364, 384, 385, 386, 388, 295, 219, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 327, 0, 365, 208,
	280, 278, 393, 232, 225, 221, 207, 255, 286, 325,
	383, 319, 0, 275, 0, 0, 374, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 206, 175, 310, 375, 236, 71,
	0, 0, 167, 168, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 197, 0, 204, 0, 0, 0, 0,
	218, 259, 224, 217, 390, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 299,
	0, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 267, 171, 186, 0, 0,
	309, 348, 354, 0, 0, 0, 209, 0, 352, 323,
	407, 193, 234, 345, 328, 350, 0, 0, 351, 276,
	395, 340, 405, 423, 424, 216, 303, 413, 387, 419,
	434, 187, 213, 317, 380, 410, 371, 296, 391, 392,
	266, 370, 242, 174, 274, 431, 185, 360, 201, 178,
	382, 403, 198, 363, 0, 0, 0, 180, 401, 379,
	293, 263, 264, 179, 0, 344, 220, 240, 211, 312,
	398, 399, 210, 436, 189, 418, 182, 0, 417, 305,
	394, 402, 294, 285, 181, 400, 292, 284, 269, 230,
	250, 338, 279, 339, 251, 301, 300, 302, 0, 176,
	0, 376, 411, 437, 194, 195, 196, 0, 229, 233,
	239, 241, 0, 247, 254, 272, 316, 337, 335, 341,
	0, 389, 406, 414, 421, 427, 428, 432, 429, 430,
	433, 304, 190, 253, 372, 268, 277, 0, 0, 322,
	353, 199, 409, 373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 170, 183, 273, 0, 342, 237,
	435, 416, 412, 0, 0, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 173,
	184, 192, 202, 214, 227, 235, 245, 249, 252, 256,
	257, 260, 265, 282, 287, 288, 289, 290, 306, 307,
	308, 311, 314, 315, 318, 320, 321, 324, 330, 331,
	332, 333, 334, 336, 343, 347, 355, 356, 357, 358,
	359, 361, 362, 366, 367, 368, 369, 377, 381, 396,
	397, 408, 420, 425, 246, 404, 426, 0, 281, 0,
	0, 283, 231, 248, 258, 0, 415, 378, 188, 349,
	238, 177, 205, 191, 212, 226, 228, 262, 291, 297,
	326, 329, 243, 223, 203, 346, 200, 364, 384, 385,
	386, 388, 295, 219, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 327, 0, 365, 208, 280, 278, 393,
	232, 225, 221, 207, 255, 286, 325, 383, 319, 0,
	275, 0, 0, 374, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 206, 175, 310, 375, 236, 0, 0, 0, 167,
	168, 169, 0, 1439, 0, 0, 0, 0, 0, 0,
	197, 0, 204, 0, 0, 0, 0, 218, 259, 224,
	217, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 299, 0, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 267, 171, 186, 0, 0, 309, 348, 354,
	0, 0, 0, 209, 0, 352, 323, 407, 193, 234,
	345, 328, 350, 0, 0, 351, 276, 395, 340, 405,
	423, 424, 216, 303, 413, 387, 419, 434, 187, 213,
	317, 380, 410, 371, 296, 391, 392, 266, 370, 242,
	174, 274, 431, 185, 360, 201, 178, 382, 403, 198,
	363, 0, 0, 0, 180, 401, 379, 293, 263, 264,
	179, 0, 344, 220, 240, 211, 312, 398, 399, 210,
	436, 189, 418, 182, 0, 417, 305, 394, 402, 294,
	285, 181, 400, 292, 284, 269, 230, 250, 338, 279,
	339, 251, 301, 300, 302, 0, 176, 0, 376, 411,
	437, 194, 195, 196, 0, 229, 233, 239, 241, 0,
	247, 254, 272, 316, 337, 335, 341, 0, 389, 406,
	414, 421, 427, 428, 432, 429, 430, 433, 304, 190,
	253, 372, 268, 277, 0, 0, 322, 353, 199, 409,
	373, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 170, 183, 273, 0, 342, 237, 435, 416, 412,
	0, 0, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 173, 184, 192, 202,
	214, 227, 235, 245, 249, 252, 256, 257, 260, 265,
	282, 287, 288, 289, 290, 306, 307, 308, 311, 314,
	315, 318, 320, 321, 324, 330, 331, 332, 333, 334,
	336, 343, 347, 355, 356, 357, 358, 359, 361, 362,
	366, 367, 368, 369, 377, 381, 396, 397, 408, 420,
	425, 246, 404, 426, 0, 281, 0, 0, 283, 231,
	248, 258, 0, 415, 378, 188, 349, 238, 177, 205,
	191, 212, 226, 228, 262, 291, 297, 326, 329, 243,
	223, 203, 346, 200, 364, 384, 385, 386, 388, 295,
	219, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	327, 0, 365, 208, 280, 278, 393, 232, 225, 221,
	207, 255, 286, 325, 383, 319, 0, 275, 0, 0,
	374, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 206, 175,
	310, 375, 236, 0, 0, 0, 167, 168, 169, 0,
	1072, 0, 0, 0, 0, 0, 0, 197, 0, 204,
	0, 0, 0, 0, 218, 259, 224, 217, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 299, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 267,
	171, 186, 0, 0, 309, 348, 354, 0, 0, 0,
	209, 0, 352, 323, 407, 193, 234, 345, 328, 350,
	0, 0, 351, 276, 395, 340, 405, 423, 424, 216,
	303, 413, 387, 419, 434, 187, 213, 317, 380, 410,
	371, 296, 391, 392, 266, 370, 242, 174, 274, 431,
	185, 360, 201, 178, 382, 403, 198, 363, 0, 0,
	0, 180, 401, 379, 293, 263, 264, 179, 0, 344,
	220, 240, 211, 312, 398, 399, 210, 436, 189, 418,
	182, 0, 417, 305, 394, 402, 294, 285, 181, 400,
	292, 284, 269, 230, 250, 338, 279, 339, 251, 301,
	300, 302, 0, 176, 0, 376, 411, 437, 194, 195,
	196, 0, 229, 233, 239, 241, 0, 247, 254, 272,
	316, 337, 335, 341, 0, 389, 406, 414, 421, 427,
	428, 432, 429, 430, 433, 304, 190, 253, 372, 268,
	277, 0, 0, 322, 353, 199, 409, 373, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 183,
	273, 0, 342, 237, 435, 416, 412, 0, 0, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 173, 184, 192, 202, 214, 227, 235,
	245, 249, 252, 256, 257, 260, 265, 282, 287, 288,
	289, 290, 306, 307, 308, 311, 314, 315, 318, 320,
	321, 324, 330, 331, 332, 333, 334, 336, 343, 347,
	355, 356, 357, 358, 359, 361, 362, 366, 367, 368,
	369, 377, 381, 396, 397, 408, 420, 425, 246, 404,
	426, 0, 281, 0, 0, 283, 231, 248, 258, 0,
	415, 378, 188, 349, 238, 177, 205, 191, 212, 226,
	228, 262, 291, 297, 326, 329, 243, 223, 203, 346,
	200, 364, 384, 385, 386, 388, 295, 219, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 327, 0, 365,
	208, 280, 278, 393, 232, 225, 221, 207, 255, 286,
	325, 383, 319, 0, 275, 0, 0, 374, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 206, 175, 310, 375, 236,
	0, 0, 0, 167, 168, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 197, 0, 204, 0, 0, 0,
	0, 218, 259, 224, 217, 390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	299, 0, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 267, 171, 186, 0,
	0, 309, 348, 354, 0, 0, 0, 209, 0, 352,
	323, 407, 193, 234, 345, 328, 350, 0, 0, 351,
	276, 395, 340, 405, 423, 424, 216, 303, 413, 387,
	419, 434, 187, 213, 317, 380, 410, 371, 296, 391,
	392, 266, 370, 242, 174, 274, 431, 185, 360, 201,
	178, 382, 403, 198, 363, 0, 0, 0, 180, 401,
	379, 293, 263, 264, 179, 0, 344, 220, 240, 211,
	312, 398, 399, 210, 436, 189, 418, 182, 0, 417,
	305, 394, 402, 294, 285, 181, 400, 292, 284, 269,
	230, 250, 338, 279, 339, 251, 301, 300, 302, 0,
	176, 0, 376, 411, 437, 194, 195, 196, 0, 229,
	233, 239, 241, 0, 247, 254, 272, 316, 337, 335,
	341, 0, 389, 406, 414, 421, 427, 428, 432, 429,
	430, 433, 304, 190, 253, 372, 268, 277, 0, 0,
	322, 353, 199, 409, 373, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 170, 183, 273, 1342, 342,
	237, 435, 416, 412, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	173, 184, 192, 202, 214, 227, 235, 245, 249, 252,
	256, 257, 260, 265, 282, 287, 288, 289, 290, 306,
	307, 308, 311, 314, 315, 318, 320, 321, 324, 330,
	331, 332, 333, 334, 336, 343, 347, 355, 356, 357,
	358, 359, 361, 362, 366, 367, 368, 369, 377, 381,
	396, 397, 408, 420, 425, 246, 404, 426, 0, 281,
	0, 0, 283, 231, 248, 258, 0, 415, 378, 188,
	349, 238, 177, 205, 191, 212, 226, 228, 262, 291,
	297, 326, 329, 243, 223, 203, 346, 200, 364, 384,
	385, 386, 388, 295, 219, 313, 0, 1225, 0, 0,
	0, 0, 0, 0, 222, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 327, 0, 365, 208, 280, 278,
	393, 232, 225, 221, 207, 255, 286, 325, 383, 319,
	0, 275, 0, 0, 374, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 206, 175, 310, 375, 236, 0, 0, 0,
	167, 168, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 197, 0, 204, 0, 0, 0, 0, 218, 259,
	224, 217, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 299, 0, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 267, 171, 186, 0, 0, 309, 348,
	354, 0, 0, 0, 209, 0, 352, 323, 407, 193,
	234, 345, 328, 350, 0, 0, 351, 276, 395, 340,
	405, 423, 424, 216, 303, 413, 387, 419, 434, 187,
	213, 317, 380, 410, 371, 296, 391, 392, 266, 370,
	242, 174, 274, 431, 185, 360, 201, 178, 382, 403,
	198, 363, 0, 0, 0, 180, 401, 379, 293, 263,
	264, 179, 0, 344, 220, 240, 211, 312, 398, 399,
	210, 436, 189, 418, 182, 0, 417, 305, 394, 402,
	294, 285, 181, 400, 292, 284, 269, 230, 250, 338,
	279, 339, 251, 301, 300, 302, 0, 176, 0, 376,
	411, 437, 194, 195, 196, 0, 229, 233, 239, 241,
	0, 247, 254, 272, 316, 337, 335, 341, 0, 389,
	406, 414, 421, 427, 428, 432, 429, 430, 433, 304,
	190, 253, 372, 268, 277, 0, 0, 322, 353, 199,
	409, 373, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 183, 273, 0, 342, 237, 435, 416,
	412, 0, 0, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 173, 184, 192,
	202, 214, 227, 235, 245, 249, 252, 256, 257, 260,
	265, 282, 287, 288, 289, 290, 306, 307, 308, 311,
	314, 315, 318, 320, 321, 324, 330, 331, 332, 333,
	334, 336, 343, 347, 355, 356, 357, 358, 359, 361,
	362, 366, 367, 368, 369, 377, 381, 396, 397, 408,
	420, 425, 246, 404, 426, 0, 281, 0, 0, 283,
	231, 248, 258, 0, 415, 378, 188, 349, 238, 177,
	205, 191, 212, 226, 228, 262, 291, 297, 326, 329,
	243, 223, 203, 346, 200, 364, 384, 385, 386, 388,
	295, 219, 313, 0, 1223, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 327, 0, 365, 208, 280, 278, 393, 232, 225,
	221, 207, 255, 286, 325, 383, 319, 0, 275, 0,
	0, 374, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 206,
	175, 310, 375, 236, 0, 0, 0, 167, 168, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 197, 0,
	204, 0, 0, 0, 0, 218, 259, 224, 217, 390,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 299, 0, 0, 0, 0, 422,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	267, 171, 186, 0, 0, 309, 348, 354, 0, 0,
	0, 209, 0, 352, 323, 407, 193, 234, 345, 328,
	350, 0, 0, 351, 276, 395, 340, 405, 423, 424,
	216, 303, 413, 387, 419, 434, 187, 213, 317, 380,
	410, 371, 296, 391, 392, 266, 370, 242, 174, 274,
	431, 185, 360, 201, 178, 382, 403, 198, 363, 0,
	0, 0, 180, 401, 379, 293, 263, 264, 179, 0,
	344, 220, 240, 211, 312, 398, 399, 210, 436, 189,
	418, 182, 0, 417, 305, 394, 402, 294, 285, 181,
	400, 292, 284, 269, 230, 250, 338, 279, 339, 251,
	301, 300, 302, 0, 176, 0, 376, 411, 437, 194,
	195, 196, 0, 229, 233, 239, 241, 0, 247, 254,
	272, 316, 337, 335, 341, 0, 389, 406, 414, 421,
	427, 428, 432, 429, 430, 433, 304, 190, 253, 372,
	268, 277, 0, 0, 322, 353, 199, 409, 373, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 170,
	183, 273, 0, 342, 237, 435, 416, 412, 0, 0,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 173, 184, 192, 202, 214, 227,
	235, 245, 249, 252, 256, 257, 260, 265, 282, 287,
	288, 289, 290, 306, 307, 308, 311, 314, 315, 318,
	320, 321, 324, 330, 331, 332, 333, 334, 336, 343,
	347, 355, 356, 357, 358, 359, 361, 362, 366, 367,
	368, 369, 377, 381, 396, 397, 408, 420, 425, 246,
	404, 426, 0, 281, 0, 0, 283, 231, 248, 258,
	0, 415, 378, 188, 349, 238, 177, 205, 191, 212,
	226, 228, 262, 291, 297, 326, 329, 243, 223, 203,
	346, 200, 364, 384, 385, 386, 388, 295, 219, 313,
	0, 1221, 0, 0, 0, 0, 0, 0, 222, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 327, 0,
	365, 208, 280, 278, 393, 232, 225, 221, 207, 255,
	286, 325, 383, 319, 0, 275, 0, 0, 374, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 206, 175, 310, 375,
	236, 0, 0, 0, 167, 168, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 197, 0, 204, 0, 0,
	0, 0, 218, 259, 224, 217, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 299, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 267, 171, 186,
	0, 0, 309, 348, 354, 0, 0, 0, 209, 0,
	352, 323, 407, 193, 234, 345, 328, 350, 0, 0,
	351, 276, 395, 340, 405, 423, 424, 216, 303, 413,
	387, 419, 434, 187, 213, 317, 380, 410, 371, 296,
	391, 392, 266, 370, 242, 174, 274, 431, 185, 360,
	201, 178, 382, 403, 198, 363, 0, 0, 0, 180,
	401, 379, 293, 263, 264, 179, 0, 344, 220, 240,
	211, 312, 398, 399, 210, 436, 189, 418, 182, 0,
	417, 305, 394, 402, 294, 285, 181, 400, 292, 284,
	269, 230, 250, 338, 279, 339, 251, 301, 300, 302,
	0, 176, 0, 376, 411, 437, 194, 195, 196, 0,
	229, 233, 239, 241, 0, 247, 254, 272, 316, 337,
	335, 341, 0, 389, 406, 414, 421, 427, 428, 432,
	429, 430, 433, 304, 190, 253, 372, 268, 277, 0,
	0, 322, 353, 199, 409, 373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 183, 273, 0,
	342, 237, 435, 416, 412, 0, 0, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 173, 184, 192, 202, 214, 227, 235, 245, 249,
	252, 256, 257, 260, 265, 282, 287, 288, 289, 290,
	306, 307, 308, 311, 314, 315, 318, 320, 321, 324,
	330, 331, 332, 333, 334, 336, 343, 347, 355, 356,
	357, 358, 359, 361, 362, 366, 367, 368, 369, 377,
	381, 396, 397, 408, 420, 425, 246, 404, 426, 0,
	281, 0, 0, 283, 231, 248, 258, 0, 415, 378,
	188, 349, 238, 177, 205, 191, 212, 226, 228, 262,
	291, 297, 326, 329, 243, 223, 203, 346, 200, 364,
	384, 385, 386, 388, 295, 219, 313, 0, 1219, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 327, 0, 365, 208, 280,
	278, 393, 232, 225, 221, 207, 255, 286, 325, 383,
	319, 0, 275, 0, 0, 374, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 206, 175, 310, 375, 236, 0, 0,
	0, 167, 168, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 0, 204, 0, 0, 0, 0, 218,
	259, 224, 217, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 299, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 267, 171, 186, 0, 0, 309,
	348, 354, 0, 0, 0, 209, 0, 352, 323, 407,
	193, 234, 345, 328, 350, 0, 0, 351, 276, 395,
	340, 405, 423, 424, 216, 303, 413, 387, 419, 434,
	187, 213, 317, 380, 410, 371, 296, 391, 392, 266,
	370, 242, 174, 274, 431, 185, 360, 201, 178, 382,
	403, 198, 363, 0, 0, 0, 180, 401, 379, 293,
	263, 264, 179, 0, 344, 220, 240, 211, 312, 398,
	399, 210, 436, 189, 418, 182, 0, 417, 305, 394,
	402, 294, 285, 181, 400, 292, 284, 269, 230, 250,
	338, 279, 339, 251, 301, 300, 302, 0, 176, 0,
	376, 411, 437, 194, 195, 196, 0, 229, 233, 239,
	241, 0, 247, 254, 272, 316, 337, 335, 341, 0,
	389, 406, 414, 421, 427, 428, 432, 429, 430, 433,
	304, 190, 253, 372, 268, 277, 0, 0, 322, 353,
	199, 409, 373, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 170, 183, 273, 0, 342, 237, 435,
	416, 412, 0, 0, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 173, 184,
	192, 202, 214, 227, 235, 245, 249, 252, 256, 257,
	260, 265, 282, 287, 288, 289, 290, 306, 307, 308,
	311, 314, 315, 318, 320, 321, 324, 330, 331, 332,
	333, 334, 336, 343, 347, 355, 356, 357, 358, 359,
	361, 362, 366, 367, 368, 369, 377, 381, 396, 397,
	408, 420, 425, 246, 404, 426, 0, 281, 0, 0,
	283, 231, 248, 258, 0, 415, 378, 188, 349, 238,
	177, 205, 191, 212, 226, 228, 262, 291, 297, 326,
	329, 243, 223, 203, 346, 200, 364, 384, 385, 386,
	388, 295, 219, 313, 0, 1217, 0, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 327, 0, 365, 208, 280, 278, 393, 232,
	225, 221, 207, 255, 286, 325, 383, 319, 0, 275,
	0, 0, 374, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	206, 175, 310, 375, 236, 0, 0, 0, 167, 168,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 197,
	0, 204, 0, 0, 0, 0, 218, 259, 224, 217,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 299, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 267, 171, 186, 0, 0, 309, 348, 354, 0,
	0, 0, 209, 0, 352, 323, 407, 193, 234, 345,
	328, 350, 0, 0, 351, 276, 395, 340, 405, 423,
	424, 216, 303, 413, 387, 419, 434, 187, 213, 317,
	380, 410, 371, 296, 391, 392, 266, 370, 242, 174,
	274, 431, 185, 360, 201, 178, 382, 403, 198, 363,
	0, 0, 0, 180, 401, 379, 293, 263, 264, 179,
	0, 344, 220, 240, 211, 312, 398, 399, 210, 436,
	189, 418, 182, 0, 417, 305, 394, 402, 294, 285,
	181, 400, 292, 284, 269, 230, 250, 338, 279, 339,
	251, 301, 300, 302, 0, 176, 0, 376, 411, 437,
	194, 195, 196, 0, 229, 233, 239, 241, 0, 247,
	254, 272, 316, 337, 335, 341, 0, 389, 406, 414,
	421, 427, 428, 432, 429, 430, 433, 304, 190, 253,
	372, 268, 277, 0, 0, 322, 353, 199, 409, 373,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	170, 183, 273, 0, 342, 237, 435, 416, 412, 0,
	0, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 173, 184, 192, 202, 214,
	227, 235, 245, 249, 252, 256, 257, 260, 265, 282,
	287, 288, 289, 290, 306, 307, 308, 311, 314, 315,
	318, 320, 321, 324, 330, 331, 332, 333, 334, 336,
	343, 347, 355, 356, 357, 358, 359, 361, 362, 366,
	367, 368, 369, 377, 381, 396, 397, 408, 420, 425,
	246, 404, 426, 0, 281, 0, 0, 283, 231, 248,
	258, 0, 415, 378, 188, 349, 238, 177, 205, 191,
	212, 226, 228, 262, 291, 297, 326, 329, 243, 223,
	203, 346, 200, 364, 384, 385, 386, 388, 295, 219,
	313, 0, 1213, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 327,
	0, 365, 208, 280, 278, 393, 232, 225, 221, 207,
	255, 286, 325, 383, 319, 0, 275, 0, 0, 374,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 206, 175, 310,
	375, 236, 0, 0, 0, 167, 168, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 197, 0, 204, 0,
	0, 0, 0, 218, 259, 224, 217, 390, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 299, 0, 0, 0, 0, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 267, 171,
	186, 0, 0, 309, 348, 354, 0, 0, 0, 209,
	0, 352, 323, 407, 193, 234, 345, 328, 350, 0,
	0, 351, 276, 395, 340, 405, 423, 424, 216, 303,
	413, 387, 419, 434, 187, 213, 317, 380, 410, 371,
	296, 391, 392, 266, 370, 242, 174, 274, 431, 185,
	360, 201, 178, 382, 403, 198, 363, 0, 0, 0,
	180, 401, 379, 293, 263, 264, 179, 0, 344, 220,
	240, 211, 312, 398, 399, 210, 436, 189, 418, 182,
	0, 417, 305, 394, 402, 294, 285, 181, 400, 292,
	284, 269, 230, 250, 338, 279, 339, 251, 301, 300,
	302, 0, 176, 0, 376, 411, 437, 194, 195, 196,
	0, 229, 233, 239, 241, 0, 247, 254, 272, 316,
	337, 335, 341, 0, 389, 406, 414, 421, 427, 428,
	432, 429, 430, 433, 304, 190, 253, 372, 268, 277,
	0, 0, 322, 353, 199, 409, 373, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 170, 183, 273,
	0, 342, 237, 435, 416, 412, 0, 0, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 173, 184, 192, 202, 214, 227, 235, 245,
	249, 252, 256, 257, 260, 265, 282, 287, 288, 289,
	290, 306, 307, 308, 311, 314, 315, 318, 320, 321,
	324, 330, 331, 332, 333, 334, 336, 343, 347, 355,
	356, 357, 358, 359, 361, 362, 366, 367, 368, 369,
	377, 381, 396, 397, 408, 420, 425, 246, 404, 426,
	0, 281, 0, 0, 283, 231, 248, 258, 0, 415,
	378, 188, 349, 238, 177, 205, 191, 212, 226, 228,
	262, 291, 297, 326, 329, 243, 223, 203, 346, 200,
	364, 384, 385, 386, 388, 295, 219, 313, 0, 1211,
	0, 0, 0, 0, 0, 0, 222, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 327, 0, 365, 208,
	280, 278, 393, 232, 225, 221, 207, 255, 286, 325,
	383, 319, 0, 275, 0, 0, 374, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 206, 175, 310, 375, 236, 0,
	0, 0, 167, 168, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 197, 0, 204, 0, 0, 0, 0,
	218, 259, 224, 217, 390, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 299,
	0, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 267, 171, 186, 0, 0,
	309, 348, 354, 0, 0, 0, 209, 0, 352, 323,
	407, 193, 234, 345, 328, 350, 0, 0, 351, 276,
	395, 340, 405, 423, 424, 216, 303, 413, 387, 419,
	434, 187, 213, 317, 380, 410, 371, 296, 391, 392,
	266, 370, 242, 174, 274, 431, 185, 360, 201, 178,
	382, 403, 198, 363, 0, 0, 0, 180, 401, 379,
	293, 263, 264, 179, 0, 344, 220, 240, 211, 312,
	398, 399, 210, 436, 189, 418, 182, 0, 417, 305,
	394, 402, 294, 285, 181, 400, 292, 284, 269, 230,
	250, 338, 279, 339, 251, 301, 300, 302, 0, 176,
	0, 376, 411, 437, 194, 195, 196, 0, 229, 233,
	239, 241, 0, 247, 254, 272, 316, 337, 335, 341,
	0, 389, 406, 414, 421, 427, 428, 432, 429, 430,
	433, 304, 190, 253, 372, 268, 277, 0, 0, 322,
	353, 199, 409, 373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 170, 183, 273, 0, 342, 237,
	435, 416, 412, 0, 0, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 173,
	184, 192, 202, 214, 227, 235, 245, 249, 252, 256,
	257, 260, 265, 282, 287, 288, 289, 290, 306, 307,
	308, 311, 314, 315, 318, 320, 321, 324, 330, 331,
	332, 333, 334, 336, 343, 347, 355, 356, 357, 358,
	359, 361, 362, 366, 367, 368, 369, 377, 381, 396,
	397, 408, 420, 425, 246, 404, 426, 0, 281, 0,
	0, 283, 231, 248, 258, 0, 415, 378, 188, 349,
	238, 177, 205, 191, 212, 226, 228, 262, 291, 297,
	326, 329, 243, 223, 203, 346, 200, 364, 384, 385,
	386, 388, 295, 219, 313, 0, 1209, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 327, 0, 365, 208, 280, 278, 393,
	232, 225, 221, 207, 255, 286, 325, 383, 319, 0,
	275, 0, 0, 374, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 206, 175, 310, 375, 236, 0, 0, 0, 167,
	168, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	197, 0, 204, 0, 0, 0, 0, 218, 259, 224,
	217, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 299, 0, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 267, 171, 186, 0, 0, 309, 348, 354,
	0, 0, 0, 209, 0, 352, 323, 407, 193, 234,
	345, 328, 350, 0, 0, 351, 276, 395, 340, 405,
	423, 424, 216, 303, 413, 387, 419, 434, 187, 213,
	317, 380, 410, 371, 296, 391, 392, 266, 370, 242,
	174, 274, 431, 185, 360, 201, 178, 382, 403, 198,
	363, 0, 0, 0, 180, 401, 379, 293, 263, 264,
	179, 0, 344, 220, 240, 211, 312, 398, 399, 210,
	436, 189, 418, 182, 0, 417, 305, 394, 402, 294,
	285, 181, 400, 292, 284, 269, 230, 250, 338, 279,
	339, 251, 301, 300, 302, 0, 176, 0, 376, 411,
	437, 194, 195, 196, 0, 229, 233, 239, 241, 0,
	247, 254, 272, 316, 337, 335, 341, 0, 389, 406,
	414, 421, 427, 428, 432, 429, 430, 433, 304, 190,
	253, 372, 268, 277, 0, 0, 322, 353, 199, 409,
	373, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 170, 183, 273, 0, 342, 237, 435, 416, 412,
	0, 0, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 173, 184, 192, 202,
	214, 227, 235, 245, 249, 252, 256, 257, 260, 265,
	282, 287, 288, 289, 290, 306, 307, 308, 311, 314,
	315, 318, 320, 321, 324, 330, 331, 332, 333, 334,
	336, 343, 347, 355, 356, 357, 358, 359, 361, 362,
	366, 367, 368, 369, 377, 381, 396, 397, 408, 420,
	425, 246, 404, 426, 0, 281, 0, 0, 283, 231,
	248, 258, 0, 415, 378, 188, 349, 238, 177, 205,
	191, 212, 226, 228, 262, 291, 297, 326, 329, 243,
	223, 203, 346, 200, 364, 384, 385, 386, 388, 295,
	219, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	327, 0, 365, 208, 280, 278, 393, 232, 225, 221,
	207, 255, 286, 325, 383, 319, 0, 275, 0, 0,
	374, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 206, 175,
	310, 375, 236, 1184, 0, 0, 167, 168, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 197, 0, 204,
	0, 0, 0, 0, 218, 259, 224, 217, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 299, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 267,
	171, 186, 0, 0, 309, 348, 354, 0, 0, 0,
	209, 0, 352, 323, 407, 193, 234, 345, 328, 350,
	0, 0, 351, 276, 395, 340, 405, 423, 424, 216,
	303, 413, 387, 419, 434, 187, 213, 317, 380, 410,
	371, 296, 391, 392, 266, 370, 242, 174, 274, 431,
	185, 360, 201, 178, 382, 403, 198, 363, 0, 0,
	0, 180, 401, 379, 293, 263, 264, 179, 0, 344,
	220, 240, 211, 312, 398, 399, 210, 436, 189, 418,
	182, 0, 417, 305, 394, 402, 294, 285, 181, 400,
	292, 284, 269, 230, 250, 338, 279, 339, 251, 301,
	300, 302, 0, 176, 0, 376, 411, 437, 194, 195,
	196, 0, 229, 233, 239, 241, 0, 247, 254, 272,
	316, 337, 335, 341, 0, 389, 406, 414, 421, 427,
	428, 432, 429, 430, 433, 304, 190, 253, 372, 268,
	277, 0, 0, 322, 353, 199, 409, 373, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 183,
	273, 0, 342, 237, 435, 416, 412, 0, 0, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 173, 184, 192, 202, 214, 227, 235,
	245, 249, 252, 256, 257, 260, 265, 282, 287, 288,
	289, 290, 306, 307, 308, 311, 314, 315, 318, 320,
	321, 324, 330, 331, 332, 333, 334, 336, 343, 347,
	355, 356, 357, 358, 359, 361, 362, 366, 367, 368,
	369, 377, 381, 396, 397, 408, 420, 425, 246, 404,
	426, 0, 281, 0, 0, 283, 231, 248, 258, 0,
	415, 378, 188, 349, 238, 177, 205, 191, 212, 226,
	228, 262, 291, 297, 326, 329, 243, 223, 203, 346,
	200, 364, 384, 385, 386, 388, 295, 219, 1085, 0,
	0, 0, 0, 0, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 327, 0, 365, 208, 280, 278,
	393, 232, 225, 221, 207, 255, 286, 325, 383, 319,
	0, 275, 0, 0, 374, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 206, 175, 310, 375, 236, 0, 0, 0,
	167, 168, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 197, 0, 204, 0, 0, 0, 0, 218, 259,
	224, 217, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 299, 0, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 267, 171, 186, 0, 0, 309, 348,
	354, 0, 0, 0, 209, 0, 352, 323, 407, 193,
	234, 345, 328, 350, 0, 0, 351, 276, 395, 340,
	405, 423, 424, 216, 303, 413, 387, 419, 434, 187,
	213, 317, 380, 410, 371, 296, 391, 392, 266, 370,
	242, 174, 274, 431, 185, 360, 201, 178, 382, 403,
	198, 363, 0, 0, 0, 180, 401, 379, 293, 263,
	264, 179, 0, 344, 220, 240, 211, 312, 398, 399,
	210, 436, 189, 418, 182, 0, 417, 305, 394, 402,
	294, 285, 181, 400, 292, 284, 269, 230, 250, 338,
	279, 339, 251, 301, 300, 302, 0, 176, 0, 376,
	411, 437, 194, 195, 196, 0, 229, 233, 239, 241,
	0, 247, 254, 272, 316, 337, 335, 341, 0, 389,
	406, 414, 421, 427, 428, 432, 429, 430, 433, 304,
	190, 253, 372, 268, 277, 0, 0, 322, 353, 199,
	409, 373, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 183, 273, 0, 342, 237, 435, 416,
	412, 0, 0, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 173, 184, 192,
	202, 214, 227, 235, 245, 249, 252, 256, 257, 260,
	265, 282, 287, 288, 289, 290, 306, 307, 308, 311,
	314, 315, 318, 320, 321, 324, 330, 331, 332, 333,
	334, 336, 343, 347, 355, 356, 357, 358, 359, 361,
	362, 366, 367, 368, 369, 377, 381, 396, 397, 408,
	420, 425, 246, 404, 426, 0, 281, 0, 0, 283,
	231, 248, 258, 0, 415, 378, 188, 349, 238, 177,
	205, 191, 212, 226, 228, 262, 291, 297, 326, 329,
	243, 223, 203, 346, 200, 364, 384, 385, 386, 388,
	295, 219, 313, 0, 0, 0, 0, 0, 0, 0,
	1076, 222, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 327, 0, 365, 208, 280, 278, 393, 232, 225,
	221, 207, 255, 286, 325, 383, 319, 0, 275, 0,
	0, 374, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 206,
	175, 310, 375, 236, 0, 0, 0, 167, 168, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 197, 0,
	204, 0, 0, 0, 0, 218, 259, 224, 217, 390,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 299, 0, 0, 0, 0, 422,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	267, 171, 186, 0, 0, 309, 348, 354, 0, 0,
	0, 209, 0, 352, 323, 407, 193, 234, 345, 328,
	350, 0, 0, 351, 276, 395, 340, 405, 423, 424,
	216, 303, 413, 387, 419, 434, 187, 213, 317, 380,
	410, 371, 296, 391, 392, 266, 370, 242, 174, 274,
	431, 185, 360, 201, 178, 382, 403, 198, 363, 0,
	0, 0, 180, 401, 379, 293, 263, 264, 179, 0,
	344, 220, 240, 211, 312, 398, 399, 210, 436, 189,
	418, 182, 0, 417, 305, 394, 402, 294, 285, 181,
	400, 292, 284, 269, 230, 250, 338, 279, 339, 251,
	301, 300, 302, 0, 176, 0, 376, 411, 437, 194,
	195, 196, 0, 229, 233, 239, 241, 0, 247, 254,
	272, 316, 337, 335, 341, 0, 389, 406, 414, 421,
	427, 428, 432, 429, 430, 433, 304, 190, 253, 372,
	268, 277, 0, 0, 322, 353, 199, 409, 373, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 170,
	183, 273, 0, 342, 237, 435, 416, 412, 0, 0,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 173, 184, 192, 202, 214, 227,
	235, 245, 249, 252, 256, 257, 260, 265, 282, 287,
	288, 289, 290, 306, 307, 308, 311, 314, 315, 318,
	320, 321, 324, 330, 331, 332, 333, 334, 336, 343,
	347, 355, 356, 357, 358, 359, 361, 362, 366, 367,
	368, 369, 377, 381, 396, 397, 408, 420, 425, 246,
	404, 426, 0, 281, 0, 0, 283, 231, 248, 258,
	0, 415, 378, 188, 349, 238, 177, 205, 191, 212,
	226, 228, 262, 291, 297, 326, 329, 243, 223, 203,
	346, 200, 364, 384, 385, 386, 388, 295, 219, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 327, 0,
	365, 208, 280, 278, 393, 232, 225, 221, 207, 255,
	286, 325, 383, 319, 0, 275, 0, 0, 374, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 206, 175, 310, 375,
	236, 0, 0, 0, 167, 168, 169, 0, 932, 0,
	0, 0, 0, 0, 0, 197, 0, 204, 0, 0,
	0, 0, 218, 259, 224, 217, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 299, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 267, 171, 186,
	0, 0, 309, 348, 354, 0, 0, 0, 209, 0,
	352, 323, 407, 193, 234, 345, 328, 350, 0, 0,
	351, 276, 395, 340, 405, 423, 424, 216, 303, 413,
	387, 419, 434, 187, 213, 317, 380, 410, 371, 296,
	391, 392, 266, 370, 242, 174, 274, 431, 185, 360,
	201, 178, 382, 403, 198, 363, 0, 0, 0, 180,
	401, 379, 293, 263, 264, 179, 0, 344, 220, 240,
	211, 312, 398, 399, 210, 436, 189, 418, 182, 0,
	417, 305, 394, 402, 294, 285, 181, 400, 292, 284,
	269, 230, 250, 338, 279, 339, 251, 301, 300, 302,
	0, 176, 0, 376, 411, 437, 194, 195, 196, 0,
	229, 233, 239, 241, 0, 247, 254, 272, 316, 337,
	335, 341, 0, 389, 406, 414, 421, 427, 428, 432,
	429, 430, 433, 304, 190, 253, 372, 268, 277, 0,
	0, 322, 353, 199, 409, 373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 183, 273, 0,
	342, 237, 435, 416, 412, 0, 0, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 173, 184, 192, 202, 214, 227, 235, 245, 249,
	252, 256, 257, 260, 265, 282, 287, 288, 289, 290,
	306, 307, 308, 311, 314, 315, 318, 320, 321, 324,
	330, 331, 332, 333, 334, 336, 343, 347, 355, 356,
	357, 358, 359, 361, 362, 366, 367, 368, 369, 377,
	381, 396, 397, 408, 420, 425, 246, 404, 426, 0,
	281, 0, 0, 283, 231, 248, 258, 0, 415, 378,
	188, 349, 238, 177, 205, 191, 212, 226, 228, 262,
	291, 297, 326, 329, 243, 223, 203, 346, 200, 364,
	384, 385, 386, 388, 295, 219, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 327, 0, 365, 208, 280,
	278, 393, 232, 225, 221, 207, 255, 286, 325, 383,
	319, 0, 275, 0, 0, 374, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 206, 175, 310, 375, 236, 0, 0,
	0, 167, 168, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 0, 204, 0, 0, 0, 0, 218,
	259, 224, 217, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 491, 0, 244, 0, 299, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 267, 171, 186, 0, 0, 309,
	348, 354, 0, 0, 0, 209, 0, 352, 323, 407,
	193, 234, 345, 328, 350, 0, 0, 351, 276, 395,
	340, 405, 423, 424, 216, 303, 413, 387, 419, 434,
	187, 213, 317, 380, 410, 371, 296, 391, 392, 266,
	370, 242, 174, 274, 431, 185, 360, 201, 178, 382,
	403, 198, 363, 0, 0, 0, 180, 401, 379, 293,
	263, 264, 179, 0, 344, 220, 240, 211, 312, 398,
	399, 210, 436, 189, 418, 182, 0, 417, 305, 394,
	402, 294, 285, 181, 400, 292, 284, 269, 230, 250,
	338, 279, 339, 251, 301, 300, 302, 0, 176, 0,
	376, 411, 437, 194, 195, 196, 0, 229, 233, 239,
	241, 0, 247, 254, 272, 316, 337, 335, 341, 0,
	389, 406, 414, 421, 427, 428, 432, 429, 430, 433,
	304, 190, 253, 372, 268, 277, 0, 0, 322, 353,
	199, 409, 373, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 170, 183, 273, 0, 342, 237, 435,
	416, 412, 0, 0, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 173, 184,
	192, 202, 214, 227, 235, 245, 249, 252, 256, 257,
	260, 265, 282, 287, 288, 289, 290, 306, 307, 308,
	311, 314, 315, 318, 320, 321, 324, 330, 331, 332,
	333, 334, 336, 343, 347, 355, 356, 357, 358, 359,
	361, 362, 366, 367, 368, 369, 377, 381, 396, 397,
	408, 420, 425, 490, 404, 426, 0, 281, 0, 0,
	283, 231, 248, 258, 0, 415, 378, 188, 349, 238,
	177, 205, 191, 212, 226, 228, 262, 291, 297, 326,
	329, 243, 223, 203, 346, 200, 364, 384, 385, 386,
	388, 295, 219, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 327, 0, 365, 208, 280, 278, 393, 232,
	225, 221, 207, 255, 286, 325, 383, 319, 0, 275,
	0, 0, 374, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	206, 175, 310, 375, 236, 0, 0, 0, 167, 168,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 197,
	0, 204, 0, 0, 0, 0, 218, 259, 224, 217,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 299, 0, 0, 440, 0,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 267, 171, 186, 0, 0, 309, 348, 354, 0,
	0, 0, 209, 0, 352, 323, 407, 193, 234, 345,
	328, 350, 0, 0, 351, 276, 395, 340, 405, 423,
	424, 216, 303, 413, 387, 419, 434, 187, 213, 317,
	380, 410, 371, 296, 391, 392, 266, 370, 242, 174,
	274, 431, 185, 360, 201, 178, 382, 403, 198, 363,
	0, 0, 0, 180, 401, 379, 293, 263, 264, 179,
	0, 344, 220, 240, 211, 312, 398, 399, 210, 436,
	189, 418, 182, 0, 417, 305, 394, 402, 294, 285,
	181, 400, 292, 284, 269, 230, 250, 338, 279, 339,
	251, 301, 300, 302, 0, 176, 0, 376, 411, 437,
	194, 195, 196, 0, 229, 233, 239, 241, 0, 247,
	254, 272, 316, 337, 335, 341, 0, 389, 406, 414,
	421, 427, 428, 432, 429, 430, 433, 304, 190, 253,
	372, 268, 277, 0, 0, 322, 353, 199, 409, 373,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	170, 183, 273, 0, 342, 237, 435, 416, 412, 0,
	0, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 173, 184, 192, 202, 214,
	227, 235, 245, 249, 252, 256, 257, 260, 265, 282,
	287, 288, 289, 290, 306, 307, 308, 311, 314, 315,
	318, 320, 321, 324, 330, 331, 332, 333, 334, 336,
	343, 347, 355, 356, 357, 358, 359, 361, 362, 366,
	367, 368, 369, 377, 381, 396, 397, 408, 420, 425,
	246, 404, 426, 0, 281, 0, 0, 283, 231, 248,
	258, 0, 415, 378, 188, 349, 238, 177, 205, 191,
	212, 226, 228, 262, 291, 297, 326, 329, 243, 223,
	203, 346, 200, 364, 384, 385, 386, 388, 295, 219,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 327,
	0, 365, 208, 280, 278, 393, 232, 225, 221, 207,
	255, 286, 325, 383, 319, 0, 275, 0, 0, 374,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 206, 175, 310,
	375, 236, 0, 0, 0, 167, 168, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 197, 0, 204, 0,
	0, 0, 0, 218, 259, 224, 217, 390, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 299, 0, 0, 0, 0, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 267, 171,
	186, 0, 0, 309, 348, 354, 0, 0, 0, 209,
	0, 352, 323, 407, 193, 234, 345, 328, 350, 0,
	0, 351, 276, 395, 340, 405, 423, 424, 216, 303,
	413, 387, 419, 434, 187, 213, 317, 380, 410, 371,
	296, 391, 392, 266, 370, 242, 174, 274, 431, 185,
	360, 201, 178, 382, 403, 198, 363, 0, 0, 0,
	180, 401, 379, 293, 263, 264, 179, 0, 344, 220,
	240, 211, 312, 398, 399, 210, 436, 189, 418, 182,
	0, 417, 305, 394, 402, 294, 285, 181, 400, 292,
	284, 269, 230, 250, 338, 279, 339, 251, 301, 300,
	302, 0, 176, 0, 376, 411, 437, 194, 195, 196,
	0, 229, 233, 239, 241, 0, 247, 254, 272, 316,
	337, 335, 341, 0, 389, 406, 414, 421, 427, 428,
	432, 429, 430, 433, 304, 190, 253, 372, 268, 277,
	0, 0, 322, 353, 199, 409, 373, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 170, 183, 273,
	0, 342, 237, 435, 416, 412, 0, 0, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 173, 184, 192, 202, 214, 227, 235, 245,
	249, 252, 256, 257, 260, 265, 282, 287, 288, 289,
	290, 306, 307, 308, 311, 314, 315, 318, 320, 321,
	324, 330, 331, 332, 333, 334, 336, 343, 347, 355,
	356, 357, 358, 359, 361, 362, 366, 367, 368, 369,
	377, 381, 396, 397, 408, 420, 425, 246, 404, 426,
	0, 281, 0, 0, 283, 231, 248, 258, 0, 415,
	378, 188, 349, 238, 177, 205, 191, 212, 226, 228,
	262, 291, 297, 326, 329, 243, 223, 203, 346, 200,
	364, 384, 385, 386, 388, 295, 219,
}

var yyPact = [...]int{
	2795, -1000, -345, 1654, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1618, 1145, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 576, 1283, -1000, 1526, 256, -1000, 27601, 385,
	-1000, 27144, 384, 2256, 27601, -1000, 114, -1000, 60, 27601,
	100, 26687, -1000, -1000, -284, 12944, 1476, -18, -27, 27601,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1259,
	1575, 1583, 1613, 1069, 1588, -1000, 11103, 11103, 316, 316,
	316, 9275, -1000, -1000, 16613, 27601, 27601, 209, -1000, 1526,
	-1000, -1000, 139, -1000, 210, 1248, -1000, 1246, -1000, 557,
	597, 236, 331, 330, 235, 234, 229, 228, 227, 226,
	225, 223, 246, -1000, 553, 553, -168, -180, 1847, 288,
	288, 288, 337, 1495, 1492, -1000, 609, -1000, 553, 553,
	138, 553, 553, 553, 553, 195, 193, 553, 553, 553,
	553, 553, 553, 553, 553, 553, 553, 553, 553, 553,
	553, 553, 241, 1526, 183, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 27601, 103,
	27601, -1000, 465, 27601, 649, 649, -10, 649, 649, 649,
	649, 107, 463, -28, -1000, 105, 170, 79, 180, 635,
	329, 67, -1000, -1000, 177, 635, 73, -1000, 649, 7391,
	7391, 7391, -1000, 1506, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 334, -1000, -1000, -1000, -1000, 27601, 26230, 253,
	583, -1000, -1000, -1000, 32, -1000, -1000, 1121, 719, -1000,
	12944, 2371, 1251, 1251, -1000, -1000, 400, -1000, -1000, 14315,
	14315, 14315, 14315, 14315, 14315, 14315, 14315, 14315, 14315, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1251, 460, -1000, 12487, 1251, 1251, 1251,
	1251, 1251, 1251, 1251, 1251, 12944, 1251, 1251, 1251, 1251,
	1251, 1251, 1251, 1251, 1251, 1251, 1251, 1251, 1251, 1251,
	1251, 1251, 1251, -1000, -1000, -1000, 27601, -1000, 1251, 111,
	1618, -1000, 1145, -1000, -1000, -1000, 1513, 12944, 12944, 1618,
	-1000, 1413, 11103, -1000, -1000, 1558, -1000, -1000, -1000, -1000,
	-1000, 690, 1642, -1000, 15229, 456, 1639, 25773, -1000, 19368,
	25316, 1245, 8804, -61, -1000, -1000, -1000, 581, 18454, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1506, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1098, 27601, -1000, -1000, 3711, 964, -1000, 1282, -1000,
	1093, -1000, 1258, 1302, 382, 964, 377, 376, 374, -1000,
	-109, -1000, -1000, -1000, -1000, -1000, 553, 553, 242, 256,
	4154, -1000, -1000, -1000, 24852, 1279, 964, -1000, 1277, -1000,
	1541, 328, 493, 493, 964, -1000, -1000, 27601, 964, 1538,
	1535, 27601, 27601, -1000, 24395, -1000, 23938, 23481, 850, 27601,
	23024, 22567, 22110, 21653, 21196, -1000, 1356, -1000, 1264, -1000,
	-1000, -1000, 27601, 27601, 27601, 15, -1000, -1000, 27601, 964,
	-1000, -1000, 848, 847, 553, 553, 842, 985, 981, 978,
	553, 553, 840, 976, 957, 175, 830, 797, 790, 871,
	972, 110, 841, 793, 768, 27601, 1275, 27601, -1000, 164,
	515, 264, 562, 1526, 1470, 1228, 327, 380, 964, 298,
	298, -1000, 7862, -1000, -1000, 971, 12944, -1000, 642, 635,
	635, -1000, -1000, -1000, -1000, -1000, -1000, 649, 27601, 642,
	-1000, -1000, -1000, 635, 649, 27601, 649, 649, 649, 649,
	635, 635, 635, 649, 27601, 27601, 27601, 27601, 27601, 27601,
	27601, 27601, 27601, 7391, 7391, 7391, 529, 649, -1000, 1334,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 95, -1000,
	-1000, -1000, -1000, -1000, 1654, -1000, -1000, -1000, -113, 1225,
	20739, -1000, -288, -289, -294, -295, -1000, -1000, -1000, -296,
	-297, -1000, -1000, -1000, 12944, 12944, 12944, 12944, 750, 540,
	14315, 713, 524, 14315, 14315, 14315, 14315, 14315, 14315, 14315,
	14315, 14315, 14315, 14315, 14315, 14315, 14315, 14315, 610, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 964, -1000, 1652,
	1142, 1142, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 4934, 9732, 7862, 1069, 1088, 1618, 11103, 11103, 12944,
	12944, 12017, 11560, 11103, 1520, 593, 719, 27601, -1000, 924,
	-1000, -1000, 13858, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 27601, 27601, 11103, 11103, 11103,
	11103, 11103, -1000, 1221, -1000, -176, 16156, 12944, 967, 1583,
	1069, 1558, 1554, 1647, 514, 1011, 1204, -1000, 826, 1583,
	17997, 1227, -1000, 1558, -1000, -1000, -1000, 27601, -1000, -1000,
	20282, -1000, -1000, 6920, 27601, 221, 27601, -1000, 1229, 1379,
	-1000, -1000, -1000, 1569, 17540, 27601, 1255, 1154, -1000, -1000,
	447, 8333, -61, -1000, 8333, 1143, -1000, -58, -68, 10189,
	470, -1000, -1000, -1000, 1847, 14772, 1052, -1000, 12, -1000,
	-1000, -1000, 1258, -1000, 1258, 1258, 1258, 1258, 15, 15,
	15, 15, -1000, -1000, -1000, -1000, -1000, 1274, 1273, -1000,
	1258, 1258, 1258, 1258, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1269, 1269, 1269, 1260, 1260, 282, -1000, 12944, 137,
	27601, 1551, 766, 164, 305, 1314, 964, 964, 964, 305,
	-1000, 912, 906, -1000, 1203, -1000, -1000, 1612, -1000, -1000,
	617, 677, 671, 600, 27601, 132, 216, -1000, 285, -1000,
	27601, 964, 1534, 493, 964, -1000, 964, -1000, -1000, -1000,
	-1000, 446, -1000, -1000, 964, 1199, -1000, 1192, 673, 667,
	658, 661, 1199, -1000, -1000, -132, 1199, -1000, 1199, -1000,
	1199, -1000, 1199, -1000, 1199, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 542, 27601, 132, 610, -1000, 324, -1000,
	-1000, 610, 610, -1000, -1000, -1000, -1000, 966, 958, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -337, 27601, -1000, 161, 559,
	201, 254, 205, 27601, 120, 1577, 147, 187, 27601, 27601,
	298, 1333, 27601, 1561, 27601, -1000, -1000, -1000, -1000, 719,
	27601, -1000, -1000, 649, 649, -1000, -1000, 27601, 649, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 649, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 951, -1000, 27601, 27601, -1000, -1000, -1000, -1000,
	-1000, 70, -64, 185, -1000, -1000, -1000, -1000, 1579, -1000,
	719, 540, 575, 534, -1000, -1000, 825, -1000, -1000, 2390,
	-1000, -1000, -1000, -1000, 713, 14315, 14315, 14315, 1115, 2390,
	2679, 1868, 2504, 487, 727, 727, 482, 482, 482, 482,
	482, 703, 703, -1000, -1000, -1000, -1000, 924, -1000, -1000,
	-1000, 924, 11103, 11103, 1198, 1251, 444, -1000, 1259, -1000,
	-1000, 1583, 1063, 1063, 919, 1049, 572, 1634, 1063, 552,
	1631, 1063, 1063, 11103, -1000, -1000, 618, -1000, 12944, 924,
	-1000, 1183, 1197, 1175, 1063, 924, 924, 1063, 1063, 27601,
	-1000, -279, -1000, -89, 453, 1251, -1000, 19825, -1000, -1000,
	924, 1121, -1000, 1513, -1000, -1000, 1468, -1000, 1389, 12944,
	12944, 12944, -1000, -1000, -1000, 1513, 1582, -1000, 1434, 1433,
	1592, 11103, 19368, 1558, -1000, -1000, -1000, 433, 1592, 1187,
	1251, -1000, 27601, 19368, 19368, 19368, 19368, 19368, -1000, 1372,
	1365, -1000, 1371, 1345, 1401, 27601, -1000, 1082, 1069, 17540,
	221, 1201, 19368, 27601, -1000, -1000, 19368, 27601, 6449, -1000,
	1143, -61, -86, -1000, -1000, -1000, -1000, 719, -1000, 858,
	-1000, 289, -1000, 293, -1000, -1000, -1000, -1000, 550, 10,
	-1000, -1000, 15, 15, -1000, -1000, 470, 734, 470, 470,
	470, 950, 950, -1000, -1000, -1000, -1000, -1000, 764, -1000,
	-1000, -1000, 744, -1000, -1000, 975, 1337, 137, -1000, -1000,
	553, 918, 1480, 27601, -1000, -1000, 1026, 161, 27601, 629,
	1332, -1000, 1314, 1314, 1314, 27601, -1000, -1000, -1000, -1000,
	4008, 27601, 1080, -1000, 118, 27601, 1022, 27601, -1000, 1077,
	1267, -1000, 964, -1000, -1000, 7862, -1000, 27601, 1251, -1000,
	-1000, -1000, -1000, 379, 1510, 1509, 132, 118, 470, 964,
	-1000, -1000, -1000, -1000, -1000, -341, 1072, 345, 140, 150,
	27601, 27601, 27601, 27601, 27601, 392, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 188, 320, -1000, 27601, 27601, 403, -1000,
	-1000, -1000, 635, -1000, -1000, 635, -1000, -1000, -1000, -1000,
	-1000, -1000, 1504, -79, -311, -1000, -308, -1000, -1000, -1000,
	-1000, 1115, 2390, 2479, -1000, 14315, 14315, -1000, -1000, 1063,
	1063, 11103, 7862, 1618, 1513, -1000, -1000, 383, 610, 383,
	14315, 14315, -1000, 14315, 14315, -1000, -123, 1101, 589, -1000,
	12944, 813, -1000, -1000, 14315, 14315, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 373, 366, 358, 27601, -1000,
	-1000, -1000, 862, 916, 1381, 719, 719, -1000, -1000, 27601,
	-1000, -1000, -1000, -1000, 1624, 12944, -1000, 1141, -1000, 5978,
	1583, 1330, 27601, 1251, 1654, 15699, 27601, 1196, -1000, 554,
	1379, 1310, 1328, 1307, -1000, -1000, -1000, -1000, 1364, -1000,
	1346, -1000, -1000, -1000, -1000, -1000, 1069, 1592, 19368, 1108,
	-1000, 1108, -1000, 431, -1000, -1000, -1000, -82, -74, -1000,
	-1000, -1000, 1847, -1000, -1000, -1000, 643, 14315, 1646, -1000,
	915, 1533, -1000, 1531, -1000, -1000, 470, 470, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1055, -1000, 1048, 1130, 1046,
	54, -1000, 1301, 1503, 553, 553, -1000, 735, -1000, 964,
	-1000, -1000, 343, -1000, 1560, 27601, 1327, 1326, 1325, -1000,
	1609, 1126, -1000, 27601, -1000, -1000, 27601, -1000, -1000, 1429,
	137, 27601, -1000, -1000, -1000, 216, 27601, -1000, 1142, 118,
	-1000, -1000, -1000, -1000, -1000, -1000, 27601, 151, -1000, 1266,
	874, -1000, 1311, -1000, -1000, -1000, -1000, 108, 198, -1000,
	27601, 361, 1337, 27601, -1000, -1000, -1000, 649, 649, -1000,
	1500, -1000, 964, -1000, 14315, 2390, 2390, -1000, -1000, 924,
	-1000, 1583, -1000, 924, 1258, 1258, -1000, 1258, 1260, -1000,
	1258, 83, 1258, 76, 924, 924, 2292, 2216, 2143, 834,
	1251, -116, -1000, 719, 12944, 1322, 1286, 1251, 1251, 1251,
	1041, 907, 15, -1000, -1000, -1000, 1620, 1607, 719, -1000,
	-1000, -1000, 1546, 1129, 1095, -1000, -1000, 10646, 1043, 1425,
	416, 1041, 1618, 27601, 12944, -1000, -1000, 12944, 1257, -1000,
	12944, -1000, -1000, -1000, 1618, 1618, 1108, -1000, -1000, 496,
	-1000, -1000, -1000, -1000, -1000, 2390, 11, -1000, -1000, -1000,
	-1000, -1000, 15, 899, 15, 712, -1000, 699, -1000, -1000,
	-218, -1000, -1000, 1109, 1315, -1000, -1000, 27601, -1000, -1000,
	27601, 27601, 27601, 27601, 27601, -1000, -1000, 208, -1000, 1030,
	1025, -1000, -172, -1000, -1000, 1253, -1000, -1000, -1000, 1013,
	-1000, -133, 964, 27601, 27601, 27601, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2390, -1000, 1513, -1000, -1000, 186,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 14315, 14315,
	14315, 14315, 14315, 1583, 895, 719, 14315, 14315, 18911, 27601,
	27601, 17070, 15, -1, -1000, 12944, 12944, 1514, -1000, 1251,
	-1000, 1270, 27601, 1251, 27601, -1000, 1583, -1000, 719, 719,
	27601, 719, 1583, -1000, -1000, 470, -1000, 470, 993, 969,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1253, -1000,
	-1000, -1000, 1126, -1000, 206, 272, -1000, 216, -1000, -181,
	-184, 1568, 27601, -1000, -1000, 7862, -1000, -1000, 1252, 1313,
	-1000, -1000, -1000, -1000, 1183, 1183, 1183, 1183, 171, 924,
	-1000, 1183, 1183, 1021, -1000, 1021, 1021, 453, -273, -1000,
	1466, 1427, 719, 1121, 1645, -1000, 1251, 1654, 415, 1095,
	-1000, -1000, 1019, -1000, -1000, -1000, -1000, -1000, 1566, 1251,
	27601, -1000, -1000, -1000, 1145, 1016, 1100, -1000, 551, 27601,
	27601, -1000, -1000, -1000, -1000, 924, 149, -138, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1, 273, -1000, 1461, 1427,
	-1000, 1604, 1460, 1591, -1000, 27601, 1095, 27601, -1000, 1145,
	13401, 1250, 220, -1000, 7862, 5507, 1005, -1000, -1000, 1378,
	-130, -147, 1441, 1443, 1443, 1461, -1000, 1590, 1589, -1000,
	894, 1586, 893, 1012, -1000, 220, 1183, 924, 27601, -1000,
	-53, -1000, -1000, -1000, -1000, -1000, 1311, -1000, 1336, -1000,
	1430, 799, -1000, -1000, -1000, -1000, 892, 890, -1000, 865,
	-1000, -1000, -1000, -1000, 996, 243, -1000, -1000, -133, -136,
	-1000, 731, -1000, -1000, -1000, -1000, -1000, 1324, 152, -1000,
	-142, -1000, -1000, 1323, -1000, 1630, -1000, -149, -1000, 1632,
	432, 432, -1000, -1000, -1000, -1000, 279, 770, -1000, -1000,
	-1000, -1000,
}

var yyPgo = [...]int{
	0, 1917, 1914, 12, 90, 101, 1912, 1911, 1910, 1908,
	129, 128, 127, 1904, 1899, 1894, 1893, 1891, 1890, 1887,
	1886, 1885, 1882, 1881, 1880, 66, 124, 42, 45, 138,
	1879, 1878, 30, 1876, 1875, 1874, 122, 121, 572, 1873,
	120, 1872, 1871, 1870, 1867, 1862, 1861, 1860, 1859, 1858,
	1857, 1853, 1849, 1848, 1847, 206, 1846, 1845, 4, 1843,
	32, 1841, 1839, 1832, 1831, 1830, 94, 1829, 1826, 1825,
	117, 1823, 1821, 51, 102, 50, 87, 1820, 1819, 77,
	126, 1818, 65, 106, 1817, 1287, 1816, 41, 78, 93,
	1815, 43, 1810, 1808, 48, 1805, 1804, 1803, 76, 1802,
	1801, 612, 1799, 75, 82, 15, 61, 1798, 1797, 1796,
	1793, 40, 44, 1792, 1791, 23, 1787, 1784, 125, 1783,
	85, 22, 1782, 26, 37, 21, 1781, 103, 1780, 11,
	56, 38, 1776, 86, 1775, 1774, 1773, 1772, 33, 1771,
	79, 110, 31, 1770, 1766, 9, 10, 1765, 1764, 1763,
	1762, 1760, 1758, 19, 1756, 5, 1753, 29, 1751, 18,
	20, 74, 80, 25, 8, 1750, 132, 1748, 24, 115,
	73, 111, 1747, 1746, 1745, 786, 145, 1744, 1743, 57,
	1742, 91, 99, 1740, 162, 1739, 1737, 59, 1297, 1662,
	58, 108, 1735, 1733, 2601, 53, 89, 14, 1728, 46,
	1725, 1724, 1723, 139, 119, 63, 792, 47, 1714, 1713,
	1709, 1708, 1707, 1706, 1705, 83, 27, 17, 109, 28,
	1704, 1702, 1696, 71, 36, 1695, 116, 114, 72, 104,
	1693, 135, 105, 64, 1692, 39, 1691, 1690, 1688, 1686,
	81, 1685, 1684, 1683, 1681, 112, 100, 69, 34, 1678,
	35, 68, 113, 107, 1677, 16, 123, 6, 1676, 3,
	0, 1674, 7, 130, 159, 98, 1673, 1672, 1, 1670,
	2, 1668, 1667, 84, 1666, 1665, 1664, 1661, 3372, 1671,
	118, 1660, 137,
}

//line sql.y:5211
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintsUnion() *IndexHints {
	v, _ := st.union.(*IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

var yyR1 = [...]int{
	0, 276, 277, 277, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 260, 260, 260, 263, 263,
	21, 50, 3, 3, 3, 3, 2, 2, 8, 9,
	4, 5, 5, 10, 10, 62, 62, 11, 12, 12,
	12, 12, 280, 280, 96, 96, 94, 94, 95, 95,
	161, 161, 13, 14, 14, 171, 171, 170, 170, 170,
	172, 172, 172, 172, 206, 206, 15, 15, 15, 15,
	15, 71, 71, 262, 262, 261, 259, 259, 258, 258,
	257, 23, 24, 33, 33, 33, 33, 34, 35, 264,
	264, 236, 39, 39, 38, 38, 38, 38, 40, 40,
	37, 37, 36, 36, 238, 238, 225, 225, 237, 237,
	237, 237, 237, 237, 237, 224, 144, 144, 144, 144,
	144, 144, 144, 144, 144, 144, 144, 208, 208, 208,
	208, 211, 211, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 210, 210, 210, 210, 210, 212, 212, 212,
	212, 212, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 214, 214, 214,
	214, 214, 214, 214, 214, 223, 223, 215, 215, 218,
	218, 219, 219, 219, 220, 220, 221, 221, 216, 216,
	216, 216, 217, 217, 217, 226, 250, 250, 249, 249,
	247, 247, 247, 247, 235, 235, 244, 244, 244, 244,
	244, 234, 234, 230, 230, 230, 231, 231, 232, 232,
	229, 229, 233, 233, 246, 246, 245, 227, 227, 228,
	228, 252, 252, 252, 252, 253, 269, 270, 268, 268,
	268, 268, 268, 60, 60, 60, 183, 183, 183, 242,
	242, 241, 241, 241, 243, 243, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 178, 178, 178, 267, 267,
	267, 267, 267, 267, 266, 266, 266, 239, 239, 239,
	265, 265, 130, 130, 131, 131, 30, 30, 30, 30,
	30, 30, 29, 29, 29, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 31, 31, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 222,
	222, 222, 254, 254, 255, 255, 17, 22, 22, 18,
	18, 18, 18, 19, 19, 41, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 271, 271, 177, 177, 185, 185, 176, 176,
	199, 199, 199, 179, 179, 179, 180, 180, 275, 275,
	275, 43, 43, 45, 45, 46, 47, 47, 201, 201,
	202, 202, 48, 49, 61, 61, 61, 61, 61, 61,
	63, 63, 63, 7, 7, 7, 7, 57, 57, 57,
	6, 6, 44, 44, 51, 272, 272, 273, 274, 274,
	274, 274, 52, 54, 20, 20, 20, 20, 20, 20,
	78, 78, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 72, 72, 72, 67, 67, 281,
	55, 56, 56, 70, 70, 70, 64, 64, 64, 69,
	69, 69, 75, 75, 77, 77, 77, 77, 77, 79,
	79, 79, 79, 79, 79, 79, 74, 74, 76, 76,
	76, 76, 192, 192, 192, 191, 191, 86, 86, 87,
	87, 88, 88, 89, 89, 89, 128, 104, 104, 160,
	160, 159, 159, 162, 162, 90, 90, 90, 90, 91,
	91, 92, 92, 93, 93, 200, 200, 197, 197, 197,
	196, 196, 97, 97, 97, 99, 98, 98, 98, 98,
	100, 100, 102, 102, 101, 101, 103, 105, 105, 105,
	105, 105, 106, 106, 85, 85, 85, 85, 85, 85,
	85, 85, 174, 174, 108, 108, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 119, 119, 119, 119,
	119, 119, 109, 109, 109, 109, 109, 109, 109, 73,
	73, 120, 120, 120, 127, 121, 121, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 116, 116, 116, 116, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 115,
	115, 115, 115, 115, 115, 115, 115, 115, 115, 115,
	115, 115, 115, 115, 115, 282, 282, 118, 117, 117,
	117, 117, 117, 117, 117, 68, 68, 68, 68, 68,
	205, 205, 205, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 134, 134, 65, 65,
	132, 132, 133, 135, 135, 129, 129, 129, 111, 111,
	111, 111, 111, 111, 111, 111, 113, 113, 113, 136,
	136, 137, 137, 138, 138, 139, 139, 140, 141, 141,
	141, 142, 142, 142, 142, 32, 32, 32, 32, 32,
	27, 27, 27, 27, 28, 28, 28, 80, 80, 80,
	80, 82, 82, 81, 81, 58, 58, 59, 59, 59,
	83, 83, 84, 84, 84, 84, 157, 157, 157, 143,
	143, 143, 143, 149, 149, 149, 145, 145, 147, 147,
	147, 148, 148, 148, 146, 154, 154, 156, 156, 155,
	155, 151, 151, 152, 152, 153, 153, 153, 150, 150,
	110, 110, 110, 110, 110, 158, 158, 158, 158, 163,
	163, 123, 123, 125, 125, 124, 126, 164, 164, 168,
	165, 165, 169, 169, 169, 169, 169, 166, 166, 167,
	167, 193, 193, 193, 173, 173, 184, 184, 181, 181,
	182, 182, 175, 175, 186, 186, 186, 53, 122, 122,
	251, 251, 248, 189, 189, 190, 190, 194, 194, 198,
	198, 195, 195, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 278, 279,
	203, 204, 204, 204,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	2, 3, 5, 6, 6, 7, 4, 6, 5, 7,
	8, 1, 3, 7, 8, 1, 1, 9, 9, 8,
	7, 7, 1, 1, 1, 3, 1, 3, 1, 3,
	0, 4, 3, 5, 4, 1, 3, 3, 2, 2,
	2, 2, 2, 1, 1, 1, 2, 2, 6, 12,
	2, 0, 2, 0, 2, 1, 0, 2, 1, 3,
	3, 6, 4, 7, 8, 8, 8, 6, 3, 1,
	1, 4, 0, 1, 1, 1, 2, 2, 0, 1,
	4, 4, 4, 4, 2, 4, 1, 3, 1, 1,
	3, 4, 3, 3, 3, 3, 0, 2, 3, 3,
	4, 2, 3, 3, 2, 3, 2, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 4, 4, 2, 2, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 6, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	5, 0, 3, 5, 0, 1, 0, 1, 0, 2,
	2, 2, 0, 2, 2, 5, 0, 1, 1, 2,
	1, 3, 2, 3, 0, 1, 3, 3, 3, 4,
	2, 0, 2, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 0, 1, 1, 3, 3, 3, 1, 3,
	1, 11, 12, 12, 13, 5, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 1, 0, 1, 2, 0,
	1, 1, 3, 2, 1, 2, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 5, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 0, 2, 0, 1, 5, 1,
	3, 7, 1, 3, 3, 1, 2, 2, 2, 5,
	5, 5, 6, 6, 5, 5, 2, 2, 2, 2,
	3, 3, 3, 4, 1, 3, 5, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 2, 4,
	4, 2, 11, 3, 6, 8, 6, 6, 6, 13,
	8, 6, 10, 5, 5, 5, 5, 5, 3, 7,
	4, 4, 4, 4, 3, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 0,
	2, 2, 1, 3, 8, 8, 3, 3, 5, 7,
	7, 6, 5, 3, 2, 3, 3, 3, 7, 3,
	3, 3, 3, 4, 7, 5, 2, 4, 4, 4,
	4, 4, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 2, 4, 2, 4, 5,
	4, 4, 4, 4, 3, 3, 5, 2, 3, 3,
	3, 3, 1, 1, 0, 1, 0, 1, 1, 1,
	0, 2, 2, 0, 2, 2, 0, 2, 0, 1,
	1, 2, 1, 1, 2, 1, 1, 5, 0, 1,
	0, 1, 2, 3, 0, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	3, 3, 2, 2, 3, 1, 3, 2, 1, 2,
	1, 2, 2, 4, 3, 3, 6, 4, 7, 6,
	1, 3, 2, 2, 2, 2, 1, 1, 1, 3,
	2, 1, 1, 1, 0, 1, 1, 0, 3, 0,
	2, 0, 2, 1, 2, 2, 0, 1, 1, 0,
	1, 1, 0, 1, 0, 1, 2, 3, 4, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 2,
	3, 5, 0, 1, 2, 1, 1, 0, 2, 1,
	3, 1, 1, 1, 3, 3, 3, 3, 7, 0,
	3, 1, 3, 1, 3, 4, 4, 4, 3, 2,
	4, 0, 1, 0, 2, 0, 1, 0, 1, 2,
	1, 1, 1, 2, 2, 1, 2, 3, 2, 3,
	2, 2, 2, 1, 1, 3, 3, 0, 5, 4,
	5, 5, 0, 2, 1, 3, 3, 3, 2, 3,
	1, 2, 0, 3, 1, 1, 3, 3, 4, 4,
	5, 3, 4, 5, 6, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 0,
	2, 1, 1, 1, 3, 1, 3, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 1, 1, 1,
	1, 4, 5, 5, 6, 4, 4, 6, 6, 6,
	8, 8, 8, 8, 9, 8, 5, 4, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 8, 8, 0, 2, 3, 4, 4,
	4, 4, 4, 4, 4, 0, 3, 4, 7, 3,
	1, 1, 1, 2, 3, 3, 1, 2, 2, 1,
	2, 1, 2, 2, 1, 2, 0, 1, 0, 2,
	1, 2, 4, 0, 2, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 0, 2, 0, 3, 1, 3, 2, 0, 1,
	1, 0, 2, 4, 4, 0, 2, 2, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 0, 3, 3,
	3, 0, 3, 1, 1, 0, 4, 0, 1, 1,
	0, 3, 1, 3, 2, 1, 0, 2, 4, 0,
	9, 3, 5, 0, 3, 3, 0, 1, 0, 2,
	2, 0, 2, 2, 2, 0, 2, 1, 2, 3,
	3, 0, 2, 1, 2, 3, 4, 3, 0, 1,
	2, 1, 5, 4, 4, 1, 3, 3, 5, 0,
	5, 1, 3, 1, 2, 3, 1, 1, 3, 3,
	1, 3, 3, 3, 3, 3, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	0, 3, 0, 1, 0, 1, 1, 5, 0, 1,
	0, 1, 2, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -276, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -19, -41, -42, -43, -45,
	-46, -47, -48, -49, -6, -44, -20, -21, -50, -51,
	-52, -53, -54, -4, -278, 6, 7, 8, -62, 10,
	11, 31, -23, -33, 153, -34, -24, 154, -35, 156,
	155, 192, 157, 185, 71, 231, 232, 234, 235, 236,
	237, -63, 190, 191, 159, 35, 42, 32, 33, 36,
	162, 81, 9, 336, 187, 186, 26, -277, 476, -70,
	5, -138, 16, -3, -55, -281, -55, -55, -55, -55,
	-55, -55, -236, -238, 81, 126, 81, -55, -39, -38,
	-37, -36, -40, 30, -30, -31, -256, -29, -26, 158,
	155, 200, 102, 103, 192, 193, 194, 157, 176, 191,
	195, 190, 209, -25, 77, 32, 349, 352, -243, 154,
	160, 161, 337, 105, 104, 72, 156, -240, 281, 453,
	-40, 455, 95, 97, 454, 41, 165, 456, 457, 458,
	459, 175, 460, 461, 462, 463, 469, 470, 471, 472,
	106, 5, -55, -198, -194, -260, -188, 84, 85, 86,
	346, 178, 380, 381, 225, 77, 281, 453, 231, 245,
	239, 266, 258, 347, 382, 228, 179, 213, 450, 256,
	314, 455, 383, 193, 286, 287, 288, 95, 234, 323,
	468, 230, 384, 466, 97, 454, 76, 48, 41, 188,
	254, 250, 456, 214, 385, 357, 207, 105, 102, 475,
	248, 47, 28, 465, 104, 46, 457, 386, 458, 290,
	271, 444, 45, 291, 194, 387, 80, 351, 452, 292,
	249, 293, 224, 464, 159, 388, 436, 295, 445, 389,
	272, 276, 390, 315, 296, 49, 391, 392, 446, 103,
	393, 75, 459, 243, 244, 394, 222, 177, 317, 270,
	175, 34, 297, 348, 226, 55, 201, 318, 43, 274,
	42, 440, 395, 443, 269, 265, 50, 396, 397, 398,
	399, 460, 268, 242, 264, 474, 219, 461, 59, 161,
	278, 277, 279, 208, 313, 261, 400, 401, 402, 182,
	78, 403, 251, 19, 404, 405, 298, 215, 406, 53,
	407, 408, 321, 191, 409, 51, 462, 38, 196, 463,
	410, 411, 412, 413, 414, 300, 415, 299, 273, 275,
	203, 301, 350, 416, 247, 195, 467, 417, 183, 451,
	197, 200, 190, 322, 184, 418, 419, 420, 421, 422,
	229, 423, 424, 235, 469, 40, 425, 426, 427, 428,
	223, 218, 316, 325, 58, 79, 283, 429, 449, 241,
	216, 430, 232, 52, 470, 471, 472, 210, 473, 303,
	106, 220, 221, 44, 262, 202, 431, 432, 252, 253,
	267, 240, 263, 233, 437, 204, 304, 192, 433, 324,
	217, 284, 354, 209, 305, 448, 353, 260, 257, 211,
	434, 306, 166, 205, 206, 435, 438, 307, 308, 310,
	311, 227, 309, 312, 212, 352, 255, 285, 164, -55,
	164, -101, -194, 164, -166, 287, -185, 289, 302, 297,
	307, 295, -177, 298, 300, 203, -275, 315, 164, 304,
	153, 144, 290, 299, 308, 309, 312, 212, -271, -260,
	458, 473, 314, 259, 294, 292, 316, 440, 311, 310,
	-194, 233, -201, 238, -189, -260, -188, 236, -101, -61,
	436, 157, -203, -203, -72, 440, 442, -121, -85, -107,
	110, -112, 30, 24, -111, -108, -129, -126, -127, 144,
	145, 147, 146, 148, 133, 134, 141, 111, 149, -116,
	-114, -115, -117, 88, 87, 96, 89, 90, 91, 92,
	98, 99, 100, -189, -194, -124, -278, 65, 66, 337,
	338, 339, 340, 345, 341, 113, 54, 332, 326, 335,
	334, 333, 330, 331, 328, 329, 343, 344, 169, 327,
	163, 139, 336, -260, -188, 41, 303, 303, -101, -55,
	-5, -4, -278, 6, 21, 22, -142, 18, 17, -279,
	83, -64, -77, 60, 61, -79, 22, 37, 64, 62,
	21, -56, -76, 135, -85, -194, -76, -175, 168, -175,
	-175, -165, -206, 233, -169, 316, 315, -190, -167, -189,
	-187, -166, 313, 158, 355, 109, 23, 25, 112, 144,
	17, 113, 36, 160, 259, 176, 143, 172, 337, 153,
	69, 356, 328, 329, 326, 332, 339, 340, 327, 289,
	30, 11, 358, 26, 186, 22, 37, 137, 155, 116,
	117, 189, 24, 187, 100, 361, 20, 72, 181, 12,
	174, 14, 362, 363, 15, 169, 168, 128, 165, 67,
	9, 149, 27, 125, 63, 364, 29, 365, 366, 367,
	368, 65, 126, 18, 330, 331, 32, 441, 369, 345,
	198, 139, 70, 56, 442, 110, 370, 371, 98, 372,
	101, 73, 447, 107, 16, 68, 39, 373, 199, 374,
	171, 375, 319, 376, 127, 156, 336, 66, 377, 163,
	302, 6, 342, 31, 185, 173, 64, 378, 164, 115,
	343, 344, 167, 99, 5, 170, 33, 10, 71, 74,
	333, 334, 335, 54, 349, 114, 13, 379, 320, 108,
	314, -237, 126, -224, -228, -189, 180, -253, 176, -101,
	-246, -245, -189, -71, -184, 165, 174, 173, 170, -264,
	107, 220, 327, 163, -36, -37, -166, 143, 197, 82,
	82, -228, -227, -226, -265, 199, 180, -252, -244, 172,
	181, -234, 173, 174, -229, 165, 29, -265, -229, 171,
	181, 199, 199, 106, 199, 106, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 196, -235, 118, -235, 353,
	353, -240, -265, -265, -265, 167, 34, 34, -186, -229,
	167, 23, -235, -235, -166, 143, -235, -235, -235, -235,
	207, 207, -235, -235, -235, -235, -235, -235, -235, -235,
	-235, -235, -235, -235, -235, -235, -235, 164, -264, -80,
	312, 227, 77, -38, 209, -22, -101, -184, 165, 166,
	-264, -101, 150, -101, -179, 126, 13, -179, -176, 303,
	301, 288, 293, -179, -179, -179, -179, 210, 286, -230,
	165, 34, 177, 303, 210, 286, 210, 211, 210, 211,
	296, 306, 210, -199, 12, 128, 327, 291, 295, 203,
	164, 204, 166, 305, -260, 443, 211, -199, 303, 206,
	-179, -204, -278, -190, 259, -204, -204, 31, 167, -189,
	-57, -189, 88, -7, -3, -11, -10, -12, 118, -78,
	303, -66, 144, 458, 444, 445, 446, 443, 300, 451,
	449, 447, 210, 448, 82, 109, 107, 108, 125, -85,
	-109, 128, 110, 126, 127, 112, 130, 129, 140, 133,
	134, 135, 136, 137, 138, 139, 131, 132, 143, 118,
	119, 120, 121, 122, 123, 124, -174, -278, -127, -278,
	151, 152, -112, -112, -112, -112, -112, -112, -112, -112,
	-112, -112, -278, 150, -2, -121, -4, -278, -278, -278,
	-278, -278, -278, -278, -278, -134, -85, -278, -282, -278,
	-282, -118, -278, -282, -118, -282, -118, -282, -282, -118,
	-282, -118, -282, -282, -118, -278, -278, -278, -278, -278,
	-278, -278, -203, -272, -273, -104, -101, -278, 227, -138,
	-3, -55, -157, 20, 32, -85, -139, -140, -85, -138,
	56, -74, -76, -79, 60, 61, 94, 12, -192, -191,
	23, -189, 88, 150, 12, -102, 27, -101, -87, -88,
	-89, -90, -104, -128, -278, 12, -94, -95, -101, -103,
	-194, 82, 233, -169, -206, -171, -170, 317, 319, 118,
	-193, -189, 88, 30, 83, 82, -101, -208, -211, -213,
	-212, -214, -209, -210, 256, 257, 144, 260, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 271, 31, 188,
	252, 253, 254, 255, 272, 273, 274, 275, 276, 277,
	278, 279, 239, 258, 347, 240, 241, 242, 243, 244,
	245, 247, 248, 249, 250, 251, -263, -260, 81, 83,
	82, -215, 81, -80, 164, -260, 165, 165, 165, -55,
	336, -235, -235, 196, -29, -26, -256, 16, -25, -26,
	158, 102, 103, 155, 81, -224, 81, -233, -263, -260,
	81, 29, 171, 170, -232, -229, -232, -233, -260, -129,
	-189, -194, -260, 29, 29, -162, -189, -162, -162, 21,
	-162, 21, -162, 21, 89, -189, -162, 21, -162, 21,
	-162, 21, -162, 21, -162, 21, 30, 75, 76, 30,
	78, 79, 80, -129, -129, -224, -166, -101, -260, 89,
	89, -235, -235, 89, 88, 88, 88, -235, -235, 89,
	88, -260, 88, -266, 182, 224, 226, 89, 89, 89,
	89, 30, 88, -267, 30, 465, 464, 466, 467, 468,
	89, 30, 89, 30, 89, -189, 81, -101, -83, 214,
	153, 155, 158, 73, 88, 228, 118, 41, 82, 167,
	164, -260, -181, 169, -181, -195, -194, -187, 88, -85,
	-231, 12, 128, -199, -199, -179, -101, -231, -199, -179,
	-101, -179, -179, -179, -179, -199, -199, -199, -179, -194,
	-194, -101, -101, -101, -101, -101, -101, -101, -204, -204,
	-204, -180, 126, -179, 73, -202, 236, 270, 437, 438,
	439, 82, 349, -94, 443, 443, 443, 443, 443, 443,
	-85, -85, -85, -85, -119, 98, 110, 99, 100, -112,
	-120, -124, -127, 93, 128, 126, 127, 112, -112, -112,
	-112, -112, -112, -112, -112, -112, -112, -112, -112, -112,
	-112, -112, -112, -205, -260, 88, 144, -260, -111, -111,
	-189, -75, 22, 37, -74, -190, -195, -187, -70, -279,
	-279, -138, -74, -74, -85, -85, -129, 88, -74, -129,
	88, -74, -74, -69, 22, 37, -132, -133, 114, -129,
	-279, -112, -189, -189, -74, -75, -75, -74, -74, 82,
	-274, 319, 320, 441, -197, 199, -196, 23, -194, 88,
	-122, -121, 88, -142, -279, -143, 27, 10, 128, 82,
	19, 82, -141, 25, 26, -142, -113, -189, 89, 92,
	-86, 82, 12, -79, -101, -191, 135, -195, -101, -161,
	199, -101, 31, 82, -97, -99, -98, -100, 63, 67,
	69, 64, 65, 66, 70, -200, 23, -87, -3, -278,
	-101, -94, -280, 82, 12, 74, -280, 82, 150, -169,
	-171, 82, 318, 320, 321, 73, 101, -85, -217, 143,
	-242, -241, -240, -224, -226, -227, -228, 83, -144, -220,
	284, -215, -215, -215, -215, -215, -216, -166, -216, -216,
	-216, 81, 81, -215, -215, -215, -215, -218, 81, -218,
	-218, -219, 81, -219, -253, -85, -250, -249, -247, -248,
	175, 95, 349, 74, -245, -141, 89, -83, -182, 169,
	-251, -248, -260, -260, -260, -182, -260, 88, -260, 88,
	82, 17, -225, -224, -130, 224, -255, 199, -252, -246,
	-233, 29, -232, -233, -233, 150, -260, 82, 27, 106,
	106, 106, 106, 349, 155, 31, -224, -130, -205, 167,
	-205, -205, 88, 88, -178, 473, -94, -82, 216, 118,
	205, 205, 164, 164, 218, -101, 229, 230, 228, 21,
	217, 219, 221, 207, -101, -101, -181, 73, -96, -101,
	24, -194, -101, -179, -179, -101, -179, -179, 88, -101,
	-189, -66, 319, 349, 20, -67, 20, 98, 99, 100,
	-120, -112, -112, -112, -73, 189, 109, -279, -279, -74,
	-74, -278, 150, -5, -142, -279, -279, 82, 74, 23,
	12, 12, -279, 12, 12, -279, -279, -74, -135, -133,
	116, -85, -279, -279, 82, 82, -279, -279, -279, -279,
	-279, -273, 440, 320, -105, 71, 168, 72, -278, -196,
	-279, -157, 39, 47, 58, -85, -85, -140, -157, -173,
	20, 12, 54, 54, -106, 13, -76, -87, -79, 150,
	-106, -110, 31, 54, -3, -278, -278, -164, -168, -129,
	-88, -89, -89, -88, -89, 63, 63, 63, 68, 63,
	68, 63, -98, -194, -279, -279, -3, -161, 74, -87,
	-101, -87, -103, -194, 135, -170, -172, 322, 319, 325,
	-260, 88, 82, -240, -228, 98, 110, 30, 73, 281,
	95, 171, 29, 170, -221, 285, -216, -216, -217, -260,
	88, 144, -217, -217, -217, -223, 88, -223, 89, 89,
	83, -32, -27, -28, 32, 77, -247, -235, 88, 38,
	-189, 83, -82, -101, 110, 73, -251, -251, -251, -194,
	16, -159, -189, 82, 83, -131, 225, -129, 83, -189,
	83, 81, -233, -190, -189, -278, 164, 30, 30, -130,
	-131, -217, -260, 475, 474, 83, 166, 223, -84, 332,
	88, 84, -101, -101, -101, -101, -101, 158, 155, 208,
	167, -94, -101, 82, -60, 184, 179, -199, -199, 32,
	319, 452, 450, -73, 109, -112, -112, -279, -279, -75,
	-190, -138, -157, -207, 144, 256, 188, 254, 250, 270,
	261, 283, 252, 284, -205, -207, -112, -112, -112, -112,
	346, -138, 117, -85, 115, -112, -112, 165, 165, 165,
	-162, 40, 88, 88, 59, -101, -136, 14, -85, 135,
	-142, -163, 73, -164, -123, -125, -124, -278, -158, -279,
	-189, -162, -106, 82, 118, -92, -91, 73, 74, -93,
	73, -91, 63, 63, -279, -106, -87, -106, -106, 150,
	319, 323, 324, -240, 98, -112, 10, 88, 29, 29,
	-217, -217, 83, 82, 83, 82, 83, 82, -183, 386,
	110, -28, -27, -235, -235, 89, -260, 166, 24, -101,
	73, 73, 73, 17, 82, -224, -129, 54, -250, -159,
	-254, -255, -101, -111, -131, -101, -81, 214, 222, 81,
	85, -262, 74, 205, 281, 205, -101, -60, -32, -101,
	-179, -179, 32, -260, -112, -279, -142, -279, -215, -215,
	-215, -219, -215, 244, -215, 244, -279, -279, 20, 20,
	20, 20, -278, -65, 342, -85, 82, 82, -278, -278,
	-278, -279, 88, -216, -137, 15, 17, 28, -163, 82,
	-279, -279, 82, 54, 150, -279, -138, -168, -85, -85,
	81, -85, -138, -106, -115, -216, 88, -216, 89, 89,
	386, 30, 78, 79, 80, 30, 75, 76, -101, -101,
	-101, -101, -159, -189, 201, 83, -279, 82, -222, 349,
	352, -160, 81, 83, -259, 349, -261, -260, -189, -189,
	-189, -157, -216, -260, -112, -112, -112, -112, -112, -142,
	88, -112, -112, -159, -279, -159, -159, -197, -216, -146,
	-151, -176, -85, -121, 29, -125, 54, -3, -189, -123,
	-189, -142, -159, -142, -217, -217, 83, 83, -160, 202,
	183, -255, 353, 353, 23, -159, -258, -257, -190, 81,
	74, -279, -279, -279, -279, -68, 128, 349, -279, -279,
	-279, -279, -279, -279, -105, -149, 436, -154, 43, -152,
	-153, 44, -150, 45, 53, 10, -123, 150, 83, 23,
	-278, -101, -3, 83, 82, 118, -159, -101, -279, 347,
	70, 350, -146, 48, 262, -156, -155, 52, 44, -153,
	17, 46, 17, -164, -189, -3, -112, 198, 81, -58,
	349, -257, -239, -190, 88, 89, 83, 59, 348, 351,
	-147, 50, -145, 49, -145, -155, 17, 17, 88, 17,
	88, -58, -279, -279, -159, -59, 213, 440, -262, 59,
	-148, 51, 73, 101, 88, 88, 88, 83, 176, -259,
	349, 73, 101, -269, -270, 73, 215, 350, -270, 73,
	11, 10, 351, -268, 184, 179, 182, 31, -268, 178,
	30, 98,
}

var yyDef = [...]int{
	34, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 823, 0, 559, 559, 559, 559, 559,
	559, 559, 0, 0, 559, -2, -2, 559, 959, 0,
	559, 0, 0, -2, 492, 493, 0, 495, -2, 0,
	0, 504, 1370, 1370, 554, 0, 0, 0, 0, 0,
	559, 1368, 55, 56, 510, 511, 512, 1, 3, 0,
	563, 831, 0, 0, -2, 561, 0, 0, 942, 942,
	942, 0, 86, 87, 0, 0, 0, -2, 90, -2,
	114, 115, 0, 119, 368, 329, 371, 327, 357, -2,
	320, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 332, 224, 224, 0, 0, -2, 320,
	320, 320, 0, 0, 0, 354, 944, 274, 224, 224,
	0, 224, 224, 224, 224, 0, 0, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 847, 118, 960, 957, 958, 35, 36, 37,
	1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109,
	1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119,
	1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129,
	1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139,
	1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149,
	1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159,
	1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169,
	1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179,
	1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189,
	1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199,
	1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209,
	1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219,
	1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229,
	1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239,
	1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249,
	1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259,
	1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269,
	1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279,
	1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289,
	1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299,
	1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309,
	1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319,
	1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329,
	1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339,
	1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349,
	1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359,
	1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 0, 936,
	0, 424, 644, 0, 483, 483, 0, 483, 483, 483,
	483, 0, 0, 0, 436, 0, 0, 0, 0, 480,
	0, 0, 455, 457, 0, 480, 0, 467, 483, 1371,
	1371, 1371, 927, 0, 477, 475, 489, 490, 472, 473,
	491, 494, 0, 499, 502, 953, 954, 0, 517, 0,
	1176, 509, 522, 523, 0, 555, 556, 40, 695, 654,
	0, 660, 662, 0, 697, 698, 699, 700, 701, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 727,
	728, 729, 730, 808, 809, 810, 811, 812, 813, 814,
	815, 664, 665, 805, 0, 916, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 796, 0, 765, 765, 765,
	765, 765, 765, 765, 765, 765, 0, 0, 0, 0,
	0, 0, 0, -2, -2, 1370, 0, 532, 0, 0,
	823, 51, 0, 559, 564, 565, 866, 0, 0, 823,
	1369, 0, 0, -2, -2, 575, 581, 582, 583, 584,
	585, 560, 0, 588, 592, 0, 0, 0, 943, 0,
	0, 72, 0, 1333, 920, -2, -2, 0, 0, 955,
	956, 929, -2, 963, 964, 965, 966, 967, 968, 969,
	970, 971, 972, 973, 974, 975, 976, 977, 978, 979,
	980, 981, 982, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029,
	1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039,
	1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049,
	1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059,
	1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069,
	1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079,
	1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089,
	1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099,
	-2, 0, 0, 128, 129, 0, 38, 250, 0, 124,
	0, 244, 197, 847, 0, 0, 0, 0, 0, 559,
	0, 937, 109, 110, 116, 117, 224, 224, 0, 118,
	118, 336, 337, 338, 0, 0, -2, 248, 0, 321,
	0, 0, 238, 238, 242, 240, 241, 0, 0, 0,
	0, 0, 0, 348, 0, 349, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 408, 0, 225, 0, 366,
	367, 275, 0, 0, 0, 0, 346, 347, 0, 0,
	945, 946, 0, 0, 224, 224, 0, 0, 0, 0,
	224, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 108, 860,
	0, 0, 0, -2, 0, 416, 0, 0, 0, 938,
	938, 423, 0, 425, 426, 0, 0, 427, 0, 480,
	480, 478, 479, 429, 430, 431, 432, 483, 0, 0,
	233, 234, 235, 480, 483, 0, 483, 483, 483, 483,
	480, 480, 480, 483, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1371, 1371, 1371, 486, 483, 464, 465,
	468, 469, 1372, 1373, 974, 470, 471, 928, 500, 503,
	520, 518, 519, 521, 513, 514, 515, 516, 0, 534,
	535, 540, 0, 0, 0, 0, 546, 547, 548, 0,
	0, 551, 552, 553, 0, 0, 0, 0, 0, 658,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 682,
	683, 684, 685, 686, 687, 688, 661, 0, 675, 0,
	0, 0, 717, 718, 719, 720, 721, 722, 723, 724,
	725, 0, 572, 0, 0, 0, 823, 0, 0, 0,
	0, 0, 0, 0, 569, 0, 797, 0, 748, 0,
	749, 757, 0, 750, 758, 751, 759, 752, 753, 760,
	754, 761, 755, 756, 762, 0, 0, 0, 572, 572,
	0, 0, 41, 524, 525, 0, 627, 948, 0, 831,
	0, 574, 869, 0, 0, 832, 824, 825, 828, 831,
	0, 597, 586, 576, 579, 580, 562, 0, 589, 593,
	0, 595, 596, 0, 0, 70, 0, 643, 0, 599,
	601, 602, 603, 625, 0, 0, 0, 0, 66, 68,
	644, 0, 1333, 926, 0, 74, 75, 0, 0, 0,
	212, 931, 932, 933, -2, 231, 0, 136, 204, 148,
	149, 150, 197, 152, 197, 197, 197, 197, 208, 208,
	208, 208, 180, 181, 182, 183, 184, 0, 0, 167,
	197, 197, 197, 197, 187, 188, 189, 190, 191, 192,
	193, 194, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 199, 199, 199, 201, 201, 0, 39, 0, 216,
	0, 828, 0, 860, 940, 950, 0, 0, 0, 940,
	92, 0, 0, 369, 330, 358, 370, 0, 333, 334,
	-2, 0, 0, 320, 0, 322, 0, 232, 0, -2,
	0, 242, 0, 238, 242, 239, 242, 230, 243, 350,
	805, 0, 351, 352, 0, 388, 613, 0, 0, 0,
	0, 0, 394, 395, 396, 0, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 322, 0, 355, 0, 276,
	277, 0, 0, 280, 281, 282, 283, 0, 0, 286,
	287, 288, 289, 290, 314, 315, 316, 291, 292, 293,
	294, 295, 296, 297, 308, 309, 310, 311, 312, 313,
	298, 299, 300, 301, 302, 305, 0, 102, 851, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	938, 0, 0, 0, 0, 645, 961, 962, 484, 485,
	0, 236, 237, 483, 483, 433, 456, 0, 483, 437,
	458, 438, 440, 439, 441, 460, 461, 483, 444, 481,
	482, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 462, 0, 463, 0, 0, 501, 505, 506, 507,
	508, 0, 0, 537, 542, 543, 544, 545, 557, 550,
	696, 655, 656, 657, 659, 676, 0, 678, 680, 666,
	667, 691, 692, 693, 0, 0, 0, 0, 689, 671,
	0, 702, 703, 704, 705, 706, 707, 708, 709, 710,
	711, 712, 713, 716, 780, 781, 782, 0, 714, 715,
	726, 0, 0, 0, 573, 806, 0, -2, 0, 694,
	915, 831, 0, 0, 0, 0, 699, 808, 0, 699,
	808, 0, 0, 0, 570, 571, 803, 800, 0, 0,
	766, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	527, 528, 530, 0, 647, 0, 628, 0, 630, 631,
	0, 949, 533, 866, 52, 42, 0, 867, 0, 0,
	0, 0, 827, 829, 830, 866, 0, 816, 0, 0,
	652, 0, 0, 577, 48, 594, 590, 0, 652, 0,
	0, 642, 0, 0, 0, 0, 0, 0, 632, 0,
	0, 635, 0, 0, 0, 0, 626, 0, 0, 0,
	-2, 0, 0, 0, 62, 63, 0, 0, 0, 921,
	73, 0, 0, 78, 79, 922, 923, 924, 925, 0,
	111, -2, 271, 130, 132, 133, 134, 125, 135, 206,
	205, 151, 208, 208, 174, 175, 212, 0, 212, 212,
	212, 0, 0, 168, 169, 170, 171, 162, 0, 163,
	164, 165, 0, 166, 249, 0, 835, 217, 218, 220,
	224, 0, 0, 0, 245, 246, 0, 851, 0, 0,
	0, 951, 950, 950, 950, 0, 120, 121, 122, 123,
	118, 0, 0, 126, 324, 0, 0, 0, 247, 0,
	0, 226, 242, 227, 228, 0, 353, 0, 0, 390,
	391, 392, 393, 0, 0, 0, 322, 324, 212, 0,
	278, 279, 284, 285, 303, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 385, 386,
	848, 849, 850, 0, 0, 417, 0, 0, 263, 64,
	939, 422, 480, 443, 459, 480, 435, 442, 487, 466,
	497, 541, 0, 0, 0, 549, 0, 677, 679, 681,
	668, 689, 672, 0, 669, 0, 0, 663, 731, 0,
	0, 572, 0, 823, 866, 735, 736, 0, 0, 0,
	0, 0, 773, 0, 0, 774, 0, 823, 0, 801,
	0, 0, 747, 767, 0, 0, 768, 769, 770, 771,
	772, 526, 529, 531, 607, 0, 0, 0, 0, 629,
	947, 44, 0, 0, 0, 833, 834, 826, 43, 0,
	934, 935, 817, 818, 819, 0, 587, 598, 578, 0,
	831, 909, 0, 0, 901, 0, 0, 652, 917, 0,
	600, 621, 623, 0, 618, 633, 634, 636, 0, 638,
	0, 640, 641, 604, 605, 606, 0, 652, 0, 652,
	67, 652, 69, 0, 646, 76, 77, 0, 0, 83,
	213, 214, 118, 273, 131, 137, 0, 0, 0, 141,
	0, 0, 144, 146, 147, 207, 212, 212, 176, 209,
	210, 211, 177, 178, 179, 0, 195, 0, 0, 0,
	266, 88, 839, 838, 224, 224, 219, 0, 222, 0,
	952, 198, 0, 101, 0, 0, 0, 0, 0, 107,
	0, 328, 611, 0, 339, 340, 0, 323, 387, 0,
	216, 0, 229, 806, 614, 0, 0, 341, 0, 324,
	344, 345, 356, 306, 307, 304, 0, 0, 861, 862,
	0, 865, 93, 376, 378, 377, 381, 0, 0, 374,
	0, 263, 835, 0, 421, 264, 265, 483, 483, 536,
	0, 539, 0, 670, 0, 690, 673, 732, 733, 0,
	807, 831, 46, 0, 197, 197, 786, 197, 201, 789,
	197, 791, 197, 794, 0, 0, 0, 0, 0, 0,
	0, 798, 746, 804, 0, 0, 0, 0, 0, 0,
	0, 0, 208, 871, 868, 45, 821, 0, 653, 591,
	49, 53, 0, 909, 900, 911, 913, 0, 0, 0,
	905, 0, 823, 0, 0, 615, 622, 0, 0, 616,
	0, 617, 637, 639, -2, 823, 652, 60, 61, 0,
	80, 81, 82, 272, 138, 139, 0, 142, 143, 145,
	172, 173, 208, 0, 208, 0, 202, 0, 255, 267,
	0, 836, 837, 0, 0, 221, 223, 0, 941, 103,
	0, 0, 0, 0, 0, 127, 325, 0, 215, 0,
	0, 412, 409, 342, 343, 609, 852, 853, 854, 0,
	864, 96, 0, 0, 0, 0, 418, 419, 420, 65,
	428, 434, 538, 558, 674, 734, 866, 737, 783, 208,
	787, 788, 790, 792, 793, 795, 739, 738, 0, 0,
	0, 0, 0, 831, 0, 802, 0, 0, 0, 0,
	0, 627, 208, 891, 50, 0, 0, 0, 54, 0,
	914, 0, 0, 0, 0, 71, 831, 918, 919, 619,
	0, 624, 831, 59, 140, 212, 196, 212, 0, 0,
	268, 840, 841, 842, 843, 844, 845, 846, 609, 104,
	105, 106, 331, 612, 0, 0, 389, 0, 397, 0,
	0, 0, 0, 863, 375, 0, 94, 95, 0, 0,
	380, 47, 784, 785, 0, 0, 0, 0, 775, 0,
	799, 0, 0, 0, 649, 0, 0, 647, 873, 872,
	885, 898, 822, 820, 0, 912, 0, 904, 907, 903,
	906, 57, 0, 58, 185, 186, 200, 203, 0, 0,
	0, 413, 410, 411, 0, 0, 97, 98, 0, 0,
	0, 740, 742, 741, 743, 0, 0, 0, 745, 763,
	764, 648, 650, 651, 608, 891, 0, 884, 0, -2,
	893, 0, 0, 0, 899, 0, 902, 0, 620, 0,
	0, 0, 855, 610, 0, 0, 0, 382, 744, 0,
	0, 0, 878, 876, 876, 886, 887, 0, 0, 894,
	0, 0, 0, 910, 908, 855, 0, 0, 0, 372,
	857, 99, 100, 317, 318, 319, 93, 776, 0, 779,
	881, 0, 874, 877, 875, 888, 0, 0, 895, 0,
	897, 89, 414, 415, 0, 0, 858, 859, 96, 777,
	870, 0, 879, 880, 889, 890, 896, 251, 0, 379,
	0, 882, 883, 252, 253, 0, 856, 0, 254, 0,
	0, 0, 778, 256, 258, 259, 0, 0, 257, 260,
	261, 262,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 111, 3, 3, 3, 138, 130, 3,
	81, 83, 135, 133, 82, 134, 150, 136, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 476,
	119, 118, 120, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 141,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 112, 113, 114, 115,
	116, 117, 121, 122, 123, 124, 125, 126, 127, 128,
	131, 132, 137, 139, 142, 143, 144, 145, 146, 147,
	148, 149, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:425
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:430
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:431
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:435
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:468
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:474
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:478
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:482
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:487
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:491
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:497
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:503
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:509
		{
			sel := yyDollar[1].selStmtUnion().(*Select)
			sel.OrderBy = yyDollar[2].orderByUnion()
			sel.Limit = yyDollar[3].limitUnion()
			sel.Lock = yyDollar[4].lockUnion()
			sel.Into = yyDollar[5].selectIntoUnion()
			yyLOCAL = sel
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:518
		{
			yyLOCAL = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmtUnion()}, OrderBy: yyDollar[4].orderByUnion(), Limit: yyDollar[5].limitUnion(), Lock: yyDollar[6].lockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:522
		{
			yyLOCAL = Unionize(yyDollar[1].selStmtUnion(), yyDollar[3].selStmtUnion(), yyDollar[2].booleanUnion(), yyDollar[4].orderByUnion(), yyDollar[5].limitUnion(), yyDollar[6].lockUnion())
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:526
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:549
		{
			sel := yyDollar[1].selStmtUnion().(*Select)
			sel.OrderBy = yyDollar[2].orderByUnion()
			sel.Limit = yyDollar[3].limitUnion()
			sel.Lock = yyDollar[4].lockUnion()
			yyLOCAL = sel
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:557
		{
			yyLOCAL = Unionize(yyDollar[1].selStmtUnion(), yyDollar[3].selStmtUnion(), yyDollar[2].booleanUnion(), yyDollar[4].orderByUnion(), yyDollar[5].limitUnion(), yyDollar[6].lockUnion())
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:563
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:569
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:577
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:583
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:587
		{
			yyLOCAL = &ParenSelect{Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:594
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:606
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:618
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:622
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:628
		{
			yyLOCAL = &Update{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), TableExprs: yyDollar[4].tableExprsUnion(), Exprs: yyDollar[6].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion()), OrderBy: yyDollar[8].orderByUnion(), Limit: yyDollar[9].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:634
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion()), OrderBy: yyDollar[8].orderByUnion(), Limit: yyDollar[9].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:638
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:642
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Targets: yyDollar[4].tableNamesUnion(), TableExprs: yyDollar[6].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:646
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Targets: yyDollar[4].tableNamesUnion(), TableExprs: yyDollar[6].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:651
		{
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:652
		{
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:656
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:660
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:666
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:670
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:676
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:680
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:685
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:689
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:695
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:701
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:705
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:711
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:715
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:721
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:725
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:729
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:735
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:739
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:743
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:747
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:753
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:757
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:763
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:769
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:776
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:785
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].str, Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:789
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:796
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:800
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:805
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:809
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:815
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:820
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:825
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:831
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:836
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:842
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 101:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:848
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:855
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:862
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:867
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:872
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:877
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:884
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:891
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:902
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:908
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:912
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:918
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:922
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:926
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:930
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:935
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:939
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:945
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:949
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 122:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:955
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:959
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:966
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:970
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:976
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:980
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:986
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:991
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:996
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1000
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1005
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1009
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1013
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1019
		{
			yyDollar[2].columnType.Options = yyDollar[3].columnTypeOptionsUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1029
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1033
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1039
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1045
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1050
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1055
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1060
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1065
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = colKeyPrimary
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1070
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = colKey
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1075
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = colKeyUniqueKey
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1080
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = colKeyUnique
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1087
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1098
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1103
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1109
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1113
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1117
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1121
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1125
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1129
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1133
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1137
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1141
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1147
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1153
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1159
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1165
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1171
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1179
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1183
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1187
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1191
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1195
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1201
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1205
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1209
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1213
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1217
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1221
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1225
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1229
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1233
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1237
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1241
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1245
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1249
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 185:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1253
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 186:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1258
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1264
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1268
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1272
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1276
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1280
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1284
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1288
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1292
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1298
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1303
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1308
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1312
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1317
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 200:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1321
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 201:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1329
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1333
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 203:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1339
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 204:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1347
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1351
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1356
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1360
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1365
		{
			yyVAL.str = ""
		}
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1369
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1373
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1377
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 212:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1382
		{
			yyVAL.str = ""
		}
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1386
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1390
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 215:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:1397
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1402
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1406
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1412
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1416
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1422
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1426
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1431
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1435
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1441
		{
			yyVAL.str = ""
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1445
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1451
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1455
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1459
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1463
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1467
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1472
		{
			yyVAL.str = ""
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1476
		{
			yyVAL.str = yyDollar[2].str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1482
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1486
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1490
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1497
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1501
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 238:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1506
		{
			yyVAL.str = "key"
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1510
		{
			yyVAL.str = yyDollar[1].str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1516
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1520
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 242:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1525
		{
			yyVAL.str = ""
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1529
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:1535
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1539
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:1545
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1551
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1555
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1561
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1565
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1571
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferencedTable: yyDollar[8].tableName, ReferencedColumns: yyDollar[10].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1575
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferencedTable: yyDollar[8].tableName, ReferencedColumns: yyDollar[10].columnsUnion(), OnDelete: yyDollar[12].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1579
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferencedTable: yyDollar[8].tableName, ReferencedColumns: yyDollar[10].columnsUnion(), OnUpdate: yyDollar[12].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1583
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferencedTable: yyDollar[8].tableName, ReferencedColumns: yyDollar[10].columnsUnion(), OnDelete: yyDollar[12].ReferenceActionUnion(), OnUpdate: yyDollar[13].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1589
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1595
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1601
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1607
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1611
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1615
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1619
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1623
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1628
		{
			yyVAL.str = ""
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1632
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1636
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 266:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1641
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1645
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1649
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1654
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1658
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1664
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1668
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1672
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1678
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1682
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1688
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1692
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1696
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1700
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1704
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1708
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1712
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1716
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1720
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1724
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1728
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1732
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1736
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1740
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1744
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1748
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1752
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1756
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1760
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1764
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1768
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1772
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1776
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1780
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1784
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1788
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1792
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1796
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1800
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1805
		{
			yyVAL.str = ""
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1809
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1813
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1832
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1836
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1840
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1845
		{
			yyVAL.str = ""
		}
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:1851
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:1855
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:1860
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:1864
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1869
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1873
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1877
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1881
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1885
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 331:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1889
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1895
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1899
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1903
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1909
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1913
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1917
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1921
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1925
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1929
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].colNameUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1933
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1937
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1941
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].colNameUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1945
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].colNameUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1949
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1953
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1957
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1961
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1965
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1969
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1973
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1977
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1981
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1985
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1989
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1993
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1999
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2003
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2009
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2013
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2017
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2021
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2025
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2029
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2033
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2037
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2041
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2047
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2053
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2060
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2067
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2073
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2077
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2084
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2091
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2103
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2113
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2117
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2121
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2134
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2144
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2148
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2159
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2166
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2173
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2180
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2188
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2192
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2196
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2200
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2204
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2208
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2212
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2216
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2220
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2224
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2228
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2232
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2236
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2240
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2244
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2248
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2252
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2256
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2260
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2264
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2268
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2272
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2277
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2281
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2285
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2292
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2296
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 414:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2302
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2306
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2312
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:2318
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2322
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 419:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2328
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2332
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2341
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2345
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2351
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2355
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2360
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2366
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2370
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2374
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2378
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2382
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2386
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2390
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2394
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2398
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2402
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2406
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2410
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2414
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2418
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2422
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2426
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2430
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2434
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2438
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2442
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2446
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2450
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2454
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2458
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2462
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2466
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2470
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2474
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2478
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2482
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2486
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2490
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2494
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2498
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2502
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2506
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2510
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2515
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2519
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2523
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2527
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2531
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2536
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2550
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2554
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2558
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2564
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2568
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 474:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2574
		{
			yyVAL.str = ""
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2578
		{
			yyVAL.str = "extended "
		}
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2584
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2588
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2594
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2598
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 480:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2604
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2608
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2612
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 483:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2618
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2622
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2626
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2632
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2636
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2642
		{
			yyVAL.empty = struct{}{}
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2646
		{
			yyVAL.empty = struct{}{}
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2650
		{
			yyVAL.empty = struct{}{}
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2656
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2660
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2666
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2670
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2676
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2682
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2686
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2691
		{
			yyVAL.empty = struct{}{}
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2693
		{
			yyVAL.empty = struct{}{}
		}
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2696
		{
			yyVAL.empty = struct{}{}
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2698
		{
			yyVAL.empty = struct{}{}
		}
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2703
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2709
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2714
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2718
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2722
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2726
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2730
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2734
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2740
		{
			yyVAL.str = yyDollar[1].str
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2744
		{
			yyVAL.str = yyDollar[1].str
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2748
		{
			yyVAL.str = yyDollar[1].str
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2754
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2758
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2762
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2766
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2771
		{
			yyVAL.str = ""
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2775
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2779
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2785
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2789
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2795
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2799
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2805
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:2811
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2815
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:2821
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2827
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2831
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2835
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2839
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2845
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2851
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2857
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2861
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2865
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2869
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2873
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2877
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2883
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2887
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2893
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2897
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2901
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2905
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2909
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2913
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2917
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2921
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2925
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2929
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2933
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2937
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2942
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2946
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2950
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2955
		{
			yyVAL.str = ""
		}
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2959
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 559:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2964
		{
			setAllowComments(yylex, true)
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2968
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2974
		{
			yyVAL.strs = nil
		}
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2978
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2984
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2988
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2992
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2997
		{
			yyVAL.str = ""
		}
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3001
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3005
		{
			yyVAL.str = SQLCacheStr
		}
	case 569:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3010
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3014
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3018
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3023
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3027
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3032
		{
			yyVAL.strs = nil
		}
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3036
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3040
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3044
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3048
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3054
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3058
		{
			yyVAL.str = SQLCacheStr
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3062
		{
			yyVAL.str = DistinctStr
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3066
		{
			yyVAL.str = DistinctStr
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3070
		{
			yyVAL.str = StraightJoinHint
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3074
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3078
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3084
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3088
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3094
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3098
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3102
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3106
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3111
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3115
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3119
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3126
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 597:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3131
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3135
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3141
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3145
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3155
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3159
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3163
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:3169
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3175
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3179
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3184
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3188
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3194
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3198
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:3204
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3208
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3221
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3225
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3229
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3233
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3239
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3241
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3245
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3247
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 623:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3251
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3253
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 625:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3256
		{
			yyVAL.empty = struct{}{}
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3258
		{
			yyVAL.empty = struct{}{}
		}
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3261
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3265
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3269
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3276
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3282
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3286
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3290
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3296
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3302
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3306
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3310
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3314
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3320
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3324
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3334
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3338
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3344
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3348
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3354
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 647:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3359
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3363
		{
			yyLOCAL = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3367
		{
			yyLOCAL = &IndexHints{Type: UseOp}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3371
		{
			yyLOCAL = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3375
		{
			yyLOCAL = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3380
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3384
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3390
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3394
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3398
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3402
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3406
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3410
		{
			yyLOCAL = &IsExpr{Operator: yyDollar[3].isExprOperatorUnion(), Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3414
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3418
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3424
		{
			yyVAL.str = ""
		}
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3428
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:3434
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:3438
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3444
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3448
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3452
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3456
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3460
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3464
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3468
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3472
		{
			yyLOCAL = &RangeCond{Left: yyDollar[1].exprUnion(), Operator: BetweenOp, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3476
		{
			yyLOCAL = &RangeCond{Left: yyDollar[1].exprUnion(), Operator: NotBetweenOp, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3480
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3486
		{
			yyLOCAL = IsNullOp
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3490
		{
			yyLOCAL = IsNotNullOp
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3494
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3498
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3502
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3506
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3512
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3516
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3520
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3524
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3528
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3532
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3536
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3541
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3545
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3551
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3555
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3559
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:3566
		{
			yyLOCAL = &Subquery{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:3572
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3576
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3582
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3586
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3590
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3594
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3598
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3602
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3606
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3610
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3614
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3618
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3622
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3626
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3630
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3634
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3638
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3642
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3646
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3650
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3654
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3658
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3662
		{
			yyLOCAL = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3666
		{
			yyLOCAL = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3670
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3674
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3678
		{
			yyLOCAL = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3682
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3686
		{
			yyLOCAL = handleUnaryMinus(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3690
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3694
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3698
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3716
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3720
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3724
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3728
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3738
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3742
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3746
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3750
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3754
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3758
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].colNameUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3762
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].colNameUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3766
		{
			yyLOCAL = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].str), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3770
		{
			yyLOCAL = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].str), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3774
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3778
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3782
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3786
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3790
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3800
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3804
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3808
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_time")}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3813
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3818
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("localtime")}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3823
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3829
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3834
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_time")}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3839
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3843
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3847
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3852
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3857
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3862
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3866
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3870
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3880
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3890
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3894
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3898
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3902
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3906
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3910
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3914
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:3920
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:3924
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:3928
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:3932
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:3936
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3942
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3946
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3950
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3956
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3960
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3964
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: string(yyDollar[3].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3968
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3972
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3976
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3982
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3986
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3990
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3994
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3998
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4002
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4006
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4011
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4015
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4020
		{
			yyVAL.str = string("")
		}
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4024
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:4030
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4034
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 802:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:4040
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4045
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4049
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4055
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4059
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4063
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4069
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4073
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4077
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4081
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4085
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4089
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4093
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4098
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4104
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4113
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4117
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4123
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4127
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4132
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4136
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4141
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4145
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4151
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4155
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:4161
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4166
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4170
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4174
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4179
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4183
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4187
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4191
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4196
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4200
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4204
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4208
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4212
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4219
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4223
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4227
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4231
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4237
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4241
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4245
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4250
		{
			yyVAL.str = ""
		}
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4254
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4258
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4262
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4267
		{
			yyVAL.str = ""
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4271
		{
			yyVAL.str = yyDollar[3].str
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4277
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4281
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 855:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4286
		{
			yyVAL.str = ""
		}
	case 856:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4290
		{
			yyVAL.str = yyDollar[2].str
		}
	case 857:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4295
		{
			yyVAL.str = "cascaded"
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4299
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4303
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 860:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4308
		{
			yyVAL.str = ""
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4312
		{
			yyVAL.str = yyDollar[3].str
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4318
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4322
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4326
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str) + "@" + string(yyDollar[2].str)
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4330
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4335
		{
			yyLOCAL = NoLock
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4339
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4343
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4348
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4352
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4356
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4360
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4365
		{
			yyVAL.str = ""
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4369
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4373
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4378
		{
			yyVAL.str = ""
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4382
		{
			yyVAL.str = " header"
		}
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4387
		{
			yyVAL.str = ""
		}
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4391
		{
			yyVAL.str = " manifest on"
		}
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4395
		{
			yyVAL.str = " manifest off"
		}
	case 881:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4400
		{
			yyVAL.str = ""
		}
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4404
		{
			yyVAL.str = " overwrite on"
		}
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4408
		{
			yyVAL.str = " overwrite off"
		}
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4414
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 885:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4419
		{
			yyVAL.str = ""
		}
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4423
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4429
		{
			yyVAL.str = yyDollar[1].str
		}
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4433
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4439
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4443
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 891:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4448
		{
			yyVAL.str = ""
		}
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4452
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4458
		{
			yyVAL.str = yyDollar[1].str
		}
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4462
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4468
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 896:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4472
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4476
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4481
		{
			yyVAL.str = ""
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4485
		{
			yyVAL.str = " optionally"
		}
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4498
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4502
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4506
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4510
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4514
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4520
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4524
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4528
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 908:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4532
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4537
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4541
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:4547
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4551
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4557
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4561
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4567
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4573
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4583
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4587
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:4593
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:4599
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4603
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4609
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4613
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4617
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4621
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4625
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4633
		{
			yyVAL.str = "charset"
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4643
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4647
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4651
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4660
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4662
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4665
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4667
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4670
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:4672
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:4675
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:4677
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4680
		{
			yyVAL.empty = struct{}{}
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4682
		{
			yyVAL.empty = struct{}{}
		}
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4684
		{
			yyVAL.empty = struct{}{}
		}
	case 947:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4688
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4693
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4697
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:4702
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:4704
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:4708
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4714
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4718
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4725
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4731
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4735
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 959:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4740
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4744
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4751
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5181
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5190
		{
			decNesting(yylex)
		}
	case 1370:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5195
		{
			skipToEnd(yylex)
		}
	case 1371:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5200
		{
			skipToEnd(yylex)
		}
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5204
		{
			skipToEnd(yylex)
		}
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5208
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
