// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const CALL = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const GENERATED = 57380
const ALWAYS = 57381
const OUTFILE = 57382
const S3 = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const DUMPFILE = 57390
const CSV = 57391
const HEADER = 57392
const MANIFEST = 57393
const OVERWRITE = 57394
const STARTING = 57395
const OPTIONALLY = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const NEXT = 57399
const VALUE = 57400
const SHARE = 57401
const MODE = 57402
const SQL_NO_CACHE = 57403
const SQL_CACHE = 57404
const SQL_CALC_FOUND_ROWS = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const INPLACE = 57418
const COPY = 57419
const ALGORITHM = 57420
const NONE = 57421
const SHARED = 57422
const EXCLUSIVE = 57423
const SUBQUERY_AS_EXPR = 57424
const ID = 57425
const AT_ID = 57426
const AT_AT_ID = 57427
const HEX = 57428
const STRING = 57429
const NCHAR_STRING = 57430
const INTEGRAL = 57431
const FLOAT = 57432
const DECIMAL = 57433
const HEXNUM = 57434
const VALUE_ARG = 57435
const LIST_ARG = 57436
const COMMENT = 57437
const COMMENT_KEYWORD = 57438
const BIT_LITERAL = 57439
const COMPRESSION = 57440
const EXTRACT = 57441
const NULL = 57442
const TRUE = 57443
const FALSE = 57444
const OFF = 57445
const DISCARD = 57446
const IMPORT = 57447
const ENABLE = 57448
const DISABLE = 57449
const TABLESPACE = 57450
const VIRTUAL = 57451
const STORED = 57452
const EMPTY_FROM_CLAUSE = 57453
const LOWER_THAN_CHARSET = 57454
const CHARSET = 57455
const UNIQUE = 57456
const KEY = 57457
const EXPRESSION_PREC_SETTER = 57458
const OR = 57459
const XOR = 57460
const AND = 57461
const NOT = 57462
const BETWEEN = 57463
const CASE = 57464
const WHEN = 57465
const THEN = 57466
const ELSE = 57467
const END = 57468
const LE = 57469
const GE = 57470
const NE = 57471
const NULL_SAFE_EQUAL = 57472
const IS = 57473
const LIKE = 57474
const REGEXP = 57475
const IN = 57476
const SHIFT_LEFT = 57477
const SHIFT_RIGHT = 57478
const DIV = 57479
const MOD = 57480
const UNARY = 57481
const COLLATE = 57482
const BINARY = 57483
const UNDERSCORE_ARMSCII8 = 57484
const UNDERSCORE_ASCII = 57485
const UNDERSCORE_BIG5 = 57486
const UNDERSCORE_BINARY = 57487
const UNDERSCORE_CP1250 = 57488
const UNDERSCORE_CP1251 = 57489
const UNDERSCORE_CP1256 = 57490
const UNDERSCORE_CP1257 = 57491
const UNDERSCORE_CP850 = 57492
const UNDERSCORE_CP852 = 57493
const UNDERSCORE_CP866 = 57494
const UNDERSCORE_CP932 = 57495
const UNDERSCORE_DEC8 = 57496
const UNDERSCORE_EUCJPMS = 57497
const UNDERSCORE_EUCKR = 57498
const UNDERSCORE_GB18030 = 57499
const UNDERSCORE_GB2312 = 57500
const UNDERSCORE_GBK = 57501
const UNDERSCORE_GEOSTD8 = 57502
const UNDERSCORE_GREEK = 57503
const UNDERSCORE_HEBREW = 57504
const UNDERSCORE_HP8 = 57505
const UNDERSCORE_KEYBCS2 = 57506
const UNDERSCORE_KOI8R = 57507
const UNDERSCORE_KOI8U = 57508
const UNDERSCORE_LATIN1 = 57509
const UNDERSCORE_LATIN2 = 57510
const UNDERSCORE_LATIN5 = 57511
const UNDERSCORE_LATIN7 = 57512
const UNDERSCORE_MACCE = 57513
const UNDERSCORE_MACROMAN = 57514
const UNDERSCORE_SJIS = 57515
const UNDERSCORE_SWE7 = 57516
const UNDERSCORE_TIS620 = 57517
const UNDERSCORE_UCS2 = 57518
const UNDERSCORE_UJIS = 57519
const UNDERSCORE_UTF16 = 57520
const UNDERSCORE_UTF16LE = 57521
const UNDERSCORE_UTF32 = 57522
const UNDERSCORE_UTF8 = 57523
const UNDERSCORE_UTF8MB4 = 57524
const INTERVAL = 57525
const JSON_EXTRACT_OP = 57526
const JSON_UNQUOTE_EXTRACT_OP = 57527
const CREATE = 57528
const ALTER = 57529
const DROP = 57530
const RENAME = 57531
const ANALYZE = 57532
const ADD = 57533
const FLUSH = 57534
const CHANGE = 57535
const MODIFY = 57536
const REVERT = 57537
const SCHEMA = 57538
const TABLE = 57539
const INDEX = 57540
const VIEW = 57541
const TO = 57542
const IGNORE = 57543
const IF = 57544
const PRIMARY = 57545
const COLUMN = 57546
const SPATIAL = 57547
const FULLTEXT = 57548
const KEY_BLOCK_SIZE = 57549
const CHECK = 57550
const INDEXES = 57551
const ACTION = 57552
const CASCADE = 57553
const CONSTRAINT = 57554
const FOREIGN = 57555
const NO = 57556
const REFERENCES = 57557
const RESTRICT = 57558
const SHOW = 57559
const DESCRIBE = 57560
const EXPLAIN = 57561
const DATE = 57562
const ESCAPE = 57563
const REPAIR = 57564
const OPTIMIZE = 57565
const TRUNCATE = 57566
const COALESCE = 57567
const EXCHANGE = 57568
const REBUILD = 57569
const PARTITIONING = 57570
const REMOVE = 57571
const MAXVALUE = 57572
const PARTITION = 57573
const REORGANIZE = 57574
const LESS = 57575
const THAN = 57576
const PROCEDURE = 57577
const TRIGGER = 57578
const VINDEX = 57579
const VINDEXES = 57580
const DIRECTORY = 57581
const NAME = 57582
const UPGRADE = 57583
const STATUS = 57584
const VARIABLES = 57585
const WARNINGS = 57586
const CASCADED = 57587
const DEFINER = 57588
const OPTION = 57589
const SQL = 57590
const UNDEFINED = 57591
const SEQUENCE = 57592
const MERGE = 57593
const TEMPORARY = 57594
const TEMPTABLE = 57595
const INVOKER = 57596
const SECURITY = 57597
const FIRST = 57598
const AFTER = 57599
const LAST = 57600
const VITESS_MIGRATION = 57601
const CANCEL = 57602
const RETRY = 57603
const COMPLETE = 57604
const CLEANUP = 57605
const BEGIN = 57606
const START = 57607
const TRANSACTION = 57608
const COMMIT = 57609
const ROLLBACK = 57610
const SAVEPOINT = 57611
const RELEASE = 57612
const WORK = 57613
const BIT = 57614
const TINYINT = 57615
const SMALLINT = 57616
const MEDIUMINT = 57617
const INT = 57618
const INTEGER = 57619
const BIGINT = 57620
const INTNUM = 57621
const REAL = 57622
const DOUBLE = 57623
const FLOAT_TYPE = 57624
const DECIMAL_TYPE = 57625
const NUMERIC = 57626
const TIME = 57627
const TIMESTAMP = 57628
const DATETIME = 57629
const YEAR = 57630
const CHAR = 57631
const VARCHAR = 57632
const BOOL = 57633
const CHARACTER = 57634
const VARBINARY = 57635
const NCHAR = 57636
const TEXT = 57637
const TINYTEXT = 57638
const MEDIUMTEXT = 57639
const LONGTEXT = 57640
const BLOB = 57641
const TINYBLOB = 57642
const MEDIUMBLOB = 57643
const LONGBLOB = 57644
const JSON = 57645
const ENUM = 57646
const GEOMETRY = 57647
const POINT = 57648
const LINESTRING = 57649
const POLYGON = 57650
const GEOMETRYCOLLECTION = 57651
const MULTIPOINT = 57652
const MULTILINESTRING = 57653
const MULTIPOLYGON = 57654
const ASCII = 57655
const UNICODE = 57656
const NULLX = 57657
const AUTO_INCREMENT = 57658
const APPROXNUM = 57659
const SIGNED = 57660
const UNSIGNED = 57661
const ZEROFILL = 57662
const CODE = 57663
const COLLATION = 57664
const COLUMNS = 57665
const DATABASES = 57666
const ENGINES = 57667
const EVENT = 57668
const EXTENDED = 57669
const FIELDS = 57670
const FULL = 57671
const FUNCTION = 57672
const GTID_EXECUTED = 57673
const KEYSPACES = 57674
const OPEN = 57675
const PLUGINS = 57676
const PRIVILEGES = 57677
const PROCESSLIST = 57678
const SCHEMAS = 57679
const TABLES = 57680
const TRIGGERS = 57681
const USER = 57682
const VGTID_EXECUTED = 57683
const VITESS_KEYSPACES = 57684
const VITESS_METADATA = 57685
const VITESS_MIGRATIONS = 57686
const VITESS_REPLICATION_STATUS = 57687
const VITESS_SHARDS = 57688
const VITESS_TABLETS = 57689
const VSCHEMA = 57690
const NAMES = 57691
const GLOBAL = 57692
const SESSION = 57693
const ISOLATION = 57694
const LEVEL = 57695
const READ = 57696
const WRITE = 57697
const ONLY = 57698
const REPEATABLE = 57699
const COMMITTED = 57700
const UNCOMMITTED = 57701
const SERIALIZABLE = 57702
const CURRENT_TIMESTAMP = 57703
const DATABASE = 57704
const CURRENT_DATE = 57705
const CURRENT_TIME = 57706
const LOCALTIME = 57707
const LOCALTIMESTAMP = 57708
const CURRENT_USER = 57709
const UTC_DATE = 57710
const UTC_TIME = 57711
const UTC_TIMESTAMP = 57712
const DAY = 57713
const DAY_HOUR = 57714
const DAY_MICROSECOND = 57715
const DAY_MINUTE = 57716
const DAY_SECOND = 57717
const HOUR = 57718
const HOUR_MICROSECOND = 57719
const HOUR_MINUTE = 57720
const HOUR_SECOND = 57721
const MICROSECOND = 57722
const MINUTE = 57723
const MINUTE_MICROSECOND = 57724
const MINUTE_SECOND = 57725
const MONTH = 57726
const QUARTER = 57727
const SECOND = 57728
const SECOND_MICROSECOND = 57729
const YEAR_MONTH = 57730
const WEEK = 57731
const REPLACE = 57732
const CONVERT = 57733
const CAST = 57734
const SUBSTR = 57735
const SUBSTRING = 57736
const GROUP_CONCAT = 57737
const SEPARATOR = 57738
const TIMESTAMPADD = 57739
const TIMESTAMPDIFF = 57740
const WEIGHT_STRING = 57741
const LTRIM = 57742
const MATCH = 57743
const AGAINST = 57744
const BOOLEAN = 57745
const LANGUAGE = 57746
const WITH = 57747
const QUERY = 57748
const EXPANSION = 57749
const WITHOUT = 57750
const VALIDATION = 57751
const UNUSED = 57752
const ARRAY = 57753
const CUME_DIST = 57754
const DESCRIPTION = 57755
const DENSE_RANK = 57756
const EMPTY = 57757
const EXCEPT = 57758
const FIRST_VALUE = 57759
const GROUPING = 57760
const GROUPS = 57761
const JSON_TABLE = 57762
const LAG = 57763
const LAST_VALUE = 57764
const LATERAL = 57765
const LEAD = 57766
const MEMBER = 57767
const NTH_VALUE = 57768
const NTILE = 57769
const OF = 57770
const OVER = 57771
const PERCENT_RANK = 57772
const RANK = 57773
const RECURSIVE = 57774
const ROW_NUMBER = 57775
const SYSTEM = 57776
const WINDOW = 57777
const ACTIVE = 57778
const ADMIN = 57779
const BUCKETS = 57780
const CLONE = 57781
const COMPONENT = 57782
const DEFINITION = 57783
const ENFORCED = 57784
const EXCLUDE = 57785
const FOLLOWING = 57786
const GEOMCOLLECTION = 57787
const GET_MASTER_PUBLIC_KEY = 57788
const HISTOGRAM = 57789
const HISTORY = 57790
const INACTIVE = 57791
const INVISIBLE = 57792
const LOCKED = 57793
const MASTER_COMPRESSION_ALGORITHMS = 57794
const MASTER_PUBLIC_KEY_PATH = 57795
const MASTER_TLS_CIPHERSUITES = 57796
const MASTER_ZSTD_COMPRESSION_LEVEL = 57797
const NESTED = 57798
const NETWORK_NAMESPACE = 57799
const NOWAIT = 57800
const NULLS = 57801
const OJ = 57802
const OLD = 57803
const OPTIONAL = 57804
const ORDINALITY = 57805
const ORGANIZATION = 57806
const OTHERS = 57807
const PATH = 57808
const PERSIST = 57809
const PERSIST_ONLY = 57810
const PRECEDING = 57811
const PRIVILEGE_CHECKS_USER = 57812
const PROCESS = 57813
const RANDOM = 57814
const REFERENCE = 57815
const REQUIRE_ROW_FORMAT = 57816
const RESOURCE = 57817
const RESPECT = 57818
const RESTART = 57819
const RETAIN = 57820
const REUSE = 57821
const ROLE = 57822
const SECONDARY = 57823
const SECONDARY_ENGINE = 57824
const SECONDARY_LOAD = 57825
const SECONDARY_UNLOAD = 57826
const SKIP = 57827
const SRID = 57828
const THREAD_PRIORITY = 57829
const TIES = 57830
const UNBOUNDED = 57831
const VCPU = 57832
const VISIBLE = 57833
const FORMAT = 57834
const TREE = 57835
const VITESS = 57836
const TRADITIONAL = 57837
const LOCAL = 57838
const LOW_PRIORITY = 57839
const NO_WRITE_TO_BINLOG = 57840
const LOGS = 57841
const ERROR = 57842
const GENERAL = 57843
const HOSTS = 57844
const OPTIMIZER_COSTS = 57845
const USER_RESOURCES = 57846
const SLOW = 57847
const CHANNEL = 57848
const RELAY = 57849
const EXPORT = 57850
const AVG_ROW_LENGTH = 57851
const CONNECTION = 57852
const CHECKSUM = 57853
const DELAY_KEY_WRITE = 57854
const ENCRYPTION = 57855
const ENGINE = 57856
const INSERT_METHOD = 57857
const MAX_ROWS = 57858
const MIN_ROWS = 57859
const PACK_KEYS = 57860
const PASSWORD = 57861
const FIXED = 57862
const DYNAMIC = 57863
const COMPRESSED = 57864
const REDUNDANT = 57865
const COMPACT = 57866
const ROW_FORMAT = 57867
const STATS_AUTO_RECALC = 57868
const STATS_PERSISTENT = 57869
const STATS_SAMPLE_PAGES = 57870
const STORAGE = 57871
const MEMORY = 57872
const DISK = 57873
const PARTITIONS = 57874
const LINEAR = 57875
const RANGE = 57876
const LIST = 57877
const SUBPARTITION = 57878
const SUBPARTITIONS = 57879
const HASH = 57880

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	10, 44,
	11, 44,
	-2, 34,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 44,
	1, 137,
	556, 137,
	-2, 143,
	-1, 45,
	116, 143,
	156, 143,
	309, 143,
	-2, 444,
	-1, 52,
	33, 623,
	215, 623,
	226, 623,
	259, 637,
	260, 637,
	-2, 625,
	-1, 57,
	217, 648,
	-2, 646,
	-1, 108,
	214, 1110,
	-2, 116,
	-1, 110,
	1, 138,
	556, 138,
	-2, 143,
	-1, 120,
	117, 347,
	220, 347,
	-2, 438,
	-1, 139,
	116, 143,
	156, 143,
	309, 143,
	-2, 453,
	-1, 604,
	200, 1131,
	-2, 1127,
	-1, 605,
	200, 1132,
	-2, 1128,
	-1, 676,
	57, 716,
	-2, 724,
	-1, 713,
	132, 1491,
	-2, 109,
	-1, 714,
	132, 1367,
	-2, 110,
	-1, 720,
	132, 1422,
	-2, 1104,
	-1, 862,
	132, 1300,
	-2, 1101,
	-1, 900,
	225, 38,
	230, 38,
	-2, 358,
	-1, 977,
	1, 492,
	556, 492,
	-2, 143,
	-1, 1176,
	57, 717,
	-2, 729,
	-1, 1177,
	57, 718,
	-2, 730,
	-1, 1229,
	116, 143,
	156, 143,
	309, 143,
	-2, 388,
	-1, 1306,
	117, 347,
	220, 347,
	-2, 438,
	-1, 1315,
	225, 39,
	230, 39,
	-2, 359,
	-1, 1567,
	200, 1136,
	-2, 1130,
	-1, 1644,
	116, 143,
	156, 143,
	309, 143,
	-2, 389,
	-1, 1651,
	23, 162,
	-2, 164,
	-1, 1890,
	75, 91,
	84, 91,
	-2, 782,
	-1, 2059,
	47, 1072,
	-2, 1066,
	-1, 2263,
	5, 50,
	16, 50,
	18, 50,
	85, 50,
	-2, 757,
}

const yyPrivate = 57344

const yyLast = 34093

var yyAct = [...]int{
	604, 2523, 2517, 2322, 2180, 2488, 2474, 2401, 2110, 1040,
	2117, 2070, 3, 2073, 691, 1158, 2151, 1598, 598, 34,
	2347, 669, 1833, 2163, 90, 2415, 2119, 1704, 554, 2162,
	1191, 1863, 2074, 2234, 599, 2071, 2352, 558, 1581, 596,
	2228, 1617, 1886, 597, 2254, 2068, 2060, 581, 176, 607,
	2165, 176, 1855, 518, 176, 2221, 552, 1674, 551, 534,
	550, 176, 1922, 1602, 1992, 988, 1951, 1694, 1679, 176,
	865, 1923, 148, 1924, 1630, 718, 33, 1875, 692, 1622,
	546, 176, 35, 1178, 1621, 1847, 1835, 930, 908, 2008,
	673, 1561, 677, 1510, 134, 671, 1693, 1641, 1517, 1746,
	1681, 1221, 895, 534, 1916, 1892, 534, 176, 534, 1713,
	694, 890, 715, 89, 563, 1469, 1200, 1624, 1161, 1420,
	1530, 1583, 1487, 1059, 1313, 1417, 1320, 1564, 1329, 869,
	1691, 872, 85, 1403, 901, 873, 1609, 896, 1670, 1220,
	898, 897, 683, 1204, 1038, 1033, 1305, 1281, 705, 681,
	678, 91, 117, 151, 111, 112, 679, 118, 1218, 973,
	1603, 1425, 70, 541, 1130, 1126, 2446, 92, 83, 1944,
	2524, 1706, 1707, 1708, 1706, 2148, 1942, 79, 1971, 1970,
	1744, 2000, 1060, 680, 71, 1574, 8, 7, 6, 2001,
	1578, 1579, 119, 1476, 1475, 699, 1474, 704, 113, 1473,
	1472, 178, 179, 180, 1389, 1471, 1060, 1458, 866, 544,
	912, 545, 935, 491, 178, 179, 180, 685, 1463, 84,
	1831, 2502, 670, 2056, 932, 1286, 542, 1857, 1017, 96,
	2287, 521, 881, 2397, 672, 2396, 943, 946, 947, 934,
	950, 951, 952, 953, 876, 2533, 956, 957, 958, 959,
	960, 961, 962, 963, 964, 965, 966, 967, 968, 969,
	970, 712, 911, 719, 113, 887, 886, 98, 99, 693,
	102, 686, 508, 108, 888, 2134, 173, 172, 933, 486,
	2484, 936, 937, 938, 1070, 2315, 1686, 72, 2316, 72,
	74, 2527, 2457, 1784, 2516, 2323, 2475, 1732, 2483, 668,
	2456, 114, 676, 2007, 2213, 1222, 1295, 1223, 1070, 587,
	1684, 1979, 948, 1091, 156, 1978, 72, 1832, 507, 2106,
	1024, 1901, 1026, 72, 1900, 1636, 1637, 1902, 113, 505,
	707, 708, 1999, 1580, 2406, 1092, 1093, 1094, 1095, 1096,
	1097, 1098, 1100, 1099, 1101, 1102, 885, 1866, 982, 983,
	2107, 2108, 1781, 1635, 976, 995, 1906, 1782, 1023, 1025,
	996, 1012, 1013, 1007, 81, 2365, 81, 502, 994, 666,
	993, 153, 1867, 154, 665, 1945, 516, 1066, 1913, 995,
	1058, 1036, 521, 171, 996, 1654, 1653, 2231, 2204, 1008,
	2034, 513, 2202, 81, 1001, 532, 880, 1462, 521, 882,
	81, 1066, 883, 536, 530, 521, 972, 521, 1464, 1465,
	1466, 1974, 1409, 1165, 2182, 1758, 1755, 1757, 1756, 1952,
	1714, 2175, 1404, 1760, 522, 1761, 1747, 1762, 2526, 2176,
	1030, 1752, 1010, 1011, 978, 1683, 1016, 1987, 949, 1763,
	955, 954, 2184, 1749, 2308, 889, 2159, 919, 1717, 1021,
	1014, 81, 1618, 1022, 492, 1379, 494, 509, 1751, 524,
	1015, 523, 498, 1027, 496, 500, 510, 501, 1009, 495,
	917, 506, 2503, 1002, 497, 511, 512, 514, 528, 527,
	515, 1035, 504, 525, 1753, 1020, 176, 157, 176, 885,
	971, 176, 885, 2183, 877, 892, 162, 1380, 1750, 1381,
	928, 879, 878, 891, 927, 892, 926, 925, 924, 1028,
	923, 922, 884, 921, 1298, 916, 929, 2123, 1782, 534,
	534, 534, 1103, 910, 1991, 870, 1103, 870, 2528, 706,
	904, 868, 2514, 870, 903, 1319, 1005, 534, 534, 2035,
	910, 1065, 1062, 1063, 1064, 1069, 1071, 1068, 883, 1067,
	1418, 1052, 975, 945, 2158, 2141, 1061, 34, 991, 2521,
	997, 998, 999, 1000, 1692, 1065, 1062, 1063, 1064, 1069,
	1071, 1068, 1988, 1067, 910, 522, 1973, 1836, 1838, 1738,
	1061, 1414, 1046, 1037, 920, 600, 939, 582, 584, 601,
	602, 522, 580, 583, 603, 1293, 1604, 1605, 522, 1410,
	522, 1292, 1291, 2445, 2003, 149, 1943, 918, 1795, 1976,
	2133, 910, 1963, 1415, 2407, 2393, 1106, 1107, 1108, 1109,
	909, 585, 586, 2378, 1289, 913, 903, 1115, 526, 1118,
	490, 910, 1946, 1685, 1156, 914, 1734, 909, 1318, 485,
	1408, 974, 913, 903, 1029, 2436, 519, 2268, 910, 2455,
	2232, 1151, 914, 915, 1986, 884, 110, 1985, 884, 1104,
	1105, 520, 1994, 2250, 1042, 1043, 176, 1993, 1994, 1897,
	1862, 909, 1823, 1993, 1573, 1208, 1138, 903, 906, 907,
	1110, 870, 986, 176, 1166, 900, 904, 1103, 75, 1168,
	1642, 1102, 1157, 1172, 1169, 1783, 2105, 671, 1171, 673,
	1018, 688, 534, 80, 899, 80, 176, 105, 909, 1034,
	2451, 534, 1391, 1390, 1392, 1393, 1394, 534, 1004, 984,
	715, 992, 71, 1837, 2304, 1055, 1053, 1054, 909, 1006,
	1426, 981, 80, 2244, 903, 906, 907, 931, 870, 80,
	1748, 1031, 900, 904, 1411, 909, 1128, 944, 1129, 1132,
	990, 1157, 1170, 1224, 1056, 1075, 89, 2519, 2027, 1531,
	2520, 1810, 2518, 1091, 106, 1144, 1145, 1146, 1147, 1405,
	1073, 1406, 1074, 1075, 1407, 1531, 178, 179, 180, 2029,
	1512, 1935, 2361, 1162, 2279, 1092, 1093, 1094, 1095, 1096,
	1097, 1098, 1100, 1099, 1101, 1102, 1559, 2278, 150, 155,
	152, 158, 159, 160, 161, 163, 164, 165, 166, 1721,
	92, 1733, 1328, 1327, 167, 168, 169, 170, 1317, 1074,
	1075, 2494, 1492, 1731, 670, 2492, 1729, 919, 1159, 2462,
	1019, 977, 1190, 2210, 2496, 2497, 1493, 1494, 1491, 2121,
	2122, 917, 1806, 672, 2429, 2510, 2493, 1513, 1167, 1097,
	1098, 1100, 1099, 1101, 1102, 2269, 1214, 1215, 1209, 1800,
	1427, 2463, 2511, 2531, 1187, 176, 1818, 2113, 1799, 1282,
	1219, 719, 2208, 1185, 2529, 1398, 2430, 989, 1290, 1551,
	1540, 1541, 1542, 1543, 1553, 1544, 1545, 1546, 1558, 1554,
	1547, 1548, 1555, 1556, 1557, 1549, 1550, 1552, 1185, 534,
	2388, 1315, 1610, 1611, 1073, 1173, 1074, 1075, 1073, 1324,
	1074, 1075, 2114, 1326, 1805, 2338, 534, 534, 1726, 534,
	2337, 534, 534, 1396, 534, 534, 534, 534, 534, 534,
	1482, 1484, 1485, 1073, 1726, 1074, 1075, 2116, 1397, 534,
	2286, 2111, 2120, 176, 1362, 1730, 81, 2512, 2530, 1325,
	1073, 1483, 1074, 1075, 2123, 2121, 2122, 1185, 2285, 176,
	1490, 1728, 2112, 1073, 1535, 1074, 1075, 2149, 1386, 1311,
	534, 2139, 176, 710, 1357, 1358, 1296, 1297, 1073, 2433,
	1074, 1075, 1073, 1416, 1074, 1075, 1395, 176, 1920, 1304,
	1787, 1788, 1789, 1919, 2118, 1321, 1321, 1073, 1689, 1074,
	1075, 1399, 1384, 176, 1198, 618, 619, 620, 1383, 1359,
	176, 1095, 1096, 1097, 1098, 1100, 1099, 1101, 1102, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 534, 534,
	534, 1385, 1382, 1323, 1322, 1288, 1365, 1366, 1373, 1367,
	1301, 1364, 1371, 1372, 1363, 1331, 1302, 1332, 1314, 1334,
	1336, 1300, 1338, 1340, 1342, 1344, 1346, 1348, 2120, 176,
	1194, 2442, 1422, 1091, 2432, 2002, 2179, 1430, 2431, 1197,
	2123, 2360, 2358, 2334, 1434, 1045, 1436, 1437, 1438, 1439,
	1375, 2283, 2275, 1443, 1929, 1092, 1093, 1094, 1095, 1096,
	1097, 1098, 1100, 1099, 1101, 1102, 1073, 1457, 1074, 1075,
	1360, 1917, 1742, 1185, 1511, 1073, 1741, 1074, 1075, 1195,
	1419, 1294, 178, 179, 180, 1601, 2276, 1587, 1521, 534,
	1515, 1488, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1077,
	2216, 113, 887, 886, 534, 534, 1185, 1514, 1073, 1486,
	1074, 1075, 1459, 1423, 2386, 1387, 1496, 1495, 1565, 1497,
	1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507,
	1508, 1509, 2305, 1532, 176, 1432, 1073, 1921, 1074, 1075,
	1374, 2115, 1453, 1454, 1455, 1370, 1456, 1369, 1368, 1073,
	1586, 1074, 1075, 1196, 1588, 1032, 1589, 2414, 1798, 2215,
	176, 1853, 2525, 534, 178, 179, 180, 1073, 1904, 1074,
	1075, 1489, 1073, 176, 1074, 1075, 534, 2243, 178, 179,
	180, 176, 1702, 176, 1567, 176, 176, 534, 1565, 2413,
	534, 2382, 1428, 1429, 2381, 1073, 715, 1074, 1075, 715,
	2321, 534, 1569, 1570, 1849, 89, 1433, 1853, 2481, 1516,
	178, 179, 180, 1440, 1441, 1442, 1953, 1523, 1524, 88,
	1091, 89, 1794, 1932, 86, 1853, 2468, 1620, 1566, 178,
	179, 180, 1594, 1700, 88, 87, 1650, 1568, 1853, 2466,
	1571, 1572, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1100,
	1099, 1101, 1102, 2245, 1567, 1073, 534, 1074, 1075, 605,
	2458, 1185, 1695, 1696, 1697, 1853, 2447, 1699, 1701, 2313,
	2444, 1646, 1645, 1593, 1853, 2389, 1796, 1660, 1661, 1662,
	1663, 534, 1072, 95, 95, 2313, 1185, 534, 1324, 1185,
	685, 1324, 1185, 1324, 94, 94, 93, 93, 1615, 1725,
	1651, 1628, 1596, 1649, 86, 88, 1715, 177, 1676, 1864,
	177, 88, 2100, 177, 2450, 87, 1853, 2311, 535, 1613,
	177, 1782, 1682, 1726, 1185, 2248, 1185, 1633, 177, 534,
	2009, 1511, 2131, 2130, 2127, 2128, 1511, 1511, 1648, 1893,
	177, 1893, 1647, 2127, 2126, 1632, 1853, 719, 1872, 1185,
	719, 1712, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1099,
	1101, 1102, 535, 1185, 1185, 535, 177, 535, 912, 1185,
	1796, 1185, 176, 1782, 1972, 1285, 1957, 1727, 1321, 176,
	1872, 1677, 1949, 1950, 176, 176, 1672, 1673, 176, 1864,
	176, 1687, 1690, 1688, 94, 1698, 176, 1853, 1852, 1735,
	1072, 1185, 1894, 176, 1894, 1285, 1284, 1230, 1229, 1871,
	2011, 1896, 1720, 1782, 1677, 1723, 1722, 1724, 1719, 1718,
	911, 1872, 2129, 1634, 1737, 1796, 1815, 1814, 1726, 1739,
	1740, 176, 534, 1655, 1726, 1656, 1657, 1658, 1659, 1736,
	1092, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1099, 1101,
	1102, 1666, 1667, 1668, 1669, 2288, 2069, 1709, 1608, 1189,
	2243, 1576, 1796, 1872, 1773, 1774, 2243, 1467, 1413, 1776,
	2021, 2020, 2019, 2013, 1353, 2017, 1216, 2012, 1777, 2010,
	675, 894, 893, 2500, 2015, 2471, 81, 1745, 2403, 1192,
	2379, 2372, 2303, 2014, 2300, 2281, 1488, 2219, 2218, 1287,
	1675, 2177, 2154, 2150, 1958, 2289, 2290, 2291, 2016, 2018,
	1091, 1766, 1671, 1087, 1665, 1088, 1664, 1401, 1316, 1312,
	1792, 1791, 1283, 1793, 1354, 1355, 1356, 107, 701, 1089,
	1090, 1086, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1100,
	1099, 1101, 1102, 2152, 1925, 1926, 976, 176, 2292, 2255,
	2256, 2181, 2404, 1829, 1350, 176, 1686, 81, 2507, 2489,
	2258, 1780, 2146, 534, 1877, 1880, 1881, 1882, 1878, 2145,
	1879, 1883, 2144, 2069, 534, 1936, 1489, 1767, 1460, 1877,
	1880, 1881, 1882, 1878, 1790, 1879, 1883, 2091, 2261, 2255,
	2256, 1926, 2092, 547, 2089, 2293, 2294, 176, 176, 2090,
	1868, 1351, 1352, 1183, 1179, 2093, 34, 1881, 1882, 589,
	1183, 1179, 2260, 1903, 2088, 1888, 2087, 2505, 1180, 1567,
	1809, 2342, 695, 2341, 1807, 1180, 2482, 1600, 1193, 1592,
	2061, 2063, 2249, 2049, 2048, 1854, 1955, 2351, 2236, 2064,
	2428, 2353, 2239, 1590, 1591, 1182, 2235, 1181, 1850, 2058,
	1176, 1177, 1182, 1412, 1181, 664, 2125, 534, 689, 1911,
	1820, 1821, 176, 1566, 1162, 1830, 690, 1930, 533, 176,
	1527, 2340, 941, 1887, 940, 86, 1840, 2191, 86, 1965,
	1925, 534, 1851, 1997, 1528, 88, 87, 1907, 534, 87,
	1914, 1915, 1324, 1324, 1044, 1861, 1846, 534, 1948, 1964,
	114, 2241, 1610, 1611, 2443, 1895, 1898, 88, 2142, 1969,
	1770, 2399, 717, 1891, 2124, 867, 1885, 874, 1682, 1908,
	176, 176, 176, 176, 176, 1905, 1597, 697, 698, 1759,
	2222, 2047, 1786, 95, 93, 2420, 94, 176, 176, 2046,
	1918, 1928, 2419, 95, 94, 177, 93, 177, 2359, 2357,
	177, 1927, 2356, 176, 94, 88, 93, 2349, 2301, 2240,
	1933, 2238, 1937, 1938, 1939, 2155, 1710, 1299, 696, 2348,
	95, 1511, 2229, 1967, 1304, 1864, 2509, 2508, 535, 535,
	535, 94, 1849, 1816, 1210, 1202, 100, 101, 2509, 2434,
	2274, 687, 97, 82, 534, 1, 535, 535, 613, 2026,
	2491, 503, 671, 2039, 1577, 1968, 1160, 517, 2487, 1388,
	534, 1378, 2324, 2400, 1954, 1966, 1959, 1960, 1716, 2299,
	176, 1680, 2005, 902, 534, 2004, 139, 1643, 1644, 2477,
	104, 863, 103, 534, 905, 1003, 1711, 2314, 1912, 1652,
	534, 534, 2039, 176, 176, 176, 176, 176, 2066, 2051,
	1236, 1234, 1989, 2081, 1235, 176, 1233, 1238, 677, 2022,
	176, 176, 2052, 176, 2023, 2006, 176, 176, 176, 1237,
	1232, 1817, 2075, 1461, 2072, 531, 1884, 174, 1172, 2072,
	1225, 1203, 942, 493, 2038, 2132, 1743, 499, 1116, 2045,
	1899, 2040, 716, 709, 2077, 2041, 2042, 2043, 2233, 2099,
	2057, 2140, 2050, 2059, 2053, 2101, 1856, 176, 2102, 2062,
	2055, 2427, 2350, 2469, 1909, 1199, 678, 1808, 1123, 1529,
	534, 1625, 679, 2083, 2084, 177, 2086, 2082, 1585, 534,
	2085, 2094, 1481, 556, 176, 555, 2098, 89, 2044, 553,
	1842, 2103, 177, 1422, 176, 1865, 2161, 1078, 608, 2109,
	1834, 1211, 1876, 1874, 1873, 1768, 1629, 2257, 2253, 176,
	2157, 535, 176, 1623, 1848, 177, 2136, 2135, 564, 2080,
	535, 1995, 2192, 557, 1996, 2169, 535, 549, 606, 2168,
	2271, 2167, 1975, 2137, 2138, 2178, 1977, 1910, 2174, 1057,
	2156, 1175, 543, 875, 1526, 1682, 2160, 2405, 2391, 1785,
	2212, 1174, 1538, 2172, 1539, 2147, 1703, 60, 38, 538,
	2501, 1048, 703, 32, 31, 30, 176, 29, 28, 23,
	22, 21, 20, 2187, 2186, 19, 25, 18, 17, 16,
	2194, 2189, 2190, 2193, 109, 47, 44, 42, 116, 115,
	45, 2200, 41, 979, 39, 27, 26, 15, 14, 13,
	12, 11, 2227, 10, 9, 5, 4, 1051, 24, 2,
	1941, 1705, 0, 0, 0, 0, 0, 0, 2223, 2224,
	0, 176, 0, 0, 0, 0, 2237, 1076, 2230, 0,
	0, 0, 0, 2252, 0, 0, 2242, 0, 0, 2277,
	0, 0, 0, 0, 176, 0, 2262, 0, 0, 0,
	2259, 0, 0, 2266, 2267, 0, 1124, 0, 0, 0,
	0, 2264, 176, 2265, 0, 176, 176, 176, 0, 0,
	0, 0, 0, 2169, 177, 534, 534, 2168, 717, 717,
	717, 2272, 0, 0, 2273, 0, 0, 0, 0, 0,
	0, 0, 2306, 2307, 547, 0, 1047, 1049, 0, 0,
	0, 0, 534, 534, 534, 534, 0, 0, 535, 0,
	2282, 0, 2284, 0, 2309, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2320, 535, 535, 0, 535, 0,
	535, 535, 0, 535, 535, 535, 535, 535, 535, 0,
	2318, 2319, 0, 0, 0, 0, 176, 2333, 535, 0,
	0, 0, 177, 0, 0, 2197, 2198, 0, 2199, 0,
	0, 2201, 0, 2203, 0, 2205, 0, 0, 177, 534,
	0, 534, 0, 1154, 2329, 1201, 0, 0, 0, 535,
	2366, 177, 2330, 2368, 2345, 172, 34, 2355, 2346, 2354,
	0, 0, 0, 0, 2370, 0, 177, 671, 2364, 2362,
	2075, 2072, 0, 0, 2075, 0, 0, 0, 0, 114,
	0, 0, 177, 0, 0, 0, 2374, 2375, 0, 177,
	0, 0, 156, 2377, 534, 0, 0, 0, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 535, 535, 535,
	0, 2387, 0, 0, 534, 1184, 2383, 0, 0, 2385,
	2384, 0, 0, 2402, 0, 0, 0, 2395, 2394, 0,
	534, 1206, 0, 2390, 534, 534, 0, 0, 177, 0,
	717, 0, 0, 0, 0, 0, 1226, 0, 0, 153,
	0, 154, 0, 0, 0, 2426, 0, 2424, 2423, 2421,
	2422, 171, 0, 534, 0, 0, 0, 0, 0, 2435,
	534, 0, 0, 0, 0, 2437, 0, 0, 0, 0,
	2438, 0, 0, 0, 0, 0, 2439, 2441, 0, 671,
	2075, 0, 0, 0, 534, 176, 0, 0, 535, 0,
	0, 0, 2449, 0, 0, 0, 0, 0, 34, 0,
	0, 2452, 0, 535, 535, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 2464, 0, 0, 0,
	0, 534, 534, 177, 2467, 0, 2470, 0, 2476, 534,
	2402, 2478, 34, 2472, 0, 0, 0, 0, 0, 0,
	0, 0, 2072, 0, 0, 157, 0, 2498, 2490, 177,
	2495, 0, 535, 0, 162, 0, 2504, 0, 0, 0,
	0, 0, 177, 2506, 0, 535, 0, 0, 0, 0,
	177, 534, 177, 0, 177, 177, 535, 0, 2515, 535,
	0, 0, 2522, 0, 0, 0, 0, 0, 2513, 0,
	535, 0, 0, 0, 0, 0, 0, 2532, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 867, 0,
	0, 0, 0, 0, 590, 0, 0, 0, 0, 1424,
	0, 1154, 0, 0, 0, 1330, 1330, 0, 1330, 0,
	1330, 1330, 0, 1339, 1330, 1330, 1330, 1330, 1330, 0,
	0, 0, 0, 0, 0, 535, 1154, 1154, 867, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 175, 149, 0, 489, 0, 0, 529, 0,
	535, 0, 0, 0, 0, 489, 535, 0, 0, 1400,
	0, 0, 0, 489, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 684, 0, 0, 0, 0,
	0, 1477, 1478, 1479, 1480, 0, 0, 0, 0, 0,
	0, 702, 0, 702, 0, 0, 0, 0, 535, 0,
	0, 489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 717, 717, 717,
	0, 1518, 1519, 1520, 0, 0, 0, 0, 0, 0,
	1525, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 1560, 0, 0, 177, 0,
	0, 0, 0, 177, 177, 0, 0, 177, 0, 177,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 177, 547, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 615, 73, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 535, 0, 0, 0, 0, 1606, 1607, 1522, 0,
	0, 0, 0, 0, 0, 1154, 0, 0, 0, 0,
	0, 0, 0, 1536, 1537, 0, 0, 0, 717, 0,
	0, 0, 0, 1640, 0, 0, 150, 155, 152, 158,
	159, 160, 161, 163, 164, 165, 166, 0, 0, 0,
	0, 0, 167, 168, 169, 170, 0, 674, 0, 73,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 674, 0, 0,
	0, 0, 1599, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1678, 0, 0, 1206, 0, 0, 717, 0,
	0, 0, 0, 0, 0, 0, 717, 0, 0, 717,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	867, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 535, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 177, 0, 0,
	0, 0, 0, 0, 0, 874, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	867, 0, 0, 0, 0, 0, 874, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 535, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 867, 0,
	535, 0, 0, 0, 1186, 1188, 0, 535, 0, 0,
	0, 0, 0, 0, 0, 0, 535, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	489, 0, 489, 0, 0, 489, 0, 0, 0, 177,
	177, 177, 177, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1811, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1779, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 535,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 535, 0, 0, 0, 0, 0, 0,
	0, 0, 535, 0, 0, 0, 0, 0, 1155, 535,
	535, 0, 177, 177, 177, 177, 177, 1201, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 177,
	177, 0, 177, 0, 0, 177, 177, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	489, 0, 0, 717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 684, 0, 0,
	0, 0, 1843, 0, 0, 0, 0, 0, 0, 535,
	0, 0, 0, 1858, 0, 0, 0, 0, 535, 0,
	489, 0, 0, 177, 1039, 1039, 1039, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 73, 0, 0, 0, 177, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 674, 1111, 1112, 1113, 1114, 0, 1117, 0, 1119,
	1120, 1121, 1122, 0, 1125, 1127, 1127, 0, 1127, 1131,
	1131, 1133, 1134, 1135, 1136, 1137, 1931, 1139, 1140, 1141,
	1142, 1143, 0, 0, 0, 177, 1131, 1131, 1131, 1131,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1599, 0, 0, 0, 0, 0, 0, 1956, 0, 0,
	0, 0, 0, 0, 2024, 2025, 1961, 0, 0, 2028,
	0, 0, 0, 2030, 2031, 2032, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1164, 0, 0, 674, 0, 0, 489,
	674, 0, 0, 177, 0, 0, 674, 0, 0, 0,
	0, 0, 0, 2067, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 177, 177, 177, 0, 0, 0,
	0, 0, 0, 0, 535, 535, 0, 0, 0, 0,
	0, 0, 0, 1533, 0, 0, 1155, 1534, 0, 0,
	0, 0, 0, 717, 0, 0, 0, 0, 0, 0,
	0, 535, 535, 535, 535, 0, 0, 0, 0, 1330,
	0, 1155, 1155, 1186, 1575, 0, 0, 489, 0, 0,
	0, 0, 0, 2054, 0, 0, 0, 0, 0, 0,
	0, 0, 717, 1376, 2153, 0, 1154, 0, 0, 2079,
	1330, 1154, 0, 1595, 0, 177, 489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1421, 0, 0, 0, 0, 0, 0, 535, 0,
	535, 0, 0, 0, 0, 0, 0, 489, 0, 0,
	0, 0, 0, 0, 489, 0, 0, 0, 0, 0,
	0, 0, 0, 1444, 1445, 489, 489, 489, 489, 489,
	489, 489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2214, 867,
	0, 0, 1154, 535, 1163, 0, 0, 0, 1599, 0,
	0, 0, 0, 489, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 535,
	0, 0, 0, 535, 535, 547, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 537, 702, 0, 0, 0,
	0, 0, 535, 667, 702, 702, 0, 0, 0, 535,
	1155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 702, 1421, 702, 702, 702, 702, 702, 0,
	0, 0, 0, 535, 177, 0, 0, 0, 0, 0,
	0, 871, 0, 0, 0, 0, 0, 0, 1376, 2302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	702, 0, 0, 0, 0, 2317, 535, 0, 0, 0,
	0, 0, 0, 0, 684, 0, 0, 0, 0, 0,
	535, 535, 0, 0, 0, 0, 0, 489, 535, 0,
	0, 0, 0, 1421, 0, 489, 0, 489, 0, 489,
	1631, 0, 0, 1039, 1039, 1039, 0, 2331, 0, 2332,
	0, 0, 0, 0, 2335, 2336, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	535, 0, 0, 0, 1599, 1599, 0, 0, 0, 0,
	0, 0, 0, 2363, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2371, 0, 0, 2373, 0, 0,
	0, 2325, 2326, 2327, 2328, 0, 0, 0, 0, 2376,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2380, 0, 1797, 0, 0, 0, 1801, 1802, 0, 1803,
	1804, 0, 0, 0, 0, 0, 0, 0, 1812, 0,
	0, 1813, 0, 0, 0, 0, 0, 0, 0, 547,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1154, 0, 0, 0, 1819, 2367, 0,
	2369, 0, 0, 0, 1824, 1825, 1826, 1827, 1828, 0,
	1595, 0, 0, 72, 36, 37, 74, 2425, 547, 0,
	0, 1841, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 78, 0, 0, 0, 40, 66, 67,
	0, 64, 68, 0, 0, 0, 0, 0, 0, 0,
	65, 0, 0, 1599, 0, 0, 489, 0, 0, 0,
	1626, 547, 0, 489, 0, 0, 0, 0, 489, 489,
	0, 0, 489, 717, 1771, 0, 0, 0, 0, 53,
	489, 0, 0, 0, 0, 0, 0, 489, 0, 2417,
	81, 0, 0, 2417, 2417, 1253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 489, 0, 0, 0, 0,
	0, 0, 1599, 0, 0, 0, 0, 0, 0, 1599,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1599, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 702, 0, 0, 1154, 0, 2465, 0, 0, 0,
	980, 0, 985, 0, 0, 987, 0, 0, 0, 0,
	717, 717, 0, 0, 0, 0, 0, 0, 2485, 0,
	43, 46, 49, 48, 51, 0, 63, 702, 702, 69,
	0, 0, 1241, 0, 0, 0, 0, 0, 1421, 0,
	0, 489, 0, 0, 0, 0, 0, 0, 0, 1376,
	0, 52, 77, 76, 0, 0, 61, 62, 50, 0,
	1599, 0, 0, 2033, 0, 0, 2036, 2037, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 489, 489, 0, 0, 0, 0, 0, 54, 55,
	0, 56, 57, 58, 59, 0, 0, 0, 0, 0,
	0, 0, 1254, 0, 0, 2078, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2096, 2097, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 489, 0, 0, 0,
	0, 0, 0, 1940, 1267, 1270, 1271, 1272, 1273, 1274,
	1275, 0, 1276, 1277, 1278, 1279, 1280, 1255, 1256, 1257,
	1258, 1239, 1240, 1268, 0, 1242, 0, 1243, 1244, 1245,
	1246, 1247, 1248, 1249, 1250, 1251, 1252, 1259, 1260, 1261,
	1262, 1263, 1264, 1265, 1266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 489, 489, 489, 489, 489, 0,
	1213, 1822, 0, 0, 75, 0, 0, 0, 0, 0,
	0, 489, 489, 0, 0, 0, 0, 0, 1839, 80,
	0, 0, 0, 0, 0, 0, 0, 489, 0, 0,
	0, 0, 0, 674, 2196, 0, 0, 0, 0, 0,
	0, 702, 172, 0, 0, 0, 0, 0, 2206, 2207,
	2209, 2211, 0, 1869, 1870, 0, 0, 0, 2217, 0,
	0, 0, 1889, 0, 2220, 0, 114, 702, 136, 0,
	2225, 0, 0, 0, 0, 1269, 0, 0, 0, 156,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 489, 0, 0, 0, 0, 0,
	0, 0, 2246, 2247, 0, 0, 2251, 0, 0, 0,
	146, 1155, 0, 0, 0, 135, 1155, 489, 489, 489,
	489, 489, 0, 0, 2263, 0, 0, 0, 0, 2095,
	0, 0, 0, 0, 489, 1376, 153, 489, 154, 0,
	489, 2104, 1421, 0, 123, 124, 145, 144, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1231,
	0, 0, 0, 1962, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 489, 0, 0, 0, 0, 0, 0, 2312, 0,
	0, 0, 0, 0, 0, 0, 0, 1155, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 489, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 489, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 489, 0, 0, 489, 1361, 0, 0,
	0, 140, 121, 147, 128, 120, 0, 141, 142, 0,
	0, 0, 157, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 129, 0, 0, 0, 1402, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 132, 130, 125, 126,
	127, 131, 0, 0, 0, 1626, 122, 0, 0, 0,
	489, 0, 0, 0, 0, 133, 0, 1431, 0, 0,
	0, 0, 0, 2076, 1435, 73, 0, 0, 1626, 1626,
	1626, 1626, 1626, 0, 0, 1446, 1447, 1448, 1449, 1450,
	1451, 1452, 0, 0, 0, 1889, 0, 0, 1626, 0,
	0, 1626, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2398, 0, 489, 0, 0, 0, 0,
	0, 0, 0, 1470, 0, 0, 0, 2408, 2409, 2410,
	0, 2411, 2412, 0, 0, 2416, 0, 0, 489, 0,
	149, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 489, 172, 0, 489,
	489, 489, 0, 0, 0, 0, 0, 0, 1947, 0,
	0, 2166, 2440, 0, 0, 0, 0, 0, 0, 0,
	0, 114, 172, 136, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1303, 156, 0, 0, 0, 0, 0,
	0, 2454, 0, 0, 0, 0, 114, 0, 136, 0,
	0, 2459, 0, 2195, 0, 143, 0, 2460, 2461, 156,
	0, 0, 0, 0, 0, 146, 0, 0, 0, 137,
	135, 0, 138, 0, 0, 0, 0, 0, 0, 0,
	1376, 0, 0, 0, 2473, 0, 0, 0, 0, 0,
	146, 153, 0, 154, 0, 135, 0, 0, 1155, 1307,
	1308, 145, 144, 171, 0, 0, 0, 1612, 0, 0,
	0, 0, 0, 0, 0, 1616, 153, 1619, 154, 0,
	1470, 0, 0, 0, 1307, 1308, 145, 144, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1626, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 150, 155, 152, 158, 159, 160, 161,
	163, 164, 165, 166, 0, 0, 0, 0, 0, 167,
	168, 169, 170, 0, 0, 0, 140, 1309, 147, 0,
	1306, 0, 141, 142, 0, 2310, 0, 157, 0, 0,
	0, 0, 0, 0, 0, 0, 162, 0, 0, 0,
	0, 140, 1309, 147, 0, 1306, 0, 141, 142, 0,
	0, 0, 157, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 489,
	0, 0, 0, 0, 0, 0, 0, 2339, 0, 2343,
	2344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1155,
	0, 2076, 0, 73, 0, 2076, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1470, 0, 0, 0,
	0, 0, 0, 1754, 0, 0, 0, 0, 1764, 1765,
	0, 0, 1769, 0, 0, 149, 0, 0, 0, 0,
	1772, 0, 0, 0, 0, 0, 0, 1775, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	149, 0, 0, 0, 2392, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1778, 0, 0, 0, 0,
	0, 81, 0, 0, 0, 0, 0, 609, 616, 617,
	618, 619, 620, 610, 612, 0, 0, 0, 611, 0,
	0, 614, 621, 622, 0, 0, 0, 0, 0, 0,
	143, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2076, 0, 0, 137, 0, 0, 138, 0, 0,
	0, 0, 0, 0, 1136, 143, 0, 0, 0, 0,
	0, 0, 0, 0, 2170, 2171, 0, 0, 0, 137,
	0, 0, 138, 0, 0, 73, 623, 624, 625, 626,
	627, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 0, 0, 73,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 150, 155,
	152, 158, 159, 160, 161, 163, 164, 165, 166, 0,
	0, 0, 1890, 0, 167, 168, 169, 170, 0, 0,
	0, 0, 0, 150, 155, 152, 158, 159, 160, 161,
	163, 164, 165, 166, 0, 0, 0, 0, 0, 167,
	168, 169, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1934, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 0, 0, 609,
	616, 617, 618, 619, 620, 610, 612, 0, 0, 0,
	611, 0, 0, 614, 621, 622, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1980, 1981, 1982, 1983, 1984, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1470, 1990, 0, 0, 0, 2170, 2171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1998, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2143, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2164, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2173, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2185, 0, 0, 2188, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 600, 0,
	0, 0, 601, 602, 0, 0, 0, 603, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2295, 0, 0, 2296,
	2297, 2298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 845, 831, 411, 0, 779,
	848, 749, 767, 858, 770, 773, 813, 728, 792, 334,
	764, 0, 753, 724, 759, 725, 751, 781, 237, 748,
	833, 796, 847, 289, 234, 730, 754, 348, 769, 187,
	815, 387, 222, 299, 296, 418, 248, 240, 236, 221,
	273, 306, 346, 405, 340, 854, 293, 802, 0, 396,
	319, 0, 0, 0, 783, 837, 790, 827, 778, 814,
	738, 801, 849, 765, 810, 850, 279, 220, 186, 331,
	397, 252, 0, 0, 0, 0, 178, 179, 180, 0,
	2479, 0, 2480, 0, 0, 0, 0, 0, 0, 211,
	0, 218, 761, 807, 844, 762, 809, 232, 277, 239,
	231, 415, 855, 836, 0, 0, 203, 846, 785, 0,
	812, 0, 861, 723, 804, 0, 726, 729, 857, 840,
	757, 242, 0, 0, 0, 0, 0, 0, 0, 782,
	791, 824, 776, 0, 0, 0, 0, 0, 0, 0,
	755, 0, 800, 0, 0, 0, 734, 727, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 780,
	0, 0, 0, 737, 0, 756, 825, 0, 721, 260,
	731, 320, 0, 829, 839, 777, 448, 843, 775, 774,
	819, 735, 835, 768, 288, 733, 285, 182, 199, 2453,
	766, 330, 370, 376, 834, 752, 760, 223, 758, 374,
	344, 432, 207, 250, 367, 349, 372, 799, 817, 373,
	294, 420, 362, 430, 449, 450, 230, 324, 439, 409,
	445, 461, 200, 227, 338, 402, 435, 393, 317, 416,
	417, 284, 392, 258, 185, 292, 455, 198, 382, 215,
	205, 191, 404, 428, 212, 385, 0, 0, 463, 193,
	426, 401, 313, 281, 282, 192, 0, 366, 235, 256,
	225, 333, 423, 424, 224, 464, 202, 444, 195, 1041,
	443, 326, 419, 427, 314, 304, 194, 425, 312, 303,
	287, 246, 267, 360, 297, 361, 268, 322, 321, 323,
	188, 436, 0, 189, 0, 398, 437, 465, 208, 209,
	210, 747, 245, 249, 255, 257, 263, 264, 271, 290,
	337, 359, 357, 363, 830, 414, 431, 440, 447, 453,
	454, 456, 457, 458, 459, 460, 325, 270, 394, 286,
	295, 822, 860, 343, 375, 213, 434, 395, 742, 746,
	740, 741, 794, 795, 743, 851, 852, 853, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 826, 736, 0,
	744, 745, 0, 832, 841, 842, 484, 305, 798, 181,
	196, 291, 856, 364, 253, 462, 442, 438, 722, 739,
	229, 750, 0, 0, 763, 771, 772, 784, 786, 787,
	788, 789, 316, 805, 806, 808, 816, 818, 821, 823,
	828, 838, 859, 183, 184, 197, 206, 216, 228, 243,
	251, 261, 266, 269, 274, 275, 278, 283, 301, 307,
	308, 309, 310, 327, 328, 329, 332, 335, 336, 339,
	341, 342, 345, 352, 353, 354, 355, 356, 358, 365,
	369, 377, 378, 379, 380, 381, 383, 384, 388, 389,
	390, 391, 399, 403, 421, 422, 433, 446, 451, 262,
	429, 452, 0, 300, 797, 803, 302, 247, 265, 276,
	811, 441, 400, 201, 371, 254, 190, 219, 204, 226,
	241, 244, 280, 311, 318, 347, 351, 259, 238, 217,
	368, 214, 386, 406, 407, 408, 410, 315, 233, 350,
	793, 820, 298, 412, 413, 272, 845, 831, 411, 0,
	779, 848, 749, 767, 858, 770, 773, 813, 728, 792,
	334, 764, 0, 753, 724, 759, 725, 751, 781, 237,
	748, 833, 796, 847, 289, 234, 730, 754, 348, 769,
	187, 815, 387, 222, 299, 296, 418, 248, 240, 236,
	221, 273, 306, 346, 405, 340, 854, 293, 802, 0,
	396, 319, 0, 0, 0, 783, 837, 790, 827, 778,
	814, 738, 801, 849, 765, 810, 850, 279, 220, 186,
	331, 397, 252, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	211, 0, 218, 761, 807, 844, 762, 809, 232, 277,
	239, 231, 415, 855, 836, 0, 0, 203, 846, 785,
	0, 812, 0, 861, 723, 804, 0, 726, 729, 857,
	840, 757, 242, 0, 0, 0, 0, 0, 0, 0,
	782, 791, 824, 776, 0, 0, 0, 0, 0, 2105,
	0, 755, 0, 800, 0, 0, 0, 734, 727, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	780, 0, 0, 0, 737, 0, 756, 825, 0, 721,
	260, 731, 320, 0, 829, 839, 777, 448, 843, 775,
	774, 819, 735, 835, 768, 288, 733, 285, 182, 199,
	0, 766, 330, 370, 376, 834, 752, 760, 223, 758,
	374, 344, 432, 207, 250, 367, 349, 372, 799, 817,
	373, 294, 420, 362, 430, 449, 450, 230, 324, 439,
	409, 445, 461, 200, 227, 338, 402, 435, 393, 317,
	416, 417, 284, 392, 258, 185, 292, 455, 198, 382,
	215, 205, 191, 404, 428, 212, 385, 0, 0, 463,
	193, 426, 401, 313, 281, 282, 192, 0, 366, 235,
	256, 225, 333, 423, 424, 224, 464, 202, 444, 195,
	1041, 443, 326, 419, 427, 314, 304, 194, 425, 312,
	303, 287, 246, 267, 360, 297, 361, 268, 322, 321,
	323, 188, 436, 0, 189, 0, 398, 437, 465, 208,
	209, 210, 747, 245, 249, 255, 257, 263, 264, 271,
	290, 337, 359, 357, 363, 830, 414, 431, 440, 447,
	453, 454, 456, 457, 458, 459, 460, 325, 270, 394,
	286, 295, 822, 860, 343, 375, 213, 434, 395, 742,
	746, 740, 741, 794, 795, 743, 851, 852, 853, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 826, 736,
	0, 744, 745, 0, 832, 841, 842, 484, 305, 798,
	181, 196, 291, 856, 364, 253, 462, 442, 438, 722,
	739, 229, 750, 0, 0, 763, 771, 772, 784, 786,
	787, 788, 789, 316, 805, 806, 808, 816, 818, 821,
	823, 828, 838, 859, 183, 184, 197, 206, 216, 228,
	243, 251, 261, 266, 269, 274, 275, 278, 283, 301,
	307, 308, 309, 310, 327, 328, 329, 332, 335, 336,
	339, 341, 342, 345, 352, 353, 354, 355, 356, 358,
	365, 369, 377, 378, 379, 380, 381, 383, 384, 388,
	389, 390, 391, 399, 403, 421, 422, 433, 446, 451,
	262, 429, 452, 0, 300, 797, 803, 302, 247, 265,
	276, 811, 441, 400, 201, 371, 254, 190, 219, 204,
	226, 241, 244, 280, 311, 318, 347, 351, 259, 238,
	217, 368, 214, 386, 406, 407, 408, 410, 315, 233,
	350, 793, 820, 298, 412, 413, 272, 845, 831, 411,
	0, 779, 848, 749, 767, 858, 770, 773, 813, 728,
	792, 334, 764, 0, 753, 724, 759, 725, 751, 781,
	237, 748, 833, 796, 847, 289, 234, 730, 754, 348,
	769, 187, 815, 387, 222, 299, 296, 418, 248, 240,
	236, 221, 273, 306, 346, 405, 340, 854, 293, 802,
	0, 396, 319, 0, 0, 0, 783, 837, 790, 827,
	778, 814, 738, 801, 849, 765, 810, 850, 279, 220,
	186, 331, 397, 252, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 211, 0, 218, 761, 807, 844, 762, 809, 232,
	277, 239, 231, 415, 855, 836, 0, 0, 203, 846,
	785, 0, 812, 0, 861, 723, 804, 0, 726, 729,
	857, 840, 757, 242, 0, 0, 0, 0, 0, 0,
	0, 782, 791, 824, 776, 0, 0, 0, 0, 0,
	2065, 0, 755, 0, 800, 0, 0, 0, 734, 727,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 780, 0, 0, 0, 737, 0, 756, 825, 0,
	721, 260, 731, 320, 0, 829, 839, 777, 448, 843,
	775, 774, 819, 735, 835, 768, 288, 733, 285, 182,
	199, 0, 766, 330, 370, 376, 834, 752, 760, 223,
	758, 374, 344, 432, 207, 250, 367, 349, 372, 799,
	817, 373, 294, 420, 362, 430, 449, 450, 230, 324,
	439, 409, 445, 461, 200, 227, 338, 402, 435, 393,
	317, 416, 417, 284, 392, 258, 185, 292, 455, 198,
	382, 215, 205, 191, 404, 428, 212, 385, 0, 0,
	463, 193, 426, 401, 313, 281, 282, 192, 0, 366,
	235, 256, 225, 333, 423, 424, 224, 464, 202, 444,
	195, 1041, 443, 326, 419, 427, 314, 304, 194, 425,
	312, 303, 287, 246, 267, 360, 297, 361, 268, 322,
	321, 323, 188, 436, 0, 189, 0, 398, 437, 465,
	208, 209, 210, 747, 245, 249, 255, 257, 263, 264,
	271, 290, 337, 359, 357, 363, 830, 414, 431, 440,
	447, 453, 454, 456, 457, 458, 459, 460, 325, 270,
	394, 286, 295, 822, 860, 343, 375, 213, 434, 395,
	742, 746, 740, 741, 794, 795, 743, 851, 852, 853,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 826,
	736, 0, 744, 745, 0, 832, 841, 842, 484, 305,
	798, 181, 196, 291, 856, 364, 253, 462, 442, 438,
	722, 739, 229, 750, 0, 0, 763, 771, 772, 784,
	786, 787, 788, 789, 316, 805, 806, 808, 816, 818,
	821, 823, 828, 838, 859, 183, 184, 197, 206, 216,
	228, 243, 251, 261, 266, 269, 274, 275, 278, 283,
	301, 307, 308, 309, 310, 327, 328, 329, 332, 335,
	336, 339, 341, 342, 345, 352, 353, 354, 355, 356,
	358, 365, 369, 377, 378, 379, 380, 381, 383, 384,
	388, 389, 390, 391, 399, 403, 421, 422, 433, 446,
	451, 262, 429, 452, 0, 300, 797, 803, 302, 247,
	265, 276, 811, 441, 400, 201, 371, 254, 190, 219,
	204, 226, 241, 244, 280, 311, 318, 347, 351, 259,
	238, 217, 368, 214, 386, 406, 407, 408, 410, 315,
	233, 350, 793, 820, 298, 412, 413, 272, 845, 831,
	411, 0, 779, 848, 749, 767, 858, 770, 773, 813,
	728, 792, 334, 764, 0, 753, 724, 759, 725, 751,
	781, 237, 748, 833, 796, 847, 289, 234, 730, 754,
	348, 769, 187, 815, 387, 222, 299, 296, 418, 248,
	240, 236, 221, 273, 306, 346, 405, 340, 854, 293,
	802, 0, 396, 319, 0, 0, 0, 783, 837, 790,
	827, 778, 814, 738, 801, 849, 765, 810, 850, 279,
	220, 186, 331, 397, 252, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 211, 0, 218, 761, 807, 844, 762, 809,
	232, 277, 239, 231, 415, 855, 836, 0, 0, 203,
	846, 785, 0, 812, 0, 861, 723, 804, 0, 726,
	729, 857, 840, 757, 242, 0, 0, 0, 0, 0,
	0, 0, 782, 791, 824, 776, 0, 0, 0, 0,
	0, 1614, 0, 755, 0, 800, 0, 0, 0, 734,
	727, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 780, 0, 0, 0, 737, 0, 756, 825,
	0, 721, 260, 731, 320, 0, 829, 839, 777, 448,
	843, 775, 774, 819, 735, 835, 768, 288, 733, 285,
	182, 199, 0, 766, 330, 370, 376, 834, 752, 760,
	223, 758, 374, 344, 432, 207, 250, 367, 349, 372,
	799, 817, 373, 294, 420, 362, 430, 449, 450, 230,
	324, 439, 409, 445, 461, 200, 227, 338, 402, 435,
	393, 317, 416, 417, 284, 392, 258, 185, 292, 455,
	198, 382, 215, 205, 191, 404, 428, 212, 385, 0,
	0, 463, 193, 426, 401, 313, 281, 282, 192, 0,
	366, 235, 256, 225, 333, 423, 424, 224, 464, 202,
	444, 195, 1041, 443, 326, 419, 427, 314, 304, 194,
	425, 312, 303, 287, 246, 267, 360, 297, 361, 268,
	322, 321, 323, 188, 436, 0, 189, 0, 398, 437,
	465, 208, 209, 210, 747, 245, 249, 255, 257, 263,
	264, 271, 290, 337, 359, 357, 363, 830, 414, 431,
	440, 447, 453, 454, 456, 457, 458, 459, 460, 325,
	270, 394, 286, 295, 822, 860, 343, 375, 213, 434,
	395, 742, 746, 740, 741, 794, 795, 743, 851, 852,
	853, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	826, 736, 0, 744, 745, 0, 832, 841, 842, 484,
	305, 798, 181, 196, 291, 856, 364, 253, 462, 442,
	438, 722, 739, 229, 750, 0, 0, 763, 771, 772,
	784, 786, 787, 788, 789, 316, 805, 806, 808, 816,
	818, 821, 823, 828, 838, 859, 183, 184, 197, 206,
	216, 228, 243, 251, 261, 266, 269, 274, 275, 278,
	283, 301, 307, 308, 309, 310, 327, 328, 329, 332,
	335, 336, 339, 341, 342, 345, 352, 353, 354, 355,
	356, 358, 365, 369, 377, 378, 379, 380, 381, 383,
	384, 388, 389, 390, 391, 399, 403, 421, 422, 433,
	446, 451, 262, 429, 452, 0, 300, 797, 803, 302,
	247, 265, 276, 811, 441, 400, 201, 371, 254, 190,
	219, 204, 226, 241, 244, 280, 311, 318, 347, 351,
	259, 238, 217, 368, 214, 386, 406, 407, 408, 410,
	315, 233, 350, 793, 820, 298, 412, 413, 272, 845,
	831, 411, 0, 779, 848, 749, 767, 858, 770, 773,
	813, 728, 792, 334, 764, 0, 753, 724, 759, 725,
	751, 781, 237, 748, 833, 796, 847, 289, 234, 730,
	754, 348, 769, 187, 815, 387, 222, 299, 296, 418,
	248, 240, 236, 221, 273, 306, 346, 405, 340, 854,
	293, 802, 0, 396, 319, 0, 0, 0, 783, 837,
	790, 827, 778, 814, 738, 801, 849, 765, 810, 850,
	279, 220, 186, 331, 397, 252, 0, 81, 0, 0,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 211, 0, 218, 761, 807, 844, 762,
	809, 232, 277, 239, 231, 415, 855, 836, 0, 0,
	203, 846, 785, 0, 812, 0, 861, 723, 804, 0,
	726, 729, 857, 840, 757, 242, 0, 0, 0, 0,
	0, 0, 0, 782, 791, 824, 776, 0, 0, 0,
	0, 0, 0, 0, 755, 0, 800, 0, 0, 0,
	734, 727, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 780, 0, 0, 0, 737, 0, 756,
	825, 0, 721, 260, 731, 320, 0, 829, 839, 777,
	448, 843, 775, 774, 819, 735, 835, 768, 288, 733,
	285, 182, 199, 0, 766, 330, 370, 376, 834, 752,
	760, 223, 758, 374, 344, 432, 207, 250, 367, 349,
	372, 799, 817, 373, 294, 420, 362, 430, 449, 450,
	230, 324, 439, 409, 445, 461, 200, 227, 338, 402,
	435, 393, 317, 416, 417, 284, 392, 258, 185, 292,
	455, 198, 382, 215, 205, 191, 404, 428, 212, 385,
	0, 0, 463, 193, 426, 401, 313, 281, 282, 192,
	0, 366, 235, 256, 225, 333, 423, 424, 224, 464,
	202, 444, 195, 1041, 443, 326, 419, 427, 314, 304,
	194, 425, 312, 303, 287, 246, 267, 360, 297, 361,
	268, 322, 321, 323, 188, 436, 0, 189, 0, 398,
	437, 465, 208, 209, 210, 747, 245, 249, 255, 257,
	263, 264, 271, 290, 337, 359, 357, 363, 830, 414,
	431, 440, 447, 453, 454, 456, 457, 458, 459, 460,
	325, 270, 394, 286, 295, 822, 860, 343, 375, 213,
	434, 395, 742, 746, 740, 741, 794, 795, 743, 851,
	852, 853, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 826, 736, 0, 744, 745, 0, 832, 841, 842,
	484, 305, 798, 181, 196, 291, 856, 364, 253, 462,
	442, 438, 722, 739, 229, 750, 0, 0, 763, 771,
	772, 784, 786, 787, 788, 789, 316, 805, 806, 808,
	816, 818, 821, 823, 828, 838, 859, 183, 184, 197,
	206, 216, 228, 243, 251, 261, 266, 269, 274, 275,
	278, 283, 301, 307, 308, 309, 310, 327, 328, 329,
	332, 335, 336, 339, 341, 342, 345, 352, 353, 354,
	355, 356, 358, 365, 369, 377, 378, 379, 380, 381,
	383, 384, 388, 389, 390, 391, 399, 403, 421, 422,
	433, 446, 451, 262, 429, 452, 0, 300, 797, 803,
	302, 247, 265, 276, 811, 441, 400, 201, 371, 254,
	190, 219, 204, 226, 241, 244, 280, 311, 318, 347,
	351, 259, 238, 217, 368, 214, 386, 406, 407, 408,
	410, 315, 233, 350, 793, 820, 298, 412, 413, 272,
	845, 831, 411, 0, 779, 848, 749, 767, 858, 770,
	773, 813, 728, 792, 334, 764, 0, 753, 724, 759,
	725, 751, 781, 237, 748, 833, 796, 847, 289, 234,
	730, 754, 348, 769, 187, 815, 387, 222, 299, 296,
	418, 248, 240, 236, 221, 273, 306, 346, 405, 340,
	854, 293, 802, 0, 396, 319, 0, 0, 0, 783,
	837, 790, 827, 778, 814, 738, 801, 849, 765, 810,
	850, 279, 220, 186, 331, 397, 252, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 211, 0, 218, 761, 807, 844,
	762, 809, 232, 277, 239, 231, 415, 855, 836, 0,
	0, 203, 846, 785, 0, 812, 0, 861, 723, 804,
	0, 726, 729, 857, 840, 757, 242, 0, 0, 0,
	0, 0, 0, 0, 782, 791, 824, 776, 0, 0,
	0, 0, 0, 0, 0, 755, 0, 800, 0, 0,
	0, 734, 727, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 780, 0, 0, 0, 737, 0,
	756, 825, 0, 721, 260, 731, 320, 0, 829, 839,
	777, 448, 843, 775, 774, 819, 735, 835, 768, 288,
	733, 285, 182, 199, 0, 766, 330, 370, 376, 834,
	752, 760, 223, 758, 374, 344, 432, 207, 250, 367,
	349, 372, 799, 817, 373, 294, 420, 362, 430, 449,
	450, 230, 324, 439, 409, 445, 461, 200, 227, 338,
	402, 435, 393, 317, 416, 417, 284, 392, 258, 185,
	292, 455, 198, 382, 215, 205, 191, 404, 428, 212,
	385, 0, 0, 463, 193, 426, 401, 313, 281, 282,
	192, 0, 366, 235, 256, 225, 333, 423, 424, 224,
	464, 202, 444, 195, 1041, 443, 326, 419, 427, 314,
	304, 194, 425, 312, 303, 287, 246, 267, 360, 297,
	361, 268, 322, 321, 323, 188, 436, 0, 189, 0,
	398, 437, 465, 208, 209, 210, 747, 245, 249, 255,
	257, 263, 264, 271, 290, 337, 359, 357, 363, 830,
	414, 431, 440, 447, 453, 454, 456, 457, 458, 459,
	460, 325, 270, 394, 286, 295, 822, 860, 343, 375,
	213, 434, 395, 742, 746, 740, 741, 794, 795, 743,
	851, 852, 853, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 826, 736, 0, 744, 745, 0, 832, 841,
	842, 484, 305, 798, 181, 196, 291, 856, 364, 253,
	462, 442, 438, 722, 739, 229, 750, 0, 0, 763,
	771, 772, 784, 786, 787, 788, 789, 316, 805, 806,
	808, 816, 818, 821, 823, 828, 838, 859, 183, 184,
	197, 206, 216, 228, 243, 251, 261, 266, 269, 274,
	275, 278, 283, 301, 307, 308, 309, 310, 327, 328,
	329, 332, 335, 336, 339, 341, 342, 345, 352, 353,
	354, 355, 356, 358, 365, 369, 377, 378, 379, 380,
	381, 383, 384, 388, 389, 390, 391, 399, 403, 421,
	422, 433, 446, 451, 262, 429, 452, 0, 300, 797,
	803, 302, 247, 265, 276, 811, 441, 400, 201, 371,
	254, 190, 219, 204, 226, 241, 244, 280, 311, 318,
	347, 351, 259, 238, 217, 368, 214, 386, 406, 407,
	408, 410, 315, 233, 350, 793, 820, 298, 412, 413,
	272, 845, 831, 411, 0, 779, 848, 749, 767, 858,
	770, 773, 813, 728, 792, 334, 764, 0, 753, 724,
	759, 725, 751, 781, 237, 748, 833, 796, 847, 289,
	234, 730, 754, 348, 769, 187, 815, 387, 222, 299,
	296, 418, 248, 240, 236, 221, 273, 306, 346, 405,
	340, 854, 293, 802, 0, 396, 319, 0, 0, 0,
	783, 837, 790, 827, 778, 814, 738, 801, 849, 765,
	810, 850, 279, 220, 186, 331, 397, 252, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 211, 0, 218, 761, 807,
	844, 762, 809, 232, 277, 239, 231, 415, 855, 836,
	0, 0, 862, 846, 785, 0, 812, 0, 861, 723,
	804, 0, 726, 729, 857, 840, 757, 242, 0, 0,
	0, 0, 0, 0, 0, 782, 791, 824, 776, 0,
	0, 0, 0, 0, 0, 0, 755, 0, 800, 0,
	0, 0, 734, 727, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 780, 0, 0, 0, 737,
	0, 756, 825, 0, 721, 260, 731, 320, 0, 829,
	839, 777, 448, 843, 775, 774, 819, 735, 835, 768,
	288, 733, 285, 182, 199, 0, 766, 330, 370, 376,
	834, 752, 760, 223, 758, 374, 344, 432, 207, 250,
	367, 349, 372, 799, 817, 373, 294, 420, 362, 430,
	449, 450, 230, 324, 439, 409, 445, 461, 200, 227,
	338, 402, 435, 393, 317, 416, 417, 284, 392, 258,
	185, 292, 455, 198, 382, 215, 205, 191, 404, 428,
	212, 385, 0, 0, 463, 193, 426, 401, 313, 281,
	282, 192, 0, 366, 235, 256, 225, 333, 423, 424,
	224, 464, 202, 444, 195, 732, 443, 326, 419, 427,
	314, 304, 194, 425, 312, 303, 287, 246, 267, 360,
	297, 361, 268, 322, 321, 323, 188, 436, 0, 189,
	0, 398, 437, 465, 208, 209, 210, 747, 245, 249,
	255, 257, 263, 264, 271, 290, 337, 359, 357, 363,
	830, 414, 431, 440, 447, 453, 454, 456, 457, 458,
	459, 460, 720, 714, 713, 286, 295, 822, 860, 343,
	375, 213, 434, 395, 742, 746, 740, 741, 794, 795,
	743, 851, 852, 853, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 826, 736, 0, 744, 745, 0, 832,
	841, 842, 484, 305, 798, 181, 196, 291, 856, 364,
	253, 462, 442, 438, 722, 739, 229, 750, 0, 0,
	763, 771, 772, 784, 786, 787, 788, 789, 316, 805,
	806, 808, 816, 818, 821, 823, 828, 838, 859, 183,
	184, 197, 206, 216, 228, 243, 251, 261, 266, 269,
	274, 275, 278, 283, 301, 307, 308, 309, 310, 327,
	328, 329, 332, 335, 336, 339, 341, 342, 345, 352,
	353, 354, 355, 356, 358, 365, 369, 377, 378, 379,
	380, 381, 383, 384, 388, 389, 390, 391, 399, 403,
	421, 422, 433, 446, 451, 262, 429, 452, 0, 300,
	797, 803, 302, 247, 265, 276, 811, 441, 400, 201,
	371, 254, 190, 219, 204, 226, 241, 244, 280, 311,
	318, 347, 351, 259, 238, 217, 368, 214, 386, 406,
	407, 408, 410, 315, 233, 350, 793, 820, 298, 412,
	413, 272, 845, 831, 411, 0, 779, 848, 749, 767,
	858, 770, 773, 813, 728, 792, 334, 764, 0, 753,
	724, 759, 725, 751, 781, 237, 748, 833, 796, 847,
	289, 234, 730, 754, 348, 769, 187, 815, 387, 222,
	299, 296, 418, 248, 240, 236, 221, 273, 306, 346,
	405, 340, 854, 293, 802, 0, 396, 319, 0, 0,
	0, 783, 837, 790, 827, 778, 814, 738, 801, 849,
	765, 810, 850, 279, 220, 186, 331, 397, 252, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 0, 218, 761,
	807, 844, 762, 809, 232, 277, 239, 231, 415, 855,
	836, 0, 0, 862, 846, 785, 0, 812, 0, 861,
	723, 804, 0, 726, 729, 857, 840, 757, 242, 0,
	0, 0, 0, 0, 0, 0, 782, 791, 824, 776,
	0, 0, 0, 0, 0, 0, 0, 755, 0, 800,
	0, 0, 0, 734, 727, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 780, 0, 0, 0,
	737, 0, 756, 825, 0, 721, 260, 731, 320, 0,
	829, 839, 777, 448, 843, 775, 774, 819, 735, 835,
	768, 288, 733, 285, 182, 199, 0, 766, 330, 370,
	376, 834, 752, 760, 223, 758, 374, 344, 432, 207,
	250, 367, 349, 372, 799, 817, 373, 294, 420, 362,
	430, 449, 450, 230, 324, 439, 409, 445, 461, 200,
	227, 338, 402, 435, 393, 317, 416, 417, 284, 392,
	258, 185, 292, 455, 198, 382, 215, 205, 191, 404,
	1217, 212, 385, 0, 0, 463, 193, 426, 401, 313,
	281, 282, 192, 0, 366, 235, 256, 225, 333, 423,
	424, 224, 464, 202, 444, 195, 732, 443, 326, 419,
	427, 314, 304, 194, 425, 312, 303, 287, 246, 267,
	360, 297, 361, 268, 322, 321, 323, 188, 436, 0,
	189, 0, 398, 437, 465, 208, 209, 210, 747, 245,
	249, 255, 257, 263, 264, 271, 290, 337, 359, 357,
	363, 830, 414, 431, 440, 447, 453, 454, 456, 457,
	458, 459, 460, 720, 714, 713, 286, 295, 822, 860,
	343, 375, 213, 434, 395, 742, 746, 740, 741, 794,
	795, 743, 851, 852, 853, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 826, 736, 0, 744, 745, 0,
	832, 841, 842, 484, 305, 798, 181, 196, 291, 856,
	364, 253, 462, 442, 438, 722, 739, 229, 750, 0,
	0, 763, 771, 772, 784, 786, 787, 788, 789, 316,
	805, 806, 808, 816, 818, 821, 823, 828, 838, 859,
	183, 184, 197, 206, 216, 228, 243, 251, 261, 266,
	269, 274, 275, 278, 283, 301, 307, 308, 309, 310,
	327, 328, 329, 332, 335, 336, 339, 341, 342, 345,
	352, 353, 354, 355, 356, 358, 365, 369, 377, 378,
	379, 380, 381, 383, 384, 388, 389, 390, 391, 399,
	403, 421, 422, 433, 446, 451, 262, 429, 452, 0,
	300, 797, 803, 302, 247, 265, 276, 811, 441, 400,
	201, 371, 254, 190, 219, 204, 226, 241, 244, 280,
	311, 318, 347, 351, 259, 238, 217, 368, 214, 386,
	406, 407, 408, 410, 315, 233, 350, 793, 820, 298,
	412, 413, 272, 845, 831, 411, 0, 779, 848, 749,
	767, 858, 770, 773, 813, 728, 792, 334, 764, 0,
	753, 724, 759, 725, 751, 781, 237, 748, 833, 796,
	847, 289, 234, 730, 754, 348, 769, 187, 815, 387,
	222, 299, 296, 418, 248, 240, 236, 221, 273, 306,
	346, 405, 340, 854, 293, 802, 0, 396, 319, 0,
	0, 0, 783, 837, 790, 827, 778, 814, 738, 801,
	849, 765, 810, 850, 279, 220, 186, 331, 397, 252,
	0, 0, 0, 0, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 211, 0, 218,
	761, 807, 844, 762, 809, 232, 277, 239, 231, 415,
	855, 836, 0, 0, 862, 846, 785, 0, 812, 0,
	861, 723, 804, 0, 726, 729, 857, 840, 757, 242,
	0, 0, 0, 0, 0, 0, 0, 782, 791, 824,
	776, 0, 0, 0, 0, 0, 0, 0, 755, 0,
	800, 0, 0, 0, 734, 727, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 780, 0, 0,
	0, 737, 0, 756, 825, 0, 721, 260, 731, 320,
	0, 829, 839, 777, 448, 843, 775, 774, 819, 735,
	835, 768, 288, 733, 285, 182, 199, 0, 766, 330,
	370, 376, 834, 752, 760, 223, 758, 374, 344, 432,
	207, 250, 367, 349, 372, 799, 817, 373, 294, 420,
	362, 430, 449, 450, 230, 324, 439, 409, 445, 461,
	200, 227, 338, 402, 435, 393, 317, 416, 417, 284,
	392, 258, 185, 292, 455, 198, 382, 215, 205, 191,
	404, 711, 212, 385, 0, 0, 463, 193, 426, 401,
	313, 281, 282, 192, 0, 366, 235, 256, 225, 333,
	423, 424, 224, 464, 202, 444, 195, 732, 443, 326,
	419, 427, 314, 304, 194, 425, 312, 303, 287, 246,
	267, 360, 297, 361, 268, 322, 321, 323, 188, 436,
	0, 189, 0, 398, 437, 465, 208, 209, 210, 747,
	245, 249, 255, 257, 263, 264, 271, 290, 337, 359,
	357, 363, 830, 414, 431, 440, 447, 453, 454, 456,
	457, 458, 459, 460, 720, 714, 713, 286, 295, 822,
	860, 343, 375, 213, 434, 395, 742, 746, 740, 741,
	794, 795, 743, 851, 852, 853, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 826, 736, 0, 744, 745,
	0, 832, 841, 842, 484, 305, 798, 181, 196, 291,
	856, 364, 253, 462, 442, 438, 722, 739, 229, 750,
	0, 0, 763, 771, 772, 784, 786, 787, 788, 789,
	316, 805, 806, 808, 816, 818, 821, 823, 828, 838,
	859, 183, 184, 197, 206, 216, 228, 243, 251, 261,
	266, 269, 274, 275, 278, 283, 301, 307, 308, 309,
	310, 327, 328, 329, 332, 335, 336, 339, 341, 342,
	345, 352, 353, 354, 355, 356, 358, 365, 369, 377,
	378, 379, 380, 381, 383, 384, 388, 389, 390, 391,
	399, 403, 421, 422, 433, 446, 451, 262, 429, 452,
	0, 300, 797, 803, 302, 247, 265, 276, 811, 441,
	400, 201, 371, 254, 190, 219, 204, 226, 241, 244,
	280, 311, 318, 347, 351, 259, 238, 217, 368, 214,
	386, 406, 407, 408, 410, 315, 233, 350, 793, 820,
	298, 412, 413, 272, 411, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 334, 0, 0, 1562,
	0, 565, 0, 0, 0, 237, 571, 0, 0, 0,
	289, 234, 0, 1563, 348, 0, 187, 0, 387, 222,
	299, 296, 418, 248, 240, 236, 221, 273, 306, 346,
	405, 340, 578, 293, 0, 0, 396, 319, 0, 0,
	0, 0, 0, 573, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 220, 186, 331, 397, 252, 0,
	81, 0, 0, 178, 179, 180, 609, 616, 617, 618,
	619, 620, 610, 612, 0, 0, 211, 611, 218, 587,
	614, 621, 622, 0, 232, 277, 239, 231, 415, 0,
	0, 0, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 548, 562, 0, 577, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 559, 560, 700, 0, 0, 0, 594,
	0, 561, 0, 0, 570, 623, 624, 625, 626, 627,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 572, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 320, 0,
	593, 0, 0, 448, 0, 0, 591, 0, 0, 0,
	0, 288, 0, 285, 182, 199, 0, 0, 330, 370,
	376, 0, 0, 0, 223, 0, 374, 344, 432, 207,
	250, 367, 349, 372, 0, 0, 373, 294, 420, 362,
	430, 449, 450, 230, 324, 439, 409, 445, 461, 200,
	227, 338, 402, 435, 393, 317, 416, 417, 284, 392,
	258, 185, 292, 455, 198, 382, 215, 205, 191, 404,
	428, 212, 385, 0, 0, 463, 193, 426, 401, 313,
	281, 282, 192, 0, 366, 235, 256, 225, 333, 423,
	424, 224, 464, 202, 444, 195, 0, 443, 326, 419,
	427, 314, 304, 194, 425, 312, 303, 287, 246, 267,
	360, 297, 361, 268, 322, 321, 323, 188, 436, 0,
	189, 0, 398, 437, 465, 208, 209, 210, 0, 245,
	249, 255, 257, 263, 264, 271, 290, 337, 359, 357,
	363, 0, 414, 431, 440, 447, 453, 454, 456, 457,
	458, 459, 460, 325, 270, 394, 286, 295, 0, 0,
	343, 375, 213, 434, 395, 600, 592, 582, 584, 601,
	602, 579, 580, 583, 603, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 595, 568, 567, 0, 575, 576,
	0, 585, 586, 588, 569, 566, 181, 196, 291, 0,
	364, 253, 462, 442, 438, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 197, 206, 216, 228, 243, 251, 261, 266,
	269, 274, 275, 278, 283, 301, 307, 308, 309, 310,
	327, 328, 329, 332, 335, 336, 339, 341, 342, 345,
	352, 353, 354, 355, 356, 358, 365, 369, 377, 378,
	379, 380, 381, 383, 384, 388, 389, 390, 391, 399,
	403, 421, 422, 433, 446, 451, 262, 429, 452, 0,
	300, 0, 0, 302, 247, 265, 276, 0, 441, 400,
	201, 371, 254, 190, 219, 204, 226, 241, 244, 280,
	311, 318, 347, 351, 259, 238, 217, 368, 214, 386,
	406, 407, 408, 410, 315, 233, 350, 411, 0, 298,
	412, 413, 272, 0, 0, 0, 0, 0, 0, 334,
	0, 0, 0, 0, 565, 0, 0, 0, 237, 571,
	0, 0, 0, 289, 234, 0, 0, 348, 0, 187,
	0, 387, 222, 299, 296, 418, 248, 240, 236, 221,
	273, 306, 346, 405, 340, 578, 293, 0, 0, 396,
	319, 0, 0, 0, 0, 0, 573, 574, 0, 0,
	0, 0, 0, 0, 1638, 0, 279, 220, 186, 331,
	397, 252, 0, 81, 0, 0, 178, 179, 180, 609,
	616, 617, 618, 619, 620, 610, 612, 0, 0, 211,
	611, 218, 587, 614, 621, 622, 1639, 232, 277, 239,
	231, 415, 0, 0, 0, 0, 203, 0, 0, 0,
	0, 0, 0, 0, 548, 562, 0, 577, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 559, 560, 0, 0,
	0, 0, 594, 0, 561, 0, 0, 570, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 320, 0, 593, 0, 0, 448, 0, 0, 591,
	0, 0, 0, 0, 288, 0, 285, 182, 199, 0,
	0, 330, 370, 376, 0, 0, 0, 223, 0, 374,
	344, 432, 207, 250, 367, 349, 372, 0, 0, 373,
	294, 420, 362, 430, 449, 450, 230, 324, 439, 409,
	445, 461, 200, 227, 338, 402, 435, 393, 317, 416,
	417, 284, 392, 258, 185, 292, 455, 198, 382, 215,
	205, 191, 404, 428, 212, 385, 0, 0, 463, 193,
	426, 401, 313, 281, 282, 192, 0, 366, 235, 256,
	225, 333, 423, 424, 224, 464, 202, 444, 195, 0,
	443, 326, 419, 427, 314, 304, 194, 425, 312, 303,
	287, 246, 267, 360, 297, 361, 268, 322, 321, 323,
	188, 436, 0, 189, 0, 398, 437, 465, 208, 209,
	210, 0, 245, 249, 255, 257, 263, 264, 271, 290,
	337, 359, 357, 363, 0, 414, 431, 440, 447, 453,
	454, 456, 457, 458, 459, 460, 325, 270, 394, 286,
	295, 0, 0, 343, 375, 213, 434, 395, 600, 592,
	582, 584, 601, 602, 579, 580, 583, 603, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 595, 568, 567,
	0, 575, 576, 0, 585, 586, 588, 569, 566, 181,
	196, 291, 0, 364, 253, 462, 442, 438, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 197, 206, 216, 228, 243,
	251, 261, 266, 269, 274, 275, 278, 283, 301, 307,
	308, 309, 310, 327, 328, 329, 332, 335, 336, 339,
	341, 342, 345, 352, 353, 354, 355, 356, 358, 365,
	369, 377, 378, 379, 380, 381, 383, 384, 388, 389,
	390, 391, 399, 403, 421, 422, 433, 446, 451, 262,
	429, 452, 0, 300, 0, 0, 302, 247, 265, 276,
	0, 441, 400, 201, 371, 254, 190, 219, 204, 226,
	241, 244, 280, 311, 318, 347, 351, 259, 238, 217,
	368, 214, 386, 406, 407, 408, 410, 315, 233, 350,
	72, 411, 298, 412, 413, 272, 0, 0, 0, 0,
	0, 0, 0, 334, 0, 0, 0, 0, 565, 0,
	0, 0, 237, 571, 0, 0, 0, 289, 234, 0,
	0, 348, 0, 187, 0, 387, 222, 299, 296, 418,
	248, 240, 236, 221, 273, 306, 346, 405, 340, 578,
	293, 0, 0, 396, 319, 0, 0, 0, 0, 0,
	573, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 220, 186, 331, 397, 252, 0, 81, 0, 0,
	178, 179, 180, 609, 616, 617, 618, 619, 620, 610,
	612, 0, 0, 211, 611, 218, 587, 614, 621, 622,
	0, 232, 277, 239, 231, 415, 0, 0, 0, 0,
	203, 0, 0, 0, 0, 0, 0, 0, 548, 562,
	0, 577, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	559, 560, 0, 0, 0, 0, 594, 0, 561, 0,
	0, 570, 623, 624, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 320, 0, 593, 0, 0,
	448, 0, 0, 591, 0, 0, 0, 0, 288, 0,
	285, 182, 199, 0, 0, 330, 370, 376, 0, 0,
	0, 223, 0, 374, 344, 432, 207, 250, 367, 349,
	372, 0, 0, 373, 294, 420, 362, 430, 449, 450,
	230, 324, 439, 409, 445, 461, 200, 227, 338, 402,
	435, 393, 317, 416, 417, 284, 392, 258, 185, 292,
	455, 198, 382, 215, 205, 191, 404, 428, 212, 385,
	0, 0, 463, 193, 426, 401, 313, 281, 282, 192,
	0, 366, 235, 256, 225, 333, 423, 424, 224, 464,
	202, 444, 195, 0, 443, 326, 419, 427, 314, 304,
	194, 425, 312, 303, 287, 246, 267, 360, 297, 361,
	268, 322, 321, 323, 188, 436, 0, 189, 0, 398,
	437, 465, 208, 209, 210, 0, 245, 249, 255, 257,
	263, 264, 271, 290, 337, 359, 357, 363, 0, 414,
	431, 440, 447, 453, 454, 456, 457, 458, 459, 460,
	325, 270, 394, 286, 295, 0, 0, 343, 375, 213,
	434, 395, 600, 592, 582, 584, 601, 602, 579, 580,
	583, 603, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 595, 568, 567, 0, 575, 576, 0, 585, 586,
	588, 569, 566, 181, 196, 291, 80, 364, 253, 462,
	442, 438, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 197,
	206, 216, 228, 243, 251, 261, 266, 269, 274, 275,
	278, 283, 301, 307, 308, 309, 310, 327, 328, 329,
	332, 335, 336, 339, 341, 342, 345, 352, 353, 354,
	355, 356, 358, 365, 369, 377, 378, 379, 380, 381,
	383, 384, 388, 389, 390, 391, 399, 403, 421, 422,
	433, 446, 451, 262, 429, 452, 0, 300, 0, 0,
	302, 247, 265, 276, 0, 441, 400, 201, 371, 254,
	190, 219, 204, 226, 241, 244, 280, 311, 318, 347,
	351, 259, 238, 217, 368, 214, 386, 406, 407, 408,
	410, 315, 233, 350, 411, 0, 298, 412, 413, 272,
	0, 0, 0, 0, 0, 0, 334, 0, 0, 0,
	0, 565, 0, 0, 0, 237, 571, 0, 0, 0,
	289, 234, 0, 0, 348, 0, 187, 0, 387, 222,
	299, 296, 418, 248, 240, 236, 221, 273, 306, 346,
	405, 340, 578, 293, 0, 0, 396, 319, 0, 0,
	0, 0, 0, 573, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 220, 186, 331, 397, 252, 0,
	81, 0, 0, 178, 179, 180, 609, 616, 617, 618,
	619, 620, 610, 612, 0, 0, 211, 611, 218, 587,
	614, 621, 622, 0, 232, 277, 239, 231, 415, 0,
	0, 0, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 548, 562, 0, 577, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 559, 560, 0, 0, 0, 0, 594,
	0, 561, 0, 0, 570, 623, 624, 625, 626, 627,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 572, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 320, 0,
	593, 0, 0, 448, 0, 0, 591, 0, 0, 0,
	0, 288, 0, 285, 182, 199, 0, 0, 330, 370,
	376, 0, 0, 0, 223, 0, 374, 344, 432, 207,
	250, 367, 349, 372, 2448, 0, 373, 294, 420, 362,
	430, 449, 450, 230, 324, 439, 409, 445, 461, 200,
	227, 338, 402, 435, 393, 317, 416, 417, 284, 392,
	258, 185, 292, 455, 198, 382, 215, 205, 191, 404,
	428, 212, 385, 0, 0, 463, 193, 426, 401, 313,
	281, 282, 192, 0, 366, 235, 256, 225, 333, 423,
	424, 224, 464, 202, 444, 195, 0, 443, 326, 419,
	427, 314, 304, 194, 425, 312, 303, 287, 246, 267,
	360, 297, 361, 268, 322, 321, 323, 188, 436, 0,
	189, 0, 398, 437, 465, 208, 209, 210, 0, 245,
	249, 255, 257, 263, 264, 271, 290, 337, 359, 357,
	363, 0, 414, 431, 440, 447, 453, 454, 456, 457,
	458, 459, 460, 325, 270, 394, 286, 295, 0, 0,
	343, 375, 213, 434, 395, 600, 592, 582, 584, 601,
	602, 579, 580, 583, 603, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 595, 568, 567, 0, 575, 576,
	0, 585, 586, 588, 569, 566, 181, 196, 291, 0,
	364, 253, 462, 442, 438, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 197, 206, 216, 228, 243, 251, 261, 266,
	269, 274, 275, 278, 283, 301, 307, 308, 309, 310,
	327, 328, 329, 332, 335, 336, 339, 341, 342, 345,
	352, 353, 354, 355, 356, 358, 365, 369, 377, 378,
	379, 380, 381, 383, 384, 388, 389, 390, 391, 399,
	403, 421, 422, 433, 446, 451, 262, 429, 452, 0,
	300, 0, 0, 302, 247, 265, 276, 0, 441, 400,
	201, 371, 254, 190, 219, 204, 226, 241, 244, 280,
	311, 318, 347, 351, 259, 238, 217, 368, 214, 386,
	406, 407, 408, 410, 315, 233, 350, 411, 0, 298,
	412, 413, 272, 0, 0, 0, 0, 0, 0, 334,
	0, 0, 0, 0, 565, 0, 0, 0, 237, 571,
	0, 0, 0, 289, 234, 0, 0, 348, 0, 187,
	0, 387, 222, 299, 296, 418, 248, 240, 236, 221,
	273, 306, 346, 405, 340, 578, 293, 0, 0, 396,
	319, 0, 0, 0, 0, 0, 573, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 220, 186, 331,
	397, 252, 0, 81, 0, 1185, 178, 179, 180, 609,
	616, 617, 618, 619, 620, 610, 612, 0, 0, 211,
	611, 218, 587, 614, 621, 622, 0, 232, 277, 239,
	231, 415, 0, 0, 0, 0, 203, 0, 0, 0,
	0, 0, 0, 0, 548, 562, 0, 577, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 559, 560, 0, 0,
	0, 0, 594, 0, 561, 0, 0, 570, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 320, 0, 593, 0, 0, 448, 0, 0, 591,
	0, 0, 0, 0, 288, 0, 285, 182, 199, 0,
	0, 330, 370, 376, 0, 0, 0, 223, 0, 374,
	344, 432, 207, 250, 367, 349, 372, 0, 0, 373,
	294, 420, 362, 430, 449, 450, 230, 324, 439, 409,
	445, 461, 200, 227, 338, 402, 435, 393, 317, 416,
	417, 284, 392, 258, 185, 292, 455, 198, 382, 215,
	205, 191, 404, 428, 212, 385, 0, 0, 463, 193,
	426, 401, 313, 281, 282, 192, 0, 366, 235, 256,
	225, 333, 423, 424, 224, 464, 202, 444, 195, 0,
	443, 326, 419, 427, 314, 304, 194, 425, 312, 303,
	287, 246, 267, 360, 297, 361, 268, 322, 321, 323,
	188, 436, 0, 189, 0, 398, 437, 465, 208, 209,
	210, 0, 245, 249, 255, 257, 263, 264, 271, 290,
	337, 359, 357, 363, 0, 414, 431, 440, 447, 453,
	454, 456, 457, 458, 459, 460, 325, 270, 394, 286,
	295, 0, 0, 343, 375, 213, 434, 395, 600, 592,
	582, 584, 601, 602, 579, 580, 583, 603, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 595, 568, 567,
	0, 575, 576, 0, 585, 586, 588, 569, 566, 181,
	196, 291, 0, 364, 253, 462, 442, 438, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 197, 206, 216, 228, 243,
	251, 261, 266, 269, 274, 275, 278, 283, 301, 307,
	308, 309, 310, 327, 328, 329, 332, 335, 336, 339,
	341, 342, 345, 352, 353, 354, 355, 356, 358, 365,
	369, 377, 378, 379, 380, 381, 383, 384, 388, 389,
	390, 391, 399, 403, 421, 422, 433, 446, 451, 262,
	429, 452, 0, 300, 0, 0, 302, 247, 265, 276,
	0, 441, 400, 201, 371, 254, 190, 219, 204, 226,
	241, 244, 280, 311, 318, 347, 351, 259, 238, 217,
	368, 214, 386, 406, 407, 408, 410, 315, 233, 350,
	411, 0, 298, 412, 413, 272, 0, 0, 0, 0,
	0, 0, 334, 0, 0, 0, 0, 565, 0, 0,
	0, 237, 571, 0, 0, 0, 289, 234, 0, 0,
	348, 0, 187, 0, 387, 222, 299, 296, 418, 248,
	240, 236, 221, 273, 306, 346, 405, 340, 578, 293,
	0, 0, 396, 319, 0, 0, 0, 0, 0, 573,
	574, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	220, 186, 331, 397, 252, 0, 81, 0, 0, 178,
	179, 180, 609, 616, 617, 618, 619, 620, 610, 612,
	0, 0, 211, 611, 218, 587, 614, 621, 622, 0,
	232, 277, 239, 231, 415, 0, 0, 0, 0, 203,
	0, 0, 0, 0, 0, 0, 0, 548, 562, 0,
	577, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 559,
	560, 700, 0, 0, 0, 594, 0, 561, 0, 0,
	570, 623, 624, 625, 626, 627, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 320, 0, 593, 0, 0, 448,
	0, 0, 591, 0, 0, 0, 0, 288, 0, 285,
	182, 199, 0, 0, 330, 370, 376, 0, 0, 0,
	223, 0, 374, 344, 432, 207, 250, 367, 349, 372,
	0, 0, 373, 294, 420, 362, 430, 449, 450, 230,
	324, 439, 409, 445, 461, 200, 227, 338, 402, 435,
	393, 317, 416, 417, 284, 392, 258, 185, 292, 455,
	198, 382, 215, 205, 191, 404, 428, 212, 385, 0,
	0, 463, 193, 426, 401, 313, 281, 282, 192, 0,
	366, 235, 256, 225, 333, 423, 424, 224, 464, 202,
	444, 195, 0, 443, 326, 419, 427, 314, 304, 194,
	425, 312, 303, 287, 246, 267, 360, 297, 361, 268,
	322, 321, 323, 188, 436, 0, 189, 0, 398, 437,
	465, 208, 209, 210, 0, 245, 249, 255, 257, 263,
	264, 271, 290, 337, 359, 357, 363, 0, 414, 431,
	440, 447, 453, 454, 456, 457, 458, 459, 460, 325,
	270, 394, 286, 295, 0, 0, 343, 375, 213, 434,
	395, 600, 592, 582, 584, 601, 602, 579, 580, 583,
	603, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	595, 568, 567, 0, 575, 576, 0, 585, 586, 588,
	569, 566, 181, 196, 291, 0, 364, 253, 462, 442,
	438, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 197, 206,
	216, 228, 243, 251, 261, 266, 269, 274, 275, 278,
	283, 301, 307, 308, 309, 310, 327, 328, 329, 332,
	335, 336, 339, 341, 342, 345, 352, 353, 354, 355,
	356, 358, 365, 369, 377, 378, 379, 380, 381, 383,
	384, 388, 389, 390, 391, 399, 403, 421, 422, 433,
	446, 451, 262, 429, 452, 0, 300, 0, 0, 302,
	247, 265, 276, 0, 441, 400, 201, 371, 254, 190,
	219, 204, 226, 241, 244, 280, 311, 318, 347, 351,
	259, 238, 217, 368, 214, 386, 406, 407, 408, 410,
	315, 233, 350, 411, 0, 298, 412, 413, 272, 0,
	0, 0, 0, 0, 0, 334, 0, 0, 0, 0,
	565, 0, 0, 0, 237, 571, 0, 0, 0, 289,
	234, 0, 0, 348, 0, 187, 0, 387, 222, 299,
	296, 418, 248, 240, 236, 221, 273, 306, 346, 405,
	340, 578, 293, 0, 0, 396, 319, 0, 0, 0,
	0, 0, 573, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 220, 186, 331, 397, 252, 0, 81,
	0, 0, 178, 179, 180, 609, 616, 617, 618, 619,
	620, 610, 612, 0, 0, 211, 611, 218, 587, 614,
	621, 622, 0, 232, 277, 239, 231, 415, 0, 0,
	0, 0, 203, 0, 0, 0, 0, 0, 0, 0,
	548, 562, 0, 577, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 559, 560, 0, 0, 0, 0, 594, 0,
	561, 0, 0, 570, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 320, 0, 593,
	0, 0, 448, 0, 0, 591, 0, 0, 0, 0,
	288, 0, 285, 182, 199, 0, 0, 330, 370, 376,
	0, 0, 0, 223, 0, 374, 344, 432, 207, 250,
	367, 349, 372, 0, 0, 373, 294, 420, 362, 430,
	449, 450, 230, 324, 439, 409, 445, 461, 200, 227,
	338, 402, 435, 393, 317, 416, 417, 284, 392, 258,
	185, 292, 455, 198, 382, 215, 205, 191, 404, 428,
	212, 385, 0, 0, 463, 193, 426, 401, 313, 281,
	282, 192, 0, 366, 235, 256, 225, 333, 423, 424,
	224, 464, 202, 444, 195, 0, 443, 326, 419, 427,
	314, 304, 194, 425, 312, 303, 287, 246, 267, 360,
	297, 361, 268, 322, 321, 323, 188, 436, 0, 189,
	0, 398, 437, 465, 208, 209, 210, 0, 245, 249,
	255, 257, 263, 264, 271, 290, 337, 359, 357, 363,
	0, 414, 431, 440, 447, 453, 454, 456, 457, 458,
	459, 460, 325, 270, 394, 286, 295, 0, 0, 343,
	375, 213, 434, 395, 600, 592, 582, 584, 601, 602,
	579, 580, 583, 603, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 595, 568, 567, 0, 575, 576, 0,
	585, 586, 588, 569, 566, 181, 196, 291, 0, 364,
	253, 462, 442, 438, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 197, 206, 216, 228, 243, 251, 261, 266, 269,
	274, 275, 278, 283, 301, 307, 308, 309, 310, 327,
	328, 329, 332, 335, 336, 339, 341, 342, 345, 352,
	353, 354, 355, 356, 358, 365, 369, 377, 378, 379,
	380, 381, 383, 384, 388, 389, 390, 391, 399, 403,
	421, 422, 433, 446, 451, 262, 429, 452, 0, 300,
	0, 0, 302, 247, 265, 276, 0, 441, 400, 201,
	371, 254, 190, 219, 204, 226, 241, 244, 280, 311,
	318, 347, 351, 259, 238, 217, 368, 214, 386, 406,
	407, 408, 410, 315, 233, 350, 411, 0, 298, 412,
	413, 272, 0, 0, 0, 0, 0, 0, 334, 0,
	0, 0, 0, 565, 0, 0, 0, 237, 571, 0,
	0, 0, 289, 234, 0, 0, 348, 0, 187, 0,
	387, 222, 299, 296, 418, 248, 240, 236, 221, 273,
	306, 346, 405, 340, 578, 293, 0, 0, 396, 319,
	0, 0, 0, 0, 0, 573, 574, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 220, 186, 331, 397,
	252, 0, 81, 0, 0, 178, 179, 180, 609, 616,
	617, 618, 619, 620, 610, 612, 0, 0, 211, 611,
	218, 587, 614, 621, 622, 0, 232, 277, 239, 231,
	415, 0, 0, 0, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 0, 562, 0, 577, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 559, 560, 0, 0, 0,
	0, 594, 0, 561, 0, 0, 570, 623, 624, 625,
	626, 627, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 572, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	320, 0, 593, 0, 0, 448, 0, 0, 591, 0,
	0, 0, 0, 288, 0, 285, 182, 199, 0, 0,
	330, 370, 376, 0, 0, 0, 223, 0, 374, 344,
	432, 207, 250, 367, 349, 372, 0, 0, 373, 294,
	420, 362, 430, 449, 450, 230, 324, 439, 409, 445,
	461, 200, 227, 338, 402, 435, 393, 317, 416, 417,
	284, 392, 258, 185, 292, 455, 198, 382, 215, 205,
	191, 404, 428, 212, 385, 0, 0, 463, 193, 426,
	401, 313, 281, 282, 192, 0, 366, 235, 256, 225,
	333, 423, 424, 224, 464, 202, 444, 195, 0, 443,
	326, 419, 427, 314, 304, 194, 425, 312, 303, 287,
	246, 267, 360, 297, 361, 268, 322, 321, 323, 188,
	436, 0, 189, 0, 398, 437, 465, 208, 209, 210,
	0, 245, 249, 255, 257, 263, 264, 271, 290, 337,
	359, 357, 363, 0, 414, 431, 440, 447, 453, 454,
	456, 457, 458, 459, 460, 325, 270, 394, 286, 295,
	0, 0, 343, 375, 213, 434, 395, 600, 592, 582,
	584, 601, 602, 579, 580, 583, 603, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 595, 568, 567, 0,
	575, 576, 0, 585, 586, 588, 569, 566, 181, 196,
	291, 0, 364, 253, 462, 442, 438, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 197, 206, 216, 228, 243, 251,
	261, 266, 269, 274, 275, 278, 283, 301, 307, 308,
	309, 310, 327, 328, 329, 332, 335, 336, 339, 341,
	342, 345, 352, 353, 354, 355, 356, 358, 365, 369,
	377, 378, 379, 380, 381, 383, 384, 388, 389, 390,
	391, 399, 403, 421, 422, 433, 446, 451, 262, 429,
	452, 0, 300, 0, 0, 302, 247, 265, 276, 0,
	441, 400, 201, 371, 254, 190, 219, 204, 226, 241,
	244, 280, 311, 318, 347, 351, 259, 238, 217, 368,
	214, 386, 406, 407, 408, 410, 315, 233, 350, 411,
	0, 298, 412, 413, 272, 0, 0, 0, 0, 0,
	0, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 0, 0, 289, 234, 0, 0, 348,
	0, 187, 0, 387, 222, 299, 296, 418, 248, 240,
	236, 221, 273, 306, 346, 405, 340, 0, 293, 0,
	0, 396, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 220,
	186, 331, 397, 252, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 211, 0, 218, 0, 0, 0, 0, 0, 232,
	277, 239, 231, 415, 0, 0, 0, 0, 203, 0,
	910, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 320, 0, 0, 0, 909, 448, 0,
	0, 0, 0, 0, 906, 907, 288, 870, 285, 182,
	199, 900, 904, 330, 370, 376, 0, 0, 0, 223,
	0, 374, 344, 432, 207, 250, 367, 349, 372, 0,
	0, 373, 294, 420, 362, 430, 449, 450, 230, 324,
	439, 409, 445, 461, 200, 227, 338, 402, 435, 393,
	317, 416, 417, 284, 392, 258, 185, 292, 455, 198,
	382, 215, 205, 191, 404, 428, 212, 385, 0, 0,
	463, 193, 426, 401, 313, 281, 282, 192, 0, 366,
	235, 256, 225, 333, 423, 424, 224, 464, 202, 444,
	195, 0, 443, 326, 419, 427, 314, 304, 194, 425,
	312, 303, 287, 246, 267, 360, 297, 361, 268, 322,
	321, 323, 188, 436, 0, 189, 0, 398, 437, 465,
	208, 209, 210, 0, 245, 249, 255, 257, 263, 264,
	271, 290, 337, 359, 357, 363, 0, 414, 431, 440,
	447, 453, 454, 456, 457, 458, 459, 460, 325, 270,
	394, 286, 295, 0, 0, 343, 375, 213, 434, 395,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 484, 305,
	0, 181, 196, 291, 0, 364, 253, 462, 442, 438,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 197, 206, 216,
	228, 243, 251, 261, 266, 269, 274, 275, 278, 283,
	301, 307, 308, 309, 310, 327, 328, 329, 332, 335,
	336, 339, 341, 342, 345, 352, 353, 354, 355, 356,
	358, 365, 369, 377, 378, 379, 380, 381, 383, 384,
	388, 389, 390, 391, 399, 403, 421, 422, 433, 446,
	451, 262, 429, 452, 0, 300, 0, 0, 302, 247,
	265, 276, 0, 441, 400, 201, 371, 254, 190, 219,
	204, 226, 241, 244, 280, 311, 318, 347, 351, 259,
	238, 217, 368, 214, 386, 406, 407, 408, 410, 315,
	233, 350, 411, 0, 298, 412, 413, 272, 0, 0,
	0, 0, 0, 0, 334, 0, 0, 0, 1205, 0,
	0, 0, 0, 237, 0, 0, 0, 0, 289, 234,
	0, 0, 348, 0, 187, 0, 387, 222, 299, 296,
	418, 248, 240, 236, 221, 273, 306, 346, 405, 340,
	0, 293, 0, 0, 396, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 220, 186, 331, 397, 252, 0, 0, 0,
	0, 178, 179, 180, 0, 1207, 0, 0, 0, 0,
	0, 0, 0, 0, 211, 0, 218, 0, 0, 0,
	0, 0, 232, 277, 239, 231, 415, 0, 0, 0,
	0, 203, 0, 0, 0, 1073, 0, 1074, 1075, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 320, 0, 0, 0,
	0, 448, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 285, 182, 199, 0, 0, 330, 370, 376, 0,
	0, 0, 223, 0, 374, 344, 432, 207, 250, 367,
	349, 372, 0, 0, 373, 294, 420, 362, 430, 449,
	450, 230, 324, 439, 409, 445, 461, 200, 227, 338,
	402, 435, 393, 317, 416, 417, 284, 392, 258, 185,
	292, 455, 198, 382, 215, 205, 191, 404, 428, 212,
	385, 0, 0, 463, 193, 426, 401, 313, 281, 282,
	192, 0, 366, 235, 256, 225, 333, 423, 424, 224,
	464, 202, 444, 195, 0, 443, 326, 419, 427, 314,
	304, 194, 425, 312, 303, 287, 246, 267, 360, 297,
	361, 268, 322, 321, 323, 188, 436, 0, 189, 0,
	398, 437, 465, 208, 209, 210, 0, 245, 249, 255,
	257, 263, 264, 271, 290, 337, 359, 357, 363, 0,
	414, 431, 440, 447, 453, 454, 456, 457, 458, 459,
	460, 325, 270, 394, 286, 295, 0, 0, 343, 375,
	213, 434, 395, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 484, 305, 0, 181, 196, 291, 0, 364, 253,
	462, 442, 438, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	197, 206, 216, 228, 243, 251, 261, 266, 269, 274,
	275, 278, 283, 301, 307, 308, 309, 310, 327, 328,
	329, 332, 335, 336, 339, 341, 342, 345, 352, 353,
	354, 355, 356, 358, 365, 369, 377, 378, 379, 380,
	381, 383, 384, 388, 389, 390, 391, 399, 403, 421,
	422, 433, 446, 451, 262, 429, 452, 0, 300, 0,
	0, 302, 247, 265, 276, 0, 441, 400, 201, 371,
	254, 190, 219, 204, 226, 241, 244, 280, 311, 318,
	347, 351, 259, 238, 217, 368, 214, 386, 406, 407,
	408, 410, 315, 233, 350, 411, 0, 298, 412, 413,
	272, 0, 0, 0, 0, 0, 0, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 0,
	0, 289, 234, 0, 0, 348, 0, 187, 0, 387,
	222, 299, 296, 418, 248, 240, 236, 221, 273, 306,
	346, 405, 340, 0, 293, 0, 0, 396, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 220, 186, 331, 397, 252,
	0, 0, 0, 0, 178, 179, 180, 1150, 1153, 0,
	0, 0, 0, 1149, 1152, 0, 0, 211, 1148, 218,
	0, 0, 0, 0, 0, 232, 277, 239, 231, 415,
	0, 0, 0, 0, 203, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 320,
	0, 0, 0, 0, 448, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 285, 182, 199, 0, 0, 330,
	370, 376, 0, 0, 0, 223, 0, 374, 344, 432,
	207, 250, 367, 349, 372, 0, 0, 373, 294, 420,
	362, 430, 449, 450, 230, 324, 439, 409, 445, 461,
	200, 227, 338, 402, 435, 393, 317, 416, 417, 284,
	392, 258, 185, 292, 455, 198, 382, 215, 205, 191,
	404, 428, 212, 385, 0, 0, 463, 193, 426, 401,
	313, 281, 282, 192, 0, 366, 235, 256, 225, 333,
	423, 424, 224, 464, 202, 444, 195, 0, 443, 326,
	419, 427, 314, 304, 194, 425, 312, 303, 287, 246,
	267, 360, 297, 361, 268, 322, 321, 323, 188, 436,
	0, 189, 0, 398, 437, 465, 208, 209, 210, 0,
	245, 249, 255, 257, 263, 264, 271, 290, 337, 359,
	357, 363, 0, 414, 431, 440, 447, 453, 454, 456,
	457, 458, 459, 460, 325, 270, 394, 286, 295, 0,
	0, 343, 375, 213, 434, 395, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 484, 305, 0, 181, 196, 291,
	0, 364, 253, 462, 442, 438, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 197, 206, 216, 228, 243, 251, 261,
	266, 269, 274, 275, 278, 283, 301, 307, 308, 309,
	310, 327, 328, 329, 332, 335, 336, 339, 341, 342,
	345, 352, 353, 354, 355, 356, 358, 365, 369, 377,
	378, 379, 380, 381, 383, 384, 388, 389, 390, 391,
	399, 403, 421, 422, 433, 446, 451, 262, 429, 452,
	0, 300, 0, 0, 302, 247, 265, 276, 0, 441,
	400, 201, 371, 254, 190, 219, 204, 226, 241, 244,
	280, 311, 318, 347, 351, 259, 238, 217, 368, 214,
	386, 406, 407, 408, 410, 315, 233, 350, 72, 411,
	298, 412, 413, 272, 0, 0, 0, 0, 0, 0,
	0, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 0, 0, 289, 234, 0, 0, 348,
	0, 187, 0, 387, 222, 299, 296, 418, 248, 240,
	236, 221, 273, 306, 346, 405, 340, 0, 293, 0,
	0, 396, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 220,
	186, 331, 397, 252, 0, 81, 0, 1185, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 211, 0, 218, 0, 0, 0, 0, 0, 232,
	277, 239, 231, 415, 0, 0, 0, 0, 203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 320, 0, 0, 0, 0, 448, 0,
	0, 0, 0, 0, 0, 0, 288, 0, 285, 182,
	199, 0, 0, 330, 370, 376, 0, 0, 0, 223,
	0, 374, 344, 432, 207, 250, 367, 349, 372, 0,
	0, 373, 294, 420, 362, 430, 449, 450, 230, 324,
	439, 409, 445, 461, 200, 227, 338, 402, 435, 393,
	317, 416, 417, 284, 392, 258, 185, 292, 455, 198,
	382, 215, 205, 191, 404, 428, 212, 385, 0, 0,
	463, 193, 426, 401, 313, 281, 282, 192, 0, 366,
	235, 256, 225, 333, 423, 424, 224, 464, 202, 444,
	195, 0, 443, 326, 419, 427, 314, 304, 194, 425,
	312, 303, 287, 246, 267, 360, 297, 361, 268, 322,
	321, 323, 188, 436, 0, 189, 0, 398, 437, 465,
	208, 209, 210, 0, 245, 249, 255, 257, 263, 264,
	271, 290, 337, 359, 357, 363, 0, 414, 431, 440,
	447, 453, 454, 456, 457, 458, 459, 460, 325, 270,
	394, 286, 295, 0, 0, 343, 375, 213, 434, 395,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 484, 305,
	0, 181, 196, 291, 80, 364, 253, 462, 442, 438,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 197, 206, 216,
	228, 243, 251, 261, 266, 269, 274, 275, 278, 283,
	301, 307, 308, 309, 310, 327, 328, 329, 332, 335,
	336, 339, 341, 342, 345, 352, 353, 354, 355, 356,
	358, 365, 369, 377, 378, 379, 380, 381, 383, 384,
	388, 389, 390, 391, 399, 403, 421, 422, 433, 446,
	451, 262, 429, 452, 0, 300, 0, 0, 302, 247,
	265, 276, 0, 441, 400, 201, 371, 254, 190, 219,
	204, 226, 241, 244, 280, 311, 318, 347, 351, 259,
	238, 217, 368, 214, 386, 406, 407, 408, 410, 315,
	233, 350, 72, 411, 298, 412, 413, 272, 0, 0,
	0, 0, 0, 0, 0, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 0, 0, 289,
	234, 0, 0, 348, 0, 187, 0, 387, 222, 299,
	296, 418, 248, 240, 236, 221, 273, 306, 346, 405,
	340, 0, 293, 0, 0, 396, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 220, 186, 331, 397, 252, 0, 81,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 211, 0, 218, 0, 0,
	0, 0, 0, 232, 277, 239, 231, 415, 0, 0,
	0, 0, 203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 320, 0, 0,
	0, 0, 448, 0, 0, 0, 0, 0, 0, 0,
	288, 0, 285, 182, 199, 0, 0, 330, 370, 376,
	0, 0, 0, 223, 0, 374, 344, 432, 207, 250,
	367, 349, 372, 0, 0, 373, 294, 420, 362, 430,
	449, 450, 230, 324, 439, 409, 445, 461, 200, 227,
	338, 402, 435, 393, 317, 416, 417, 284, 392, 258,
	185, 292, 455, 198, 382, 215, 205, 191, 404, 428,
	212, 385, 0, 0, 463, 193, 426, 401, 313, 281,
	282, 192, 0, 366, 235, 256, 225, 333, 423, 424,
	224, 464, 202, 444, 195, 0, 443, 326, 419, 427,
	314, 304, 194, 425, 312, 303, 287, 246, 267, 360,
	297, 361, 268, 322, 321, 323, 188, 436, 0, 189,
	0, 398, 437, 465, 208, 209, 210, 0, 245, 249,
	255, 257, 263, 264, 271, 290, 337, 359, 357, 363,
	0, 414, 431, 440, 447, 453, 454, 456, 457, 458,
	459, 460, 325, 270, 394, 286, 295, 0, 0, 343,
	375, 213, 434, 395, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 484, 305, 0, 181, 196, 291, 80, 364,
	253, 462, 442, 438, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 197, 206, 216, 228, 243, 251, 261, 266, 269,
	274, 275, 278, 283, 301, 307, 308, 309, 310, 327,
	328, 329, 332, 335, 336, 339, 341, 342, 345, 352,
	353, 354, 355, 356, 358, 365, 369, 377, 378, 379,
	380, 381, 383, 384, 388, 389, 390, 391, 399, 403,
	421, 422, 433, 446, 451, 262, 429, 452, 0, 300,
	0, 0, 302, 247, 265, 276, 0, 441, 400, 201,
	371, 254, 190, 219, 204, 226, 241, 244, 280, 311,
	318, 347, 351, 259, 238, 217, 368, 214, 386, 406,
	407, 408, 410, 315, 233, 350, 411, 0, 298, 412,
	413, 272, 0, 0, 0, 0, 0, 0, 334, 0,
	0, 0, 1584, 0, 0, 0, 0, 237, 0, 0,
	0, 0, 289, 234, 0, 0, 348, 0, 187, 0,
	387, 222, 299, 296, 418, 248, 240, 236, 221, 273,
	306, 346, 405, 340, 0, 293, 0, 0, 396, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 220, 186, 331, 397,
	252, 0, 0, 0, 0, 178, 179, 180, 0, 1377,
	0, 0, 0, 0, 0, 0, 0, 0, 211, 0,
	218, 0, 0, 0, 0, 0, 232, 277, 239, 231,
	415, 0, 0, 0, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	320, 0, 0, 0, 0, 448, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 285, 182, 199, 0, 0,
	330, 370, 376, 0, 0, 0, 223, 0, 374, 344,
	432, 207, 250, 367, 349, 372, 0, 1582, 373, 294,
	420, 362, 430, 449, 450, 230, 324, 439, 409, 445,
	461, 200, 227, 338, 402, 435, 393, 317, 416, 417,
	284, 392, 258, 185, 292, 455, 198, 382, 215, 205,
	191, 404, 428, 212, 385, 0, 0, 463, 193, 426,
	401, 313, 281, 282, 192, 0, 366, 235, 256, 225,
	333, 423, 424, 224, 464, 202, 444, 195, 0, 443,
	326, 419, 427, 314, 304, 194, 425, 312, 303, 287,
	246, 267, 360, 297, 361, 268, 322, 321, 323, 188,
	436, 0, 189, 0, 398, 437, 465, 208, 209, 210,
	0, 245, 249, 255, 257, 263, 264, 271, 290, 337,
	359, 357, 363, 0, 414, 431, 440, 447, 453, 454,
	456, 457, 458, 459, 460, 325, 270, 394, 286, 295,
	0, 0, 343, 375, 213, 434, 395, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 484, 305, 0, 181, 196,
	291, 0, 364, 253, 462, 442, 438, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 197, 206, 216, 228, 243, 251,
	261, 266, 269, 274, 275, 278, 283, 301, 307, 308,
	309, 310, 327, 328, 329, 332, 335, 336, 339, 341,
	342, 345, 352, 353, 354, 355, 356, 358, 365, 369,
	377, 378, 379, 380, 381, 383, 384, 388, 389, 390,
	391, 399, 403, 421, 422, 433, 446, 451, 262, 429,
	452, 0, 300, 0, 0, 302, 247, 265, 276, 0,
	441, 400, 201, 371, 254, 190, 219, 204, 226, 241,
	244, 280, 311, 318, 347, 351, 259, 238, 217, 368,
	214, 386, 406, 407, 408, 410, 315, 233, 350, 411,
	0, 298, 412, 413, 272, 0, 0, 0, 0, 0,
	0, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 0, 0, 289, 234, 0, 0, 348,
	0, 187, 0, 387, 222, 299, 296, 418, 248, 240,
	236, 221, 273, 306, 346, 405, 340, 0, 293, 0,
	0, 396, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 220,
	186, 331, 397, 252, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 211, 0, 218, 0, 0, 0, 0, 0, 232,
	277, 239, 231, 415, 0, 0, 0, 0, 203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 864, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 320, 0, 0, 0, 0, 448, 0,
	0, 0, 0, 0, 0, 0, 288, 870, 285, 182,
	199, 868, 0, 330, 370, 376, 0, 0, 0, 223,
	0, 374, 344, 432, 207, 250, 367, 349, 372, 0,
	0, 373, 294, 420, 362, 430, 449, 450, 230, 324,
	439, 409, 445, 461, 200, 227, 338, 402, 435, 393,
	317, 416, 417, 284, 392, 258, 185, 292, 455, 198,
	382, 215, 205, 191, 404, 428, 212, 385, 0, 0,
	463, 193, 426, 401, 313, 281, 282, 192, 0, 366,
	235, 256, 225, 333, 423, 424, 224, 464, 202, 444,
	195, 0, 443, 326, 419, 427, 314, 304, 194, 425,
	312, 303, 287, 246, 267, 360, 297, 361, 268, 322,
	321, 323, 188, 436, 0, 189, 0, 398, 437, 465,
	208, 209, 210, 0, 245, 249, 255, 257, 263, 264,
	271, 290, 337, 359, 357, 363, 0, 414, 431, 440,
	447, 453, 454, 456, 457, 458, 459, 460, 325, 270,
	394, 286, 295, 0, 0, 343, 375, 213, 434, 395,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 484, 305,
	0, 181, 196, 291, 0, 364, 253, 462, 442, 438,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 197, 206, 216,
	228, 243, 251, 261, 266, 269, 274, 275, 278, 283,
	301, 307, 308, 309, 310, 327, 328, 329, 332, 335,
	336, 339, 341, 342, 345, 352, 353, 354, 355, 356,
	358, 365, 369, 377, 378, 379, 380, 381, 383, 384,
	388, 389, 390, 391, 399, 403, 421, 422, 433, 446,
	451, 262, 429, 452, 0, 300, 0, 0, 302, 247,
	265, 276, 0, 441, 400, 201, 371, 254, 190, 219,
	204, 226, 241, 244, 280, 311, 318, 347, 351, 259,
	238, 217, 368, 214, 386, 406, 407, 408, 410, 315,
	233, 350, 411, 0, 298, 412, 413, 272, 0, 0,
	0, 0, 0, 0, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 0, 0, 289, 234,
	0, 0, 348, 0, 187, 0, 387, 222, 299, 296,
	418, 248, 240, 236, 221, 273, 306, 346, 405, 340,
	0, 293, 0, 0, 396, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 220, 186, 331, 397, 252, 0, 0, 0,
	1185, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 211, 0, 218, 0, 0, 0,
	0, 0, 232, 277, 239, 231, 415, 0, 0, 0,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 320, 0, 0, 0,
	0, 448, 0, 0, 0, 2418, 0, 0, 0, 288,
	0, 285, 182, 199, 0, 0, 330, 370, 376, 0,
	0, 0, 223, 0, 374, 344, 432, 207, 250, 367,
	349, 372, 0, 0, 373, 294, 420, 362, 430, 449,
	450, 230, 324, 439, 409, 445, 461, 200, 227, 338,
	402, 435, 393, 317, 416, 417, 284, 392, 258, 185,
	292, 455, 198, 382, 215, 205, 191, 404, 428, 212,
	385, 0, 0, 463, 193, 426, 401, 313, 281, 282,
	192, 0, 366, 235, 256, 225, 333, 423, 424, 224,
	464, 202, 444, 195, 0, 443, 326, 419, 427, 314,
	304, 194, 425, 312, 303, 287, 246, 267, 360, 297,
	361, 268, 322, 321, 323, 188, 436, 0, 189, 0,
	398, 437, 465, 208, 209, 210, 0, 245, 249, 255,
	257, 263, 264, 271, 290, 337, 359, 357, 363, 0,
	414, 431, 440, 447, 453, 454, 456, 457, 458, 459,
	460, 325, 270, 394, 286, 295, 0, 0, 343, 375,
	213, 434, 395, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 484, 305, 0, 181, 196, 291, 0, 364, 253,
	462, 442, 438, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	197, 206, 216, 228, 243, 251, 261, 266, 269, 274,
	275, 278, 283, 301, 307, 308, 309, 310, 327, 328,
	329, 332, 335, 336, 339, 341, 342, 345, 352, 353,
	354, 355, 356, 358, 365, 369, 377, 378, 379, 380,
	381, 383, 384, 388, 389, 390, 391, 399, 403, 421,
	422, 433, 446, 451, 262, 429, 452, 0, 300, 0,
	0, 302, 247, 265, 276, 0, 441, 400, 201, 371,
	254, 190, 219, 204, 226, 241, 244, 280, 311, 318,
	347, 351, 259, 238, 217, 368, 214, 386, 406, 407,
	408, 410, 315, 233, 350, 411, 0, 298, 412, 413,
	272, 0, 0, 0, 0, 0, 0, 334, 0, 0,
	0, 1584, 0, 0, 0, 0, 237, 0, 0, 0,
	0, 289, 234, 0, 0, 348, 0, 187, 0, 387,
	222, 299, 296, 418, 248, 240, 236, 221, 273, 306,
	346, 405, 340, 0, 293, 0, 0, 396, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 220, 186, 331, 397, 252,
	0, 0, 0, 0, 178, 179, 180, 0, 1377, 0,
	0, 0, 0, 0, 0, 0, 0, 211, 0, 218,
	0, 0, 0, 0, 0, 232, 277, 239, 231, 415,
	0, 0, 0, 0, 203, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 320,
	0, 0, 0, 0, 448, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 285, 182, 199, 0, 0, 330,
	370, 376, 0, 0, 0, 223, 0, 374, 344, 432,
	207, 250, 367, 349, 372, 0, 0, 373, 294, 420,
	362, 430, 449, 450, 230, 324, 439, 409, 445, 461,
	200, 227, 338, 402, 435, 393, 317, 416, 417, 284,
	392, 258, 185, 292, 455, 198, 382, 215, 205, 191,
	404, 428, 212, 385, 0, 0, 463, 193, 426, 401,
	313, 281, 282, 192, 0, 366, 235, 256, 225, 333,
	423, 424, 224, 464, 202, 444, 195, 0, 443, 326,
	419, 427, 314, 304, 194, 425, 312, 303, 287, 246,
	267, 360, 297, 361, 268, 322, 321, 323, 188, 436,
	0, 189, 0, 398, 437, 465, 208, 209, 210, 0,
	245, 249, 255, 257, 263, 264, 271, 290, 337, 359,
	357, 363, 0, 414, 431, 440, 447, 453, 454, 456,
	457, 458, 459, 460, 325, 270, 394, 286, 295, 0,
	0, 343, 375, 213, 434, 395, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 484, 305, 0, 181, 196, 291,
	0, 364, 253, 462, 442, 438, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 197, 206, 216, 228, 243, 251, 261,
	266, 269, 274, 275, 278, 283, 301, 307, 308, 309,
	310, 327, 328, 329, 332, 335, 336, 339, 341, 342,
	345, 352, 353, 354, 355, 356, 358, 365, 369, 377,
	378, 379, 380, 381, 383, 384, 388, 389, 390, 391,
	399, 403, 421, 422, 433, 446, 451, 262, 429, 452,
	0, 300, 0, 0, 302, 247, 265, 276, 0, 441,
	400, 201, 371, 254, 190, 219, 204, 226, 241, 244,
	280, 311, 318, 347, 351, 259, 238, 217, 368, 214,
	386, 406, 407, 408, 410, 315, 233, 350, 411, 0,
	298, 412, 413, 272, 0, 0, 0, 0, 0, 0,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 0, 0, 289, 234, 0, 0, 348, 0,
	187, 0, 387, 222, 299, 296, 418, 248, 240, 236,
	221, 273, 306, 346, 405, 340, 0, 293, 0, 0,
	396, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 220, 186,
	331, 397, 252, 0, 0, 0, 0, 178, 179, 180,
	0, 1859, 0, 0, 0, 0, 0, 0, 0, 0,
	211, 0, 218, 0, 0, 0, 0, 0, 232, 277,
	239, 231, 415, 0, 0, 0, 0, 203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1860, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 320, 0, 0, 0, 0, 448, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 285, 182, 199,
	0, 0, 330, 370, 376, 0, 0, 0, 223, 0,
	374, 344, 432, 207, 250, 367, 349, 372, 0, 0,
	373, 294, 420, 362, 430, 449, 450, 230, 324, 439,
	409, 445, 461, 200, 227, 338, 402, 435, 393, 317,
	416, 417, 284, 392, 258, 185, 292, 455, 198, 382,
	215, 205, 191, 404, 428, 212, 385, 0, 0, 463,
	193, 426, 401, 313, 281, 282, 192, 0, 366, 235,
	256, 225, 333, 423, 424, 224, 464, 202, 444, 195,
	0, 443, 326, 419, 427, 314, 304, 194, 425, 312,
	303, 287, 246, 267, 360, 297, 361, 268, 322, 321,
	323, 188, 436, 0, 189, 0, 398, 437, 465, 208,
	209, 210, 0, 245, 249, 255, 257, 263, 264, 271,
	290, 337, 359, 357, 363, 0, 414, 431, 440, 447,
	453, 454, 456, 457, 458, 459, 460, 325, 270, 394,
	286, 295, 0, 0, 343, 375, 213, 434, 395, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 484, 305, 0,
	181, 196, 291, 0, 364, 253, 462, 442, 438, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 197, 206, 216, 228,
	243, 251, 261, 266, 269, 274, 275, 278, 283, 301,
	307, 308, 309, 310, 327, 328, 329, 332, 335, 336,
	339, 341, 342, 345, 352, 353, 354, 355, 356, 358,
	365, 369, 377, 378, 379, 380, 381, 383, 384, 388,
	389, 390, 391, 399, 403, 421, 422, 433, 446, 451,
	262, 429, 452, 0, 300, 0, 0, 302, 247, 265,
	276, 0, 441, 400, 201, 371, 254, 190, 219, 204,
	226, 241, 244, 280, 311, 318, 347, 351, 259, 238,
	217, 368, 214, 386, 406, 407, 408, 410, 315, 233,
	350, 411, 0, 298, 412, 413, 272, 0, 0, 0,
	0, 0, 0, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 0, 0, 289, 234, 0,
	0, 348, 0, 187, 0, 387, 222, 299, 296, 418,
	248, 240, 236, 221, 273, 306, 346, 405, 340, 0,
	293, 0, 0, 396, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 220, 186, 331, 397, 252, 0, 0, 0, 0,
	178, 179, 180, 0, 0, 0, 1844, 0, 0, 0,
	1845, 0, 0, 211, 0, 218, 0, 0, 0, 0,
	0, 232, 277, 239, 231, 415, 0, 0, 0, 0,
	203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 320, 0, 0, 0, 0,
	448, 0, 0, 0, 0, 0, 0, 0, 288, 0,
	285, 182, 199, 0, 0, 330, 370, 376, 0, 0,
	0, 223, 0, 374, 344, 432, 207, 250, 367, 349,
	372, 0, 0, 373, 294, 420, 362, 430, 449, 450,
	230, 324, 439, 409, 445, 461, 200, 227, 338, 402,
	435, 393, 317, 416, 417, 284, 392, 258, 185, 292,
	455, 198, 382, 215, 205, 191, 404, 428, 212, 385,
	0, 0, 463, 193, 426, 401, 313, 281, 282, 192,
	0, 366, 235, 256, 225, 333, 423, 424, 224, 464,
	202, 444, 195, 0, 443, 326, 419, 427, 314, 304,
	194, 425, 312, 303, 287, 246, 267, 360, 297, 361,
	268, 322, 321, 323, 188, 436, 0, 189, 0, 398,
	437, 465, 208, 209, 210, 0, 245, 249, 255, 257,
	263, 264, 271, 290, 337, 359, 357, 363, 0, 414,
	431, 440, 447, 453, 454, 456, 457, 458, 459, 460,
	325, 270, 394, 286, 295, 0, 0, 343, 375, 213,
	434, 395, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	484, 305, 0, 181, 196, 291, 0, 364, 253, 462,
	442, 438, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 197,
	206, 216, 228, 243, 251, 261, 266, 269, 274, 275,
	278, 283, 301, 307, 308, 309, 310, 327, 328, 329,
	332, 335, 336, 339, 341, 342, 345, 352, 353, 354,
	355, 356, 358, 365, 369, 377, 378, 379, 380, 381,
	383, 384, 388, 389, 390, 391, 399, 403, 421, 422,
	433, 446, 451, 262, 429, 452, 0, 300, 0, 0,
	302, 247, 265, 276, 0, 441, 400, 201, 371, 254,
	190, 219, 204, 226, 241, 244, 280, 311, 318, 347,
	351, 259, 238, 217, 368, 214, 386, 406, 407, 408,
	410, 315, 233, 350, 411, 0, 298, 412, 413, 272,
	0, 0, 0, 0, 0, 0, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 1228, 0, 0, 0,
	289, 234, 0, 0, 348, 0, 187, 0, 387, 222,
	299, 296, 418, 248, 240, 236, 221, 273, 306, 346,
	405, 340, 0, 293, 0, 0, 396, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 220, 186, 331, 397, 252, 0,
	0, 0, 0, 178, 179, 180, 0, 1227, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 0, 218, 0,
	0, 0, 0, 0, 232, 277, 239, 231, 415, 0,
	0, 0, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 320, 0,
	0, 0, 0, 448, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 285, 182, 199, 0, 0, 330, 370,
	376, 0, 0, 0, 223, 0, 374, 344, 432, 207,
	250, 367, 349, 372, 0, 0, 373, 294, 420, 362,
	430, 449, 450, 230, 324, 439, 409, 445, 461, 200,
	227, 338, 402, 435, 393, 317, 416, 417, 284, 392,
	258, 185, 292, 455, 198, 382, 215, 205, 191, 404,
	428, 212, 385, 0, 0, 463, 193, 426, 401, 313,
	281, 282, 192, 0, 366, 235, 256, 225, 333, 423,
	424, 224, 464, 202, 444, 195, 0, 443, 326, 419,
	427, 314, 304, 194, 425, 312, 303, 287, 246, 267,
	360, 297, 361, 268, 322, 321, 323, 188, 436, 0,
	189, 0, 398, 437, 465, 208, 209, 210, 0, 245,
	249, 255, 257, 263, 264, 271, 290, 337, 359, 357,
	363, 0, 414, 431, 440, 447, 453, 454, 456, 457,
	458, 459, 460, 325, 270, 394, 286, 295, 0, 0,
	343, 375, 213, 434, 395, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 484, 305, 0, 181, 196, 291, 0,
	364, 253, 462, 442, 438, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 197, 206, 216, 228, 243, 251, 261, 266,
	269, 274, 275, 278, 283, 301, 307, 308, 309, 310,
	327, 328, 329, 332, 335, 336, 339, 341, 342, 345,
	352, 353, 354, 355, 356, 358, 365, 369, 377, 378,
	379, 380, 381, 383, 384, 388, 389, 390, 391, 399,
	403, 421, 422, 433, 446, 451, 262, 429, 452, 0,
	300, 0, 0, 302, 247, 265, 276, 0, 441, 400,
	201, 371, 254, 190, 219, 204, 226, 241, 244, 280,
	311, 318, 347, 351, 259, 238, 217, 368, 214, 386,
	406, 407, 408, 410, 315, 233, 350, 411, 0, 298,
	412, 413, 272, 0, 0, 0, 0, 0, 0, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 0, 0, 289, 234, 0, 0, 348, 0, 187,
	0, 387, 222, 299, 296, 418, 248, 240, 236, 221,
	273, 306, 346, 405, 340, 0, 293, 0, 0, 396,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 220, 186, 331,
	397, 252, 0, 0, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 211,
	0, 218, 0, 0, 0, 0, 0, 232, 277, 239,
	231, 415, 0, 0, 0, 0, 203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 320, 0, 0, 0, 0, 448, 0, 0, 0,
	2486, 0, 0, 0, 288, 0, 285, 182, 199, 0,
	0, 330, 370, 376, 0, 0, 0, 223, 0, 374,
	344, 432, 207, 250, 367, 349, 372, 0, 0, 373,
	294, 420, 362, 430, 449, 450, 230, 324, 439, 409,
	445, 461, 200, 227, 338, 402, 435, 393, 317, 416,
	417, 284, 392, 258, 185, 292, 455, 198, 382, 215,
	205, 191, 404, 428, 212, 385, 0, 0, 463, 193,
	426, 401, 313, 281, 282, 192, 0, 366, 235, 256,
	225, 333, 423, 424, 224, 464, 202, 444, 195, 0,
	443, 326, 419, 427, 314, 304, 194, 425, 312, 303,
	287, 246, 267, 360, 297, 361, 268, 322, 321, 323,
	188, 436, 0, 189, 0, 398, 437, 465, 208, 209,
	210, 0, 245, 249, 255, 257, 263, 264, 271, 290,
	337, 359, 357, 363, 0, 414, 431, 440, 447, 453,
	454, 456, 457, 458, 459, 460, 325, 270, 394, 286,
	295, 0, 0, 343, 375, 213, 434, 395, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 484, 305, 0, 181,
	196, 291, 0, 364, 253, 462, 442, 438, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 197, 206, 216, 228, 243,
	251, 261, 266, 269, 274, 275, 278, 283, 301, 307,
	308, 309, 310, 327, 328, 329, 332, 335, 336, 339,
	341, 342, 345, 352, 353, 354, 355, 356, 358, 365,
	369, 377, 378, 379, 380, 381, 383, 384, 388, 389,
	390, 391, 399, 403, 421, 422, 433, 446, 451, 262,
	429, 452, 0, 300, 0, 0, 302, 247, 265, 276,
	0, 441, 400, 201, 371, 254, 190, 219, 204, 226,
	241, 244, 280, 311, 318, 347, 351, 259, 238, 217,
	368, 214, 386, 406, 407, 408, 410, 315, 233, 350,
	411, 0, 298, 412, 413, 272, 0, 0, 0, 0,
	0, 0, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 0, 0, 289, 234, 0, 0,
	348, 0, 187, 0, 387, 222, 299, 296, 418, 248,
	240, 236, 221, 273, 306, 346, 405, 340, 0, 293,
	0, 0, 396, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	220, 186, 331, 397, 252, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 211, 0, 218, 0, 0, 0, 0, 0,
	232, 277, 239, 231, 415, 0, 0, 0, 0, 203,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 320, 0, 0, 0, 0, 448,
	0, 0, 0, 2418, 0, 0, 0, 288, 0, 285,
	182, 199, 0, 0, 330, 370, 376, 0, 0, 0,
	223, 0, 374, 344, 432, 207, 250, 367, 349, 372,
	0, 0, 373, 294, 420, 362, 430, 449, 450, 230,
	324, 439, 409, 445, 461, 200, 227, 338, 402, 435,
	393, 317, 416, 417, 284, 392, 258, 185, 292, 455,
	198, 382, 215, 205, 191, 404, 428, 212, 385, 0,
	0, 463, 193, 426, 401, 313, 281, 282, 192, 0,
	366, 235, 256, 225, 333, 423, 424, 224, 464, 202,
	444, 195, 0, 443, 326, 419, 427, 314, 304, 194,
	425, 312, 303, 287, 246, 267, 360, 297, 361, 268,
	322, 321, 323, 188, 436, 0, 189, 0, 398, 437,
	465, 208, 209, 210, 0, 245, 249, 255, 257, 263,
	264, 271, 290, 337, 359, 357, 363, 0, 414, 431,
	440, 447, 453, 454, 456, 457, 458, 459, 460, 325,
	270, 394, 286, 295, 0, 0, 343, 375, 213, 434,
	395, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 484,
	305, 0, 181, 196, 291, 0, 364, 253, 462, 442,
	438, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 197, 206,
	216, 228, 243, 251, 261, 266, 269, 274, 275, 278,
	283, 301, 307, 308, 309, 310, 327, 328, 329, 332,
	335, 336, 339, 341, 342, 345, 352, 353, 354, 355,
	356, 358, 365, 369, 377, 378, 379, 380, 381, 383,
	384, 388, 389, 390, 391, 399, 403, 421, 422, 433,
	446, 451, 262, 429, 452, 0, 300, 0, 0, 302,
	247, 265, 276, 0, 441, 400, 201, 371, 254, 190,
	219, 204, 226, 241, 244, 280, 311, 318, 347, 351,
	259, 238, 217, 368, 214, 386, 406, 407, 408, 410,
	315, 233, 350, 411, 0, 298, 412, 413, 272, 0,
	0, 0, 0, 0, 0, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 0, 0, 289,
	234, 0, 0, 348, 0, 187, 0, 387, 222, 299,
	296, 418, 248, 240, 236, 221, 273, 306, 346, 405,
	340, 0, 293, 0, 0, 396, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 220, 186, 331, 397, 252, 0, 81,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 211, 0, 218, 0, 0,
	0, 0, 0, 232, 277, 239, 231, 415, 0, 0,
	0, 0, 203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 320, 0, 0,
	0, 0, 448, 0, 0, 0, 0, 0, 0, 0,
	288, 0, 285, 182, 199, 0, 0, 330, 370, 376,
	0, 0, 0, 223, 0, 374, 344, 432, 207, 250,
	367, 349, 372, 0, 0, 373, 294, 420, 362, 430,
	449, 450, 230, 324, 439, 409, 445, 461, 200, 227,
	338, 402, 435, 393, 317, 416, 417, 284, 392, 258,
	185, 292, 455, 198, 382, 215, 205, 191, 404, 428,
	212, 385, 0, 0, 463, 193, 426, 401, 313, 281,
	282, 192, 0, 366, 235, 256, 225, 333, 423, 424,
	224, 464, 202, 444, 195, 0, 443, 326, 419, 427,
	314, 304, 194, 425, 312, 303, 287, 246, 267, 360,
	297, 361, 268, 322, 321, 323, 188, 436, 0, 189,
	0, 398, 437, 465, 208, 209, 210, 0, 245, 249,
	255, 257, 263, 264, 271, 290, 337, 359, 357, 363,
	0, 414, 431, 440, 447, 453, 454, 456, 457, 458,
	459, 460, 325, 270, 394, 286, 295, 0, 0, 343,
	375, 213, 434, 395, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 484, 305, 0, 181, 196, 291, 0, 364,
	253, 462, 442, 438, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 197, 206, 216, 228, 243, 251, 261, 266, 269,
	274, 275, 278, 283, 301, 307, 308, 309, 310, 327,
	328, 329, 332, 335, 336, 339, 341, 342, 345, 352,
	353, 354, 355, 356, 358, 365, 369, 377, 378, 379,
	380, 381, 383, 384, 388, 389, 390, 391, 399, 403,
	421, 422, 433, 446, 451, 262, 429, 452, 0, 300,
	0, 0, 302, 247, 265, 276, 0, 441, 400, 201,
	371, 254, 190, 219, 204, 226, 241, 244, 280, 311,
	318, 347, 351, 259, 238, 217, 368, 214, 386, 406,
	407, 408, 410, 315, 233, 350, 411, 0, 298, 412,
	413, 272, 0, 0, 0, 0, 0, 0, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	0, 0, 289, 234, 0, 0, 348, 0, 187, 0,
	387, 222, 299, 296, 418, 248, 240, 236, 221, 273,
	306, 346, 405, 340, 0, 293, 0, 0, 396, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 220, 186, 331, 397,
	252, 0, 0, 0, 0, 178, 179, 180, 0, 1377,
	0, 0, 0, 0, 0, 0, 0, 0, 211, 0,
	218, 0, 0, 0, 0, 0, 232, 277, 239, 231,
	415, 0, 0, 0, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	320, 0, 0, 0, 0, 448, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 285, 182, 199, 0, 0,
	330, 370, 376, 0, 0, 0, 223, 0, 374, 344,
	432, 207, 250, 367, 349, 372, 0, 0, 373, 294,
	420, 362, 430, 449, 450, 230, 324, 439, 409, 445,
	461, 200, 227, 338, 402, 435, 393, 317, 416, 417,
	284, 392, 258, 185, 292, 455, 198, 382, 215, 205,
	191, 404, 428, 212, 385, 0, 0, 463, 193, 426,
	401, 313, 281, 282, 192, 0, 366, 235, 256, 225,
	333, 423, 424, 224, 464, 202, 444, 195, 0, 443,
	326, 419, 427, 314, 304, 194, 425, 312, 303, 287,
	246, 267, 360, 297, 361, 268, 322, 321, 323, 188,
	436, 0, 189, 0, 398, 437, 465, 208, 209, 210,
	0, 245, 249, 255, 257, 263, 264, 271, 290, 337,
	359, 357, 363, 0, 414, 431, 440, 447, 453, 454,
	456, 457, 458, 459, 460, 325, 270, 394, 286, 295,
	0, 0, 343, 375, 213, 434, 395, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 484, 305, 0, 181, 196,
	291, 0, 364, 253, 462, 442, 438, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 197, 206, 216, 228, 243, 251,
	261, 266, 269, 274, 275, 278, 283, 301, 307, 308,
	309, 310, 327, 328, 329, 332, 335, 336, 339, 341,
	342, 345, 352, 353, 354, 355, 356, 358, 365, 369,
	377, 378, 379, 380, 381, 383, 384, 388, 389, 390,
	391, 399, 403, 421, 422, 433, 446, 451, 262, 429,
	452, 0, 300, 0, 0, 302, 247, 265, 276, 0,
	441, 400, 201, 371, 254, 190, 219, 204, 226, 241,
	244, 280, 311, 318, 347, 351, 259, 238, 217, 368,
	214, 386, 406, 407, 408, 410, 315, 233, 350, 0,
	411, 298, 412, 413, 272, 1627, 0, 0, 0, 0,
	0, 0, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 0, 0, 289, 234, 0, 0,
	348, 0, 187, 0, 387, 222, 299, 296, 418, 248,
	240, 236, 221, 273, 306, 346, 405, 340, 0, 293,
	0, 0, 396, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	220, 186, 331, 397, 252, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 211, 0, 218, 0, 0, 0, 0, 0,
	232, 277, 239, 231, 415, 0, 0, 0, 0, 203,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 320, 0, 0, 0, 0, 448,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 285,
	182, 199, 0, 0, 330, 370, 376, 0, 0, 0,
	223, 0, 374, 344, 432, 207, 250, 367, 349, 372,
	0, 0, 373, 294, 420, 362, 430, 449, 450, 230,
	324, 439, 409, 445, 461, 200, 227, 338, 402, 435,
	393, 317, 416, 417, 284, 392, 258, 185, 292, 455,
	198, 382, 215, 205, 191, 404, 428, 212, 385, 0,
	0, 463, 193, 426, 401, 313, 281, 282, 192, 0,
	366, 235, 256, 225, 333, 423, 424, 224, 464, 202,
	444, 195, 0, 443, 326, 419, 427, 314, 304, 194,
	425, 312, 303, 287, 246, 267, 360, 297, 361, 268,
	322, 321, 323, 188, 436, 0, 189, 0, 398, 437,
	465, 208, 209, 210, 0, 245, 249, 255, 257, 263,
	264, 271, 290, 337, 359, 357, 363, 0, 414, 431,
	440, 447, 453, 454, 456, 457, 458, 459, 460, 325,
	270, 394, 286, 295, 0, 0, 343, 375, 213, 434,
	395, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 484,
	305, 0, 181, 196, 291, 0, 364, 253, 462, 442,
	438, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 197, 206,
	216, 228, 243, 251, 261, 266, 269, 274, 275, 278,
	283, 301, 307, 308, 309, 310, 327, 328, 329, 332,
	335, 336, 339, 341, 342, 345, 352, 353, 354, 355,
	356, 358, 365, 369, 377, 378, 379, 380, 381, 383,
	384, 388, 389, 390, 391, 399, 403, 421, 422, 433,
	446, 451, 262, 429, 452, 0, 300, 0, 0, 302,
	247, 265, 276, 0, 441, 400, 201, 371, 254, 190,
	219, 204, 226, 241, 244, 280, 311, 318, 347, 351,
	259, 238, 217, 368, 214, 386, 406, 407, 408, 410,
	315, 233, 350, 411, 0, 298, 412, 413, 272, 0,
	0, 0, 0, 0, 0, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 0, 0, 289,
	234, 0, 0, 348, 0, 187, 0, 387, 222, 299,
	296, 418, 248, 240, 236, 221, 273, 306, 346, 405,
	340, 0, 293, 0, 0, 396, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 220, 186, 331, 397, 252, 0, 0,
	0, 0, 178, 179, 180, 0, 1207, 0, 0, 0,
	0, 0, 0, 0, 0, 211, 0, 218, 0, 0,
	0, 0, 0, 232, 277, 239, 231, 415, 0, 0,
	0, 0, 203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 320, 0, 0,
	0, 0, 448, 0, 0, 0, 0, 0, 0, 0,
	288, 0, 285, 182, 199, 0, 0, 330, 370, 376,
	0, 0, 0, 223, 0, 374, 344, 432, 207, 250,
	367, 349, 372, 0, 0, 373, 294, 420, 362, 430,
	449, 450, 230, 324, 439, 409, 445, 461, 200, 227,
	338, 402, 435, 393, 317, 416, 417, 284, 392, 258,
	185, 292, 455, 198, 382, 215, 205, 191, 404, 428,
	212, 385, 0, 0, 463, 193, 426, 401, 313, 281,
	282, 192, 0, 366, 235, 256, 225, 333, 423, 424,
	224, 464, 202, 444, 195, 0, 443, 326, 419, 427,
	314, 304, 194, 425, 312, 303, 287, 246, 267, 360,
	297, 361, 268, 322, 321, 323, 188, 436, 0, 189,
	0, 398, 437, 465, 208, 209, 210, 0, 245, 249,
	255, 257, 263, 264, 271, 290, 337, 359, 357, 363,
	0, 414, 431, 440, 447, 453, 454, 456, 457, 458,
	459, 460, 325, 270, 394, 286, 295, 0, 0, 343,
	375, 213, 434, 395, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 484, 305, 0, 181, 196, 291, 0, 364,
	253, 462, 442, 438, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 197, 206, 216, 228, 243, 251, 261, 266, 269,
	274, 275, 278, 283, 301, 307, 308, 309, 310, 327,
	328, 329, 332, 335, 336, 339, 341, 342, 345, 352,
	353, 354, 355, 356, 358, 365, 369, 377, 378, 379,
	380, 381, 383, 384, 388, 389, 390, 391, 399, 403,
	421, 422, 433, 446, 451, 262, 429, 452, 0, 300,
	0, 0, 302, 247, 265, 276, 0, 441, 400, 201,
	371, 254, 190, 219, 204, 226, 241, 244, 280, 311,
	318, 347, 351, 259, 238, 217, 368, 214, 386, 406,
	407, 408, 410, 315, 233, 350, 411, 0, 298, 412,
	413, 272, 0, 0, 0, 0, 0, 0, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	0, 0, 289, 234, 0, 0, 348, 0, 187, 0,
	387, 222, 299, 296, 418, 248, 240, 236, 221, 273,
	306, 346, 405, 340, 0, 293, 0, 0, 396, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 220, 186, 331, 397,
	252, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 211, 0,
	218, 0, 0, 0, 0, 0, 232, 277, 239, 231,
	415, 0, 0, 0, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1103, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	320, 0, 0, 0, 0, 448, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 285, 182, 199, 0, 0,
	330, 370, 376, 0, 0, 0, 223, 0, 374, 344,
	432, 207, 250, 367, 349, 372, 0, 0, 373, 294,
	420, 362, 430, 449, 450, 230, 324, 439, 409, 445,
	461, 200, 227, 338, 402, 435, 393, 317, 416, 417,
	284, 392, 258, 185, 292, 455, 198, 382, 215, 205,
	191, 404, 428, 212, 385, 0, 0, 463, 193, 426,
	401, 313, 281, 282, 192, 0, 366, 235, 256, 225,
	333, 423, 424, 224, 464, 202, 444, 195, 0, 443,
	326, 419, 427, 314, 304, 194, 425, 312, 303, 287,
	246, 267, 360, 297, 361, 268, 322, 321, 323, 188,
	436, 0, 189, 0, 398, 437, 465, 208, 209, 210,
	0, 245, 249, 255, 257, 263, 264, 271, 290, 337,
	359, 357, 363, 0, 414, 431, 440, 447, 453, 454,
	456, 457, 458, 459, 460, 325, 270, 394, 286, 295,
	0, 0, 343, 375, 213, 434, 395, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 484, 305, 0, 181, 196,
	291, 0, 364, 253, 462, 442, 438, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 197, 206, 216, 228, 243, 251,
	261, 266, 269, 274, 275, 278, 283, 301, 307, 308,
	309, 310, 327, 328, 329, 332, 335, 336, 339, 341,
	342, 345, 352, 353, 354, 355, 356, 358, 365, 369,
	377, 378, 379, 380, 381, 383, 384, 388, 389, 390,
	391, 399, 403, 421, 422, 433, 446, 451, 262, 429,
	452, 0, 300, 0, 0, 302, 247, 265, 276, 0,
	441, 400, 201, 371, 254, 190, 219, 204, 226, 241,
	244, 280, 311, 318, 347, 351, 259, 238, 217, 368,
	214, 386, 406, 407, 408, 410, 315, 233, 350, 411,
	0, 298, 412, 413, 272, 0, 0, 0, 0, 0,
	0, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 0, 0, 289, 234, 0, 0, 348,
	0, 187, 0, 387, 222, 299, 296, 418, 248, 240,
	236, 221, 273, 306, 346, 405, 340, 0, 293, 0,
	0, 396, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 220,
	186, 331, 397, 252, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 211, 0, 218, 0, 0, 0, 0, 0, 232,
	277, 239, 231, 415, 0, 0, 0, 0, 203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 320, 0, 0, 0, 0, 448, 0,
	0, 0, 0, 0, 0, 0, 288, 0, 285, 182,
	199, 0, 0, 330, 370, 376, 0, 0, 0, 223,
	0, 374, 344, 432, 207, 250, 367, 349, 372, 0,
	0, 373, 294, 420, 362, 430, 449, 450, 230, 324,
	439, 409, 445, 461, 200, 227, 338, 402, 435, 393,
	317, 416, 417, 284, 392, 258, 185, 292, 455, 198,
	382, 215, 205, 191, 404, 428, 212, 385, 0, 0,
	463, 193, 426, 401, 313, 281, 282, 192, 0, 366,
	235, 256, 225, 333, 423, 424, 224, 464, 202, 444,
	195, 0, 443, 326, 419, 427, 314, 304, 194, 425,
	312, 303, 287, 246, 267, 360, 297, 361, 268, 322,
	321, 323, 188, 436, 0, 189, 0, 398, 437, 465,
	208, 209, 210, 0, 245, 249, 255, 257, 263, 264,
	271, 290, 337, 359, 357, 363, 0, 414, 431, 440,
	447, 453, 454, 456, 457, 458, 459, 460, 325, 270,
	394, 286, 295, 0, 0, 343, 375, 213, 434, 395,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 484, 305,
	0, 181, 196, 291, 1468, 364, 253, 462, 442, 438,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 197, 206, 216,
	228, 243, 251, 261, 266, 269, 274, 275, 278, 283,
	301, 307, 308, 309, 310, 327, 328, 329, 332, 335,
	336, 339, 341, 342, 345, 352, 353, 354, 355, 356,
	358, 365, 369, 377, 378, 379, 380, 381, 383, 384,
	388, 389, 390, 391, 399, 403, 421, 422, 433, 446,
	451, 262, 429, 452, 0, 300, 0, 0, 302, 247,
	265, 276, 0, 441, 400, 201, 371, 254, 190, 219,
	204, 226, 241, 244, 280, 311, 318, 347, 351, 259,
	238, 217, 368, 214, 386, 406, 407, 408, 410, 315,
	233, 350, 411, 0, 298, 412, 413, 272, 0, 0,
	0, 0, 0, 0, 334, 0, 1349, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 0, 0, 289, 234,
	0, 0, 348, 0, 187, 0, 387, 222, 299, 296,
	418, 248, 240, 236, 221, 273, 306, 346, 405, 340,
	0, 293, 0, 0, 396, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 220, 186, 331, 397, 252, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 211, 0, 218, 0, 0, 0,
	0, 0, 232, 277, 239, 231, 415, 0, 0, 0,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 320, 0, 0, 0,
	0, 448, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 285, 182, 199, 0, 0, 330, 370, 376, 0,
	0, 0, 223, 0, 374, 344, 432, 207, 250, 367,
	349, 372, 0, 0, 373, 294, 420, 362, 430, 449,
	450, 230, 324, 439, 409, 445, 461, 200, 227, 338,
	402, 435, 393, 317, 416, 417, 284, 392, 258, 185,
	292, 455, 198, 382, 215, 205, 191, 404, 428, 212,
	385, 0, 0, 463, 193, 426, 401, 313, 281, 282,
	192, 0, 366, 235, 256, 225, 333, 423, 424, 224,
	464, 202, 444, 195, 0, 443, 326, 419, 427, 314,
	304, 194, 425, 312, 303, 287, 246, 267, 360, 297,
	361, 268, 322, 321, 323, 188, 436, 0, 189, 0,
	398, 437, 465, 208, 209, 210, 0, 245, 249, 255,
	257, 263, 264, 271, 290, 337, 359, 357, 363, 0,
	414, 431, 440, 447, 453, 454, 456, 457, 458, 459,
	460, 325, 270, 394, 286, 295, 0, 0, 343, 375,
	213, 434, 395, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 484, 305, 0, 181, 196, 291, 0, 364, 253,
	462, 442, 438, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	197, 206, 216, 228, 243, 251, 261, 266, 269, 274,
	275, 278, 283, 301, 307, 308, 309, 310, 327, 328,
	329, 332, 335, 336, 339, 341, 342, 345, 352, 353,
	354, 355, 356, 358, 365, 369, 377, 378, 379, 380,
	381, 383, 384, 388, 389, 390, 391, 399, 403, 421,
	422, 433, 446, 451, 262, 429, 452, 0, 300, 0,
	0, 302, 247, 265, 276, 0, 441, 400, 201, 371,
	254, 190, 219, 204, 226, 241, 244, 280, 311, 318,
	347, 351, 259, 238, 217, 368, 214, 386, 406, 407,
	408, 410, 315, 233, 350, 411, 0, 298, 412, 413,
	272, 0, 0, 0, 0, 0, 0, 334, 0, 1347,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 0,
	0, 289, 234, 0, 0, 348, 0, 187, 0, 387,
	222, 299, 296, 418, 248, 240, 236, 221, 273, 306,
	346, 405, 340, 0, 293, 0, 0, 396, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 220, 186, 331, 397, 252,
	0, 0, 0, 0, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 211, 0, 218,
	0, 0, 0, 0, 0, 232, 277, 239, 231, 415,
	0, 0, 0, 0, 203, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 320,
	0, 0, 0, 0, 448, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 285, 182, 199, 0, 0, 330,
	370, 376, 0, 0, 0, 223, 0, 374, 344, 432,
	207, 250, 367, 349, 372, 0, 0, 373, 294, 420,
	362, 430, 449, 450, 230, 324, 439, 409, 445, 461,
	200, 227, 338, 402, 435, 393, 317, 416, 417, 284,
	392, 258, 185, 292, 455, 198, 382, 215, 205, 191,
	404, 428, 212, 385, 0, 0, 463, 193, 426, 401,
	313, 281, 282, 192, 0, 366, 235, 256, 225, 333,
	423, 424, 224, 464, 202, 444, 195, 0, 443, 326,
	419, 427, 314, 304, 194, 425, 312, 303, 287, 246,
	267, 360, 297, 361, 268, 322, 321, 323, 188, 436,
	0, 189, 0, 398, 437, 465, 208, 209, 210, 0,
	245, 249, 255, 257, 263, 264, 271, 290, 337, 359,
	357, 363, 0, 414, 431, 440, 447, 453, 454, 456,
	457, 458, 459, 460, 325, 270, 394, 286, 295, 0,
	0, 343, 375, 213, 434, 395, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 484, 305, 0, 181, 196, 291,
	0, 364, 253, 462, 442, 438, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 197, 206, 216, 228, 243, 251, 261,
	266, 269, 274, 275, 278, 283, 301, 307, 308, 309,
	310, 327, 328, 329, 332, 335, 336, 339, 341, 342,
	345, 352, 353, 354, 355, 356, 358, 365, 369, 377,
	378, 379, 380, 381, 383, 384, 388, 389, 390, 391,
	399, 403, 421, 422, 433, 446, 451, 262, 429, 452,
	0, 300, 0, 0, 302, 247, 265, 276, 0, 441,
	400, 201, 371, 254, 190, 219, 204, 226, 241, 244,
	280, 311, 318, 347, 351, 259, 238, 217, 368, 214,
	386, 406, 407, 408, 410, 315, 233, 350, 411, 0,
	298, 412, 413, 272, 0, 0, 0, 0, 0, 0,
	334, 0, 1345, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 0, 0, 289, 234, 0, 0, 348, 0,
	187, 0, 387, 222, 299, 296, 418, 248, 240, 236,
	221, 273, 306, 346, 405, 340, 0, 293, 0, 0,
	396, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 220, 186,
	331, 397, 252, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	211, 0, 218, 0, 0, 0, 0, 0, 232, 277,
	239, 231, 415, 0, 0, 0, 0, 203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 320, 0, 0, 0, 0, 448, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 285, 182, 199,
	0, 0, 330, 370, 376, 0, 0, 0, 223, 0,
	374, 344, 432, 207, 250, 367, 349, 372, 0, 0,
	373, 294, 420, 362, 430, 449, 450, 230, 324, 439,
	409, 445, 461, 200, 227, 338, 402, 435, 393, 317,
	416, 417, 284, 392, 258, 185, 292, 455, 198, 382,
	215, 205, 191, 404, 428, 212, 385, 0, 0, 463,
	193, 426, 401, 313, 281, 282, 192, 0, 366, 235,
	256, 225, 333, 423, 424, 224, 464, 202, 444, 195,
	0, 443, 326, 419, 427, 314, 304, 194, 425, 312,
	303, 287, 246, 267, 360, 297, 361, 268, 322, 321,
	323, 188, 436, 0, 189, 0, 398, 437, 465, 208,
	209, 210, 0, 245, 249, 255, 257, 263, 264, 271,
	290, 337, 359, 357, 363, 0, 414, 431, 440, 447,
	453, 454, 456, 457, 458, 459, 460, 325, 270, 394,
	286, 295, 0, 0, 343, 375, 213, 434, 395, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 484, 305, 0,
	181, 196, 291, 0, 364, 253, 462, 442, 438, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 197, 206, 216, 228,
	243, 251, 261, 266, 269, 274, 275, 278, 283, 301,
	307, 308, 309, 310, 327, 328, 329, 332, 335, 336,
	339, 341, 342, 345, 352, 353, 354, 355, 356, 358,
	365, 369, 377, 378, 379, 380, 381, 383, 384, 388,
	389, 390, 391, 399, 403, 421, 422, 433, 446, 451,
	262, 429, 452, 0, 300, 0, 0, 302, 247, 265,
	276, 0, 441, 400, 201, 371, 254, 190, 219, 204,
	226, 241, 244, 280, 311, 318, 347, 351, 259, 238,
	217, 368, 214, 386, 406, 407, 408, 410, 315, 233,
	350, 411, 0, 298, 412, 413, 272, 0, 0, 0,
	0, 0, 0, 334, 0, 1343, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 0, 0, 289, 234, 0,
	0, 348, 0, 187, 0, 387, 222, 299, 296, 418,
	248, 240, 236, 221, 273, 306, 346, 405, 340, 0,
	293, 0, 0, 396, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 220, 186, 331, 397, 252, 0, 0, 0, 0,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 211, 0, 218, 0, 0, 0, 0,
	0, 232, 277, 239, 231, 415, 0, 0, 0, 0,
	203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 320, 0, 0, 0, 0,
	448, 0, 0, 0, 0, 0, 0, 0, 288, 0,
	285, 182, 199, 0, 0, 330, 370, 376, 0, 0,
	0, 223, 0, 374, 344, 432, 207, 250, 367, 349,
	372, 0, 0, 373, 294, 420, 362, 430, 449, 450,
	230, 324, 439, 409, 445, 461, 200, 227, 338, 402,
	435, 393, 317, 416, 417, 284, 392, 258, 185, 292,
	455, 198, 382, 215, 205, 191, 404, 428, 212, 385,
	0, 0, 463, 193, 426, 401, 313, 281, 282, 192,
	0, 366, 235, 256, 225, 333, 423, 424, 224, 464,
	202, 444, 195, 0, 443, 326, 419, 427, 314, 304,
	194, 425, 312, 303, 287, 246, 267, 360, 297, 361,
	268, 322, 321, 323, 188, 436, 0, 189, 0, 398,
	437, 465, 208, 209, 210, 0, 245, 249, 255, 257,
	263, 264, 271, 290, 337, 359, 357, 363, 0, 414,
	431, 440, 447, 453, 454, 456, 457, 458, 459, 460,
	325, 270, 394, 286, 295, 0, 0, 343, 375, 213,
	434, 395, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	484, 305, 0, 181, 196, 291, 0, 364, 253, 462,
	442, 438, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 197,
	206, 216, 228, 243, 251, 261, 266, 269, 274, 275,
	278, 283, 301, 307, 308, 309, 310, 327, 328, 329,
	332, 335, 336, 339, 341, 342, 345, 352, 353, 354,
	355, 356, 358, 365, 369, 377, 378, 379, 380, 381,
	383, 384, 388, 389, 390, 391, 399, 403, 421, 422,
	433, 446, 451, 262, 429, 452, 0, 300, 0, 0,
	302, 247, 265, 276, 0, 441, 400, 201, 371, 254,
	190, 219, 204, 226, 241, 244, 280, 311, 318, 347,
	351, 259, 238, 217, 368, 214, 386, 406, 407, 408,
	410, 315, 233, 350, 411, 0, 298, 412, 413, 272,
	0, 0, 0, 0, 0, 0, 334, 0, 1341, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 0, 0,
	289, 234, 0, 0, 348, 0, 187, 0, 387, 222,
	299, 296, 418, 248, 240, 236, 221, 273, 306, 346,
	405, 340, 0, 293, 0, 0, 396, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 220, 186, 331, 397, 252, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 0, 218, 0,
	0, 0, 0, 0, 232, 277, 239, 231, 415, 0,
	0, 0, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 320, 0,
	0, 0, 0, 448, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 285, 182, 199, 0, 0, 330, 370,
	376, 0, 0, 0, 223, 0, 374, 344, 432, 207,
	250, 367, 349, 372, 0, 0, 373, 294, 420, 362,
	430, 449, 450, 230, 324, 439, 409, 445, 461, 200,
	227, 338, 402, 435, 393, 317, 416, 417, 284, 392,
	258, 185, 292, 455, 198, 382, 215, 205, 191, 404,
	428, 212, 385, 0, 0, 463, 193, 426, 401, 313,
	281, 282, 192, 0, 366, 235, 256, 225, 333, 423,
	424, 224, 464, 202, 444, 195, 0, 443, 326, 419,
	427, 314, 304, 194, 425, 312, 303, 287, 246, 267,
	360, 297, 361, 268, 322, 321, 323, 188, 436, 0,
	189, 0, 398, 437, 465, 208, 209, 210, 0, 245,
	249, 255, 257, 263, 264, 271, 290, 337, 359, 357,
	363, 0, 414, 431, 440, 447, 453, 454, 456, 457,
	458, 459, 460, 325, 270, 394, 286, 295, 0, 0,
	343, 375, 213, 434, 395, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 484, 305, 0, 181, 196, 291, 0,
	364, 253, 462, 442, 438, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 197, 206, 216, 228, 243, 251, 261, 266,
	269, 274, 275, 278, 283, 301, 307, 308, 309, 310,
	327, 328, 329, 332, 335, 336, 339, 341, 342, 345,
	352, 353, 354, 355, 356, 358, 365, 369, 377, 378,
	379, 380, 381, 383, 384, 388, 389, 390, 391, 399,
	403, 421, 422, 433, 446, 451, 262, 429, 452, 0,
	300, 0, 0, 302, 247, 265, 276, 0, 441, 400,
	201, 371, 254, 190, 219, 204, 226, 241, 244, 280,
	311, 318, 347, 351, 259, 238, 217, 368, 214, 386,
	406, 407, 408, 410, 315, 233, 350, 411, 0, 298,
	412, 413, 272, 0, 0, 0, 0, 0, 0, 334,
	0, 1337, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 0, 0, 289, 234, 0, 0, 348, 0, 187,
	0, 387, 222, 299, 296, 418, 248, 240, 236, 221,
	273, 306, 346, 405, 340, 0, 293, 0, 0, 396,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 220, 186, 331,
	397, 252, 0, 0, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 211,
	0, 218, 0, 0, 0, 0, 0, 232, 277, 239,
	231, 415, 0, 0, 0, 0, 203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 320, 0, 0, 0, 0, 448, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 285, 182, 199, 0,
	0, 330, 370, 376, 0, 0, 0, 223, 0, 374,
	344, 432, 207, 250, 367, 349, 372, 0, 0, 373,
	294, 420, 362, 430, 449, 450, 230, 324, 439, 409,
	445, 461, 200, 227, 338, 402, 435, 393, 317, 416,
	417, 284, 392, 258, 185, 292, 455, 198, 382, 215,
	205, 191, 404, 428, 212, 385, 0, 0, 463, 193,
	426, 401, 313, 281, 282, 192, 0, 366, 235, 256,
	225, 333, 423, 424, 224, 464, 202, 444, 195, 0,
	443, 326, 419, 427, 314, 304, 194, 425, 312, 303,
	287, 246, 267, 360, 297, 361, 268, 322, 321, 323,
	188, 436, 0, 189, 0, 398, 437, 465, 208, 209,
	210, 0, 245, 249, 255, 257, 263, 264, 271, 290,
	337, 359, 357, 363, 0, 414, 431, 440, 447, 453,
	454, 456, 457, 458, 459, 460, 325, 270, 394, 286,
	295, 0, 0, 343, 375, 213, 434, 395, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 484, 305, 0, 181,
	196, 291, 0, 364, 253, 462, 442, 438, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 197, 206, 216, 228, 243,
	251, 261, 266, 269, 274, 275, 278, 283, 301, 307,
	308, 309, 310, 327, 328, 329, 332, 335, 336, 339,
	341, 342, 345, 352, 353, 354, 355, 356, 358, 365,
	369, 377, 378, 379, 380, 381, 383, 384, 388, 389,
	390, 391, 399, 403, 421, 422, 433, 446, 451, 262,
	429, 452, 0, 300, 0, 0, 302, 247, 265, 276,
	0, 441, 400, 201, 371, 254, 190, 219, 204, 226,
	241, 244, 280, 311, 318, 347, 351, 259, 238, 217,
	368, 214, 386, 406, 407, 408, 410, 315, 233, 350,
	411, 0, 298, 412, 413, 272, 0, 0, 0, 0,
	0, 0, 334, 0, 1335, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 0, 0, 289, 234, 0, 0,
	348, 0, 187, 0, 387, 222, 299, 296, 418, 248,
	240, 236, 221, 273, 306, 346, 405, 340, 0, 293,
	0, 0, 396, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	220, 186, 331, 397, 252, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 211, 0, 218, 0, 0, 0, 0, 0,
	232, 277, 239, 231, 415, 0, 0, 0, 0, 203,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 320, 0, 0, 0, 0, 448,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 285,
	182, 199, 0, 0, 330, 370, 376, 0, 0, 0,
	223, 0, 374, 344, 432, 207, 250, 367, 349, 372,
	0, 0, 373, 294, 420, 362, 430, 449, 450, 230,
	324, 439, 409, 445, 461, 200, 227, 338, 402, 435,
	393, 317, 416, 417, 284, 392, 258, 185, 292, 455,
	198, 382, 215, 205, 191, 404, 428, 212, 385, 0,
	0, 463, 193, 426, 401, 313, 281, 282, 192, 0,
	366, 235, 256, 225, 333, 423, 424, 224, 464, 202,
	444, 195, 0, 443, 326, 419, 427, 314, 304, 194,
	425, 312, 303, 287, 246, 267, 360, 297, 361, 268,
	322, 321, 323, 188, 436, 0, 189, 0, 398, 437,
	465, 208, 209, 210, 0, 245, 249, 255, 257, 263,
	264, 271, 290, 337, 359, 357, 363, 0, 414, 431,
	440, 447, 453, 454, 456, 457, 458, 459, 460, 325,
	270, 394, 286, 295, 0, 0, 343, 375, 213, 434,
	395, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 484,
	305, 0, 181, 196, 291, 0, 364, 253, 462, 442,
	438, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 197, 206,
	216, 228, 243, 251, 261, 266, 269, 274, 275, 278,
	283, 301, 307, 308, 309, 310, 327, 328, 329, 332,
	335, 336, 339, 341, 342, 345, 352, 353, 354, 355,
	356, 358, 365, 369, 377, 378, 379, 380, 381, 383,
	384, 388, 389, 390, 391, 399, 403, 421, 422, 433,
	446, 451, 262, 429, 452, 0, 300, 0, 0, 302,
	247, 265, 276, 0, 441, 400, 201, 371, 254, 190,
	219, 204, 226, 241, 244, 280, 311, 318, 347, 351,
	259, 238, 217, 368, 214, 386, 406, 407, 408, 410,
	315, 233, 350, 411, 0, 298, 412, 413, 272, 0,
	0, 0, 0, 0, 0, 334, 0, 1333, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 0, 0, 289,
	234, 0, 0, 348, 0, 187, 0, 387, 222, 299,
	296, 418, 248, 240, 236, 221, 273, 306, 346, 405,
	340, 0, 293, 0, 0, 396, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 220, 186, 331, 397, 252, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 211, 0, 218, 0, 0,
	0, 0, 0, 232, 277, 239, 231, 415, 0, 0,
	0, 0, 203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 320, 0, 0,
	0, 0, 448, 0, 0, 0, 0, 0, 0, 0,
	288, 0, 285, 182, 199, 0, 0, 330, 370, 376,
	0, 0, 0, 223, 0, 374, 344, 432, 207, 250,
	367, 349, 372, 0, 0, 373, 294, 420, 362, 430,
	449, 450, 230, 324, 439, 409, 445, 461, 200, 227,
	338, 402, 435, 393, 317, 416, 417, 284, 392, 258,
	185, 292, 455, 198, 382, 215, 205, 191, 404, 428,
	212, 385, 0, 0, 463, 193, 426, 401, 313, 281,
	282, 192, 0, 366, 235, 256, 225, 333, 423, 424,
	224, 464, 202, 444, 195, 0, 443, 326, 419, 427,
	314, 304, 194, 425, 312, 303, 287, 246, 267, 360,
	297, 361, 268, 322, 321, 323, 188, 436, 0, 189,
	0, 398, 437, 465, 208, 209, 210, 0, 245, 249,
	255, 257, 263, 264, 271, 290, 337, 359, 357, 363,
	0, 414, 431, 440, 447, 453, 454, 456, 457, 458,
	459, 460, 325, 270, 394, 286, 295, 0, 0, 343,
	375, 213, 434, 395, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 484, 305, 0, 181, 196, 291, 0, 364,
	253, 462, 442, 438, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 197, 206, 216, 228, 243, 251, 261, 266, 269,
	274, 275, 278, 283, 301, 307, 308, 309, 310, 327,
	328, 329, 332, 335, 336, 339, 341, 342, 345, 352,
	353, 354, 355, 356, 358, 365, 369, 377, 378, 379,
	380, 381, 383, 384, 388, 389, 390, 391, 399, 403,
	421, 422, 433, 446, 451, 262, 429, 452, 0, 300,
	0, 0, 302, 247, 265, 276, 0, 441, 400, 201,
	371, 254, 190, 219, 204, 226, 241, 244, 280, 311,
	318, 347, 351, 259, 238, 217, 368, 214, 386, 406,
	407, 408, 410, 315, 233, 350, 411, 0, 298, 412,
	413, 272, 0, 0, 0, 0, 0, 0, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	0, 0, 289, 234, 0, 0, 348, 0, 187, 0,
	387, 222, 299, 296, 418, 248, 240, 236, 221, 273,
	306, 346, 405, 340, 0, 293, 0, 0, 396, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 220, 186, 331, 397,
	252, 0, 1310, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 211, 0,
	218, 0, 0, 0, 0, 0, 232, 277, 239, 231,
	415, 0, 0, 0, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	320, 0, 0, 0, 0, 448, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 285, 182, 199, 0, 0,
	330, 370, 376, 0, 0, 0, 223, 0, 374, 344,
	432, 207, 250, 367, 349, 372, 0, 0, 373, 294,
	420, 362, 430, 449, 450, 230, 324, 439, 409, 445,
	461, 200, 227, 338, 402, 435, 393, 317, 416, 417,
	284, 392, 258, 185, 292, 455, 198, 382, 215, 205,
	191, 404, 428, 212, 385, 0, 0, 463, 193, 426,
	401, 313, 281, 282, 192, 0, 366, 235, 256, 225,
	333, 423, 424, 224, 464, 202, 444, 195, 0, 443,
	326, 419, 427, 314, 304, 194, 425, 312, 303, 287,
	246, 267, 360, 297, 361, 268, 322, 321, 323, 188,
	436, 0, 189, 0, 398, 437, 465, 208, 209, 210,
	0, 245, 249, 255, 257, 263, 264, 271, 290, 337,
	359, 357, 363, 0, 414, 431, 440, 447, 453, 454,
	456, 457, 458, 459, 460, 325, 270, 394, 286, 295,
	0, 0, 343, 375, 213, 434, 395, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 484, 305, 0, 181, 196,
	291, 0, 364, 253, 462, 442, 438, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 197, 206, 216, 228, 243, 251,
	261, 266, 269, 274, 275, 278, 283, 301, 307, 308,
	309, 310, 327, 328, 329, 332, 335, 336, 339, 341,
	342, 345, 352, 353, 354, 355, 356, 358, 365, 369,
	377, 378, 379, 380, 381, 383, 384, 388, 389, 390,
	391, 399, 403, 421, 422, 433, 446, 451, 262, 429,
	452, 0, 300, 0, 0, 302, 247, 265, 276, 0,
	441, 400, 201, 371, 254, 190, 219, 204, 226, 241,
	244, 280, 311, 318, 347, 351, 259, 238, 217, 368,
	214, 386, 406, 407, 408, 410, 315, 233, 350, 411,
	0, 298, 412, 413, 272, 0, 0, 0, 0, 0,
	0, 334, 0, 0, 0, 0, 0, 0, 0, 1212,
	237, 0, 0, 0, 0, 289, 234, 0, 0, 348,
	0, 187, 0, 387, 222, 299, 296, 418, 248, 240,
	236, 221, 273, 306, 346, 405, 340, 0, 293, 0,
	0, 396, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 220,
	186, 331, 397, 252, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 211, 0, 218, 0, 0, 0, 0, 0, 232,
	277, 239, 231, 415, 0, 0, 0, 0, 203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 320, 0, 0, 0, 0, 448, 0,
	0, 0, 0, 0, 0, 0, 288, 0, 285, 182,
	199, 0, 0, 330, 370, 376, 0, 0, 0, 223,
	0, 374, 344, 432, 207, 250, 367, 349, 372, 0,
	0, 373, 294, 420, 362, 430, 449, 450, 230, 324,
	439, 409, 445, 461, 200, 227, 338, 402, 435, 393,
	317, 416, 417, 284, 392, 258, 185, 292, 455, 198,
	382, 215, 205, 191, 404, 428, 212, 385, 0, 0,
	463, 193, 426, 401, 313, 281, 282, 192, 0, 366,
	235, 256, 225, 333, 423, 424, 224, 464, 202, 444,
	195, 0, 443, 326, 419, 427, 314, 304, 194, 425,
	312, 303, 287, 246, 267, 360, 297, 361, 268, 322,
	321, 323, 188, 436, 0, 189, 0, 398, 437, 465,
	208, 209, 210, 0, 245, 249, 255, 257, 263, 264,
	271, 290, 337, 359, 357, 363, 0, 414, 431, 440,
	447, 453, 454, 456, 457, 458, 459, 460, 325, 270,
	394, 286, 295, 0, 0, 343, 375, 213, 434, 395,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 484, 305,
	0, 181, 196, 291, 0, 364, 253, 462, 442, 438,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 197, 206, 216,
	228, 243, 251, 261, 266, 269, 274, 275, 278, 283,
	301, 307, 308, 309, 310, 327, 328, 329, 332, 335,
	336, 339, 341, 342, 345, 352, 353, 354, 355, 356,
	358, 365, 369, 377, 378, 379, 380, 381, 383, 384,
	388, 389, 390, 391, 399, 403, 421, 422, 433, 446,
	451, 262, 429, 452, 0, 300, 0, 0, 302, 247,
	265, 276, 0, 441, 400, 201, 371, 254, 190, 219,
	204, 226, 241, 244, 280, 311, 318, 347, 351, 259,
	238, 217, 368, 214, 386, 406, 407, 408, 410, 315,
	233, 350, 411, 0, 298, 412, 413, 272, 0, 0,
	0, 0, 0, 0, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 0, 0, 289, 234,
	0, 0, 348, 0, 187, 0, 387, 222, 299, 296,
	418, 248, 240, 236, 221, 273, 306, 346, 405, 340,
	0, 293, 0, 0, 396, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 220, 186, 331, 397, 252, 0, 0, 0,
	0, 178, 179, 180, 0, 1050, 0, 0, 0, 0,
	0, 0, 0, 0, 211, 0, 218, 0, 0, 0,
	0, 0, 232, 277, 239, 231, 415, 0, 0, 0,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 320, 0, 0, 0,
	0, 448, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 285, 182, 199, 0, 0, 330, 370, 376, 0,
	0, 0, 223, 0, 374, 344, 432, 207, 250, 367,
	349, 372, 0, 0, 373, 294, 420, 362, 430, 449,
	450, 230, 324, 439, 409, 445, 461, 200, 227, 338,
	402, 435, 393, 317, 416, 417, 284, 392, 258, 185,
	292, 455, 198, 382, 215, 205, 191, 404, 428, 212,
	385, 0, 0, 463, 193, 426, 401, 313, 281, 282,
	192, 0, 366, 235, 256, 225, 333, 423, 424, 224,
	464, 202, 444, 195, 0, 443, 326, 419, 427, 314,
	304, 194, 425, 312, 303, 287, 246, 267, 360, 297,
	361, 268, 322, 321, 323, 188, 436, 0, 189, 0,
	398, 437, 465, 208, 209, 210, 0, 245, 249, 255,
	257, 263, 264, 271, 290, 337, 359, 357, 363, 0,
	414, 431, 440, 447, 453, 454, 456, 457, 458, 459,
	460, 325, 270, 394, 286, 295, 0, 0, 343, 375,
	213, 434, 395, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 484, 305, 0, 181, 196, 291, 0, 364, 253,
	462, 442, 438, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	197, 206, 216, 228, 243, 251, 261, 266, 269, 274,
	275, 278, 283, 301, 307, 308, 309, 310, 327, 328,
	329, 332, 335, 336, 339, 341, 342, 345, 352, 353,
	354, 355, 356, 358, 365, 369, 377, 378, 379, 380,
	381, 383, 384, 388, 389, 390, 391, 399, 403, 421,
	422, 433, 446, 451, 262, 429, 452, 0, 300, 0,
	0, 302, 247, 265, 276, 0, 441, 400, 201, 371,
	254, 190, 219, 204, 226, 241, 244, 280, 311, 318,
	347, 351, 259, 238, 217, 368, 214, 386, 406, 407,
	408, 410, 315, 233, 350, 411, 0, 298, 412, 413,
	272, 0, 0, 0, 0, 0, 0, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 0,
	0, 289, 234, 0, 0, 348, 0, 187, 0, 387,
	222, 299, 296, 418, 248, 240, 236, 221, 273, 306,
	346, 405, 340, 0, 293, 0, 0, 396, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 220, 186, 331, 397, 252,
	0, 0, 0, 0, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 211, 0, 218,
	0, 0, 0, 0, 0, 232, 277, 239, 231, 415,
	0, 0, 0, 0, 203, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 320,
	0, 0, 0, 0, 448, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 285, 182, 199, 0, 0, 330,
	370, 376, 0, 0, 0, 223, 0, 374, 344, 432,
	207, 250, 367, 349, 372, 0, 0, 373, 294, 420,
	362, 430, 449, 450, 230, 324, 439, 409, 445, 461,
	200, 227, 338, 402, 435, 393, 317, 416, 417, 284,
	392, 258, 185, 292, 455, 198, 382, 215, 205, 191,
	404, 428, 212, 385, 0, 0, 463, 193, 426, 401,
	313, 281, 282, 192, 0, 366, 235, 256, 225, 333,
	423, 424, 224, 464, 202, 444, 195, 0, 443, 326,
	419, 427, 314, 304, 194, 425, 312, 303, 287, 246,
	267, 360, 297, 361, 268, 322, 321, 323, 188, 436,
	0, 189, 0, 398, 437, 465, 208, 209, 210, 0,
	245, 249, 255, 257, 263, 264, 271, 290, 337, 359,
	357, 363, 0, 414, 431, 440, 447, 453, 454, 456,
	457, 458, 459, 460, 325, 270, 394, 286, 295, 0,
	0, 343, 375, 213, 434, 395, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 484, 305, 0, 181, 196, 291,
	0, 364, 253, 462, 442, 438, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	316, 0, 0, 0, 0, 0, 0, 682, 0, 0,
	0, 183, 184, 197, 206, 216, 228, 243, 251, 261,
	266, 269, 274, 275, 278, 283, 301, 307, 308, 309,
	310, 327, 328, 329, 332, 335, 336, 339, 341, 342,
	345, 352, 353, 354, 355, 356, 358, 365, 369, 377,
	378, 379, 380, 381, 383, 384, 388, 389, 390, 391,
	399, 403, 421, 422, 433, 446, 451, 262, 429, 452,
	0, 300, 0, 0, 302, 247, 265, 276, 0, 441,
	400, 201, 371, 254, 190, 219, 204, 226, 241, 244,
	280, 311, 318, 347, 351, 259, 238, 217, 368, 214,
	386, 406, 407, 408, 410, 315, 233, 350, 411, 0,
	298, 412, 413, 272, 0, 0, 0, 0, 0, 0,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 0, 0, 289, 234, 0, 0, 348, 0,
	187, 0, 387, 222, 299, 296, 418, 248, 240, 236,
	221, 273, 306, 346, 405, 340, 0, 293, 0, 0,
	396, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 220, 186,
	331, 397, 252, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	211, 0, 218, 0, 0, 0, 0, 0, 232, 277,
	239, 231, 415, 0, 0, 0, 0, 203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 540, 0,
	260, 0, 320, 0, 0, 0, 0, 448, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 285, 182, 199,
	0, 0, 330, 370, 376, 0, 0, 0, 223, 0,
	374, 344, 432, 207, 250, 367, 349, 372, 0, 0,
	373, 294, 420, 362, 430, 449, 450, 230, 324, 439,
	409, 445, 461, 200, 227, 338, 402, 435, 393, 317,
	416, 417, 284, 392, 258, 185, 292, 455, 198, 382,
	215, 205, 191, 404, 428, 212, 385, 0, 0, 463,
	193, 426, 401, 313, 281, 282, 192, 0, 366, 235,
	256, 225, 333, 423, 424, 224, 464, 202, 444, 195,
	0, 443, 326, 419, 427, 314, 304, 194, 425, 312,
	303, 287, 246, 267, 360, 297, 361, 268, 322, 321,
	323, 188, 436, 0, 189, 0, 398, 437, 465, 208,
	209, 210, 0, 245, 249, 255, 257, 263, 264, 271,
	290, 337, 359, 357, 363, 0, 414, 431, 440, 447,
	453, 454, 456, 457, 458, 459, 460, 325, 270, 394,
	286, 295, 0, 0, 343, 375, 213, 434, 395, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 484, 305, 0,
	181, 196, 291, 0, 364, 253, 462, 442, 438, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 197, 206, 216, 228,
	243, 251, 261, 266, 269, 274, 275, 278, 283, 301,
	307, 308, 309, 310, 327, 328, 329, 332, 335, 336,
	339, 341, 342, 345, 352, 353, 354, 355, 356, 358,
	365, 369, 377, 378, 379, 380, 381, 383, 384, 388,
	389, 390, 391, 399, 403, 421, 422, 433, 446, 451,
	539, 429, 452, 0, 300, 0, 0, 302, 247, 265,
	276, 0, 441, 400, 201, 371, 254, 190, 219, 204,
	226, 241, 244, 280, 311, 318, 347, 351, 259, 238,
	217, 368, 214, 386, 406, 407, 408, 410, 315, 233,
	350, 411, 0, 298, 412, 413, 272, 0, 0, 0,
	0, 0, 0, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 0, 0, 289, 234, 0,
	0, 348, 0, 187, 0, 387, 222, 299, 296, 418,
	248, 240, 236, 221, 273, 306, 346, 405, 340, 0,
	293, 0, 0, 396, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 220, 186, 331, 397, 252, 0, 0, 0, 0,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 211, 0, 218, 0, 0, 0, 0,
	0, 232, 277, 239, 231, 415, 0, 0, 0, 0,
	203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 320, 0, 0, 487, 0,
	448, 0, 0, 0, 0, 0, 0, 0, 288, 0,
	285, 182, 199, 0, 0, 330, 370, 376, 0, 0,
	0, 223, 0, 374, 344, 432, 207, 250, 367, 349,
	372, 0, 0, 373, 294, 420, 362, 430, 449, 450,
	230, 324, 439, 409, 445, 461, 200, 227, 338, 402,
	435, 393, 317, 416, 417, 284, 392, 258, 185, 292,
	455, 198, 382, 215, 205, 191, 404, 428, 212, 385,
	0, 0, 463, 193, 426, 401, 313, 281, 282, 192,
	0, 366, 235, 256, 225, 333, 423, 424, 224, 464,
	202, 444, 195, 0, 443, 326, 419, 427, 314, 304,
	194, 425, 312, 303, 287, 246, 267, 360, 297, 361,
	268, 322, 321, 323, 188, 436, 0, 189, 0, 398,
	437, 465, 208, 209, 210, 0, 245, 249, 255, 257,
	263, 264, 271, 290, 337, 359, 357, 363, 0, 414,
	431, 440, 447, 453, 454, 456, 457, 458, 459, 460,
	325, 270, 394, 286, 295, 0, 0, 343, 375, 213,
	434, 395, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	484, 305, 0, 181, 196, 291, 0, 364, 253, 462,
	442, 438, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 197,
	206, 216, 228, 243, 251, 261, 266, 269, 274, 275,
	278, 283, 301, 307, 308, 309, 310, 327, 328, 329,
	332, 335, 336, 339, 341, 342, 345, 352, 353, 354,
	355, 356, 358, 365, 369, 377, 378, 379, 380, 381,
	383, 384, 388, 389, 390, 391, 399, 403, 421, 422,
	433, 446, 451, 262, 429, 452, 0, 300, 0, 0,
	302, 247, 265, 276, 0, 441, 400, 201, 371, 254,
	190, 219, 204, 226, 241, 244, 280, 311, 318, 347,
	351, 259, 238, 217, 368, 214, 386, 406, 407, 408,
	410, 315, 233, 350, 411, 0, 298, 412, 413, 272,
	0, 0, 0, 0, 0, 0, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 0, 0,
	289, 234, 0, 0, 348, 0, 187, 0, 387, 222,
	299, 296, 418, 248, 240, 236, 221, 273, 306, 346,
	405, 340, 0, 293, 0, 0, 396, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 220, 186, 331, 397, 252, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 0, 218, 0,
	0, 0, 0, 0, 232, 277, 239, 231, 415, 0,
	0, 0, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 320, 0,
	0, 0, 0, 448, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 285, 182, 199, 0, 0, 330, 370,
	376, 0, 0, 0, 223, 0, 374, 344, 432, 207,
	250, 367, 349, 372, 0, 0, 373, 294, 420, 362,
	430, 449, 450, 230, 324, 439, 409, 445, 461, 200,
	227, 338, 402, 435, 393, 317, 416, 417, 284, 392,
	258, 185, 292, 455, 198, 382, 215, 205, 191, 404,
	428, 212, 385, 0, 0, 463, 193, 426, 401, 313,
	281, 282, 192, 0, 366, 235, 256, 225, 333, 423,
	424, 224, 464, 202, 444, 195, 0, 443, 326, 419,
	427, 314, 304, 194, 425, 312, 303, 287, 246, 267,
	360, 297, 361, 268, 322, 321, 323, 188, 436, 0,
	189, 0, 398, 437, 465, 208, 209, 210, 0, 245,
	249, 255, 257, 263, 264, 271, 290, 337, 359, 357,
	363, 0, 414, 431, 440, 447, 453, 454, 456, 457,
	458, 459, 460, 325, 270, 394, 286, 295, 0, 0,
	343, 375, 213, 434, 395, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 484, 305, 0, 181, 196, 291, 0,
	364, 253, 462, 442, 438, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 197, 206, 216, 228, 243, 251, 261, 266,
	269, 274, 275, 278, 283, 301, 307, 308, 309, 310,
	327, 328, 329, 332, 335, 336, 339, 341, 342, 345,
	352, 353, 354, 355, 356, 358, 365, 369, 377, 378,
	379, 380, 381, 383, 384, 388, 389, 390, 391, 399,
	403, 421, 422, 433, 446, 451, 262, 429, 452, 0,
	300, 0, 0, 302, 247, 265, 276, 0, 441, 400,
	201, 371, 254, 190, 219, 204, 226, 241, 244, 280,
	311, 318, 347, 351, 259, 238, 217, 368, 214, 386,
	406, 407, 408, 410, 315, 233, 350, 0, 0, 298,
	412, 413, 272,
}

var yyPact = [...]int{
	3897, -1000, -388, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1688, 1758, -1000, -1000, -1000, -1000, 1806,
	-1000, 624, 1474, -1000, 1701, 4337, -1000, 33537, 425, -1000,
	32994, 416, 115, 33537, -1000, 121, -1000, 107, 33537, 117,
	32451, -1000, -1000, -304, 13986, 1643, 19, 14, 33537, -1000,
	1795, 1504, -1000, 283, -1000, -1000, -1000, -1000, -1000, -1000,
	31908, -1000, -1000, -1000, 1710, 1685, 1811, 559, 1648, -1000,
	1746, 1504, -1000, 13986, 1781, 1736, 13443, -1000, 13443, 311,
	-1000, -1000, 10178, -1000, -1000, 18332, 33537, 33537, 279, -1000,
	1701, -1000, -1000, 289, -1000, 257, 1428, -1000, 1427, -1000,
	456, 405, 267, 359, 336, 265, 263, 262, 260, 259,
	258, 256, 252, 271, -1000, 605, 605, -148, -187, 2260,
	313, 313, 313, 369, 1671, 1669, -1000, 530, -1000, 605,
	605, 282, 605, 605, 605, 605, 185, 184, 605, 605,
	605, 605, 605, 605, 605, 605, 605, 605, 605, 605,
	605, 605, 605, 276, 1701, 176, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 33537, 133, 33537, -1000, 482,
	33537, 737, 737, 15, 737, 737, 737, 737, 135, 503,
	8, -1000, 130, 173, 102, 177, 688, 106, 128, -1000,
	-1000, 170, 688, 1095, 569, 126, -1000, 737, 7974, 7974,
	7974, -1000, 1694, -1000, -1000, -1000, -1000, -1000, -1000, 988,
	-1000, 365, -1000, -1000, -1000, -1000, 33537, 31365, 281, 622,
	-1000, -1000, -1000, 25, -1000, -1000, 1228, 858, 13986, 990,
	-1000, 1419, 531, -1000, -1000, -1000, -1000, -1000, 458, 14529,
	14529, 14529, 14529, -1000, -1000, 1433, 1433, 1433, 1433, 1433,
	14529, 1433, 14529, 1433, 1433, 1433, 1433, 13986, 1433, 1433,
	1433, -1000, 1433, 1433, 1433, 1433, 1433, 1433, 1433, 1433,
	476, 1433, 1433, 1433, 1433, 1433, -1000, -1000, -1000, -1000,
	1433, 1433, 1433, 1433, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 16158, -1000, 11814, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 33537, -1000, 1433, 137, 1746,
	1504, -1000, 1795, 1768, 283, -1000, 1619, 1308, 1314, 1051,
	1504, 1405, 33537, -1000, 1436, -1000, -1000, -1000, 1599, 1019,
	1093, -1000, -1000, -1000, -1000, 985, 13986, -1000, -1000, 1803,
	-1000, 15615, 475, 760, 1802, 30822, -1000, 311, 311, 1422,
	9627, -64, -1000, -1000, -1000, 621, 21047, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1694, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1353, 33537, -1000, -1000, 3955, 1154, -1000,
	1469, -1000, 1351, -1000, 1446, 1498, 410, 1154, 387, 386,
	380, -1000, -101, -1000, -1000, -1000, -1000, -1000, 605, 605,
	-1000, 269, 1780, 4337, 4707, -1000, -1000, -1000, 30279, 1466,
	1154, -1000, 1465, -1000, 700, 418, 493, 493, 1154, -1000,
	-1000, 33537, 1154, 695, 694, 33537, 33537, -1000, 29736, -1000,
	29193, 28650, 960, 33537, 28107, 27564, 27021, 26478, 25935, -1000,
	1555, -1000, 1475, -1000, -1000, -1000, 33537, 33537, 33537, 291,
	-1000, -1000, 33537, 1154, -1000, -1000, 952, 949, 605, 605,
	947, 1088, 1087, 1085, 605, 605, 946, 1080, 23219, 224,
	940, 916, 910, 939, 1055, 175, 894, 846, 909, 33537,
	1464, 33537, -1000, 159, 566, 322, 612, 1701, 1641, 1414,
	364, 399, 1154, 331, 331, -1000, 8525, -1000, -1000, 1053,
	13986, -1000, 718, 688, 688, -1000, -1000, -1000, -1000, -1000,
	-1000, 737, 33537, 718, -1000, -1000, -1000, 688, 737, 33537,
	737, 737, 737, 737, 688, 688, 688, 737, 33537, 33537,
	33537, 33537, 33537, 33537, 33537, 33537, 33537, 7974, 7974, 7974,
	569, 737, -309, -1000, 1052, -1000, 1534, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 111, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -102, 1413, 25392, -1000,
	-311, -316, -317, -320, -1000, -1000, -1000, -322, -323, -1000,
	-1000, -1000, 13986, 13986, 13986, 13986, -1000, 827, 14529, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 863, 696, 14529, 14529,
	14529, 14529, 14529, 14529, 14529, 14529, 14529, 14529, 14529, 14529,
	14529, 14529, 14529, 690, 1047, 1030, 531, 531, 531, 531,
	-1000, 13443, 13986, 13986, 13986, 531, -1000, 1154, 24849, 13443,
	13443, 13986, 1678, 647, 858, 33537, -1000, 1051, -1000, -1000,
	-1000, 872, -1000, 33537, 33537, 491, 13986, 10727, 8525, 13443,
	13443, 13443, 13443, 13443, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 474, 1309, 1234, 1346, -1000,
	1407, -1000, -181, 17789, 13986, 1027, -1000, -1000, -1000, 1746,
	-1000, 1746, 1309, 1612, 1602, 13443, -1000, -1000, 1612, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1237, -1000, 33537,
	1405, 1733, 33537, 1597, 1025, 266, -1000, 13986, 13986, 1404,
	-1000, 877, 33537, -1000, -1000, 24306, -1000, -1000, 7423, -1000,
	33537, 204, 33537, -1000, 22676, 23763, 9076, -64, -1000, 9076,
	1369, -1000, -17, -47, 11270, 534, -1000, -1000, -1000, 2260,
	15072, 1181, 534, 50, -1000, -1000, -1000, 1446, -1000, 1446,
	1446, 1446, 1446, 266, 266, 266, 266, -1000, -1000, -1000,
	-1000, -1000, 1463, 1461, -1000, 1446, 1446, 1446, 1446, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1459, 1459, 1459, 1447,
	1447, 308, -1000, 13986, 211, 33537, 1707, 906, 159, 345,
	1511, 1154, 1154, 1154, 345, -1000, 1173, 1122, -1000, -379,
	1403, -1000, -1000, 1779, -1000, -1000, 513, 730, 716, 422,
	33537, 147, 200, -1000, 300, -1000, 33537, 1154, 691, 493,
	1154, -1000, 1154, -1000, -1000, -1000, -1000, -1000, 1154, 1374,
	-1000, 1380, 850, 715, 834, 712, 1374, -1000, -1000, -125,
	1374, -1000, 1374, -1000, 1374, -1000, 1374, -1000, 1374, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 606, 33537, 147,
	690, -1000, 362, -1000, -1000, 690, 690, -1000, -1000, -1000,
	-1000, 1016, 1012, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-366, 33537, -1000, 161, 608, 189, 244, 217, 33537, 138,
	1738, 157, 183, 33537, 33537, 331, 1533, 33537, 1716, 33537,
	-1000, -1000, -1000, -1000, 858, 33537, -1000, -1000, 737, 737,
	-1000, -1000, 33537, 737, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 737, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	33537, 33537, -1000, -1000, -1000, -1000, -1000, 49, -19, 273,
	-1000, -1000, -1000, -1000, -1000, 1742, -1000, 858, 697, 632,
	-1000, -1000, -1000, 887, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 863, 14529, 14529, 14529, 1129, 370, 642, 1327, 1238,
	865, 865, 701, 701, 538, 538, 538, 538, 538, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1316, -1000, 1165, 784,
	1018, 1051, -1000, 1316, 1316, 830, 13443, -1000, -1000, 631,
	-1000, 13986, 1051, -1000, -1000, 1051, 1373, 1372, 1801, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	843, 1051, 13443, 13443, 1371, 1433, 472, -1000, 1316, 1051,
	1051, 1316, 1316, 8525, 1051, -1000, 33537, -1000, -293, -1000,
	-55, 505, 1433, -1000, 23219, 1051, 1228, -1000, -1000, -1000,
	-1000, -1000, 20504, 1222, 1612, -1000, -1000, 1433, 1343, -1000,
	-1000, 266, 39, 19961, -1000, -1000, 858, 858, 13986, -1000,
	-1000, -1000, -1000, -1000, -1000, 470, 1792, 317, 1433, -1000,
	1409, 1530, -1000, -1000, -1000, 1723, 17246, 33537, 1359, 1357,
	-1000, 469, -1000, 1369, -64, -50, -1000, -1000, -1000, -1000,
	858, -1000, 1108, 247, 272, -1000, 302, -1000, -1000, -1000,
	-1000, 1651, 41, -1000, -1000, -1000, 266, 266, -1000, -1000,
	-1000, -1000, -1000, -1000, 1011, 1011, -1000, -1000, -1000, -1000,
	-1000, 901, -1000, -1000, -1000, 896, -1000, -1000, 1082, 1543,
	211, -1000, -1000, 605, 994, 1660, 33537, -1000, -1000, 1168,
	161, 33537, 657, 1531, -1000, 1511, 1511, 1511, 33537, -1000,
	-1000, -1000, -1000, -373, 51, 292, -1000, -1000, -1000, 4682,
	33537, 1328, -1000, 145, -1000, 1161, 1611, 33537, -1000, 1321,
	1451, 1154, 1154, -1000, -1000, -1000, 33537, 1433, -1000, -1000,
	-1000, -1000, 398, 1700, 1680, 147, 145, 534, 1154, -1000,
	-1000, -1000, -1000, -1000, -369, 1319, 360, 139, 225, 33537,
	33537, 33537, 33537, 33537, 449, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 180, 355, -1000, 33537, 33537, 440, -1000,
	-1000, -1000, 688, -1000, -1000, 688, -1000, -1000, -1000, -1000,
	-1000, 1682, 33537, -39, -344, -1000, -334, -1000, -1000, -1000,
	-1000, 942, 366, 642, 14529, 14529, 13443, -116, 1203, 1203,
	690, -1000, -1000, -1000, -1000, 13986, 13986, 1408, 627, -1000,
	13986, 650, -1000, -1000, 13986, 13986, 13986, 1051, 233, -1000,
	1316, 1316, 13443, 8525, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 505, -1000, 493, 493, 493, 33537,
	-1000, -1000, 1749, -1000, 1609, 1608, 1800, 1792, -1000, 22676,
	1612, -1000, -1000, 33537, -286, -1000, 1635, 1615, -1000, -1000,
	-1000, -1000, 6872, 1746, 13986, 1529, 33537, 1433, -1000, 16702,
	33537, 33537, 22676, 22676, 22676, 22676, 22676, -1000, 1582, 1580,
	-1000, 1560, 1553, 1571, 33537, -1000, 1294, 1051, 1768, 17246,
	19418, 1267, 22676, -1000, -1000, 22676, 33537, 6321, -1000, -1000,
	-52, -25, -1000, -1000, -1000, -1000, 2260, -1000, -1000, 838,
	1721, 1647, -1000, -1000, -1000, -1000, 1289, -1000, 1280, 1368,
	1278, 151, -1000, 1497, 1679, 605, 605, -1000, 879, -1000,
	1154, -1000, -1000, 339, -1000, 1714, 33537, 1528, 1525, 1518,
	-1000, -378, 875, 1450, 1495, 13986, 1449, 1778, 1292, 33537,
	-1000, -1000, 33537, -1000, -1000, 304, -1000, 211, 33537, -1000,
	-1000, -1000, 200, 33537, -1000, 4978, 145, -1000, -1000, -1000,
	-1000, -1000, -1000, 33537, 158, -1000, 1448, 979, -1000, -1000,
	1506, -1000, -1000, -1000, -1000, 160, 188, -1000, 33537, 434,
	1543, 33537, -1000, -1000, -1000, 737, 737, -1000, -1000, 1676,
	-1000, 1154, 14529, 14529, -1000, 531, -1000, 1433, 1051, 1446,
	1446, -1000, 1446, 1447, -1000, 1446, 98, 1446, 94, 1446,
	-1000, -1000, 1051, 1051, 788, 813, -109, -1000, 858, 13986,
	1105, 1046, 1018, -1000, 1445, 1444, -1000, -1000, 1051, -1000,
	-1000, 1740, 1740, 1740, 1269, 33537, -1000, -1000, -1000, -1000,
	1792, 1788, 1367, -1000, -1000, 39, 338, -1000, 1623, 1615,
	-1000, 1774, 1625, 1772, -1000, -1000, -1000, 858, -1000, 1703,
	1412, -1000, 601, 1199, -1000, -1000, 12900, 1271, 1607, 463,
	1269, 1406, 1530, 1505, 1516, 1545, -1000, -1000, -1000, -1000,
	1578, -1000, 1554, -1000, -1000, 1436, -1000, -1000, 1234, 204,
	22676, 1326, 1326, -1000, 447, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 752, 5220, 1810, -1000, 992, -1000, 1026, -1000,
	679, 666, -1000, 33537, 1442, -1000, 266, 991, 266, 866,
	-1000, 848, -1000, -1000, -229, -1000, -1000, 1456, 1549, -1000,
	-1000, 33537, -1000, -1000, 33537, 33537, 33537, 1441, 1771, -1000,
	13986, 1439, 592, 1077, 33537, 33537, -1000, -1000, 193, 1433,
	-1000, 1262, 1231, -1000, -137, -1000, 13986, -1000, -1000, -1000,
	913, 913, -1000, 1436, -1000, -1000, -1000, 1145, -1000, -1000,
	-127, 33537, 33537, 33537, 33537, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 531, 14529, -1000, -1000, 266, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 13986, -1000,
	13986, -1000, 1746, 983, 858, 13986, 13986, -1000, 828, 823,
	-1000, 1433, 1637, 1433, 1433, 19418, -1000, 1788, 1784, 1770,
	1616, 1621, 1621, 1623, -1000, 1765, 1762, -1000, 982, 1761,
	981, 664, -1000, 33537, 13986, 1433, -1000, 310, 33537, 1433,
	33537, -1000, 1750, -1000, -1000, 13986, 1438, -1000, 13986, -1000,
	-1000, -1000, -1000, -1000, 1792, 1326, -1000, -1000, 548, -1000,
	13986, -1000, -1000, -1000, 207, -1000, -1000, -1000, -1000, -1000,
	1437, 13986, -1000, -1000, -1000, 1139, 1136, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1436, -1000, -1000, -1000, -1000,
	200, -376, 1059, 33537, 808, -1000, 1220, 1292, 368, -1000,
	13986, 285, -1000, 200, -1000, -191, -193, 1018, -1000, -1000,
	1718, -1000, -1000, 8525, -1000, -1000, 1435, 1507, -1000, 192,
	-1000, 1018, 1018, 1051, -1000, 1018, 1018, 1134, 1102, 18875,
	-1000, 1755, 1748, 22133, 22133, 505, 1784, -1000, 13986, 13986,
	1618, 770, -1000, -1000, -1000, -1000, 978, 974, -1000, 889,
	-1000, 1809, -1000, 858, -1000, 1433, -1000, 445, 1199, -1000,
	1746, 858, 33537, 858, 1750, -1000, 1018, -1000, 1433, 33537,
	976, -1000, -1000, 1711, 1215, 48, -1000, 1211, -1000, -1000,
	-1000, -1000, 12357, -1000, -1000, -1000, -1000, -1000, -1000, 283,
	1260, -1000, 578, 33537, 33537, 1051, 229, -131, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1206, -1000, -1000, -1000, -1000,
	-1000, 1206, 1206, -1000, -1000, 858, 1228, -1000, 755, -1000,
	-1000, -1000, -1000, -1000, 33537, 1199, 33537, -1000, 1184, 1746,
	-1000, 1171, -1000, 283, -1000, 1432, 1495, -1000, 1051, -126,
	8525, 5770, 1153, -1000, -1000, 1596, -123, -144, 21590, -1000,
	-1000, -1000, -1000, -1000, 1123, -1000, -1000, -1000, 1515, 722,
	-126, 13986, 1430, -1000, -1000, -41, -1000, -1000, -1000, -1000,
	-1000, 1506, -1000, 1587, -1000, -1000, -1000, 1514, -1000, 1796,
	-1000, -1000, -1000, 742, 772, -1000, -1000, -1000, -1000, 862,
	33537, 307, -1000, -1000, -127, -128, -1000, 1808, 529, 529,
	-1000, -1000, -384, 1107, 164, -1000, -132, -1000, -1000, -1000,
	301, 845, -1000, -1000, 771, -384, -1000, -179, -1000, -1000,
	-1000, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2091, 2090, 16, 1, 2089, 18, 76, 162, 12,
	177, 82, 2088, 2087, 2086, 2085, 188, 187, 186, 2084,
	2083, 2081, 2080, 2079, 2078, 2077, 2076, 2075, 2074, 183,
	142, 149, 2073, 2072, 2070, 94, 146, 71, 73, 157,
	2069, 2068, 62, 2067, 2066, 2065, 155, 154, 656, 2064,
	153, 109, 27, 2059, 2058, 2057, 2056, 2055, 2052, 2051,
	2050, 2049, 2048, 2047, 2045, 2044, 2043, 229, 2042, 2041,
	6, 2040, 64, 2039, 2038, 2037, 111, 2036, 2035, 2034,
	2032, 2031, 2030, 123, 2029, 2028, 2027, 2024, 151, 2023,
	2022, 127, 91, 98, 2021, 2019, 83, 159, 2018, 99,
	2017, 2016, 2015, 133, 2012, 1558, 2011, 50, 43, 2010,
	58, 56, 39, 49, 2008, 2007, 2003, 47, 60, 1998,
	85, 42, 1994, 84, 79, 1993, 44, 1988, 1987, 115,
	1986, 1985, 1984, 77, 1983, 1982, 3594, 1981, 74, 117,
	86, 55, 1980, 22, 31, 1978, 1977, 1975, 1970, 1969,
	28, 1965, 1963, 1962, 122, 15, 1958, 13, 34, 32,
	114, 1951, 37, 66, 1949, 120, 1948, 1947, 40, 20,
	21, 1945, 24, 116, 136, 14, 78, 132, 1944, 1943,
	36, 52, 1942, 1941, 1940, 1939, 1936, 1933, 46, 1930,
	33, 1928, 185, 1924, 17, 30, 25, 41, 128, 45,
	11, 1923, 160, 1922, 35, 158, 101, 139, 1920, 1919,
	1918, 148, 227, 1917, 1916, 65, 145, 125, 130, 1915,
	244, 1913, 1912, 75, 1289, 1639, 9, 143, 1911, 1910,
	2544, 119, 121, 38, 1907, 228, 1906, 1905, 1903, 163,
	144, 93, 870, 89, 1901, 1900, 1899, 1887, 1886, 1884,
	1881, 1880, 225, 164, 63, 97, 138, 57, 1869, 1868,
	1867, 104, 70, 1866, 141, 137, 102, 88, 1865, 161,
	126, 124, 1864, 87, 1862, 1861, 1860, 1859, 72, 1858,
	1857, 1856, 1853, 135, 131, 100, 67, 1851, 68, 96,
	134, 129, 29, 1849, 23, 1848, 1844, 152, 7, 1843,
	3, 0, 1842, 4, 147, 232, 140, 1841, 1839, 2,
	1838, 5, 1837, 1836, 118, 1834, 1831, 1830, 10, 26,
	8, 1828, 1825, 1823, 2735, 2325, 105, 1822, 165,
}

//line sql.y:6161
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 322, 323, 323, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 301, 301, 301, 304, 304,
	27, 62, 29, 29, 28, 28, 31, 31, 30, 6,
	6, 6, 7, 7, 7, 7, 7, 7, 7, 7,
	8, 8, 8, 8, 8, 9, 9, 9, 9, 11,
	11, 11, 11, 11, 14, 15, 10, 10, 16, 16,
	74, 74, 17, 18, 18, 18, 18, 326, 326, 131,
	131, 129, 129, 130, 130, 197, 197, 19, 20, 20,
	207, 207, 206, 206, 206, 208, 208, 208, 208, 242,
	242, 21, 21, 21, 21, 21, 89, 89, 303, 303,
	302, 300, 300, 299, 299, 298, 33, 34, 43, 43,
	43, 43, 44, 45, 305, 305, 274, 49, 49, 48,
	48, 48, 48, 50, 50, 47, 47, 46, 46, 276,
	276, 263, 263, 275, 275, 275, 275, 275, 275, 275,
	262, 262, 100, 100, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 317, 317, 179, 179, 179,
	179, 179, 179, 109, 109, 117, 117, 117, 117, 107,
	107, 108, 106, 106, 106, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 116, 116,
	113, 113, 113, 114, 114, 114, 318, 318, 318, 318,
	245, 245, 245, 245, 248, 248, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 247, 247, 247, 247, 247,
	249, 249, 249, 249, 249, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	251, 251, 251, 251, 251, 251, 251, 251, 261, 261,
	252, 252, 256, 256, 257, 257, 257, 258, 258, 258,
	259, 259, 254, 254, 254, 254, 254, 254, 255, 255,
	255, 264, 288, 288, 287, 287, 285, 285, 285, 285,
	273, 273, 282, 282, 282, 282, 282, 272, 272, 268,
	268, 268, 269, 269, 270, 270, 267, 267, 271, 271,
	284, 284, 283, 265, 265, 266, 266, 290, 319, 319,
	319, 319, 320, 320, 291, 310, 311, 309, 309, 309,
	309, 309, 72, 72, 72, 219, 219, 219, 280, 280,
	279, 279, 279, 281, 281, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 214, 214, 214, 308, 308, 308, 308,
	308, 308, 307, 307, 307, 277, 277, 277, 306, 306,
	51, 51, 163, 163, 40, 40, 40, 40, 40, 40,
	39, 39, 39, 35, 35, 35, 35, 35, 35, 35,
	35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
	35, 35, 35, 35, 35, 35, 41, 41, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 76, 76, 77,
	77, 77, 77, 78, 78, 78, 293, 293, 52, 52,
	3, 3, 1, 1, 2, 2, 4, 4, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	260, 260, 260, 292, 292, 294, 296, 296, 296, 296,
	295, 85, 85, 23, 32, 32, 24, 24, 24, 24,
	25, 25, 53, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 312, 312, 213, 213, 221, 221, 212, 212, 235,
	235, 235, 215, 215, 215, 216, 216, 316, 316, 316,
	55, 55, 55, 57, 57, 58, 59, 59, 237, 237,
	238, 238, 60, 61, 73, 73, 73, 73, 73, 73,
	75, 75, 75, 13, 13, 13, 13, 69, 69, 69,
	12, 12, 56, 56, 63, 313, 313, 314, 315, 315,
	315, 315, 64, 66, 26, 26, 26, 26, 26, 26,
	95, 95, 83, 83, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 90, 90, 90, 84, 84, 327,
	67, 68, 68, 88, 88, 88, 81, 81, 81, 87,
	87, 87, 92, 92, 94, 94, 94, 94, 94, 96,
	96, 96, 96, 96, 96, 96, 91, 91, 93, 93,
	93, 93, 228, 228, 228, 227, 227, 120, 120, 122,
	121, 121, 123, 123, 124, 124, 124, 161, 139, 139,
	195, 195, 194, 194, 196, 196, 196, 196, 198, 198,
	125, 125, 125, 125, 126, 126, 127, 127, 128, 128,
	236, 236, 233, 233, 233, 232, 232, 132, 132, 132,
	134, 133, 133, 133, 133, 135, 135, 137, 137, 136,
	136, 138, 143, 143, 142, 142, 140, 140, 140, 140,
	141, 141, 141, 141, 144, 144, 105, 105, 105, 105,
	105, 105, 115, 115, 115, 115, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 210, 210, 145, 145, 153, 153,
	153, 153, 146, 146, 146, 146, 146, 146, 146, 154,
	154, 154, 160, 155, 155, 151, 151, 151, 151, 149,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 328,
	328, 253, 253, 253, 152, 152, 152, 152, 152, 86,
	86, 86, 86, 86, 241, 241, 241, 244, 244, 244,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 166, 166, 82, 82, 164,
	164, 165, 167, 167, 162, 162, 162, 148, 148, 148,
	168, 168, 169, 169, 170, 170, 172, 171, 171, 173,
	174, 174, 174, 175, 175, 176, 176, 176, 42, 42,
	42, 42, 42, 37, 37, 37, 37, 38, 38, 38,
	97, 97, 97, 97, 99, 99, 98, 98, 70, 70,
	71, 71, 71, 103, 103, 104, 104, 104, 101, 101,
	102, 102, 192, 192, 177, 177, 177, 184, 184, 184,
	180, 180, 182, 182, 182, 183, 183, 183, 181, 189,
	189, 191, 191, 190, 190, 186, 186, 187, 187, 188,
	188, 188, 185, 185, 147, 147, 147, 147, 147, 193,
	193, 193, 193, 199, 199, 157, 157, 159, 159, 158,
	119, 200, 200, 204, 201, 201, 205, 205, 205, 205,
	205, 202, 202, 203, 203, 229, 229, 229, 209, 209,
	220, 220, 217, 217, 218, 218, 211, 211, 222, 222,
	222, 65, 156, 156, 289, 289, 286, 225, 225, 226,
	226, 230, 230, 234, 234, 231, 231, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 324, 325, 239, 240, 240, 240,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	2, 3, 2, 3, 0, 1, 3, 1, 4, 3,
	3, 4, 3, 2, 3, 4, 3, 4, 2, 7,
	1, 3, 3, 3, 3, 1, 2, 1, 1, 3,
	2, 3, 3, 2, 5, 7, 9, 8, 7, 8,
	1, 1, 10, 11, 9, 8, 8, 1, 1, 1,
	3, 1, 3, 1, 3, 0, 4, 3, 5, 4,
	1, 3, 3, 2, 2, 2, 2, 2, 1, 1,
	1, 2, 2, 6, 12, 2, 0, 2, 0, 2,
	1, 0, 2, 1, 3, 3, 6, 4, 7, 8,
	8, 8, 6, 3, 1, 1, 5, 0, 1, 1,
	1, 2, 2, 0, 1, 4, 4, 4, 4, 2,
	4, 1, 3, 1, 1, 3, 4, 3, 3, 3,
	5, 10, 0, 2, 0, 2, 3, 5, 3, 4,
	2, 3, 2, 3, 3, 1, 1, 0, 2, 2,
	3, 3, 2, 1, 1, 2, 2, 2, 2, 1,
	1, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 1, 2, 1,
	3, 1, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 2, 2, 2, 2, 3, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 5, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 5, 0, 3, 5, 0, 1, 1,
	0, 1, 0, 2, 2, 2, 1, 1, 0, 2,
	2, 5, 0, 1, 1, 2, 1, 3, 2, 3,
	0, 1, 4, 3, 3, 4, 2, 0, 2, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	1, 3, 3, 3, 1, 3, 1, 7, 5, 6,
	6, 7, 0, 1, 5, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 1, 0, 1, 2, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 4, 5, 0, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 1, 0, 2, 0, 1, 5, 1, 3, 7,
	1, 3, 3, 1, 2, 2, 2, 5, 5, 5,
	6, 8, 6, 5, 5, 2, 2, 2, 2, 3,
	3, 3, 4, 1, 3, 5, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 3, 4, 4,
	2, 11, 3, 6, 8, 6, 6, 6, 13, 8,
	6, 10, 5, 5, 5, 5, 5, 0, 6, 5,
	6, 4, 5, 0, 8, 9, 0, 3, 0, 1,
	0, 3, 1, 1, 0, 2, 0, 2, 5, 3,
	7, 4, 4, 4, 4, 3, 3, 3, 7, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	0, 2, 2, 1, 3, 2, 0, 4, 4, 3,
	2, 1, 3, 3, 3, 5, 7, 7, 6, 5,
	3, 2, 3, 3, 3, 7, 3, 3, 3, 3,
	4, 7, 5, 2, 4, 4, 4, 4, 4, 5,
	5, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 2, 4, 2, 4, 5, 4, 4, 4,
	4, 4, 3, 3, 3, 5, 2, 3, 3, 3,
	3, 1, 1, 0, 1, 0, 1, 1, 1, 0,
	2, 2, 0, 2, 2, 0, 2, 0, 1, 1,
	2, 1, 3, 1, 2, 1, 1, 5, 0, 1,
	0, 1, 2, 3, 0, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	3, 3, 2, 2, 3, 1, 3, 2, 1, 2,
	1, 2, 2, 4, 3, 3, 6, 4, 7, 6,
	1, 3, 2, 2, 2, 2, 1, 1, 1, 3,
	2, 1, 1, 1, 0, 1, 1, 0, 3, 0,
	2, 0, 2, 1, 2, 2, 0, 1, 1, 0,
	1, 1, 0, 1, 0, 1, 2, 3, 4, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 2,
	3, 5, 0, 1, 2, 1, 1, 0, 1, 2,
	1, 3, 1, 1, 1, 4, 3, 3, 3, 7,
	0, 3, 1, 3, 1, 1, 3, 3, 1, 3,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 0, 1, 2, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 2, 2, 2, 1, 1,
	3, 3, 0, 1, 1, 2, 6, 5, 6, 6,
	0, 2, 3, 3, 0, 2, 3, 3, 3, 2,
	3, 1, 3, 4, 3, 1, 3, 4, 5, 6,
	3, 4, 5, 6, 3, 4, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 3, 1, 1, 2, 2, 2,
	2, 1, 1, 2, 9, 6, 6, 6, 4, 2,
	2, 3, 3, 3, 0, 3, 1, 1, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 5, 5, 6, 4,
	4, 8, 6, 8, 6, 8, 5, 4, 2, 2,
	1, 2, 2, 2, 8, 8, 6, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	2, 0, 2, 3, 4, 4, 4, 4, 4, 0,
	3, 4, 7, 3, 1, 1, 1, 0, 5, 5,
	2, 3, 1, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 2, 1, 1, 0, 1, 0, 2, 1,
	2, 4, 0, 2, 1, 3, 5, 1, 2, 2,
	0, 3, 0, 2, 0, 1, 3, 1, 3, 2,
	0, 1, 1, 0, 1, 2, 4, 4, 0, 2,
	2, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	0, 3, 3, 3, 0, 3, 1, 1, 0, 4,
	0, 1, 1, 0, 3, 1, 3, 2, 1, 1,
	0, 1, 2, 4, 9, 3, 5, 0, 3, 3,
	0, 1, 0, 2, 2, 0, 2, 2, 2, 0,
	2, 1, 2, 3, 3, 0, 2, 1, 2, 3,
	4, 3, 0, 1, 2, 1, 5, 4, 4, 1,
	3, 3, 5, 0, 5, 1, 3, 1, 2, 3,
	1, 1, 3, 3, 1, 3, 3, 3, 3, 3,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 0, 3, 0, 1, 0, 1,
	1, 5, 0, 1, 0, 1, 2, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -322, -5, -9, -14, -15, -16, -17, -18, -19,
	-20, -21, -22, -23, -24, -25, -53, -54, -55, -57,
	-58, -59, -60, -61, -12, -56, -26, -27, -62, -63,
	-64, -65, -66, -7, -6, -11, 7, 8, -74, -28,
	30, -33, -43, 203, -44, -34, 204, -45, 206, 205,
	241, 207, 234, 72, 281, 282, 284, 285, 286, 287,
	-75, 239, 240, 209, 34, 43, 31, 32, 35, 212,
	-8, -29, 6, -324, 9, 407, 236, 235, 26, -10,
	422, 83, -323, 556, -192, -177, 20, 31, 27, -176,
	-172, -88, -177, 18, 16, 5, -67, -327, -67, -67,
	10, 11, -67, -274, -276, 83, 140, 83, -67, -49,
	-48, -47, -46, -50, 29, -40, -41, -297, -39, -36,
	208, 205, 249, 107, 108, 241, 242, 243, 207, 225,
	240, 244, 239, 258, -35, 78, 31, 422, 425, -281,
	204, 210, 211, 408, 110, 109, 73, 206, -278, 333,
	526, -50, 528, 99, 101, 527, 42, 215, 529, 530,
	531, 532, 224, 533, 534, 535, 536, 542, 543, 544,
	545, 111, 5, -67, -234, -230, -301, -224, 86, 87,
	88, 419, 227, 453, 454, 274, 78, 39, 330, 333,
	526, 281, 295, 289, 316, 308, 420, 455, 277, 228,
	262, 523, 306, 116, 528, 280, 456, 242, 338, 339,
	340, 99, 284, 375, 541, 279, 457, 539, 101, 527,
	77, 49, 42, 237, 304, 300, 529, 263, 458, 430,
	256, 110, 107, 548, 34, 298, 48, 28, 538, 109,
	47, 530, 131, 459, 531, 342, 321, 517, 46, 343,
	243, 460, 81, 424, 525, 344, 299, 345, 273, 537,
	209, 461, 509, 346, 347, 518, 462, 322, 326, 463,
	367, 348, 555, 50, 464, 465, 519, 108, 466, 76,
	532, 293, 294, 467, 271, 226, 369, 320, 224, 33,
	349, 421, 275, 56, 250, 370, 44, 324, 552, 43,
	513, 468, 516, 319, 315, 417, 51, 469, 470, 471,
	472, 533, 318, 292, 314, 547, 442, 268, 534, 60,
	211, 328, 327, 329, 257, 366, 311, 473, 474, 475,
	231, 79, 476, 301, 19, 477, 478, 350, 264, 479,
	54, 480, 481, 373, 240, 482, 52, 535, 37, 245,
	549, 536, 483, 484, 485, 486, 487, 352, 488, 351,
	323, 325, 252, 353, 423, 489, 297, 244, 540, 490,
	232, 524, 246, 249, 239, 374, 233, 491, 492, 493,
	494, 495, 278, 496, 497, 285, 542, 41, 498, 499,
	500, 501, 272, 267, 368, 377, 59, 80, 335, 502,
	522, 291, 265, 503, 282, 53, 543, 544, 545, 259,
	546, 7, 553, 554, 355, 111, 269, 270, 45, 312,
	251, 504, 505, 302, 303, 317, 290, 313, 283, 510,
	253, 356, 241, 506, 376, 266, 331, 336, 427, 258,
	357, 521, 426, 310, 307, 260, 507, 358, 216, 254,
	255, 508, 511, 359, 360, 276, 361, 362, 363, 364,
	365, 261, 425, 288, 305, 337, 388, 389, 390, 391,
	392, 393, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 416, 214, -67, 214, -136, -230,
	214, -202, 339, -221, 341, 354, 349, 359, 347, -213,
	350, 352, 252, -316, 367, 214, 356, 203, 157, 342,
	351, 360, 361, 276, 362, 365, 261, -312, -301, 531,
	546, 116, 309, 346, 344, 368, 513, 364, 363, -230,
	283, -237, 288, -225, -301, -224, 286, -136, -73, 509,
	207, -239, -239, -90, 513, 515, -155, -105, 124, -115,
	-118, -110, -111, -149, -150, -151, -152, -116, -162, 146,
	147, 154, 125, -160, -119, 24, 418, 409, 408, 417,
	157, 29, 199, 66, 67, 411, 412, 127, 55, 384,
	385, -117, 380, 386, 381, 414, 415, 102, 416, -225,
	-230, 219, 379, 213, 152, 407, -112, -108, -6, -158,
	378, 382, 383, 387, -301, -224, -114, -113, -145, 89,
	95, 100, 96, -321, 103, -324, 90, 91, 92, 93,
	94, 104, 105, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 42, 355, 355, -136, -67, -170,
	-88, -172, -8, -6, -324, 6, -67, -6, -7, -11,
	-29, -31, 449, -30, -230, -177, -192, 10, 142, 40,
	48, -175, -176, -10, -6, -105, 17, 21, 22, -93,
	148, -105, -230, -68, -93, -211, 218, -67, -67, -201,
	-242, 283, -205, 368, 367, -226, -203, -225, -223, -202,
	366, 208, 428, 123, 23, 25, 126, 157, 17, 127,
	35, 210, 309, 225, 156, 221, 408, 203, 70, 429,
	380, 381, 378, 384, 410, 411, 379, 341, 29, 11,
	431, 26, 235, 22, 36, 150, 205, 130, 238, 24,
	236, 102, 105, 434, 20, 73, 230, 12, 223, 38,
	14, 435, 436, 15, 219, 218, 142, 215, 68, 9,
	199, 27, 139, 64, 437, 118, 438, 439, 440, 441,
	66, 140, 18, 550, 382, 383, 31, 514, 418, 247,
	152, 71, 57, 515, 124, 443, 444, 103, 445, 106,
	74, 520, 120, 16, 69, 40, 446, 248, 447, 220,
	551, 448, 371, 449, 141, 206, 407, 67, 450, 213,
	354, 6, 413, 30, 234, 222, 113, 65, 451, 214,
	129, 414, 415, 217, 104, 5, 117, 32, 10, 72,
	75, 385, 386, 387, 55, 112, 422, 128, 13, 452,
	372, 122, 116, -275, 140, -262, -266, -225, 229, -291,
	225, -136, -284, -283, -225, -89, -220, 215, 223, 222,
	117, -305, 120, 269, 379, 213, -46, -47, -202, 156,
	-76, 246, 248, 84, 84, -266, -265, -264, -306, 248,
	229, -290, -282, 221, 230, -272, 222, 223, -267, 215,
	118, -306, -267, 220, 230, 248, 248, 111, 248, 111,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 245,
	-273, 132, -273, 426, 426, -278, -306, -306, -306, 217,
	33, 33, -222, -267, 217, 23, -273, -273, -202, 156,
	-273, -273, -273, -273, 256, 256, -273, -273, -273, -273,
	-273, -273, -273, -273, -273, -273, -273, -273, -273, -273,
	-273, 214, -305, -97, 365, 276, 78, -48, 258, -32,
	-136, -220, 215, 216, -305, -136, 200, -136, -215, 140,
	13, -215, -212, 355, 353, 340, 345, -215, -215, -215,
	-215, 259, 338, -268, 215, 33, 226, 355, 259, 338,
	259, 260, 259, 260, 348, 358, 259, -235, 12, 142,
	379, 343, 347, 252, 214, 253, 216, 357, -301, 516,
	260, -235, 90, -216, 140, 355, 255, -215, -240, -324,
	-226, 309, -240, -240, 30, 87, 217, -225, -69, -225,
	90, -13, -9, -17, -16, -18, 132, -95, 355, -83,
	157, 531, 517, 518, 519, 516, 352, 524, 522, 520,
	259, 521, 84, 120, 122, 123, -105, 139, -146, 132,
	133, 134, 135, 136, 137, 138, 142, 124, 126, 140,
	141, 121, 143, 144, 145, 146, 147, 148, 149, 151,
	150, 152, 153, 156, 201, 202, -111, -111, -111, -111,
	-160, -324, -324, -324, -324, -111, -210, -324, -111, -324,
	-324, -324, -324, -166, -105, -324, -328, -324, -328, -328,
	-253, -324, -253, -324, -324, -324, -324, -324, 200, -324,
	-324, -324, -324, -324, -253, -253, -253, -253, 100, 95,
	89, -162, 96, 90, -225, -230, -6, -7, -155, -239,
	-313, -314, -139, -136, -324, 276, -175, -10, -6, -170,
	-176, -172, -6, -67, -81, -94, 61, 62, -96, 22,
	36, 65, 63, 21, -325, 85, -325, -192, -325, 84,
	-31, -195, 83, 59, 41, 90, 90, 84, 19, -171,
	-173, -105, 12, -228, -227, 23, -225, 90, 200, 98,
	12, -137, 27, -136, -211, -211, 84, 283, -205, -242,
	-207, -206, 369, 371, 132, -229, -225, 90, 29, 85,
	84, -136, -245, -248, -250, -249, -251, -246, -247, 306,
	307, 157, 310, 312, 313, 314, 315, 316, 317, 318,
	319, 320, 321, 30, 237, 302, 303, 304, 305, 322,
	323, 324, 325, 326, 327, 328, 329, 289, 308, 420,
	290, 291, 292, 293, 294, 295, 297, 298, 299, 300,
	301, -304, -301, 83, 85, 84, -252, 83, -97, 214,
	-301, 215, 215, 215, -67, 407, -273, -273, 245, 17,
	-39, -36, -297, 16, -35, -36, 208, 107, 108, 205,
	83, -262, 83, -271, -304, -301, 83, 118, 220, 117,
	-270, -267, -270, -271, -301, -162, -301, 118, 118, -198,
	-225, -198, -198, 21, -198, 21, -198, 21, 92, -225,
	-198, 21, -198, 21, -198, 21, -198, 21, -198, 21,
	29, 76, 77, 29, 79, 80, 81, -162, -162, -262,
	-202, -136, -301, 92, 92, -273, -273, 92, 90, 90,
	90, -273, -273, 92, 90, -232, -230, 90, -307, 231,
	273, 275, 92, 92, 92, 92, 29, 90, -308, 29,
	538, 537, 539, 540, 541, 92, 29, 92, 29, 92,
	-225, 83, -136, -103, 263, 203, 205, 208, 74, 90,
	277, 132, 42, 84, 217, 214, -301, -217, 219, -217,
	-231, -230, -223, 90, -105, -269, 12, 142, -235, -235,
	-215, -136, -269, -235, -215, -136, -215, -215, -215, -215,
	-235, -235, -235, -215, -230, -230, -136, -136, -136, -136,
	-136, -136, -136, -240, -240, -240, -216, -215, 516, 90,
	74, -238, 286, 320, 510, 511, 512, 84, 422, -129,
	-136, 516, 516, 516, 516, 516, 516, -105, -105, -105,
	-105, -153, 103, 124, 104, 105, -118, -154, -158, -160,
	97, 142, 126, 140, 141, -110, -111, -110, -110, -110,
	-110, -110, -110, -110, -110, -110, -110, -110, -110, -110,
	-241, -301, 90, 157, 90, 90, -91, -93, -105, -105,
	-105, -301, -225, -91, -91, -105, -87, 22, 36, -164,
	-165, 128, -162, -325, -325, 92, -225, -225, -80, -79,
	389, 390, 391, 392, 394, 395, 396, 399, 400, 404,
	405, 388, 406, 393, 398, 401, 402, 403, 397, 305,
	-105, -92, 22, 36, -91, -226, -231, -223, -91, -92,
	-92, -91, -91, 200, -192, -325, 84, -315, 371, 372,
	514, -233, 248, -232, 23, -156, -155, 90, -175, -175,
	61, 62, 57, -91, -96, -325, -30, 23, -194, -225,
	60, 90, -254, -202, 330, 331, -105, -105, 84, -174,
	25, 26, -136, -227, 148, -231, -136, -197, 248, -136,
	-121, -123, -124, -125, -139, -161, -324, 12, -129, -130,
	-138, -230, -205, -207, 84, 370, 372, 373, 74, 106,
	-105, -255, 156, -280, -279, -278, -262, -264, -265, -266,
	85, -255, -258, 336, 335, -252, -252, -252, -252, -252,
	-254, -254, -254, -254, 83, 83, -252, -252, -252, -252,
	-256, 83, -256, -256, -257, 83, -257, -291, -105, -288,
	-287, -285, -286, 224, 99, 422, 75, -283, -174, 92,
	-103, -218, 219, -289, -286, -301, -301, -301, -218, -301,
	90, -301, 90, -77, -52, -1, 550, 551, 552, 84,
	17, -263, -262, -51, 273, -294, -295, 248, -290, -284,
	-271, 118, -270, -271, -271, -301, 84, 27, 111, 111,
	111, 111, 422, 205, 30, -262, -51, -241, 217, -241,
	-241, 90, 90, -214, 546, -129, -99, 265, 132, 254,
	254, 214, 214, 267, -136, 278, 280, 279, 277, 21,
	266, 268, 270, 256, -136, -136, -217, 74, -131, -136,
	24, -230, -136, -215, -215, -136, -215, -215, -136, -225,
	-83, 371, 84, 422, 20, -84, 20, 103, 104, 105,
	-154, -110, -111, -110, 123, 238, 84, -325, 23, 84,
	75, -325, -325, -325, -325, 84, 12, -91, -167, -165,
	130, -105, -325, -325, 84, 84, 12, -244, 23, -325,
	-91, -91, -324, 200, -325, -325, -325, -325, -325, -226,
	-314, 513, 372, -143, -142, -140, 72, 218, 73, -324,
	-232, -325, -148, -225, 92, 96, -177, -120, -122, 12,
	-96, -160, 85, 84, -254, -181, -186, -212, -225, 90,
	157, -173, 200, -144, 13, -147, 30, 55, -9, -324,
	-324, 30, 84, -132, -134, -133, -135, 64, 68, 70,
	65, 66, 67, 71, -236, 23, -121, -7, -6, -324,
	-136, -129, -326, 12, 75, -326, 84, 200, -206, -208,
	374, 371, 377, -301, 90, -76, 84, -278, -266, -178,
	-100, 38, -259, 337, -254, -254, -261, 90, -261, 92,
	92, 85, -42, -37, -38, 31, 78, -285, -273, 90,
	37, -225, 85, -99, -136, 124, 74, -289, -289, -289,
	-230, -2, 549, 555, 118, 83, 340, 16, -194, 84,
	85, -163, 274, 85, -296, 55, -225, 85, 83, -271,
	-271, -225, -324, 214, 29, 29, -51, -163, -255, -301,
	548, 547, 85, 216, 272, -104, 384, -101, 90, 86,
	-136, -136, -136, -136, -136, 208, 205, 257, 217, -129,
	-136, 84, -72, 233, 228, -235, -235, 31, -136, 371,
	525, 523, 123, 238, -118, -111, -93, 419, -243, 157,
	306, 237, 304, 300, 320, 311, 335, 302, 336, 299,
	298, 297, -243, -241, -105, -105, -170, 131, -105, 129,
	-105, -105, -105, -325, 157, 306, -325, -325, -92, -226,
	-140, -267, -267, -267, -198, -209, 20, 12, 55, 55,
	-120, -144, -121, -96, -225, -184, 509, -189, 44, -187,
	-188, 45, -185, 46, 54, 148, -175, -105, -199, 74,
	-200, -204, -162, -157, -159, -158, -324, -193, -325, -225,
	-198, -200, -123, -124, -124, -123, -124, 64, 64, 64,
	69, 64, 69, 64, -133, -230, -325, -325, -7, -233,
	75, -121, -121, -138, -230, 148, 371, 375, 376, -278,
	-320, 103, 124, 29, 74, 333, 99, -318, 156, -319,
	220, 117, 118, 232, 23, 39, 85, 84, 85, 84,
	85, 84, -219, 459, 124, -38, -37, -273, -273, 92,
	-301, 216, 24, -136, 74, 74, 74, -78, 553, 92,
	83, -3, 78, -105, 83, 17, -262, -162, 250, 142,
	-288, -194, -292, -294, -136, -107, -324, -106, -108, -112,
	146, 147, -163, -136, -98, 263, 271, 83, -102, 87,
	-303, 75, 254, 333, 254, -136, -72, -42, -136, -215,
	-215, 31, -301, -118, -111, -324, -325, -252, -252, -252,
	-257, -252, 294, -252, 294, -252, -325, -325, 84, -325,
	20, -325, -82, 413, -105, 84, 84, -325, 83, 83,
	-325, -141, 20, -141, -141, -325, -136, -144, -168, 14,
	-181, 49, 312, -191, -190, 53, 45, -188, 17, 47,
	17, 28, -199, 84, 132, 84, -325, -325, 84, 55,
	200, -325, -144, -127, -126, 74, 75, -128, 74, -126,
	64, 64, -195, -325, -197, -121, -144, -144, 200, 103,
	-324, -109, -117, -107, 10, 90, 90, -301, 118, 118,
	-136, 83, -254, 90, -254, 92, 92, 459, 29, 79,
	80, 81, 29, 76, 77, -136, -136, -136, -136, -293,
	83, 17, -105, 83, 132, 85, -194, -194, 251, -158,
	-324, 85, -325, 84, -260, 422, 425, -105, -113, -113,
	-195, 85, -300, 422, -302, -225, -225, -225, -225, -110,
	-254, -105, -105, -175, 90, -105, -105, 92, 92, -324,
	64, 16, 14, -324, -324, -233, -168, -169, 15, 17,
	-182, 51, -180, 50, -180, -190, 17, 17, 90, 17,
	90, 118, -204, -105, -159, 55, -9, -225, -157, -225,
	-170, -105, 83, -105, -144, -144, -105, -150, 416, 83,
	-105, 85, 85, -195, -292, -52, 85, -194, 92, 85,
	-158, -85, -324, 247, -319, -294, 426, 426, -325, 23,
	-299, -298, -226, 83, 75, -86, 142, 422, -325, -325,
	-325, -325, -325, 85, 85, -196, -325, -225, 220, 17,
	17, -196, -196, -143, -169, -105, -155, -183, 52, 74,
	106, 90, 90, 90, 10, -157, 200, -175, -194, -170,
	-325, -194, 85, 23, 85, 555, 118, 85, 247, -9,
	84, 132, -194, -136, -325, 420, 71, 423, 84, -325,
	-325, -325, 74, 106, -200, -225, 85, -175, 85, -179,
	-9, 83, -3, -325, -70, 422, -298, -277, -226, 90,
	92, 85, 60, 421, 424, -225, 220, -310, -311, 74,
	-320, -317, 103, 124, 99, -318, 112, 113, -70, -105,
	83, -71, 262, 513, -303, 60, -311, 74, 11, 10,
	103, 90, 85, -194, 225, -300, 422, -309, 233, 228,
	231, 30, -309, -4, 554, 85, 264, 423, 227, 29,
	103, 92, -4, 424,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 65, 67, 68, 709, 709, 709, 0,
	709, 0, 0, 709, -2, -2, 709, 1133, 0, 709,
	0, 0, -2, 641, 643, 0, 645, -2, 0, 0,
	654, 1584, 1584, 704, 0, 0, 0, 0, 0, 709,
	994, 45, 709, 0, 80, 81, 660, 661, 662, 60,
	0, 1582, 1, 3, 66, 70, 0, 0, 0, 53,
	1003, 0, 73, 0, 0, 713, 0, 711, 0, 1116,
	709, 709, 0, 111, 112, 0, 0, 0, -2, 115,
	-2, 139, 140, 0, 144, 507, 447, 490, 445, 476,
	-2, 438, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 450, 340, 340, 0, 0, -2,
	438, 438, 438, 0, 0, 0, 473, 1118, 393, 340,
	340, 0, 340, 340, 340, 340, 0, 0, 340, 340,
	340, 340, 340, 340, 340, 340, 340, 340, 340, 340,
	340, 340, 340, 1020, 143, 1134, 1131, 1132, 35, 36,
	37, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286,
	1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296,
	1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306,
	1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316,
	1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326,
	1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336,
	1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346,
	1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356,
	1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366,
	1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376,
	1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386,
	1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396,
	1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406,
	1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416,
	1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426,
	1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436,
	1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446,
	1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456,
	1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466,
	1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476,
	1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486,
	1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496,
	1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506,
	1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516,
	1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526,
	1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536,
	1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546,
	1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556,
	1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566,
	1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576,
	1577, 1578, 1579, 1580, 1581, 0, 1110, 0, 571, 799,
	0, 632, 632, 0, 632, 632, 632, 632, 0, 0,
	0, 583, 0, 0, 0, 0, 629, 0, 0, 602,
	604, 0, 629, 0, 635, 0, 616, 632, 1585, 1585,
	1585, 1101, 0, 626, 624, 638, 639, 621, 622, 640,
	644, 0, 649, 652, 1127, 1128, 0, 667, 44, 1359,
	659, 672, 673, 0, 705, 706, 40, 893, 0, 821,
	825, 836, 849, 850, 851, 852, 853, 855, 856, 0,
	0, 0, 0, 861, 862, 0, 0, 0, 0, 1402,
	0, 874, 0, 0, 0, 0, 0, 975, 0, 939,
	939, 910, 939, 941, 941, 0, 0, 0, 1581, 984,
	0, 0, 0, 0, 0, 0, 248, 249, 892, 1090,
	941, 941, 941, 941, -2, -2, 195, 196, 197, 198,
	199, 200, 201, 0, 191, 0, 253, 254, 250, 251,
	252, 876, 877, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 243,
	244, 245, 246, 247, 1584, 0, 682, 0, 0, 1003,
	0, 995, 994, 58, 0, 709, -2, 0, 0, 0,
	0, 42, 0, 47, 760, 72, 71, 1042, 0, 0,
	0, 54, 1004, 62, 64, 1005, 0, 714, 715, 0,
	738, 742, 0, 710, 0, 0, 1117, 1116, 1116, 97,
	0, 1525, 1094, -2, -2, 0, 0, 1129, 1130, 1103,
	-2, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145,
	1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155,
	1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165,
	1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175,
	1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185,
	1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195,
	1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205,
	1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215,
	1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225,
	1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235,
	1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245,
	1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255,
	1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265,
	1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275,
	1276, 1277, -2, 0, 0, 153, 154, 0, 38, 366,
	0, 149, 0, 360, 310, 1020, 0, 0, 0, 0,
	0, 709, 0, 1111, 134, 135, 141, 142, 340, 340,
	487, 0, 0, 143, 143, 454, 455, 456, 0, 0,
	-2, 364, 0, 439, 0, 0, 354, 354, 358, 356,
	357, 0, 0, 0, 0, 0, 0, 467, 0, 468,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 549,
	0, 341, 0, 485, 486, 394, 0, 0, 0, 0,
	465, 466, 0, 0, 1119, 1120, 0, 0, 340, 340,
	0, 0, 0, 0, 340, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 1033, 0, 0, 0, -2, 0, 563,
	0, 0, 0, 1112, 1112, 570, 0, 572, 573, 0,
	0, 574, 0, 629, 629, 627, 628, 576, 577, 578,
	579, 632, 0, 0, 349, 350, 351, 629, 632, 0,
	632, 632, 632, 632, 629, 629, 629, 632, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1585, 1585, 1585,
	635, 632, 0, 612, 0, 613, 614, 617, 618, 1586,
	1587, 1148, 619, 620, 1102, 642, 650, 653, 670, 668,
	669, 671, 663, 664, 665, 666, 0, 684, 685, 690,
	0, 0, 0, 0, 696, 697, 698, 0, 0, 701,
	702, 703, 0, 0, 0, 0, 819, 0, 0, 882,
	883, 884, 885, 886, 887, 888, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 857, 858, 859, 860,
	863, 0, 0, 0, 0, 869, 870, 0, 0, 0,
	0, 0, 719, 0, 976, 0, 908, 0, 909, 911,
	912, 0, 913, 0, 0, 0, 0, 722, 0, 0,
	722, 722, 0, 0, 185, 186, 187, 188, 202, 203,
	204, 205, 206, 255, 984, 0, 892, 0, 0, 41,
	674, 675, 0, 782, 1122, 0, 52, 61, 63, 1003,
	56, 1003, 0, 724, 0, 0, -2, -2, 725, 731,
	732, 733, 734, 735, 49, 1583, 50, 0, 69, 0,
	43, 0, 0, 0, 0, 322, 1045, 0, 0, 996,
	997, 1000, 0, 739, 743, 0, 745, 746, 0, 712,
	0, 95, 0, 798, 0, 0, 0, 1525, 1100, 0,
	99, 100, 0, 0, 0, 328, 1105, 1106, 1107, -2,
	347, 0, 328, 317, 261, 262, 263, 310, 265, 310,
	310, 310, 310, 322, 322, 322, 322, 293, 294, 295,
	296, 297, 0, 0, 280, 310, 310, 310, 310, 300,
	301, 302, 303, 304, 305, 306, 307, 266, 267, 268,
	269, 270, 271, 272, 273, 274, 312, 312, 312, 314,
	314, 0, 39, 0, 332, 0, 1000, 0, 1033, 1114,
	1124, 0, 0, 0, 1114, 117, 0, 0, 488, 518,
	448, 477, 489, 0, 451, 452, -2, 0, 0, 438,
	0, 440, 0, 348, 0, -2, 0, 358, 0, 354,
	358, 355, 358, 346, 359, 469, 470, 471, 0, 529,
	768, 0, 0, 0, 0, 0, 535, 536, 537, 0,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	478, 479, 480, 481, 482, 483, 484, 0, 0, 440,
	0, 474, 0, 395, 396, 0, 0, 399, 400, 401,
	402, 0, 0, 405, 406, 407, 785, 786, 408, 432,
	433, 434, 409, 410, 411, 412, 413, 414, 415, 426,
	427, 428, 429, 430, 431, 416, 417, 418, 419, 420,
	423, 0, 127, 1024, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1112, 0, 0, 0, 0,
	800, 1135, 1136, 633, 634, 0, 352, 353, 632, 632,
	580, 603, 0, 632, 584, 605, 585, 587, 586, 588,
	607, 608, 632, 591, 630, 631, 592, 593, 594, 595,
	596, 597, 598, 599, 600, 601, 609, 610, 611, 636,
	0, 0, 651, 655, 656, 657, 658, 0, 0, 687,
	91, 692, 693, 694, 695, 707, 700, 894, 816, 817,
	818, 820, 822, 0, 878, 880, 824, 826, 889, 890,
	891, 0, 0, 0, 0, 0, 830, 834, 837, 838,
	839, 840, 841, 842, 843, 844, 845, 846, 847, 848,
	854, 954, 955, 956, 872, 873, 0, 736, 0, 0,
	0, 0, 871, 0, 0, 0, 0, 720, 721, 982,
	979, 0, 0, 940, 942, 0, 0, 0, 0, 918,
	919, 920, 921, 922, 923, 924, 925, 926, 927, 928,
	929, 930, 931, 932, 933, 934, 935, 936, 937, 938,
	957, 0, 0, 0, 723, 985, 0, -2, 0, 0,
	0, 0, 0, 0, 0, 1089, 0, 677, 678, 680,
	0, 802, 0, 783, 0, 0, 1123, 683, 55, 57,
	729, 730, 0, 747, 726, 51, 46, 0, 0, 762,
	1043, 322, 1065, 0, 326, 327, 1006, 1007, 0, 999,
	1001, 1002, 74, 744, 740, 0, 814, 0, 0, 797,
	0, 750, 752, 753, 754, 780, 0, 0, 0, 0,
	93, 799, 1095, 98, 0, 0, 103, 104, 1096, 1097,
	1098, 1099, 0, 507, -2, 390, 155, 157, 158, 159,
	150, -2, 320, 318, 319, 264, 322, 322, 287, 288,
	289, 290, 291, 292, 0, 0, 281, 282, 283, 284,
	275, 0, 276, 277, 278, 0, 279, 365, 0, 1008,
	333, 334, 336, 340, 0, 0, 0, 361, 362, 0,
	1024, 0, 0, 0, 1125, 1124, 1124, 1124, 0, 145,
	146, 147, 148, 524, 0, 0, 519, 522, 523, 143,
	0, 0, 151, 442, 441, 0, 556, 0, 363, 0,
	0, 358, 358, 343, 344, 472, 0, 0, 531, 532,
	533, 534, 0, 0, 0, 440, 442, 328, 0, 397,
	398, 403, 404, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 502, 503, 504, 505, 506,
	1021, 1022, 1023, 0, 0, 564, 0, 0, 382, 89,
	1113, 569, 629, 590, 606, 629, 582, 589, 615, 647,
	691, 0, 0, 0, 0, 699, 0, 823, 879, 881,
	827, 0, 831, 835, 0, 0, 0, 0, 0, 0,
	0, 868, 875, 899, 900, 0, 0, 994, 0, 980,
	0, 0, 907, 943, 0, 0, 0, 0, 0, 895,
	0, 0, 722, 0, 944, 945, 946, 947, 948, 985,
	676, 679, 681, 758, 803, 804, 0, 0, 0, 0,
	784, 1121, 0, 987, 0, 0, 747, 814, 748, 0,
	727, 48, 761, 0, 1047, 1046, 1059, 1072, 323, 324,
	325, 998, 0, 1003, 0, 1083, 0, 0, 1075, 0,
	0, 0, 0, 0, 0, 0, 0, 787, 0, 0,
	790, 0, 0, 0, 0, 781, 0, 0, 0, 0,
	-2, 0, 0, 87, 88, 0, 0, 0, 101, 102,
	0, 0, 108, 329, 330, 136, 143, 392, 156, 372,
	0, 0, 260, 321, 285, 286, 0, 308, 0, 0,
	0, 385, 113, 1012, 1011, 340, 340, 335, 0, 338,
	0, 1126, 311, 0, 126, 0, 0, 0, 0, 0,
	132, 513, 0, 0, 520, 0, 0, 0, 446, 0,
	457, 458, 0, 528, 555, 0, 560, 332, 0, 342,
	345, 769, 0, 0, 459, 0, 442, 463, 464, 475,
	424, 425, 422, 0, 0, 1034, 1035, 1040, 1038, 1039,
	118, 495, 497, 496, 500, 0, 0, 493, 0, 382,
	1008, 0, 568, 383, 384, 632, 632, 686, 92, 0,
	689, 0, 0, 0, 828, 832, 737, 0, 0, 310,
	310, 962, 310, 314, 965, 310, 967, 310, 970, 310,
	973, 974, 0, 0, 0, 0, 977, 906, 983, 0,
	0, 0, 0, 917, 0, 0, 896, 897, 0, 986,
	805, 810, 810, 810, 0, 0, 1108, 1109, 988, 989,
	814, 990, 749, 728, 763, 1065, 0, 1058, 0, -2,
	1067, 0, 0, 0, 1073, 741, 75, 815, 78, 0,
	1083, 1091, 0, 1074, 1085, 1087, 0, 0, 0, 1079,
	0, 814, 751, 776, 778, 0, 773, 788, 789, 791,
	0, 793, 0, 795, 796, 760, 756, 757, 0, 95,
	0, 814, 814, 94, 0, 801, 105, 106, 107, 391,
	160, 165, 0, 0, 0, 170, 0, 172, 0, 373,
	0, 257, 259, 0, 0, 163, 322, 0, 322, 0,
	315, 0, 374, 386, 0, 1009, 1010, 0, 0, 337,
	339, 0, 1115, 128, 0, 0, 0, 516, 0, 525,
	0, 0, 0, 0, 0, 0, 152, 443, 0, 0,
	331, 0, 0, 553, 550, 460, 0, 189, 190, 192,
	0, 0, 462, 760, 1025, 1026, 1027, 0, 1037, 1041,
	121, 0, 0, 0, 0, 565, 566, 567, 90, 575,
	581, 688, 708, 829, 833, 0, 865, 960, 322, 963,
	964, 966, 968, 969, 971, 972, 866, 867, 0, 902,
	0, 904, 1003, 0, 981, 0, 0, 916, 0, 0,
	898, 0, 0, 0, 0, 782, 59, 990, 992, 0,
	1052, 1050, 1050, 1060, 1061, 0, 0, 1068, 0, 0,
	0, 0, 79, 0, 0, 0, 1088, 0, 0, 0,
	0, 96, 994, 770, 777, 0, 0, 771, 0, 772,
	792, 794, 755, -2, 814, 814, 85, 86, 0, 166,
	0, 168, 183, 184, 0, 171, 173, 174, 256, 258,
	0, 0, 298, 309, 299, 0, 0, 387, 1013, 1014,
	1015, 1016, 1017, 1018, 1019, 760, 129, 130, 131, 508,
	0, 518, 0, 0, 0, 511, 0, 449, 0, 559,
	0, 0, 530, 0, 538, 0, 0, 0, 193, 194,
	0, 1036, 494, 0, 119, 120, 0, 0, 499, 949,
	961, 0, 0, 0, 978, 0, 0, 0, 0, 0,
	811, 0, 0, 0, 0, 802, 992, 77, 0, 0,
	1055, 0, 1048, 1051, 1049, 1062, 0, 0, 1069, 0,
	1071, 0, 1092, 1093, 1086, 0, 1078, 1081, 1077, 1080,
	1003, 774, 0, 779, 994, 84, 0, 169, 0, 0,
	0, 313, 316, 0, 0, 0, 509, 0, 521, 512,
	557, 558, 0, 561, 367, 554, 551, 552, 461, 0,
	122, 123, 0, 0, 0, 0, 0, 0, 901, 903,
	905, 914, 915, 958, 959, 0, 807, 764, 765, 812,
	813, 0, 0, 759, 76, 993, 991, 1044, 0, 1053,
	1054, 1063, 1064, 1070, 0, 1076, 0, 82, 0, 1003,
	167, 0, 177, 0, 517, 0, 520, 510, 0, 1028,
	0, 0, 0, 501, 864, 0, 0, 0, 0, 806,
	808, 809, 1056, 1057, 1084, 1082, 775, 83, 368, 372,
	1028, 0, 0, 562, 491, 1030, 124, 125, 435, 436,
	437, 118, 950, 0, 953, 766, 767, 369, 370, 0,
	161, 178, 179, 0, 0, 182, 175, 176, 114, 0,
	0, 0, 1031, 1032, 121, 951, 371, 0, 0, 0,
	180, 181, 526, 0, 0, 498, 0, 375, 377, 378,
	0, 0, 376, 514, 0, 526, 1029, 0, 379, 380,
	381, 527, 515, 952,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 125, 3, 3, 3, 151, 143, 3,
	83, 85, 148, 146, 84, 147, 200, 149, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 556,
	133, 132, 134, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 153, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 121, 3, 154,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 122, 123, 124, 126,
	127, 128, 129, 130, 131, 135, 136, 137, 138, 139,
	140, 141, 142, 144, 145, 150, 152, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:474
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:479
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:480
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:484
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:517
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:523
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:527
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:531
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:536
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:540
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:546
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:552
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:558
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:562
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:567
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:571
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:577
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:581
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:587
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:593
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:597
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:601
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:624
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:630
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:635
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:641
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:648
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:654
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:661
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:665
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:671
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:675
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:679
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:683
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:687
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:693
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:697
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:702
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:706
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:712
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:716
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:721
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:727
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:733
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:740
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:746
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:754
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:758
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:766
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:778
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:790
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:794
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:800
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:806
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:810
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:814
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:818
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:823
		{
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:824
		{
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:828
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:832
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:838
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:842
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:848
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:852
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:857
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:861
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:867
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:873
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:877
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:883
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:887
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:893
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:897
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:901
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:907
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:911
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:915
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:919
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:925
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:929
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:935
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:941
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:948
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:957
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:961
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:968
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:972
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:977
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:981
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:987
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:992
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:997
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1003
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1008
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1014
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 126:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1020
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1027
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1034
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1039
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1044
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1049
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1056
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1063
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1074
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1081
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1085
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1091
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1095
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1099
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1103
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 143:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1109
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1113
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1119
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1123
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1129
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1133
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1140
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1144
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1150
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1154
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1160
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1165
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1170
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1174
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1179
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1183
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1187
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 160:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1198
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1207
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1216
		{
			yyVAL.str = ""
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1220
		{
			yyVAL.str = ""
		}
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1229
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1233
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1239
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1245
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1250
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1255
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1260
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1265
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1270
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1275
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1279
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1286
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1290
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1295
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1299
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1304
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1310
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1316
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1321
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1328
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1335
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1339
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1343
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1347
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1358
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1365
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1369
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1375
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1379
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1383
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1387
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1391
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1395
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1399
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1404
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1408
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1412
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1416
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1420
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1427
		{
			yyVAL.str = Armscii8Str
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1431
		{
			yyVAL.str = ASCIIStr
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1435
		{
			yyVAL.str = Big5Str
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1439
		{
			yyVAL.str = UBinaryStr
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1443
		{
			yyVAL.str = Cp1250Str
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1447
		{
			yyVAL.str = Cp1251Str
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1451
		{
			yyVAL.str = Cp1256Str
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1455
		{
			yyVAL.str = Cp1257Str
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1459
		{
			yyVAL.str = Cp850Str
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1463
		{
			yyVAL.str = Cp852Str
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1467
		{
			yyVAL.str = Cp866Str
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1471
		{
			yyVAL.str = Cp932Str
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1475
		{
			yyVAL.str = Dec8Str
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1479
		{
			yyVAL.str = EucjpmsStr
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1483
		{
			yyVAL.str = EuckrStr
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1487
		{
			yyVAL.str = Gb18030Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1491
		{
			yyVAL.str = Gb2312Str
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1495
		{
			yyVAL.str = GbkStr
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1499
		{
			yyVAL.str = Geostd8Str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1503
		{
			yyVAL.str = GreekStr
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1507
		{
			yyVAL.str = HebrewStr
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1511
		{
			yyVAL.str = Hp8Str
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1515
		{
			yyVAL.str = Keybcs2Str
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1519
		{
			yyVAL.str = Koi8rStr
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1523
		{
			yyVAL.str = Koi8uStr
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1527
		{
			yyVAL.str = Latin1Str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1531
		{
			yyVAL.str = Latin2Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1535
		{
			yyVAL.str = Latin5Str
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1539
		{
			yyVAL.str = Latin7Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1543
		{
			yyVAL.str = MacceStr
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1547
		{
			yyVAL.str = MacromanStr
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1551
		{
			yyVAL.str = SjisStr
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1555
		{
			yyVAL.str = Swe7Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1559
		{
			yyVAL.str = Tis620Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1563
		{
			yyVAL.str = Ucs2Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1567
		{
			yyVAL.str = UjisStr
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1571
		{
			yyVAL.str = Utf16Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1575
		{
			yyVAL.str = Utf16leStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1579
		{
			yyVAL.str = Utf32Str
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1583
		{
			yyVAL.str = Utf8Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1587
		{
			yyVAL.str = Utf8mb4Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1597
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1601
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1605
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1612
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1616
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1620
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1626
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1630
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1634
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1638
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1644
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1655
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1660
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1666
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1670
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1674
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1678
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1682
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1686
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1690
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1694
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1698
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1704
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1710
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1716
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1722
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1728
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1736
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1740
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1744
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1748
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1752
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1758
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1762
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1766
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1770
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1774
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1778
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1782
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1786
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1790
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1794
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1798
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1802
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1806
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1810
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 299:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1815
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1821
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1825
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1829
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1833
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1837
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1841
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1845
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1849
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1855
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1860
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 310:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1865
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1869
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1874
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 313:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1878
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 314:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1886
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1890
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 316:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1896
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1904
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1908
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1912
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1917
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1921
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1926
		{
			yyVAL.str = ""
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1930
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1934
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1938
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1942
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1947
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 328:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1953
		{
			yyVAL.str = ""
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1957
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1961
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 331:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:1968
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1973
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1977
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1983
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1987
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1993
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1997
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2002
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2006
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2012
		{
			yyVAL.str = ""
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2016
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 342:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2022
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2026
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2030
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2034
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2038
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2043
		{
			yyVAL.str = ""
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2047
		{
			yyVAL.str = yyDollar[2].str
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2053
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2057
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2061
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2068
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2072
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2077
		{
			yyVAL.str = "key"
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2081
		{
			yyVAL.str = yyDollar[1].str
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2087
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2091
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2096
		{
			yyVAL.str = ""
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2100
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2106
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2110
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2116
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2122
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2126
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2132
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2136
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2142
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2148
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2152
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2156
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2160
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2165
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2169
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2175
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2181
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2187
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2193
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2197
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2201
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2205
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2209
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2214
		{
			yyVAL.str = ""
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2218
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2222
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2227
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2231
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2235
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2240
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2244
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2250
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2254
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2258
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2264
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2268
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2274
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2278
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2282
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2286
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2290
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2294
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2298
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2302
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2306
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2310
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2314
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2318
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2322
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2326
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2330
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2334
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2338
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2342
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2346
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2350
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2354
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2358
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2362
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2366
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2370
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2374
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2378
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2382
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2387
		{
			yyVAL.str = ""
		}
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2391
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2395
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2414
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2418
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2422
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2427
		{
			yyVAL.str = ""
		}
	case 440:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2433
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2437
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2442
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2446
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2451
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2455
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2459
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2463
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2467
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 449:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2471
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2477
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2481
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2485
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2491
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2495
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2499
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2503
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2507
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2511
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2515
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2519
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2523
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2527
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2531
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2535
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2539
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2543
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2547
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2551
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2555
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2559
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2563
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2567
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2571
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2575
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2579
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2585
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2589
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2595
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2599
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2603
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2607
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2611
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2615
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2619
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2623
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2627
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2633
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2640
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2647
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2654
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2660
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2664
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2671
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2678
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2690
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2700
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2704
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2708
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2721
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2731
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2735
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2746
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2753
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2760
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2767
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2774
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2781
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2785
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2794
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2802
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2811
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2818
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2826
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2830
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2839
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2850
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2854
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2859
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2863
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2868
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:2872
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:2878
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:2882
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2887
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:2891
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2896
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:2900
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2906
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2910
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2914
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2918
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2922
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2926
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2930
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2934
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2938
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2942
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2946
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2950
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2954
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2958
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2962
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2966
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2970
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2974
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2978
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2982
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2986
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2990
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2995
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2999
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3003
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3010
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3014
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3020
		{
			yyVAL.partDefUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
		}
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3025
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3029
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3036
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3043
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3052
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3058
		{
			yyVAL.str = ""
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3062
		{
			yyVAL.str = ""
		}
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3068
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3074
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3078
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 566:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3084
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3088
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3097
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3101
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3107
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3111
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3116
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3122
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3126
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3130
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3134
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3138
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3142
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3146
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3150
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3154
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3158
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3162
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3166
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3170
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3174
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3178
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3182
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3186
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3190
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3194
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3198
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3202
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3206
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3210
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3214
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3218
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3222
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3226
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3230
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3234
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3238
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3242
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3246
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3250
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3254
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3258
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3262
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3266
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3271
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3275
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3279
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3284
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3288
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3292
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3296
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3301
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3315
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3319
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3323
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3329
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3333
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 623:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3339
		{
			yyVAL.str = ""
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3343
		{
			yyVAL.str = "extended "
		}
	case 625:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3349
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3353
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3359
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3363
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 629:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3369
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3373
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3377
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3383
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3387
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3391
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3397
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3401
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3407
		{
			yyVAL.empty = struct{}{}
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3411
		{
			yyVAL.empty = struct{}{}
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3415
		{
			yyVAL.empty = struct{}{}
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3421
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3425
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3429
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3435
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3439
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3445
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3451
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3455
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3460
		{
			yyVAL.empty = struct{}{}
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3462
		{
			yyVAL.empty = struct{}{}
		}
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3465
		{
			yyVAL.empty = struct{}{}
		}
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3467
		{
			yyVAL.empty = struct{}{}
		}
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3472
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3478
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3483
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3487
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3491
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3495
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3499
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3503
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3509
		{
			yyVAL.str = yyDollar[1].str
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3513
		{
			yyVAL.str = yyDollar[1].str
		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3517
		{
			yyVAL.str = yyDollar[1].str
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3523
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3527
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3531
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3535
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3540
		{
			yyVAL.str = ""
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3544
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3548
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3554
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3558
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3564
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3568
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3574
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3580
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3584
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3590
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3596
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3600
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3604
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3608
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3614
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3620
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3626
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3630
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3634
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3638
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3642
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3646
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3652
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3656
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3662
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3666
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3670
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3674
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3678
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3682
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3686
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3690
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3694
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3698
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3702
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3706
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 704:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3711
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3715
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3719
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3724
		{
			yyVAL.str = ""
		}
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3728
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3733
		{
			setAllowComments(yylex, true)
		}
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3737
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3743
		{
			yyVAL.strs = nil
		}
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3747
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3753
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3757
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3761
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3766
		{
			yyVAL.str = ""
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3770
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3774
		{
			yyVAL.str = SQLCacheStr
		}
	case 719:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3779
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3783
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3787
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3792
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3796
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3801
		{
			yyVAL.strs = nil
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3805
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3809
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3813
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3817
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3823
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3827
		{
			yyVAL.str = SQLCacheStr
		}
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3831
		{
			yyVAL.str = DistinctStr
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3835
		{
			yyVAL.str = DistinctStr
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3839
		{
			yyVAL.str = StraightJoinHint
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3843
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3847
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3853
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3857
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3863
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3867
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3871
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3875
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3880
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3884
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3888
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3895
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3900
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3904
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3910
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3916
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3920
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3930
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3934
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3938
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:3944
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3950
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3954
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3959
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3963
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3969
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3973
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3979
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3983
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3987
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3991
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:3997
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4001
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4014
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4018
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4022
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4026
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4032
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4034
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4038
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4040
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4044
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4046
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4049
		{
			yyVAL.empty = struct{}{}
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4051
		{
			yyVAL.empty = struct{}{}
		}
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4054
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4058
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4062
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4069
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4075
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4079
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4083
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4089
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4095
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4099
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4103
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4107
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4113
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4117
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4127
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4131
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4137
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4141
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4147
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4152
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4156
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4162
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4166
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 806:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4172
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4176
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4180
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4184
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4189
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4193
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4197
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4201
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4207
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4211
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4218
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4222
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4226
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4230
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4234
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4238
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4245
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4249
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4253
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4257
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4263
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4267
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4271
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4275
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4279
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4283
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4287
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4291
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4295
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4299
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4303
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4309
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4313
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4317
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4321
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4325
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4329
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4333
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4337
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4341
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4345
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4349
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4353
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4357
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4363
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4367
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4371
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4375
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4379
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4383
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4387
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4391
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4395
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4399
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4403
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4407
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4411
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4415
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4419
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4423
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4427
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4431
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4435
		{
			yyLOCAL = &LTrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4439
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4447
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4451
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4459
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4463
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4470
		{
			yyVAL.str = ""
		}
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4474
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4480
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4484
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4491
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4495
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4499
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4503
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4509
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4513
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4517
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4521
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4525
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4529
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4533
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4539
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4543
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4547
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4554
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4560
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4564
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 895:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4574
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4578
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4582
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4586
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4596
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4600
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4604
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4608
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4612
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4616
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4620
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4624
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4628
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4632
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4643
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4647
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4653
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4657
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4662
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4666
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4670
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4674
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4678
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4684
		{
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4686
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4690
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4694
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4698
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4702
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4706
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4710
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4714
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4718
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4722
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4726
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4732
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4736
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4740
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4744
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4748
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4752
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4756
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4760
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4764
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4774
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4778
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4782
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4792
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4796
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4800
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4804
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4808
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4814
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4818
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4822
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4826
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4830
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4836
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4840
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4844
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 957:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4850
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4854
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4858
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4864
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4868
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4872
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4876
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4880
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4886
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4890
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4894
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4898
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4902
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4906
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4910
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4914
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4918
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4922
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4928
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4932
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4937
		{
			yyVAL.str = string("")
		}
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4941
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:4947
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4951
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 981:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:4957
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4962
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4966
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4972
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4976
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4980
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4986
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4995
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4999
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5005
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5009
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5014
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5018
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5023
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5027
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5033
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5039
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5043
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5049
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5054
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5058
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5062
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5067
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5071
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5077
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5081
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5085
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5090
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5094
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5098
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5102
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5106
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5113
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5117
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5121
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5125
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5131
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5135
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5139
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5144
		{
			yyVAL.str = ""
		}
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5148
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5152
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5156
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1024:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5161
		{
			yyVAL.str = ""
		}
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5165
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5171
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5175
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1028:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5180
		{
			yyVAL.str = ""
		}
	case 1029:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5184
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1030:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5189
		{
			yyVAL.str = "cascaded"
		}
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5193
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5197
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1033:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5202
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5206
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5212
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5218
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5224
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5233
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5237
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1040:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5242
		{
			yyVAL.str = ""
		}
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5246
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5252
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5256
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5262
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5266
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5270
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5275
		{
			yyVAL.str = ""
		}
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5279
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5283
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1050:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5288
		{
			yyVAL.str = ""
		}
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5292
		{
			yyVAL.str = " header"
		}
	case 1052:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5297
		{
			yyVAL.str = ""
		}
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5301
		{
			yyVAL.str = " manifest on"
		}
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5305
		{
			yyVAL.str = " manifest off"
		}
	case 1055:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5310
		{
			yyVAL.str = ""
		}
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5314
		{
			yyVAL.str = " overwrite on"
		}
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5318
		{
			yyVAL.str = " overwrite off"
		}
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5324
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1059:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5329
		{
			yyVAL.str = ""
		}
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5333
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5339
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5343
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5349
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5353
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1065:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5358
		{
			yyVAL.str = ""
		}
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5362
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5368
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5372
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5378
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1070:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5382
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5386
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1072:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5391
		{
			yyVAL.str = ""
		}
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5395
		{
			yyVAL.str = " optionally"
		}
	case 1074:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5408
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5412
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5416
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5420
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5424
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5430
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5434
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5438
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1082:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5442
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1083:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5447
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5451
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:5457
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5461
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5467
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5471
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5477
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5482
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5492
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5496
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:5502
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:5508
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5512
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5518
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5522
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5526
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5530
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5534
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5542
		{
			yyVAL.str = "charset"
		}
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5552
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5556
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5560
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5569
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5571
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5574
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5576
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5579
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:5581
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5584
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5586
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5589
		{
			yyVAL.empty = struct{}{}
		}
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5591
		{
			yyVAL.empty = struct{}{}
		}
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5593
		{
			yyVAL.empty = struct{}{}
		}
	case 1121:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5597
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5602
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5606
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5611
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5613
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:5617
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5623
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5627
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5634
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5640
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5644
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1133:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5650
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5654
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5661
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6131
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6140
		{
			decNesting(yylex)
		}
	case 1584:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6145
		{
			skipToEnd(yylex)
		}
	case 1585:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6150
		{
			skipToEnd(yylex)
		}
	case 1586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6154
		{
			skipToEnd(yylex)
		}
	case 1587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6158
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
