// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"

	"vitess.io/vitess/go/ptr"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func markBindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const MULTIPLE_TEXT_LITERAL = 57347
const FUNCTION_CALL_NON_KEYWORD = 57348
const STRING_TYPE_PREFIX_NON_KEYWORD = 57349
const ANY_SOME = 57350
const SELECT_OPTIONS = 57351
const LEX_ERROR = 57352
const UNION = 57353
const SELECT = 57354
const STREAM = 57355
const VSTREAM = 57356
const INSERT = 57357
const UPDATE = 57358
const DELETE = 57359
const FROM = 57360
const WHERE = 57361
const GROUP = 57362
const HAVING = 57363
const ORDER = 57364
const BY = 57365
const LIMIT = 57366
const OFFSET = 57367
const FOR = 57368
const DISTINCT = 57369
const AS = 57370
const EXISTS = 57371
const ASC = 57372
const DESC = 57373
const INTO = 57374
const DUPLICATE = 57375
const DEFAULT = 57376
const SET = 57377
const LOCK = 57378
const UNLOCK = 57379
const KEYS = 57380
const DO = 57381
const CALL = 57382
const ALL = 57383
const ANY = 57384
const SOME = 57385
const DISTINCTROW = 57386
const PARSER = 57387
const GENERATED = 57388
const ALWAYS = 57389
const OUTFILE = 57390
const S3 = 57391
const DATA = 57392
const LOAD = 57393
const LINES = 57394
const TERMINATED = 57395
const ESCAPED = 57396
const ENCLOSED = 57397
const DUMPFILE = 57398
const CSV = 57399
const HEADER = 57400
const MANIFEST = 57401
const OVERWRITE = 57402
const STARTING = 57403
const OPTIONALLY = 57404
const VALUES = 57405
const LAST_INSERT_ID = 57406
const NEXT = 57407
const VALUE = 57408
const SHARE = 57409
const MODE = 57410
const SQL_NO_CACHE = 57411
const SQL_CACHE = 57412
const SQL_CALC_FOUND_ROWS = 57413
const SQL_SMALL_RESULT = 57414
const SQL_BIG_RESULT = 57415
const HIGH_PRIORITY = 57416
const JOIN = 57417
const STRAIGHT_JOIN = 57418
const LEFT = 57419
const RIGHT = 57420
const INNER = 57421
const OUTER = 57422
const CROSS = 57423
const NATURAL = 57424
const USE = 57425
const FORCE = 57426
const ON = 57427
const USING = 57428
const INPLACE = 57429
const COPY = 57430
const INSTANT = 57431
const ALGORITHM = 57432
const NONE = 57433
const SHARED = 57434
const EXCLUSIVE = 57435
const SUBQUERY_AS_EXPR = 57436
const STRING = 57437
const SQL_BUFFER_RESULT = 57438
const ID = 57439
const AT_ID = 57440
const AT_AT_ID = 57441
const HEX = 57442
const NCHAR_STRING = 57443
const INTEGRAL = 57444
const FLOAT = 57445
const DECIMAL = 57446
const HEXNUM = 57447
const COMMENT = 57448
const COMMENT_KEYWORD = 57449
const BITNUM = 57450
const BIT_LITERAL = 57451
const COMPRESSION = 57452
const VALUE_ARG = 57453
const LIST_ARG = 57454
const OFFSET_ARG = 57455
const JSON_PRETTY = 57456
const JSON_STORAGE_SIZE = 57457
const JSON_STORAGE_FREE = 57458
const JSON_CONTAINS = 57459
const JSON_CONTAINS_PATH = 57460
const JSON_EXTRACT = 57461
const JSON_KEYS = 57462
const JSON_OVERLAPS = 57463
const JSON_SEARCH = 57464
const JSON_VALUE = 57465
const JSON_ARRAYAGG = 57466
const JSON_OBJECTAGG = 57467
const EXTRACT = 57468
const NULL = 57469
const UNKNOWN = 57470
const TRUE = 57471
const FALSE = 57472
const OFF = 57473
const DISCARD = 57474
const IMPORT = 57475
const ENABLE = 57476
const DISABLE = 57477
const TABLESPACE = 57478
const VIRTUAL = 57479
const STORED = 57480
const BOTH = 57481
const LEADING = 57482
const TRAILING = 57483
const KILL = 57484
const EMPTY_FROM_CLAUSE = 57485
const LOWER_THAN_CHARSET = 57486
const CHARSET = 57487
const UNIQUE = 57488
const KEY = 57489
const EXPRESSION_PREC_SETTER = 57490
const OR = 57491
const XOR = 57492
const AND = 57493
const NOT = 57494
const BETWEEN = 57495
const CASE = 57496
const WHEN = 57497
const THEN = 57498
const ELSE = 57499
const END = 57500
const LE = 57501
const GE = 57502
const NE = 57503
const NULL_SAFE_EQUAL = 57504
const IS = 57505
const LIKE = 57506
const REGEXP = 57507
const RLIKE = 57508
const IN = 57509
const ASSIGNMENT_OPT = 57510
const SHIFT_LEFT = 57511
const SHIFT_RIGHT = 57512
const DIV = 57513
const MOD = 57514
const UNARY = 57515
const COLLATE = 57516
const BINARY = 57517
const UNDERSCORE_ARMSCII8 = 57518
const UNDERSCORE_ASCII = 57519
const UNDERSCORE_BIG5 = 57520
const UNDERSCORE_BINARY = 57521
const UNDERSCORE_CP1250 = 57522
const UNDERSCORE_CP1251 = 57523
const UNDERSCORE_CP1256 = 57524
const UNDERSCORE_CP1257 = 57525
const UNDERSCORE_CP850 = 57526
const UNDERSCORE_CP852 = 57527
const UNDERSCORE_CP866 = 57528
const UNDERSCORE_CP932 = 57529
const UNDERSCORE_DEC8 = 57530
const UNDERSCORE_EUCJPMS = 57531
const UNDERSCORE_EUCKR = 57532
const UNDERSCORE_GB18030 = 57533
const UNDERSCORE_GB2312 = 57534
const UNDERSCORE_GBK = 57535
const UNDERSCORE_GEOSTD8 = 57536
const UNDERSCORE_GREEK = 57537
const UNDERSCORE_HEBREW = 57538
const UNDERSCORE_HP8 = 57539
const UNDERSCORE_KEYBCS2 = 57540
const UNDERSCORE_KOI8R = 57541
const UNDERSCORE_KOI8U = 57542
const UNDERSCORE_LATIN1 = 57543
const UNDERSCORE_LATIN2 = 57544
const UNDERSCORE_LATIN5 = 57545
const UNDERSCORE_LATIN7 = 57546
const UNDERSCORE_MACCE = 57547
const UNDERSCORE_MACROMAN = 57548
const UNDERSCORE_SJIS = 57549
const UNDERSCORE_SWE7 = 57550
const UNDERSCORE_TIS620 = 57551
const UNDERSCORE_UCS2 = 57552
const UNDERSCORE_UJIS = 57553
const UNDERSCORE_UTF16 = 57554
const UNDERSCORE_UTF16LE = 57555
const UNDERSCORE_UTF32 = 57556
const UNDERSCORE_UTF8 = 57557
const UNDERSCORE_UTF8MB4 = 57558
const UNDERSCORE_UTF8MB3 = 57559
const INTERVAL = 57560
const WINDOW_EXPR = 57561
const JSON_EXTRACT_OP = 57562
const JSON_UNQUOTE_EXTRACT_OP = 57563
const CREATE = 57564
const ALTER = 57565
const DROP = 57566
const RENAME = 57567
const ANALYZE = 57568
const ADD = 57569
const FLUSH = 57570
const CHANGE = 57571
const MODIFY = 57572
const DEALLOCATE = 57573
const REVERT = 57574
const QUERIES = 57575
const SCHEMA = 57576
const TABLE = 57577
const INDEX = 57578
const VIEW = 57579
const TO = 57580
const IGNORE = 57581
const IF = 57582
const PRIMARY = 57583
const COLUMN = 57584
const SPATIAL = 57585
const FULLTEXT = 57586
const KEY_BLOCK_SIZE = 57587
const CHECK = 57588
const INDEXES = 57589
const ACTION = 57590
const CASCADE = 57591
const CONSTRAINT = 57592
const FOREIGN = 57593
const NO = 57594
const REFERENCES = 57595
const RESTRICT = 57596
const SHOW = 57597
const DESCRIBE = 57598
const EXPLAIN = 57599
const DATE = 57600
const ESCAPE = 57601
const REPAIR = 57602
const OPTIMIZE = 57603
const TRUNCATE = 57604
const COALESCE = 57605
const EXCHANGE = 57606
const REBUILD = 57607
const PARTITIONING = 57608
const REMOVE = 57609
const PREPARE = 57610
const EXECUTE = 57611
const MAXVALUE = 57612
const PARTITION = 57613
const REORGANIZE = 57614
const LESS = 57615
const THAN = 57616
const PROCEDURE = 57617
const TRIGGER = 57618
const VINDEX = 57619
const VINDEXES = 57620
const DIRECTORY = 57621
const NAME = 57622
const UPGRADE = 57623
const STATUS = 57624
const VARIABLES = 57625
const WARNINGS = 57626
const CASCADED = 57627
const DEFINER = 57628
const OPTION = 57629
const SQL = 57630
const UNDEFINED = 57631
const SEQUENCE = 57632
const MERGE = 57633
const TEMPORARY = 57634
const TEMPTABLE = 57635
const INVOKER = 57636
const SECURITY = 57637
const FIRST = 57638
const AFTER = 57639
const LAST = 57640
const VITESS_MIGRATION = 57641
const CANCEL = 57642
const RETRY = 57643
const LAUNCH = 57644
const COMPLETE = 57645
const CLEANUP = 57646
const THROTTLE = 57647
const UNTHROTTLE = 57648
const FORCE_CUTOVER = 57649
const EXPIRE = 57650
const RATIO = 57651
const VITESS_THROTTLER = 57652
const BEGIN = 57653
const START = 57654
const TRANSACTION = 57655
const COMMIT = 57656
const ROLLBACK = 57657
const SAVEPOINT = 57658
const RELEASE = 57659
const WORK = 57660
const CONSISTENT = 57661
const SNAPSHOT = 57662
const BIT = 57663
const TINYINT = 57664
const SMALLINT = 57665
const MEDIUMINT = 57666
const INT = 57667
const INTEGER = 57668
const BIGINT = 57669
const INTNUM = 57670
const REAL = 57671
const DOUBLE = 57672
const FLOAT_TYPE = 57673
const FLOAT4_TYPE = 57674
const FLOAT8_TYPE = 57675
const DECIMAL_TYPE = 57676
const NUMERIC = 57677
const TIME = 57678
const TIMESTAMP = 57679
const DATETIME = 57680
const YEAR = 57681
const CHAR = 57682
const VARCHAR = 57683
const BOOL = 57684
const CHARACTER = 57685
const VARBINARY = 57686
const NCHAR = 57687
const TEXT = 57688
const TINYTEXT = 57689
const MEDIUMTEXT = 57690
const LONGTEXT = 57691
const BLOB = 57692
const TINYBLOB = 57693
const MEDIUMBLOB = 57694
const LONGBLOB = 57695
const JSON = 57696
const JSON_SCHEMA_VALID = 57697
const JSON_SCHEMA_VALIDATION_REPORT = 57698
const ENUM = 57699
const GEOMETRY = 57700
const POINT = 57701
const LINESTRING = 57702
const POLYGON = 57703
const GEOMCOLLECTION = 57704
const GEOMETRYCOLLECTION = 57705
const MULTIPOINT = 57706
const MULTILINESTRING = 57707
const MULTIPOLYGON = 57708
const ASCII = 57709
const UNICODE = 57710
const NULLX = 57711
const AUTO_INCREMENT = 57712
const APPROXNUM = 57713
const SIGNED = 57714
const UNSIGNED = 57715
const ZEROFILL = 57716
const PURGE = 57717
const BEFORE = 57718
const CODE = 57719
const COLLATION = 57720
const COLUMNS = 57721
const DATABASES = 57722
const ENGINES = 57723
const EVENT = 57724
const EXTENDED = 57725
const FIELDS = 57726
const FULL = 57727
const FUNCTION = 57728
const GTID_EXECUTED = 57729
const KEYSPACES = 57730
const OPEN = 57731
const PLUGINS = 57732
const PRIVILEGES = 57733
const PROCESSLIST = 57734
const SCHEMAS = 57735
const TABLES = 57736
const TRIGGERS = 57737
const USER = 57738
const VGTID_EXECUTED = 57739
const VITESS_KEYSPACES = 57740
const VITESS_METADATA = 57741
const VITESS_MIGRATIONS = 57742
const VITESS_REPLICATION_STATUS = 57743
const VITESS_SHARDS = 57744
const VITESS_TABLETS = 57745
const VITESS_TARGET = 57746
const VSCHEMA = 57747
const VITESS_THROTTLED_APPS = 57748
const NAMES = 57749
const GLOBAL = 57750
const SESSION = 57751
const ISOLATION = 57752
const LEVEL = 57753
const READ = 57754
const WRITE = 57755
const ONLY = 57756
const REPEATABLE = 57757
const COMMITTED = 57758
const UNCOMMITTED = 57759
const SERIALIZABLE = 57760
const ADDDATE = 57761
const CURRENT_TIMESTAMP = 57762
const DATABASE = 57763
const CURRENT_DATE = 57764
const CURDATE = 57765
const DATE_ADD = 57766
const DATE_SUB = 57767
const NOW = 57768
const SUBDATE = 57769
const CURTIME = 57770
const CURRENT_TIME = 57771
const LOCALTIME = 57772
const LOCALTIMESTAMP = 57773
const CURRENT_USER = 57774
const UTC_DATE = 57775
const UTC_TIME = 57776
const UTC_TIMESTAMP = 57777
const SYSDATE = 57778
const DAY = 57779
const DAY_HOUR = 57780
const DAY_MICROSECOND = 57781
const DAY_MINUTE = 57782
const DAY_SECOND = 57783
const HOUR = 57784
const HOUR_MICROSECOND = 57785
const HOUR_MINUTE = 57786
const HOUR_SECOND = 57787
const MICROSECOND = 57788
const MINUTE = 57789
const MINUTE_MICROSECOND = 57790
const MINUTE_SECOND = 57791
const MONTH = 57792
const QUARTER = 57793
const SECOND = 57794
const SECOND_MICROSECOND = 57795
const YEAR_MONTH = 57796
const WEEK = 57797
const SQL_TSI_DAY = 57798
const SQL_TSI_WEEK = 57799
const SQL_TSI_HOUR = 57800
const SQL_TSI_MINUTE = 57801
const SQL_TSI_MONTH = 57802
const SQL_TSI_QUARTER = 57803
const SQL_TSI_SECOND = 57804
const SQL_TSI_MICROSECOND = 57805
const SQL_TSI_YEAR = 57806
const REPLACE = 57807
const CONVERT = 57808
const CAST = 57809
const SUBSTR = 57810
const SUBSTRING = 57811
const MID = 57812
const SEPARATOR = 57813
const TIMESTAMPADD = 57814
const TIMESTAMPDIFF = 57815
const WEIGHT_STRING = 57816
const LTRIM = 57817
const RTRIM = 57818
const TRIM = 57819
const JSON_ARRAY = 57820
const JSON_OBJECT = 57821
const JSON_QUOTE = 57822
const JSON_DEPTH = 57823
const JSON_TYPE = 57824
const JSON_LENGTH = 57825
const JSON_VALID = 57826
const JSON_ARRAY_APPEND = 57827
const JSON_ARRAY_INSERT = 57828
const JSON_INSERT = 57829
const JSON_MERGE = 57830
const JSON_MERGE_PATCH = 57831
const JSON_MERGE_PRESERVE = 57832
const JSON_REMOVE = 57833
const JSON_REPLACE = 57834
const JSON_SET = 57835
const JSON_UNQUOTE = 57836
const COUNT = 57837
const AVG = 57838
const MAX = 57839
const MIN = 57840
const SUM = 57841
const GROUP_CONCAT = 57842
const BIT_AND = 57843
const BIT_OR = 57844
const BIT_XOR = 57845
const STD = 57846
const STDDEV = 57847
const STDDEV_POP = 57848
const STDDEV_SAMP = 57849
const VAR_POP = 57850
const VAR_SAMP = 57851
const VARIANCE = 57852
const ANY_VALUE = 57853
const REGEXP_INSTR = 57854
const REGEXP_LIKE = 57855
const REGEXP_REPLACE = 57856
const REGEXP_SUBSTR = 57857
const ExtractValue = 57858
const UpdateXML = 57859
const GET_LOCK = 57860
const RELEASE_LOCK = 57861
const RELEASE_ALL_LOCKS = 57862
const IS_FREE_LOCK = 57863
const IS_USED_LOCK = 57864
const LOCATE = 57865
const POSITION = 57866
const ST_GeometryCollectionFromText = 57867
const ST_GeometryFromText = 57868
const ST_LineStringFromText = 57869
const ST_MultiLineStringFromText = 57870
const ST_MultiPointFromText = 57871
const ST_MultiPolygonFromText = 57872
const ST_PointFromText = 57873
const ST_PolygonFromText = 57874
const ST_GeometryCollectionFromWKB = 57875
const ST_GeometryFromWKB = 57876
const ST_LineStringFromWKB = 57877
const ST_MultiLineStringFromWKB = 57878
const ST_MultiPointFromWKB = 57879
const ST_MultiPolygonFromWKB = 57880
const ST_PointFromWKB = 57881
const ST_PolygonFromWKB = 57882
const ST_AsBinary = 57883
const ST_AsText = 57884
const ST_Dimension = 57885
const ST_Envelope = 57886
const ST_IsSimple = 57887
const ST_IsEmpty = 57888
const ST_GeometryType = 57889
const ST_X = 57890
const ST_Y = 57891
const ST_Latitude = 57892
const ST_Longitude = 57893
const ST_EndPoint = 57894
const ST_IsClosed = 57895
const ST_Length = 57896
const ST_NumPoints = 57897
const ST_StartPoint = 57898
const ST_PointN = 57899
const ST_Area = 57900
const ST_Centroid = 57901
const ST_ExteriorRing = 57902
const ST_InteriorRingN = 57903
const ST_NumInteriorRings = 57904
const ST_NumGeometries = 57905
const ST_GeometryN = 57906
const ST_LongFromGeoHash = 57907
const ST_PointFromGeoHash = 57908
const ST_LatFromGeoHash = 57909
const ST_GeoHash = 57910
const ST_AsGeoJSON = 57911
const ST_GeomFromGeoJSON = 57912
const MATCH = 57913
const AGAINST = 57914
const BOOLEAN = 57915
const LANGUAGE = 57916
const WITH = 57917
const QUERY = 57918
const EXPANSION = 57919
const WITHOUT = 57920
const VALIDATION = 57921
const ROLLUP = 57922
const UNUSED = 57923
const ARRAY = 57924
const BYTE = 57925
const CUME_DIST = 57926
const DESCRIPTION = 57927
const DENSE_RANK = 57928
const EMPTY = 57929
const EXCEPT = 57930
const FIRST_VALUE = 57931
const GROUPING = 57932
const GROUPS = 57933
const JSON_TABLE = 57934
const LAG = 57935
const LAST_VALUE = 57936
const LATERAL = 57937
const LEAD = 57938
const NTH_VALUE = 57939
const NTILE = 57940
const OF = 57941
const OVER = 57942
const PERCENT_RANK = 57943
const RANK = 57944
const RECURSIVE = 57945
const ROW_NUMBER = 57946
const SYSTEM = 57947
const WINDOW = 57948
const ACTIVE = 57949
const ADMIN = 57950
const AUTOEXTEND_SIZE = 57951
const BUCKETS = 57952
const CLONE = 57953
const COLUMN_FORMAT = 57954
const COMPONENT = 57955
const DEFINITION = 57956
const ENFORCED = 57957
const ENGINE_ATTRIBUTE = 57958
const EXCLUDE = 57959
const FOLLOWING = 57960
const GET_MASTER_PUBLIC_KEY = 57961
const HISTOGRAM = 57962
const HISTORY = 57963
const INACTIVE = 57964
const INVISIBLE = 57965
const LOCKED = 57966
const MASTER_COMPRESSION_ALGORITHMS = 57967
const MASTER_PUBLIC_KEY_PATH = 57968
const MASTER_TLS_CIPHERSUITES = 57969
const MASTER_ZSTD_COMPRESSION_LEVEL = 57970
const NESTED = 57971
const NETWORK_NAMESPACE = 57972
const NOWAIT = 57973
const NULLS = 57974
const OJ = 57975
const OLD = 57976
const OPTIONAL = 57977
const ORDINALITY = 57978
const ORGANIZATION = 57979
const OTHERS = 57980
const PARTIAL = 57981
const PATH = 57982
const PERSIST = 57983
const PERSIST_ONLY = 57984
const PRECEDING = 57985
const PRIVILEGE_CHECKS_USER = 57986
const PROCESS = 57987
const RANDOM = 57988
const REFERENCE = 57989
const REQUIRE_ROW_FORMAT = 57990
const RESOURCE = 57991
const RESPECT = 57992
const RESTART = 57993
const RETAIN = 57994
const REUSE = 57995
const ROLE = 57996
const SECONDARY = 57997
const SECONDARY_ENGINE = 57998
const SECONDARY_ENGINE_ATTRIBUTE = 57999
const SECONDARY_LOAD = 58000
const SECONDARY_UNLOAD = 58001
const SIMPLE = 58002
const SKIP = 58003
const SRID = 58004
const THREAD_PRIORITY = 58005
const TIES = 58006
const UNBOUNDED = 58007
const VCPU = 58008
const VISIBLE = 58009
const RETURNING = 58010
const FORMAT_BYTES = 58011
const FORMAT_PICO_TIME = 58012
const PS_CURRENT_THREAD_ID = 58013
const PS_THREAD_ID = 58014
const GTID_SUBSET = 58015
const GTID_SUBTRACT = 58016
const WAIT_FOR_EXECUTED_GTID_SET = 58017
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 58018
const FORMAT = 58019
const TREE = 58020
const VITESS = 58021
const TRADITIONAL = 58022
const VTEXPLAIN = 58023
const VEXPLAIN = 58024
const PLAN = 58025
const LOCAL = 58026
const LOW_PRIORITY = 58027
const NO_WRITE_TO_BINLOG = 58028
const LOGS = 58029
const ERROR = 58030
const GENERAL = 58031
const HOSTS = 58032
const OPTIMIZER_COSTS = 58033
const USER_RESOURCES = 58034
const SLOW = 58035
const CHANNEL = 58036
const RELAY = 58037
const EXPORT = 58038
const CURRENT = 58039
const ROW = 58040
const ROWS = 58041
const AVG_ROW_LENGTH = 58042
const CONNECTION = 58043
const CHECKSUM = 58044
const DELAY_KEY_WRITE = 58045
const ENCRYPTION = 58046
const ENGINE = 58047
const INSERT_METHOD = 58048
const MAX_ROWS = 58049
const MIN_ROWS = 58050
const PACK_KEYS = 58051
const PASSWORD = 58052
const FIXED = 58053
const DYNAMIC = 58054
const COMPRESSED = 58055
const REDUNDANT = 58056
const COMPACT = 58057
const ROW_FORMAT = 58058
const STATS_AUTO_RECALC = 58059
const STATS_PERSISTENT = 58060
const STATS_SAMPLE_PAGES = 58061
const STORAGE = 58062
const MEMORY = 58063
const DISK = 58064
const PARTITIONS = 58065
const LINEAR = 58066
const RANGE = 58067
const LIST = 58068
const SUBPARTITION = 58069
const SUBPARTITIONS = 58070
const HASH = 58071

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"MULTIPLE_TEXT_LITERAL",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"ANY_SOME",
	"SELECT_OPTIONS",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"ALL",
	"ANY",
	"SOME",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"HIGH_PRIORITY",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"SQL_BUFFER_RESULT",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"EXTRACT",
	"NULL",
	"UNKNOWN",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"KILL",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"ASSIGNMENT_OPT",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"FORCE_CUTOVER",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"PURGE",
	"BEFORE",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ADDDATE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURDATE",
	"DATE_ADD",
	"DATE_SUB",
	"NOW",
	"SUBDATE",
	"CURTIME",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"SYSDATE",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_HOUR",
	"SQL_TSI_MINUTE",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_SECOND",
	"SQL_TSI_MICROSECOND",
	"SQL_TSI_YEAR",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"MID",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"ANY_VALUE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"ST_GeometryCollectionFromText",
	"ST_GeometryFromText",
	"ST_LineStringFromText",
	"ST_MultiLineStringFromText",
	"ST_MultiPointFromText",
	"ST_MultiPolygonFromText",
	"ST_PointFromText",
	"ST_PolygonFromText",
	"ST_GeometryCollectionFromWKB",
	"ST_GeometryFromWKB",
	"ST_LineStringFromWKB",
	"ST_MultiLineStringFromWKB",
	"ST_MultiPointFromWKB",
	"ST_MultiPolygonFromWKB",
	"ST_PointFromWKB",
	"ST_PolygonFromWKB",
	"ST_AsBinary",
	"ST_AsText",
	"ST_Dimension",
	"ST_Envelope",
	"ST_IsSimple",
	"ST_IsEmpty",
	"ST_GeometryType",
	"ST_X",
	"ST_Y",
	"ST_Latitude",
	"ST_Longitude",
	"ST_EndPoint",
	"ST_IsClosed",
	"ST_Length",
	"ST_NumPoints",
	"ST_StartPoint",
	"ST_PointN",
	"ST_Area",
	"ST_Centroid",
	"ST_ExteriorRing",
	"ST_InteriorRingN",
	"ST_NumInteriorRings",
	"ST_NumGeometries",
	"ST_GeometryN",
	"ST_LongFromGeoHash",
	"ST_PointFromGeoHash",
	"ST_LatFromGeoHash",
	"ST_GeoHash",
	"ST_AsGeoJSON",
	"ST_GeomFromGeoJSON",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ROLLUP",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	16, 49,
	17, 49,
	-2, 40,
	-1, 52,
	1, 157,
	747, 157,
	-2, 165,
	-1, 53,
	148, 165,
	190, 165,
	360, 165,
	-2, 523,
	-1, 61,
	38, 778,
	253, 778,
	264, 778,
	299, 792,
	300, 792,
	-2, 780,
	-1, 66,
	255, 816,
	-2, 814,
	-1, 122,
	252, 1613,
	-2, 131,
	-1, 124,
	1, 158,
	747, 158,
	-2, 165,
	-1, 135,
	149, 408,
	258, 408,
	-2, 512,
	-1, 154,
	148, 165,
	190, 165,
	360, 165,
	-2, 532,
	-1, 742,
	176, 41,
	-2, 43,
	-1, 951,
	95, 1630,
	-2, 1474,
	-1, 952,
	95, 1631,
	235, 1635,
	-2, 1475,
	-1, 953,
	235, 1634,
	-2, 42,
	-1, 1037,
	65, 888,
	-2, 901,
	-1, 1125,
	263, 1101,
	268, 1101,
	-2, 419,
	-1, 1210,
	1, 580,
	747, 580,
	-2, 165,
	-1, 1517,
	235, 1635,
	-2, 1475,
	-1, 1730,
	65, 889,
	-2, 905,
	-1, 1731,
	65, 890,
	-2, 906,
	-1, 1791,
	148, 165,
	190, 165,
	360, 165,
	-2, 458,
	-1, 1872,
	149, 408,
	258, 408,
	-2, 512,
	-1, 1881,
	263, 1102,
	268, 1102,
	-2, 420,
	-1, 2327,
	235, 1639,
	-2, 1633,
	-1, 2328,
	235, 1635,
	-2, 1631,
	-1, 2431,
	148, 165,
	190, 165,
	360, 165,
	-2, 459,
	-1, 2438,
	28, 186,
	-2, 188,
	-1, 2898,
	86, 96,
	96, 96,
	-2, 968,
	-1, 2967,
	722, 701,
	-2, 675,
	-1, 3191,
	55, 1578,
	-2, 1572,
	-1, 4029,
	722, 701,
	-2, 689,
	-1, 4121,
	98, 633,
	104, 633,
	114, 633,
	192, 633,
	193, 633,
	194, 633,
	195, 633,
	196, 633,
	197, 633,
	198, 633,
	199, 633,
	200, 633,
	201, 633,
	202, 633,
	203, 633,
	204, 633,
	205, 633,
	206, 633,
	207, 633,
	208, 633,
	209, 633,
	210, 633,
	211, 633,
	212, 633,
	213, 633,
	214, 633,
	215, 633,
	216, 633,
	217, 633,
	218, 633,
	219, 633,
	220, 633,
	221, 633,
	222, 633,
	223, 633,
	224, 633,
	225, 633,
	226, 633,
	227, 633,
	228, 633,
	229, 633,
	230, 633,
	231, 633,
	232, 633,
	233, 633,
	-2, 2010,
}

const yyPrivate = 57344

const yyLast = 55891

var yyAct = [...]int{
	967, 3680, 3681, 87, 3679, 4010, 4164, 4196, 4100, 955,
	4119, 2132, 3343, 2356, 3992, 4209, 4088, 1276, 4163, 1278,
	962, 3629, 954, 2120, 3243, 2428, 3250, 3292, 2058, 3204,
	3915, 5, 3479, 3301, 3306, 920, 3303, 3302, 42, 3300,
	3305, 3304, 3990, 3616, 3142, 3057, 3321, 2502, 2002, 746,
	3258, 2358, 3320, 3208, 3205, 3519, 3525, 3031, 3722, 2383,
	3056, 3202, 2858, 3192, 3509, 2932, 740, 916, 741, 1850,
	774, 1794, 2465, 3013, 915, 3323, 2470, 2933, 3350, 4061,
	2490, 2964, 1750, 2934, 2533, 1055, 1035, 163, 87, 2402,
	2416, 1087, 1032, 2883, 43, 2403, 2399, 2864, 1897, 2404,
	1062, 2850, 3005, 2116, 1133, 2511, 1157, 1035, 41, 2312,
	3547, 2834, 2280, 2489, 2066, 149, 2154, 2279, 2391, 2472,
	2925, 1034, 1097, 1038, 2550, 1120, 1879, 1115, 104, 1783,
	2900, 1763, 1530, 100, 2406, 105, 1711, 2160, 2091, 2080,
	1455, 1440, 1057, 2871, 1998, 3207, 1886, 756, 1094, 1091,
	1978, 2487, 1126, 1095, 2461, 1121, 1122, 1782, 1072, 2462,
	1074, 1123, 751, 1768, 1044, 1733, 1513, 3717, 99, 2832,
	1489, 1041, 2187, 2168, 85, 1266, 107, 2057, 2010, 167,
	3709, 127, 1040, 1054, 2384, 125, 126, 3480, 132, 1871,
	133, 3536, 1206, 733, 1067, 1042, 1039, 750, 93, 1534,
	98, 744, 4197, 3617, 3289, 1274, 2504, 2955, 1252, 1539,
	917, 4045, 2548, 1066, 84, 2504, 2505, 2506, 2987, 2986,
	1456, 3609, 1029, 106, 1963, 4146, 3021, 3022, 4040, 4041,
	2353, 2354, 128, 1047, 2073, 3572, 2072, 4046, 2071, 3684,
	2070, 1137, 1162, 134, 2069, 1088, 678, 2068, 2041, 1222,
	675, 2830, 676, 2599, 743, 4140, 3188, 4167, 1159, 3146,
	4219, 4162, 3684, 1170, 4187, 3483, 734, 3482, 2380, 1048,
	2535, 1176, 1177, 1178, 2379, 1181, 1182, 1183, 1184, 1081,
	1472, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195,
	1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1136, 2,
	1033, 1082, 1744, 3311, 128, 1056, 1111, 1451, 1031, 4019,
	1110, 1109, 2957, 1112, 95, 95, 95, 1163, 1166, 1167,
	2537, 2860, 2980, 3311, 1099, 1754, 3993, 2795, 1466, 4041,
	718, 1752, 2078, 718, 2094, 3683, 3308, 1030, 1104, 2377,
	4202, 4150, 4148, 3369, 111, 112, 113, 1028, 116, 4115,
	3911, 122, 1179, 3910, 191, 1755, 2977, 670, 3683, 712,
	1161, 1753, 921, 3309, 2536, 4201, 4149, 4147, 95, 731,
	732, 3622, 128, 1160, 3623, 4177, 1223, 3921, 712, 1023,
	1024, 1025, 1026, 3309, 4144, 86, 1037, 3641, 3630, 1442,
	4089, 4097, 3315, 3920, 86, 970, 971, 972, 1080, 1084,
	919, 1113, 86, 2530, 1080, 1084, 919, 2125, 2874, 4124,
	3395, 1860, 3315, 2606, 1069, 1070, 970, 971, 972, 2909,
	3239, 709, 2908, 2831, 2994, 2910, 2995, 1784, 1469, 1785,
	1470, 1471, 1108, 4129, 1215, 1216, 2875, 1462, 3240, 3241,
	1454, 2423, 2424, 2050, 2051, 3736, 712, 2481, 4101, 3020,
	2603, 3640, 712, 4127, 1103, 2422, 3004, 1105, 1271, 1242,
	1021, 1020, 1468, 4133, 4134, 1230, 1218, 4011, 95, 694,
	1231, 2475, 3260, 3261, 1243, 1236, 1230, 95, 1229, 4128,
	1228, 1231, 692, 2604, 2006, 95, 2921, 2441, 2440, 3347,
	1106, 3078, 3345, 2867, 2868, 3377, 3375, 2597, 712, 1456,
	2049, 86, 712, 2355, 88, 726, 3312, 4024, 712, 3006,
	2053, 4168, 730, 724, 3351, 1953, 1452, 1780, 1715, 712,
	2965, 3338, 689, 3963, 4105, 3964, 3312, 2512, 2990, 3339,
	1205, 704, 4169, 2575, 2555, 2576, 2557, 2577, 1979, 2551,
	1180, 4199, 1245, 1246, 1263, 4105, 699, 1268, 1251, 1211,
	3611, 2387, 1441, 3008, 1247, 1248, 1108, 702, 1100, 1954,
	3610, 1955, 2387, 2578, 2196, 1102, 1101, 1186, 1270, 1244,
	1237, 713, 1490, 1185, 1269, 1135, 2554, 2600, 3895, 2601,
	2553, 3259, 3348, 1146, 95, 3346, 1718, 2515, 1504, 2556,
	713, 2558, 2152, 3262, 3366, 3688, 1491, 1492, 1493, 1494,
	1495, 1496, 1497, 1499, 1498, 1500, 1501, 1466, 1144, 1116,
	1135, 3607, 2400, 1117, 1106, 1117, 1155, 1154, 1153, 1107,
	1152, 1151, 2007, 2474, 1150, 679, 1149, 681, 695, 1148,
	715, 1143, 714, 685, 1073, 683, 687, 696, 688, 1864,
	682, 1156, 693, 4220, 3262, 684, 697, 698, 701, 705,
	706, 707, 703, 700, 4141, 691, 716, 3079, 713, 1249,
	1092, 1885, 2188, 1504, 713, 1129, 4174, 2190, 1092, 1250,
	3145, 2195, 2191, 1128, 3025, 2192, 2193, 2194, 1134, 2958,
	2189, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205,
	2144, 2133, 2134, 2135, 2136, 2146, 2137, 2138, 2139, 2151,
	2147, 2140, 2141, 2148, 2149, 2150, 2142, 2143, 2145, 1275,
	713, 1275, 1275, 1134, 713, 3522, 1462, 1092, 1999, 3173,
	713, 1090, 1083, 1077, 1075, 2488, 3606, 1068, 1083, 1077,
	1075, 713, 1147, 1461, 1458, 1459, 1460, 1465, 1467, 1464,
	3009, 1463, 2541, 1107, 2385, 2386, 2534, 1781, 2540, 2621,
	1995, 1457, 1443, 1173, 3171, 2385, 2386, 1145, 3282, 1035,
	1514, 1519, 1520, 2989, 1523, 1525, 1526, 1527, 1528, 1529,
	1884, 1532, 1533, 1535, 1535, 2992, 1535, 1535, 1540, 1540,
	1540, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551,
	1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561,
	1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571,
	1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581,
	1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591,
	1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601,
	1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611,
	1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621,
	1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631,
	1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641,
	1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651,
	1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661,
	1662, 1663, 1664, 1665, 1666, 4018, 1511, 1264, 2956, 1667,
	3682, 1669, 1670, 1671, 1672, 1673, 1434, 1435, 1965, 1964,
	1966, 1967, 1968, 1540, 1540, 1540, 1540, 1540, 1540, 3570,
	3571, 717, 1114, 3682, 968, 968, 968, 1433, 1680, 1681,
	1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691,
	1692, 1693, 710, 2478, 1507, 1508, 1509, 1510, 4064, 3639,
	2923, 3467, 2979, 4132, 1521, 94, 1450, 711, 1858, 1708,
	1515, 89, 4103, 1536, 94, 1537, 1538, 3313, 3314, 2605,
	2959, 2604, 94, 1240, 1209, 1135, 1135, 1857, 1541, 1542,
	3317, 1856, 2975, 4103, 2479, 1214, 3012, 3313, 3314, 1076,
	1996, 2477, 1227, 1705, 4102, 1076, 2978, 4131, 1854, 1217,
	3317, 3367, 1461, 1458, 1459, 1460, 1465, 1467, 1464, 1524,
	1463, 3523, 1221, 1714, 669, 4102, 3003, 1165, 2532, 3002,
	1457, 4142, 1035, 1128, 4006, 2480, 1035, 1164, 1259, 3561,
	1261, 1743, 1035, 2835, 2837, 2476, 3543, 3246, 2564, 2560,
	2562, 2563, 2561, 2565, 2566, 2567, 1226, 2905, 1232, 1233,
	1234, 1235, 3154, 909, 1505, 1506, 2870, 1722, 2807, 2128,
	2865, 1726, 1983, 1772, 1668, 1984, 1706, 1034, 1258, 1260,
	1220, 94, 1272, 1273, 1135, 3153, 677, 2429, 1134, 1134,
	86, 44, 45, 88, 4213, 1128, 1131, 1132, 3247, 1092,
	1504, 1501, 124, 1125, 1129, 3238, 2632, 1744, 1484, 92,
	1051, 2169, 1253, 48, 76, 77, 1267, 74, 78, 193,
	1724, 4032, 673, 3249, 104, 1158, 3602, 1725, 2170, 75,
	119, 105, 1674, 1675, 1676, 1677, 1678, 1679, 3535, 2552,
	2062, 3052, 673, 3244, 1706, 1108, 1204, 1992, 1786, 2161,
	2161, 3015, 2641, 2011, 2948, 1712, 3014, 4178, 1045, 1471,
	1699, 62, 3260, 3261, 1135, 3731, 3015, 1135, 1172, 3245,
	3577, 3014, 107, 95, 3576, 1065, 1065, 1496, 1497, 1499,
	1498, 1500, 1501, 1472, 673, 1256, 2519, 1134, 1894, 1257,
	2632, 1470, 1471, 1128, 1131, 1132, 1893, 1092, 1239, 1262,
	1225, 1125, 1129, 3251, 1883, 2524, 2524, 120, 1746, 1241,
	1208, 2529, 2527, 1709, 1720, 1877, 2836, 4170, 1472, 1861,
	1862, 1863, 1124, 83, 1255, 1146, 1980, 1144, 1981, 3562,
	1721, 1982, 1046, 4221, 2531, 1870, 1887, 1887, 4215, 1749,
	2004, 1948, 1899, 3636, 1900, 3637, 1902, 1904, 2528, 2526,
	1908, 1910, 1912, 1914, 1916, 3903, 1033, 1031, 3902, 1930,
	1889, 3893, 4065, 1275, 1777, 1778, 2167, 1134, 1472, 1254,
	1134, 3259, 1138, 1128, 2155, 1138, 1128, 1140, 1845, 1888,
	1140, 1141, 1139, 3262, 1141, 1139, 1938, 1939, 1973, 2096,
	1135, 1853, 1944, 1945, 1988, 1210, 1986, 1987, 1985, 1989,
	1990, 1991, 1142, 2097, 1502, 1503, 2095, 1868, 1867, 1866,
	2012, 4066, 3653, 1880, 1744, 3652, 1207, 51, 54, 57,
	56, 59, 2166, 73, 3998, 4211, 82, 79, 4212, 4222,
	4210, 1469, 1107, 1470, 1471, 3584, 1727, 3032, 1494, 1495,
	1496, 1497, 1499, 1498, 1500, 1501, 3583, 1891, 3573, 736,
	61, 91, 90, 1224, 3290, 71, 72, 58, 1934, 1972,
	4183, 1744, 2000, 80, 81, 3278, 1469, 2930, 1470, 1471,
	1472, 1723, 1971, 3999, 1926, 3054, 2929, 1929, 2928, 1931,
	1492, 1493, 1494, 1495, 1496, 1497, 1499, 1498, 1500, 1501,
	128, 1472, 1111, 1134, 2484, 1171, 1110, 1109, 1960, 1168,
	3248, 970, 971, 972, 1859, 190, 63, 64, 1974, 65,
	66, 67, 68, 1958, 1957, 1956, 1469, 2017, 1470, 1471,
	1946, 3034, 2084, 2085, 2082, 2083, 1940, 1937, 129, 2084,
	2085, 2611, 2612, 1275, 1275, 1936, 2317, 2013, 2014, 2039,
	2314, 1935, 1906, 1970, 172, 1719, 718, 87, 2081, 2316,
	87, 2018, 3567, 2317, 718, 1472, 3342, 1437, 2025, 2026,
	2027, 1780, 4181, 1744, 1744, 966, 1472, 4171, 2038, 1959,
	60, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1499, 1498,
	1500, 1501, 42, 4111, 1744, 42, 2912, 2500, 718, 2499,
	2914, 4027, 3044, 3043, 3042, 4026, 101, 3036, 4002, 3040,
	1472, 3035, 103, 3033, 169, 4001, 102, 170, 3038, 1478,
	1479, 1480, 1481, 1482, 1483, 1477, 1474, 3037, 1469, 4000,
	1470, 1471, 3898, 1472, 2668, 3882, 2123, 2123, 2121, 2121,
	2124, 3881, 2498, 189, 2497, 3039, 3041, 2637, 2496, 1469,
	2495, 1470, 1471, 3730, 2086, 2856, 4198, 4109, 1744, 4158,
	1744, 1490, 2680, 1757, 1486, 3728, 1487, 3649, 4107, 1744,
	89, 1705, 1468, 1744, 4020, 190, 1490, 1744, 3024, 1704,
	1488, 1502, 1503, 1485, 2207, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1499, 1498, 1500, 1501, 2856, 1744, 129, 1472,
	1491, 1492, 1493, 1494, 1495, 1496, 1497, 1499, 1498, 1500,
	1501, 1703, 1758, 1469, 172, 1470, 1471, 1468, 1744, 2856,
	4096, 3384, 1702, 2015, 1469, 2636, 1470, 1471, 85, 3581,
	2019, 85, 2021, 2022, 2023, 2024, 3566, 2063, 3352, 2028,
	2856, 4075, 1472, 2093, 1706, 2856, 4071, 3930, 2046, 2047,
	3349, 2040, 3252, 3281, 2156, 101, 3256, 173, 1469, 1472,
	1470, 1471, 3929, 3255, 3280, 102, 179, 2098, 3983, 1744,
	3620, 4017, 3906, 1744, 169, 2856, 3894, 170, 3620, 1744,
	94, 1469, 110, 1470, 1471, 2939, 1490, 2856, 3618, 95,
	2926, 2127, 1744, 109, 1701, 108, 2325, 3257, 2327, 1694,
	2100, 2588, 3253, 189, 2524, 1744, 1472, 3254, 2682, 2231,
	1491, 1492, 1493, 1494, 1495, 1496, 1497, 1499, 1498, 1500,
	1501, 1472, 3541, 1744, 2630, 2587, 1744, 2326, 2171, 2172,
	2173, 2174, 2392, 2393, 2629, 1515, 3886, 2315, 2313, 2762,
	1744, 103, 2185, 673, 2206, 673, 1490, 1469, 2620, 1470,
	1471, 3925, 2099, 2162, 2101, 2102, 2103, 2104, 2105, 2106,
	2108, 2110, 2111, 2112, 2113, 2114, 2115, 2546, 1744, 3885,
	1491, 1492, 1493, 1494, 1495, 1496, 1497, 1499, 1498, 1500,
	1501, 1472, 3271, 3270, 3268, 3269, 3628, 70, 2408, 2545,
	1469, 164, 1470, 1471, 2324, 3266, 3267, 2330, 2331, 2382,
	2325, 104, 2327, 3266, 3265, 673, 1744, 1469, 105, 1470,
	1471, 2361, 1472, 3976, 1744, 2880, 1744, 173, 1490, 1472,
	2604, 2988, 104, 2410, 2901, 1472, 179, 1849, 2969, 105,
	2438, 2397, 1472, 1518, 2962, 2963, 2856, 2855, 1472, 2223,
	2372, 2360, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1499,
	1498, 1500, 1501, 1472, 1469, 2042, 1470, 1471, 2092, 1761,
	1097, 2126, 1744, 2872, 2008, 1969, 2853, 1961, 1951, 1469,
	1947, 1470, 1471, 3974, 1744, 2447, 2448, 2449, 2450, 2442,
	103, 2443, 2444, 2445, 2446, 2348, 2901, 1943, 1942, 2432,
	1047, 1941, 2902, 1097, 2433, 1849, 1848, 2453, 2454, 2455,
	2456, 1759, 2904, 2414, 3971, 1744, 1472, 1265, 2373, 1792,
	1791, 3953, 1744, 3538, 1472, 2872, 2966, 2366, 1744, 2367,
	2944, 109, 1472, 2375, 3508, 1744, 1472, 2467, 2436, 1469,
	1760, 1470, 1471, 2525, 1472, 2513, 2678, 3233, 2437, 2473,
	2880, 2879, 3203, 2395, 2851, 3501, 1744, 2604, 2419, 2420,
	2418, 164, 1081, 3534, 2902, 3534, 1468, 1472, 2435, 2434,
	1469, 4059, 1470, 1471, 2604, 4031, 2856, 1469, 2880, 1470,
	1471, 3487, 3268, 1469, 1082, 1470, 1471, 3176, 2510, 2483,
	1469, 3537, 1470, 1471, 2421, 2762, 1469, 2665, 1470, 1471,
	1137, 2664, 3534, 2524, 1472, 1468, 2507, 2524, 3498, 1744,
	1887, 1469, 2880, 1470, 1471, 2468, 3556, 2464, 2457, 2459,
	2460, 1472, 2390, 2482, 2486, 1744, 1748, 1472, 3496, 1744,
	2518, 2494, 1472, 2521, 2351, 2522, 3459, 1744, 2126, 2064,
	165, 2538, 2048, 1994, 1472, 1779, 1518, 177, 3585, 1119,
	2468, 2517, 2520, 2516, 1118, 4137, 2539, 1136, 2542, 3457,
	1744, 4078, 2543, 2544, 1469, 1472, 1470, 1471, 2628, 3917,
	1036, 1472, 1469, 1751, 1470, 1471, 3883, 3743, 3601, 3598,
	1469, 1472, 1470, 1471, 1469, 1922, 1470, 1471, 185, 3579,
	3400, 3399, 1469, 1851, 1470, 1471, 3453, 1744, 2466, 2609,
	3340, 1745, 1747, 3295, 673, 3586, 3587, 3588, 1035, 1035,
	1035, 2549, 3293, 3450, 1744, 1469, 1472, 1470, 1471, 3448,
	1744, 3291, 2970, 2936, 3446, 1744, 2463, 1045, 1525, 2458,
	1525, 166, 171, 168, 174, 175, 176, 178, 180, 181,
	182, 183, 1923, 1924, 1925, 2452, 2624, 184, 186, 187,
	188, 673, 1469, 95, 1470, 1471, 1209, 3444, 1744, 2451,
	1976, 2581, 3344, 3442, 1744, 1882, 2627, 1878, 2327, 1469,
	673, 1470, 1471, 3440, 1744, 1469, 1472, 1470, 1471, 1847,
	1469, 121, 1470, 1471, 1472, 110, 2935, 3548, 3549, 3589,
	3918, 2481, 1469, 2364, 1470, 1471, 109, 2326, 108, 4193,
	165, 4191, 4165, 2044, 4039, 1918, 103, 177, 3438, 1744,
	2596, 1472, 3958, 1469, 3551, 1470, 1471, 3287, 3286, 1469,
	1518, 1470, 1471, 3285, 1472, 2602, 3203, 2949, 2582, 1469,
	4035, 1470, 1471, 3225, 3223, 3554, 3553, 1472, 3226, 3224,
	2936, 2610, 3590, 3591, 3592, 3222, 3919, 1518, 185, 674,
	1518, 3221, 1518, 673, 2616, 2613, 2614, 2615, 1919, 1920,
	1921, 2381, 1707, 2093, 1469, 1756, 1470, 1471, 3436, 1744,
	2045, 1744, 3997, 1949, 2370, 1472, 3434, 1744, 3542, 2885,
	2888, 2889, 2890, 2886, 3181, 2887, 2891, 1472, 673, 3548,
	3549, 166, 171, 168, 174, 175, 176, 178, 180, 181,
	182, 183, 1472, 3503, 2003, 673, 1472, 184, 186, 187,
	188, 3227, 1049, 2889, 2890, 1472, 3499, 2640, 3180, 2618,
	1472, 673, 3721, 735, 1469, 1472, 1470, 1471, 673, 3432,
	1744, 3723, 1469, 3530, 1470, 1471, 1472, 2029, 2030, 673,
	673, 673, 673, 673, 673, 673, 2806, 1472, 2940, 1993,
	3527, 1472, 1052, 3190, 3708, 1019, 3707, 2625, 3526, 1469,
	1053, 1470, 1471, 1050, 3264, 2919, 1472, 3430, 1744, 2676,
	2574, 2617, 1469, 2619, 1470, 1471, 2794, 2573, 2838, 3428,
	1744, 2572, 2622, 2571, 2623, 1469, 2570, 1470, 1471, 2569,
	1061, 3193, 3195, 2568, 3426, 1744, 1175, 1035, 3424, 1744,
	3196, 1472, 1174, 2123, 1060, 2121, 2841, 3422, 1744, 3706,
	2590, 2591, 3420, 1744, 3360, 2593, 2935, 3406, 1744, 1472,
	2877, 2878, 3018, 1469, 2594, 1470, 1471, 1436, 3465, 2408,
	2169, 2839, 1035, 2897, 1472, 1469, 101, 1470, 1471, 3382,
	1744, 1472, 103, 2827, 1744, 2976, 102, 2170, 2876, 2842,
	1469, 2844, 1470, 1471, 1469, 42, 1470, 1471, 2825, 1744,
	129, 3532, 2857, 1469, 2894, 1470, 1471, 2896, 1469, 1472,
	1470, 1471, 103, 1469, 4207, 1470, 1471, 3283, 2092, 2089,
	2087, 2088, 1472, 2585, 1469, 4114, 1470, 1471, 1472, 4016,
	101, 3913, 110, 2800, 1744, 1469, 3263, 1470, 1471, 1469,
	102, 1470, 1471, 109, 2866, 108, 1712, 2893, 2829, 3510,
	1472, 2777, 1744, 103, 1469, 2376, 1470, 1471, 2895, 2608,
	1472, 2392, 2393, 2922, 2924, 2849, 2769, 1744, 108, 1472,
	3982, 3981, 3179, 2760, 1744, 3961, 1472, 1706, 673, 2915,
	3178, 3729, 2869, 1472, 2854, 110, 2974, 3727, 2899, 1469,
	3726, 1470, 1471, 1472, 3719, 109, 109, 3520, 108, 3599,
	1472, 2758, 1744, 3531, 1472, 3529, 2903, 1469, 3296, 1470,
	1471, 2906, 2473, 1472, 2745, 1744, 2508, 1865, 2913, 2916,
	2743, 1744, 1469, 110, 1470, 1471, 1059, 3718, 2985, 1469,
	2872, 1470, 1471, 2927, 109, 3692, 1472, 2164, 1518, 4195,
	4194, 2938, 2165, 4172, 2853, 3082, 2941, 2942, 2666, 1472,
	4194, 2937, 2741, 1744, 2362, 1773, 1518, 1469, 1765, 1470,
	1471, 2739, 1744, 4195, 2945, 2950, 2951, 2952, 2737, 1744,
	1469, 2946, 1470, 1471, 1472, 3461, 1469, 4003, 1470, 1471,
	2227, 2982, 3565, 1870, 3, 2735, 1744, 114, 115, 97,
	1, 1027, 2733, 1744, 3028, 3029, 2731, 1744, 1469, 1472,
	1470, 1471, 1439, 1438, 2981, 3397, 2971, 2972, 1469, 2061,
	1470, 1471, 10, 2059, 1472, 3569, 9, 1469, 1472, 1470,
	1471, 4126, 2060, 1472, 1469, 8, 1470, 1471, 2729, 1744,
	1472, 1469, 690, 1470, 1471, 3007, 1472, 2352, 1710, 4166,
	1472, 1469, 4015, 1470, 1471, 4122, 4123, 3045, 1469, 3026,
	1470, 1471, 1469, 1962, 1470, 1471, 3010, 1952, 3631, 2278,
	2310, 1469, 1472, 1470, 1471, 3914, 2727, 1744, 3299, 2514,
	1472, 3597, 2471, 3063, 3064, 3065, 3066, 3067, 3068, 3069,
	3070, 3071, 3072, 1472, 1469, 1127, 1470, 1471, 154, 2430,
	2342, 3396, 2003, 3080, 3046, 2431, 4091, 1469, 118, 1470,
	1471, 1085, 1472, 117, 1130, 1238, 2725, 1744, 1745, 2349,
	3388, 2983, 2509, 3621, 2920, 2723, 1744, 2439, 1798, 1796,
	1797, 1795, 1469, 3890, 1470, 1471, 1800, 1799, 2721, 1744,
	4063, 3368, 2719, 1744, 2667, 3466, 2052, 1949, 725, 2885,
	2888, 2889, 2890, 2886, 3084, 2887, 2891, 1469, 2374, 1470,
	1471, 2892, 719, 1065, 2717, 1744, 3140, 192, 3016, 1787,
	1707, 3017, 1469, 3603, 1470, 1471, 1469, 1766, 1470, 1471,
	1169, 1469, 1045, 1470, 1471, 2715, 1744, 680, 1469, 3272,
	1470, 1471, 2547, 3027, 1469, 3158, 1470, 1471, 1469, 673,
	1470, 1471, 686, 1522, 2713, 1744, 2003, 673, 2043, 673,
	3177, 673, 2417, 3147, 3149, 2907, 1079, 2221, 2961, 1071,
	1469, 2363, 1470, 1471, 2408, 2843, 1078, 1472, 1469, 3891,
	1470, 1471, 3211, 1472, 3524, 2315, 2313, 2315, 2313, 3189,
	1472, 1469, 3191, 1470, 1471, 3120, 3210, 1472, 87, 3030,
	2859, 2408, 2408, 2408, 2408, 2408, 3194, 3047, 3158, 2410,
	1469, 3187, 1470, 1471, 2485, 3996, 3130, 3131, 3132, 3133,
	3134, 2408, 3720, 4076, 2408, 2917, 1762, 3486, 3148, 3215,
	3150, 2639, 3232, 1038, 2159, 1512, 2410, 2410, 2410, 2410,
	2410, 2407, 1472, 3157, 3687, 2004, 2079, 2304, 2305, 2306,
	2307, 2308, 1472, 748, 747, 745, 2410, 3175, 2845, 2410,
	3170, 3172, 3174, 3185, 2329, 3169, 1472, 2332, 2333, 2711,
	1744, 3182, 3184, 2873, 1476, 2706, 1744, 1475, 956, 3197,
	3198, 2833, 2702, 1744, 1774, 1472, 2884, 2882, 3316, 2700,
	1744, 2881, 1040, 2583, 2415, 3550, 3216, 3214, 3324, 3219,
	104, 3217, 3218, 2350, 3220, 3228, 1039, 105, 3546, 4118,
	3234, 2409, 2405, 3235, 3183, 3236, 1472, 2852, 907, 906,
	3073, 757, 3242, 1472, 749, 1469, 739, 1470, 1471, 1472,
	969, 1469, 3275, 1470, 1471, 2931, 3273, 3274, 1469, 905,
	1470, 1471, 904, 3326, 3386, 1469, 3327, 1470, 1471, 2991,
	3341, 2993, 1472, 2918, 3337, 1453, 1472, 1729, 2693, 1744,
	673, 1732, 3276, 3277, 2371, 3328, 3318, 673, 3325, 1472,
	2473, 1098, 3329, 3365, 3297, 3200, 4022, 2823, 673, 673,
	2607, 3394, 673, 3335, 2586, 1728, 4029, 3307, 3615, 3288,
	1469, 2967, 1470, 1471, 673, 2501, 69, 3356, 46, 3991,
	1469, 673, 1470, 1471, 3355, 3206, 3353, 4060, 2691, 1744,
	3206, 899, 896, 3363, 1469, 2822, 1470, 1471, 3689, 3690,
	3691, 2818, 3370, 3371, 3143, 3372, 3144, 673, 3374, 3373,
	3376, 4042, 3378, 1469, 1472, 1470, 1471, 4043, 895, 3389,
	3390, 3391, 3392, 3393, 2817, 4044, 2216, 1449, 2816, 1446,
	4139, 2054, 96, 36, 35, 34, 33, 32, 26, 25,
	24, 2815, 23, 22, 1469, 29, 1470, 1471, 19, 21,
	20, 1469, 1525, 1470, 1471, 18, 1525, 1469, 3310, 1470,
	1471, 4161, 4206, 123, 55, 52, 50, 131, 130, 2626,
	53, 49, 3511, 2631, 3513, 1212, 3298, 47, 31, 30,
	1469, 17, 1470, 1471, 1469, 16, 1470, 1471, 3481, 15,
	1518, 14, 2003, 13, 12, 3485, 2634, 1469, 2635, 1470,
	1471, 11, 7, 6, 2643, 39, 2814, 38, 2645, 2646,
	37, 28, 27, 40, 4, 2954, 2503, 2652, 2653, 2654,
	2655, 2656, 2657, 2658, 2659, 2660, 2661, 3364, 2663, 0,
	0, 0, 0, 0, 2408, 0, 0, 3512, 3209, 3514,
	0, 0, 0, 3516, 0, 0, 0, 3563, 0, 0,
	3521, 2669, 2670, 2671, 2672, 3528, 2674, 2675, 0, 2677,
	0, 0, 1469, 2679, 1470, 1471, 3533, 2684, 2685, 2410,
	2686, 0, 0, 2689, 2690, 2692, 2694, 2695, 2696, 2697,
	2698, 2699, 2701, 2703, 2704, 2705, 2707, 737, 2709, 2710,
	2712, 2714, 2716, 2718, 2720, 2722, 2724, 2726, 2728, 2730,
	2732, 2734, 2736, 2738, 2740, 2742, 2744, 2746, 2747, 2748,
	3319, 2750, 3555, 2752, 3328, 2754, 2755, 3325, 2757, 2759,
	2761, 3329, 3564, 3558, 2764, 3580, 3518, 3582, 2768, 3557,
	3552, 0, 2773, 2774, 2775, 2776, 1472, 0, 0, 0,
	3625, 3626, 1472, 0, 0, 2787, 2788, 2789, 2790, 2791,
	2792, 0, 0, 2796, 2797, 0, 0, 1472, 0, 3545,
	0, 2799, 0, 3574, 3575, 0, 2805, 0, 0, 1472,
	0, 2808, 2809, 2810, 2811, 2812, 1472, 0, 3559, 3560,
	0, 0, 2819, 2820, 1472, 2821, 0, 0, 2824, 2826,
	2374, 0, 2828, 3358, 3359, 0, 1058, 1472, 0, 1064,
	1064, 0, 2840, 0, 1472, 0, 3488, 0, 3490, 3491,
	3492, 0, 0, 0, 1472, 673, 3608, 0, 0, 3627,
	3612, 3613, 3614, 1949, 0, 0, 0, 0, 2813, 0,
	0, 3643, 0, 0, 2804, 0, 1472, 0, 0, 0,
	0, 0, 0, 2647, 1472, 0, 0, 0, 1472, 2803,
	0, 0, 1472, 0, 0, 0, 0, 0, 0, 0,
	2662, 2802, 3654, 0, 0, 0, 0, 0, 2801, 0,
	0, 0, 673, 0, 0, 1472, 2798, 673, 0, 1472,
	0, 0, 0, 1472, 1469, 0, 1470, 1471, 0, 2793,
	1469, 1472, 1470, 1471, 0, 0, 2786, 0, 0, 0,
	3695, 0, 3696, 3697, 3698, 1469, 2785, 1470, 1471, 1472,
	3705, 0, 0, 3712, 1472, 3714, 0, 1469, 0, 1470,
	1471, 0, 1472, 0, 1469, 3685, 1470, 1471, 2784, 3715,
	0, 0, 1469, 0, 1470, 1471, 2783, 0, 3210, 0,
	2782, 87, 0, 3210, 2781, 1469, 0, 1470, 1471, 0,
	0, 673, 1469, 0, 1470, 1471, 0, 0, 2953, 0,
	0, 0, 1469, 1472, 1470, 1471, 0, 2780, 0, 3737,
	0, 2779, 0, 0, 3716, 2778, 42, 2123, 3648, 2121,
	3745, 3725, 3724, 2772, 1469, 0, 1470, 1471, 0, 3732,
	3735, 3734, 1469, 1472, 1470, 1471, 1469, 0, 1470, 1471,
	1469, 2771, 1470, 1471, 1518, 0, 2770, 0, 3897, 0,
	0, 0, 0, 0, 2767, 3749, 0, 673, 673, 673,
	673, 673, 673, 1469, 0, 1470, 1471, 1469, 0, 1470,
	1471, 1469, 0, 1470, 1471, 3604, 3605, 0, 0, 1469,
	0, 1470, 1471, 0, 0, 673, 673, 3889, 3916, 0,
	0, 3888, 0, 0, 0, 2766, 0, 1469, 0, 1470,
	1471, 0, 1469, 0, 1470, 1471, 3904, 3909, 673, 3908,
	1469, 0, 1470, 1471, 0, 0, 3887, 0, 0, 0,
	0, 3955, 3956, 0, 0, 2765, 0, 0, 3739, 3058,
	3059, 3060, 3061, 3062, 3713, 0, 0, 0, 0, 0,
	0, 3746, 3747, 0, 0, 2123, 0, 2121, 3959, 3077,
	0, 1469, 0, 1470, 1471, 0, 3899, 3900, 3901, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3962, 0, 4004, 3210, 3965, 0,
	0, 1469, 0, 1470, 1471, 3206, 0, 0, 0, 0,
	0, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551,
	1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561,
	1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572,
	1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582,
	1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592,
	1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602,
	1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612,
	1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622,
	1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632,
	1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1642, 1643,
	1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653,
	1654, 1655, 1656, 1657, 1663, 1664, 1665, 1666, 1680, 1681,
	1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691,
	1692, 1693, 4005, 3741, 3989, 3988, 3979, 1472, 0, 0,
	0, 0, 0, 3985, 0, 3987, 4023, 0, 0, 0,
	3209, 0, 0, 0, 0, 3209, 0, 0, 3048, 0,
	0, 0, 0, 0, 87, 1065, 0, 673, 0, 3212,
	0, 0, 0, 0, 0, 4008, 0, 1472, 0, 0,
	0, 4007, 0, 0, 0, 0, 0, 3230, 1518, 0,
	0, 3892, 4030, 1518, 673, 673, 673, 673, 673, 42,
	4028, 4025, 0, 0, 1472, 0, 3229, 0, 1734, 0,
	0, 0, 1949, 0, 673, 0, 0, 673, 3237, 2003,
	3896, 0, 1742, 0, 0, 1735, 0, 0, 0, 2763,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2368, 2369, 1741, 1739, 1740, 1736, 0, 1737, 4048, 0,
	0, 4049, 4073, 673, 0, 0, 0, 87, 0, 2756,
	0, 0, 0, 0, 0, 3960, 1473, 0, 0, 1518,
	1738, 0, 4058, 4067, 0, 1469, 0, 1470, 1471, 673,
	3122, 0, 3124, 0, 0, 4077, 2753, 4079, 0, 3916,
	4093, 0, 42, 673, 4104, 0, 0, 1531, 3135, 3136,
	3137, 3138, 4090, 4082, 4087, 3362, 4084, 4083, 0, 4081,
	4086, 4085, 0, 673, 4112, 1469, 673, 1470, 1471, 0,
	0, 0, 0, 4009, 4012, 0, 4117, 3379, 3380, 0,
	3381, 3383, 3385, 0, 4135, 0, 0, 0, 0, 3209,
	0, 4125, 1469, 4130, 1470, 1471, 0, 0, 4159, 4143,
	4145, 4104, 0, 0, 0, 4156, 0, 1815, 3398, 0,
	1472, 0, 0, 3401, 1472, 3403, 3404, 3405, 3407, 3408,
	3409, 3410, 3411, 3412, 3413, 3414, 3415, 3416, 3417, 3418,
	3419, 3421, 3423, 3425, 3427, 3429, 3431, 3433, 3435, 3437,
	3439, 3441, 3443, 3445, 3447, 3449, 3451, 3452, 3454, 3455,
	3456, 3458, 2004, 4179, 3460, 4176, 3462, 3463, 3464, 4186,
	4190, 3468, 3469, 3470, 3471, 3472, 3473, 3474, 3475, 3476,
	3477, 3478, 2123, 4192, 2121, 4189, 4188, 4200, 4104, 4185,
	3484, 4175, 4160, 4155, 3489, 4208, 4074, 4069, 3493, 3494,
	0, 3495, 3497, 0, 3500, 3502, 4216, 3504, 3505, 3506,
	3507, 4214, 2751, 1472, 3206, 0, 2749, 3515, 1472, 0,
	1734, 0, 1472, 4014, 0, 4225, 4226, 3956, 4224, 1472,
	0, 0, 0, 1472, 1742, 0, 0, 1735, 1472, 0,
	2123, 673, 2121, 4223, 1472, 0, 0, 0, 1472, 0,
	0, 0, 3539, 3540, 0, 0, 3544, 4033, 4021, 0,
	0, 1472, 1730, 1731, 1741, 1739, 1740, 1736, 1469, 1737,
	1470, 1471, 1469, 1803, 1470, 1471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1738, 0, 0, 0, 0, 673, 0, 0,
	0, 0, 0, 0, 0, 2708, 0, 0, 0, 0,
	2688, 0, 0, 0, 2687, 0, 0, 0, 0, 0,
	0, 2683, 0, 0, 0, 2681, 673, 0, 0, 0,
	2673, 0, 0, 0, 0, 0, 2644, 0, 0, 0,
	2638, 0, 0, 0, 4068, 0, 673, 1764, 0, 673,
	673, 673, 0, 2633, 0, 0, 0, 1816, 0, 0,
	4151, 1469, 3619, 1470, 1471, 0, 1469, 0, 1470, 1471,
	1469, 0, 1470, 1471, 0, 0, 0, 1469, 0, 1470,
	1471, 1469, 0, 1470, 1471, 1852, 1469, 0, 1470, 1471,
	0, 0, 1469, 0, 1470, 1471, 1469, 0, 1470, 1471,
	0, 0, 0, 0, 0, 0, 0, 3638, 0, 1469,
	3642, 1470, 1471, 0, 0, 0, 0, 0, 0, 0,
	1829, 1832, 1833, 1834, 1835, 1836, 1837, 0, 1838, 1839,
	1841, 1842, 1840, 1843, 1844, 1817, 1818, 1819, 1820, 1801,
	1802, 1830, 0, 1804, 3655, 1805, 1806, 1807, 1808, 1809,
	1810, 1811, 1812, 1813, 0, 0, 1814, 1821, 1822, 1823,
	1824, 0, 1825, 1826, 1827, 1828, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4173, 0, 0,
	0, 0, 0, 0, 0, 1707, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 952, 0, 0, 0, 0, 0, 0, 3678, 0,
	0, 0, 0, 2009, 0, 0, 0, 0, 0, 0,
	0, 3686, 0, 0, 0, 0, 0, 0, 3693, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	195, 0, 0, 0, 723, 0, 0, 0, 0, 729,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1949,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 0, 1518, 0,
	0, 0, 1949, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 729, 195, 729, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3905, 0, 0,
	0, 0, 0, 0, 0, 0, 3912, 0, 0, 0,
	0, 0, 1831, 0, 0, 0, 0, 0, 1949, 0,
	0, 0, 0, 0, 0, 0, 3922, 3923, 3924, 0,
	3926, 0, 3927, 3928, 0, 0, 0, 0, 3931, 3932,
	3933, 3934, 3935, 3936, 3937, 3938, 3939, 3940, 3941, 3942,
	3943, 3944, 3945, 3946, 3947, 3948, 3949, 3950, 3951, 3952,
	0, 3954, 3957, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3676, 3966, 3967, 3968,
	3969, 3970, 3972, 3973, 3975, 3977, 3978, 3980, 0, 0,
	0, 3984, 0, 0, 0, 3986, 2074, 2075, 2076, 2077,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2090, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4013, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2129, 2130, 0,
	0, 0, 0, 2153, 0, 0, 2157, 2158, 0, 0,
	0, 2163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2175, 2176, 2177, 2178,
	2179, 2180, 2181, 2182, 2183, 2184, 0, 2186, 0, 0,
	0, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2217,
	0, 2222, 0, 2224, 2225, 2226, 0, 2228, 2229, 2230,
	0, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240,
	2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250,
	2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260,
	2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270,
	2271, 2272, 2273, 2274, 2275, 2276, 2277, 2281, 2282, 2283,
	2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293,
	2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303,
	0, 0, 0, 0, 0, 2309, 0, 2311, 0, 2318,
	2319, 2320, 2321, 2322, 2323, 0, 0, 0, 0, 0,
	0, 0, 0, 1949, 0, 0, 0, 0, 2334, 2335,
	2336, 2337, 2338, 2339, 2340, 2341, 0, 2343, 2344, 2345,
	2346, 2347, 673, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3995, 0, 0, 4038, 1815, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1064, 0, 0,
	0, 4053, 0, 0, 0, 0, 0, 4056, 0, 4057,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2388, 2389,
	0, 0, 4072, 0, 0, 0, 1490, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1518, 0, 0,
	0, 0, 0, 0, 2427, 0, 0, 0, 4098, 4099,
	1491, 1492, 1493, 1494, 1495, 1496, 1497, 1499, 1498, 1500,
	1501, 0, 4106, 4108, 4110, 0, 4092, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4116, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4138, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2469, 1949, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1803, 0, 0, 0, 0, 0,
	4157, 0, 0, 0, 190, 0, 0, 0, 0, 0,
	0, 195, 1707, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 0, 151,
	0, 0, 0, 0, 4180, 4182, 4184, 0, 0, 0,
	0, 0, 0, 172, 0, 0, 2003, 0, 0, 0,
	729, 0, 729, 729, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4205, 4037, 0,
	0, 0, 729, 195, 0, 0, 4047, 162, 1816, 0,
	0, 0, 0, 150, 0, 4217, 4218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2152,
	0, 1517, 0, 169, 0, 0, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 138, 139,
	161, 160, 189, 0, 0, 0, 0, 0, 1707, 0,
	0, 1829, 1832, 1833, 1834, 1835, 1836, 1837, 0, 1838,
	1839, 1841, 1842, 1840, 1843, 1844, 1817, 1818, 1819, 1820,
	1801, 1802, 1830, 0, 1804, 0, 1805, 1806, 1807, 1808,
	1809, 1810, 1811, 1812, 1813, 0, 0, 1814, 1821, 1822,
	1823, 1824, 0, 1825, 1826, 1827, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2144, 2133, 2134,
	2135, 2136, 2146, 2137, 2138, 2139, 2151, 2147, 2140, 2141,
	2148, 2149, 2150, 2142, 2143, 2145, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 155, 136, 158, 143, 135, 0, 156,
	157, 0, 0, 0, 0, 0, 173, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 144, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	147, 145, 140, 141, 142, 146, 0, 0, 0, 0,
	0, 0, 137, 0, 0, 0, 0, 0, 0, 2642,
	0, 148, 0, 0, 0, 0, 0, 0, 0, 2648,
	2649, 2650, 2651, 0, 1517, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 0, 0, 0, 729, 729, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	164, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 1831, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 729, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 729, 0, 0, 0, 0, 0, 0, 195, 0,
	0, 0, 729, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 729, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 729, 0, 729, 0, 0,
	0, 0, 0, 0, 0, 729, 159, 0, 1517, 729,
	0, 0, 729, 729, 729, 729, 0, 729, 0, 729,
	729, 0, 729, 729, 729, 729, 729, 729, 0, 0,
	0, 0, 0, 0, 0, 1517, 729, 729, 1517, 729,
	1517, 195, 729, 0, 0, 0, 0, 0, 1764, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 729, 0, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 729, 0, 0,
	729, 0, 195, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 195,
	0, 0, 0, 0, 0, 152, 195, 0, 153, 0,
	0, 0, 0, 0, 0, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 729, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 951,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 708, 0, 0, 0, 0, 0, 728, 0, 0,
	166, 171, 168, 174, 175, 176, 178, 180, 181, 182,
	183, 0, 0, 0, 0, 0, 184, 186, 187, 188,
	0, 0, 0, 0, 0, 0, 0, 3023, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 728,
	0, 728, 0, 0, 3049, 3050, 3051, 0, 0, 3053,
	0, 0, 3055, 0, 729, 729, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 729, 0, 0,
	0, 0, 3074, 3075, 3076, 0, 195, 0, 0, 0,
	0, 3081, 0, 0, 0, 0, 3083, 0, 0, 3085,
	3086, 3087, 0, 0, 0, 3088, 3089, 0, 0, 3090,
	0, 3091, 0, 0, 0, 0, 0, 0, 3092, 0,
	3093, 0, 0, 0, 3094, 0, 3095, 0, 0, 3096,
	0, 3097, 0, 3098, 0, 3099, 729, 3100, 0, 3101,
	0, 3102, 0, 3103, 0, 3104, 1517, 3105, 0, 3106,
	0, 3107, 0, 3108, 0, 3109, 0, 3110, 0, 3111,
	0, 3112, 0, 3113, 1517, 0, 0, 3114, 0, 3115,
	0, 3116, 0, 0, 3117, 0, 3118, 0, 3119, 0,
	2281, 3121, 0, 0, 3123, 0, 0, 3125, 3126, 3127,
	3128, 0, 0, 0, 0, 3129, 2281, 2281, 2281, 2281,
	2281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3139, 0, 0, 0, 0, 0, 0, 0, 3152,
	0, 0, 3156, 0, 0, 0, 0, 0, 0, 0,
	0, 3159, 3160, 3161, 3162, 3163, 3164, 0, 0, 0,
	3165, 3166, 0, 3167, 0, 3168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1064,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3201, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	95, 0, 0, 1017, 0, 0, 0, 0, 957, 1018,
	970, 971, 972, 958, 0, 195, 959, 960, 0, 961,
	729, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 966, 0, 973, 974, 0,
	0, 0, 0, 0, 0, 0, 3294, 0, 0, 0,
	195, 0, 0, 729, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 729, 0, 0, 2328, 195, 0, 195, 0, 195,
	195, 0, 0, 0, 0, 3330, 3331, 0, 0, 0,
	0, 0, 0, 0, 729, 0, 0, 975, 976, 977,
	978, 979, 980, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 0,
	0, 0, 3387, 0, 0, 0, 0, 0, 0, 0,
	0, 729, 0, 0, 0, 1713, 0, 0, 729, 729,
	729, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3402, 0, 0, 0, 0, 0, 0, 0, 729, 0,
	3332, 0, 0, 0, 729, 729, 0, 0, 729, 0,
	729, 0, 0, 0, 0, 0, 729, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 672, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 729, 0, 0, 1022, 0, 729, 0, 0, 0,
	729, 729, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3333, 3334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1093, 0, 195, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 195, 0, 0,
	195, 0, 195, 0, 0, 0, 0, 0, 728, 1432,
	728, 728, 195, 0, 0, 0, 0, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	728, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 922, 0, 0, 195, 0, 0, 926, 0,
	0, 0, 923, 924, 729, 0, 0, 925, 927, 1516,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3600,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3624, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1517, 0,
	2328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3644, 0, 3645, 0, 3646, 0, 3647, 0, 0, 0,
	0, 0, 0, 0, 3650, 3651, 0, 0, 0, 0,
	0, 0, 0, 0, 3656, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3657, 0,
	3658, 0, 3659, 0, 3660, 0, 3661, 0, 3662, 0,
	3663, 0, 3664, 0, 3665, 0, 3666, 908, 3667, 0,
	3668, 0, 3669, 0, 3670, 0, 3671, 0, 3672, 0,
	0, 3673, 0, 0, 0, 3674, 0, 3675, 0, 0,
	0, 0, 0, 3677, 0, 0, 0, 0, 0, 0,
	0, 0, 1516, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3694, 0, 0, 0, 0,
	0, 0, 0, 0, 3699, 0, 3700, 3701, 0, 3702,
	0, 3703, 0, 0, 0, 727, 3704, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3733, 728, 728, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3742, 0, 0, 3744,
	0, 0, 0, 0, 0, 0, 0, 1089, 0, 1096,
	0, 3748, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 728, 0, 0, 3884, 0, 0,
	0, 0, 729, 0, 0, 0, 0, 0, 0, 728,
	0, 0, 0, 0, 0, 0, 729, 0, 0, 0,
	728, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	728, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 728, 0, 728, 0, 0, 0, 0,
	0, 0, 0, 728, 0, 0, 1516, 728, 0, 0,
	728, 728, 728, 728, 0, 728, 0, 728, 728, 0,
	728, 728, 728, 728, 728, 728, 0, 0, 0, 0,
	0, 0, 0, 1516, 728, 728, 1516, 728, 1516, 0,
	728, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 729, 0, 0, 0, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 0,
	0, 0, 728, 0, 0, 0, 3994, 0, 0, 0,
	729, 0, 0, 0, 0, 728, 0, 729, 728, 0,
	0, 729, 729, 0, 0, 1213, 729, 1219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1517, 729, 0, 1017, 0, 0, 2317, 0,
	0, 1018, 0, 0, 0, 195, 195, 195, 195, 195,
	195, 2122, 728, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 195, 0, 0, 1445, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 729, 0, 0, 0, 0, 0, 0, 975,
	976, 977, 978, 979, 980, 981, 982, 983, 984, 985,
	986, 987, 988, 989, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015,
	1016, 0, 729, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4036, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 728, 728, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 728, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4050,
	0, 0, 4051, 0, 4052, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 729, 0, 0,
	0, 0, 0, 0, 728, 0, 0, 0, 0, 729,
	0, 0, 0, 0, 1516, 0, 0, 0, 0, 0,
	0, 0, 0, 2131, 0, 0, 0, 0, 0, 0,
	0, 0, 1516, 0, 0, 0, 0, 0, 0, 0,
	729, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 729, 0,
	0, 0, 0, 0, 0, 0, 4136, 0, 0, 0,
	0, 0, 729, 0, 0, 0, 1517, 0, 0, 729,
	729, 1517, 195, 195, 195, 195, 195, 0, 0, 0,
	0, 0, 0, 0, 195, 4152, 0, 4153, 0, 4154,
	195, 0, 195, 0, 0, 195, 195, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1776, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1277, 0, 1277, 1277,
	0, 0, 1793, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 1444, 0,
	0, 0, 0, 0, 729, 0, 0, 1517, 728, 4203,
	0, 4204, 729, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 195, 0, 0, 0, 728, 0,
	0, 0, 0, 0, 0, 1932, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 728, 0, 0, 0, 0, 0, 0, 0, 0,
	1977, 0, 0, 0, 0, 0, 0, 0, 0, 728,
	0, 0, 728, 0, 0, 0, 0, 2005, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 728, 2016, 0, 0, 0, 0, 0, 0,
	2020, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 729, 0, 0, 0, 0, 0, 0, 728,
	0, 0, 0, 0, 0, 0, 728, 728, 728, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 728, 0, 0, 195,
	0, 0, 728, 728, 0, 0, 728, 0, 728, 0,
	0, 0, 0, 0, 728, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 728,
	0, 0, 0, 0, 728, 195, 0, 0, 728, 728,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1716, 1717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 195, 195, 195,
	0, 0, 1770, 0, 0, 0, 0, 729, 729, 0,
	0, 0, 0, 0, 0, 0, 0, 1788, 0, 0,
	2067, 0, 0, 0, 0, 0, 0, 0, 1846, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1855, 0,
	0, 0, 0, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2960, 0, 729, 729, 729, 729,
	0, 1089, 728, 1881, 0, 0, 129, 0, 151, 0,
	0, 1890, 0, 0, 0, 1892, 0, 0, 1895, 1896,
	1898, 1898, 172, 1898, 0, 1898, 1898, 0, 1907, 1898,
	1898, 1898, 1898, 1898, 0, 0, 0, 0, 0, 0,
	0, 0, 1927, 1928, 0, 1089, 0, 0, 1933, 0,
	0, 0, 0, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 150, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1516, 0, 728, 0,
	1975, 0, 169, 0, 0, 170, 0, 0, 0, 0,
	0, 0, 0, 1997, 0, 0, 2001, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1873, 1874, 161,
	160, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1277, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 729, 0, 729, 0, 195, 0, 0,
	0, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1869, 0, 0, 0, 1517, 0, 0, 0,
	195, 0, 0, 729, 129, 729, 151, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 0, 155, 1875, 158, 0, 1872, 0, 156, 157,
	0, 0, 0, 0, 0, 173, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 162, 0, 0, 0, 0, 0,
	150, 0, 0, 729, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 729,
	169, 2394, 0, 170, 0, 0, 0, 0, 0, 2398,
	0, 2401, 729, 0, 2067, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1873, 1874, 161, 160, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1277, 1277, 0, 0, 0, 0, 0, 0, 0, 0,
	728, 0, 0, 2055, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 728, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 729, 0, 164,
	0, 0, 0, 0, 729, 0, 729, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2911,
	0, 0, 2117, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 729, 0, 0, 0, 0,
	155, 1875, 158, 0, 1872, 0, 156, 157, 0, 0,
	0, 0, 0, 173, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 728, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 0, 728, 0,
	0, 0, 0, 0, 0, 728, 0, 0, 0, 728,
	728, 0, 0, 0, 728, 0, 0, 0, 0, 0,
	0, 0, 2067, 0, 0, 0, 0, 0, 0, 2559,
	1516, 728, 0, 0, 0, 0, 0, 0, 0, 0,
	2579, 2580, 0, 0, 2584, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2589, 0, 0, 0,
	0, 0, 0, 2592, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 729, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1277, 164, 0, 2595,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 152, 0, 0, 153, 0, 729,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	728, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2365, 0, 165, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2378,
	728, 0, 0, 0, 0, 729, 0, 0, 0, 0,
	0, 0, 0, 159, 0, 729, 185, 1770, 0, 0,
	1277, 0, 0, 0, 0, 1517, 729, 0, 729, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1089, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 729, 2328, 0, 0, 0, 0, 166,
	171, 168, 174, 175, 176, 178, 180, 181, 182, 183,
	0, 0, 0, 0, 0, 184, 186, 187, 188, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 729, 0, 1096, 0, 0,
	0, 0, 0, 0, 2491, 2492, 2493, 0, 0, 0,
	0, 0, 0, 0, 0, 728, 0, 0, 0, 0,
	0, 0, 152, 0, 1089, 153, 0, 728, 0, 0,
	1096, 1890, 0, 0, 1890, 729, 1890, 0, 0, 0,
	0, 0, 2523, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 728, 729,
	0, 0, 0, 177, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 728, 1089, 729, 0,
	729, 0, 2117, 0, 0, 0, 2117, 2117, 0, 0,
	728, 0, 0, 0, 1516, 0, 0, 728, 728, 1516,
	0, 0, 0, 0, 185, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 166, 171, 168,
	174, 175, 176, 178, 180, 181, 182, 183, 0, 0,
	3279, 0, 0, 184, 186, 187, 188, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 728, 0, 0, 1516, 1017, 0, 0, 2898,
	728, 0, 1018, 0, 0, 0, 0, 0, 0, 0,
	2598, 0, 2122, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3361, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2947, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1277, 0, 0, 0,
	975, 976, 977, 978, 979, 980, 981, 982, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014,
	1015, 1016, 0, 0, 0, 0, 0, 0, 0, 2996,
	2997, 2998, 2999, 3000, 3001, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2067, 3011, 0,
	728, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3019, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3568, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 728, 728, 0, 2846, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2861, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 728, 728, 728, 728, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2943,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2378, 0, 0, 0,
	0, 0, 0, 2968, 0, 0, 0, 1890, 1890, 0,
	0, 0, 2973, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2984,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3284, 0, 0, 0, 0,
	0, 728, 0, 728, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3322, 0, 0, 1516, 0, 0, 0, 0, 0,
	0, 728, 0, 728, 0, 3336, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2117, 0,
	0, 0, 0, 0, 0, 3354, 0, 0, 3357, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 728, 0, 0, 0, 0, 0, 0, 2117, 0,
	0, 0, 0, 0, 0, 0, 0, 728, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	728, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 728, 0, 0, 0, 0,
	0, 0, 728, 0, 728, 0, 0, 0, 0, 0,
	0, 0, 0, 3141, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3517, 0, 1277, 0, 0, 0, 0,
	0, 0, 0, 728, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1898, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1277, 0,
	0, 0, 0, 0, 0, 3213, 1898, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3578, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3593, 0,
	0, 3594, 3595, 3596, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 728, 0, 0, 0, 0, 0, 0,
	1089, 0, 0, 0, 0, 0, 0, 0, 2378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 728, 0, 3770,
	3772, 3771, 3837, 3838, 3839, 3840, 3841, 3842, 3843, 3773,
	3774, 799, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 728, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 728, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1516, 728, 0, 728, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 728, 728, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1846, 0,
	0, 0, 0, 728, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 728, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 728, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 728, 0, 728, 3778,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3786, 3787, 0, 0, 3862, 3861,
	3860, 0, 0, 3858, 3859, 3857, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2378, 2378, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3863, 922,
	0, 775, 776, 3864, 3865, 926, 3866, 778, 779, 923,
	924, 0, 773, 777, 925, 927, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3632, 3633, 3634, 3635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3767, 3768, 3769, 3775, 3776, 3777, 3788, 3835, 3836,
	3844, 3846, 878, 3845, 3847, 3848, 3849, 3852, 3853, 3854,
	3855, 3850, 3851, 3856, 3750, 3754, 3751, 3752, 3753, 3765,
	3755, 3756, 3757, 3758, 3759, 3760, 3761, 3762, 3763, 3764,
	3766, 3867, 3868, 3869, 3870, 3871, 3872, 3781, 3785, 3784,
	3782, 3783, 3779, 3780, 3807, 3806, 3808, 3809, 3810, 3811,
	3812, 3813, 3815, 3814, 3816, 3817, 3818, 3819, 3820, 3821,
	3789, 3790, 3793, 3794, 3792, 3791, 3795, 3804, 3805, 3796,
	3797, 3798, 3799, 3800, 3801, 3803, 3802, 3822, 3823, 3824,
	3825, 3826, 3828, 3827, 3831, 3832, 3830, 3829, 3834, 3833,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 928, 0, 929, 0, 0, 933, 0,
	0, 0, 935, 934, 0, 936, 898, 897, 0, 0,
	930, 931, 0, 932, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3710,
	0, 3710, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3738,
	0, 3740, 0, 0, 4034, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3873, 3874,
	3875, 3876, 3877, 3878, 3879, 3880, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2378,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3907, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1277, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3710, 0, 0, 0, 0, 0, 0,
	3710, 0, 3710, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2378, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2378, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2378, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4054, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4062, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2378, 0, 4070, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1277,
	1277, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4120, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4062, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2378, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 0, 0, 0, 1846, 0, 4120, 1415, 1399, 528,
	0, 1341, 1418, 1309, 1328, 1428, 1331, 1334, 1378, 1287,
	1356, 416, 1325, 1313, 1282, 1320, 1283, 1311, 1343, 270,
	1308, 1401, 1360, 1417, 366, 267, 1289, 1280, 204, 505,
	1314, 430, 1330, 203, 1380, 487, 252, 377, 374, 583,
	282, 273, 269, 250, 317, 385, 428, 518, 422, 1424,
	370, 1366, 0, 497, 401, 0, 0, 0, 1405, 1404,
	1335, 1345, 1407, 1354, 1392, 1340, 1379, 1297, 1365, 1419,
	1326, 1375, 1420, 323, 248, 325, 202, 413, 498, 286,
	0, 0, 0, 0, 4094, 507, 953, 0, 0, 0,
	0, 4095, 0, 0, 0, 0, 238, 0, 0, 245,
	0, 0, 0, 351, 360, 359, 339, 340, 342, 344,
	350, 357, 363, 336, 345, 1322, 1372, 607, 1414, 1323,
	1374, 265, 321, 272, 264, 580, 1425, 1406, 1286, 1353,
	1413, 1348, 0, 0, 229, 1416, 1347, 0, 1377, 0,
	1431, 1281, 1368, 0, 1284, 1288, 1427, 1411, 1317, 275,
	0, 0, 0, 0, 0, 0, 0, 1344, 1355, 1389,
	1393, 1338, 0, 0, 0, 0, 0, 0, 0, 0,
	1315, 0, 1364, 0, 0, 0, 1293, 1285, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1342, 0, 0, 0, 0, 1296, 0, 1316, 1390, 0,
	1279, 297, 1290, 402, 257, 0, 453, 1397, 1410, 1339,
	625, 1412, 1337, 1336, 1384, 1294, 1403, 1329, 365, 1292,
	330, 197, 225, 0, 1327, 412, 461, 473, 1402, 1312,
	1321, 253, 1319, 471, 426, 602, 233, 284, 458, 432,
	469, 440, 287, 1363, 1382, 470, 372, 585, 450, 599,
	626, 627, 263, 406, 612, 522, 620, 644, 226, 260,
	420, 506, 605, 494, 397, 581, 582, 329, 493, 295,
	201, 369, 632, 224, 479, 371, 242, 231, 587, 609,
	299, 289, 456, 639, 213, 517, 597, 239, 483, 0,
	0, 647, 247, 504, 215, 594, 503, 393, 326, 327,
	214, 0, 457, 268, 293, 0, 0, 258, 415, 589,
	590, 256, 648, 228, 619, 220, 1291, 618, 408, 584,
	595, 394, 383, 219, 593, 392, 382, 334, 355, 356,
	280, 307, 447, 375, 448, 306, 308, 404, 403, 405,
	207, 606, 0, 208, 0, 499, 608, 649, 452, 212,
	234, 235, 237, 1307, 279, 283, 291, 294, 303, 304,
	313, 367, 419, 446, 442, 451, 1398, 579, 600, 613,
	624, 630, 631, 633, 634, 635, 636, 637, 640, 638,
	407, 311, 495, 333, 373, 1387, 1430, 425, 472, 240,
	604, 496, 199, 1301, 1306, 1299, 0, 254, 255, 1369,
	575, 1302, 1300, 1358, 1359, 1303, 1421, 1422, 1423, 1408,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 645, 508,
	514, 509, 510, 511, 512, 513, 0, 515, 1391, 1295,
	0, 1304, 1305, 398, 1400, 591, 592, 668, 384, 486,
	601, 335, 349, 352, 341, 361, 0, 362, 337, 338,
	343, 346, 347, 348, 353, 354, 358, 364, 249, 210,
	390, 399, 578, 312, 216, 217, 218, 524, 525, 526,
	527, 616, 617, 621, 205, 462, 463, 464, 465, 292,
	611, 309, 468, 467, 331, 332, 379, 449, 540, 542,
	553, 557, 559, 561, 567, 570, 541, 543, 554, 558,
	560, 562, 568, 571, 530, 532, 534, 536, 549, 548,
	545, 573, 574, 551, 556, 535, 547, 552, 565, 572,
	569, 529, 533, 537, 546, 564, 563, 544, 555, 566,
	550, 538, 531, 539, 1362, 196, 221, 368, 1426, 454,
	288, 646, 615, 484, 610, 206, 223, 1298, 262, 1310,
	1318, 0, 1324, 1332, 1333, 1346, 1349, 1350, 1351, 1352,
	1370, 1371, 1373, 1381, 1383, 1386, 1388, 1395, 1409, 1429,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 380, 386, 387,
	388, 389, 409, 410, 411, 414, 417, 418, 421, 423,
	424, 427, 431, 435, 436, 437, 439, 441, 443, 455,
	460, 474, 475, 476, 477, 478, 481, 482, 488, 489,
	490, 491, 492, 500, 501, 516, 586, 588, 603, 622,
	628, 480, 301, 302, 444, 445, 314, 315, 642, 643,
	300, 598, 629, 596, 641, 623, 438, 378, 1361, 1367,
	381, 281, 305, 320, 1376, 614, 502, 227, 466, 290,
	251, 1394, 1396, 211, 246, 230, 259, 274, 277, 324,
	391, 400, 429, 434, 296, 271, 244, 459, 241, 485,
	519, 520, 521, 523, 395, 266, 433, 1357, 1385, 376,
	576, 577, 316, 396, 0, 0, 0, 0, 0, 0,
	1415, 1399, 528, 0, 1341, 1418, 1309, 1328, 1428, 1331,
	1334, 1378, 1287, 1356, 416, 1325, 1313, 1282, 1320, 1283,
	1311, 1343, 270, 1308, 1401, 1360, 1417, 366, 267, 1289,
	1280, 204, 505, 1314, 430, 1330, 203, 1380, 487, 252,
	377, 374, 583, 282, 273, 269, 250, 317, 385, 428,
	518, 422, 1424, 370, 1366, 0, 497, 401, 0, 0,
	0, 1405, 1404, 1335, 1345, 1407, 1354, 1392, 1340, 1379,
	1297, 1365, 1419, 1326, 1375, 1420, 323, 248, 325, 202,
	413, 498, 286, 0, 0, 0, 0, 0, 507, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 245, 0, 0, 0, 351, 360, 359, 339,
	340, 342, 344, 350, 357, 363, 336, 345, 1322, 1372,
	607, 1414, 1323, 1374, 265, 321, 272, 264, 580, 1425,
	1406, 1286, 1353, 1413, 1348, 0, 0, 229, 1416, 1347,
	0, 1377, 0, 1431, 1281, 1368, 0, 1284, 1288, 1427,
	1411, 1317, 275, 0, 0, 0, 0, 0, 0, 0,
	1344, 1355, 1389, 1393, 1338, 0, 0, 0, 0, 0,
	0, 3238, 0, 1315, 0, 1364, 0, 0, 0, 1293,
	1285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1342, 0, 0, 0, 0, 1296, 0,
	1316, 1390, 0, 1279, 297, 1290, 402, 257, 0, 453,
	1397, 1410, 1339, 625, 1412, 1337, 1336, 1384, 1294, 1403,
	1329, 365, 1292, 330, 197, 225, 0, 1327, 412, 461,
	473, 1402, 1312, 1321, 253, 1319, 471, 426, 602, 233,
	284, 458, 432, 469, 440, 287, 1363, 1382, 470, 372,
	585, 450, 599, 626, 627, 263, 406, 612, 522, 620,
	644, 226, 260, 420, 506, 605, 494, 397, 581, 582,
	329, 493, 295, 201, 369, 632, 224, 479, 371, 242,
	231, 587, 609, 299, 289, 456, 639, 213, 517, 597,
	239, 483, 0, 0, 647, 247, 504, 215, 594, 503,
	393, 326, 327, 214, 0, 457, 268, 293, 0, 0,
	258, 415, 589, 590, 256, 648, 228, 619, 220, 1291,
	618, 408, 584, 595, 394, 383, 219, 593, 392, 382,
	334, 355, 356, 280, 307, 447, 375, 448, 306, 308,
	404, 403, 405, 207, 606, 0, 208, 0, 499, 608,
	649, 452, 212, 234, 235, 237, 1307, 279, 283, 291,
	294, 303, 304, 313, 367, 419, 446, 442, 451, 1398,
	579, 600, 613, 624, 630, 631, 633, 634, 635, 636,
	637, 640, 638, 407, 311, 495, 333, 373, 1387, 1430,
	425, 472, 240, 604, 496, 199, 1301, 1306, 1299, 0,
	254, 255, 1369, 575, 1302, 1300, 1358, 1359, 1303, 1421,
	1422, 1423, 1408, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 645, 508, 514, 509, 510, 511, 512, 513, 0,
	515, 1391, 1295, 0, 1304, 1305, 398, 1400, 591, 592,
	668, 384, 486, 601, 335, 349, 352, 341, 361, 0,
	362, 337, 338, 343, 346, 347, 348, 353, 354, 358,
	364, 249, 210, 390, 399, 578, 312, 216, 217, 218,
	524, 525, 526, 527, 616, 617, 621, 205, 462, 463,
	464, 465, 292, 611, 309, 468, 467, 331, 332, 379,
	449, 540, 542, 553, 557, 559, 561, 567, 570, 541,
	543, 554, 558, 560, 562, 568, 571, 530, 532, 534,
	536, 549, 548, 545, 573, 574, 551, 556, 535, 547,
	552, 565, 572, 569, 529, 533, 537, 546, 564, 563,
	544, 555, 566, 550, 538, 531, 539, 1362, 196, 221,
	368, 1426, 454, 288, 646, 615, 484, 610, 206, 223,
	1298, 262, 1310, 1318, 0, 1324, 1332, 1333, 1346, 1349,
	1350, 1351, 1352, 1370, 1371, 1373, 1381, 1383, 1386, 1388,
	1395, 1409, 1429, 198, 200, 209, 222, 232, 236, 243,
	261, 276, 278, 285, 298, 310, 318, 319, 322, 328,
	380, 386, 387, 388, 389, 409, 410, 411, 414, 417,
	418, 421, 423, 424, 427, 431, 435, 436, 437, 439,
	441, 443, 455, 460, 474, 475, 476, 477, 478, 481,
	482, 488, 489, 490, 491, 492, 500, 501, 516, 586,
	588, 603, 622, 628, 480, 301, 302, 444, 445, 314,
	315, 642, 643, 300, 598, 629, 596, 641, 623, 438,
	378, 1361, 1367, 381, 281, 305, 320, 1376, 614, 502,
	227, 466, 290, 251, 1394, 1396, 211, 246, 230, 259,
	274, 277, 324, 391, 400, 429, 434, 296, 271, 244,
	459, 241, 485, 519, 520, 521, 523, 395, 266, 433,
	1357, 1385, 376, 576, 577, 316, 396, 0, 0, 0,
	0, 0, 0, 1415, 1399, 528, 0, 1341, 1418, 1309,
	1328, 1428, 1331, 1334, 1378, 1287, 1356, 416, 1325, 1313,
	1282, 1320, 1283, 1311, 1343, 270, 1308, 1401, 1360, 1417,
	366, 267, 1289, 1280, 204, 505, 1314, 430, 1330, 203,
	1380, 487, 252, 377, 374, 583, 282, 273, 269, 250,
	317, 385, 428, 518, 422, 1424, 370, 1366, 0, 497,
	401, 0, 0, 0, 1405, 1404, 1335, 1345, 1407, 1354,
	1392, 1340, 1379, 1297, 1365, 1419, 1326, 1375, 1420, 323,
	248, 325, 202, 413, 498, 286, 0, 0, 0, 0,
	0, 507, 718, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 245, 0, 0, 0, 351,
	360, 359, 339, 340, 342, 344, 350, 357, 363, 336,
	345, 1322, 1372, 607, 1414, 1323, 1374, 265, 321, 272,
	264, 580, 1425, 1406, 1286, 1353, 1413, 1348, 0, 0,
	229, 1416, 1347, 0, 1377, 0, 1431, 1281, 1368, 0,
	1284, 1288, 1427, 1411, 1317, 275, 0, 0, 0, 0,
	0, 0, 0, 1344, 1355, 1389, 1393, 1338, 0, 0,
	0, 0, 0, 0, 3199, 0, 1315, 0, 1364, 0,
	0, 0, 1293, 1285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1342, 0, 0, 0,
	0, 1296, 0, 1316, 1390, 0, 1279, 297, 1290, 402,
	257, 0, 453, 1397, 1410, 1339, 625, 1412, 1337, 1336,
	1384, 1294, 1403, 1329, 365, 1292, 330, 197, 225, 0,
	1327, 412, 461, 473, 1402, 1312, 1321, 253, 1319, 471,
	426, 602, 233, 284, 458, 432, 469, 440, 287, 1363,
	1382, 470, 372, 585, 450, 599, 626, 627, 263, 406,
	612, 522, 620, 644, 226, 260, 420, 506, 605, 494,
	397, 581, 582, 329, 493, 295, 201, 369, 632, 224,
	479, 371, 242, 231, 587, 609, 299, 289, 456, 639,
	213, 517, 597, 239, 483, 0, 0, 647, 247, 504,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 648, 228,
	619, 220, 1291, 618, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 606, 0, 208,
	0, 499, 608, 649, 452, 212, 234, 235, 237, 1307,
	279, 283, 291, 294, 303, 304, 313, 367, 419, 446,
	442, 451, 1398, 579, 600, 613, 624, 630, 631, 633,
	634, 635, 636, 637, 640, 638, 407, 311, 495, 333,
	373, 1387, 1430, 425, 472, 240, 604, 496, 199, 1301,
	1306, 1299, 0, 254, 255, 1369, 575, 1302, 1300, 1358,
	1359, 1303, 1421, 1422, 1423, 1408, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 645, 508, 514, 509, 510, 511,
	512, 513, 0, 515, 1391, 1295, 0, 1304, 1305, 398,
	1400, 591, 592, 668, 384, 486, 601, 335, 349, 352,
	341, 361, 0, 362, 337, 338, 343, 346, 347, 348,
	353, 354, 358, 364, 249, 210, 390, 399, 578, 312,
	216, 217, 218, 524, 525, 526, 527, 616, 617, 621,
	205, 462, 463, 464, 465, 292, 611, 309, 468, 467,
	331, 332, 379, 449, 540, 542, 553, 557, 559, 561,
	567, 570, 541, 543, 554, 558, 560, 562, 568, 571,
	530, 532, 534, 536, 549, 548, 545, 573, 574, 551,
	556, 535, 547, 552, 565, 572, 569, 529, 533, 537,
	546, 564, 563, 544, 555, 566, 550, 538, 531, 539,
	1362, 196, 221, 368, 1426, 454, 288, 646, 615, 484,
	610, 206, 223, 1298, 262, 1310, 1318, 0, 1324, 1332,
	1333, 1346, 1349, 1350, 1351, 1352, 1370, 1371, 1373, 1381,
	1383, 1386, 1388, 1395, 1409, 1429, 198, 200, 209, 222,
	232, 236, 243, 261, 276, 278, 285, 298, 310, 318,
	319, 322, 328, 380, 386, 387, 388, 389, 409, 410,
	411, 414, 417, 418, 421, 423, 424, 427, 431, 435,
	436, 437, 439, 441, 443, 455, 460, 474, 475, 476,
	477, 478, 481, 482, 488, 489, 490, 491, 492, 500,
	501, 516, 586, 588, 603, 622, 628, 480, 301, 302,
	444, 445, 314, 315, 642, 643, 300, 598, 629, 596,
	641, 623, 438, 378, 1361, 1367, 381, 281, 305, 320,
	1376, 614, 502, 227, 466, 290, 251, 1394, 1396, 211,
	246, 230, 259, 274, 277, 324, 391, 400, 429, 434,
	296, 271, 244, 459, 241, 485, 519, 520, 521, 523,
	395, 266, 433, 1357, 1385, 376, 576, 577, 316, 396,
	0, 0, 0, 0, 0, 0, 1415, 1399, 528, 0,
	1341, 1418, 1309, 1328, 1428, 1331, 1334, 1378, 1287, 1356,
	416, 1325, 1313, 1282, 1320, 1283, 1311, 1343, 270, 1308,
	1401, 1360, 1417, 366, 267, 1289, 1280, 204, 505, 1314,
	430, 1330, 203, 1380, 487, 252, 377, 374, 583, 282,
	273, 269, 250, 317, 385, 428, 518, 422, 1424, 370,
	1366, 0, 497, 401, 0, 0, 0, 1405, 1404, 1335,
	1345, 1407, 1354, 1392, 1340, 1379, 1297, 1365, 1419, 1326,
	1375, 1420, 323, 248, 325, 202, 413, 498, 286, 0,
	0, 0, 0, 0, 507, 953, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 245, 0,
	0, 0, 351, 360, 359, 339, 340, 342, 344, 350,
	357, 363, 336, 345, 1322, 1372, 607, 1414, 1323, 1374,
	265, 321, 272, 264, 580, 1425, 1406, 1286, 1353, 1413,
	1348, 0, 0, 229, 1416, 1347, 0, 1377, 0, 1431,
	1281, 1368, 0, 1284, 1288, 1427, 1411, 1317, 275, 0,
	0, 0, 0, 0, 0, 0, 1344, 1355, 1389, 1393,
	1338, 0, 0, 0, 0, 0, 0, 2396, 0, 1315,
	0, 1364, 0, 0, 0, 1293, 1285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1342,
	0, 0, 0, 0, 1296, 0, 1316, 1390, 0, 1279,
	297, 1290, 402, 257, 0, 453, 1397, 1410, 1339, 625,
	1412, 1337, 1336, 1384, 1294, 1403, 1329, 365, 1292, 330,
	197, 225, 0, 1327, 412, 461, 473, 1402, 1312, 1321,
	253, 1319, 471, 426, 602, 233, 284, 458, 432, 469,
	440, 287, 1363, 1382, 470, 372, 585, 450, 599, 626,
	627, 263, 406, 612, 522, 620, 644, 226, 260, 420,
	506, 605, 494, 397, 581, 582, 329, 493, 295, 201,
	369, 632, 224, 479, 371, 242, 231, 587, 609, 299,
	289, 456, 639, 213, 517, 597, 239, 483, 0, 0,
	647, 247, 504, 215, 594, 503, 393, 326, 327, 214,
	0, 457, 268, 293, 0, 0, 258, 415, 589, 590,
	256, 648, 228, 619, 220, 1291, 618, 408, 584, 595,
	394, 383, 219, 593, 392, 382, 334, 355, 356, 280,
	307, 447, 375, 448, 306, 308, 404, 403, 405, 207,
	606, 0, 208, 0, 499, 608, 649, 452, 212, 234,
	235, 237, 1307, 279, 283, 291, 294, 303, 304, 313,
	367, 419, 446, 442, 451, 1398, 579, 600, 613, 624,
	630, 631, 633, 634, 635, 636, 637, 640, 638, 407,
	311, 495, 333, 373, 1387, 1430, 425, 472, 240, 604,
	496, 199, 1301, 1306, 1299, 0, 254, 255, 1369, 575,
	1302, 1300, 1358, 1359, 1303, 1421, 1422, 1423, 1408, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 645, 508, 514,
	509, 510, 511, 512, 513, 0, 515, 1391, 1295, 0,
	1304, 1305, 398, 1400, 591, 592, 668, 384, 486, 601,
	335, 349, 352, 341, 361, 0, 362, 337, 338, 343,
	346, 347, 348, 353, 354, 358, 364, 249, 210, 390,
	399, 578, 312, 216, 217, 218, 524, 525, 526, 527,
	616, 617, 621, 205, 462, 463, 464, 465, 292, 611,
	309, 468, 467, 331, 332, 379, 449, 540, 542, 553,
	557, 559, 561, 567, 570, 541, 543, 554, 558, 560,
	562, 568, 571, 530, 532, 534, 536, 549, 548, 545,
	573, 574, 551, 556, 535, 547, 552, 565, 572, 569,
	529, 533, 537, 546, 564, 563, 544, 555, 566, 550,
	538, 531, 539, 1362, 196, 221, 368, 1426, 454, 288,
	646, 615, 484, 610, 206, 223, 1298, 262, 1310, 1318,
	0, 1324, 1332, 1333, 1346, 1349, 1350, 1351, 1352, 1370,
	1371, 1373, 1381, 1383, 1386, 1388, 1395, 1409, 1429, 198,
	200, 209, 222, 232, 236, 243, 261, 276, 278, 285,
	298, 310, 318, 319, 322, 328, 380, 386, 387, 388,
	389, 409, 410, 411, 414, 417, 418, 421, 423, 424,
	427, 431, 435, 436, 437, 439, 441, 443, 455, 460,
	474, 475, 476, 477, 478, 481, 482, 488, 489, 490,
	491, 492, 500, 501, 516, 586, 588, 603, 622, 628,
	480, 301, 302, 444, 445, 314, 315, 642, 643, 300,
	598, 629, 596, 641, 623, 438, 378, 1361, 1367, 381,
	281, 305, 320, 1376, 614, 502, 227, 466, 290, 251,
	1394, 1396, 211, 246, 230, 259, 274, 277, 324, 391,
	400, 429, 434, 296, 271, 244, 459, 241, 485, 519,
	520, 521, 523, 395, 266, 433, 1357, 1385, 376, 576,
	577, 316, 396, 0, 0, 0, 0, 0, 0, 1415,
	1399, 528, 0, 1341, 1418, 1309, 1328, 1428, 1331, 1334,
	1378, 1287, 1356, 416, 1325, 1313, 1282, 1320, 1283, 1311,
	1343, 270, 1308, 1401, 1360, 1417, 366, 267, 1289, 1280,
	204, 505, 1314, 430, 1330, 203, 1380, 487, 252, 377,
	374, 583, 282, 273, 269, 250, 317, 385, 428, 518,
	422, 1424, 370, 1366, 0, 497, 401, 0, 0, 0,
	1405, 1404, 1335, 1345, 1407, 1354, 1392, 1340, 1379, 1297,
	1365, 1419, 1326, 1375, 1420, 323, 248, 325, 202, 413,
	498, 286, 0, 95, 0, 0, 0, 507, 718, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 351, 360, 359, 339, 340,
	342, 344, 350, 357, 363, 336, 345, 1322, 1372, 607,
	1414, 1323, 1374, 265, 321, 272, 264, 580, 1425, 1406,
	1286, 1353, 1413, 1348, 0, 0, 229, 1416, 1347, 0,
	1377, 0, 1431, 1281, 1368, 0, 1284, 1288, 1427, 1411,
	1317, 275, 0, 0, 0, 0, 0, 0, 0, 1344,
	1355, 1389, 1393, 1338, 0, 0, 0, 0, 0, 0,
	0, 0, 1315, 0, 1364, 0, 0, 0, 1293, 1285,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1342, 0, 0, 0, 0, 1296, 0, 1316,
	1390, 0, 1279, 297, 1290, 402, 257, 0, 453, 1397,
	1410, 1339, 625, 1412, 1337, 1336, 1384, 1294, 1403, 1329,
	365, 1292, 330, 197, 225, 0, 1327, 412, 461, 473,
	1402, 1312, 1321, 253, 1319, 471, 426, 602, 233, 284,
	458, 432, 469, 440, 287, 1363, 1382, 470, 372, 585,
	450, 599, 626, 627, 263, 406, 612, 522, 620, 644,
	226, 260, 420, 506, 605, 494, 397, 581, 582, 329,
	493, 295, 201, 369, 632, 224, 479, 371, 242, 231,
	587, 609, 299, 289, 456, 639, 213, 517, 597, 239,
	483, 0, 0, 647, 247, 504, 215, 594, 503, 393,
	326, 327, 214, 0, 457, 268, 293, 0, 0, 258,
	415, 589, 590, 256, 648, 228, 619, 220, 1291, 618,
	408, 584, 595, 394, 383, 219, 593, 392, 382, 334,
	355, 356, 280, 307, 447, 375, 448, 306, 308, 404,
	403, 405, 207, 606, 0, 208, 0, 499, 608, 649,
	452, 212, 234, 235, 237, 1307, 279, 283, 291, 294,
	303, 304, 313, 367, 419, 446, 442, 451, 1398, 579,
	600, 613, 624, 630, 631, 633, 634, 635, 636, 637,
	640, 638, 407, 311, 495, 333, 373, 1387, 1430, 425,
	472, 240, 604, 496, 199, 1301, 1306, 1299, 0, 254,
	255, 1369, 575, 1302, 1300, 1358, 1359, 1303, 1421, 1422,
	1423, 1408, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	645, 508, 514, 509, 510, 511, 512, 513, 0, 515,
	1391, 1295, 0, 1304, 1305, 398, 1400, 591, 592, 668,
	384, 486, 601, 335, 349, 352, 341, 361, 0, 362,
	337, 338, 343, 346, 347, 348, 353, 354, 358, 364,
	249, 210, 390, 399, 578, 312, 216, 217, 218, 524,
	525, 526, 527, 616, 617, 621, 205, 462, 463, 464,
	465, 292, 611, 309, 468, 467, 331, 332, 379, 449,
	540, 542, 553, 557, 559, 561, 567, 570, 541, 543,
	554, 558, 560, 562, 568, 571, 530, 532, 534, 536,
	549, 548, 545, 573, 574, 551, 556, 535, 547, 552,
	565, 572, 569, 529, 533, 537, 546, 564, 563, 544,
	555, 566, 550, 538, 531, 539, 1362, 196, 221, 368,
	1426, 454, 288, 646, 615, 484, 610, 206, 223, 1298,
	262, 1310, 1318, 0, 1324, 1332, 1333, 1346, 1349, 1350,
	1351, 1352, 1370, 1371, 1373, 1381, 1383, 1386, 1388, 1395,
	1409, 1429, 198, 200, 209, 222, 232, 236, 243, 261,
	276, 278, 285, 298, 310, 318, 319, 322, 328, 380,
	386, 387, 388, 389, 409, 410, 411, 414, 417, 418,
	421, 423, 424, 427, 431, 435, 436, 437, 439, 441,
	443, 455, 460, 474, 475, 476, 477, 478, 481, 482,
	488, 489, 490, 491, 492, 500, 501, 516, 586, 588,
	603, 622, 628, 480, 301, 302, 444, 445, 314, 315,
	642, 643, 300, 598, 629, 596, 641, 623, 438, 378,
	1361, 1367, 381, 281, 305, 320, 1376, 614, 502, 227,
	466, 290, 251, 1394, 1396, 211, 246, 230, 259, 274,
	277, 324, 391, 400, 429, 434, 296, 271, 244, 459,
	241, 485, 519, 520, 521, 523, 395, 266, 433, 1357,
	1385, 376, 576, 577, 316, 396, 0, 0, 0, 0,
	0, 0, 1415, 1399, 528, 0, 1341, 1418, 1309, 1328,
	1428, 1331, 1334, 1378, 1287, 1356, 416, 1325, 1313, 1282,
	1320, 1283, 1311, 1343, 270, 1308, 1401, 1360, 1417, 366,
	267, 1289, 1280, 204, 505, 1314, 430, 1330, 203, 1380,
	487, 252, 377, 374, 583, 282, 273, 269, 250, 317,
	385, 428, 518, 422, 1424, 370, 1366, 0, 497, 401,
	0, 0, 0, 1405, 1404, 1335, 1345, 1407, 1354, 1392,
	1340, 1379, 1297, 1365, 1419, 1326, 1375, 1420, 323, 248,
	325, 202, 413, 498, 286, 0, 0, 0, 0, 0,
	507, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 245, 0, 0, 0, 351, 360,
	359, 339, 340, 342, 344, 350, 357, 363, 336, 345,
	1322, 1372, 607, 1414, 1323, 1374, 265, 321, 272, 264,
	580, 1425, 1406, 1286, 1353, 1413, 1348, 0, 0, 229,
	1416, 1347, 0, 1377, 0, 1431, 1281, 1368, 0, 1284,
	1288, 1427, 1411, 1317, 275, 0, 0, 0, 0, 0,
	0, 0, 1344, 1355, 1389, 1393, 1338, 0, 0, 0,
	0, 0, 0, 0, 0, 1315, 0, 1364, 0, 0,
	0, 1293, 1285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1342, 0, 0, 0, 0,
	1296, 0, 1316, 1390, 0, 1279, 297, 1290, 402, 257,
	0, 453, 1397, 1410, 1339, 625, 1412, 1337, 1336, 1384,
	1294, 1403, 1329, 365, 1292, 330, 197, 225, 0, 1327,
	412, 461, 473, 1402, 1312, 1321, 253, 1319, 471, 426,
	602, 233, 284, 458, 432, 469, 440, 287, 1363, 1382,
	470, 372, 585, 450, 599, 626, 627, 263, 406, 612,
	522, 620, 644, 226, 260, 420, 506, 605, 494, 397,
	581, 582, 329, 493, 295, 201, 369, 632, 224, 479,
	371, 242, 231, 587, 609, 299, 289, 456, 639, 213,
	517, 597, 239, 483, 0, 0, 647, 247, 504, 215,
	594, 503, 393, 326, 327, 214, 0, 457, 268, 293,
	0, 0, 258, 415, 589, 590, 256, 648, 228, 619,
	220, 1291, 618, 408, 584, 595, 394, 383, 219, 593,
	392, 382, 334, 355, 356, 280, 307, 447, 375, 448,
	306, 308, 404, 403, 405, 207, 606, 0, 208, 0,
	499, 608, 649, 452, 212, 234, 235, 237, 1307, 279,
	283, 291, 294, 303, 304, 313, 367, 419, 446, 442,
	451, 1398, 579, 600, 613, 624, 630, 631, 633, 634,
	635, 636, 637, 640, 638, 407, 311, 495, 333, 373,
	1387, 1430, 425, 472, 240, 604, 496, 199, 1301, 1306,
	1299, 0, 254, 255, 1369, 575, 1302, 1300, 1358, 1359,
	1303, 1421, 1422, 1423, 1408, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 645, 508, 514, 509, 510, 511, 512,
	513, 0, 515, 1391, 1295, 0, 1304, 1305, 398, 1400,
	591, 592, 668, 384, 486, 601, 335, 349, 352, 341,
	361, 0, 362, 337, 338, 343, 346, 347, 348, 353,
	354, 358, 364, 249, 210, 390, 399, 578, 312, 216,
	217, 218, 524, 525, 526, 527, 616, 617, 621, 205,
	462, 463, 464, 465, 292, 611, 309, 468, 467, 331,
	332, 379, 449, 540, 542, 553, 557, 559, 561, 567,
	570, 541, 543, 554, 558, 560, 562, 568, 571, 530,
	532, 534, 536, 549, 548, 545, 573, 574, 551, 556,
	535, 547, 552, 565, 572, 569, 529, 533, 537, 546,
	564, 563, 544, 555, 566, 550, 538, 531, 539, 1362,
	196, 221, 368, 1426, 454, 288, 646, 615, 484, 610,
	206, 223, 1298, 262, 1310, 1318, 0, 1324, 1332, 1333,
	1346, 1349, 1350, 1351, 1352, 1370, 1371, 1373, 1381, 1383,
	1386, 1388, 1395, 1409, 1429, 198, 200, 209, 222, 232,
	236, 243, 261, 276, 278, 285, 298, 310, 318, 319,
	322, 328, 380, 386, 387, 388, 389, 409, 410, 411,
	414, 417, 418, 421, 423, 424, 427, 431, 435, 436,
	437, 439, 441, 443, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 488, 489, 490, 491, 492, 500, 501,
	516, 586, 588, 603, 622, 628, 480, 301, 302, 444,
	445, 314, 315, 642, 643, 300, 598, 629, 596, 641,
	623, 438, 378, 1361, 1367, 381, 281, 305, 320, 1376,
	614, 502, 227, 466, 290, 251, 1394, 1396, 211, 246,
	230, 259, 274, 277, 324, 391, 400, 429, 434, 296,
	271, 244, 459, 241, 485, 519, 520, 521, 523, 395,
	266, 433, 1357, 1385, 376, 576, 577, 316, 396, 0,
	0, 0, 0, 0, 0, 1415, 1399, 528, 0, 1341,
	1418, 1309, 1328, 1428, 1331, 1334, 1378, 1287, 1356, 416,
	1325, 1313, 1282, 1320, 1283, 1311, 1343, 270, 1308, 1401,
	1360, 1417, 366, 267, 1289, 1280, 204, 505, 1314, 430,
	1330, 203, 1380, 487, 252, 377, 374, 583, 282, 273,
	269, 250, 317, 385, 428, 518, 422, 1424, 370, 1366,
	0, 497, 401, 0, 0, 0, 1405, 1404, 1335, 1345,
	1407, 1354, 1392, 1340, 1379, 1297, 1365, 1419, 1326, 1375,
	1420, 323, 248, 325, 202, 413, 498, 286, 0, 0,
	0, 0, 0, 507, 718, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 245, 0, 0,
	0, 351, 360, 359, 339, 340, 342, 344, 350, 357,
	363, 336, 345, 1322, 1372, 607, 1414, 1323, 1374, 265,
	321, 272, 264, 580, 1425, 1406, 1286, 1353, 1413, 1348,
	0, 0, 229, 1416, 1347, 0, 1377, 0, 1431, 1281,
	1368, 0, 1284, 1288, 1427, 1411, 1317, 275, 0, 0,
	0, 0, 0, 0, 0, 1344, 1355, 1389, 1393, 1338,
	0, 0, 0, 0, 0, 0, 0, 0, 1315, 0,
	1364, 0, 0, 0, 1293, 1285, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1342, 0,
	0, 0, 0, 1296, 0, 1316, 1390, 0, 1279, 297,
	1290, 402, 257, 0, 453, 1397, 1410, 1339, 625, 1412,
	1337, 1336, 1384, 1294, 1403, 1329, 365, 1292, 330, 197,
	225, 0, 1327, 412, 461, 473, 1402, 1312, 1321, 253,
	1319, 471, 426, 602, 233, 284, 458, 432, 469, 440,
	287, 1363, 1382, 470, 372, 585, 450, 599, 626, 627,
	263, 406, 612, 522, 620, 644, 226, 260, 420, 506,
	605, 494, 397, 581, 582, 329, 493, 295, 201, 369,
	632, 224, 479, 371, 242, 231, 587, 609, 299, 289,
	456, 639, 213, 517, 597, 239, 483, 0, 0, 647,
	247, 504, 215, 594, 503, 393, 326, 327, 214, 0,
	457, 268, 293, 0, 0, 258, 415, 589, 590, 256,
	648, 228, 619, 220, 1291, 618, 408, 584, 595, 394,
	383, 219, 593, 392, 382, 334, 355, 356, 280, 307,
	447, 375, 448, 306, 308, 404, 403, 405, 207, 606,
	0, 208, 0, 499, 608, 649, 452, 212, 234, 235,
	237, 1307, 279, 283, 291, 294, 303, 304, 313, 367,
	419, 446, 442, 451, 1398, 579, 600, 613, 624, 630,
	631, 633, 634, 635, 636, 637, 640, 638, 407, 311,
	495, 333, 373, 1387, 1430, 425, 472, 240, 604, 496,
	199, 1301, 1306, 1299, 0, 254, 255, 1369, 575, 1302,
	1300, 1358, 1359, 1303, 1421, 1422, 1423, 1408, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 645, 508, 514, 509,
	510, 511, 512, 513, 0, 515, 1391, 1295, 0, 1304,
	1305, 398, 1400, 591, 592, 668, 384, 486, 601, 335,
	349, 352, 341, 361, 0, 362, 337, 338, 343, 346,
	347, 348, 353, 354, 358, 364, 249, 210, 390, 399,
	578, 312, 216, 217, 218, 524, 525, 526, 527, 616,
	617, 621, 205, 462, 463, 464, 465, 292, 611, 309,
	468, 467, 331, 332, 379, 449, 540, 542, 553, 557,
	559, 561, 567, 570, 541, 543, 554, 558, 560, 562,
	568, 571, 530, 532, 534, 536, 549, 548, 545, 573,
	574, 551, 556, 535, 547, 552, 565, 572, 569, 529,
	533, 537, 546, 564, 563, 544, 555, 566, 550, 538,
	531, 539, 1362, 196, 221, 368, 1426, 454, 288, 646,
	615, 484, 610, 206, 223, 1298, 262, 1310, 1318, 0,
	1324, 1332, 1333, 1346, 1349, 1350, 1351, 1352, 1370, 1371,
	1373, 1381, 1383, 1386, 1388, 1395, 1409, 1429, 198, 200,
	209, 222, 232, 236, 243, 261, 276, 278, 285, 298,
	310, 318, 319, 322, 328, 380, 386, 387, 388, 389,
	409, 410, 411, 414, 417, 418, 421, 423, 424, 427,
	431, 435, 436, 437, 439, 441, 443, 455, 460, 474,
	475, 476, 477, 478, 481, 482, 488, 489, 490, 491,
	492, 500, 501, 516, 586, 588, 603, 622, 628, 480,
	301, 302, 444, 445, 314, 315, 642, 643, 300, 598,
	629, 596, 641, 623, 438, 378, 1361, 1367, 381, 281,
	305, 320, 1376, 614, 502, 227, 466, 290, 251, 1394,
	1396, 211, 246, 230, 259, 274, 277, 324, 391, 400,
	429, 434, 296, 271, 244, 459, 241, 485, 519, 520,
	521, 523, 395, 266, 433, 1357, 1385, 376, 576, 577,
	316, 396, 0, 0, 0, 0, 0, 0, 1415, 1399,
	528, 0, 1341, 1418, 1309, 1328, 1428, 1331, 1334, 1378,
	1287, 1356, 416, 1325, 1313, 1282, 1320, 1283, 1311, 1343,
	270, 1308, 1401, 1360, 1417, 366, 267, 1289, 1280, 204,
	505, 1314, 430, 1330, 203, 1380, 487, 252, 377, 374,
	583, 282, 273, 269, 250, 317, 385, 428, 518, 422,
	1424, 370, 1366, 0, 497, 401, 0, 0, 0, 1405,
	1404, 1335, 1345, 1407, 1354, 1392, 1340, 1379, 1297, 1365,
	1419, 1326, 1375, 1420, 323, 248, 325, 202, 413, 498,
	286, 0, 0, 0, 0, 0, 507, 953, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	245, 0, 0, 0, 351, 360, 359, 339, 340, 342,
	344, 350, 357, 363, 336, 345, 1322, 1372, 607, 1414,
	1323, 1374, 265, 321, 272, 264, 580, 1425, 1406, 1286,
	1353, 1413, 1348, 0, 0, 229, 1416, 1347, 0, 1377,
	0, 1431, 1281, 1368, 0, 1284, 1288, 1427, 1411, 1317,
	275, 0, 0, 0, 0, 0, 0, 0, 1344, 1355,
	1389, 1393, 1338, 0, 0, 0, 0, 0, 0, 0,
	0, 1315, 0, 1364, 0, 0, 0, 1293, 1285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1342, 0, 0, 0, 0, 1296, 0, 1316, 1390,
	0, 1279, 297, 1290, 402, 257, 0, 453, 1397, 1410,
	1339, 625, 1412, 1337, 1336, 1384, 1294, 1403, 1329, 365,
	1292, 330, 197, 225, 0, 1327, 412, 461, 473, 1402,
	1312, 1321, 253, 1319, 471, 426, 602, 233, 284, 458,
	432, 469, 440, 287, 1363, 1382, 470, 372, 585, 450,
	599, 626, 627, 263, 406, 612, 522, 620, 644, 226,
	260, 420, 506, 605, 494, 397, 581, 582, 329, 493,
	295, 201, 369, 632, 224, 479, 371, 242, 231, 587,
	609, 299, 289, 456, 639, 213, 517, 597, 239, 483,
	0, 0, 647, 247, 504, 215, 594, 503, 393, 326,
	327, 214, 0, 457, 268, 293, 0, 0, 258, 415,
	589, 590, 256, 648, 228, 619, 220, 1291, 618, 408,
	584, 595, 394, 383, 219, 593, 392, 382, 334, 355,
	356, 280, 307, 447, 375, 448, 306, 308, 404, 403,
	405, 207, 606, 0, 208, 0, 499, 608, 649, 452,
	212, 234, 235, 237, 1307, 279, 283, 291, 294, 303,
	304, 313, 367, 419, 446, 442, 451, 1398, 579, 600,
	613, 624, 630, 631, 633, 634, 635, 636, 637, 640,
	638, 407, 311, 495, 333, 373, 1387, 1430, 425, 472,
	240, 604, 496, 199, 1301, 1306, 1299, 0, 254, 255,
	1369, 575, 1302, 1300, 1358, 1359, 1303, 1421, 1422, 1423,
	1408, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 645,
	508, 514, 509, 510, 511, 512, 513, 0, 515, 1391,
	1295, 0, 1304, 1305, 398, 1400, 591, 592, 668, 384,
	486, 601, 335, 349, 352, 341, 361, 0, 362, 337,
	338, 343, 346, 347, 348, 353, 354, 358, 364, 249,
	210, 390, 399, 578, 312, 216, 217, 218, 524, 525,
	526, 527, 616, 617, 621, 205, 462, 463, 464, 465,
	292, 611, 309, 468, 467, 331, 332, 379, 449, 540,
	542, 553, 557, 559, 561, 567, 570, 541, 543, 554,
	558, 560, 562, 568, 571, 530, 532, 534, 536, 549,
	548, 545, 573, 574, 551, 556, 535, 547, 552, 565,
	572, 569, 529, 533, 537, 546, 564, 563, 544, 555,
	566, 550, 538, 531, 539, 1362, 196, 221, 368, 1426,
	454, 288, 646, 615, 484, 610, 206, 223, 1298, 262,
	1310, 1318, 0, 1324, 1332, 1333, 1346, 1349, 1350, 1351,
	1352, 1370, 1371, 1373, 1381, 1383, 1386, 1388, 1395, 1409,
	1429, 198, 200, 209, 222, 232, 236, 243, 261, 276,
	278, 285, 298, 310, 318, 319, 322, 328, 380, 386,
	387, 388, 389, 409, 410, 411, 414, 417, 418, 421,
	423, 424, 427, 431, 435, 436, 437, 439, 441, 443,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 488,
	489, 490, 491, 492, 500, 501, 516, 586, 588, 603,
	622, 628, 480, 301, 302, 444, 445, 314, 315, 642,
	643, 300, 598, 629, 596, 641, 623, 438, 378, 1361,
	1367, 381, 281, 305, 320, 1376, 614, 502, 227, 466,
	290, 251, 1394, 1396, 211, 246, 230, 259, 274, 277,
	324, 391, 400, 429, 434, 296, 271, 244, 459, 241,
	485, 519, 520, 521, 523, 395, 266, 433, 1357, 1385,
	376, 576, 577, 316, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 528, 0, 771, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 758,
	0, 0, 0, 270, 763, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 770, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 765, 766, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 95, 0, 0, 1017, 507,
	953, 742, 919, 957, 1018, 970, 971, 972, 958, 0,
	238, 959, 960, 245, 961, 0, 918, 801, 803, 802,
	868, 869, 870, 871, 872, 873, 874, 804, 805, 799,
	966, 607, 973, 974, 0, 265, 321, 272, 264, 580,
	0, 0, 2218, 2219, 2220, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 738, 755, 0, 769,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	752, 753, 0, 0, 0, 0, 913, 0, 754, 0,
	0, 762, 975, 976, 977, 978, 979, 980, 981, 982,
	983, 984, 985, 986, 987, 988, 989, 990, 991, 992,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012,
	1013, 1014, 1015, 1016, 764, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 912, 0, 0, 625, 0, 0, 910, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 963, 0, 471, 426, 602,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 599, 626, 627, 263, 406, 612, 522,
	620, 644, 226, 260, 420, 506, 605, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 632, 224, 479, 371,
	242, 231, 587, 609, 299, 289, 456, 639, 213, 517,
	597, 239, 483, 0, 0, 647, 247, 504, 215, 594,
	503, 393, 326, 327, 214, 0, 457, 268, 293, 0,
	0, 258, 415, 964, 965, 256, 648, 809, 619, 220,
	0, 618, 408, 584, 595, 394, 383, 219, 593, 392,
	382, 334, 817, 818, 280, 307, 894, 893, 892, 306,
	308, 890, 891, 889, 207, 606, 0, 208, 0, 499,
	608, 649, 452, 212, 234, 235, 237, 0, 279, 283,
	291, 294, 303, 304, 313, 367, 419, 446, 442, 451,
	0, 579, 600, 613, 624, 630, 631, 633, 634, 635,
	636, 637, 640, 638, 407, 311, 495, 333, 373, 0,
	0, 425, 472, 240, 604, 496, 900, 922, 911, 775,
	776, 901, 902, 926, 903, 778, 779, 923, 924, 772,
	773, 777, 925, 927, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 645, 508, 514, 509, 510, 511, 512, 513,
	0, 515, 914, 761, 760, 0, 767, 768, 0, 797,
	798, 800, 806, 807, 808, 819, 866, 867, 875, 877,
	878, 876, 879, 880, 881, 884, 885, 886, 887, 882,
	883, 888, 780, 784, 781, 782, 783, 795, 785, 786,
	787, 788, 789, 790, 791, 792, 793, 794, 796, 937,
	938, 939, 940, 941, 942, 812, 816, 815, 813, 814,
	810, 811, 838, 837, 839, 840, 841, 842, 843, 844,
	846, 845, 847, 848, 849, 850, 851, 852, 820, 821,
	824, 825, 823, 822, 826, 835, 836, 827, 828, 829,
	830, 831, 832, 834, 833, 853, 854, 855, 856, 857,
	859, 858, 862, 863, 861, 860, 865, 864, 759, 196,
	221, 368, 0, 454, 288, 646, 615, 484, 610, 206,
	223, 928, 262, 929, 0, 0, 933, 0, 0, 0,
	935, 934, 0, 936, 898, 897, 0, 0, 930, 931,
	0, 932, 0, 0, 198, 200, 209, 222, 232, 236,
	243, 261, 276, 278, 285, 298, 310, 318, 319, 322,
	328, 380, 386, 387, 388, 389, 409, 410, 411, 414,
	417, 418, 421, 423, 424, 427, 431, 435, 436, 437,
	439, 441, 443, 455, 460, 474, 475, 476, 477, 478,
	481, 482, 488, 489, 490, 491, 492, 500, 501, 516,
	586, 588, 603, 622, 628, 480, 943, 944, 945, 946,
	947, 948, 949, 950, 300, 598, 629, 596, 641, 623,
	438, 378, 0, 0, 381, 281, 305, 320, 0, 614,
	502, 227, 466, 290, 251, 968, 0, 211, 246, 230,
	259, 274, 277, 324, 391, 400, 429, 434, 296, 271,
	244, 459, 241, 485, 519, 520, 521, 523, 395, 266,
	433, 396, 0, 376, 576, 577, 316, 0, 0, 0,
	528, 0, 771, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 758, 0, 0, 0,
	270, 763, 0, 0, 0, 366, 267, 0, 0, 204,
	505, 0, 430, 0, 203, 0, 487, 252, 377, 374,
	583, 282, 273, 269, 250, 317, 385, 428, 518, 422,
	770, 370, 0, 0, 497, 401, 0, 0, 0, 0,
	0, 0, 0, 0, 765, 766, 0, 0, 0, 0,
	0, 0, 2425, 0, 323, 248, 325, 202, 413, 498,
	286, 0, 95, 0, 0, 1017, 507, 953, 742, 919,
	957, 1018, 970, 971, 972, 958, 0, 238, 959, 960,
	245, 961, 0, 918, 801, 803, 802, 868, 869, 870,
	871, 872, 873, 874, 804, 805, 799, 966, 607, 973,
	974, 2426, 265, 321, 272, 264, 580, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 738, 755, 0, 769, 0, 0, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 752, 753, 0,
	0, 0, 0, 913, 0, 754, 0, 0, 762, 975,
	976, 977, 978, 979, 980, 981, 982, 983, 984, 985,
	986, 987, 988, 989, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015,
	1016, 764, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 402, 257, 0, 453, 912, 0,
	0, 625, 0, 0, 910, 0, 0, 0, 0, 365,
	0, 330, 197, 225, 0, 0, 412, 461, 473, 0,
	0, 0, 963, 0, 471, 426, 602, 233, 284, 458,
	432, 469, 440, 287, 0, 0, 470, 372, 585, 450,
	599, 626, 627, 263, 406, 612, 522, 620, 644, 226,
	260, 420, 506, 605, 494, 397, 581, 582, 329, 493,
	295, 201, 369, 632, 224, 479, 371, 242, 231, 587,
	609, 299, 289, 456, 639, 213, 517, 597, 239, 483,
	0, 0, 647, 247, 504, 215, 594, 503, 393, 326,
	327, 214, 0, 457, 268, 293, 0, 0, 258, 415,
	964, 965, 256, 648, 809, 619, 220, 0, 618, 408,
	584, 595, 394, 383, 219, 593, 392, 382, 334, 817,
	818, 280, 307, 894, 893, 892, 306, 308, 890, 891,
	889, 207, 606, 0, 208, 0, 499, 608, 649, 452,
	212, 234, 235, 237, 0, 279, 283, 291, 294, 303,
	304, 313, 367, 419, 446, 442, 451, 0, 579, 600,
	613, 624, 630, 631, 633, 634, 635, 636, 637, 640,
	638, 407, 311, 495, 333, 373, 0, 0, 425, 472,
	240, 604, 496, 900, 922, 911, 775, 776, 901, 902,
	926, 903, 778, 779, 923, 924, 772, 773, 777, 925,
	927, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 645,
	508, 514, 509, 510, 511, 512, 513, 0, 515, 914,
	761, 760, 0, 767, 768, 0, 797, 798, 800, 806,
	807, 808, 819, 866, 867, 875, 877, 878, 876, 879,
	880, 881, 884, 885, 886, 887, 882, 883, 888, 780,
	784, 781, 782, 783, 795, 785, 786, 787, 788, 789,
	790, 791, 792, 793, 794, 796, 937, 938, 939, 940,
	941, 942, 812, 816, 815, 813, 814, 810, 811, 838,
	837, 839, 840, 841, 842, 843, 844, 846, 845, 847,
	848, 849, 850, 851, 852, 820, 821, 824, 825, 823,
	822, 826, 835, 836, 827, 828, 829, 830, 831, 832,
	834, 833, 853, 854, 855, 856, 857, 859, 858, 862,
	863, 861, 860, 865, 864, 759, 196, 221, 368, 0,
	454, 288, 646, 615, 484, 610, 206, 223, 928, 262,
	929, 0, 0, 933, 0, 0, 0, 935, 934, 0,
	936, 898, 897, 0, 0, 930, 931, 0, 932, 0,
	0, 198, 200, 209, 222, 232, 236, 243, 261, 276,
	278, 285, 298, 310, 318, 319, 322, 328, 380, 386,
	387, 388, 389, 409, 410, 411, 414, 417, 418, 421,
	423, 424, 427, 431, 435, 436, 437, 439, 441, 443,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 488,
	489, 490, 491, 492, 500, 501, 516, 586, 588, 603,
	622, 628, 480, 943, 944, 945, 946, 947, 948, 949,
	950, 300, 598, 629, 596, 641, 623, 438, 378, 0,
	0, 381, 281, 305, 320, 0, 614, 502, 227, 466,
	290, 251, 968, 0, 211, 246, 230, 259, 274, 277,
	324, 391, 400, 429, 434, 296, 271, 244, 459, 241,
	485, 519, 520, 521, 523, 395, 266, 433, 396, 0,
	376, 576, 577, 316, 0, 0, 86, 528, 0, 771,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 758, 0, 0, 0, 270, 763, 0,
	0, 0, 366, 267, 0, 0, 204, 505, 0, 430,
	0, 203, 0, 487, 252, 377, 374, 583, 282, 273,
	269, 250, 317, 385, 428, 518, 422, 770, 370, 0,
	0, 497, 401, 0, 0, 0, 0, 0, 0, 0,
	0, 765, 766, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 248, 325, 202, 413, 498, 286, 0, 95,
	0, 0, 1017, 507, 953, 742, 919, 957, 1018, 970,
	971, 972, 958, 0, 238, 959, 960, 245, 961, 0,
	918, 801, 803, 802, 868, 869, 870, 871, 872, 873,
	874, 804, 805, 799, 966, 607, 973, 974, 0, 265,
	321, 272, 264, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	738, 755, 0, 769, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 752, 753, 0, 0, 0, 0,
	913, 0, 754, 0, 0, 762, 975, 976, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 764, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 402, 257, 0, 453, 912, 0, 0, 625, 0,
	0, 910, 0, 0, 0, 0, 365, 0, 330, 197,
	225, 0, 0, 412, 461, 473, 0, 0, 0, 963,
	0, 471, 426, 602, 233, 284, 458, 432, 469, 440,
	287, 0, 0, 470, 372, 585, 450, 599, 626, 627,
	263, 406, 612, 522, 620, 644, 226, 260, 420, 506,
	605, 494, 397, 581, 582, 329, 493, 295, 201, 369,
	632, 224, 479, 371, 242, 231, 587, 609, 299, 289,
	456, 639, 213, 517, 597, 239, 483, 0, 0, 647,
	247, 504, 215, 594, 503, 393, 326, 327, 214, 0,
	457, 268, 293, 0, 0, 258, 415, 964, 965, 256,
	648, 809, 619, 220, 0, 618, 408, 584, 595, 394,
	383, 219, 593, 392, 382, 334, 817, 818, 280, 307,
	894, 893, 892, 306, 308, 890, 891, 889, 207, 606,
	0, 208, 0, 499, 608, 649, 452, 212, 234, 235,
	237, 0, 279, 283, 291, 294, 303, 304, 313, 367,
	419, 446, 442, 451, 0, 579, 600, 613, 624, 630,
	631, 633, 634, 635, 636, 637, 640, 638, 407, 311,
	495, 333, 373, 0, 0, 425, 472, 240, 604, 496,
	900, 922, 911, 775, 776, 901, 902, 926, 903, 778,
	779, 923, 924, 772, 773, 777, 925, 927, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 645, 508, 514, 509,
	510, 511, 512, 513, 0, 515, 914, 761, 760, 0,
	767, 768, 0, 797, 798, 800, 806, 807, 808, 819,
	866, 867, 875, 877, 878, 876, 879, 880, 881, 884,
	885, 886, 887, 882, 883, 888, 780, 784, 781, 782,
	783, 795, 785, 786, 787, 788, 789, 790, 791, 792,
	793, 794, 796, 937, 938, 939, 940, 941, 942, 812,
	816, 815, 813, 814, 810, 811, 838, 837, 839, 840,
	841, 842, 843, 844, 846, 845, 847, 848, 849, 850,
	851, 852, 820, 821, 824, 825, 823, 822, 826, 835,
	836, 827, 828, 829, 830, 831, 832, 834, 833, 853,
	854, 855, 856, 857, 859, 858, 862, 863, 861, 860,
	865, 864, 759, 196, 221, 368, 94, 454, 288, 646,
	615, 484, 610, 206, 223, 928, 262, 929, 0, 0,
	933, 0, 0, 0, 935, 934, 0, 936, 898, 897,
	0, 0, 930, 931, 0, 932, 0, 0, 198, 200,
	209, 222, 232, 236, 243, 261, 276, 278, 285, 298,
	310, 318, 319, 322, 328, 380, 386, 387, 388, 389,
	409, 410, 411, 414, 417, 418, 421, 423, 424, 427,
	431, 435, 436, 437, 439, 441, 443, 455, 460, 474,
	475, 476, 477, 478, 481, 482, 488, 489, 490, 491,
	492, 500, 501, 516, 586, 588, 603, 622, 628, 480,
	943, 944, 945, 946, 947, 948, 949, 950, 300, 598,
	629, 596, 641, 623, 438, 378, 0, 0, 381, 281,
	305, 320, 0, 614, 502, 227, 466, 290, 251, 968,
	0, 211, 246, 230, 259, 274, 277, 324, 391, 400,
	429, 434, 296, 271, 244, 459, 241, 485, 519, 520,
	521, 523, 395, 266, 433, 396, 0, 376, 576, 577,
	316, 0, 0, 0, 528, 0, 771, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	758, 0, 0, 0, 270, 763, 0, 0, 0, 366,
	267, 0, 0, 204, 505, 0, 430, 0, 203, 0,
	487, 252, 377, 374, 583, 282, 273, 269, 250, 317,
	385, 428, 518, 422, 770, 370, 0, 0, 497, 401,
	0, 0, 0, 0, 0, 0, 0, 0, 765, 766,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 248,
	325, 202, 413, 498, 286, 0, 95, 0, 0, 1017,
	507, 953, 742, 919, 957, 1018, 970, 971, 972, 958,
	0, 238, 959, 960, 245, 961, 0, 918, 801, 803,
	802, 868, 869, 870, 871, 872, 873, 874, 804, 805,
	799, 966, 607, 973, 974, 0, 265, 321, 272, 264,
	580, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 738, 755, 0,
	769, 0, 0, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 752, 753, 0, 0, 0, 0, 913, 0, 754,
	0, 0, 762, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 1016, 764, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 0, 402, 257,
	0, 453, 912, 0, 0, 625, 0, 0, 910, 0,
	0, 0, 0, 365, 0, 330, 197, 225, 0, 0,
	412, 461, 473, 0, 0, 0, 963, 0, 471, 426,
	602, 233, 284, 458, 432, 469, 440, 287, 4080, 0,
	470, 372, 585, 450, 599, 626, 627, 263, 406, 612,
	522, 620, 644, 226, 260, 420, 506, 605, 494, 397,
	581, 582, 329, 493, 295, 201, 369, 632, 224, 479,
	371, 242, 231, 587, 609, 299, 289, 456, 639, 213,
	517, 597, 239, 483, 0, 0, 647, 247, 504, 215,
	594, 503, 393, 326, 327, 214, 0, 457, 268, 293,
	0, 0, 258, 415, 964, 965, 256, 648, 809, 619,
	220, 0, 618, 408, 584, 595, 394, 383, 219, 593,
	392, 382, 334, 817, 818, 280, 307, 894, 893, 892,
	306, 308, 890, 891, 889, 207, 606, 0, 208, 0,
	499, 608, 649, 452, 212, 234, 235, 237, 0, 279,
	283, 291, 294, 303, 304, 313, 367, 419, 446, 442,
	451, 0, 579, 600, 613, 624, 630, 631, 633, 634,
	635, 636, 637, 640, 638, 407, 311, 495, 333, 373,
	0, 0, 425, 472, 240, 604, 496, 900, 922, 911,
	775, 776, 901, 902, 926, 903, 778, 779, 923, 924,
	772, 773, 777, 925, 927, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 645, 508, 514, 509, 510, 511, 512,
	513, 0, 515, 914, 761, 760, 0, 767, 768, 0,
	797, 798, 800, 806, 807, 808, 819, 866, 867, 875,
	877, 878, 876, 879, 880, 881, 884, 885, 886, 887,
	882, 883, 888, 780, 784, 781, 782, 783, 795, 785,
	786, 787, 788, 789, 790, 791, 792, 793, 794, 796,
	937, 938, 939, 940, 941, 942, 812, 816, 815, 813,
	814, 810, 811, 838, 837, 839, 840, 841, 842, 843,
	844, 846, 845, 847, 848, 849, 850, 851, 852, 820,
	821, 824, 825, 823, 822, 826, 835, 836, 827, 828,
	829, 830, 831, 832, 834, 833, 853, 854, 855, 856,
	857, 859, 858, 862, 863, 861, 860, 865, 864, 759,
	196, 221, 368, 0, 454, 288, 646, 615, 484, 610,
	206, 223, 928, 262, 929, 0, 0, 933, 0, 0,
	0, 935, 934, 0, 936, 898, 897, 0, 0, 930,
	931, 0, 932, 0, 0, 198, 200, 209, 222, 232,
	236, 243, 261, 276, 278, 285, 298, 310, 318, 319,
	322, 328, 380, 386, 387, 388, 389, 409, 410, 411,
	414, 417, 418, 421, 423, 424, 427, 431, 435, 436,
	437, 439, 441, 443, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 488, 489, 490, 491, 492, 500, 501,
	516, 586, 588, 603, 622, 628, 480, 943, 944, 945,
	946, 947, 948, 949, 950, 300, 598, 629, 596, 641,
	623, 438, 378, 0, 0, 381, 281, 305, 320, 0,
	614, 502, 227, 466, 290, 251, 968, 0, 211, 246,
	230, 259, 274, 277, 324, 391, 400, 429, 434, 296,
	271, 244, 459, 241, 485, 519, 520, 521, 523, 395,
	266, 433, 396, 0, 376, 576, 577, 316, 0, 0,
	0, 528, 0, 771, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 758, 0, 0,
	0, 270, 763, 0, 0, 0, 366, 267, 0, 0,
	204, 505, 0, 430, 0, 203, 0, 487, 252, 377,
	374, 583, 282, 273, 269, 250, 317, 385, 428, 518,
	422, 770, 370, 0, 0, 497, 401, 0, 0, 0,
	0, 0, 0, 0, 0, 765, 766, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 248, 325, 202, 413,
	498, 286, 0, 95, 0, 1744, 1017, 507, 953, 742,
	919, 957, 1018, 970, 971, 972, 958, 0, 238, 959,
	960, 245, 961, 0, 918, 801, 803, 802, 868, 869,
	870, 871, 872, 873, 874, 804, 805, 799, 966, 607,
	973, 974, 0, 265, 321, 272, 264, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 738, 755, 0, 769, 0, 0,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 752, 753,
	0, 0, 0, 0, 913, 0, 754, 0, 0, 762,
	975, 976, 977, 978, 979, 980, 981, 982, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014,
	1015, 1016, 764, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 402, 257, 0, 453, 912,
	0, 0, 625, 0, 0, 910, 0, 0, 0, 0,
	365, 0, 330, 197, 225, 0, 0, 412, 461, 473,
	0, 0, 0, 963, 0, 471, 426, 602, 233, 284,
	458, 432, 469, 440, 287, 0, 0, 470, 372, 585,
	450, 599, 626, 627, 263, 406, 612, 522, 620, 644,
	226, 260, 420, 506, 605, 494, 397, 581, 582, 329,
	493, 295, 201, 369, 632, 224, 479, 371, 242, 231,
	587, 609, 299, 289, 456, 639, 213, 517, 597, 239,
	483, 0, 0, 647, 247, 504, 215, 594, 503, 393,
	326, 327, 214, 0, 457, 268, 293, 0, 0, 258,
	415, 964, 965, 256, 648, 809, 619, 220, 0, 618,
	408, 584, 595, 394, 383, 219, 593, 392, 382, 334,
	817, 818, 280, 307, 894, 893, 892, 306, 308, 890,
	891, 889, 207, 606, 0, 208, 0, 499, 608, 649,
	452, 212, 234, 235, 237, 0, 279, 283, 291, 294,
	303, 304, 313, 367, 419, 446, 442, 451, 0, 579,
	600, 613, 624, 630, 631, 633, 634, 635, 636, 637,
	640, 638, 407, 311, 495, 333, 373, 0, 0, 425,
	472, 240, 604, 496, 900, 922, 911, 775, 776, 901,
	902, 926, 903, 778, 779, 923, 924, 772, 773, 777,
	925, 927, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	645, 508, 514, 509, 510, 511, 512, 513, 0, 515,
	914, 761, 760, 0, 767, 768, 0, 797, 798, 800,
	806, 807, 808, 819, 866, 867, 875, 877, 878, 876,
	879, 880, 881, 884, 885, 886, 887, 882, 883, 888,
	780, 784, 781, 782, 783, 795, 785, 786, 787, 788,
	789, 790, 791, 792, 793, 794, 796, 937, 938, 939,
	940, 941, 942, 812, 816, 815, 813, 814, 810, 811,
	838, 837, 839, 840, 841, 842, 843, 844, 846, 845,
	847, 848, 849, 850, 851, 852, 820, 821, 824, 825,
	823, 822, 826, 835, 836, 827, 828, 829, 830, 831,
	832, 834, 833, 853, 854, 855, 856, 857, 859, 858,
	862, 863, 861, 860, 865, 864, 759, 196, 221, 368,
	0, 454, 288, 646, 615, 484, 610, 206, 223, 928,
	262, 929, 0, 0, 933, 0, 0, 0, 935, 934,
	0, 936, 898, 897, 0, 0, 930, 931, 0, 932,
	0, 0, 198, 200, 209, 222, 232, 236, 243, 261,
	276, 278, 285, 298, 310, 318, 319, 322, 328, 380,
	386, 387, 388, 389, 409, 410, 411, 414, 417, 418,
	421, 423, 424, 427, 431, 435, 436, 437, 439, 441,
	443, 455, 460, 474, 475, 476, 477, 478, 481, 482,
	488, 489, 490, 491, 492, 500, 501, 516, 586, 588,
	603, 622, 628, 480, 943, 944, 945, 946, 947, 948,
	949, 950, 300, 598, 629, 596, 641, 623, 438, 378,
	0, 0, 381, 281, 305, 320, 0, 614, 502, 227,
	466, 290, 251, 968, 0, 211, 246, 230, 259, 274,
	277, 324, 391, 400, 429, 434, 296, 271, 244, 459,
	241, 485, 519, 520, 521, 523, 395, 266, 433, 396,
	0, 376, 576, 577, 316, 0, 0, 0, 528, 0,
	771, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 758, 0, 0, 0, 270, 763,
	0, 0, 0, 366, 267, 0, 0, 204, 505, 0,
	430, 0, 203, 0, 487, 252, 377, 374, 583, 282,
	273, 269, 250, 317, 385, 428, 518, 422, 770, 370,
	0, 0, 497, 401, 0, 0, 0, 0, 0, 0,
	0, 0, 765, 766, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 248, 325, 202, 413, 498, 286, 0,
	95, 0, 0, 1017, 507, 953, 742, 919, 957, 1018,
	970, 971, 972, 958, 0, 238, 959, 960, 245, 961,
	0, 918, 801, 803, 802, 868, 869, 870, 871, 872,
	873, 874, 804, 805, 799, 966, 607, 973, 974, 0,
	265, 321, 272, 264, 580, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 738, 755, 0, 769, 0, 0, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 752, 753, 1063, 0, 0,
	0, 913, 0, 754, 0, 0, 762, 975, 976, 977,
	978, 979, 980, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 764,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 0, 402, 257, 0, 453, 912, 0, 0, 625,
	0, 0, 910, 0, 0, 0, 0, 365, 0, 330,
	197, 225, 0, 0, 412, 461, 473, 0, 0, 0,
	963, 0, 471, 426, 602, 233, 284, 458, 432, 469,
	440, 287, 0, 0, 470, 372, 585, 450, 599, 626,
	627, 263, 406, 612, 522, 620, 644, 226, 260, 420,
	506, 605, 494, 397, 581, 582, 329, 493, 295, 201,
	369, 632, 224, 479, 371, 242, 231, 587, 609, 299,
	289, 456, 639, 213, 517, 597, 239, 483, 0, 0,
	647, 247, 504, 215, 594, 503, 393, 326, 327, 214,
	0, 457, 268, 293, 0, 0, 258, 415, 964, 965,
	256, 648, 809, 619, 220, 0, 618, 408, 584, 595,
	394, 383, 219, 593, 392, 382, 334, 817, 818, 280,
	307, 894, 893, 892, 306, 308, 890, 891, 889, 207,
	606, 0, 208, 0, 499, 608, 649, 452, 212, 234,
	235, 237, 0, 279, 283, 291, 294, 303, 304, 313,
	367, 419, 446, 442, 451, 0, 579, 600, 613, 624,
	630, 631, 633, 634, 635, 636, 637, 640, 638, 407,
	311, 495, 333, 373, 0, 0, 425, 472, 240, 604,
	496, 900, 922, 911, 775, 776, 901, 902, 926, 903,
	778, 779, 923, 924, 772, 773, 777, 925, 927, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 645, 508, 514,
	509, 510, 511, 512, 513, 0, 515, 914, 761, 760,
	0, 767, 768, 0, 797, 798, 800, 806, 807, 808,
	819, 866, 867, 875, 877, 878, 876, 879, 880, 881,
	884, 885, 886, 887, 882, 883, 888, 780, 784, 781,
	782, 783, 795, 785, 786, 787, 788, 789, 790, 791,
	792, 793, 794, 796, 937, 938, 939, 940, 941, 942,
	812, 816, 815, 813, 814, 810, 811, 838, 837, 839,
	840, 841, 842, 843, 844, 846, 845, 847, 848, 849,
	850, 851, 852, 820, 821, 824, 825, 823, 822, 826,
	835, 836, 827, 828, 829, 830, 831, 832, 834, 833,
	853, 854, 855, 856, 857, 859, 858, 862, 863, 861,
	860, 865, 864, 759, 196, 221, 368, 0, 454, 288,
	646, 615, 484, 610, 206, 223, 928, 262, 929, 0,
	0, 933, 0, 0, 0, 935, 934, 0, 936, 898,
	897, 0, 0, 930, 931, 0, 932, 0, 0, 198,
	200, 209, 222, 232, 236, 243, 261, 276, 278, 285,
	298, 310, 318, 319, 322, 328, 380, 386, 387, 388,
	389, 409, 410, 411, 414, 417, 418, 421, 423, 424,
	427, 431, 435, 436, 437, 439, 441, 443, 455, 460,
	474, 475, 476, 477, 478, 481, 482, 488, 489, 490,
	491, 492, 500, 501, 516, 586, 588, 603, 622, 628,
	480, 943, 944, 945, 946, 947, 948, 949, 950, 300,
	598, 629, 596, 641, 623, 438, 378, 0, 0, 381,
	281, 305, 320, 0, 614, 502, 227, 466, 290, 251,
	968, 0, 211, 246, 230, 259, 274, 277, 324, 391,
	400, 429, 434, 296, 271, 244, 459, 241, 485, 519,
	520, 521, 523, 395, 266, 433, 396, 0, 376, 576,
	577, 316, 0, 0, 0, 528, 0, 771, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 758, 0, 0, 0, 270, 763, 0, 0, 0,
	366, 267, 0, 0, 204, 505, 0, 430, 0, 203,
	0, 487, 252, 377, 374, 583, 282, 273, 269, 250,
	317, 385, 428, 518, 422, 770, 370, 0, 0, 497,
	401, 0, 0, 0, 0, 0, 0, 0, 0, 765,
	766, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	248, 325, 202, 413, 498, 286, 0, 95, 0, 0,
	1017, 507, 953, 742, 919, 957, 1018, 970, 971, 972,
	958, 0, 238, 959, 960, 245, 961, 0, 918, 801,
	803, 802, 868, 869, 870, 871, 872, 873, 874, 804,
	805, 799, 966, 607, 973, 974, 0, 265, 321, 272,
	264, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 738, 755,
	0, 769, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 752, 753, 0, 0, 0, 0, 913, 0,
	754, 0, 0, 762, 975, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
	1011, 1012, 1013, 1014, 1015, 1016, 764, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 402,
	257, 0, 453, 912, 0, 0, 625, 0, 0, 910,
	0, 0, 0, 0, 365, 0, 330, 197, 225, 0,
	0, 412, 461, 473, 0, 0, 0, 963, 0, 471,
	426, 602, 233, 284, 458, 432, 469, 440, 287, 0,
	0, 470, 372, 585, 450, 599, 626, 627, 263, 406,
	612, 522, 620, 644, 226, 260, 420, 506, 605, 494,
	397, 581, 582, 329, 493, 295, 201, 369, 632, 224,
	479, 371, 242, 231, 587, 609, 299, 289, 456, 639,
	213, 517, 597, 239, 483, 0, 0, 647, 247, 504,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 964, 965, 256, 648, 809,
	619, 220, 0, 618, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 817, 818, 280, 307, 894, 893,
	892, 306, 308, 890, 891, 889, 207, 606, 0, 208,
	0, 499, 608, 649, 452, 212, 234, 235, 237, 0,
	279, 283, 291, 294, 303, 304, 313, 367, 419, 446,
	442, 451, 0, 579, 600, 613, 624, 630, 631, 633,
	634, 635, 636, 637, 640, 638, 407, 311, 495, 333,
	373, 0, 0, 425, 472, 240, 604, 496, 900, 922,
	911, 775, 776, 901, 902, 926, 903, 778, 779, 923,
	924, 772, 773, 777, 925, 927, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 645, 508, 514, 509, 510, 511,
	512, 513, 0, 515, 914, 761, 760, 0, 767, 768,
	0, 797, 798, 800, 806, 807, 808, 819, 866, 867,
	875, 877, 878, 876, 879, 880, 881, 884, 885, 886,
	887, 882, 883, 888, 780, 784, 781, 782, 783, 795,
	785, 786, 787, 788, 789, 790, 791, 792, 793, 794,
	796, 937, 938, 939, 940, 941, 942, 812, 816, 815,
	813, 814, 810, 811, 838, 837, 839, 840, 841, 842,
	843, 844, 846, 845, 847, 848, 849, 850, 851, 852,
	820, 821, 824, 825, 823, 822, 826, 835, 836, 827,
	828, 829, 830, 831, 832, 834, 833, 853, 854, 855,
	856, 857, 859, 858, 862, 863, 861, 860, 865, 864,
	759, 196, 221, 368, 0, 454, 288, 646, 615, 484,
	610, 206, 223, 928, 262, 929, 0, 0, 933, 0,
	0, 0, 935, 934, 0, 936, 898, 897, 0, 0,
	930, 931, 0, 932, 0, 0, 198, 200, 209, 222,
	232, 236, 243, 261, 276, 278, 285, 298, 310, 318,
	319, 322, 328, 380, 386, 387, 388, 389, 409, 410,
	411, 414, 417, 418, 421, 423, 424, 427, 431, 435,
	436, 437, 439, 441, 443, 455, 460, 474, 475, 476,
	477, 478, 481, 482, 488, 489, 490, 491, 492, 500,
	501, 516, 586, 588, 603, 622, 628, 480, 943, 944,
	945, 946, 947, 948, 949, 950, 300, 598, 629, 596,
	641, 623, 438, 378, 0, 0, 381, 281, 305, 320,
	0, 614, 502, 227, 466, 290, 251, 968, 0, 211,
	246, 230, 259, 274, 277, 324, 391, 400, 429, 434,
	296, 271, 244, 459, 241, 485, 519, 520, 521, 523,
	395, 266, 433, 396, 0, 376, 576, 577, 316, 0,
	0, 0, 528, 0, 771, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 758, 0,
	0, 0, 270, 763, 0, 0, 0, 366, 267, 0,
	0, 204, 505, 0, 430, 0, 203, 0, 487, 252,
	377, 374, 583, 282, 273, 269, 250, 317, 385, 428,
	518, 422, 770, 370, 0, 0, 497, 401, 0, 0,
	0, 0, 0, 0, 0, 0, 765, 766, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	413, 498, 286, 0, 95, 0, 0, 1017, 507, 953,
	742, 919, 957, 1018, 970, 971, 972, 958, 0, 238,
	959, 960, 245, 961, 0, 918, 801, 803, 802, 868,
	869, 870, 871, 872, 873, 874, 804, 805, 799, 966,
	607, 973, 974, 0, 265, 321, 272, 264, 580, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 738, 755, 0, 769, 0,
	0, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 752,
	753, 0, 0, 0, 0, 913, 0, 754, 0, 0,
	762, 975, 976, 977, 978, 979, 980, 981, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 1016, 3155, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 402, 257, 0, 453,
	912, 0, 0, 625, 0, 0, 910, 0, 0, 0,
	0, 365, 0, 330, 197, 225, 0, 0, 412, 461,
	473, 0, 0, 0, 963, 0, 471, 426, 602, 233,
	284, 458, 432, 469, 440, 287, 0, 0, 470, 372,
	585, 450, 599, 626, 627, 263, 406, 612, 522, 620,
	644, 226, 260, 420, 506, 605, 494, 397, 581, 582,
	329, 493, 295, 201, 369, 632, 224, 479, 371, 242,
	231, 587, 609, 299, 289, 456, 639, 213, 517, 597,
	239, 483, 0, 0, 647, 247, 504, 215, 594, 503,
	393, 326, 327, 214, 0, 457, 268, 293, 0, 0,
	258, 415, 964, 965, 256, 648, 809, 619, 220, 0,
	618, 408, 584, 595, 394, 383, 219, 593, 392, 382,
	334, 817, 818, 280, 307, 894, 893, 892, 306, 308,
	890, 891, 889, 207, 606, 0, 208, 0, 499, 608,
	649, 452, 212, 234, 235, 237, 0, 279, 283, 291,
	294, 303, 304, 313, 367, 419, 446, 442, 451, 0,
	579, 600, 613, 624, 630, 631, 633, 634, 635, 636,
	637, 640, 638, 407, 311, 495, 333, 373, 0, 0,
	425, 472, 240, 604, 496, 900, 922, 911, 775, 776,
	901, 902, 926, 903, 778, 779, 923, 924, 772, 773,
	777, 925, 927, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 645, 508, 514, 509, 510, 511, 512, 513, 0,
	515, 914, 761, 760, 0, 767, 768, 0, 797, 798,
	800, 806, 807, 808, 819, 866, 867, 875, 877, 878,
	876, 879, 880, 881, 884, 885, 886, 887, 882, 883,
	888, 780, 784, 781, 782, 783, 795, 785, 786, 787,
	788, 789, 790, 791, 792, 793, 794, 796, 937, 938,
	939, 940, 941, 942, 812, 816, 815, 813, 814, 810,
	811, 838, 837, 839, 840, 841, 842, 843, 844, 846,
	845, 847, 848, 849, 850, 851, 852, 820, 821, 824,
	825, 823, 822, 826, 835, 836, 827, 828, 829, 830,
	831, 832, 834, 833, 853, 854, 855, 856, 857, 859,
	858, 862, 863, 861, 860, 865, 864, 759, 196, 221,
	368, 0, 454, 288, 646, 615, 484, 610, 206, 223,
	928, 262, 929, 0, 0, 933, 0, 0, 0, 935,
	934, 0, 936, 898, 897, 0, 0, 930, 931, 0,
	932, 0, 0, 198, 200, 209, 222, 232, 236, 243,
	261, 276, 278, 285, 298, 310, 318, 319, 322, 328,
	380, 386, 387, 388, 389, 409, 410, 411, 414, 417,
	418, 421, 423, 424, 427, 431, 435, 436, 437, 439,
	441, 443, 455, 460, 474, 475, 476, 477, 478, 481,
	482, 488, 489, 490, 491, 492, 500, 501, 516, 586,
	588, 603, 622, 628, 480, 943, 944, 945, 946, 947,
	948, 949, 950, 300, 598, 629, 596, 641, 623, 438,
	378, 0, 0, 381, 281, 305, 320, 0, 614, 502,
	227, 466, 290, 251, 968, 0, 211, 246, 230, 259,
	274, 277, 324, 391, 400, 429, 434, 296, 271, 244,
	459, 241, 485, 519, 520, 521, 523, 395, 266, 433,
	396, 0, 376, 576, 577, 316, 0, 0, 0, 528,
	0, 771, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 758, 0, 0, 0, 270,
	763, 0, 0, 0, 366, 267, 0, 0, 204, 505,
	0, 430, 0, 203, 0, 487, 252, 377, 374, 583,
	282, 273, 269, 250, 317, 385, 428, 518, 422, 770,
	370, 0, 0, 497, 401, 0, 0, 0, 0, 0,
	0, 0, 0, 765, 766, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 248, 325, 202, 413, 498, 286,
	0, 95, 0, 0, 1017, 507, 953, 742, 919, 957,
	1018, 970, 971, 972, 958, 0, 238, 959, 960, 245,
	961, 0, 918, 801, 803, 802, 868, 869, 870, 871,
	872, 873, 874, 804, 805, 799, 966, 607, 973, 974,
	0, 265, 321, 272, 264, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 738, 755, 0, 769, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 752, 753, 0, 0,
	0, 0, 913, 0, 754, 0, 0, 762, 975, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,
	3151, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 402, 257, 0, 453, 912, 0, 0,
	625, 0, 0, 910, 0, 0, 0, 0, 365, 0,
	330, 197, 225, 0, 0, 412, 461, 473, 0, 0,
	0, 963, 0, 471, 426, 602, 233, 284, 458, 432,
	469, 440, 287, 0, 0, 470, 372, 585, 450, 599,
	626, 627, 263, 406, 612, 522, 620, 644, 226, 260,
	420, 506, 605, 494, 397, 581, 582, 329, 493, 295,
	201, 369, 632, 224, 479, 371, 242, 231, 587, 609,
	299, 289, 456, 639, 213, 517, 597, 239, 483, 0,
	0, 647, 247, 504, 215, 594, 503, 393, 326, 327,
	214, 0, 457, 268, 293, 0, 0, 258, 415, 964,
	965, 256, 648, 809, 619, 220, 0, 618, 408, 584,
	595, 394, 383, 219, 593, 392, 382, 334, 817, 818,
	280, 307, 894, 893, 892, 306, 308, 890, 891, 889,
	207, 606, 0, 208, 0, 499, 608, 649, 452, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 367, 419, 446, 442, 451, 0, 579, 600, 613,
	624, 630, 631, 633, 634, 635, 636, 637, 640, 638,
	407, 311, 495, 333, 373, 0, 0, 425, 472, 240,
	604, 496, 900, 922, 911, 775, 776, 901, 902, 926,
	903, 778, 779, 923, 924, 772, 773, 777, 925, 927,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 645, 508,
	514, 509, 510, 511, 512, 513, 0, 515, 914, 761,
	760, 0, 767, 768, 0, 797, 798, 800, 806, 807,
	808, 819, 866, 867, 875, 877, 878, 876, 879, 880,
	881, 884, 885, 886, 887, 882, 883, 888, 780, 784,
	781, 782, 783, 795, 785, 786, 787, 788, 789, 790,
	791, 792, 793, 794, 796, 937, 938, 939, 940, 941,
	942, 812, 816, 815, 813, 814, 810, 811, 838, 837,
	839, 840, 841, 842, 843, 844, 846, 845, 847, 848,
	849, 850, 851, 852, 820, 821, 824, 825, 823, 822,
	826, 835, 836, 827, 828, 829, 830, 831, 832, 834,
	833, 853, 854, 855, 856, 857, 859, 858, 862, 863,
	861, 860, 865, 864, 759, 196, 221, 368, 0, 454,
	288, 646, 615, 484, 610, 206, 223, 928, 262, 929,
	0, 0, 933, 0, 0, 0, 935, 934, 0, 936,
	898, 897, 0, 0, 930, 931, 0, 932, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 380, 386, 387,
	388, 389, 409, 410, 411, 414, 417, 418, 421, 423,
	424, 427, 431, 435, 436, 437, 439, 441, 443, 455,
	460, 474, 475, 476, 477, 478, 481, 482, 488, 489,
	490, 491, 492, 500, 501, 516, 586, 588, 603, 622,
	628, 480, 943, 944, 945, 946, 947, 948, 949, 950,
	300, 598, 629, 596, 641, 623, 438, 378, 0, 0,
	381, 281, 305, 320, 0, 614, 502, 227, 466, 290,
	251, 968, 0, 211, 246, 230, 259, 274, 277, 324,
	391, 400, 429, 434, 296, 271, 244, 459, 241, 485,
	519, 520, 521, 523, 395, 266, 433, 396, 0, 376,
	576, 577, 316, 0, 0, 0, 528, 0, 771, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 758, 0, 0, 0, 270, 763, 0, 0,
	0, 366, 267, 0, 0, 204, 505, 0, 430, 0,
	203, 0, 487, 252, 377, 374, 583, 282, 273, 269,
	250, 317, 385, 428, 518, 422, 770, 370, 0, 0,
	497, 401, 0, 0, 0, 0, 0, 0, 0, 0,
	765, 766, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 248, 325, 202, 413, 498, 286, 0, 95, 0,
	0, 1017, 507, 953, 1084, 919, 957, 1018, 970, 971,
	972, 958, 0, 238, 959, 960, 245, 961, 0, 918,
	801, 803, 802, 868, 869, 870, 871, 872, 873, 874,
	804, 805, 799, 966, 607, 973, 974, 0, 265, 321,
	272, 264, 580, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	755, 0, 769, 0, 0, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 752, 753, 0, 0, 0, 0, 913,
	0, 754, 0, 0, 762, 975, 976, 977, 978, 979,
	980, 981, 982, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 764, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 0,
	402, 257, 0, 453, 912, 0, 0, 625, 0, 0,
	910, 0, 0, 0, 0, 365, 0, 330, 197, 225,
	0, 0, 412, 461, 473, 0, 0, 0, 963, 0,
	471, 426, 602, 233, 284, 458, 432, 469, 440, 287,
	0, 0, 470, 372, 585, 450, 599, 626, 627, 263,
	406, 612, 522, 620, 644, 226, 260, 420, 506, 605,
	494, 397, 581, 582, 329, 493, 295, 201, 369, 632,
	224, 479, 371, 242, 231, 587, 609, 299, 289, 456,
	639, 213, 517, 597, 239, 483, 0, 0, 647, 247,
	504, 215, 594, 503, 393, 326, 327, 214, 0, 457,
	268, 293, 0, 0, 258, 415, 964, 965, 256, 648,
	809, 619, 220, 0, 618, 408, 584, 595, 394, 383,
	219, 593, 392, 382, 334, 817, 818, 280, 307, 894,
	893, 892, 306, 308, 890, 891, 889, 207, 606, 0,
	208, 0, 499, 608, 649, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 600, 613, 624, 630, 631,
	633, 634, 635, 636, 637, 640, 638, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 604, 496, 900,
	922, 911, 775, 776, 901, 902, 926, 903, 778, 779,
	923, 924, 772, 773, 777, 925, 927, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 645, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 914, 761, 760, 0, 767,
	768, 0, 797, 798, 800, 806, 807, 808, 819, 866,
	867, 875, 877, 878, 876, 879, 880, 881, 884, 885,
	886, 887, 882, 883, 888, 780, 784, 781, 782, 783,
	795, 785, 786, 787, 788, 789, 790, 791, 792, 793,
	794, 796, 937, 938, 939, 940, 941, 942, 812, 816,
	815, 813, 814, 810, 811, 838, 837, 839, 840, 841,
	842, 843, 844, 846, 845, 847, 848, 849, 850, 851,
	852, 820, 821, 824, 825, 823, 822, 826, 835, 836,
	827, 828, 829, 830, 831, 832, 834, 833, 853, 854,
	855, 856, 857, 859, 858, 862, 863, 861, 860, 865,
	864, 759, 196, 221, 368, 0, 454, 288, 646, 615,
	484, 610, 206, 223, 928, 262, 929, 0, 0, 933,
	0, 0, 0, 935, 934, 0, 936, 898, 897, 0,
	0, 930, 931, 0, 932, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 603, 622, 628, 480, 943,
	944, 945, 946, 947, 948, 949, 950, 300, 598, 629,
	596, 641, 623, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 614, 502, 227, 466, 290, 251, 968, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 771, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 758,
	0, 0, 0, 270, 763, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 770, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 765, 766, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 95, 0, 0, 1017, 507,
	953, 1084, 919, 957, 1018, 970, 971, 972, 958, 0,
	238, 959, 960, 245, 961, 0, 918, 801, 803, 802,
	868, 869, 870, 871, 872, 873, 874, 804, 805, 799,
	966, 607, 973, 974, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 755, 0, 769,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	752, 753, 0, 0, 0, 0, 913, 0, 754, 0,
	0, 762, 975, 976, 977, 978, 979, 980, 981, 982,
	983, 984, 985, 986, 987, 988, 989, 990, 991, 992,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012,
	1013, 1014, 1015, 1016, 2109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 912, 0, 0, 625, 0, 0, 910, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 963, 0, 471, 426, 602,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 599, 626, 627, 263, 406, 612, 522,
	620, 644, 226, 260, 420, 506, 605, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 632, 224, 479, 371,
	242, 231, 587, 609, 299, 289, 456, 639, 213, 517,
	597, 239, 483, 0, 0, 647, 247, 504, 215, 594,
	503, 393, 326, 327, 214, 0, 457, 268, 293, 0,
	0, 258, 415, 964, 965, 256, 648, 809, 619, 220,
	0, 618, 408, 584, 595, 394, 383, 219, 593, 392,
	382, 334, 817, 818, 280, 307, 894, 893, 892, 306,
	308, 890, 891, 889, 207, 606, 0, 208, 0, 499,
	608, 649, 452, 212, 234, 235, 237, 0, 279, 283,
	291, 294, 303, 304, 313, 367, 419, 446, 442, 451,
	0, 579, 600, 613, 624, 630, 631, 633, 634, 635,
	636, 637, 640, 638, 407, 311, 495, 333, 373, 0,
	0, 425, 472, 240, 604, 496, 900, 922, 911, 775,
	776, 901, 902, 926, 903, 778, 779, 923, 924, 772,
	773, 777, 925, 927, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 645, 508, 514, 509, 510, 511, 512, 513,
	0, 515, 914, 761, 760, 0, 767, 768, 0, 797,
	798, 800, 806, 807, 808, 819, 866, 867, 875, 877,
	878, 876, 879, 880, 881, 884, 885, 886, 887, 882,
	883, 888, 780, 784, 781, 782, 783, 795, 785, 786,
	787, 788, 789, 790, 791, 792, 793, 794, 796, 937,
	938, 939, 940, 941, 942, 812, 816, 815, 813, 814,
	810, 811, 838, 837, 839, 840, 841, 842, 843, 844,
	846, 845, 847, 848, 849, 850, 851, 852, 820, 821,
	824, 825, 823, 822, 826, 835, 836, 827, 828, 829,
	830, 831, 832, 834, 833, 853, 854, 855, 856, 857,
	859, 858, 862, 863, 861, 860, 865, 864, 759, 196,
	221, 368, 0, 454, 288, 646, 615, 484, 610, 206,
	223, 928, 262, 929, 0, 0, 933, 0, 0, 0,
	935, 934, 0, 936, 898, 897, 0, 0, 930, 931,
	0, 932, 0, 0, 198, 200, 209, 222, 232, 236,
	243, 261, 276, 278, 285, 298, 310, 318, 319, 322,
	328, 380, 386, 387, 388, 389, 409, 410, 411, 414,
	417, 418, 421, 423, 424, 427, 431, 435, 436, 437,
	439, 441, 443, 455, 460, 474, 475, 476, 477, 478,
	481, 482, 488, 489, 490, 491, 492, 500, 501, 516,
	586, 588, 603, 622, 628, 480, 943, 944, 945, 946,
	947, 948, 949, 950, 300, 598, 629, 596, 641, 623,
	438, 378, 0, 0, 381, 281, 305, 320, 0, 614,
	502, 227, 466, 290, 251, 968, 0, 211, 246, 230,
	259, 274, 277, 324, 391, 400, 429, 434, 296, 271,
	244, 459, 241, 485, 519, 520, 521, 523, 395, 266,
	433, 396, 0, 376, 576, 577, 316, 0, 0, 0,
	528, 0, 771, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 758, 0, 0, 0,
	270, 763, 0, 0, 0, 366, 267, 0, 0, 204,
	505, 0, 430, 0, 203, 0, 487, 252, 377, 374,
	583, 282, 273, 269, 250, 317, 385, 428, 518, 422,
	770, 370, 0, 0, 497, 401, 0, 0, 0, 0,
	0, 0, 0, 0, 765, 766, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 248, 325, 202, 413, 498,
	286, 0, 95, 0, 0, 1017, 507, 953, 1084, 919,
	957, 1018, 970, 971, 972, 958, 0, 238, 959, 960,
	245, 961, 0, 918, 801, 803, 802, 868, 869, 870,
	871, 872, 873, 874, 804, 805, 799, 966, 607, 973,
	974, 0, 265, 321, 272, 264, 580, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 755, 0, 769, 0, 0, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 752, 753, 0,
	0, 0, 0, 913, 0, 754, 0, 0, 762, 975,
	976, 977, 978, 979, 980, 981, 982, 983, 984, 985,
	986, 987, 988, 989, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015,
	1016, 2107, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 402, 257, 0, 453, 912, 0,
	0, 625, 0, 0, 910, 0, 0, 0, 0, 365,
	0, 330, 197, 225, 0, 0, 412, 461, 473, 0,
	0, 0, 963, 0, 471, 426, 602, 233, 284, 458,
	432, 469, 440, 287, 0, 0, 470, 372, 585, 450,
	599, 626, 627, 263, 406, 612, 522, 620, 644, 226,
	260, 420, 506, 605, 494, 397, 581, 582, 329, 493,
	295, 201, 369, 632, 224, 479, 371, 242, 231, 587,
	609, 299, 289, 456, 639, 213, 517, 597, 239, 483,
	0, 0, 647, 247, 504, 215, 594, 503, 393, 326,
	327, 214, 0, 457, 268, 293, 0, 0, 258, 415,
	964, 965, 256, 648, 809, 619, 220, 0, 618, 408,
	584, 595, 394, 383, 219, 593, 392, 382, 334, 817,
	818, 280, 307, 894, 893, 892, 306, 308, 890, 891,
	889, 207, 606, 0, 208, 0, 499, 608, 649, 452,
	212, 234, 235, 237, 0, 279, 283, 291, 294, 303,
	304, 313, 367, 419, 446, 442, 451, 0, 579, 600,
	613, 624, 630, 631, 633, 634, 635, 636, 637, 640,
	638, 407, 311, 495, 333, 373, 0, 0, 425, 472,
	240, 604, 496, 900, 922, 911, 775, 776, 901, 902,
	926, 903, 778, 779, 923, 924, 772, 773, 777, 925,
	927, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 645,
	508, 514, 509, 510, 511, 512, 513, 0, 515, 914,
	761, 760, 0, 767, 768, 0, 797, 798, 800, 806,
	807, 808, 819, 866, 867, 875, 877, 878, 876, 879,
	880, 881, 884, 885, 886, 887, 882, 883, 888, 780,
	784, 781, 782, 783, 795, 785, 786, 787, 788, 789,
	790, 791, 792, 793, 794, 796, 937, 938, 939, 940,
	941, 942, 812, 816, 815, 813, 814, 810, 811, 838,
	837, 839, 840, 841, 842, 843, 844, 846, 845, 847,
	848, 849, 850, 851, 852, 820, 821, 824, 825, 823,
	822, 826, 835, 836, 827, 828, 829, 830, 831, 832,
	834, 833, 853, 854, 855, 856, 857, 859, 858, 862,
	863, 861, 860, 865, 864, 759, 196, 221, 368, 0,
	454, 288, 646, 615, 484, 610, 206, 223, 928, 262,
	929, 0, 0, 933, 0, 0, 0, 935, 934, 0,
	936, 898, 897, 0, 0, 930, 931, 0, 932, 0,
	0, 198, 200, 209, 222, 232, 236, 243, 261, 276,
	278, 285, 298, 310, 318, 319, 322, 328, 380, 386,
	387, 388, 389, 409, 410, 411, 414, 417, 418, 421,
	423, 424, 427, 431, 435, 436, 437, 439, 441, 443,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 488,
	489, 490, 491, 492, 500, 501, 516, 586, 588, 603,
	622, 628, 480, 943, 944, 945, 946, 947, 948, 949,
	950, 300, 598, 629, 596, 641, 623, 438, 378, 0,
	0, 381, 281, 305, 320, 0, 614, 502, 227, 466,
	290, 251, 968, 0, 211, 246, 230, 259, 274, 277,
	324, 391, 400, 429, 434, 296, 271, 244, 459, 241,
	485, 519, 520, 521, 523, 395, 266, 433, 396, 0,
	376, 576, 577, 316, 0, 0, 0, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 366, 267, 0, 0, 204, 505, 0, 430,
	0, 203, 0, 487, 252, 377, 374, 583, 282, 273,
	269, 250, 317, 385, 428, 518, 422, 0, 370, 0,
	0, 497, 401, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 248, 325, 202, 413, 498, 286, 0, 0,
	0, 0, 0, 507, 718, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 245, 0, 0,
	0, 351, 360, 359, 339, 340, 342, 344, 350, 357,
	363, 336, 345, 0, 0, 607, 0, 0, 0, 265,
	321, 272, 264, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 1135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 402, 257, 0, 453, 0, 0, 1134, 625, 0,
	0, 0, 0, 0, 1131, 1132, 365, 1092, 330, 197,
	225, 1125, 1129, 412, 461, 473, 0, 0, 0, 253,
	0, 471, 426, 602, 233, 284, 458, 432, 469, 440,
	287, 0, 0, 470, 372, 585, 450, 599, 626, 627,
	263, 406, 612, 522, 620, 644, 226, 260, 420, 506,
	605, 494, 397, 581, 582, 329, 493, 295, 201, 369,
	632, 224, 479, 371, 242, 231, 587, 609, 299, 289,
	456, 639, 213, 517, 597, 239, 483, 0, 0, 647,
	247, 504, 215, 594, 503, 393, 326, 327, 214, 0,
	457, 268, 293, 0, 0, 258, 415, 589, 590, 256,
	648, 228, 619, 220, 0, 618, 408, 584, 595, 394,
	383, 219, 593, 392, 382, 334, 355, 356, 280, 307,
	447, 375, 448, 306, 308, 404, 403, 405, 207, 606,
	0, 208, 0, 499, 608, 649, 452, 212, 234, 235,
	237, 0, 279, 283, 291, 294, 303, 304, 313, 367,
	419, 446, 442, 451, 0, 579, 600, 613, 624, 630,
	631, 633, 634, 635, 636, 637, 640, 638, 407, 311,
	495, 333, 373, 0, 0, 425, 472, 240, 604, 496,
	199, 0, 0, 0, 0, 254, 255, 0, 575, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 645, 508, 514, 509,
	510, 511, 512, 513, 0, 515, 0, 0, 0, 0,
	0, 398, 0, 591, 592, 668, 384, 486, 601, 335,
	349, 352, 341, 361, 0, 362, 337, 338, 343, 346,
	347, 348, 353, 354, 358, 364, 249, 210, 390, 399,
	578, 312, 216, 217, 218, 524, 525, 526, 527, 616,
	617, 621, 205, 462, 463, 464, 465, 292, 611, 309,
	468, 467, 331, 332, 379, 449, 540, 542, 553, 557,
	559, 561, 567, 570, 541, 543, 554, 558, 560, 562,
	568, 571, 530, 532, 534, 536, 549, 548, 545, 573,
	574, 551, 556, 535, 547, 552, 565, 572, 569, 529,
	533, 537, 546, 564, 563, 544, 555, 566, 550, 538,
	531, 539, 0, 196, 221, 368, 0, 454, 288, 646,
	615, 484, 610, 206, 223, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	209, 222, 232, 236, 243, 261, 276, 278, 285, 298,
	310, 318, 319, 322, 328, 380, 386, 387, 388, 389,
	409, 410, 411, 414, 417, 418, 421, 423, 424, 427,
	431, 435, 436, 437, 439, 441, 443, 455, 460, 474,
	475, 476, 477, 478, 481, 482, 488, 489, 490, 491,
	492, 500, 501, 516, 586, 588, 603, 622, 628, 480,
	301, 302, 444, 445, 314, 315, 642, 643, 300, 598,
	629, 596, 641, 623, 438, 378, 0, 0, 381, 281,
	305, 320, 0, 614, 502, 227, 466, 290, 251, 0,
	0, 211, 246, 230, 259, 274, 277, 324, 391, 400,
	429, 434, 296, 271, 244, 459, 241, 485, 519, 520,
	521, 523, 395, 266, 433, 396, 0, 376, 576, 577,
	316, 0, 0, 0, 528, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 366,
	267, 0, 0, 204, 505, 0, 430, 0, 203, 0,
	487, 252, 377, 374, 583, 282, 273, 269, 250, 317,
	385, 428, 518, 422, 0, 370, 0, 0, 497, 401,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 248,
	325, 202, 413, 498, 286, 0, 0, 0, 0, 1701,
	507, 953, 0, 0, 1698, 0, 0, 0, 0, 1696,
	0, 238, 1697, 1695, 245, 1700, 0, 918, 351, 360,
	359, 339, 340, 342, 344, 350, 357, 363, 336, 345,
	0, 0, 607, 0, 0, 0, 265, 321, 272, 264,
	580, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 0, 402, 257,
	0, 453, 0, 0, 0, 625, 0, 0, 0, 0,
	0, 0, 0, 365, 0, 330, 197, 225, 0, 0,
	412, 461, 473, 0, 0, 0, 253, 0, 471, 426,
	602, 233, 284, 458, 432, 469, 440, 287, 0, 0,
	470, 372, 585, 450, 599, 626, 627, 263, 406, 612,
	522, 620, 644, 226, 260, 420, 506, 605, 494, 397,
	581, 582, 329, 493, 295, 201, 369, 632, 224, 479,
	371, 242, 231, 587, 609, 299, 289, 456, 639, 213,
	517, 597, 239, 483, 0, 0, 647, 247, 504, 215,
	594, 503, 393, 326, 327, 214, 0, 457, 268, 293,
	0, 0, 258, 415, 589, 590, 256, 648, 228, 619,
	220, 0, 618, 408, 584, 595, 394, 383, 219, 593,
	392, 382, 334, 355, 356, 280, 307, 447, 375, 448,
	306, 308, 404, 403, 405, 207, 606, 0, 208, 0,
	499, 608, 649, 452, 212, 234, 235, 237, 0, 279,
	283, 291, 294, 303, 304, 313, 367, 419, 446, 442,
	451, 0, 579, 600, 613, 624, 630, 631, 633, 634,
	635, 636, 637, 640, 638, 407, 311, 495, 333, 373,
	0, 0, 425, 472, 240, 604, 496, 199, 0, 0,
	0, 0, 254, 255, 0, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 645, 508, 514, 509, 510, 511, 512,
	513, 0, 515, 0, 0, 0, 0, 0, 398, 0,
	591, 592, 668, 384, 486, 601, 335, 349, 352, 341,
	361, 0, 362, 337, 338, 343, 346, 347, 348, 353,
	354, 358, 364, 249, 210, 390, 399, 578, 312, 216,
	217, 218, 524, 525, 526, 527, 616, 617, 621, 205,
	462, 463, 464, 465, 292, 611, 309, 468, 467, 331,
	332, 379, 449, 540, 542, 553, 557, 559, 561, 567,
	570, 541, 543, 554, 558, 560, 562, 568, 571, 530,
	532, 534, 536, 549, 548, 545, 573, 574, 551, 556,
	535, 547, 552, 565, 572, 569, 529, 533, 537, 546,
	564, 563, 544, 555, 566, 550, 538, 531, 539, 0,
	196, 221, 368, 0, 454, 288, 646, 615, 484, 610,
	206, 223, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 209, 222, 232,
	236, 243, 261, 276, 278, 285, 298, 310, 318, 319,
	322, 328, 380, 386, 387, 388, 389, 409, 410, 411,
	414, 417, 418, 421, 423, 424, 427, 431, 435, 436,
	437, 439, 441, 443, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 488, 489, 490, 491, 492, 500, 501,
	516, 586, 588, 603, 622, 628, 480, 301, 302, 444,
	445, 314, 315, 642, 643, 300, 598, 629, 596, 641,
	623, 438, 378, 0, 0, 381, 281, 305, 320, 0,
	614, 502, 227, 466, 290, 251, 0, 0, 211, 246,
	230, 259, 274, 277, 324, 391, 400, 429, 434, 296,
	271, 244, 459, 241, 485, 519, 520, 521, 523, 395,
	266, 433, 396, 0, 376, 576, 577, 316, 0, 0,
	86, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 366, 267, 0, 0,
	204, 505, 0, 430, 0, 203, 0, 487, 252, 377,
	374, 583, 282, 273, 269, 250, 317, 385, 428, 518,
	422, 0, 370, 0, 0, 497, 401, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 248, 325, 202, 413,
	498, 286, 0, 95, 0, 0, 0, 507, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 351, 360, 359, 339, 340,
	342, 344, 350, 357, 363, 336, 345, 0, 0, 607,
	0, 0, 0, 265, 321, 272, 264, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 402, 257, 0, 453, 0,
	0, 0, 625, 0, 0, 0, 0, 0, 0, 0,
	365, 0, 330, 197, 225, 0, 0, 412, 461, 473,
	0, 0, 0, 253, 0, 471, 426, 602, 233, 284,
	458, 432, 469, 440, 287, 0, 0, 470, 372, 585,
	450, 599, 626, 627, 263, 406, 612, 522, 620, 644,
	226, 260, 420, 506, 605, 494, 397, 581, 582, 329,
	493, 295, 201, 369, 632, 224, 479, 371, 242, 231,
	587, 609, 299, 289, 456, 639, 213, 517, 597, 239,
	483, 0, 0, 647, 247, 504, 215, 594, 503, 393,
	326, 327, 214, 0, 457, 268, 293, 0, 0, 258,
	415, 589, 590, 256, 648, 228, 619, 220, 0, 618,
	408, 584, 595, 394, 383, 219, 593, 392, 382, 334,
	355, 356, 280, 307, 447, 375, 448, 306, 308, 404,
	403, 405, 207, 606, 0, 208, 0, 499, 608, 649,
	452, 212, 234, 235, 237, 0, 279, 283, 291, 294,
	303, 304, 313, 367, 419, 446, 442, 451, 0, 579,
	600, 613, 624, 630, 631, 633, 634, 635, 636, 637,
	640, 638, 407, 311, 495, 333, 373, 0, 0, 425,
	472, 240, 604, 496, 199, 0, 0, 0, 0, 254,
	255, 0, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	645, 508, 514, 509, 510, 511, 512, 513, 0, 515,
	0, 0, 0, 0, 0, 398, 0, 591, 592, 668,
	384, 486, 601, 335, 349, 352, 341, 361, 0, 362,
	337, 338, 343, 346, 347, 348, 353, 354, 358, 364,
	249, 210, 390, 399, 578, 312, 216, 217, 218, 524,
	525, 526, 527, 616, 617, 621, 205, 462, 463, 464,
	465, 292, 611, 309, 468, 467, 331, 332, 379, 449,
	540, 542, 553, 557, 559, 561, 567, 570, 541, 543,
	554, 558, 560, 562, 568, 571, 530, 532, 534, 536,
	549, 548, 545, 573, 574, 551, 556, 535, 547, 552,
	565, 572, 569, 529, 533, 537, 546, 564, 563, 544,
	555, 566, 550, 538, 531, 539, 0, 196, 221, 368,
	94, 454, 288, 646, 615, 484, 610, 206, 223, 0,
	262, 0, 0, 0, 0, 0, 0, 2412, 0, 0,
	2411, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 209, 222, 232, 236, 243, 261,
	276, 278, 285, 298, 310, 318, 319, 322, 328, 380,
	386, 387, 388, 389, 409, 410, 411, 414, 417, 418,
	421, 423, 424, 427, 431, 435, 436, 437, 439, 441,
	443, 455, 460, 474, 475, 476, 477, 478, 481, 482,
	488, 489, 490, 491, 492, 500, 501, 516, 586, 588,
	603, 622, 628, 480, 301, 302, 444, 445, 314, 315,
	642, 643, 300, 598, 629, 596, 641, 623, 438, 378,
	0, 0, 381, 281, 305, 320, 0, 614, 502, 227,
	466, 290, 251, 0, 0, 211, 246, 230, 259, 274,
	277, 324, 391, 400, 429, 434, 296, 271, 244, 459,
	241, 485, 519, 520, 521, 523, 395, 266, 433, 1767,
	0, 376, 576, 577, 316, 0, 0, 0, 528, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 1769, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 366, 267, 0, 0, 204, 505, 0,
	430, 0, 203, 0, 487, 252, 377, 374, 583, 282,
	273, 269, 250, 317, 385, 428, 518, 422, 0, 370,
	0, 0, 497, 401, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 248, 325, 202, 413, 498, 286, 0,
	0, 0, 0, 1771, 507, 718, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 245, 0,
	0, 0, 351, 360, 359, 339, 340, 342, 344, 350,
	357, 363, 336, 345, 0, 0, 607, 0, 0, 0,
	265, 321, 272, 264, 580, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 1469, 0, 1470,
	1471, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 0, 402, 257, 0, 453, 0, 0, 0, 625,
	0, 0, 0, 0, 0, 0, 0, 365, 0, 330,
	197, 225, 0, 0, 412, 461, 473, 0, 0, 0,
	253, 0, 471, 426, 602, 233, 284, 458, 432, 469,
	440, 287, 0, 0, 470, 372, 585, 450, 599, 626,
	627, 263, 406, 612, 522, 620, 644, 226, 260, 420,
	506, 605, 494, 397, 581, 582, 329, 493, 295, 201,
	369, 632, 224, 479, 371, 242, 231, 587, 609, 299,
	289, 456, 639, 213, 517, 597, 239, 483, 0, 0,
	647, 247, 504, 215, 594, 503, 393, 326, 327, 214,
	0, 457, 268, 293, 0, 0, 258, 415, 589, 590,
	256, 648, 228, 619, 220, 0, 618, 408, 584, 595,
	394, 383, 219, 593, 392, 382, 334, 355, 356, 280,
	307, 447, 375, 448, 306, 308, 404, 403, 405, 207,
	606, 0, 208, 0, 499, 608, 649, 452, 212, 234,
	235, 237, 0, 279, 283, 291, 294, 303, 304, 313,
	367, 419, 446, 442, 451, 0, 579, 600, 613, 624,
	630, 631, 633, 634, 635, 636, 637, 640, 638, 407,
	311, 495, 333, 373, 0, 0, 425, 472, 240, 604,
	496, 199, 0, 0, 0, 0, 254, 255, 0, 575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 645, 508, 514,
	509, 510, 511, 512, 513, 0, 515, 0, 0, 0,
	0, 0, 398, 0, 591, 592, 668, 384, 486, 601,
	335, 349, 352, 341, 361, 0, 362, 337, 338, 343,
	346, 347, 348, 353, 354, 358, 364, 249, 210, 390,
	399, 578, 312, 216, 217, 218, 524, 525, 526, 527,
	616, 617, 621, 205, 462, 463, 464, 465, 292, 611,
	309, 468, 467, 331, 332, 379, 449, 540, 542, 553,
	557, 559, 561, 567, 570, 541, 543, 554, 558, 560,
	562, 568, 571, 530, 532, 534, 536, 549, 548, 545,
	573, 574, 551, 556, 535, 547, 552, 565, 572, 569,
	529, 533, 537, 546, 564, 563, 544, 555, 566, 550,
	538, 531, 539, 0, 196, 221, 368, 0, 454, 288,
	646, 615, 484, 610, 206, 223, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 209, 222, 232, 236, 243, 261, 276, 278, 285,
	298, 310, 318, 319, 322, 328, 380, 386, 387, 388,
	389, 409, 410, 411, 414, 417, 418, 421, 423, 424,
	427, 431, 435, 436, 437, 439, 441, 443, 455, 460,
	474, 475, 476, 477, 478, 481, 482, 488, 489, 490,
	491, 492, 500, 501, 516, 586, 588, 603, 622, 628,
	480, 301, 302, 444, 445, 314, 315, 642, 643, 300,
	598, 629, 596, 641, 623, 438, 378, 0, 0, 381,
	281, 305, 320, 0, 614, 502, 227, 466, 290, 251,
	0, 0, 211, 246, 230, 259, 274, 277, 324, 391,
	400, 429, 434, 296, 271, 244, 459, 241, 485, 519,
	520, 521, 523, 395, 266, 433, 396, 0, 376, 576,
	577, 316, 0, 0, 86, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	366, 267, 0, 0, 204, 505, 0, 430, 0, 203,
	0, 487, 252, 377, 374, 583, 282, 273, 269, 250,
	317, 385, 428, 518, 422, 0, 370, 0, 0, 497,
	401, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	248, 325, 202, 413, 498, 286, 0, 95, 0, 1744,
	0, 507, 718, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 245, 0, 0, 0, 351,
	360, 359, 339, 340, 342, 344, 350, 357, 363, 336,
	345, 0, 0, 607, 0, 0, 0, 265, 321, 272,
	264, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 402,
	257, 0, 453, 0, 0, 0, 625, 0, 0, 0,
	0, 0, 0, 0, 365, 0, 330, 197, 225, 0,
	0, 412, 461, 473, 0, 0, 0, 253, 0, 471,
	426, 602, 233, 284, 458, 432, 469, 440, 287, 0,
	0, 470, 372, 585, 450, 599, 626, 627, 263, 406,
	612, 522, 620, 644, 226, 260, 420, 506, 605, 494,
	397, 581, 582, 329, 493, 295, 201, 369, 632, 224,
	479, 371, 242, 231, 587, 609, 299, 289, 456, 639,
	213, 517, 597, 239, 483, 0, 0, 647, 247, 504,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 648, 228,
	619, 220, 0, 618, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 606, 0, 208,
	0, 499, 608, 649, 452, 212, 234, 235, 237, 0,
	279, 283, 291, 294, 303, 304, 313, 367, 419, 446,
	442, 451, 0, 579, 600, 613, 624, 630, 631, 633,
	634, 635, 636, 637, 640, 638, 407, 311, 495, 333,
	373, 0, 0, 425, 472, 240, 604, 496, 199, 0,
	0, 0, 0, 254, 255, 0, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 645, 508, 514, 509, 510, 511,
	512, 513, 0, 515, 0, 0, 0, 0, 0, 398,
	0, 591, 592, 668, 384, 486, 601, 335, 349, 352,
	341, 361, 0, 362, 337, 338, 343, 346, 347, 348,
	353, 354, 358, 364, 249, 210, 390, 399, 578, 312,
	216, 217, 218, 524, 525, 526, 527, 616, 617, 621,
	205, 462, 463, 464, 465, 292, 611, 309, 468, 467,
	331, 332, 379, 449, 540, 542, 553, 557, 559, 561,
	567, 570, 541, 543, 554, 558, 560, 562, 568, 571,
	530, 532, 534, 536, 549, 548, 545, 573, 574, 551,
	556, 535, 547, 552, 565, 572, 569, 529, 533, 537,
	546, 564, 563, 544, 555, 566, 550, 538, 531, 539,
	0, 196, 221, 368, 94, 454, 288, 646, 615, 484,
	610, 206, 223, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 200, 209, 222,
	232, 236, 243, 261, 276, 278, 285, 298, 310, 318,
	319, 322, 328, 380, 386, 387, 388, 389, 409, 410,
	411, 414, 417, 418, 421, 423, 424, 427, 431, 435,
	436, 437, 439, 441, 443, 455, 460, 474, 475, 476,
	477, 478, 481, 482, 488, 489, 490, 491, 492, 500,
	501, 516, 586, 588, 603, 622, 628, 480, 301, 302,
	444, 445, 314, 315, 642, 643, 300, 598, 629, 596,
	641, 623, 438, 378, 0, 0, 381, 281, 305, 320,
	0, 614, 502, 227, 466, 290, 251, 0, 0, 211,
	246, 230, 259, 274, 277, 324, 391, 400, 429, 434,
	296, 271, 244, 459, 241, 485, 519, 520, 521, 523,
	395, 266, 433, 396, 0, 376, 576, 577, 316, 0,
	0, 0, 528, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 366, 267, 0,
	0, 204, 505, 0, 430, 0, 203, 0, 487, 252,
	377, 374, 583, 282, 273, 269, 250, 317, 385, 428,
	518, 422, 0, 370, 0, 0, 497, 401, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	413, 498, 286, 0, 95, 0, 0, 0, 507, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 245, 0, 0, 0, 351, 360, 359, 339,
	340, 342, 344, 350, 357, 363, 336, 345, 0, 0,
	607, 0, 0, 0, 265, 321, 272, 264, 580, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 402, 257, 0, 453,
	0, 0, 0, 625, 0, 0, 0, 0, 0, 0,
	0, 365, 0, 330, 197, 225, 0, 0, 412, 461,
	473, 0, 0, 0, 253, 0, 471, 426, 602, 233,
	284, 458, 432, 469, 440, 287, 0, 0, 470, 372,
	585, 450, 599, 626, 627, 263, 406, 612, 522, 620,
	644, 226, 260, 420, 506, 605, 494, 397, 581, 582,
	329, 493, 295, 201, 369, 632, 224, 479, 371, 242,
	231, 587, 609, 299, 289, 456, 639, 213, 517, 597,
	239, 483, 0, 0, 647, 247, 504, 215, 594, 503,
	393, 326, 327, 214, 0, 457, 268, 293, 0, 0,
	258, 415, 589, 590, 256, 648, 228, 619, 220, 0,
	618, 408, 584, 595, 394, 383, 219, 593, 392, 382,
	334, 355, 356, 280, 307, 447, 375, 448, 306, 308,
	404, 403, 405, 207, 606, 0, 208, 0, 499, 608,
	649, 452, 212, 234, 235, 237, 0, 279, 283, 291,
	294, 303, 304, 313, 367, 419, 446, 442, 451, 0,
	579, 600, 613, 624, 630, 631, 633, 634, 635, 636,
	637, 640, 638, 407, 311, 495, 333, 373, 0, 0,
	425, 472, 240, 604, 496, 199, 0, 0, 0, 0,
	254, 255, 0, 575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 645, 508, 514, 509, 510, 511, 512, 513, 0,
	515, 0, 0, 0, 0, 0, 398, 0, 591, 592,
	668, 384, 486, 601, 335, 349, 352, 341, 361, 0,
	362, 337, 338, 343, 346, 347, 348, 353, 354, 358,
	364, 249, 210, 390, 399, 578, 312, 216, 217, 218,
	524, 525, 526, 527, 616, 617, 621, 205, 462, 463,
	464, 465, 292, 611, 309, 468, 467, 331, 332, 379,
	449, 540, 542, 553, 557, 559, 561, 567, 570, 541,
	543, 554, 558, 560, 562, 568, 571, 530, 532, 534,
	536, 549, 548, 545, 573, 574, 551, 556, 535, 547,
	552, 565, 572, 569, 529, 533, 537, 546, 564, 563,
	544, 555, 566, 550, 538, 531, 539, 0, 196, 221,
	368, 0, 454, 288, 646, 615, 484, 610, 206, 223,
	0, 262, 0, 0, 0, 0, 0, 0, 2412, 0,
	0, 2411, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 209, 222, 232, 236, 243,
	261, 276, 278, 285, 298, 310, 318, 319, 322, 328,
	380, 386, 387, 388, 389, 409, 410, 411, 414, 417,
	418, 421, 423, 424, 427, 431, 435, 436, 437, 439,
	441, 443, 455, 460, 474, 475, 476, 477, 478, 481,
	482, 488, 489, 490, 491, 492, 500, 501, 516, 586,
	588, 603, 622, 628, 480, 301, 302, 444, 445, 314,
	315, 642, 643, 300, 598, 629, 596, 641, 623, 438,
	378, 0, 0, 381, 281, 305, 320, 0, 614, 502,
	227, 466, 290, 251, 0, 0, 211, 246, 230, 259,
	274, 277, 324, 391, 400, 429, 434, 296, 271, 244,
	459, 241, 485, 519, 520, 521, 523, 395, 266, 433,
	396, 0, 376, 576, 577, 316, 0, 0, 0, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 416, 0, 0, 2359, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 366, 267, 0, 0, 204, 505,
	0, 430, 0, 203, 0, 487, 252, 377, 374, 583,
	282, 273, 269, 250, 317, 385, 428, 518, 422, 0,
	370, 0, 0, 497, 401, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 248, 325, 202, 413, 498, 286,
	0, 0, 0, 0, 1950, 507, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 245,
	0, 0, 0, 351, 360, 359, 339, 340, 342, 344,
	350, 357, 363, 336, 345, 0, 0, 607, 0, 0,
	0, 265, 321, 272, 264, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 402, 257, 0, 453, 0, 0, 0,
	625, 0, 0, 0, 0, 0, 0, 0, 365, 0,
	330, 197, 225, 0, 0, 412, 461, 473, 0, 0,
	0, 253, 0, 471, 426, 602, 233, 284, 458, 432,
	469, 440, 287, 0, 2357, 470, 372, 585, 450, 599,
	626, 627, 263, 406, 612, 522, 620, 644, 226, 260,
	420, 506, 605, 494, 397, 581, 582, 329, 493, 295,
	201, 369, 632, 224, 479, 371, 242, 231, 587, 609,
	299, 289, 456, 639, 213, 517, 597, 239, 483, 0,
	0, 647, 247, 504, 215, 594, 503, 393, 326, 327,
	214, 0, 457, 268, 293, 0, 0, 258, 415, 589,
	590, 256, 648, 228, 619, 220, 0, 618, 408, 584,
	595, 394, 383, 219, 593, 392, 382, 334, 355, 356,
	280, 307, 447, 375, 448, 306, 308, 404, 403, 405,
	207, 606, 0, 208, 0, 499, 608, 649, 452, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 367, 419, 446, 442, 451, 0, 579, 600, 613,
	624, 630, 631, 633, 634, 635, 636, 637, 640, 638,
	407, 311, 495, 333, 373, 0, 0, 425, 472, 240,
	604, 496, 199, 0, 0, 0, 0, 254, 255, 0,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 645, 508,
	514, 509, 510, 511, 512, 513, 0, 515, 0, 0,
	0, 0, 0, 398, 0, 591, 592, 668, 384, 486,
	601, 335, 349, 352, 341, 361, 0, 362, 337, 338,
	343, 346, 347, 348, 353, 354, 358, 364, 249, 210,
	390, 399, 578, 312, 216, 217, 218, 524, 525, 526,
	527, 616, 617, 621, 205, 462, 463, 464, 465, 292,
	611, 309, 468, 467, 331, 332, 379, 449, 540, 542,
	553, 557, 559, 561, 567, 570, 541, 543, 554, 558,
	560, 562, 568, 571, 530, 532, 534, 536, 549, 548,
	545, 573, 574, 551, 556, 535, 547, 552, 565, 572,
	569, 529, 533, 537, 546, 564, 563, 544, 555, 566,
	550, 538, 531, 539, 0, 196, 221, 368, 0, 454,
	288, 646, 615, 484, 610, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 380, 386, 387,
	388, 389, 409, 410, 411, 414, 417, 418, 421, 423,
	424, 427, 431, 435, 436, 437, 439, 441, 443, 455,
	460, 474, 475, 476, 477, 478, 481, 482, 488, 489,
	490, 491, 492, 500, 501, 516, 586, 588, 603, 622,
	628, 480, 301, 302, 444, 445, 314, 315, 642, 643,
	300, 598, 629, 596, 641, 623, 438, 378, 0, 0,
	381, 281, 305, 320, 0, 614, 502, 227, 466, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	391, 400, 429, 434, 296, 271, 244, 459, 241, 485,
	519, 520, 521, 523, 395, 266, 433, 396, 0, 376,
	576, 577, 316, 0, 0, 0, 528, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 366, 267, 0, 0, 204, 505, 0, 430, 0,
	203, 0, 487, 252, 377, 374, 583, 282, 273, 269,
	250, 317, 385, 428, 518, 422, 0, 370, 0, 0,
	497, 401, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 248, 325, 202, 413, 498, 286, 0, 0, 0,
	0, 0, 507, 718, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 245, 0, 0, 0,
	351, 360, 359, 339, 340, 342, 344, 350, 357, 363,
	336, 345, 0, 0, 607, 0, 0, 0, 265, 321,
	272, 264, 580, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 1086, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 0,
	402, 257, 0, 453, 0, 0, 0, 625, 0, 0,
	0, 0, 0, 0, 0, 365, 1092, 330, 197, 225,
	1090, 0, 412, 461, 473, 0, 0, 0, 253, 0,
	471, 426, 602, 233, 284, 458, 432, 469, 440, 287,
	0, 0, 470, 372, 585, 450, 599, 626, 627, 263,
	406, 612, 522, 620, 644, 226, 260, 420, 506, 605,
	494, 397, 581, 582, 329, 493, 295, 201, 369, 632,
	224, 479, 371, 242, 231, 587, 609, 299, 289, 456,
	639, 213, 517, 597, 239, 483, 0, 0, 647, 247,
	504, 215, 594, 503, 393, 326, 327, 214, 0, 457,
	268, 293, 0, 0, 258, 415, 589, 590, 256, 648,
	228, 619, 220, 0, 618, 408, 584, 595, 394, 383,
	219, 593, 392, 382, 334, 355, 356, 280, 307, 447,
	375, 448, 306, 308, 404, 403, 405, 207, 606, 0,
	208, 0, 499, 608, 649, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 600, 613, 624, 630, 631,
	633, 634, 635, 636, 637, 640, 638, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 604, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 645, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 668, 384, 486, 601, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 616, 617,
	621, 205, 462, 463, 464, 465, 292, 611, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 646, 615,
	484, 610, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 603, 622, 628, 480, 301,
	302, 444, 445, 314, 315, 642, 643, 300, 598, 629,
	596, 641, 623, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 614, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 2359, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 1950, 507,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 607, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 625, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 602,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 599, 626, 627, 263, 406, 612, 522,
	620, 644, 226, 260, 420, 506, 605, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 632, 224, 479, 371,
	242, 231, 587, 609, 299, 289, 456, 639, 213, 517,
	597, 239, 483, 0, 0, 647, 247, 504, 215, 594,
	503, 393, 326, 327, 214, 0, 457, 268, 293, 0,
	0, 258, 415, 589, 590, 256, 648, 228, 619, 220,
	0, 618, 408, 584, 595, 394, 383, 219, 593, 392,
	382, 334, 355, 356, 280, 307, 447, 375, 448, 306,
	308, 404, 403, 405, 207, 606, 0, 208, 0, 499,
	608, 649, 452, 212, 234, 235, 237, 0, 279, 283,
	291, 294, 303, 304, 313, 367, 419, 446, 442, 451,
	0, 579, 600, 613, 624, 630, 631, 633, 634, 635,
	636, 637, 640, 638, 407, 311, 495, 333, 373, 0,
	0, 425, 472, 240, 604, 496, 199, 0, 0, 0,
	0, 254, 255, 0, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 645, 508, 514, 509, 510, 511, 512, 513,
	0, 515, 0, 0, 0, 0, 0, 398, 0, 591,
	592, 668, 384, 486, 601, 335, 349, 352, 341, 361,
	0, 362, 337, 338, 343, 346, 347, 348, 353, 354,
	358, 364, 249, 210, 390, 399, 578, 312, 216, 217,
	218, 524, 525, 526, 527, 616, 617, 621, 205, 462,
	463, 464, 465, 292, 611, 309, 468, 467, 331, 332,
	379, 449, 540, 542, 553, 557, 559, 561, 567, 570,
	541, 543, 554, 558, 560, 562, 568, 571, 530, 532,
	534, 536, 549, 548, 545, 573, 574, 551, 556, 535,
	547, 552, 565, 572, 569, 529, 533, 537, 546, 564,
	563, 544, 555, 566, 550, 538, 531, 539, 0, 196,
	221, 368, 0, 454, 288, 646, 615, 484, 610, 206,
	223, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 200, 209, 222, 232, 236,
	243, 261, 276, 278, 285, 298, 310, 318, 319, 322,
	328, 380, 386, 387, 388, 389, 409, 410, 411, 414,
	417, 418, 421, 423, 424, 427, 431, 435, 436, 437,
	439, 441, 443, 455, 460, 474, 475, 476, 477, 478,
	481, 482, 488, 489, 490, 491, 492, 500, 501, 516,
	586, 588, 603, 622, 628, 480, 301, 302, 444, 445,
	314, 315, 642, 643, 300, 598, 629, 596, 641, 623,
	438, 378, 0, 0, 381, 281, 305, 320, 0, 614,
	502, 227, 466, 290, 251, 0, 0, 211, 246, 230,
	259, 274, 277, 324, 391, 400, 429, 434, 296, 271,
	244, 459, 241, 485, 519, 520, 521, 523, 395, 266,
	433, 396, 0, 376, 576, 577, 316, 0, 0, 0,
	528, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 366, 267, 0, 0, 204,
	505, 0, 430, 0, 203, 0, 487, 252, 377, 374,
	583, 282, 273, 269, 250, 317, 385, 428, 518, 422,
	0, 370, 0, 0, 497, 401, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 248, 325, 202, 413, 498,
	286, 0, 0, 0, 1744, 0, 507, 718, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	245, 0, 0, 0, 351, 360, 359, 339, 340, 342,
	344, 350, 357, 363, 336, 345, 0, 0, 607, 0,
	0, 0, 265, 321, 272, 264, 580, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 402, 257, 0, 453, 0, 0,
	0, 625, 0, 0, 0, 3711, 0, 0, 0, 365,
	0, 330, 197, 225, 0, 0, 412, 461, 473, 0,
	0, 0, 253, 0, 471, 426, 602, 233, 284, 458,
	432, 469, 440, 287, 0, 0, 470, 372, 585, 450,
	599, 626, 627, 263, 406, 612, 522, 620, 644, 226,
	260, 420, 506, 605, 494, 397, 581, 582, 329, 493,
	295, 201, 369, 632, 224, 479, 371, 242, 231, 587,
	609, 299, 289, 456, 639, 213, 517, 597, 239, 483,
	0, 0, 647, 247, 504, 215, 594, 503, 393, 326,
	327, 214, 0, 457, 268, 293, 0, 0, 258, 415,
	589, 590, 256, 648, 228, 619, 220, 0, 618, 408,
	584, 595, 394, 383, 219, 593, 392, 382, 334, 355,
	356, 280, 307, 447, 375, 448, 306, 308, 404, 403,
	405, 207, 606, 0, 208, 0, 499, 608, 649, 452,
	212, 234, 235, 237, 0, 279, 283, 291, 294, 303,
	304, 313, 367, 419, 446, 442, 451, 0, 579, 600,
	613, 624, 630, 631, 633, 634, 635, 636, 637, 640,
	638, 407, 311, 495, 333, 373, 0, 0, 425, 472,
	240, 604, 496, 199, 0, 0, 0, 0, 254, 255,
	0, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 645,
	508, 514, 509, 510, 511, 512, 513, 0, 515, 0,
	0, 0, 0, 0, 398, 0, 591, 592, 668, 384,
	486, 601, 335, 349, 352, 341, 361, 0, 362, 337,
	338, 343, 346, 347, 348, 353, 354, 358, 364, 249,
	210, 390, 399, 578, 312, 216, 217, 218, 524, 525,
	526, 527, 616, 617, 621, 205, 462, 463, 464, 465,
	292, 611, 309, 468, 467, 331, 332, 379, 449, 540,
	542, 553, 557, 559, 561, 567, 570, 541, 543, 554,
	558, 560, 562, 568, 571, 530, 532, 534, 536, 549,
	548, 545, 573, 574, 551, 556, 535, 547, 552, 565,
	572, 569, 529, 533, 537, 546, 564, 563, 544, 555,
	566, 550, 538, 531, 539, 0, 196, 221, 368, 0,
	454, 288, 646, 615, 484, 610, 206, 223, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 209, 222, 232, 236, 243, 261, 276,
	278, 285, 298, 310, 318, 319, 322, 328, 380, 386,
	387, 388, 389, 409, 410, 411, 414, 417, 418, 421,
	423, 424, 427, 431, 435, 436, 437, 439, 441, 443,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 488,
	489, 490, 491, 492, 500, 501, 516, 586, 588, 603,
	622, 628, 480, 301, 302, 444, 445, 314, 315, 642,
	643, 300, 598, 629, 596, 641, 623, 438, 378, 0,
	0, 381, 281, 305, 320, 0, 614, 502, 227, 466,
	290, 251, 0, 0, 211, 246, 230, 259, 274, 277,
	324, 391, 400, 429, 434, 296, 271, 244, 459, 241,
	485, 519, 520, 521, 523, 395, 266, 433, 396, 0,
	376, 576, 577, 316, 0, 0, 0, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 366, 267, 0, 0, 204, 505, 0, 430,
	0, 203, 0, 487, 252, 377, 374, 583, 282, 273,
	269, 250, 317, 385, 428, 518, 422, 0, 370, 0,
	0, 497, 401, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 248, 325, 202, 413, 498, 286, 0, 0,
	0, 0, 2118, 507, 718, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 245, 0, 0,
	0, 351, 360, 359, 339, 340, 342, 344, 350, 357,
	363, 336, 345, 0, 0, 607, 0, 0, 0, 265,
	321, 272, 264, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2119, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 402, 257, 0, 453, 0, 0, 0, 625, 0,
	0, 0, 0, 0, 0, 0, 365, 0, 330, 197,
	225, 0, 0, 412, 461, 473, 0, 0, 0, 253,
	0, 471, 426, 602, 233, 284, 458, 432, 469, 440,
	287, 0, 0, 470, 372, 585, 450, 599, 626, 627,
	263, 406, 612, 522, 620, 644, 226, 260, 420, 506,
	605, 494, 397, 581, 582, 329, 493, 295, 201, 369,
	632, 224, 479, 371, 242, 231, 587, 609, 299, 289,
	456, 639, 213, 517, 597, 239, 483, 0, 0, 647,
	247, 504, 215, 594, 503, 393, 326, 327, 214, 0,
	457, 268, 293, 0, 0, 258, 415, 589, 590, 256,
	648, 228, 619, 220, 0, 618, 408, 584, 595, 394,
	383, 219, 593, 392, 382, 334, 355, 356, 280, 307,
	447, 375, 448, 306, 308, 404, 403, 405, 207, 606,
	0, 208, 0, 499, 608, 649, 452, 212, 234, 235,
	237, 0, 279, 283, 291, 294, 303, 304, 313, 367,
	419, 446, 442, 451, 0, 579, 600, 613, 624, 630,
	631, 633, 634, 635, 636, 637, 640, 638, 407, 311,
	495, 333, 373, 0, 0, 425, 472, 240, 604, 496,
	199, 0, 0, 0, 0, 254, 255, 0, 575, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 645, 508, 514, 509,
	510, 511, 512, 513, 0, 515, 0, 0, 0, 0,
	0, 398, 0, 591, 592, 668, 384, 486, 601, 335,
	349, 352, 341, 361, 0, 362, 337, 338, 343, 346,
	347, 348, 353, 354, 358, 364, 249, 210, 390, 399,
	578, 312, 216, 217, 218, 524, 525, 526, 527, 616,
	617, 621, 205, 462, 463, 464, 465, 292, 611, 309,
	468, 467, 331, 332, 379, 449, 540, 542, 553, 557,
	559, 561, 567, 570, 541, 543, 554, 558, 560, 562,
	568, 571, 530, 532, 534, 536, 549, 548, 545, 573,
	574, 551, 556, 535, 547, 552, 565, 572, 569, 529,
	533, 537, 546, 564, 563, 544, 555, 566, 550, 538,
	531, 539, 0, 196, 221, 368, 0, 454, 288, 646,
	615, 484, 610, 206, 223, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	209, 222, 232, 236, 243, 261, 276, 278, 285, 298,
	310, 318, 319, 322, 328, 380, 386, 387, 388, 389,
	409, 410, 411, 414, 417, 418, 421, 423, 424, 427,
	431, 435, 436, 437, 439, 441, 443, 455, 460, 474,
	475, 476, 477, 478, 481, 482, 488, 489, 490, 491,
	492, 500, 501, 516, 586, 588, 603, 622, 628, 480,
	301, 302, 444, 445, 314, 315, 642, 643, 300, 598,
	629, 596, 641, 623, 438, 378, 0, 0, 381, 281,
	305, 320, 0, 614, 502, 227, 466, 290, 251, 0,
	0, 211, 246, 230, 259, 274, 277, 324, 391, 400,
	429, 434, 296, 271, 244, 459, 241, 485, 519, 520,
	521, 523, 395, 266, 433, 396, 0, 376, 576, 577,
	316, 0, 0, 0, 528, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 366,
	267, 0, 0, 204, 505, 0, 430, 0, 203, 0,
	487, 252, 377, 374, 583, 282, 273, 269, 250, 317,
	385, 428, 518, 422, 0, 370, 0, 0, 497, 401,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 248,
	325, 202, 413, 498, 286, 0, 0, 0, 0, 2862,
	507, 718, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 245, 0, 0, 0, 351, 360,
	359, 339, 340, 342, 344, 350, 357, 363, 336, 345,
	0, 0, 607, 0, 0, 0, 265, 321, 272, 264,
	580, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2863, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 0, 402, 257,
	0, 453, 0, 0, 0, 625, 0, 0, 0, 0,
	0, 0, 0, 365, 0, 330, 197, 225, 0, 0,
	412, 461, 473, 0, 0, 0, 253, 0, 471, 426,
	602, 233, 284, 458, 432, 469, 440, 287, 0, 0,
	470, 372, 585, 450, 599, 626, 627, 263, 406, 612,
	522, 620, 644, 226, 260, 420, 506, 605, 494, 397,
	581, 582, 329, 493, 295, 201, 369, 632, 224, 479,
	371, 242, 231, 587, 609, 299, 289, 456, 639, 213,
	517, 597, 239, 483, 0, 0, 647, 247, 504, 215,
	594, 503, 393, 326, 327, 214, 0, 457, 268, 293,
	0, 0, 258, 415, 589, 590, 256, 648, 228, 619,
	220, 0, 618, 408, 584, 595, 394, 383, 219, 593,
	392, 382, 334, 355, 356, 280, 307, 447, 375, 448,
	306, 308, 404, 403, 405, 207, 606, 0, 208, 0,
	499, 608, 649, 452, 212, 234, 235, 237, 0, 279,
	283, 291, 294, 303, 304, 313, 367, 419, 446, 442,
	451, 0, 579, 600, 613, 624, 630, 631, 633, 634,
	635, 636, 637, 640, 638, 407, 311, 495, 333, 373,
	0, 0, 425, 472, 240, 604, 496, 199, 0, 0,
	0, 0, 254, 255, 0, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 645, 508, 514, 509, 510, 511, 512,
	513, 0, 515, 0, 0, 0, 0, 0, 398, 0,
	591, 592, 668, 384, 486, 601, 335, 349, 352, 341,
	361, 0, 362, 337, 338, 343, 346, 347, 348, 353,
	354, 358, 364, 249, 210, 390, 399, 578, 312, 216,
	217, 218, 524, 525, 526, 527, 616, 617, 621, 205,
	462, 463, 464, 465, 292, 611, 309, 468, 467, 331,
	332, 379, 449, 540, 542, 553, 557, 559, 561, 567,
	570, 541, 543, 554, 558, 560, 562, 568, 571, 530,
	532, 534, 536, 549, 548, 545, 573, 574, 551, 556,
	535, 547, 552, 565, 572, 569, 529, 533, 537, 546,
	564, 563, 544, 555, 566, 550, 538, 531, 539, 0,
	196, 221, 368, 0, 454, 288, 646, 615, 484, 610,
	206, 223, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 209, 222, 232,
	236, 243, 261, 276, 278, 285, 298, 310, 318, 319,
	322, 328, 380, 386, 387, 388, 389, 409, 410, 411,
	414, 417, 418, 421, 423, 424, 427, 431, 435, 436,
	437, 439, 441, 443, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 488, 489, 490, 491, 492, 500, 501,
	516, 586, 588, 603, 622, 628, 480, 301, 302, 444,
	445, 314, 315, 642, 643, 300, 598, 629, 596, 641,
	623, 438, 378, 0, 0, 381, 281, 305, 320, 0,
	614, 502, 227, 466, 290, 251, 0, 0, 211, 246,
	230, 259, 274, 277, 324, 391, 400, 429, 434, 296,
	271, 244, 459, 241, 485, 519, 520, 521, 523, 395,
	266, 433, 396, 0, 376, 576, 577, 316, 0, 0,
	0, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 366, 267, 0, 0,
	204, 505, 0, 430, 0, 203, 0, 487, 252, 377,
	374, 583, 282, 273, 269, 250, 317, 385, 428, 518,
	422, 0, 370, 0, 0, 497, 401, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 248, 325, 202, 413,
	498, 286, 0, 0, 0, 0, 0, 507, 718, 0,
	0, 0, 0, 2847, 0, 0, 0, 0, 238, 0,
	0, 245, 2848, 0, 0, 351, 360, 359, 339, 340,
	342, 344, 350, 357, 363, 336, 345, 0, 0, 607,
	0, 0, 0, 265, 321, 272, 264, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 402, 257, 0, 453, 0,
	0, 0, 625, 0, 0, 0, 0, 0, 0, 0,
	365, 0, 330, 197, 225, 0, 0, 412, 461, 473,
	0, 0, 0, 253, 0, 471, 426, 602, 233, 284,
	458, 432, 469, 440, 287, 0, 0, 470, 372, 585,
	450, 599, 626, 627, 263, 406, 612, 522, 620, 644,
	226, 260, 420, 506, 605, 494, 397, 581, 582, 329,
	493, 295, 201, 369, 632, 224, 479, 371, 242, 231,
	587, 609, 299, 289, 456, 639, 213, 517, 597, 239,
	483, 0, 0, 647, 247, 504, 215, 594, 503, 393,
	326, 327, 214, 0, 457, 268, 293, 0, 0, 258,
	415, 589, 590, 256, 648, 228, 619, 220, 0, 618,
	408, 584, 595, 394, 383, 219, 593, 392, 382, 334,
	355, 356, 280, 307, 447, 375, 448, 306, 308, 404,
	403, 405, 207, 606, 0, 208, 0, 499, 608, 649,
	452, 212, 234, 235, 237, 0, 279, 283, 291, 294,
	303, 304, 313, 367, 419, 446, 442, 451, 0, 579,
	600, 613, 624, 630, 631, 633, 634, 635, 636, 637,
	640, 638, 407, 311, 495, 333, 373, 0, 0, 425,
	472, 240, 604, 496, 199, 0, 0, 0, 0, 254,
	255, 0, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	645, 508, 514, 509, 510, 511, 512, 513, 0, 515,
	0, 0, 0, 0, 0, 398, 0, 591, 592, 668,
	384, 486, 601, 335, 349, 352, 341, 361, 0, 362,
	337, 338, 343, 346, 347, 348, 353, 354, 358, 364,
	249, 210, 390, 399, 578, 312, 216, 217, 218, 524,
	525, 526, 527, 616, 617, 621, 205, 462, 463, 464,
	465, 292, 611, 309, 468, 467, 331, 332, 379, 449,
	540, 542, 553, 557, 559, 561, 567, 570, 541, 543,
	554, 558, 560, 562, 568, 571, 530, 532, 534, 536,
	549, 548, 545, 573, 574, 551, 556, 535, 547, 552,
	565, 572, 569, 529, 533, 537, 546, 564, 563, 544,
	555, 566, 550, 538, 531, 539, 0, 196, 221, 368,
	0, 454, 288, 646, 615, 484, 610, 206, 223, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 209, 222, 232, 236, 243, 261,
	276, 278, 285, 298, 310, 318, 319, 322, 328, 380,
	386, 387, 388, 389, 409, 410, 411, 414, 417, 418,
	421, 423, 424, 427, 431, 435, 436, 437, 439, 441,
	443, 455, 460, 474, 475, 476, 477, 478, 481, 482,
	488, 489, 490, 491, 492, 500, 501, 516, 586, 588,
	603, 622, 628, 480, 301, 302, 444, 445, 314, 315,
	642, 643, 300, 598, 629, 596, 641, 623, 438, 378,
	0, 0, 381, 281, 305, 320, 0, 614, 502, 227,
	466, 290, 251, 0, 0, 211, 246, 230, 259, 274,
	277, 324, 391, 400, 429, 434, 296, 271, 244, 459,
	241, 485, 519, 520, 521, 523, 395, 266, 433, 396,
	0, 376, 576, 577, 316, 0, 0, 0, 528, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 0, 270, 1790,
	0, 0, 0, 366, 267, 0, 0, 204, 505, 0,
	430, 0, 203, 0, 487, 252, 377, 374, 583, 282,
	273, 269, 250, 317, 385, 428, 518, 422, 0, 370,
	0, 0, 497, 401, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 248, 325, 202, 413, 498, 286, 0,
	0, 0, 0, 1789, 507, 718, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 245, 0,
	0, 0, 351, 360, 359, 339, 340, 342, 344, 350,
	357, 363, 336, 345, 0, 0, 607, 0, 0, 0,
	265, 321, 272, 264, 580, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 0, 402, 257, 0, 453, 0, 0, 0, 625,
	0, 0, 0, 0, 0, 0, 0, 365, 0, 330,
	197, 225, 0, 0, 412, 461, 473, 0, 0, 0,
	253, 0, 471, 426, 602, 233, 284, 458, 432, 469,
	440, 287, 0, 0, 470, 372, 585, 450, 599, 626,
	627, 263, 406, 612, 522, 620, 644, 226, 260, 420,
	506, 605, 494, 397, 581, 582, 329, 493, 295, 201,
	369, 632, 224, 479, 371, 242, 231, 587, 609, 299,
	289, 456, 639, 213, 517, 597, 239, 483, 0, 0,
	647, 247, 504, 215, 594, 503, 393, 326, 327, 214,
	0, 457, 268, 293, 0, 0, 258, 415, 589, 590,
	256, 648, 228, 619, 220, 0, 618, 408, 584, 595,
	394, 383, 219, 593, 392, 382, 334, 355, 356, 280,
	307, 447, 375, 448, 306, 308, 404, 403, 405, 207,
	606, 0, 208, 0, 499, 608, 649, 452, 212, 234,
	235, 237, 0, 279, 283, 291, 294, 303, 304, 313,
	367, 419, 446, 442, 451, 0, 579, 600, 613, 624,
	630, 631, 633, 634, 635, 636, 637, 640, 638, 407,
	311, 495, 333, 373, 0, 0, 425, 472, 240, 604,
	496, 199, 0, 0, 0, 0, 254, 255, 0, 575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 645, 508, 514,
	509, 510, 511, 512, 513, 0, 515, 0, 0, 0,
	0, 0, 398, 0, 591, 592, 668, 384, 486, 601,
	335, 349, 352, 341, 361, 0, 362, 337, 338, 343,
	346, 347, 348, 353, 354, 358, 364, 249, 210, 390,
	399, 578, 312, 216, 217, 218, 524, 525, 526, 527,
	616, 617, 621, 205, 462, 463, 464, 465, 292, 611,
	309, 468, 467, 331, 332, 379, 449, 540, 542, 553,
	557, 559, 561, 567, 570, 541, 543, 554, 558, 560,
	562, 568, 571, 530, 532, 534, 536, 549, 548, 545,
	573, 574, 551, 556, 535, 547, 552, 565, 572, 569,
	529, 533, 537, 546, 564, 563, 544, 555, 566, 550,
	538, 531, 539, 0, 196, 221, 368, 0, 454, 288,
	646, 615, 484, 610, 206, 223, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 209, 222, 232, 236, 243, 261, 276, 278, 285,
	298, 310, 318, 319, 322, 328, 380, 386, 387, 388,
	389, 409, 410, 411, 414, 417, 418, 421, 423, 424,
	427, 431, 435, 436, 437, 439, 441, 443, 455, 460,
	474, 475, 476, 477, 478, 481, 482, 488, 489, 490,
	491, 492, 500, 501, 516, 586, 588, 603, 622, 628,
	480, 301, 302, 444, 445, 314, 315, 642, 643, 300,
	598, 629, 596, 641, 623, 438, 378, 0, 0, 381,
	281, 305, 320, 0, 614, 502, 227, 466, 290, 251,
	0, 0, 211, 246, 230, 259, 274, 277, 324, 391,
	400, 429, 434, 296, 271, 244, 459, 241, 485, 519,
	520, 521, 523, 395, 266, 433, 396, 0, 376, 576,
	577, 316, 0, 0, 0, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	366, 267, 0, 0, 204, 505, 0, 430, 0, 203,
	0, 487, 252, 377, 374, 583, 282, 273, 269, 250,
	317, 385, 428, 518, 422, 0, 370, 0, 0, 497,
	401, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	248, 325, 202, 413, 498, 286, 0, 0, 0, 0,
	0, 507, 720, 721, 722, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 245, 0, 0, 0, 351,
	360, 359, 339, 340, 342, 344, 350, 357, 363, 336,
	345, 0, 0, 607, 0, 0, 0, 265, 321, 272,
	264, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 402,
	257, 0, 453, 0, 0, 0, 625, 0, 0, 0,
	0, 0, 0, 0, 365, 0, 330, 197, 225, 0,
	0, 412, 461, 473, 0, 0, 0, 253, 0, 471,
	426, 602, 233, 284, 458, 432, 469, 440, 287, 0,
	0, 470, 372, 585, 450, 599, 626, 627, 263, 406,
	612, 522, 620, 644, 226, 260, 420, 506, 605, 494,
	397, 581, 582, 329, 493, 295, 201, 369, 632, 224,
	479, 371, 242, 231, 587, 609, 299, 289, 456, 639,
	213, 517, 597, 239, 483, 0, 0, 647, 247, 504,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 648, 228,
	619, 220, 0, 618, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 606, 0, 208,
	0, 499, 608, 649, 452, 212, 234, 235, 237, 0,
	279, 283, 291, 294, 303, 304, 313, 367, 419, 446,
	442, 451, 0, 579, 600, 613, 624, 630, 631, 633,
	634, 635, 636, 637, 640, 638, 407, 311, 495, 333,
	373, 0, 0, 425, 472, 240, 604, 496, 199, 0,
	0, 0, 0, 254, 255, 0, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 645, 508, 514, 509, 510, 511,
	512, 513, 0, 515, 0, 0, 0, 0, 0, 398,
	0, 591, 592, 668, 384, 486, 601, 335, 349, 352,
	341, 361, 0, 362, 337, 338, 343, 346, 347, 348,
	353, 354, 358, 364, 249, 210, 390, 399, 578, 312,
	216, 217, 218, 524, 525, 526, 527, 616, 617, 621,
	205, 462, 463, 464, 465, 292, 611, 309, 468, 467,
	331, 332, 379, 449, 540, 542, 553, 557, 559, 561,
	567, 570, 541, 543, 554, 558, 560, 562, 568, 571,
	530, 532, 534, 536, 549, 548, 545, 573, 574, 551,
	556, 535, 547, 552, 565, 572, 569, 529, 533, 537,
	546, 564, 563, 544, 555, 566, 550, 538, 531, 539,
	0, 196, 221, 368, 0, 454, 288, 646, 615, 484,
	610, 206, 223, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 200, 209, 222,
	232, 236, 243, 261, 276, 278, 285, 298, 310, 318,
	319, 322, 328, 380, 386, 387, 388, 389, 409, 410,
	411, 414, 417, 418, 421, 423, 424, 427, 431, 435,
	436, 437, 439, 441, 443, 455, 460, 474, 475, 476,
	477, 478, 481, 482, 488, 489, 490, 491, 492, 500,
	501, 516, 586, 588, 603, 622, 628, 480, 301, 302,
	444, 445, 314, 315, 642, 643, 300, 598, 629, 596,
	641, 623, 438, 378, 0, 0, 381, 281, 305, 320,
	0, 614, 502, 227, 466, 290, 251, 0, 0, 211,
	246, 230, 259, 274, 277, 324, 391, 400, 429, 434,
	296, 271, 244, 459, 241, 485, 519, 520, 521, 523,
	395, 266, 433, 396, 0, 376, 576, 577, 316, 0,
	0, 0, 528, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 366, 267, 0,
	0, 204, 505, 0, 430, 0, 203, 0, 487, 252,
	377, 374, 583, 282, 273, 269, 250, 317, 385, 428,
	518, 422, 0, 370, 0, 0, 497, 401, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	413, 498, 286, 0, 0, 0, 0, 0, 507, 718,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 245, 0, 0, 0, 351, 360, 359, 339,
	340, 342, 344, 350, 357, 363, 336, 345, 0, 0,
	607, 0, 0, 0, 265, 321, 272, 264, 580, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 402, 257, 0, 453,
	0, 0, 0, 625, 0, 0, 0, 4055, 0, 0,
	0, 365, 0, 330, 197, 225, 0, 0, 412, 461,
	473, 0, 0, 0, 253, 0, 471, 426, 602, 233,
	284, 458, 432, 469, 440, 287, 0, 0, 470, 372,
	585, 450, 599, 626, 627, 263, 406, 612, 522, 620,
	644, 226, 260, 420, 506, 605, 494, 397, 581, 582,
	329, 493, 295, 201, 369, 632, 224, 479, 371, 242,
	231, 587, 609, 299, 289, 456, 639, 213, 517, 597,
	239, 483, 0, 0, 647, 247, 504, 215, 594, 503,
	393, 326, 327, 214, 0, 457, 268, 293, 0, 0,
	258, 415, 589, 590, 256, 648, 228, 619, 220, 0,
	618, 408, 584, 595, 394, 383, 219, 593, 392, 382,
	334, 355, 356, 280, 307, 447, 375, 448, 306, 308,
	404, 403, 405, 207, 606, 0, 208, 0, 499, 608,
	649, 452, 212, 234, 235, 237, 0, 279, 283, 291,
	294, 303, 304, 313, 367, 419, 446, 442, 451, 0,
	579, 600, 613, 624, 630, 631, 633, 634, 635, 636,
	637, 640, 638, 407, 311, 495, 333, 373, 0, 0,
	425, 472, 240, 604, 496, 199, 0, 0, 0, 0,
	254, 255, 0, 575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 645, 508, 514, 509, 510, 511, 512, 513, 0,
	515, 0, 0, 0, 0, 0, 398, 0, 591, 592,
	668, 384, 486, 601, 335, 349, 352, 341, 361, 0,
	362, 337, 338, 343, 346, 347, 348, 353, 354, 358,
	364, 249, 210, 390, 399, 578, 312, 216, 217, 218,
	524, 525, 526, 527, 616, 617, 621, 205, 462, 463,
	464, 465, 292, 611, 309, 468, 467, 331, 332, 379,
	449, 540, 542, 553, 557, 559, 561, 567, 570, 541,
	543, 554, 558, 560, 562, 568, 571, 530, 532, 534,
	536, 549, 548, 545, 573, 574, 551, 556, 535, 547,
	552, 565, 572, 569, 529, 533, 537, 546, 564, 563,
	544, 555, 566, 550, 538, 531, 539, 0, 196, 221,
	368, 0, 454, 288, 646, 615, 484, 610, 206, 223,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 209, 222, 232, 236, 243,
	261, 276, 278, 285, 298, 310, 318, 319, 322, 328,
	380, 386, 387, 388, 389, 409, 410, 411, 414, 417,
	418, 421, 423, 424, 427, 431, 435, 436, 437, 439,
	441, 443, 455, 460, 474, 475, 476, 477, 478, 481,
	482, 488, 489, 490, 491, 492, 500, 501, 516, 586,
	588, 603, 622, 628, 480, 301, 302, 444, 445, 314,
	315, 642, 643, 300, 598, 629, 596, 641, 623, 438,
	378, 0, 0, 381, 281, 305, 320, 0, 614, 502,
	227, 466, 290, 251, 0, 0, 211, 246, 230, 259,
	274, 277, 324, 391, 400, 429, 434, 296, 271, 244,
	459, 241, 485, 519, 520, 521, 523, 395, 266, 433,
	396, 0, 376, 576, 577, 316, 0, 0, 0, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 366, 267, 0, 0, 204, 505,
	0, 430, 0, 203, 0, 487, 252, 377, 374, 583,
	282, 273, 269, 250, 317, 385, 428, 518, 422, 0,
	370, 0, 0, 497, 401, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 248, 325, 202, 413, 498, 286,
	0, 0, 0, 0, 1950, 507, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 245,
	0, 0, 0, 351, 360, 359, 339, 340, 342, 344,
	350, 357, 363, 336, 345, 0, 0, 607, 0, 0,
	0, 265, 321, 272, 264, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 402, 257, 0, 453, 0, 0, 0,
	625, 0, 0, 0, 0, 0, 0, 0, 365, 0,
	330, 197, 225, 0, 0, 412, 461, 473, 0, 0,
	0, 253, 0, 471, 426, 602, 233, 284, 458, 432,
	469, 440, 287, 0, 0, 470, 372, 585, 450, 599,
	626, 627, 263, 406, 612, 522, 620, 644, 226, 260,
	420, 506, 605, 494, 397, 581, 582, 329, 493, 295,
	201, 369, 632, 224, 479, 371, 242, 231, 587, 609,
	299, 289, 456, 639, 213, 517, 597, 239, 483, 0,
	0, 647, 247, 504, 215, 594, 503, 393, 326, 327,
	214, 0, 457, 268, 293, 0, 0, 258, 415, 589,
	590, 256, 648, 228, 619, 220, 0, 618, 408, 584,
	595, 394, 383, 219, 593, 392, 382, 334, 355, 356,
	280, 307, 447, 375, 448, 306, 308, 404, 403, 405,
	207, 606, 0, 208, 0, 499, 608, 649, 452, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 367, 419, 446, 442, 451, 0, 579, 600, 613,
	624, 630, 631, 633, 634, 635, 636, 637, 640, 638,
	407, 311, 495, 333, 373, 0, 0, 425, 472, 240,
	604, 496, 199, 0, 0, 0, 0, 254, 255, 0,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 645, 508,
	514, 509, 510, 511, 512, 513, 0, 515, 0, 0,
	0, 0, 0, 398, 0, 591, 592, 668, 384, 486,
	601, 335, 349, 352, 341, 361, 0, 362, 337, 338,
	343, 346, 347, 348, 353, 354, 358, 364, 249, 210,
	390, 399, 578, 312, 216, 217, 218, 524, 525, 526,
	527, 616, 617, 621, 205, 462, 463, 464, 465, 292,
	611, 309, 468, 467, 331, 332, 379, 449, 540, 542,
	553, 557, 559, 561, 567, 570, 541, 543, 554, 558,
	560, 562, 568, 571, 530, 532, 534, 536, 549, 548,
	545, 573, 574, 551, 556, 535, 547, 552, 565, 572,
	569, 529, 533, 537, 546, 564, 563, 544, 555, 566,
	550, 538, 531, 539, 0, 196, 221, 368, 0, 454,
	288, 646, 615, 484, 610, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 380, 386, 387,
	388, 389, 409, 410, 411, 414, 417, 418, 421, 423,
	424, 427, 431, 435, 436, 437, 439, 441, 443, 455,
	460, 474, 475, 476, 477, 478, 481, 482, 488, 489,
	490, 491, 492, 500, 501, 516, 586, 588, 603, 622,
	628, 480, 301, 302, 444, 445, 314, 315, 642, 643,
	300, 598, 629, 596, 641, 623, 438, 378, 0, 0,
	381, 281, 305, 320, 0, 614, 502, 227, 466, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	391, 400, 429, 434, 296, 271, 244, 459, 241, 485,
	519, 520, 521, 523, 395, 266, 433, 396, 0, 376,
	576, 577, 316, 0, 0, 0, 528, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 366, 267, 0, 0, 204, 505, 0, 430, 0,
	203, 0, 487, 252, 377, 374, 583, 282, 273, 269,
	250, 317, 385, 428, 518, 422, 0, 370, 0, 0,
	497, 401, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 248, 325, 202, 413, 498, 286, 0, 0, 0,
	0, 0, 507, 718, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 245, 0, 0, 0,
	351, 360, 359, 339, 340, 342, 344, 350, 357, 363,
	336, 345, 0, 0, 607, 0, 0, 0, 265, 321,
	272, 264, 580, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 0,
	402, 257, 0, 453, 0, 0, 0, 625, 0, 0,
	0, 3711, 0, 0, 0, 365, 0, 330, 197, 225,
	0, 0, 412, 461, 473, 0, 0, 0, 253, 0,
	471, 426, 602, 233, 284, 458, 432, 469, 440, 287,
	0, 0, 470, 372, 585, 450, 599, 626, 627, 263,
	406, 612, 522, 620, 644, 226, 260, 420, 506, 605,
	494, 397, 581, 582, 329, 493, 295, 201, 369, 632,
	224, 479, 371, 242, 231, 587, 609, 299, 289, 456,
	639, 213, 517, 597, 239, 483, 0, 0, 647, 247,
	504, 215, 594, 503, 393, 326, 327, 214, 0, 457,
	268, 293, 0, 0, 258, 415, 589, 590, 256, 648,
	228, 619, 220, 0, 618, 408, 584, 595, 394, 383,
	219, 593, 392, 382, 334, 355, 356, 280, 307, 447,
	375, 448, 306, 308, 404, 403, 405, 207, 606, 0,
	208, 0, 499, 608, 649, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 600, 613, 624, 630, 631,
	633, 634, 635, 636, 637, 640, 638, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 604, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 645, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 668, 384, 486, 601, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 616, 617,
	621, 205, 462, 463, 464, 465, 292, 611, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 646, 615,
	484, 610, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 603, 622, 628, 480, 301,
	302, 444, 445, 314, 315, 642, 643, 300, 598, 629,
	596, 641, 623, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 614, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 95, 0, 0, 0, 507,
	718, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 607, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 625, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 602,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 599, 626, 627, 263, 406, 612, 522,
	620, 644, 226, 260, 420, 506, 605, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 632, 224, 479, 371,
	242, 231, 587, 609, 299, 289, 456, 639, 213, 517,
	597, 239, 483, 0, 0, 647, 247, 504, 215, 594,
	503, 393, 326, 327, 214, 0, 457, 268, 293, 0,
	0, 258, 415, 589, 590, 256, 648, 228, 619, 220,
	0, 618, 408, 584, 595, 394, 383, 219, 593, 392,
	382, 334, 355, 356, 280, 307, 447, 375, 448, 306,
	308, 404, 403, 405, 207, 606, 0, 208, 0, 499,
	608, 649, 452, 212, 234, 235, 237, 0, 279, 283,
	291, 294, 303, 304, 313, 367, 419, 446, 442, 451,
	0, 579, 600, 613, 624, 630, 631, 633, 634, 635,
	636, 637, 640, 638, 407, 311, 495, 333, 373, 0,
	0, 425, 472, 240, 604, 496, 199, 0, 0, 0,
	0, 254, 255, 0, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 645, 508, 514, 509, 510, 511, 512, 513,
	0, 515, 0, 0, 0, 0, 0, 398, 0, 591,
	592, 668, 384, 486, 601, 335, 349, 352, 341, 361,
	0, 362, 337, 338, 343, 346, 347, 348, 353, 354,
	358, 364, 249, 210, 390, 399, 578, 312, 216, 217,
	218, 524, 525, 526, 527, 616, 617, 621, 205, 462,
	463, 464, 465, 292, 611, 309, 468, 467, 331, 332,
	379, 449, 540, 542, 553, 557, 559, 561, 567, 570,
	541, 543, 554, 558, 560, 562, 568, 571, 530, 532,
	534, 536, 549, 548, 545, 573, 574, 551, 556, 535,
	547, 552, 565, 572, 569, 529, 533, 537, 546, 564,
	563, 544, 555, 566, 550, 538, 531, 539, 0, 196,
	221, 368, 0, 454, 288, 646, 615, 484, 610, 206,
	223, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 200, 209, 222, 232, 236,
	243, 261, 276, 278, 285, 298, 310, 318, 319, 322,
	328, 380, 386, 387, 388, 389, 409, 410, 411, 414,
	417, 418, 421, 423, 424, 427, 431, 435, 436, 437,
	439, 441, 443, 455, 460, 474, 475, 476, 477, 478,
	481, 482, 488, 489, 490, 491, 492, 500, 501, 516,
	586, 588, 603, 622, 628, 480, 301, 302, 444, 445,
	314, 315, 642, 643, 300, 598, 629, 596, 641, 623,
	438, 378, 0, 0, 381, 281, 305, 320, 0, 614,
	502, 227, 466, 290, 251, 0, 0, 211, 246, 230,
	259, 274, 277, 324, 391, 400, 429, 434, 296, 271,
	244, 459, 241, 485, 519, 520, 521, 523, 395, 266,
	433, 396, 0, 376, 576, 577, 316, 0, 0, 0,
	528, 0, 0, 0, 0, 2413, 0, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 366, 267, 0, 0, 204,
	505, 0, 430, 0, 203, 0, 487, 252, 377, 374,
	583, 282, 273, 269, 250, 317, 385, 428, 518, 422,
	0, 370, 0, 0, 497, 401, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 248, 325, 202, 413, 498,
	286, 0, 0, 0, 0, 0, 507, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	245, 0, 0, 0, 351, 360, 359, 339, 340, 342,
	344, 350, 357, 363, 336, 345, 0, 0, 607, 0,
	0, 0, 265, 321, 272, 264, 580, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 402, 257, 0, 453, 0, 0,
	0, 625, 0, 0, 0, 0, 0, 0, 0, 365,
	0, 330, 197, 225, 0, 0, 412, 461, 473, 0,
	0, 0, 253, 0, 471, 426, 602, 233, 284, 458,
	432, 469, 440, 287, 0, 0, 470, 372, 585, 450,
	599, 626, 627, 263, 406, 612, 522, 620, 644, 226,
	260, 420, 506, 605, 494, 397, 581, 582, 329, 493,
	295, 201, 369, 632, 224, 479, 371, 242, 231, 587,
	609, 299, 289, 456, 639, 213, 517, 597, 239, 483,
	0, 0, 647, 247, 504, 215, 594, 503, 393, 326,
	327, 214, 0, 457, 268, 293, 0, 0, 258, 415,
	589, 590, 256, 648, 228, 619, 220, 0, 618, 408,
	584, 595, 394, 383, 219, 593, 392, 382, 334, 355,
	356, 280, 307, 447, 375, 448, 306, 308, 404, 403,
	405, 207, 606, 0, 208, 0, 499, 608, 649, 452,
	212, 234, 235, 237, 0, 279, 283, 291, 294, 303,
	304, 313, 367, 419, 446, 442, 451, 0, 579, 600,
	613, 624, 630, 631, 633, 634, 635, 636, 637, 640,
	638, 407, 311, 495, 333, 373, 0, 0, 425, 472,
	240, 604, 496, 199, 0, 0, 0, 0, 254, 255,
	0, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 645,
	508, 514, 509, 510, 511, 512, 513, 0, 515, 0,
	0, 0, 0, 0, 398, 0, 591, 592, 668, 384,
	486, 601, 335, 349, 352, 341, 361, 0, 362, 337,
	338, 343, 346, 347, 348, 353, 354, 358, 364, 249,
	210, 390, 399, 578, 312, 216, 217, 218, 524, 525,
	526, 527, 616, 617, 621, 205, 462, 463, 464, 465,
	292, 611, 309, 468, 467, 331, 332, 379, 449, 540,
	542, 553, 557, 559, 561, 567, 570, 541, 543, 554,
	558, 560, 562, 568, 571, 530, 532, 534, 536, 549,
	548, 545, 573, 574, 551, 556, 535, 547, 552, 565,
	572, 569, 529, 533, 537, 546, 564, 563, 544, 555,
	566, 550, 538, 531, 539, 0, 196, 221, 368, 0,
	454, 288, 646, 615, 484, 610, 206, 223, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 209, 222, 232, 236, 243, 261, 276,
	278, 285, 298, 310, 318, 319, 322, 328, 380, 386,
	387, 388, 389, 409, 410, 411, 414, 417, 418, 421,
	423, 424, 427, 431, 435, 436, 437, 439, 441, 443,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 488,
	489, 490, 491, 492, 500, 501, 516, 586, 588, 603,
	622, 628, 480, 301, 302, 444, 445, 314, 315, 642,
	643, 300, 598, 629, 596, 641, 623, 438, 378, 0,
	0, 381, 281, 305, 320, 0, 614, 502, 227, 466,
	290, 251, 0, 0, 211, 246, 230, 259, 274, 277,
	324, 391, 400, 429, 434, 296, 271, 244, 459, 241,
	485, 519, 520, 521, 523, 395, 266, 433, 396, 0,
	376, 576, 577, 316, 0, 0, 0, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 366, 267, 0, 0, 204, 505, 0, 430,
	0, 203, 0, 487, 252, 377, 374, 583, 282, 273,
	269, 250, 317, 385, 428, 518, 422, 0, 370, 0,
	0, 497, 401, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 248, 325, 202, 413, 498, 286, 0, 0,
	0, 0, 1771, 507, 718, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 245, 0, 0,
	0, 351, 360, 359, 339, 340, 342, 344, 350, 357,
	363, 336, 345, 0, 0, 607, 0, 0, 0, 265,
	321, 272, 264, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 402, 257, 0, 453, 0, 0, 0, 625, 0,
	0, 0, 0, 0, 0, 0, 365, 0, 330, 197,
	225, 0, 0, 412, 461, 473, 0, 0, 0, 253,
	0, 471, 426, 602, 233, 284, 458, 432, 469, 440,
	287, 0, 0, 470, 372, 585, 450, 599, 626, 627,
	263, 406, 612, 522, 620, 644, 226, 260, 420, 506,
	605, 494, 397, 581, 582, 329, 493, 295, 201, 369,
	632, 224, 479, 371, 242, 231, 587, 609, 299, 289,
	456, 639, 213, 517, 597, 239, 483, 0, 0, 647,
	247, 504, 215, 594, 503, 393, 326, 327, 214, 0,
	457, 268, 293, 0, 0, 258, 415, 589, 590, 256,
	648, 228, 619, 220, 0, 618, 408, 584, 595, 394,
	383, 219, 593, 392, 382, 334, 355, 356, 280, 307,
	447, 375, 448, 306, 308, 404, 403, 405, 207, 606,
	0, 208, 0, 499, 608, 649, 452, 212, 234, 235,
	237, 0, 279, 283, 291, 294, 303, 304, 313, 367,
	419, 446, 442, 451, 0, 579, 600, 613, 624, 630,
	631, 633, 634, 635, 636, 637, 640, 638, 407, 311,
	495, 333, 373, 0, 0, 425, 472, 240, 604, 496,
	199, 0, 0, 0, 0, 254, 255, 0, 575, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 645, 508, 514, 509,
	510, 511, 512, 513, 0, 515, 0, 0, 0, 0,
	0, 398, 0, 591, 592, 668, 384, 486, 601, 335,
	349, 352, 341, 361, 0, 362, 337, 338, 343, 346,
	347, 348, 353, 354, 358, 364, 249, 210, 390, 399,
	578, 312, 216, 217, 218, 524, 525, 526, 527, 616,
	617, 621, 205, 462, 463, 464, 465, 292, 611, 309,
	468, 467, 331, 332, 379, 449, 540, 542, 553, 557,
	559, 561, 567, 570, 541, 543, 554, 558, 560, 562,
	568, 571, 530, 532, 534, 536, 549, 548, 545, 573,
	574, 551, 556, 535, 547, 552, 565, 572, 569, 529,
	533, 537, 546, 564, 563, 544, 555, 566, 550, 538,
	531, 539, 0, 196, 221, 368, 0, 454, 288, 646,
	615, 484, 610, 206, 223, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	209, 222, 232, 236, 243, 261, 276, 278, 285, 298,
	310, 318, 319, 322, 328, 380, 386, 387, 388, 389,
	409, 410, 411, 414, 417, 418, 421, 423, 424, 427,
	431, 435, 436, 437, 439, 441, 443, 455, 460, 474,
	475, 476, 477, 478, 481, 482, 488, 489, 490, 491,
	492, 500, 501, 516, 586, 588, 603, 622, 628, 480,
	301, 302, 444, 445, 314, 315, 642, 643, 300, 598,
	629, 596, 641, 623, 438, 378, 0, 0, 381, 281,
	305, 320, 0, 614, 502, 227, 466, 290, 251, 0,
	0, 211, 246, 230, 259, 274, 277, 324, 391, 400,
	429, 434, 296, 271, 244, 459, 241, 485, 519, 520,
	521, 523, 395, 266, 433, 396, 0, 376, 576, 577,
	316, 0, 0, 0, 528, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 366,
	267, 0, 0, 204, 505, 0, 430, 0, 203, 0,
	487, 252, 377, 374, 583, 282, 273, 269, 250, 317,
	385, 428, 518, 422, 0, 370, 0, 0, 497, 401,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 248,
	325, 202, 413, 498, 286, 0, 0, 0, 0, 0,
	507, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 245, 0, 0, 0, 351, 360,
	359, 339, 340, 342, 344, 350, 357, 363, 336, 345,
	0, 0, 607, 0, 0, 0, 265, 321, 272, 264,
	580, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 0, 402, 257,
	0, 453, 0, 0, 0, 625, 0, 0, 0, 0,
	0, 0, 0, 365, 0, 330, 197, 225, 0, 0,
	412, 461, 473, 0, 0, 0, 253, 0, 471, 426,
	602, 233, 284, 458, 432, 469, 440, 287, 0, 0,
	470, 372, 585, 450, 599, 626, 627, 263, 406, 612,
	522, 620, 644, 226, 260, 420, 506, 605, 494, 397,
	581, 582, 329, 493, 295, 201, 369, 632, 224, 479,
	371, 242, 231, 587, 609, 299, 289, 456, 639, 213,
	517, 597, 239, 483, 0, 0, 647, 247, 504, 215,
	594, 503, 393, 326, 327, 214, 0, 457, 268, 293,
	0, 0, 258, 415, 589, 590, 256, 648, 228, 619,
	220, 0, 618, 408, 584, 595, 394, 383, 219, 593,
	392, 382, 334, 355, 356, 280, 307, 447, 375, 448,
	306, 308, 404, 403, 405, 207, 606, 0, 208, 0,
	499, 608, 649, 452, 212, 234, 235, 237, 0, 279,
	283, 291, 294, 303, 304, 313, 367, 419, 446, 442,
	451, 0, 579, 600, 613, 624, 630, 631, 633, 634,
	635, 636, 637, 640, 638, 407, 311, 495, 333, 373,
	0, 0, 425, 472, 240, 604, 496, 199, 0, 0,
	0, 0, 254, 255, 0, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 645, 508, 514, 509, 510, 511, 512,
	513, 0, 515, 0, 0, 0, 0, 0, 398, 0,
	591, 592, 668, 384, 486, 601, 335, 349, 352, 341,
	361, 0, 362, 337, 338, 343, 346, 347, 348, 353,
	354, 358, 364, 249, 210, 390, 399, 578, 312, 216,
	217, 218, 524, 525, 526, 527, 616, 617, 621, 205,
	462, 463, 464, 465, 292, 611, 309, 468, 467, 331,
	332, 379, 449, 540, 542, 553, 557, 559, 561, 567,
	570, 541, 543, 554, 558, 560, 562, 568, 571, 530,
	532, 534, 536, 549, 548, 545, 573, 574, 551, 556,
	535, 547, 552, 565, 572, 569, 529, 533, 537, 546,
	564, 563, 544, 555, 566, 550, 538, 531, 539, 0,
	196, 221, 368, 2065, 454, 288, 646, 615, 484, 610,
	206, 223, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 209, 222, 232,
	236, 243, 261, 276, 278, 285, 298, 310, 318, 319,
	322, 328, 380, 386, 387, 388, 389, 409, 410, 411,
	414, 417, 418, 421, 423, 424, 427, 431, 435, 436,
	437, 439, 441, 443, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 488, 489, 490, 491, 492, 500, 501,
	516, 586, 588, 603, 622, 628, 480, 301, 302, 444,
	445, 314, 315, 642, 643, 300, 598, 629, 596, 641,
	623, 438, 378, 0, 0, 381, 281, 305, 320, 0,
	614, 502, 227, 466, 290, 251, 0, 0, 211, 246,
	230, 259, 274, 277, 324, 391, 400, 429, 434, 296,
	271, 244, 459, 241, 485, 519, 520, 521, 523, 395,
	266, 433, 396, 0, 376, 576, 577, 316, 0, 0,
	0, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 366, 267, 0, 0,
	204, 505, 0, 430, 0, 203, 0, 487, 252, 377,
	374, 583, 282, 273, 269, 250, 317, 385, 428, 518,
	422, 0, 370, 0, 0, 497, 401, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 248, 325, 202, 413,
	498, 286, 0, 0, 0, 0, 2056, 507, 718, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 351, 360, 359, 339, 340,
	342, 344, 350, 357, 363, 336, 345, 0, 0, 607,
	0, 0, 0, 265, 321, 272, 264, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 402, 257, 0, 453, 0,
	0, 0, 625, 0, 0, 0, 0, 0, 0, 0,
	365, 0, 330, 197, 225, 0, 0, 412, 461, 473,
	0, 0, 0, 253, 0, 471, 426, 602, 233, 284,
	458, 432, 469, 440, 287, 0, 0, 470, 372, 585,
	450, 599, 626, 627, 263, 406, 612, 522, 620, 644,
	226, 260, 420, 506, 605, 494, 397, 581, 582, 329,
	493, 295, 201, 369, 632, 224, 479, 371, 242, 231,
	587, 609, 299, 289, 456, 639, 213, 517, 597, 239,
	483, 0, 0, 647, 247, 504, 215, 594, 503, 393,
	326, 327, 214, 0, 457, 268, 293, 0, 0, 258,
	415, 589, 590, 256, 648, 228, 619, 220, 0, 618,
	408, 584, 595, 394, 383, 219, 593, 392, 382, 334,
	355, 356, 280, 307, 447, 375, 448, 306, 308, 404,
	403, 405, 207, 606, 0, 208, 0, 499, 608, 649,
	452, 212, 234, 235, 237, 0, 279, 283, 291, 294,
	303, 304, 313, 367, 419, 446, 442, 451, 0, 579,
	600, 613, 624, 630, 631, 633, 634, 635, 636, 637,
	640, 638, 407, 311, 495, 333, 373, 0, 0, 425,
	472, 240, 604, 496, 199, 0, 0, 0, 0, 254,
	255, 0, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	645, 508, 514, 509, 510, 511, 512, 513, 0, 515,
	0, 0, 0, 0, 0, 398, 0, 591, 592, 668,
	384, 486, 601, 335, 349, 352, 341, 361, 0, 362,
	337, 338, 343, 346, 347, 348, 353, 354, 358, 364,
	249, 210, 390, 399, 578, 312, 216, 217, 218, 524,
	525, 526, 527, 616, 617, 621, 205, 462, 463, 464,
	465, 292, 611, 309, 468, 467, 331, 332, 379, 449,
	540, 542, 553, 557, 559, 561, 567, 570, 541, 543,
	554, 558, 560, 562, 568, 571, 530, 532, 534, 536,
	549, 548, 545, 573, 574, 551, 556, 535, 547, 552,
	565, 572, 569, 529, 533, 537, 546, 564, 563, 544,
	555, 566, 550, 538, 531, 539, 0, 196, 221, 368,
	0, 454, 288, 646, 615, 484, 610, 206, 223, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 209, 222, 232, 236, 243, 261,
	276, 278, 285, 298, 310, 318, 319, 322, 328, 380,
	386, 387, 388, 389, 409, 410, 411, 414, 417, 418,
	421, 423, 424, 427, 431, 435, 436, 437, 439, 441,
	443, 455, 460, 474, 475, 476, 477, 478, 481, 482,
	488, 489, 490, 491, 492, 500, 501, 516, 586, 588,
	603, 622, 628, 480, 301, 302, 444, 445, 314, 315,
	642, 643, 300, 598, 629, 596, 641, 623, 438, 378,
	0, 0, 381, 281, 305, 320, 0, 614, 502, 227,
	466, 290, 251, 0, 0, 211, 246, 230, 259, 274,
	277, 324, 391, 400, 429, 434, 296, 271, 244, 459,
	241, 485, 519, 520, 521, 523, 395, 266, 433, 396,
	0, 376, 576, 577, 316, 0, 0, 0, 528, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 366, 267, 0, 1917, 204, 505, 0,
	430, 0, 203, 0, 487, 252, 377, 374, 583, 282,
	273, 269, 250, 317, 385, 428, 518, 422, 0, 370,
	0, 0, 497, 401, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 248, 325, 202, 413, 498, 286, 0,
	0, 0, 0, 0, 507, 718, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 245, 0,
	0, 0, 351, 360, 359, 339, 340, 342, 344, 350,
	357, 363, 336, 345, 0, 0, 607, 0, 0, 0,
	265, 321, 272, 264, 580, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 0, 402, 257, 0, 453, 0, 0, 0, 625,
	0, 0, 0, 0, 0, 0, 0, 365, 0, 330,
	197, 225, 0, 0, 412, 461, 473, 0, 0, 0,
	253, 0, 471, 426, 602, 233, 284, 458, 432, 469,
	440, 287, 0, 0, 470, 372, 585, 450, 599, 626,
	627, 263, 406, 612, 522, 620, 644, 226, 260, 420,
	506, 605, 494, 397, 581, 582, 329, 493, 295, 201,
	369, 632, 224, 479, 371, 242, 231, 587, 609, 299,
	289, 456, 639, 213, 517, 597, 239, 483, 0, 0,
	647, 247, 504, 215, 594, 503, 393, 326, 327, 214,
	0, 457, 268, 293, 0, 0, 258, 415, 589, 590,
	256, 648, 228, 619, 220, 0, 618, 408, 584, 595,
	394, 383, 219, 593, 392, 382, 334, 355, 356, 280,
	307, 447, 375, 448, 306, 308, 404, 403, 405, 207,
	606, 0, 208, 0, 499, 608, 649, 452, 212, 234,
	235, 237, 0, 279, 283, 291, 294, 303, 304, 313,
	367, 419, 446, 442, 451, 0, 579, 600, 613, 624,
	630, 631, 633, 634, 635, 636, 637, 640, 638, 407,
	311, 495, 333, 373, 0, 0, 425, 472, 240, 604,
	496, 199, 0, 0, 0, 0, 254, 255, 0, 575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 645, 508, 514,
	509, 510, 511, 512, 513, 0, 515, 0, 0, 0,
	0, 0, 398, 0, 591, 592, 668, 384, 486, 601,
	335, 349, 352, 341, 361, 0, 362, 337, 338, 343,
	346, 347, 348, 353, 354, 358, 364, 249, 210, 390,
	399, 578, 312, 216, 217, 218, 524, 525, 526, 527,
	616, 617, 621, 205, 462, 463, 464, 465, 292, 611,
	309, 468, 467, 331, 332, 379, 449, 540, 542, 553,
	557, 559, 561, 567, 570, 541, 543, 554, 558, 560,
	562, 568, 571, 530, 532, 534, 536, 549, 548, 545,
	573, 574, 551, 556, 535, 547, 552, 565, 572, 569,
	529, 533, 537, 546, 564, 563, 544, 555, 566, 550,
	538, 531, 539, 0, 196, 221, 368, 0, 454, 288,
	646, 615, 484, 610, 206, 223, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 209, 222, 232, 236, 243, 261, 276, 278, 285,
	298, 310, 318, 319, 322, 328, 380, 386, 387, 388,
	389, 409, 410, 411, 414, 417, 418, 421, 423, 424,
	427, 431, 435, 436, 437, 439, 441, 443, 455, 460,
	474, 475, 476, 477, 478, 481, 482, 488, 489, 490,
	491, 492, 500, 501, 516, 586, 588, 603, 622, 628,
	480, 301, 302, 444, 445, 314, 315, 642, 643, 300,
	598, 629, 596, 641, 623, 438, 378, 0, 0, 381,
	281, 305, 320, 0, 614, 502, 227, 466, 290, 251,
	0, 0, 211, 246, 230, 259, 274, 277, 324, 391,
	400, 429, 434, 296, 271, 244, 459, 241, 485, 519,
	520, 521, 523, 395, 266, 433, 396, 0, 376, 576,
	577, 316, 0, 0, 0, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	366, 267, 0, 1915, 204, 505, 0, 430, 0, 203,
	0, 487, 252, 377, 374, 583, 282, 273, 269, 250,
	317, 385, 428, 518, 422, 0, 370, 0, 0, 497,
	401, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	248, 325, 202, 413, 498, 286, 0, 0, 0, 0,
	0, 507, 718, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 245, 0, 0, 0, 351,
	360, 359, 339, 340, 342, 344, 350, 357, 363, 336,
	345, 0, 0, 607, 0, 0, 0, 265, 321, 272,
	264, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 0, 402,
	257, 0, 453, 0, 0, 0, 625, 0, 0, 0,
	0, 0, 0, 0, 365, 0, 330, 197, 225, 0,
	0, 412, 461, 473, 0, 0, 0, 253, 0, 471,
	426, 602, 233, 284, 458, 432, 469, 440, 287, 0,
	0, 470, 372, 585, 450, 599, 626, 627, 263, 406,
	612, 522, 620, 644, 226, 260, 420, 506, 605, 494,
	397, 581, 582, 329, 493, 295, 201, 369, 632, 224,
	479, 371, 242, 231, 587, 609, 299, 289, 456, 639,
	213, 517, 597, 239, 483, 0, 0, 647, 247, 504,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 648, 228,
	619, 220, 0, 618, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 606, 0, 208,
	0, 499, 608, 649, 452, 212, 234, 235, 237, 0,
	279, 283, 291, 294, 303, 304, 313, 367, 419, 446,
	442, 451, 0, 579, 600, 613, 624, 630, 631, 633,
	634, 635, 636, 637, 640, 638, 407, 311, 495, 333,
	373, 0, 0, 425, 472, 240, 604, 496, 199, 0,
	0, 0, 0, 254, 255, 0, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 645, 508, 514, 509, 510, 511,
	512, 513, 0, 515, 0, 0, 0, 0, 0, 398,
	0, 591, 592, 668, 384, 486, 601, 335, 349, 352,
	341, 361, 0, 362, 337, 338, 343, 346, 347, 348,
	353, 354, 358, 364, 249, 210, 390, 399, 578, 312,
	216, 217, 218, 524, 525, 526, 527, 616, 617, 621,
	205, 462, 463, 464, 465, 292, 611, 309, 468, 467,
	331, 332, 379, 449, 540, 542, 553, 557, 559, 561,
	567, 570, 541, 543, 554, 558, 560, 562, 568, 571,
	530, 532, 534, 536, 549, 548, 545, 573, 574, 551,
	556, 535, 547, 552, 565, 572, 569, 529, 533, 537,
	546, 564, 563, 544, 555, 566, 550, 538, 531, 539,
	0, 196, 221, 368, 0, 454, 288, 646, 615, 484,
	610, 206, 223, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 200, 209, 222,
	232, 236, 243, 261, 276, 278, 285, 298, 310, 318,
	319, 322, 328, 380, 386, 387, 388, 389, 409, 410,
	411, 414, 417, 418, 421, 423, 424, 427, 431, 435,
	436, 437, 439, 441, 443, 455, 460, 474, 475, 476,
	477, 478, 481, 482, 488, 489, 490, 491, 492, 500,
	501, 516, 586, 588, 603, 622, 628, 480, 301, 302,
	444, 445, 314, 315, 642, 643, 300, 598, 629, 596,
	641, 623, 438, 378, 0, 0, 381, 281, 305, 320,
	0, 614, 502, 227, 466, 290, 251, 0, 0, 211,
	246, 230, 259, 274, 277, 324, 391, 400, 429, 434,
	296, 271, 244, 459, 241, 485, 519, 520, 521, 523,
	395, 266, 433, 396, 0, 376, 576, 577, 316, 0,
	0, 0, 528, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 366, 267, 0,
	1913, 204, 505, 0, 430, 0, 203, 0, 487, 252,
	377, 374, 583, 282, 273, 269, 250, 317, 385, 428,
	518, 422, 0, 370, 0, 0, 497, 401, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	413, 498, 286, 0, 0, 0, 0, 0, 507, 718,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 245, 0, 0, 0, 351, 360, 359, 339,
	340, 342, 344, 350, 357, 363, 336, 345, 0, 0,
	607, 0, 0, 0, 265, 321, 272, 264, 580, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 402, 257, 0, 453,
	0, 0, 0, 625, 0, 0, 0, 0, 0, 0,
	0, 365, 0, 330, 197, 225, 0, 0, 412, 461,
	473, 0, 0, 0, 253, 0, 471, 426, 602, 233,
	284, 458, 432, 469, 440, 287, 0, 0, 470, 372,
	585, 450, 599, 626, 627, 263, 406, 612, 522, 620,
	644, 226, 260, 420, 506, 605, 494, 397, 581, 582,
	329, 493, 295, 201, 369, 632, 224, 479, 371, 242,
	231, 587, 609, 299, 289, 456, 639, 213, 517, 597,
	239, 483, 0, 0, 647, 247, 504, 215, 594, 503,
	393, 326, 327, 214, 0, 457, 268, 293, 0, 0,
	258, 415, 589, 590, 256, 648, 228, 619, 220, 0,
	618, 408, 584, 595, 394, 383, 219, 593, 392, 382,
	334, 355, 356, 280, 307, 447, 375, 448, 306, 308,
	404, 403, 405, 207, 606, 0, 208, 0, 499, 608,
	649, 452, 212, 234, 235, 237, 0, 279, 283, 291,
	294, 303, 304, 313, 367, 419, 446, 442, 451, 0,
	579, 600, 613, 624, 630, 631, 633, 634, 635, 636,
	637, 640, 638, 407, 311, 495, 333, 373, 0, 0,
	425, 472, 240, 604, 496, 199, 0, 0, 0, 0,
	254, 255, 0, 575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 645, 508, 514, 509, 510, 511, 512, 513, 0,
	515, 0, 0, 0, 0, 0, 398, 0, 591, 592,
	668, 384, 486, 601, 335, 349, 352, 341, 361, 0,
	362, 337, 338, 343, 346, 347, 348, 353, 354, 358,
	364, 249, 210, 390, 399, 578, 312, 216, 217, 218,
	524, 525, 526, 527, 616, 617, 621, 205, 462, 463,
	464, 465, 292, 611, 309, 468, 467, 331, 332, 379,
	449, 540, 542, 553, 557, 559, 561, 567, 570, 541,
	543, 554, 558, 560, 562, 568, 571, 530, 532, 534,
	536, 549, 548, 545, 573, 574, 551, 556, 535, 547,
	552, 565, 572, 569, 529, 533, 537, 546, 564, 563,
	544, 555, 566, 550, 538, 531, 539, 0, 196, 221,
	368, 0, 454, 288, 646, 615, 484, 610, 206, 223,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 209, 222, 232, 236, 243,
	261, 276, 278, 285, 298, 310, 318, 319, 322, 328,
	380, 386, 387, 388, 389, 409, 410, 411, 414, 417,
	418, 421, 423, 424, 427, 431, 435, 436, 437, 439,
	441, 443, 455, 460, 474, 475, 476, 477, 478, 481,
	482, 488, 489, 490, 491, 492, 500, 501, 516, 586,
	588, 603, 622, 628, 480, 301, 302, 444, 445, 314,
	315, 642, 643, 300, 598, 629, 596, 641, 623, 438,
	378, 0, 0, 381, 281, 305, 320, 0, 614, 502,
	227, 466, 290, 251, 0, 0, 211, 246, 230, 259,
	274, 277, 324, 391, 400, 429, 434, 296, 271, 244,
	459, 241, 485, 519, 520, 521, 523, 395, 266, 433,
	396, 0, 376, 576, 577, 316, 0, 0, 0, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 366, 267, 0, 1911, 204, 505,
	0, 430, 0, 203, 0, 487, 252, 377, 374, 583,
	282, 273, 269, 250, 317, 385, 428, 518, 422, 0,
	370, 0, 0, 497, 401, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 248, 325, 202, 413, 498, 286,
	0, 0, 0, 0, 0, 507, 718, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 245,
	0, 0, 0, 351, 360, 359, 339, 340, 342, 344,
	350, 357, 363, 336, 345, 0, 0, 607, 0, 0,
	0, 265, 321, 272, 264, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 402, 257, 0, 453, 0, 0, 0,
	625, 0, 0, 0, 0, 0, 0, 0, 365, 0,
	330, 197, 225, 0, 0, 412, 461, 473, 0, 0,
	0, 253, 0, 471, 426, 602, 233, 284, 458, 432,
	469, 440, 287, 0, 0, 470, 372, 585, 450, 599,
	626, 627, 263, 406, 612, 522, 620, 644, 226, 260,
	420, 506, 605, 494, 397, 581, 582, 329, 493, 295,
	201, 369, 632, 224, 479, 371, 242, 231, 587, 609,
	299, 289, 456, 639, 213, 517, 597, 239, 483, 0,
	0, 647, 247, 504, 215, 594, 503, 393, 326, 327,
	214, 0, 457, 268, 293, 0, 0, 258, 415, 589,
	590, 256, 648, 228, 619, 220, 0, 618, 408, 584,
	595, 394, 383, 219, 593, 392, 382, 334, 355, 356,
	280, 307, 447, 375, 448, 306, 308, 404, 403, 405,
	207, 606, 0, 208, 0, 499, 608, 649, 452, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 367, 419, 446, 442, 451, 0, 579, 600, 613,
	624, 630, 631, 633, 634, 635, 636, 637, 640, 638,
	407, 311, 495, 333, 373, 0, 0, 425, 472, 240,
	604, 496, 199, 0, 0, 0, 0, 254, 255, 0,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 645, 508,
	514, 509, 510, 511, 512, 513, 0, 515, 0, 0,
	0, 0, 0, 398, 0, 591, 592, 668, 384, 486,
	601, 335, 349, 352, 341, 361, 0, 362, 337, 338,
	343, 346, 347, 348, 353, 354, 358, 364, 249, 210,
	390, 399, 578, 312, 216, 217, 218, 524, 525, 526,
	527, 616, 617, 621, 205, 462, 463, 464, 465, 292,
	611, 309, 468, 467, 331, 332, 379, 449, 540, 542,
	553, 557, 559, 561, 567, 570, 541, 543, 554, 558,
	560, 562, 568, 571, 530, 532, 534, 536, 549, 548,
	545, 573, 574, 551, 556, 535, 547, 552, 565, 572,
	569, 529, 533, 537, 546, 564, 563, 544, 555, 566,
	550, 538, 531, 539, 0, 196, 221, 368, 0, 454,
	288, 646, 615, 484, 610, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 380, 386, 387,
	388, 389, 409, 410, 411, 414, 417, 418, 421, 423,
	424, 427, 431, 435, 436, 437, 439, 441, 443, 455,
	460, 474, 475, 476, 477, 478, 481, 482, 488, 489,
	490, 491, 492, 500, 501, 516, 586, 588, 603, 622,
	628, 480, 301, 302, 444, 445, 314, 315, 642, 643,
	300, 598, 629, 596, 641, 623, 438, 378, 0, 0,
	381, 281, 305, 320, 0, 614, 502, 227, 466, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	391, 400, 429, 434, 296, 271, 244, 459, 241, 485,
	519, 520, 521, 523, 395, 266, 433, 396, 0, 376,
	576, 577, 316, 0, 0, 0, 528, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 366, 267, 0, 1909, 204, 505, 0, 430, 0,
	203, 0, 487, 252, 377, 374, 583, 282, 273, 269,
	250, 317, 385, 428, 518, 422, 0, 370, 0, 0,
	497, 401, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 248, 325, 202, 413, 498, 286, 0, 0, 0,
	0, 0, 507, 718, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 245, 0, 0, 0,
	351, 360, 359, 339, 340, 342, 344, 350, 357, 363,
	336, 345, 0, 0, 607, 0, 0, 0, 265, 321,
	272, 264, 580, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 0,
	402, 257, 0, 453, 0, 0, 0, 625, 0, 0,
	0, 0, 0, 0, 0, 365, 0, 330, 197, 225,
	0, 0, 412, 461, 473, 0, 0, 0, 253, 0,
	471, 426, 602, 233, 284, 458, 432, 469, 440, 287,
	0, 0, 470, 372, 585, 450, 599, 626, 627, 263,
	406, 612, 522, 620, 644, 226, 260, 420, 506, 605,
	494, 397, 581, 582, 329, 493, 295, 201, 369, 632,
	224, 479, 371, 242, 231, 587, 609, 299, 289, 456,
	639, 213, 517, 597, 239, 483, 0, 0, 647, 247,
	504, 215, 594, 503, 393, 326, 327, 214, 0, 457,
	268, 293, 0, 0, 258, 415, 589, 590, 256, 648,
	228, 619, 220, 0, 618, 408, 584, 595, 394, 383,
	219, 593, 392, 382, 334, 355, 356, 280, 307, 447,
	375, 448, 306, 308, 404, 403, 405, 207, 606, 0,
	208, 0, 499, 608, 649, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 600, 613, 624, 630, 631,
	633, 634, 635, 636, 637, 640, 638, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 604, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 645, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 668, 384, 486, 601, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 616, 617,
	621, 205, 462, 463, 464, 465, 292, 611, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 646, 615,
	484, 610, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 603, 622, 628, 480, 301,
	302, 444, 445, 314, 315, 642, 643, 300, 598, 629,
	596, 641, 623, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 614, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 1905, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 0, 507,
	718, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 607, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 625, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 602,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 599, 626, 627, 263, 406, 612, 522,
	620, 644, 226, 260, 420, 506, 605, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 632, 224, 479, 371,
	242, 231, 587, 609, 299, 289, 456, 639, 213, 517,
	597, 239, 483, 0, 0, 647, 247, 504, 215, 594,
	503, 393, 326, 327, 214, 0, 457, 268, 293, 0,
	0, 258, 415, 589, 590, 256, 648, 228, 619, 220,
	0, 618, 408, 584, 595, 394, 383, 219, 593, 392,
	382, 334, 355, 356, 280, 307, 447, 375, 448, 306,
	308, 404, 403, 405, 207, 606, 0, 208, 0, 499,
	608, 649, 452, 212, 234, 235, 237, 0, 279, 283,
	291, 294, 303, 304, 313, 367, 419, 446, 442, 451,
	0, 579, 600, 613, 624, 630, 631, 633, 634, 635,
	636, 637, 640, 638, 407, 311, 495, 333, 373, 0,
	0, 425, 472, 240, 604, 496, 199, 0, 0, 0,
	0, 254, 255, 0, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 645, 508, 514, 509, 510, 511, 512, 513,
	0, 515, 0, 0, 0, 0, 0, 398, 0, 591,
	592, 668, 384, 486, 601, 335, 349, 352, 341, 361,
	0, 362, 337, 338, 343, 346, 347, 348, 353, 354,
	358, 364, 249, 210, 390, 399, 578, 312, 216, 217,
	218, 524, 525, 526, 527, 616, 617, 621, 205, 462,
	463, 464, 465, 292, 611, 309, 468, 467, 331, 332,
	379, 449, 540, 542, 553, 557, 559, 561, 567, 570,
	541, 543, 554, 558, 560, 562, 568, 571, 530, 532,
	534, 536, 549, 548, 545, 573, 574, 551, 556, 535,
	547, 552, 565, 572, 569, 529, 533, 537, 546, 564,
	563, 544, 555, 566, 550, 538, 531, 539, 0, 196,
	221, 368, 0, 454, 288, 646, 615, 484, 610, 206,
	223, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 200, 209, 222, 232, 236,
	243, 261, 276, 278, 285, 298, 310, 318, 319, 322,
	328, 380, 386, 387, 388, 389, 409, 410, 411, 414,
	417, 418, 421, 423, 424, 427, 431, 435, 436, 437,
	439, 441, 443, 455, 460, 474, 475, 476, 477, 478,
	481, 482, 488, 489, 490, 491, 492, 500, 501, 516,
	586, 588, 603, 622, 628, 480, 301, 302, 444, 445,
	314, 315, 642, 643, 300, 598, 629, 596, 641, 623,
	438, 378, 0, 0, 381, 281, 305, 320, 0, 614,
	502, 227, 466, 290, 251, 0, 0, 211, 246, 230,
	259, 274, 277, 324, 391, 400, 429, 434, 296, 271,
	244, 459, 241, 485, 519, 520, 521, 523, 395, 266,
	433, 396, 0, 376, 576, 577, 316, 0, 0, 0,
	528, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 366, 267, 0, 1903, 204,
	505, 0, 430, 0, 203, 0, 487, 252, 377, 374,
	583, 282, 273, 269, 250, 317, 385, 428, 518, 422,
	0, 370, 0, 0, 497, 401, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 248, 325, 202, 413, 498,
	286, 0, 0, 0, 0, 0, 507, 718, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	245, 0, 0, 0, 351, 360, 359, 339, 340, 342,
	344, 350, 357, 363, 336, 345, 0, 0, 607, 0,
	0, 0, 265, 321, 272, 264, 580, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 402, 257, 0, 453, 0, 0,
	0, 625, 0, 0, 0, 0, 0, 0, 0, 365,
	0, 330, 197, 225, 0, 0, 412, 461, 473, 0,
	0, 0, 253, 0, 471, 426, 602, 233, 284, 458,
	432, 469, 440, 287, 0, 0, 470, 372, 585, 450,
	599, 626, 627, 263, 406, 612, 522, 620, 644, 226,
	260, 420, 506, 605, 494, 397, 581, 582, 329, 493,
	295, 201, 369, 632, 224, 479, 371, 242, 231, 587,
	609, 299, 289, 456, 639, 213, 517, 597, 239, 483,
	0, 0, 647, 247, 504, 215, 594, 503, 393, 326,
	327, 214, 0, 457, 268, 293, 0, 0, 258, 415,
	589, 590, 256, 648, 228, 619, 220, 0, 618, 408,
	584, 595, 394, 383, 219, 593, 392, 382, 334, 355,
	356, 280, 307, 447, 375, 448, 306, 308, 404, 403,
	405, 207, 606, 0, 208, 0, 499, 608, 649, 452,
	212, 234, 235, 237, 0, 279, 283, 291, 294, 303,
	304, 313, 367, 419, 446, 442, 451, 0, 579, 600,
	613, 624, 630, 631, 633, 634, 635, 636, 637, 640,
	638, 407, 311, 495, 333, 373, 0, 0, 425, 472,
	240, 604, 496, 199, 0, 0, 0, 0, 254, 255,
	0, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 645,
	508, 514, 509, 510, 511, 512, 513, 0, 515, 0,
	0, 0, 0, 0, 398, 0, 591, 592, 668, 384,
	486, 601, 335, 349, 352, 341, 361, 0, 362, 337,
	338, 343, 346, 347, 348, 353, 354, 358, 364, 249,
	210, 390, 399, 578, 312, 216, 217, 218, 524, 525,
	526, 527, 616, 617, 621, 205, 462, 463, 464, 465,
	292, 611, 309, 468, 467, 331, 332, 379, 449, 540,
	542, 553, 557, 559, 561, 567, 570, 541, 543, 554,
	558, 560, 562, 568, 571, 530, 532, 534, 536, 549,
	548, 545, 573, 574, 551, 556, 535, 547, 552, 565,
	572, 569, 529, 533, 537, 546, 564, 563, 544, 555,
	566, 550, 538, 531, 539, 0, 196, 221, 368, 0,
	454, 288, 646, 615, 484, 610, 206, 223, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 209, 222, 232, 236, 243, 261, 276,
	278, 285, 298, 310, 318, 319, 322, 328, 380, 386,
	387, 388, 389, 409, 410, 411, 414, 417, 418, 421,
	423, 424, 427, 431, 435, 436, 437, 439, 441, 443,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 488,
	489, 490, 491, 492, 500, 501, 516, 586, 588, 603,
	622, 628, 480, 301, 302, 444, 445, 314, 315, 642,
	643, 300, 598, 629, 596, 641, 623, 438, 378, 0,
	0, 381, 281, 305, 320, 0, 614, 502, 227, 466,
	290, 251, 0, 0, 211, 246, 230, 259, 274, 277,
	324, 391, 400, 429, 434, 296, 271, 244, 459, 241,
	485, 519, 520, 521, 523, 395, 266, 433, 396, 0,
	376, 576, 577, 316, 0, 0, 0, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 366, 267, 0, 1901, 204, 505, 0, 430,
	0, 203, 0, 487, 252, 377, 374, 583, 282, 273,
	269, 250, 317, 385, 428, 518, 422, 0, 370, 0,
	0, 497, 401, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 248, 325, 202, 413, 498, 286, 0, 0,
	0, 0, 0, 507, 718, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 245, 0, 0,
	0, 351, 360, 359, 339, 340, 342, 344, 350, 357,
	363, 336, 345, 0, 0, 607, 0, 0, 0, 265,
	321, 272, 264, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 402, 257, 0, 453, 0, 0, 0, 625, 0,
	0, 0, 0, 0, 0, 0, 365, 0, 330, 197,
	225, 0, 0, 412, 461, 473, 0, 0, 0, 253,
	0, 471, 426, 602, 233, 284, 458, 432, 469, 440,
	287, 0, 0, 470, 372, 585, 450, 599, 626, 627,
	263, 406, 612, 522, 620, 644, 226, 260, 420, 506,
	605, 494, 397, 581, 582, 329, 493, 295, 201, 369,
	632, 224, 479, 371, 242, 231, 587, 609, 299, 289,
	456, 639, 213, 517, 597, 239, 483, 0, 0, 647,
	247, 504, 215, 594, 503, 393, 326, 327, 214, 0,
	457, 268, 293, 0, 0, 258, 415, 589, 590, 256,
	648, 228, 619, 220, 0, 618, 408, 584, 595, 394,
	383, 219, 593, 392, 382, 334, 355, 356, 280, 307,
	447, 375, 448, 306, 308, 404, 403, 405, 207, 606,
	0, 208, 0, 499, 608, 649, 452, 212, 234, 235,
	237, 0, 279, 283, 291, 294, 303, 304, 313, 367,
	419, 446, 442, 451, 0, 579, 600, 613, 624, 630,
	631, 633, 634, 635, 636, 637, 640, 638, 407, 311,
	495, 333, 373, 0, 0, 425, 472, 240, 604, 496,
	199, 0, 0, 0, 0, 254, 255, 0, 575, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 645, 508, 514, 509,
	510, 511, 512, 513, 0, 515, 0, 0, 0, 0,
	0, 398, 0, 591, 592, 668, 384, 486, 601, 335,
	349, 352, 341, 361, 0, 362, 337, 338, 343, 346,
	347, 348, 353, 354, 358, 364, 249, 210, 390, 399,
	578, 312, 216, 217, 218, 524, 525, 526, 527, 616,
	617, 621, 205, 462, 463, 464, 465, 292, 611, 309,
	468, 467, 331, 332, 379, 449, 540, 542, 553, 557,
	559, 561, 567, 570, 541, 543, 554, 558, 560, 562,
	568, 571, 530, 532, 534, 536, 549, 548, 545, 573,
	574, 551, 556, 535, 547, 552, 565, 572, 569, 529,
	533, 537, 546, 564, 563, 544, 555, 566, 550, 538,
	531, 539, 0, 196, 221, 368, 0, 454, 288, 646,
	615, 484, 610, 206, 223, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	209, 222, 232, 236, 243, 261, 276, 278, 285, 298,
	310, 318, 319, 322, 328, 380, 386, 387, 388, 389,
	409, 410, 411, 414, 417, 418, 421, 423, 424, 427,
	431, 435, 436, 437, 439, 441, 443, 455, 460, 474,
	475, 476, 477, 478, 481, 482, 488, 489, 490, 491,
	492, 500, 501, 516, 586, 588, 603, 622, 628, 480,
	301, 302, 444, 445, 314, 315, 642, 643, 300, 598,
	629, 596, 641, 623, 438, 378, 0, 0, 381, 281,
	305, 320, 0, 614, 502, 227, 466, 290, 251, 0,
	0, 211, 246, 230, 259, 274, 277, 324, 391, 400,
	429, 434, 296, 271, 244, 459, 241, 485, 519, 520,
	521, 523, 395, 266, 433, 396, 0, 376, 576, 577,
	316, 0, 0, 0, 528, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 366,
	267, 0, 0, 204, 505, 0, 430, 0, 203, 0,
	487, 252, 377, 374, 583, 282, 273, 269, 250, 317,
	385, 428, 518, 422, 0, 370, 0, 0, 497, 401,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 248,
	325, 202, 413, 498, 286, 0, 1876, 0, 0, 0,
	507, 718, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 245, 0, 0, 0, 351, 360,
	359, 339, 340, 342, 344, 350, 357, 363, 336, 345,
	0, 0, 607, 0, 0, 0, 265, 321, 272, 264,
	580, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 0, 402, 257,
	0, 453, 0, 0, 0, 625, 0, 0, 0, 0,
	0, 0, 0, 365, 0, 330, 197, 225, 0, 0,
	412, 461, 473, 0, 0, 0, 253, 0, 471, 426,
	602, 233, 284, 458, 432, 469, 440, 287, 0, 0,
	470, 372, 585, 450, 599, 626, 627, 263, 406, 612,
	522, 620, 644, 226, 260, 420, 506, 605, 494, 397,
	581, 582, 329, 493, 295, 201, 369, 632, 224, 479,
	371, 242, 231, 587, 609, 299, 289, 456, 639, 213,
	517, 597, 239, 483, 0, 0, 647, 247, 504, 215,
	594, 503, 393, 326, 327, 214, 0, 457, 268, 293,
	0, 0, 258, 415, 589, 590, 256, 648, 228, 619,
	220, 0, 618, 408, 584, 595, 394, 383, 219, 593,
	392, 382, 334, 355, 356, 280, 307, 447, 375, 448,
	306, 308, 404, 403, 405, 207, 606, 0, 208, 0,
	499, 608, 649, 452, 212, 234, 235, 237, 0, 279,
	283, 291, 294, 303, 304, 313, 367, 419, 446, 442,
	451, 0, 579, 600, 613, 624, 630, 631, 633, 634,
	635, 636, 637, 640, 638, 407, 311, 495, 333, 373,
	0, 0, 425, 472, 240, 604, 496, 199, 0, 0,
	0, 0, 254, 255, 0, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 645, 508, 514, 509, 510, 511, 512,
	513, 0, 515, 0, 0, 0, 0, 0, 398, 0,
	591, 592, 668, 384, 486, 601, 335, 349, 352, 341,
	361, 0, 362, 337, 338, 343, 346, 347, 348, 353,
	354, 358, 364, 249, 210, 390, 399, 578, 312, 216,
	217, 218, 524, 525, 526, 527, 616, 617, 621, 205,
	462, 463, 464, 465, 292, 611, 309, 468, 467, 331,
	332, 379, 449, 540, 542, 553, 557, 559, 561, 567,
	570, 541, 543, 554, 558, 560, 562, 568, 571, 530,
	532, 534, 536, 549, 548, 545, 573, 574, 551, 556,
	535, 547, 552, 565, 572, 569, 529, 533, 537, 546,
	564, 563, 544, 555, 566, 550, 538, 531, 539, 0,
	196, 221, 368, 0, 454, 288, 646, 615, 484, 610,
	206, 223, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 209, 222, 232,
	236, 243, 261, 276, 278, 285, 298, 310, 318, 319,
	322, 328, 380, 386, 387, 388, 389, 409, 410, 411,
	414, 417, 418, 421, 423, 424, 427, 431, 435, 436,
	437, 439, 441, 443, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 488, 489, 490, 491, 492, 500, 501,
	516, 586, 588, 603, 622, 628, 480, 301, 302, 444,
	445, 314, 315, 642, 643, 300, 598, 629, 596, 641,
	623, 438, 378, 0, 0, 381, 281, 305, 320, 0,
	614, 502, 227, 466, 290, 251, 0, 0, 211, 246,
	230, 259, 274, 277, 324, 391, 400, 429, 434, 296,
	271, 244, 459, 241, 485, 519, 520, 521, 523, 395,
	266, 433, 396, 0, 376, 576, 577, 316, 0, 0,
	0, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	1775, 270, 0, 0, 0, 0, 366, 267, 0, 0,
	204, 505, 0, 430, 0, 203, 0, 487, 252, 377,
	374, 583, 282, 273, 269, 250, 317, 385, 428, 518,
	422, 0, 370, 0, 0, 497, 401, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 248, 325, 202, 413,
	498, 286, 0, 0, 0, 0, 0, 507, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 351, 360, 359, 339, 340,
	342, 344, 350, 357, 363, 336, 345, 0, 0, 607,
	0, 0, 0, 265, 321, 272, 264, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 402, 257, 0, 453, 0,
	0, 0, 625, 0, 0, 0, 0, 0, 0, 0,
	365, 0, 330, 197, 225, 0, 0, 412, 461, 473,
	0, 0, 0, 253, 0, 471, 426, 602, 233, 284,
	458, 432, 469, 440, 287, 0, 0, 470, 372, 585,
	450, 599, 626, 627, 263, 406, 612, 522, 620, 644,
	226, 260, 420, 506, 605, 494, 397, 581, 582, 329,
	493, 295, 201, 369, 632, 224, 479, 371, 242, 231,
	587, 609, 299, 289, 456, 639, 213, 517, 597, 239,
	483, 0, 0, 647, 247, 504, 215, 594, 503, 393,
	326, 327, 214, 0, 457, 268, 293, 0, 0, 258,
	415, 589, 590, 256, 648, 228, 619, 220, 0, 618,
	408, 584, 595, 394, 383, 219, 593, 392, 382, 334,
	355, 356, 280, 307, 447, 375, 448, 306, 308, 404,
	403, 405, 207, 606, 0, 208, 0, 499, 608, 649,
	452, 212, 234, 235, 237, 0, 279, 283, 291, 294,
	303, 304, 313, 367, 419, 446, 442, 451, 0, 579,
	600, 613, 624, 630, 631, 633, 634, 635, 636, 637,
	640, 638, 407, 311, 495, 333, 373, 0, 0, 425,
	472, 240, 604, 496, 199, 0, 0, 0, 0, 254,
	255, 0, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	645, 508, 514, 509, 510, 511, 512, 513, 0, 515,
	0, 0, 0, 0, 0, 398, 0, 591, 592, 668,
	384, 486, 601, 335, 349, 352, 341, 361, 0, 362,
	337, 338, 343, 346, 347, 348, 353, 354, 358, 364,
	249, 210, 390, 399, 578, 312, 216, 217, 218, 524,
	525, 526, 527, 616, 617, 621, 205, 462, 463, 464,
	465, 292, 611, 309, 468, 467, 331, 332, 379, 449,
	540, 542, 553, 557, 559, 561, 567, 570, 541, 543,
	554, 558, 560, 562, 568, 571, 530, 532, 534, 536,
	549, 548, 545, 573, 574, 551, 556, 535, 547, 552,
	565, 572, 569, 529, 533, 537, 546, 564, 563, 544,
	555, 566, 550, 538, 531, 539, 0, 196, 221, 368,
	0, 454, 288, 646, 615, 484, 610, 206, 223, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 209, 222, 232, 236, 243, 261,
	276, 278, 285, 298, 310, 318, 319, 322, 328, 380,
	386, 387, 388, 389, 409, 410, 411, 414, 417, 418,
	421, 423, 424, 427, 431, 435, 436, 437, 439, 441,
	443, 455, 460, 474, 475, 476, 477, 478, 481, 482,
	488, 489, 490, 491, 492, 500, 501, 516, 586, 588,
	603, 622, 628, 480, 301, 302, 444, 445, 314, 315,
	642, 643, 300, 598, 629, 596, 641, 623, 438, 378,
	0, 0, 381, 281, 305, 320, 0, 614, 502, 227,
	466, 290, 251, 0, 0, 211, 246, 230, 259, 274,
	277, 324, 391, 400, 429, 434, 296, 271, 244, 459,
	241, 485, 519, 520, 521, 523, 395, 266, 433, 396,
	0, 376, 576, 577, 316, 0, 0, 0, 528, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 366, 267, 0, 0, 204, 505, 0,
	430, 0, 203, 0, 487, 252, 377, 374, 583, 282,
	273, 269, 250, 317, 385, 428, 518, 422, 0, 370,
	0, 0, 497, 401, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 248, 325, 202, 413, 498, 286, 0,
	95, 0, 0, 0, 507, 953, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 245, 0,
	0, 0, 351, 360, 359, 339, 340, 342, 344, 350,
	357, 363, 336, 345, 0, 0, 607, 0, 0, 0,
	265, 321, 272, 264, 580, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 0, 402, 257, 0, 453, 0, 0, 0, 625,
	0, 0, 0, 0, 0, 0, 0, 365, 0, 330,
	197, 225, 0, 0, 412, 461, 473, 0, 0, 0,
	253, 0, 471, 426, 602, 233, 284, 458, 432, 469,
	440, 287, 0, 0, 470, 372, 585, 450, 599, 626,
	627, 263, 406, 612, 522, 620, 644, 226, 260, 420,
	506, 605, 494, 397, 581, 582, 329, 493, 295, 201,
	369, 632, 224, 479, 371, 242, 231, 587, 609, 299,
	289, 456, 639, 213, 517, 597, 239, 483, 0, 0,
	647, 247, 504, 215, 594, 503, 393, 326, 327, 214,
	0, 457, 268, 293, 0, 0, 258, 415, 589, 590,
	256, 648, 228, 619, 220, 0, 618, 408, 584, 595,
	394, 383, 219, 593, 392, 382, 334, 355, 356, 280,
	307, 447, 375, 448, 306, 308, 404, 403, 405, 207,
	606, 0, 208, 0, 499, 608, 649, 452, 212, 234,
	235, 237, 0, 279, 283, 291, 294, 303, 304, 313,
	367, 419, 446, 442, 451, 0, 579, 600, 613, 624,
	630, 631, 633, 634, 635, 636, 637, 640, 638, 407,
	311, 495, 333, 373, 0, 0, 425, 472, 240, 604,
	496, 199, 0, 0, 0, 0, 254, 255, 0, 575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 645, 508, 514,
	509, 510, 511, 512, 513, 0, 515, 0, 0, 0,
	0, 0, 398, 0, 591, 592, 668, 384, 486, 601,
	335, 349, 352, 341, 361, 0, 362, 337, 338, 343,
	346, 347, 348, 353, 354, 358, 364, 249, 210, 390,
	399, 578, 312, 216, 217, 218, 524, 525, 526, 527,
	616, 617, 621, 205, 462, 463, 464, 465, 292, 611,
	309, 468, 467, 331, 332, 379, 449, 540, 542, 553,
	557, 559, 561, 567, 570, 541, 543, 554, 558, 560,
	562, 568, 571, 530, 532, 534, 536, 549, 548, 545,
	573, 574, 551, 556, 535, 547, 552, 565, 572, 569,
	529, 533, 537, 546, 564, 563, 544, 555, 566, 550,
	538, 531, 539, 0, 196, 221, 368, 0, 454, 288,
	646, 615, 484, 610, 206, 223, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 209, 222, 232, 236, 243, 261, 276, 278, 285,
	298, 310, 318, 319, 322, 328, 380, 386, 387, 388,
	389, 409, 410, 411, 414, 417, 418, 421, 423, 424,
	427, 431, 435, 436, 437, 439, 441, 443, 455, 460,
	474, 475, 476, 477, 478, 481, 482, 488, 489, 490,
	491, 492, 500, 501, 516, 586, 588, 603, 622, 628,
	480, 301, 302, 444, 445, 314, 315, 642, 643, 300,
	598, 629, 596, 641, 623, 438, 378, 0, 0, 381,
	281, 305, 320, 0, 614, 502, 227, 466, 290, 251,
	0, 0, 211, 246, 230, 259, 274, 277, 324, 391,
	400, 429, 434, 296, 271, 244, 459, 241, 485, 519,
	520, 521, 523, 395, 266, 433, 396, 0, 376, 576,
	577, 316, 0, 0, 0, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	366, 267, 0, 0, 204, 505, 0, 430, 0, 203,
	0, 487, 252, 377, 374, 583, 282, 273, 269, 250,
	317, 385, 428, 518, 422, 0, 370, 0, 0, 497,
	401, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	248, 325, 202, 413, 498, 286, 0, 0, 0, 0,
	0, 507, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 245, 0, 0, 0, 351,
	360, 359, 339, 340, 342, 344, 350, 357, 363, 336,
	345, 0, 0, 607, 0, 0, 0, 265, 321, 272,
	264, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1448, 0, 297, 0, 402,
	257, 0, 453, 0, 0, 0, 625, 0, 0, 0,
	0, 0, 0, 0, 365, 0, 330, 197, 225, 0,
	0, 412, 461, 473, 0, 0, 0, 253, 0, 471,
	426, 602, 233, 284, 458, 432, 469, 440, 287, 0,
	0, 470, 372, 585, 450, 599, 626, 627, 263, 406,
	612, 522, 620, 644, 226, 260, 420, 506, 605, 494,
	397, 581, 582, 329, 493, 295, 201, 369, 632, 224,
	479, 371, 242, 231, 587, 609, 299, 289, 456, 639,
	213, 517, 597, 239, 483, 0, 0, 647, 247, 504,
	215, 594, 503, 393, 326, 327, 214, 0, 457, 268,
	293, 0, 0, 258, 415, 589, 590, 256, 648, 228,
	619, 220, 0, 618, 408, 584, 595, 394, 383, 219,
	593, 392, 382, 334, 355, 356, 280, 307, 447, 375,
	448, 306, 308, 404, 403, 405, 207, 606, 0, 208,
	0, 499, 608, 649, 452, 212, 234, 235, 237, 0,
	279, 283, 291, 294, 303, 304, 313, 367, 419, 446,
	442, 451, 0, 579, 600, 613, 624, 630, 631, 633,
	634, 635, 636, 637, 640, 638, 407, 311, 495, 333,
	373, 0, 0, 425, 472, 240, 604, 496, 199, 0,
	0, 0, 0, 254, 255, 0, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 645, 508, 514, 509, 510, 511,
	512, 513, 0, 515, 0, 0, 0, 0, 0, 398,
	0, 591, 592, 668, 384, 486, 601, 335, 349, 352,
	341, 361, 0, 362, 337, 338, 343, 346, 347, 348,
	353, 354, 358, 364, 249, 210, 390, 399, 578, 312,
	216, 217, 218, 524, 525, 526, 527, 616, 617, 621,
	205, 462, 463, 464, 465, 292, 611, 309, 468, 467,
	331, 332, 379, 449, 540, 542, 553, 557, 559, 561,
	567, 570, 541, 543, 554, 558, 560, 562, 568, 571,
	530, 532, 534, 536, 549, 548, 545, 573, 574, 551,
	556, 535, 547, 552, 565, 572, 569, 529, 533, 537,
	546, 564, 563, 544, 555, 566, 550, 538, 531, 539,
	0, 196, 221, 368, 0, 454, 288, 646, 615, 484,
	610, 206, 223, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 200, 209, 222,
	232, 236, 243, 261, 276, 278, 285, 298, 310, 318,
	319, 322, 328, 380, 386, 387, 388, 389, 409, 410,
	411, 414, 417, 418, 421, 423, 424, 427, 431, 435,
	436, 437, 439, 441, 443, 455, 460, 474, 475, 476,
	477, 478, 481, 482, 488, 489, 490, 491, 492, 500,
	501, 516, 586, 588, 603, 622, 628, 480, 301, 302,
	444, 445, 314, 315, 642, 643, 1447, 598, 629, 596,
	641, 623, 438, 378, 0, 0, 381, 281, 305, 320,
	0, 614, 502, 227, 466, 290, 251, 0, 0, 211,
	246, 230, 259, 274, 277, 324, 391, 400, 429, 434,
	296, 271, 244, 459, 241, 485, 519, 520, 521, 523,
	395, 266, 433, 396, 0, 376, 576, 577, 316, 0,
	0, 0, 528, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 366, 267, 0,
	0, 204, 505, 0, 430, 0, 203, 0, 487, 252,
	377, 374, 583, 282, 273, 269, 250, 317, 385, 428,
	518, 422, 0, 370, 0, 0, 497, 401, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	413, 498, 286, 0, 0, 0, 0, 0, 507, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 245, 0, 0, 0, 351, 360, 359, 339,
	340, 342, 344, 350, 357, 363, 336, 345, 0, 0,
	607, 0, 0, 0, 265, 321, 272, 264, 580, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 402, 257, 0, 453,
	0, 0, 0, 625, 0, 0, 0, 0, 0, 0,
	0, 365, 0, 330, 197, 225, 0, 0, 412, 461,
	473, 0, 0, 0, 253, 0, 471, 426, 602, 233,
	284, 458, 432, 469, 440, 287, 0, 0, 470, 372,
	585, 450, 599, 626, 627, 263, 406, 612, 522, 620,
	644, 226, 260, 420, 506, 605, 494, 397, 581, 582,
	329, 493, 295, 201, 369, 632, 224, 479, 371, 242,
	231, 587, 609, 299, 289, 456, 639, 213, 517, 597,
	239, 483, 0, 0, 647, 247, 504, 215, 594, 503,
	393, 326, 327, 214, 0, 457, 268, 293, 0, 0,
	258, 415, 589, 590, 256, 648, 228, 619, 220, 0,
	618, 408, 584, 595, 394, 383, 219, 593, 392, 382,
	334, 355, 356, 280, 307, 447, 375, 448, 306, 308,
	404, 403, 405, 207, 606, 0, 208, 0, 499, 608,
	649, 452, 212, 234, 235, 237, 0, 279, 283, 291,
	294, 303, 304, 313, 367, 419, 446, 442, 451, 0,
	579, 600, 613, 624, 630, 631, 633, 634, 635, 636,
	637, 640, 638, 407, 311, 495, 333, 373, 0, 0,
	425, 472, 240, 604, 496, 199, 0, 0, 0, 0,
	254, 255, 0, 575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 645, 508, 514, 509, 510, 511, 512, 513, 0,
	515, 0, 0, 0, 0, 0, 398, 0, 591, 592,
	668, 384, 486, 601, 335, 349, 352, 341, 361, 0,
	362, 337, 338, 343, 346, 347, 348, 353, 354, 358,
	364, 249, 210, 390, 399, 578, 312, 216, 217, 218,
	524, 525, 526, 527, 616, 617, 621, 205, 462, 463,
	464, 465, 292, 611, 309, 468, 467, 331, 332, 379,
	449, 540, 542, 553, 557, 559, 561, 567, 570, 541,
	543, 554, 558, 560, 562, 568, 571, 530, 532, 534,
	536, 549, 548, 545, 573, 574, 551, 556, 535, 547,
	552, 565, 572, 569, 529, 533, 537, 546, 564, 563,
	544, 555, 566, 550, 538, 531, 539, 0, 196, 221,
	368, 0, 454, 288, 646, 615, 484, 610, 206, 223,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1043,
	0, 0, 0, 198, 200, 209, 222, 232, 236, 243,
	261, 276, 278, 285, 298, 310, 318, 319, 322, 328,
	380, 386, 387, 388, 389, 409, 410, 411, 414, 417,
	418, 421, 423, 424, 427, 431, 435, 436, 437, 439,
	441, 443, 455, 460, 474, 475, 476, 477, 478, 481,
	482, 488, 489, 490, 491, 492, 500, 501, 516, 586,
	588, 603, 622, 628, 480, 301, 302, 444, 445, 314,
	315, 642, 643, 300, 598, 629, 596, 641, 623, 438,
	378, 0, 0, 381, 281, 305, 320, 0, 614, 502,
	227, 466, 290, 251, 0, 0, 211, 246, 230, 259,
	274, 277, 324, 391, 400, 429, 434, 296, 271, 244,
	459, 241, 485, 519, 520, 521, 523, 395, 266, 433,
	396, 0, 376, 576, 577, 316, 0, 0, 0, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 366, 267, 0, 0, 204, 505,
	0, 430, 0, 203, 0, 487, 252, 377, 374, 583,
	282, 273, 269, 250, 317, 385, 428, 518, 422, 0,
	370, 0, 0, 497, 401, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 248, 325, 202, 413, 498, 286,
	0, 0, 0, 0, 0, 507, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 245,
	0, 0, 0, 351, 360, 359, 339, 340, 342, 344,
	350, 357, 363, 336, 345, 0, 0, 607, 0, 0,
	0, 265, 321, 272, 264, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 402, 257, 0, 453, 0, 671, 0,
	625, 0, 0, 0, 0, 0, 0, 0, 365, 0,
	330, 197, 225, 0, 0, 412, 461, 473, 0, 0,
	0, 253, 0, 471, 426, 602, 233, 284, 458, 432,
	469, 440, 287, 0, 0, 470, 372, 585, 450, 599,
	626, 627, 263, 406, 612, 522, 620, 644, 226, 260,
	420, 506, 605, 494, 397, 581, 582, 329, 493, 295,
	201, 369, 632, 224, 479, 371, 242, 231, 587, 609,
	299, 289, 456, 639, 213, 517, 597, 239, 483, 0,
	0, 647, 247, 504, 215, 594, 503, 393, 326, 327,
	214, 0, 457, 268, 293, 0, 0, 258, 415, 589,
	590, 256, 648, 228, 619, 220, 0, 618, 408, 584,
	595, 394, 383, 219, 593, 392, 382, 334, 355, 356,
	280, 307, 447, 375, 448, 306, 308, 404, 403, 405,
	207, 606, 0, 208, 0, 499, 608, 649, 452, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 367, 419, 446, 442, 451, 0, 579, 600, 613,
	624, 630, 631, 633, 634, 635, 636, 637, 640, 638,
	407, 311, 495, 333, 373, 0, 0, 425, 472, 240,
	604, 496, 199, 0, 0, 0, 0, 254, 255, 0,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 645, 508,
	514, 509, 510, 511, 512, 513, 0, 515, 0, 0,
	0, 0, 0, 398, 0, 591, 592, 668, 384, 486,
	601, 335, 349, 352, 341, 361, 0, 362, 337, 338,
	343, 346, 347, 348, 353, 354, 358, 364, 249, 210,
	390, 399, 578, 312, 216, 217, 218, 524, 525, 526,
	527, 616, 617, 621, 205, 462, 463, 464, 465, 292,
	611, 309, 468, 467, 331, 332, 379, 449, 540, 542,
	553, 557, 559, 561, 567, 570, 541, 543, 554, 558,
	560, 562, 568, 571, 530, 532, 534, 536, 549, 548,
	545, 573, 574, 551, 556, 535, 547, 552, 565, 572,
	569, 529, 533, 537, 546, 564, 563, 544, 555, 566,
	550, 538, 531, 539, 0, 196, 221, 368, 0, 454,
	288, 646, 615, 484, 610, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 380, 386, 387,
	388, 389, 409, 410, 411, 414, 417, 418, 421, 423,
	424, 427, 431, 435, 436, 437, 439, 441, 443, 455,
	460, 474, 475, 476, 477, 478, 481, 482, 488, 489,
	490, 491, 492, 500, 501, 516, 586, 588, 603, 622,
	628, 480, 301, 302, 444, 445, 314, 315, 642, 643,
	300, 598, 629, 596, 641, 623, 438, 378, 0, 0,
	381, 281, 305, 320, 0, 614, 502, 227, 466, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	391, 400, 429, 434, 296, 271, 244, 459, 241, 485,
	519, 520, 521, 523, 395, 266, 433, 396, 0, 376,
	576, 577, 316, 0, 0, 0, 528, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 366, 267, 0, 0, 204, 505, 0, 430, 0,
	203, 0, 487, 252, 377, 374, 583, 282, 273, 269,
	250, 317, 385, 428, 518, 422, 0, 370, 0, 0,
	497, 401, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 248, 325, 202, 413, 498, 286, 0, 0, 0,
	0, 0, 507, 718, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 245, 0, 0, 0,
	351, 360, 359, 339, 340, 342, 344, 350, 357, 363,
	336, 345, 0, 0, 607, 0, 0, 0, 265, 321,
	272, 264, 580, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 0,
	402, 257, 0, 453, 0, 0, 0, 625, 0, 0,
	0, 0, 0, 0, 0, 365, 0, 330, 197, 225,
	0, 0, 412, 461, 473, 0, 0, 0, 253, 0,
	471, 426, 602, 233, 284, 458, 432, 469, 440, 287,
	0, 0, 470, 372, 585, 450, 599, 626, 627, 263,
	406, 612, 522, 620, 644, 226, 260, 420, 506, 605,
	494, 397, 581, 582, 329, 493, 295, 201, 369, 632,
	224, 479, 371, 242, 231, 587, 609, 299, 289, 456,
	639, 213, 517, 597, 239, 483, 0, 0, 647, 247,
	504, 215, 594, 503, 393, 326, 327, 214, 0, 457,
	268, 293, 0, 0, 258, 415, 589, 590, 256, 648,
	228, 619, 220, 0, 618, 408, 584, 595, 394, 383,
	219, 593, 392, 382, 334, 355, 356, 280, 307, 447,
	375, 448, 306, 308, 404, 403, 405, 207, 606, 0,
	208, 0, 499, 608, 649, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 579, 600, 613, 624, 630, 631,
	633, 634, 635, 636, 637, 640, 638, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 604, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 645, 508, 514, 509, 510,
	511, 512, 513, 0, 515, 0, 0, 0, 0, 0,
	398, 0, 591, 592, 668, 384, 486, 601, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 578,
	312, 216, 217, 218, 524, 525, 526, 527, 616, 617,
	621, 205, 462, 463, 464, 465, 292, 611, 309, 468,
	467, 331, 332, 379, 449, 540, 542, 553, 557, 559,
	561, 567, 570, 541, 543, 554, 558, 560, 562, 568,
	571, 530, 532, 534, 536, 549, 548, 545, 573, 574,
	551, 556, 535, 547, 552, 565, 572, 569, 529, 533,
	537, 546, 564, 563, 544, 555, 566, 550, 538, 531,
	539, 0, 196, 221, 368, 0, 454, 288, 646, 615,
	484, 610, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 4121,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 516, 586, 588, 603, 622, 628, 480, 301,
	302, 444, 445, 314, 315, 642, 643, 300, 598, 629,
	596, 641, 623, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 614, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 519, 520, 521,
	523, 395, 266, 433, 396, 0, 376, 576, 577, 316,
	0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 366, 267,
	0, 0, 204, 505, 0, 430, 0, 203, 0, 487,
	252, 377, 374, 583, 282, 273, 269, 250, 317, 385,
	428, 518, 422, 0, 370, 0, 0, 497, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 0, 507,
	718, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 351, 360, 359,
	339, 340, 342, 344, 350, 357, 363, 336, 345, 0,
	0, 607, 0, 0, 0, 265, 321, 272, 264, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 402, 257, 0,
	453, 0, 0, 0, 625, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 330, 197, 225, 0, 0, 412,
	461, 473, 0, 0, 0, 253, 0, 471, 426, 602,
	233, 284, 458, 432, 469, 440, 287, 0, 0, 470,
	372, 585, 450, 599, 626, 627, 263, 406, 612, 522,
	620, 644, 226, 260, 420, 506, 605, 494, 397, 581,
	582, 329, 493, 295, 201, 369, 632, 224, 479, 371,
	242, 231, 587, 609, 299, 289, 456, 639, 213, 517,
	597, 239, 483, 0, 0, 647, 247, 504, 215, 594,
	503, 393, 326, 327, 214, 0, 457, 268, 293, 0,
	0, 258, 415, 589, 590, 256, 648, 228, 619, 220,
	0, 618, 408, 584, 595, 394, 383, 219, 593, 392,
	382, 334, 355, 356, 280, 307, 447, 375, 448, 306,
	308, 404, 403, 405, 207, 606, 0, 208, 0, 499,
	608, 649, 452, 212, 234, 235, 237, 0, 279, 283,
	291, 294, 303, 304, 313, 367, 419, 446, 442, 451,
	0, 579, 600, 613, 624, 630, 631, 633, 634, 635,
	636, 637, 640, 638, 407, 311, 495, 333, 373, 0,
	0, 425, 472, 240, 604, 496, 199, 0, 0, 0,
	0, 254, 255, 0, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 645, 508, 514, 509, 510, 511, 512, 513,
	0, 515, 0, 0, 0, 0, 0, 398, 0, 591,
	592, 668, 384, 486, 601, 335, 349, 352, 341, 361,
	0, 362, 337, 338, 343, 346, 347, 348, 353, 354,
	358, 364, 249, 210, 390, 399, 578, 312, 216, 217,
	218, 524, 525, 526, 527, 616, 617, 621, 205, 462,
	463, 464, 465, 292, 611, 309, 468, 467, 331, 332,
	379, 449, 540, 542, 553, 557, 559, 561, 567, 570,
	541, 543, 554, 558, 560, 562, 568, 571, 530, 532,
	534, 536, 549, 548, 545, 573, 574, 551, 556, 535,
	547, 552, 565, 572, 569, 529, 533, 537, 546, 564,
	563, 544, 555, 566, 550, 538, 531, 539, 0, 196,
	221, 368, 0, 454, 288, 646, 615, 484, 610, 206,
	223, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 200, 209, 222, 232, 236,
	243, 261, 276, 278, 285, 298, 310, 318, 319, 322,
	328, 380, 386, 387, 388, 389, 409, 410, 411, 414,
	417, 418, 421, 423, 424, 427, 431, 435, 436, 437,
	439, 441, 443, 455, 460, 474, 475, 476, 477, 478,
	481, 482, 488, 489, 490, 491, 492, 500, 501, 516,
	586, 588, 603, 622, 628, 480, 301, 302, 444, 445,
	314, 315, 642, 643, 300, 598, 629, 596, 641, 623,
	438, 378, 0, 0, 381, 281, 305, 320, 0, 614,
	502, 227, 466, 290, 251, 0, 0, 211, 246, 230,
	259, 274, 277, 324, 391, 400, 429, 434, 296, 271,
	244, 459, 241, 485, 519, 520, 521, 523, 395, 266,
	433, 396, 0, 376, 576, 577, 316, 0, 0, 0,
	528, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 366, 267, 0, 0, 204,
	505, 0, 430, 0, 203, 0, 487, 252, 377, 374,
	583, 282, 273, 269, 250, 317, 385, 428, 518, 422,
	0, 370, 0, 0, 497, 401, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 248, 325, 202, 413, 498,
	286, 0, 0, 0, 0, 0, 507, 953, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	245, 0, 0, 0, 351, 360, 359, 339, 340, 342,
	344, 350, 357, 363, 336, 345, 0, 0, 607, 0,
	0, 0, 265, 321, 272, 264, 580, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 402, 257, 0, 453, 0, 0,
	0, 625, 0, 0, 0, 0, 0, 0, 0, 365,
	0, 330, 197, 225, 0, 0, 412, 461, 473, 0,
	0, 0, 253, 0, 471, 426, 602, 233, 284, 458,
	432, 469, 440, 287, 0, 0, 470, 372, 585, 450,
	599, 626, 627, 263, 406, 612, 522, 620, 644, 226,
	260, 420, 506, 605, 494, 397, 581, 582, 329, 493,
	295, 201, 369, 632, 224, 479, 371, 242, 231, 587,
	609, 299, 289, 456, 639, 213, 517, 597, 239, 483,
	0, 0, 647, 247, 504, 215, 594, 503, 393, 326,
	327, 214, 0, 457, 268, 293, 0, 0, 258, 415,
	589, 590, 256, 648, 228, 619, 220, 0, 618, 408,
	584, 595, 394, 383, 219, 593, 392, 382, 334, 355,
	356, 280, 307, 447, 375, 448, 306, 308, 404, 403,
	405, 207, 606, 0, 208, 0, 499, 608, 649, 452,
	212, 234, 235, 237, 0, 279, 283, 291, 294, 303,
	304, 313, 367, 419, 446, 442, 451, 0, 579, 600,
	613, 624, 630, 631, 633, 634, 635, 636, 637, 640,
	638, 407, 311, 495, 333, 373, 0, 0, 425, 472,
	240, 604, 496, 199, 0, 0, 0, 0, 254, 255,
	0, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 645,
	508, 514, 509, 510, 511, 512, 513, 0, 515, 0,
	0, 0, 0, 0, 398, 0, 591, 592, 668, 384,
	486, 601, 335, 349, 352, 341, 361, 0, 362, 337,
	338, 343, 346, 347, 348, 353, 354, 358, 364, 249,
	210, 390, 399, 578, 312, 216, 217, 218, 524, 525,
	526, 527, 616, 617, 621, 205, 462, 463, 464, 465,
	292, 611, 309, 468, 467, 331, 332, 379, 449, 540,
	542, 553, 557, 559, 561, 567, 570, 541, 543, 554,
	558, 560, 562, 568, 571, 530, 532, 534, 536, 549,
	548, 545, 573, 574, 551, 556, 535, 547, 552, 565,
	572, 569, 529, 533, 537, 546, 564, 563, 544, 555,
	566, 550, 538, 531, 539, 0, 196, 221, 368, 0,
	454, 288, 646, 615, 484, 610, 206, 223, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 209, 222, 232, 236, 243, 261, 276,
	278, 285, 298, 310, 318, 319, 322, 328, 380, 386,
	387, 388, 389, 409, 410, 411, 414, 417, 418, 421,
	423, 424, 427, 431, 435, 436, 437, 439, 441, 443,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 488,
	489, 490, 491, 492, 500, 501, 516, 586, 588, 603,
	622, 628, 480, 301, 302, 444, 445, 314, 315, 642,
	643, 300, 598, 629, 596, 641, 623, 438, 378, 0,
	0, 381, 281, 305, 320, 0, 614, 502, 227, 466,
	290, 251, 0, 0, 211, 246, 230, 259, 274, 277,
	324, 391, 400, 429, 434, 296, 271, 244, 459, 241,
	485, 519, 520, 521, 523, 395, 266, 433, 396, 0,
	376, 576, 577, 316, 0, 0, 0, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 366, 267, 0, 0, 204, 505, 0, 430,
	0, 203, 0, 487, 252, 377, 374, 583, 282, 273,
	269, 250, 317, 385, 428, 518, 422, 0, 370, 0,
	0, 497, 401, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 248, 325, 202, 413, 498, 286, 0, 0,
	0, 0, 0, 507, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 245, 0, 0,
	0, 351, 360, 359, 339, 340, 342, 344, 350, 357,
	363, 336, 345, 0, 0, 607, 0, 0, 0, 265,
	321, 272, 264, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	0, 402, 257, 0, 453, 0, 0, 0, 625, 0,
	0, 0, 0, 0, 0, 0, 365, 0, 330, 197,
	225, 0, 0, 412, 461, 473, 0, 0, 0, 253,
	0, 471, 426, 602, 233, 284, 458, 432, 469, 440,
	287, 0, 0, 470, 372, 585, 450, 599, 626, 627,
	263, 406, 612, 522, 620, 644, 226, 260, 420, 506,
	605, 494, 397, 581, 582, 329, 493, 295, 201, 369,
	632, 224, 479, 371, 242, 231, 587, 609, 299, 289,
	456, 639, 213, 517, 597, 239, 483, 0, 0, 647,
	247, 504, 215, 594, 503, 393, 326, 327, 214, 0,
	457, 268, 293, 0, 0, 258, 415, 589, 590, 256,
	648, 228, 619, 220, 0, 618, 408, 584, 595, 394,
	383, 219, 593, 392, 382, 334, 355, 356, 280, 307,
	447, 375, 448, 306, 308, 404, 403, 405, 207, 606,
	0, 208, 0, 499, 608, 649, 452, 212, 234, 235,
	237, 0, 279, 283, 291, 294, 303, 304, 313, 367,
	419, 446, 442, 451, 0, 579, 600, 613, 624, 630,
	631, 633, 634, 635, 636, 637, 640, 638, 407, 311,
	495, 333, 373, 0, 0, 425, 472, 240, 604, 496,
	199, 0, 0, 0, 0, 254, 255, 0, 575, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 645, 508, 514, 509,
	510, 511, 512, 513, 0, 515, 0, 0, 0, 0,
	0, 398, 0, 591, 592, 668, 384, 486, 601, 335,
	349, 352, 341, 361, 0, 362, 337, 338, 343, 346,
	347, 348, 353, 354, 358, 364, 249, 210, 390, 399,
	578, 312, 216, 217, 218, 524, 525, 526, 527, 616,
	617, 621, 205, 462, 463, 464, 465, 292, 611, 309,
	468, 467, 331, 332, 379, 449, 540, 542, 553, 557,
	559, 561, 567, 570, 541, 543, 554, 558, 560, 562,
	568, 571, 530, 532, 534, 536, 549, 548, 545, 573,
	574, 551, 556, 535, 547, 552, 565, 572, 569, 529,
	533, 537, 546, 564, 563, 544, 555, 566, 550, 538,
	531, 539, 0, 196, 221, 368, 0, 454, 288, 646,
	615, 484, 610, 206, 223, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	209, 222, 232, 236, 243, 261, 276, 278, 285, 298,
	310, 318, 319, 322, 328, 380, 386, 387, 388, 389,
	409, 410, 411, 414, 417, 418, 421, 423, 424, 427,
	431, 435, 436, 437, 439, 441, 443, 455, 460, 474,
	475, 476, 477, 478, 481, 482, 488, 489, 490, 491,
	492, 500, 501, 516, 586, 588, 603, 622, 628, 480,
	301, 302, 444, 445, 314, 315, 642, 643, 300, 598,
	629, 596, 641, 623, 438, 378, 0, 0, 381, 281,
	305, 320, 0, 614, 502, 227, 466, 290, 251, 0,
	0, 211, 246, 230, 259, 274, 277, 324, 391, 400,
	429, 434, 296, 271, 244, 459, 241, 485, 519, 520,
	521, 523, 395, 266, 433, 0, 0, 376, 576, 577,
	316,
}

var yyPact = [...]int{
	-1000, -1000, 1078, -1000, -547, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2390, 2461, -1000, -1000, -1000, -1000, 2611, -1000, 1035,
	2066, -1000, 2406, 5153, -1000, 55144, 772, -1000, 52196, -451,
	895, 230, 35982, -1000, 183, -1000, 170, 53670, 179, -1000,
	-1000, -1000, -1000, -451, 21242, 2285, 50, 49, 55144, -1000,
	-1000, -1000, -1000, -371, 2552, 2038, -1000, 390, -1000, -1000,
	-1000, -1000, -1000, -1000, 51459, -1000, 1123, -1000, -1000, 2420,
	2444, 2276, 935, 2284, -1000, 2484, 2038, -1000, 21242, 2543,
	2343, 20505, 20505, 471, -1000, -1000, 304, -1000, -1000, 30823,
	55144, 38930, 305, -1000, 2406, -1000, -1000, -1000, 211, -1000,
	325, 1938, -1000, 1933, -1000, 934, 1014, 343, 469, 444,
	341, 338, 336, 333, 332, 330, 329, 328, 358, -1000,
	961, 961, -223, -236, 1554, 774, 414, 414, 1140, 498,
	2344, 2338, -1000, -1000, 961, 961, 961, 350, 961, 961,
	961, 961, 277, 271, 961, 961, 961, 961, 961, 961,
	961, 961, 961, 961, 961, 961, 961, 961, 961, 961,
	961, 894, 2406, 251, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 55144,
	181, 55144, -1000, 845, 770, -1000, -1000, -455, 1181, 1181,
	69, 1181, 1181, 1181, 1181, 176, 945, 48, -1000, 175,
	243, 255, 249, 1094, 786, -1000, -1000, 244, 1094, 1799,
	-1000, 944, 248, 163, -1000, 1181, 1181, -1000, 13848, 233,
	13848, 13848, -1000, 2372, -1000, -1000, -1000, -1000, -1000, 1356,
	-1000, -1000, -1000, -1000, -40, 497, -1000, -1000, -1000, -1000,
	53670, 50722, 266, -1000, -1000, 29, 1850, 1179, 21242, 1345,
	932, -1000, -1000, 1398, 910, -1000, -1000, -1000, -1000, -1000,
	827, -1000, 23453, 23453, 23453, 23453, -1000, -1000, 1584, 49985,
	1584, 1584, 23453, 1584, 23453, 1584, 1584, 1584, 1584, 21242,
	1584, 1584, 1584, 1584, -1000, 1584, 1584, 1584, 1584, 1584,
	1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584,
	1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584,
	1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584,
	1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584,
	1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584,
	1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584,
	1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584,
	1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584,
	1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584,
	1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584,
	1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584,
	1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584,
	1584, 1584, 1584, 1584, -1000, -1000, -1000, -1000, 1584, 839,
	1584, 1584, 1584, 1584, 1584, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1584, 1584, 1584, 1584, 1584, 1584, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1584, 1584, 1584,
	1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584,
	1584, -1000, -1000, -1000, 1591, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 26401, 1514, 1503, 1471, -1000, 18294, 1584, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	55144, -1000, 1584, 202, 53670, 53670, 301, 1340, -1000, -1000,
	2484, 2038, -1000, 2552, 2514, 390, -1000, 4193, 2154, 1470,
	1367, 2038, 1910, 55144, -1000, 1958, -1000, -1000, -1000, -317,
	-323, 2178, 1504, 1793, -1000, -1000, -1000, -1000, 1824, 21242,
	-1000, -1000, 2580, -1000, 27875, 838, 2577, 49248, -1000, 471,
	471, 1929, 417, 0, -1000, -1000, -1000, -1000, 984, 35245,
	-1000, -1000, -1000, -1000, -1000, 1803, 55144, -1000, -1000, 4963,
	53670, -1000, 2064, -1000, 1789, -1000, 1978, 21242, 2046, 756,
	53670, 738, 734, 715, -1000, -71, -1000, -1000, -1000, -1000,
	-1000, -1000, 961, 961, 961, -1000, 356, 2534, 5153, 8010,
	-1000, -1000, -1000, 48511, 2052, 53670, -1000, 2050, -1000, 1054,
	512, 835, 835, 53670, -1000, -1000, 54407, 53670, 1046, 1038,
	53670, 53670, 53670, 53670, -1000, 47774, -1000, 47037, 46300, 1337,
	53670, 45563, 44826, 44089, 43352, 42615, -1000, 2151, -1000, 2031,
	-1000, -1000, -1000, 54407, 53670, 53670, 54407, 53670, 54407, 55144,
	53670, -1000, -1000, 354, -1000, -1000, 1336, 1330, 1322, 961,
	961, 1321, 1783, 1780, 1779, 961, 961, 1315, 1762, 37456,
	1760, 246, 1310, 1309, 1308, 1364, 1759, 190, 1757, 1338,
	1254, 1303, 53670, 2045, 55144, -1000, 235, 987, 977, 983,
	2406, 2279, 1927, 495, 748, 53670, 461, 461, 53670, -1000,
	14591, 55144, 229, -1000, 1756, 21242, -1000, 1135, 1094, 1094,
	-1000, -1000, -1000, -1000, -1000, -1000, 1181, 55144, 1135, -1000,
	-1000, -1000, 1094, 1181, 55144, 1181, 1181, 1181, 1181, 1094,
	1094, 1094, 1181, 55144, 55144, 55144, 55144, 55144, 55144, 55144,
	55144, 55144, 13848, 944, 1181, -456, -1000, 1747, -1000, -1000,
	-1000, 2165, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 13848, 13848, -1000, -1000, -1000, -1000, -1000, 1926,
	-1000, 164, 13, 177, -1000, 41878, 489, 976, -1000, 489,
	-1000, -1000, -1000, 1923, 41141, -1000, -457, -460, -464, -466,
	-1000, -1000, -1000, -468, -470, -1000, -1000, -1000, 21242, 21242,
	21242, 21242, -284, -1000, 1292, 23453, 2418, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 21242, 219, 1131, 23453, 23453, 23453,
	23453, 23453, 23453, 23453, 24927, 24190, 23453, 23453, 23453, 23453,
	23453, 23453, -1000, -1000, 33034, 8668, 8668, 910, 910, 910,
	910, -1000, -182, 1922, 54407, -1000, -1000, -1000, 834, 21242,
	21242, 910, -1000, 1346, 4903, 18294, 21242, 21242, 21242, 21242,
	989, 1179, 54407, 21242, -1000, 1367, -1000, -1000, -1000, -1000,
	1217, -1000, -1000, 1084, 2383, 2383, 2383, 2383, 21242, 21242,
	21242, 21242, 21242, 21242, 21242, 21242, 21242, 21242, 2383, 21242,
	208, 208, 236, 21242, 21242, 21242, 21242, 21242, 21242, 21242,
	21242, 16820, 21242, 21242, 23453, 21242, 21242, 21242, 1367, 21242,
	21242, 21242, 21242, 21242, 21242, 21242, 21242, 21242, 21242, 21242,
	21242, 21242, 21242, 21242, 21242, 21242, 21242, 21242, 21242, 21242,
	21242, 21242, 21242, 21242, 21242, 21242, 21242, 21242, 21242, 21242,
	21242, 21242, 21242, 21242, 21242, 21242, 21242, 21242, 21242, 21242,
	21242, 21242, 21242, 21242, 21242, 21242, 21242, 21242, 21242, 21242,
	21242, 21242, 21242, 21242, 21242, 21242, 21242, 21242, 21242, 21242,
	21242, 21242, 21242, 21242, 21242, 21242, 21242, 21242, 21242, 21242,
	21242, 21242, 21242, 21242, 21242, 21242, 21242, 21242, 1367, 21242,
	1335, 21242, 21242, 21242, 21242, 21242, 21242, 21242, 16077, 21242,
	21242, 21242, 21242, 21242, -1000, -1000, -1000, -1000, -1000, -1000,
	21242, 21242, 21242, 21242, 21242, 21242, 21242, 21242, 1367, 21242,
	21242, 21242, 21242, 21242, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1661, 1619, 1511, 21242, -1000,
	1918, -1000, -199, 30086, 21242, 1703, 2576, 2087, 53670, -1000,
	-1000, -1000, -1000, 2484, -1000, 2484, 1661, 3931, 2189, 20505,
	-1000, -1000, 3931, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1699, -1000, 55144, 1910,
	2467, 53670, -1000, -367, -1000, -373, 2173, 1691, 371, -1000,
	21242, 21242, 1906, -1000, 1692, 55144, -1000, -284, -1000, 40404,
	-1000, -1000, 13105, 55144, 324, 55144, -1000, 29349, 39667, 298,
	-1000, 0, 1878, -1000, 27, 11, 17557, 897, -1000, -1000,
	-1000, 1554, 25664, 1831, 897, 98, -1000, -1000, -1000, 1978,
	-1000, 1978, 1978, 1978, 1978, 371, 371, 371, 371, -1000,
	-1000, -1000, -1000, -1000, 2044, 2030, -1000, 1978, 1978, 1978,
	1978, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2014, 2014,
	2014, 2011, 2011, 1983, 1983, 405, -1000, 21242, 361, 38930,
	2471, 1289, 1811, 235, 468, 2085, 53670, 53670, 53670, 468,
	-1000, 1440, 1434, 1389, -1000, -526, 1890, -1000, -1000, 2533,
	-1000, -1000, 836, 1088, 1086, 1017, 53670, 214, 299, -1000,
	397, -1000, 38930, 53670, 1036, 835, 53670, -1000, 53670, -1000,
	-1000, -1000, -1000, -1000, 53670, -1000, -1000, 1887, -1000, 1891,
	1110, 1073, 1109, 1072, 1887, -1000, -1000, -189, 1887, -1000,
	1887, -1000, 1887, -1000, 1887, -1000, 1887, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 993, 114, -320, 53670,
	214, 493, -1000, 487, 33034, -1000, -1000, -1000, 33034, 33034,
	-1000, -1000, -1000, -1000, 1681, 1659, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -525, 55144, -1000, 234, 975,
	286, 282, 284, 55144, 731, 2332, 2328, 2325, 2322, 2320,
	2316, 2309, 227, 267, 55144, 55144, 461, 2123, 55144, 2434,
	55144, -1000, -1000, -1000, -1000, -1000, 1617, 1593, -1000, 1179,
	55144, -1000, -1000, 1181, 1181, -1000, -1000, 55144, 1181, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1181, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 55144, -1000, -1000, -1000, -1000, -40, 160,
	-1000, -1000, 53670, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -118, -1000, 308, 21, 387, -1000, -1000, -1000,
	-1000, -1000, 2473, -1000, 1179, 1037, 1004, -1000, 1584, -1000,
	-1000, 1299, -1000, -1000, -1000, -1000, -1000, 1584, 1584, 1584,
	-1000, -1000, -1000, -1000, -1000, 219, 23453, 23453, 23453, 1583,
	473, 1655, 1294, 1202, 1158, 1158, 995, 23453, 995, 23453,
	914, 914, 914, 914, 914, -1000, -1000, -1000, -1000, -1000,
	-1000, 1591, -1000, 1586, -1000, 1584, 54407, 1755, 16077, 2020,
	1628, 1367, 926, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 4257, 1367, 1850, 1367, 1519, 4244, 990,
	-1000, 21242, 1367, 4240, -1000, -1000, 1367, 1367, 21242, -1000,
	-1000, 21242, 21242, 21242, 21242, 1811, 1811, 1811, 1811, 1811,
	1811, 1811, 1811, 1811, 1811, 21242, 1811, 1885, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1881, 2570, 1496, 1811,
	1811, 1811, 1811, 4234, 1811, 1811, 21242, 1908, -1000, -1000,
	-1000, 1466, 4229, 1523, 4225, 1811, 1811, -1000, 1811, 4218,
	4214, 1367, 2992, 2942, 1811, 1811, 1811, 1811, 1811, 2873,
	2866, 1811, 1811, 2859, 1811, 4209, 1811, 2853, 2738, 2719,
	2698, 2676, 2672, 2659, 2650, 2610, 2572, 2540, 2536, 2529,
	2512, 2505, 2496, 2464, 2458, 1811, 1811, 1811, 4120, 1811,
	4116, 1811, 3950, 1811, 1811, 3923, 2445, 2417, 1367, 1879,
	-1000, 3883, 1811, 3589, 3559, 3518, 2410, 3510, 3505, 3487,
	1811, 1811, 1811, 2395, 3479, 3475, 3471, 3448, 3444, 3440,
	3432, 3410, 3400, 1811, 1511, 1511, 1511, 1511, 1511, 3393,
	-290, 1811, 1367, -1000, -1000, -1000, -1000, -1000, 3380, 2377,
	3372, 3365, 3353, 3338, 1367, 1584, 833, -1000, -1000, 1511,
	1367, 1367, 1511, 1511, 3332, 3110, 3045, 3032, 3028, 3005,
	1811, 1811, -1000, 1811, 2999, 2961, 2342, 2327, 1367, -1000,
	1511, 55144, -1000, -450, -1000, -7, 960, 1584, -1000, 37456,
	1367, -1000, 6947, -1000, 1352, -1000, -1000, -1000, -1000, -1000,
	34508, 1838, -1000, -1000, -1000, -1000, 1584, 1730, -1000, -1000,
	-1000, -1000, 371, 80, 33771, 879, 879, 109, 1179, 1179,
	21242, -1000, -1000, -1000, -1000, -1000, -1000, 831, 2551, 373,
	1584, -1000, 1896, 2704, -1000, -1000, -1000, 2459, 27138, -1000,
	-1000, 1584, 1584, 55144, 1858, 1796, -1000, 822, -1000, 1361,
	1878, 0, -10, -1000, -1000, -1000, -1000, 1179, -1000, 1388,
	327, 1394, -1000, 454, -1000, -1000, -1000, -1000, 2299, 95,
	-1000, -1000, -1000, 360, 371, -1000, -1000, -1000, -1000, -1000,
	-1000, 1582, 1582, -1000, -1000, -1000, -1000, -1000, 1273, -1000,
	-1000, -1000, -1000, 1271, -1000, -1000, 1262, -1000, -1000, 2918,
	2130, 361, -1000, -1000, 961, 1577, -1000, -1000, 2283, 961,
	961, 53670, -1000, -1000, 1813, 2471, 234, 55144, 998, 2122,
	-1000, 2085, 2085, 2085, 55144, -1000, -1000, -1000, -1000, -1000,
	-1000, -533, 162, 584, -1000, -1000, -1000, 7822, 53670, 1728,
	-1000, 206, -1000, 1809, -1000, 53670, -1000, 1721, 2007, 53670,
	53670, -1000, -1000, -1000, 53670, 1584, -1000, -1000, -1000, -1000,
	740, 2391, 322, -1000, -1000, -310, -1000, -1000, 214, 206,
	54407, 53670, 897, -1000, -1000, -1000, -1000, -1000, -520, 1714,
	509, 216, 326, 55144, 55144, 55144, 55144, 55144, 55144, 785,
	-1000, -1000, 37, -1000, -1000, 184, -1000, -1000, -1000, -1000,
	-1000, -1000, 184, -1000, -1000, -1000, -1000, -1000, 256, 485,
	-1000, 55144, 55144, 900, -1000, -1000, -1000, -1000, -1000, 1094,
	-1000, -1000, 1094, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2366, 55144, 20, -487, -1000, -484, 21242,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1413, 398, 1655,
	23453, 23453, 4903, 4903, 23453, -1000, -1000, -1000, 1146, 1146,
	33034, -1000, 23453, 21242, -1000, -1000, 21242, 21242, 21242, 978,
	-1000, 21242, 1214, -1000, 21242, -1000, -290, 1511, 1811, 1811,
	1811, 1811, -290, -290, -290, -290, -290, -290, -290, -290,
	-290, -290, 1889, -1000, 21242, 21242, 21242, 1367, 300, -1000,
	-1000, -1000, -290, 21242, -1000, -1000, 2567, -1000, 21242, -1000,
	33034, 21242, 21242, 21242, -1000, -1000, -1000, 21242, 21242, -1000,
	-1000, 21242, -1000, 21242, -1000, -1000, -1000, -1000, -1000, -1000,
	21242, -1000, 21242, -1000, -1000, -1000, 21242, -1000, 21242, -1000,
	-1000, 21242, -1000, 21242, -1000, 21242, -1000, 21242, -1000, 21242,
	-1000, 21242, -1000, 21242, -1000, 21242, -1000, 21242, -1000, 21242,
	-1000, 21242, -1000, 21242, -1000, 21242, -1000, 21242, -1000, 21242,
	-1000, 21242, -1000, 21242, -1000, 21242, -1000, -1000, -1000, 21242,
	-1000, 21242, -1000, 21242, -1000, -1000, 21242, -1000, 21242, -1000,
	21242, -1000, 21242, 21242, -1000, 21242, 21242, 21242, -1000, 21242,
	21242, 21242, 21242, -1000, -1000, -1000, -1000, 21242, 21242, 21242,
	21242, 21242, 21242, 21242, 21242, 21242, 21242, -1000, -1000, -1000,
	-1000, -1000, -1000, 21242, -1000, 38930, 3, -290, 1335, 3,
	1335, 22716, 851, 828, 21979, -1000, 21242, 15334, -1000, -1000,
	-1000, -1000, -1000, 21242, 21242, 21242, 21242, 21242, 21242, -1000,
	-1000, -1000, 21242, 21242, -1000, 21242, -1000, 21242, -1000, -1000,
	-1000, -1000, -1000, 960, -1000, 460, 425, 835, 53670, -1000,
	-1000, -1000, -1000, 1871, -1000, 2494, -1000, 2235, 2201, 2566,
	2551, 20505, -1000, 29349, -1000, -1000, 53670, -438, -1000, 2281,
	2318, 879, 879, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	12362, 2484, 21242, 2121, 54407, 221, -1000, 28612, 53670, 54407,
	29349, 29349, 29349, 29349, 29349, -1000, 2156, 2150, -1000, 2139,
	2138, 2216, 55144, -1000, 1661, 1709, -1000, 21242, 31560, 1841,
	29349, -1000, -1000, 29349, 55144, 11619, -1000, -1000, -9, 5,
	-1000, -1000, -1000, -1000, 1554, -1000, -1000, 1013, 2448, 2297,
	-1000, -1000, -1000, -1000, -1000, 1697, -1000, 1689, 1866, 1678,
	1676, 114, -1000, 2013, 2360, 961, 961, -1000, 1260, -1000,
	1346, 1556, 1545, -1000, -1000, -1000, 504, -1000, 2428, 55144,
	2118, 2113, 2112, -1000, -540, 1249, 2006, 2002, 21242, 1988,
	2525, 1860, 53670, -1000, -1000, 54407, -1000, 273, -1000, 361,
	53670, -1000, -1000, -1000, 299, 55144, -1000, 6105, -1000, -1000,
	-1000, 206, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 55144,
	218, -1000, 1985, 1355, -1000, -1000, 2056, -1000, -1000, -1000,
	-1000, -1000, 198, 195, 1542, 188, 1530, 188, -1000, 55144,
	885, 2130, 55144, -1000, -1000, -1000, 1181, 1181, -1000, -1000,
	2358, -1000, 1346, 1811, 23453, 23453, -1000, 910, -1000, -1000,
	419, -256, 1978, 1978, -1000, 1978, 1983, -1000, 1978, 153,
	1978, 152, 1978, -1000, -1000, 1367, 1367, -1000, 1511, 2323,
	1585, 2928, -1000, 1179, 21242, 2654, -1000, -1000, -290, -290,
	-290, -290, -290, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -78, 2635, 2549, 1811, -1000, 1976, 1975,
	-1000, 1811, 21242, 1811, 1367, 2301, 1811, 1811, 1811, 1811,
	1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 2296, 2291,
	2282, 2278, 2263, 2251, 2213, 2160, 2152, 2092, 2057, 2047,
	2041, 2008, 2003, 1997, 1811, 1811, 1980, 1811, 1943, 1920,
	-1000, 1179, 1511, 2519, 1511, 1811, 1811, 2312, 276, 1811,
	1633, 1633, 1633, 1633, 1633, 1511, 1511, 1511, 1511, 1811,
	53670, -1000, -290, -1000, -1000, -382, -384, -1000, 1367, -290,
	1865, 23453, 1811, 23453, 23453, 23453, 1811, 1367, -1000, 1912,
	1892, 2200, 1839, 1811, 2187, 1811, 1811, 1811, 1818, -1000,
	2463, 1584, 2463, 1584, 2463, 1598, 1352, 55144, -1000, -1000,
	-1000, -1000, 2551, 2517, -1000, 1862, -1000, 80, 658, -1000,
	2277, 2318, -1000, 2522, 2258, 2520, -1000, -1000, -1000, -1000,
	-1000, 1179, -1000, 2408, 1847, -1000, 974, 1875, -1000, -1000,
	19768, 1616, 2195, 811, 1598, 1886, 2704, 2082, 2109, 2184,
	-1000, -1000, -1000, -1000, 2141, -1000, 2140, -1000, -1000, 1958,
	-1000, 1900, 324, 29349, 1834, 1834, -1000, 804, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1099, 6105, 2606, -1000, 1528,
	-1000, 1354, 201, 1243, -1000, -1000, 961, 961, -1000, 1024,
	1020, -1000, 55144, 1974, -1000, 371, 1521, 371, 1241, -1000,
	-1000, 1230, -1000, -1000, -1000, -1000, 1994, 2135, -1000, -1000,
	-1000, -1000, 55144, -1000, -1000, 55144, 55144, 55144, 1964, 2516,
	-1000, 21242, 1963, 962, 2706, 53670, 53670, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 436, 961,
	-501, 264, 254, 961, 961, 961, -541, -1000, -1000, 1581,
	1572, -1000, -221, -1000, 21242, -1000, -1000, -1000, -1000, -1000,
	1296, 1296, 1514, 1503, 1471, -1000, 1958, -1000, -1000, -1000,
	1679, -1000, -1000, -204, 53670, 53670, 53670, 53670, -1000, -1000,
	-1000, 1138, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 910, 1367, 369, -206, 1367, -1000,
	-1000, 371, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 21242, -1000, 21242, -1000, 21242, 1179, 21242, -1000,
	-1000, -1000, -1000, -1000, 2484, 1459, 21242, 21242, -1000, 1210,
	1207, -290, 1811, -1000, -1000, -1000, 21242, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	21242, -1000, 21242, -1000, 21242, -1000, 21242, -1000, 21242, -1000,
	21242, -1000, 21242, -1000, 21242, -1000, 21242, -1000, 21242, -1000,
	21242, -1000, 21242, -1000, 21242, -1000, 21242, -1000, 21242, -1000,
	21242, -1000, -1000, 21242, -1000, -1000, -1000, 21242, -1000, 21242,
	-1000, 21242, -1000, -1000, -1000, 21242, 205, 1146, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1367,
	307, -1000, -1000, -1000, 2557, -1000, 1367, 21242, 4903, -1000,
	4903, 4903, 4903, -1000, -1000, -1000, 21242, -1000, 21242, 21242,
	-1000, 21242, -1000, 21242, -1000, -1000, -1000, -1000, 21242, 1584,
	2314, 38193, 1584, 38193, 1584, 31560, -1000, -1000, 2517, 2546,
	2511, 2243, 2253, 2253, 2277, -1000, 2507, 2504, -1000, 1457,
	2498, 1445, 1015, -1000, 54407, 21242, -1000, 221, 37456, -1000,
	382, 53670, 221, 53670, -1000, 2513, -1000, -1000, 21242, 1962,
	-1000, 21242, -1000, -1000, -1000, -1000, 8668, 2551, 1834, -1000,
	-1000, 923, -1000, 21242, -1000, 9602, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1433, 1427, -1000, -1000, 1961, 21242,
	-1000, -1000, -1000, 1662, 1629, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1958, -1000, -1000, -1000, -1000, 299, -535,
	2666, 53670, 1156, -1000, 1569, 1860, 287, 221, 1424, 961,
	961, 961, 1153, 1150, 37456, 1566, -1000, 53670, 374, -1000,
	299, -1000, -243, -246, 1811, -1000, -1000, 2443, -1000, -1000,
	15334, -1000, -1000, 1954, 2084, -1000, -1000, -1000, -1000, 2158,
	-198, -217, -1000, -1000, 1811, 1811, 1811, 1645, 1367, -1000,
	1811, 1811, 1555, 1540, -1000, -1000, 1811, 1811, 1811, 1811,
	1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
	1811, 1811, 1811, 1811, 1811, 1811, 1511, 1805, -1000, 205,
	1367, 2107, -1000, -1000, 8668, -1000, -1000, 2513, 2492, 3,
	-1000, -1000, 210, 3, 1179, 1010, 1367, 1367, 1010, 1798,
	1811, 1767, 1707, 1811, 1811, 32297, -1000, 2488, 2487, 1562,
	-1000, -1000, 38193, 1562, 38193, 960, 2546, -297, 21242, 21242,
	2192, 1239, -1000, -1000, -1000, -1000, 1421, 1407, -1000, 1400,
	-1000, 2601, -1000, 1179, -1000, 1584, 221, -1000, 799, 1875,
	-1000, 2484, 1179, 53670, 1179, 71, 2513, -1000, 1811, -1000,
	1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584,
	1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584,
	1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584,
	1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584,
	1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584,
	1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584,
	1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584,
	1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584,
	1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584,
	1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584,
	1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584,
	1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584,
	1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584,
	1584, -1000, -1000, 53670, 2585, -1000, -1000, 2441, 1564, 159,
	-1000, 1467, 1860, -1000, -1000, 220, -1000, 21242, -1000, 37456,
	1397, 1393, -1000, -1000, -1000, -1000, -541, -1000, -1000, -1000,
	-1000, -1000, -1000, 390, 1859, -1000, 957, 53670, 55144, -1000,
	2142, -1000, -1000, -1000, -1000, 21242, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 21242, -1000, 1367, 2099, -1000, -376, -1000,
	-505, 21242, -290, -1000, -1000, -290, -1000, -1000, -1000, -1000,
	-1000, 21242, -1000, -1000, 21242, -1000, 21242, -1000, -1000, 1562,
	-1000, -1000, -1000, 36719, -1000, 1562, -1000, 1562, -1000, -297,
	-1000, 1855, -1000, 53670, 1179, 366, -1000, 1177, -1000, -1000,
	-1000, -1000, -1000, 54407, 53670, 1875, 53670, -1000, -1000, 1539,
	1367, 1584, 2484, -1000, 1534, -1000, 390, -1000, 1946, 2002,
	-1000, -1000, -1000, 19031, -1000, -1000, -1000, -1000, -1000, 253,
	-202, 15334, 10876, 1513, -1000, -201, 1811, 1511, -1000, -476,
	-1000, -1000, -1000, -1000, 290, -1000, -1000, 1850, -1000, -1000,
	1462, 1451, 1387, -1000, -1000, -1000, -1000, -1000, -1000, -297,
	-1000, -1000, 2437, -1000, -248, -1000, -1000, 1849, 1490, -1000,
	-1000, -1000, 31560, 52933, -1000, -179, 323, -202, 21242, 1940,
	1367, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -47,
	-1000, -1000, 796, -1000, -1000, -1000, 2056, -209, -1000, -1000,
	-1000, 311, -490, -293, -294, 23453, -1000, 21242, -1000, 21242,
	-1000, 21242, -1000, 53670, 1584, -1000, -1000, -1000, 1453, -1000,
	4082, -396, 2097, -1000, -145, -1000, -1000, -1000, 1087, 1369,
	-1000, -1000, -1000, -1000, -1000, -1000, 2486, 53670, -1000, 403,
	-1000, -1000, 14591, -204, -219, 1002, -1000, -1000, -1000, -1000,
	-1000, 4903, 1366, 1264, 1811, -1000, 53670, -1000, 52933, -389,
	897, 8668, -1000, 2096, 2094, 2563, -1000, -1000, -1000, -1000,
	-1000, -1000, -543, 1449, 237, -1000, -1000, -1000, 311, -295,
	-1000, 21242, -1000, 21242, -1000, 1367, -1000, -1000, 2425, 71,
	-1000, 2587, -1000, 2573, 1059, 1059, -1000, 1133, -543, -1000,
	-1000, -1000, -1000, 1811, 1811, -1000, -397, -1000, -1000, -1000,
	-1000, -1000, 378, 1199, -1000, -1000, -1000, -1000, -1000, 8668,
	-1000, -1000, -1000, 228, 228, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3216, 3215, 27, 7, 41, 40, 3214, 3213, 3212,
	177, 3211, 3210, 3207, 3205, 3203, 3202, 2662, 2653, 2649,
	3201, 3194, 3193, 3191, 3189, 3185, 3181, 3179, 3178, 28,
	94, 35, 108, 214, 198, 3177, 171, 164, 195, 3175,
	3171, 3170, 115, 189, 77, 83, 190, 3168, 3167, 65,
	3166, 3165, 3164, 186, 185, 181, 1102, 3163, 179, 105,
	47, 3162, 3161, 3158, 3155, 3150, 3149, 3148, 3145, 3143,
	3142, 3140, 3139, 3138, 3137, 3136, 3135, 3134, 3133, 299,
	3132, 3131, 16, 3130, 73, 3129, 3127, 3126, 3125, 3118,
	8, 3117, 3111, 32, 45, 60, 3106, 3104, 44, 3100,
	3099, 3098, 3092, 3091, 79, 3087, 14, 3079, 42, 3078,
	3076, 127, 3075, 3071, 3069, 43, 3068, 3067, 3066, 11,
	172, 3065, 3061, 140, 3060, 3056, 3053, 173, 223, 3051,
	2229, 3044, 100, 3041, 3037, 3035, 165, 192, 3034, 124,
	3033, 3031, 3030, 150, 3029, 3287, 3026, 3023, 67, 75,
	254, 3022, 3019, 201, 74, 9, 3010, 22, 23, 3006,
	3004, 70, 68, 3001, 109, 2999, 2998, 101, 89, 2997,
	95, 99, 2992, 2991, 10, 5, 2989, 1, 4, 2,
	110, 2988, 2975, 114, 2974, 2973, 2971, 93, 2967, 2966,
	6355, 2964, 90, 134, 111, 64, 2961, 169, 143, 2958,
	2957, 2954, 2953, 2938, 2935, 49, 2934, 2933, 2926, 138,
	1274, 116, 2924, 145, 362, 53, 147, 2921, 210, 81,
	197, 166, 2915, 2914, 137, 132, 2911, 2907, 55, 167,
	337, 2906, 92, 131, 118, 183, 85, 133, 2905, 2903,
	58, 62, 2902, 2895, 2891, 2886, 170, 2880, 2872, 63,
	2869, 56, 2864, 168, 2862, 339, 82, 2859, 180, 162,
	2856, 66, 2855, 2851, 96, 98, 61, 29, 2849, 157,
	160, 129, 184, 2846, 2845, 54, 2840, 2838, 2833, 194,
	321, 2832, 2822, 376, 175, 144, 151, 84, 2819, 324,
	2817, 2810, 19, 4501, 6727, 187, 17, 163, 2807, 2799,
	1063, 48, 51, 13, 2797, 208, 2792, 191, 2791, 2778,
	2776, 193, 205, 103, 158, 57, 2775, 2774, 2771, 2770,
	71, 2767, 2766, 2761, 2760, 2759, 2758, 39, 37, 36,
	69, 209, 59, 25, 97, 159, 154, 72, 2757, 2754,
	2753, 120, 91, 2752, 156, 155, 125, 104, 2745, 178,
	146, 126, 2744, 106, 34, 2743, 2741, 2738, 2736, 87,
	2735, 2729, 2728, 2725, 153, 148, 119, 80, 2712, 76,
	113, 152, 149, 52, 2711, 46, 2709, 2708, 33, 188,
	30, 2705, 21, 112, 117, 2699, 5799, 2698, 12, 338,
	161, 2697, 2693, 15, 18, 6, 2686, 2685, 2679, 2678,
	136, 2677, 2672, 2661, 2655, 26, 50, 24, 20, 102,
	139, 78, 2643, 2642, 141, 2631, 2630, 2629, 0, 1041,
	130, 2624, 199,
}

//line sql.y:8723
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) groupByUnion() *GroupBy {
	v, _ := st.union.(*GroupBy)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) intPtrUnion() *int {
	v, _ := st.union.(*int)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalType {
	v, _ := st.union.(IntervalType)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) killTypeUnion() KillType {
	v, _ := st.union.(KillType)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) rowAliasUnion() *RowAlias {
	v, _ := st.union.(*RowAlias)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 416, 417, 417, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 261, 386, 259, 259, 28, 74, 36, 36, 35,
	35, 38, 38, 37, 31, 31, 31, 32, 32, 32,
	32, 32, 32, 32, 32, 33, 33, 33, 33, 33,
	29, 29, 29, 29, 30, 30, 30, 30, 30, 15,
	16, 34, 34, 17, 17, 109, 109, 18, 19, 19,
	19, 19, 420, 420, 185, 185, 183, 183, 184, 184,
	264, 264, 20, 268, 268, 270, 270, 270, 270, 260,
	260, 260, 21, 21, 269, 269, 271, 271, 271, 274,
	274, 274, 274, 314, 314, 314, 22, 22, 22, 22,
	22, 129, 129, 388, 388, 387, 382, 382, 381, 381,
	380, 385, 385, 384, 384, 383, 40, 41, 50, 50,
	50, 50, 51, 52, 389, 389, 355, 57, 57, 56,
	56, 56, 56, 56, 56, 58, 58, 54, 54, 53,
	53, 55, 55, 357, 357, 343, 343, 356, 356, 356,
	356, 356, 356, 356, 342, 342, 140, 140, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 404, 404, 404, 403, 403,
	239, 239, 239, 239, 239, 239, 239, 239, 149, 149,
	161, 161, 161, 161, 161, 161, 147, 147, 148, 146,
	146, 146, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 408,
	408, 408, 408, 408, 408, 408, 408, 408, 408, 408,
	408, 408, 408, 408, 408, 408, 408, 408, 408, 408,
	408, 408, 408, 408, 408, 408, 408, 408, 408, 408,
	408, 408, 408, 408, 408, 408, 408, 408, 408, 408,
	408, 160, 160, 155, 155, 155, 157, 157, 156, 156,
	156, 158, 158, 405, 405, 405, 405, 320, 320, 320,
	320, 323, 323, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 322, 322, 322, 322, 322, 322, 322, 324,
	324, 324, 324, 324, 325, 325, 325, 325, 325, 325,
	325, 325, 325, 325, 325, 325, 325, 325, 325, 325,
	326, 326, 326, 326, 326, 326, 326, 326, 341, 341,
	330, 330, 335, 335, 336, 336, 337, 337, 337, 338,
	338, 338, 339, 339, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 334, 334, 333, 333, 333, 344, 369,
	369, 368, 368, 366, 366, 366, 366, 366, 366, 366,
	366, 353, 353, 363, 363, 363, 363, 363, 352, 352,
	348, 348, 348, 349, 349, 350, 350, 347, 347, 351,
	351, 365, 365, 364, 364, 345, 345, 346, 346, 371,
	406, 406, 406, 406, 406, 407, 407, 372, 396, 398,
	398, 398, 397, 397, 394, 395, 393, 393, 393, 393,
	393, 84, 84, 84, 287, 287, 288, 288, 361, 361,
	360, 360, 360, 362, 362, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 282, 282, 282, 392,
	392, 392, 392, 392, 392, 391, 391, 391, 358, 358,
	358, 358, 390, 390, 59, 59, 219, 219, 409, 409,
	411, 411, 411, 47, 47, 47, 47, 47, 47, 46,
	46, 46, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 48, 48, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 111, 111,
	112, 112, 112, 112, 114, 114, 114, 374, 374, 60,
	60, 3, 3, 173, 175, 176, 176, 174, 174, 174,
	174, 174, 174, 62, 62, 61, 61, 178, 177, 179,
	179, 179, 1, 1, 2, 2, 4, 4, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	340, 340, 340, 373, 373, 375, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 117, 116, 116, 115,
	118, 118, 118, 118, 118, 118, 118, 118, 377, 377,
	377, 63, 63, 378, 327, 328, 329, 5, 6, 354,
	376, 125, 125, 24, 39, 39, 25, 25, 25, 25,
	26, 26, 64, 67, 67, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 281, 281,
	290, 290, 280, 280, 305, 305, 305, 283, 283, 283,
	284, 284, 402, 402, 402, 277, 277, 66, 66, 66,
	306, 306, 306, 306, 69, 69, 412, 412, 413, 413,
	414, 414, 414, 70, 71, 71, 309, 309, 310, 310,
	72, 73, 85, 85, 85, 85, 85, 86, 86, 86,
	86, 110, 110, 110, 10, 10, 10, 10, 81, 81,
	81, 9, 9, 11, 68, 68, 75, 399, 399, 400,
	401, 401, 401, 401, 76, 78, 27, 27, 27, 27,
	27, 27, 135, 135, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 130, 130, 130, 124,
	124, 421, 79, 80, 80, 128, 128, 128, 121, 121,
	121, 127, 127, 127, 12, 12, 13, 263, 263, 14,
	14, 134, 134, 133, 133, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 131, 131, 132, 132,
	132, 132, 298, 298, 298, 297, 297, 167, 167, 169,
	168, 168, 170, 170, 171, 171, 171, 171, 217, 217,
	193, 193, 256, 256, 257, 257, 255, 255, 262, 262,
	258, 258, 258, 258, 265, 265, 172, 172, 172, 172,
	180, 180, 181, 181, 182, 182, 308, 308, 303, 303,
	303, 302, 302, 186, 186, 186, 188, 187, 187, 187,
	187, 189, 189, 191, 191, 190, 190, 192, 197, 197,
	196, 196, 194, 194, 194, 194, 194, 194, 195, 195,
	195, 195, 198, 198, 145, 145, 145, 145, 145, 145,
	145, 145, 410, 410, 159, 159, 159, 159, 159, 159,
	159, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 246, 246, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 222, 222, 221, 221, 87, 87,
	87, 88, 88, 89, 89, 89, 89, 89, 90, 90,
	90, 90, 90, 90, 90, 92, 92, 91, 91, 212,
	212, 295, 295, 93, 94, 94, 95, 95, 98, 98,
	97, 96, 96, 102, 102, 99, 99, 101, 101, 100,
	103, 103, 104, 105, 105, 278, 278, 199, 199, 208,
	208, 208, 208, 200, 200, 201, 201, 201, 201, 201,
	201, 209, 209, 209, 216, 210, 210, 206, 206, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 164, 164, 164, 164, 227, 227, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 152, 152, 165, 165, 165, 165,
	166, 166, 166, 166, 166, 166, 166, 316, 316, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 422, 422, 331,
	331, 331, 207, 207, 207, 207, 207, 126, 126, 126,
	126, 126, 313, 313, 313, 317, 317, 317, 315, 315,
	315, 315, 315, 315, 315, 315, 315, 315, 315, 315,
	315, 315, 315, 318, 318, 225, 225, 122, 122, 223,
	223, 224, 226, 226, 218, 218, 218, 218, 220, 220,
	203, 203, 203, 228, 228, 319, 319, 229, 229, 106,
	107, 107, 108, 108, 230, 230, 232, 231, 231, 233,
	234, 234, 234, 235, 235, 236, 236, 236, 49, 49,
	49, 49, 49, 44, 44, 44, 44, 45, 45, 45,
	45, 137, 137, 137, 137, 139, 139, 138, 138, 82,
	82, 83, 83, 83, 143, 143, 144, 144, 144, 141,
	141, 142, 142, 253, 253, 253, 253, 253, 253, 253,
	237, 237, 237, 244, 244, 244, 240, 240, 242, 242,
	242, 243, 243, 243, 241, 250, 250, 252, 252, 251,
	251, 247, 247, 248, 248, 249, 249, 249, 245, 245,
	202, 202, 202, 202, 202, 254, 254, 254, 254, 307,
	307, 307, 266, 266, 213, 213, 215, 215, 214, 214,
	163, 267, 267, 275, 272, 272, 273, 273, 299, 299,
	299, 276, 276, 289, 289, 285, 285, 286, 286, 279,
	279, 291, 291, 291, 77, 211, 211, 370, 370, 367,
	294, 294, 296, 296, 300, 300, 304, 304, 301, 301,
	8, 415, 415, 415, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	418, 419, 311, 312, 312, 312,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 1, 2, 3, 2, 3, 0,
	1, 3, 1, 4, 3, 3, 4, 3, 2, 3,
	4, 3, 4, 2, 7, 1, 3, 3, 3, 3,
	1, 2, 1, 1, 3, 2, 3, 3, 2, 5,
	7, 10, 9, 7, 8, 1, 1, 10, 11, 9,
	8, 8, 1, 1, 1, 3, 1, 3, 1, 3,
	0, 4, 3, 1, 3, 3, 3, 3, 3, 1,
	1, 2, 5, 4, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 2, 2, 6, 12,
	2, 0, 2, 0, 2, 1, 0, 2, 1, 3,
	3, 0, 1, 1, 3, 3, 6, 4, 7, 8,
	8, 8, 6, 3, 1, 1, 5, 0, 1, 1,
	1, 1, 2, 2, 2, 0, 1, 4, 4, 4,
	4, 4, 4, 2, 4, 1, 3, 1, 1, 3,
	4, 3, 3, 3, 5, 10, 0, 2, 0, 2,
	3, 5, 3, 4, 2, 3, 2, 3, 3, 3,
	3, 2, 2, 4, 4, 1, 1, 1, 1, 1,
	0, 2, 2, 3, 3, 2, 2, 2, 1, 1,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 5, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 5, 1, 3, 0, 3, 5, 0,
	1, 1, 0, 1, 0, 3, 3, 2, 2, 2,
	1, 2, 2, 0, 1, 0, 2, 2, 5, 0,
	1, 1, 2, 1, 3, 2, 1, 1, 3, 3,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 4, 3, 1, 3, 1, 7,
	6, 7, 7, 8, 8, 0, 1, 5, 2, 1,
	1, 1, 0, 1, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 1, 1, 2, 0, 1, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	1, 1, 0, 1, 0, 1, 0, 2, 0, 2,
	0, 2, 2, 0, 1, 5, 1, 3, 7, 1,
	3, 3, 1, 2, 2, 2, 5, 5, 5, 6,
	8, 5, 5, 4, 4, 4, 6, 5, 5, 5,
	2, 2, 2, 2, 3, 3, 3, 4, 3, 3,
	1, 3, 5, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 3, 4, 4, 2, 11,
	3, 6, 8, 6, 6, 6, 13, 8, 6, 6,
	10, 7, 5, 5, 5, 5, 7, 5, 5, 5,
	5, 5, 7, 7, 5, 5, 5, 5, 0, 6,
	5, 6, 4, 5, 0, 8, 9, 0, 3, 0,
	1, 0, 3, 8, 4, 1, 3, 3, 6, 7,
	7, 8, 4, 0, 1, 0, 1, 3, 3, 1,
	1, 2, 1, 1, 0, 2, 0, 2, 5, 3,
	7, 4, 4, 4, 4, 3, 3, 3, 7, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	0, 2, 2, 1, 3, 2, 0, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 1, 3, 3,
	0, 2, 2, 2, 2, 2, 2, 2, 4, 4,
	3, 0, 1, 4, 3, 4, 4, 3, 3, 3,
	2, 1, 3, 3, 3, 5, 7, 7, 6, 5,
	3, 2, 4, 5, 5, 3, 3, 7, 3, 3,
	3, 3, 4, 7, 5, 2, 4, 4, 4, 4,
	4, 5, 5, 4, 4, 4, 4, 4, 4, 4,
	4, 2, 2, 4, 4, 4, 4, 4, 2, 3,
	3, 3, 3, 3, 5, 2, 3, 3, 2, 3,
	4, 4, 4, 3, 4, 4, 5, 3, 0, 1,
	0, 1, 1, 1, 0, 2, 2, 0, 2, 2,
	0, 2, 0, 1, 1, 1, 1, 2, 1, 3,
	1, 1, 1, 1, 1, 3, 0, 1, 1, 3,
	3, 2, 2, 1, 1, 5, 0, 1, 0, 1,
	2, 3, 0, 3, 3, 3, 1, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 4, 4, 4, 2, 2, 3, 1, 3, 2,
	1, 2, 1, 2, 2, 4, 3, 3, 6, 4,
	7, 6, 1, 3, 2, 2, 2, 2, 1, 1,
	1, 3, 2, 1, 1, 1, 0, 1, 1, 0,
	3, 0, 2, 0, 2, 1, 2, 2, 0, 1,
	1, 0, 1, 1, 5, 5, 4, 0, 2, 4,
	4, 0, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 2,
	3, 5, 0, 1, 2, 1, 1, 0, 1, 2,
	1, 3, 1, 1, 1, 4, 3, 1, 1, 2,
	3, 7, 0, 3, 0, 1, 1, 3, 1, 3,
	1, 1, 3, 3, 1, 3, 4, 4, 4, 3,
	2, 4, 0, 1, 0, 2, 0, 1, 0, 1,
	2, 1, 1, 1, 2, 2, 1, 2, 3, 2,
	3, 2, 2, 2, 1, 1, 3, 3, 0, 1,
	1, 2, 6, 5, 6, 6, 5, 5, 0, 2,
	3, 3, 0, 2, 3, 3, 3, 2, 3, 1,
	3, 6, 1, 1, 3, 4, 3, 4, 4, 4,
	1, 3, 4, 5, 6, 3, 4, 5, 6, 3,
	4, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	5, 5, 3, 3, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 3, 1, 1, 1, 2, 2, 2,
	2, 1, 1, 2, 7, 7, 6, 6, 2, 2,
	5, 6, 3, 3, 1, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 4, 2, 4, 0, 1, 2, 5, 0,
	3, 0, 1, 4, 4, 2, 1, 0, 0, 1,
	1, 2, 2, 1, 1, 2, 2, 0, 1, 1,
	1, 1, 5, 1, 3, 0, 3, 1, 1, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 6, 4,
	4, 8, 8, 6, 8, 6, 5, 4, 10, 2,
	2, 1, 2, 2, 2, 2, 2, 5, 6, 6,
	6, 6, 6, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 8, 4, 8, 8, 6, 5, 4,
	4, 4, 5, 7, 4, 4, 7, 4, 4, 6,
	6, 6, 8, 6, 6, 4, 4, 3, 4, 6,
	6, 4, 4, 6, 4, 6, 4, 4, 4, 4,
	4, 4, 6, 4, 6, 4, 4, 4, 6, 4,
	6, 4, 4, 6, 4, 6, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 4, 4, 6, 4, 6,
	4, 8, 6, 4, 4, 6, 4, 6, 8, 4,
	6, 8, 4, 4, 6, 8, 6, 4, 6, 6,
	8, 10, 7, 8, 8, 9, 4, 4, 4, 4,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	4, 4, 4, 4, 4, 4, 6, 4, 6, 5,
	9, 6, 9, 8, 6, 8, 8, 8, 6, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 6,
	8, 10, 12, 14, 6, 8, 8, 10, 12, 14,
	6, 8, 10, 12, 6, 8, 4, 4, 3, 4,
	6, 6, 4, 6, 4, 6, 8, 0, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 0,
	2, 3, 4, 4, 4, 4, 4, 0, 3, 4,
	7, 3, 1, 1, 1, 0, 5, 5, 2, 3,
	1, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	2, 1, 1, 0, 1, 0, 1, 0, 2, 1,
	2, 4, 0, 2, 1, 1, 3, 5, 1, 1,
	1, 2, 2, 0, 4, 0, 2, 0, 2, 2,
	1, 3, 0, 1, 0, 1, 3, 1, 3, 2,
	0, 1, 1, 0, 1, 2, 4, 4, 0, 2,
	2, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 0, 3, 3, 3, 0, 3, 1, 1, 0,
	4, 0, 1, 1, 0, 3, 1, 3, 2, 1,
	1, 0, 1, 2, 3, 4, 2, 3, 4, 4,
	9, 3, 5, 0, 3, 3, 0, 1, 0, 2,
	2, 0, 2, 2, 2, 0, 2, 1, 2, 3,
	3, 0, 2, 1, 2, 3, 4, 3, 0, 1,
	3, 1, 6, 5, 4, 1, 3, 3, 5, 0,
	2, 5, 0, 5, 1, 3, 1, 2, 3, 4,
	1, 1, 3, 3, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 0, 2, 0, 3, 0,
	1, 0, 1, 1, 5, 0, 1, 0, 1, 2,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -416, -79, -421, -7, -29, -15, -16, -17, -18,
	-19, -20, -21, -22, -23, -24, -25, -26, -64, -67,
	-65, -66, -69, -70, -71, -72, -73, -9, -11, -68,
	-27, -28, -74, -75, -76, -77, -78, -12, -13, -14,
	-8, -32, -31, -30, 13, 14, -109, -35, 35, -40,
	-50, 239, -51, -41, 240, -52, 242, 241, 279, 243,
	392, 272, 83, 328, 329, 331, 332, 333, 334, -110,
	699, 277, 278, 245, 39, 51, 36, 37, 40, 249,
	285, 286, 248, 145, -33, -36, 12, -418, 15, 482,
	274, 273, 31, -34, 592, 95, -80, -417, 747, -253,
	-237, 26, 36, 32, -236, -232, -128, -237, 24, 22,
	11, -79, -79, -79, 16, 17, -79, -355, -357, 95,
	172, 95, -79, -57, -56, -54, -53, -55, -58, 34,
	-47, -48, -379, -46, -43, 244, 241, 289, 135, 136,
	279, 280, 281, 243, 263, 278, 282, 277, 298, -42,
	90, 36, 592, 595, -362, 240, 246, 247, 242, 483,
	138, 137, 84, -359, 387, 626, 717, -58, 719, 110,
	113, 718, 50, 253, 720, 721, 722, 633, 723, 262,
	724, 725, 726, 727, 733, 674, 734, 735, 736, 139,
	11, -79, -304, -300, 100, -293, 589, 265, 624, 436,
	625, 314, 90, 47, 42, 528, 599, 384, 387, 626,
	513, 717, 393, 328, 344, 338, 518, 519, 520, 367,
	359, 590, 627, 600, 317, 266, 302, 711, 357, 148,
	719, 321, 628, 280, 394, 395, 629, 396, 110, 331,
	433, 732, 320, 630, 730, 113, 718, 336, 88, 512,
	57, 714, 50, 275, 441, 442, 355, 248, 351, 720,
	303, 631, 602, 296, 138, 135, 739, 39, 347, 56,
	33, 729, 137, 55, 721, 163, 632, 722, 633, 398,
	374, 705, 54, 399, 281, 634, 93, 286, 594, 325,
	713, 400, 533, 348, 401, 313, 728, 245, 635, 324,
	694, 686, 687, 402, 403, 706, 379, 375, 380, 535,
	636, 425, 517, 404, 690, 691, 746, 58, 637, 638,
	707, 136, 639, 87, 723, 89, 342, 343, 640, 311,
	264, 538, 539, 427, 371, 495, 127, 502, 503, 120,
	121, 498, 122, 504, 123, 128, 505, 506, 507, 496,
	124, 117, 497, 508, 509, 372, 373, 125, 510, 119,
	118, 499, 501, 126, 511, 262, 38, 405, 591, 315,
	64, 319, 290, 428, 52, 377, 743, 51, 701, 540,
	641, 704, 370, 366, 492, 59, 642, 643, 644, 645,
	514, 724, 369, 341, 365, 738, 4, 308, 487, 515,
	725, 68, 247, 382, 381, 383, 297, 424, 362, 646,
	647, 648, 269, 91, 649, 352, 25, 650, 651, 406,
	304, 652, 62, 653, 654, 431, 278, 655, 60, 726,
	45, 656, 283, 740, 727, 657, 658, 659, 700, 660,
	285, 661, 408, 662, 688, 689, 407, 376, 378, 541,
	292, 409, 392, 250, 593, 663, 326, 346, 282, 731,
	664, 270, 529, 530, 531, 532, 712, 537, 536, 284,
	289, 277, 432, 271, 665, 666, 667, 668, 669, 318,
	685, 670, 671, 332, 597, 733, 493, 49, 672, 673,
	674, 675, 676, 312, 307, 426, 435, 67, 92, 389,
	677, 678, 710, 340, 337, 43, 305, 99, 473, 475,
	476, 477, 478, 479, 474, 481, 679, 329, 61, 734,
	735, 736, 299, 737, 521, 522, 523, 524, 13, 575,
	558, 586, 559, 576, 560, 569, 561, 577, 585, 587,
	542, 550, 543, 551, 581, 564, 578, 570, 563, 562,
	584, 567, 571, 544, 552, 582, 568, 545, 553, 546,
	554, 547, 555, 580, 579, 572, 583, 548, 556, 574,
	549, 557, 573, 565, 566, 444, 744, 745, 516, 411,
	139, 309, 310, 53, 363, 291, 680, 322, 681, 353,
	354, 489, 490, 368, 339, 364, 697, 330, 695, 293,
	412, 494, 279, 682, 434, 306, 385, 131, 390, 323,
	598, 534, 298, 413, 709, 596, 525, 526, 361, 358,
	300, 527, 683, 699, 414, 254, 294, 295, 684, 696,
	415, 416, 316, 417, 418, 419, 420, 421, 423, 327,
	422, 698, 692, 693, 301, 472, 595, 335, 356, 391,
	454, 455, 456, 457, 458, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 491, 252,
	-79, 252, -190, -300, -130, 701, 703, 191, -272, 395,
	-290, 397, 410, 405, 415, 403, -281, 406, 408, 292,
	-402, 425, 252, 412, 239, 398, 407, 416, 417, 316,
	423, 418, 327, 422, 301, 419, 420, 421, -386, 191,
	722, 737, 148, 360, 402, 400, 426, 701, 100, -306,
	100, 101, 102, -293, 330, -309, 335, -294, -386, -293,
	333, -79, -79, -311, -311, -130, -210, -145, 156, -159,
	-261, -162, 101, -150, -153, -204, -205, -206, -207, -160,
	-220, -259, 180, 181, 188, 157, -216, -163, 29, 588,
	484, 483, 191, 34, 234, 77, 78, 486, 487, 159,
	63, 15, 449, 450, -161, 439, 440, 451, 445, 446,
	512, 514, 515, 516, 513, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 517, 528, 489, 490, 129,
	491, 117, 119, 118, 127, 128, 492, 493, 494, 357,
	540, 541, 535, 538, 539, 537, 536, 372, 373, 495,
	558, 559, 563, 562, 560, 561, 564, 567, 568, 569,
	570, 571, 572, 574, 573, 565, 566, 543, 542, 544,
	545, 546, 547, 548, 549, 551, 550, 552, 553, 554,
	555, 556, 557, 575, 576, 577, 578, 579, 581, 580,
	585, 584, 582, 583, 587, 586, 496, 497, 120, 121,
	122, 123, 124, 125, 126, 498, 501, 499, 500, 502,
	503, 504, 509, 510, 505, 506, 507, 508, 511, 383,
	381, 382, 378, 377, 376, -89, -102, 615, 614, -103,
	436, 441, 442, 444, -151, -152, -165, -166, -294, -300,
	257, 438, 251, 186, 482, -154, -148, -218, 116, 102,
	-31, -214, 437, 447, 448, 452, 443, 453, 601, 603,
	618, 619, 621, 606, 611, 610, 613, 529, 530, 531,
	532, 533, 534, 686, 687, 688, 689, 690, 691, 692,
	693, -386, -293, 100, -157, -155, -199, 103, 108, 111,
	112, 114, -408, 275, 353, 354, 130, -418, 715, -156,
	105, 106, 107, 132, 133, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 232, 233, 98, 104, 50,
	411, 411, -190, -79, -79, -79, -79, -415, 718, 593,
	-230, -128, -232, -33, -31, -418, 12, -79, -31, -32,
	-30, -36, -38, 620, -37, -300, 109, -237, -253, 16,
	67, 175, 48, 56, -235, -236, -34, -31, -145, 23,
	41, 27, -132, 182, -145, -300, -132, -279, 256, -79,
	-79, -268, -314, 330, -270, 426, 701, 425, -260, -273,
	100, -259, -272, 424, 101, -356, 172, -342, -346, -294,
	267, -372, 263, -190, -365, -364, -294, -418, -129, -289,
	253, 261, 260, 149, -389, 152, 309, 438, 251, -53,
	-54, -55, -272, 190, 721, -111, 284, 288, 96, 96,
	-346, -345, -344, -390, 288, 267, -371, -363, 259, 268,
	-352, 260, 261, -347, 253, 150, -390, -347, 258, 268,
	263, 267, 288, 288, 139, 288, 139, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 283, -353, 164, -353,
	596, 596, -359, -390, 263, 253, -390, -390, 259, -291,
	-347, 255, 28, 255, 38, 38, -353, -353, -353, -272,
	190, -353, -353, -353, -353, 296, 296, -353, -353, -353,
	-353, -353, -353, -353, -353, -353, -353, -353, -353, -353,
	-353, -353, -353, -353, 252, -389, -137, 422, 316, 90,
	-56, 298, -39, -190, -289, 253, 254, -389, 285, -190,
	235, 252, 704, -283, 172, 19, -283, -280, 411, 409,
	396, 401, -283, -283, -283, -283, 299, 394, -348, 253,
	38, 264, 411, 299, 394, 299, 300, 299, 300, 404,
	414, 299, -305, 18, 175, 438, 399, 403, 292, 252,
	293, 254, 413, 300, -305, 98, -284, 172, 299, 411,
	405, 295, -283, -283, -312, -418, -296, -294, -292, 244,
	41, 155, 28, 30, 158, 191, 142, 23, 159, 40,
	246, 360, 263, 190, 259, 483, 239, 81, 601, 439,
	446, 437, 445, 449, 485, 486, 438, 397, 34, 17,
	603, 31, 273, 27, 44, 184, 241, 162, 604, 276,
	29, 274, 129, 133, 606, 26, 84, 268, 18, 261,
	46, 20, 607, 608, 21, 74, 257, 256, 175, 253,
	79, 15, 234, 32, 171, 75, 609, 150, 145, 610,
	611, 612, 613, 143, 77, 172, 24, 741, 447, 448,
	36, 702, 588, 287, 186, 82, 65, 703, 156, 443,
	614, 615, 130, 616, 134, 85, 708, 152, 22, 80,
	48, 617, 288, 618, 258, 742, 619, 429, 620, 173,
	242, 482, 78, 174, 715, 621, 716, 251, 410, 12,
	488, 35, 272, 260, 73, 72, 141, 76, 453, 622,
	252, 161, 255, 144, 132, 11, 149, 37, 16, 83,
	86, 450, 451, 452, 63, 140, 592, 160, 19, 623,
	430, 154, -386, 704, -312, -312, 35, 101, -412, -413,
	-414, 592, 429, 255, -294, -190, -85, 694, 243, -86,
	700, 41, 250, -135, 411, -123, 191, 722, 705, 706,
	707, 704, 408, 712, 710, 708, 299, 709, 96, 152,
	154, 155, 4, -145, 171, -200, -201, 170, 164, 165,
	166, 167, 168, 169, 176, 175, 156, 158, 172, -246,
	153, 177, 178, 179, 180, 181, 182, 183, 185, 184,
	186, 187, 173, 174, 190, 237, 238, -153, -153, -153,
	-153, -216, -222, -221, -418, -218, -386, -293, -300, -418,
	-418, -153, -278, -418, -150, -418, -418, -418, -418, -418,
	-225, -145, -418, -418, -422, -418, -422, -422, -422, -331,
	-418, -331, -331, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, 235, -418,
	-418, -418, -418, -418, -331, -331, -331, -331, -331, -331,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, 98, 112, 108, 111, 103, -220,
	114, 98, 98, 98, 98, -31, -32, -210, -418, -311,
	-399, -400, -193, -190, -418, 316, -294, -294, 285, 105,
	-235, -34, -31, -230, -236, -232, -31, -79, -121, -134,
	69, 70, -133, -136, 27, 44, 74, 76, 99, 72,
	73, 71, 41, -419, 97, -419, -253, -419, 96, -38,
	-256, 95, 648, 678, 648, 678, 67, 49, 98, 98,
	96, 25, -231, -233, -145, 18, -298, 4, -297, 28,
	-294, 98, 235, 18, -191, 32, -190, -279, -279, 96,
	100, 330, -269, -271, 427, 429, 164, -299, -294, 98,
	34, 97, 96, -190, -320, -323, -325, -324, -326, -321,
	-322, 357, 358, 191, 361, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 374, 35, 275, 353, 354, 355,
	356, 375, 376, 377, 378, 380, 381, 382, 383, 338,
	359, 590, 339, 340, 341, 342, 343, 344, 346, 347,
	350, 348, 349, 351, 352, -295, -294, 95, 97, 96,
	-330, 95, -145, -137, 252, -294, 253, 253, 253, -79,
	482, -353, -353, -353, 283, 23, -46, -43, -379, 22,
	-42, -43, 244, 135, 136, 241, 95, -342, 95, -351,
	-295, -294, 95, 150, 258, 149, -350, -347, -350, -351,
	-294, -218, -294, 150, 150, -294, -294, -265, -294, -265,
	-265, 41, -265, 41, -265, 41, 105, -294, -265, 41,
	-265, 41, -265, 41, -265, 41, -265, 41, 34, 87,
	88, 89, 34, 91, 92, 93, -218, -294, -294, -218,
	-342, -218, -190, -294, -272, 105, 105, 105, -353, -353,
	105, 98, 98, 98, -353, -353, 105, 98, -302, -300,
	98, 98, -391, 269, 313, 315, 105, 105, 105, 105,
	34, 98, -392, 34, 729, 728, 730, 731, 732, 98,
	105, 34, 105, 34, 105, -294, 95, -190, -143, 303,
	239, 241, 244, 85, 98, 321, 319, 320, 317, 322,
	323, 324, 164, 50, 96, 255, 252, -294, -285, 257,
	-285, -294, -301, -300, -292, -190, 255, 393, 98, -145,
	-349, 18, 175, -305, -305, -283, -190, -349, -305, -283,
	-190, -283, -283, -283, -283, -305, -305, -305, -283, -300,
	-300, -190, -190, -190, -190, -190, -190, -190, -312, -284,
	-283, 704, 98, -277, 18, 85, -312, -312, 96, 336,
	430, 431, -310, 333, -81, -294, 98, -10, -29, -18,
	-17, -19, 164, -10, 96, 592, -183, -190, 704, 704,
	704, 704, 704, 704, -145, -145, -145, -145, 616, -208,
	-410, 156, 132, 133, 130, 131, -162, 42, 43, 41,
	-145, -209, -214, -216, 115, 175, 158, 172, -246, -150,
	-153, -150, -150, -150, -150, -150, -150, 234, -150, 234,
	-150, -150, -150, -150, -150, -150, -313, -294, 98, 191,
	-158, -157, 114, -408, -158, 589, 96, -221, 235, -145,
	-145, -386, -119, 455, 456, 457, 458, 460, 461, 462,
	465, 466, 470, 471, 454, 472, 459, 464, 467, 468,
	469, 463, 356, -145, -211, -210, -211, -145, -145, -223,
	-224, 160, -218, -145, -419, -419, 105, 182, -127, 27,
	44, -127, -127, -127, -127, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -127, -145, -120, 454, 472,
	459, 464, 467, 468, 469, 463, 356, 473, 474, 475,
	476, 477, 478, 479, 480, 481, -120, -119, -145, -145,
	-145, -145, -145, -145, -145, -145, -87, -145, 142, 143,
	144, -210, -145, -150, -145, -145, -145, -419, -145, -145,
	-145, -211, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -385, -384,
	-383, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -210, -210, -210, -210, -210, -145,
	-419, -145, -164, -148, 105, -261, 114, 101, -145, -145,
	-145, -145, -145, -145, -211, -296, -301, -292, -293, -210,
	-211, -211, -210, -210, -145, -145, -145, -145, -145, -145,
	-145, -145, -419, -145, -145, -145, -145, -145, -253, -419,
	-210, 96, -401, 429, 430, 702, -303, 288, -302, 28,
	-211, 98, 18, -263, 86, -294, -235, -235, 69, 70,
	65, -131, -132, -136, -419, -37, 28, -255, -294, 641,
	641, 68, 98, -332, -272, 384, 385, 191, -145, -145,
	96, -234, 30, 31, -190, -297, 182, -301, -190, -264,
	288, -190, -168, -170, -171, -172, -193, -217, -418, -173,
	-31, 612, 609, 18, -183, -184, -192, -300, -270, -314,
	-269, 96, 428, 430, 431, 85, 134, -145, -333, 190,
	-361, -360, -359, -342, -344, -345, -346, 97, -333, -338,
	390, 389, -330, -330, -330, -330, -330, -332, -332, -332,
	-332, 95, 95, -330, -330, -330, -330, -335, 95, -335,
	-335, -336, -335, 95, -336, -337, 95, -337, -372, -145,
	-369, -368, -366, -367, 262, 110, 684, 640, 592, 633,
	674, 86, -364, -234, 105, -419, -143, -286, 257, -370,
	-367, -294, -294, -294, -286, 100, 98, 100, 98, 100,
	98, -112, -60, -1, 741, 742, 743, 96, 23, -343,
	-342, -59, 313, -375, -376, 288, -371, -365, -351, 150,
	-350, -351, -351, -294, 96, 32, 139, 139, 139, 139,
	592, 241, 35, -287, 632, 156, 684, 640, -342, -59,
	255, 255, -313, -313, -313, 98, 98, -282, 737, -183,
	-139, 305, 164, 294, 294, 252, 307, 252, 307, -190,
	318, 321, 319, 320, 317, 322, 323, 324, 41, 41,
	41, 41, 41, 41, 41, 306, 308, 310, 296, -190,
	-190, -285, 85, -185, -190, 29, -300, 98, 98, -190,
	-283, -283, -190, -283, -283, -190, -414, 337, -294, 371,
	695, 697, -123, 429, 96, 592, 26, -124, 26, -418,
	-410, 132, 133, -216, -216, -216, -209, -150, -153, -150,
	155, 276, -150, -150, -418, -218, -419, -296, 28, 96,
	86, -419, 180, 96, -419, -419, 96, 18, 96, -226,
	-224, 162, -145, -419, 96, -419, -419, -210, -145, -145,
	-145, -145, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -210, -419, 96, 96, 18, -317, 28, -419,
	-419, -419, -419, 96, -419, -419, -225, -419, 18, -419,
	86, 96, 175, 96, -419, -419, -419, 96, 96, -419,
	-419, 96, -419, 96, -419, -419, -419, -419, -419, -419,
	96, -419, 96, -419, -419, -419, 96, -419, 96, -419,
	-419, 96, -419, 96, -419, 96, -419, 96, -419, 96,
	-419, 96, -419, 96, -419, 96, -419, 96, -419, 96,
	-419, 96, -419, 96, -419, 96, -419, 96, -419, 96,
	-419, 96, -419, 96, -419, 96, -419, -419, -419, 96,
	-419, 96, -419, 96, -419, -419, 96, -419, 96, -419,
	96, -419, 96, 96, -419, 96, 96, 96, -419, 96,
	96, 96, 96, -419, -419, -419, -419, 96, 96, 96,
	96, 96, 96, 96, 96, 96, 96, -419, -419, -419,
	-419, -419, -419, 96, -94, 617, -419, -419, 96, -419,
	96, 96, 96, 96, 96, -419, -418, 235, -419, -419,
	-419, -419, -419, 96, 96, 96, 96, 96, 96, -419,
	-419, -419, 96, 96, -419, 96, -419, 96, -419, -400,
	701, 430, -197, -196, -194, 83, 256, 84, -418, -302,
	-419, -158, -261, -262, -261, -203, -294, 105, 114, -237,
	-167, 96, -169, 18, -216, 97, 96, -332, -241, -247,
	-280, -294, 98, 191, -334, 191, -334, 384, 385, -233,
	235, -198, 19, -202, 35, 63, -29, -418, -418, 35,
	96, -186, -188, -187, -189, 75, 79, 81, 76, 77,
	78, 82, -308, 28, -31, -168, -31, -418, -190, -183,
	-420, 18, 86, -420, 96, 235, -271, -274, 432, 429,
	435, -386, 98, -111, 96, -359, -346, -238, -140, 46,
	-339, 391, -332, 600, -332, -341, 98, -341, 105, 105,
	105, 97, -49, -44, -45, 36, 90, -366, -353, 98,
	45, -353, -353, -294, 97, -234, -139, -190, 156, 85,
	-370, -370, -370, -300, -2, 740, 746, 150, 95, 396,
	22, -255, 96, 97, -219, 314, 97, -113, -294, 97,
	95, -351, -351, -294, -418, 252, 34, 34, 684, 640,
	632, -59, -219, -218, -294, -333, 739, 738, 97, 254,
	312, -144, 449, -141, 98, 100, -190, -190, -190, -190,
	-190, -190, 244, 241, 419, -409, 325, -409, 297, 255,
	-183, -190, 96, -84, 271, 266, -305, -305, 36, -190,
	429, 713, 711, -145, 155, 276, -162, -153, -119, -119,
	-150, -315, 191, 357, 275, 355, 351, 371, 362, 389,
	353, 390, 348, 347, 346, -315, -313, -150, -210, -145,
	-145, -145, 163, -145, 161, -145, -95, -94, -419, -419,
	-419, -419, -419, -95, -95, -95, -95, -95, -95, -95,
	-95, -95, -95, -230, -145, -145, -145, -419, 191, 357,
	-95, -145, 18, -145, -313, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-383, -145, -210, -145, -210, -145, -145, -145, -145, -145,
	-384, -384, -384, -384, -384, -210, -210, -210, -210, -145,
	-418, -294, -98, -97, -96, 667, 256, -94, -164, -98,
	-164, 234, -145, 234, 234, 234, -145, -211, -296, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -194,
	-347, 294, -347, 294, -347, -265, 96, -276, 26, 18,
	63, 63, -167, -198, -132, -168, -294, -244, 694, -250,
	52, -248, -249, 53, -245, 54, 62, -334, -334, 182,
	-235, -145, -266, 85, -267, -275, -218, -213, -215, -214,
	-418, -254, -419, -294, -265, -267, -170, -171, -171, -170,
	-171, 75, 75, 75, 80, 75, 80, 75, -187, -300,
	-419, -145, -303, 86, -168, -168, -192, -300, 182, 429,
	433, 434, -359, -407, 130, 156, 34, 85, 387, 110,
	-405, 190, 629, 679, 684, 640, 633, 674, -406, 258,
	149, 150, 270, 28, 47, 97, 96, 97, 96, 97,
	97, 96, -288, -287, -45, -44, -353, -353, 105, -386,
	98, 98, 254, 29, -190, 85, 85, 85, -114, 744,
	105, 95, -3, 90, -145, 95, 23, -342, -218, -377,
	-327, -378, -328, -329, -5, -6, -354, -117, 63, 110,
	-63, 50, 253, 724, 725, 139, -418, 737, -369, -255,
	-373, -375, -190, -149, -418, -161, -147, -146, -148, -154,
	180, 181, 275, 353, 354, -219, -190, -138, 303, 311,
	95, -142, 101, -388, 86, 294, 387, 294, 387, 98,
	-411, 326, 98, -411, -190, -84, -49, -190, -283, -283,
	36, -386, -419, -162, -153, -126, 175, 592, -318, 599,
	-330, -330, -330, -337, -330, 343, -330, 343, -330, -419,
	-419, -419, 96, -419, 26, -419, 96, -145, 96, -95,
	-95, -95, -95, -95, -122, 488, 96, 96, -419, 95,
	95, -419, -145, -419, -419, -419, 96, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	96, -419, 96, -419, 96, -419, 96, -419, 96, -419,
	96, -419, 96, -419, 96, -419, 96, -419, 96, -419,
	96, -419, 96, -419, 96, -419, 96, -419, 96, -419,
	96, -419, -419, 96, -419, -419, -419, 96, -419, 96,
	-419, 96, -419, -419, -419, 96, -316, 685, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -93,
	-295, -94, 649, 649, -419, -94, -227, 96, -150, -419,
	-150, -150, -150, -419, -419, -419, 96, -419, 96, 96,
	-419, 96, -419, 96, -419, -419, -419, -419, 96, -195,
	26, -418, -195, -418, -195, -419, -261, -190, -198, -228,
	20, -241, 57, 363, -252, -251, 61, 53, -249, 23,
	55, 23, 33, -266, 96, 164, -307, 96, 28, -419,
	-419, 96, 63, 235, -419, -198, -181, -180, 85, 86,
	-182, 85, -180, 75, 75, -256, 96, -264, -168, -198,
	-198, 235, 130, -418, -149, 16, 98, 98, -386, -404,
	728, 729, 34, 105, -353, -353, 150, 150, -190, 95,
	-332, 98, -332, 105, 105, 34, 91, 92, 93, 34,
	87, 88, 89, -190, -190, -190, -190, -374, 95, 23,
	-145, 95, 164, 97, -255, -255, 290, 175, -353, 722,
	296, 296, -353, -353, -353, -116, -115, 744, 97, -419,
	96, -340, 592, 595, -145, -155, -155, -256, 97, -382,
	592, -387, -294, -294, -294, -294, 105, 107, -419, 590,
	82, 593, -419, -332, -145, -145, -145, -145, -235, 98,
	-145, -145, 105, 105, -95, -419, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -210, -145, -419, -178,
	-177, -179, 705, 130, 34, -315, -419, -212, 288, -101,
	-100, -99, 18, -419, -145, -119, -119, -119, -119, -145,
	-145, -145, -145, -145, -145, -418, 75, 22, 20, -258,
	-294, 258, -418, -258, -418, -303, -228, -229, 21, 23,
	-242, 59, -240, 58, -240, -251, 23, 23, 98, 23,
	98, 150, -275, -145, -215, -302, 63, -29, -294, -213,
	-294, -230, -145, 95, -145, -158, -198, -198, -145, -205,
	512, 514, 515, 516, 513, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 517, 528, 489, 490, 491,
	117, 119, 118, 127, 128, 492, 493, 494, 357, 540,
	541, 535, 538, 539, 537, 536, 372, 373, 495, 558,
	559, 563, 562, 560, 561, 564, 567, 568, 569, 570,
	571, 572, 574, 573, 565, 566, 543, 542, 544, 545,
	546, 547, 548, 549, 551, 550, 552, 553, 554, 555,
	556, 557, 575, 576, 577, 578, 579, 581, 580, 585,
	584, 582, 583, 587, 586, 496, 497, 120, 121, 122,
	123, 124, 125, 126, 498, 501, 499, 502, 503, 504,
	509, 510, 505, 506, 507, 508, 511, 383, 381, 382,
	378, 377, 376, 436, 441, 442, 444, 529, 530, 531,
	532, 533, 534, 686, 687, 688, 689, 690, 691, 692,
	693, 98, 98, 95, -145, 97, 97, -256, -373, -60,
	97, -257, -255, 105, 97, 291, -214, -418, 98, -353,
	-353, -353, 105, 105, -302, -419, 96, -294, -406, -375,
	596, 596, -419, 28, -381, -380, -296, 95, 86, 68,
	591, 594, -419, -419, -419, 96, -419, -419, -419, 97,
	97, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, 96, -419, -177, -179, -419, 85, -158,
	-230, 23, -98, 313, 315, -98, -419, -419, -419, -419,
	-419, 96, -419, -419, 96, -419, 96, -419, -419, -258,
	-419, 23, 23, 96, -419, -258, -419, -258, -197, -229,
	-108, -107, -106, 623, -145, -210, -243, 60, 85, 134,
	98, 98, 98, 16, -418, -213, 235, -307, -235, -255,
	-175, 396, -230, -419, -255, 97, 28, 97, 746, 150,
	97, -214, -125, -418, 287, -302, 98, 98, -115, -118,
	-29, 96, 164, -255, -190, 68, -145, -210, -419, 85,
	604, 705, -92, -91, -88, 716, 742, -210, -94, -94,
	-145, -145, -145, -419, -294, 258, -419, -419, -108, 96,
	-105, -104, -294, -319, 592, 85, 134, -267, -255, -307,
	-294, 97, -419, -418, -235, 97, -239, -29, 95, -3,
	287, -327, -378, -328, -329, -5, -6, -354, -82, 592,
	-380, -358, -300, -296, 98, 105, 97, 592, -419, -419,
	-90, 158, 714, 682, -155, 234, -419, 96, -419, 96,
	-419, 96, -106, 96, 28, 597, -419, -303, -176, -174,
	-294, 646, -397, -396, 588, -407, -403, 130, 156, 110,
	-405, 684, 640, 140, 141, -82, -145, 95, -419, -83,
	302, 701, 235, -388, 593, -90, 715, 660, 635, 660,
	635, -150, -145, -145, -145, -104, -418, -419, 96, 26,
	-320, -62, 657, -394, -395, 85, -398, 402, 656, 677,
	130, 98, 97, -255, 263, -301, -382, 594, 155, -119,
	-419, 96, -419, 96, -419, -93, -174, 653, -333, -158,
	-395, 85, -394, 85, 17, 16, -4, 745, 97, 304,
	-90, 660, 635, -145, -145, -419, -61, 29, -175, -393,
	271, 266, 269, 35, -393, 105, -4, -419, -419, 657,
	265, 34, 130, -158, -178, -177, -177,
}

var yyDef = [...]int{
	881, -2, -2, 883, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	39, 70, 72, 73, 881, 881, 881, 0, 881, 0,
	0, 881, -2, -2, 881, 1636, 0, 881, 0, 876,
	0, -2, 798, 804, 0, 813, -2, 0, 0, 881,
	881, 2272, 2272, 876, 0, 0, 0, 0, 0, 881,
	881, 881, 881, 1641, 1494, 50, 881, 0, 85, 86,
	831, 832, 833, 65, 0, 2270, 882, 1, 3, 71,
	75, 0, 0, 0, 58, 1503, 0, 78, 0, 0,
	885, 0, 0, 1619, 881, 881, 0, 126, 127, 0,
	0, 0, -2, 130, -2, 159, 160, 161, 0, 166,
	608, 526, 578, 524, 563, -2, 512, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 529,
	401, 401, 0, 0, -2, 512, 512, 512, 1621, 0,
	0, 0, 560, 463, 401, 401, 401, 0, 401, 401,
	401, 401, 0, 0, 401, 401, 401, 401, 401, 401,
	401, 401, 401, 401, 401, 401, 401, 401, 401, 401,
	401, 1521, 165, 1637, 1634, 1635, 1797, 1798, 1799, 1800,
	1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810,
	1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820,
	1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830,
	1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840,
	1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850,
	1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860,
	1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870,
	1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880,
	1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890,
	1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900,
	1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910,
	1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920,
	1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930,
	1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940,
	1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950,
	1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960,
	1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970,
	1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980,
	1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990,
	1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,
	2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,
	2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020,
	2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030,
	2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040,
	2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050,
	2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060,
	2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070,
	2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080,
	2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090,
	2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100,
	2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110,
	2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120,
	2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130,
	2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140,
	2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150,
	2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160,
	2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170,
	2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180,
	2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190,
	2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200,
	2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210,
	2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220,
	2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230,
	2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240,
	2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250,
	2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260,
	2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 0,
	1613, 0, 721, 985, 0, 877, 878, 0, 787, 787,
	0, 787, 787, 787, 787, 0, 0, 0, 735, 0,
	0, 0, 0, 784, 0, 751, 752, 0, 784, 0,
	758, 790, 0, 0, 765, 787, 787, 768, 2273, 0,
	2273, 2273, 1604, 0, 781, 779, 793, 794, 42, 797,
	800, 801, 802, 803, 806, 0, 817, 820, 1630, 1631,
	0, 822, 827, 844, 845, 0, 45, 1145, 0, 1009,
	0, 1020, -2, 1031, 1048, 1049, 1050, 1051, 1052, 1054,
	1055, 1056, 0, 0, 0, 0, 1061, 1062, 0, 0,
	0, 0, 0, 1125, 0, 0, 0, 0, 1999, 1465,
	0, 0, 1427, 1427, 1161, 1427, 1427, 1429, 1429, 1429,
	1850, 1991, 2000, 2179, 1811, 1817, 1818, 1819, 2125, 2126,
	2127, 2128, 2217, 2218, 2222, 1913, 1806, 2192, 2193, 0,
	2269, 1952, 1960, 1961, 1937, 1946, 1985, 2087, 2202, 1829,
	1980, 2050, 1910, 1932, 1933, 2068, 2069, 1956, 1957, 1936,
	2131, 2133, 2149, 2150, 2135, 2137, 2146, 2152, 2157, 2136,
	2148, 2153, 2166, 2170, 2173, 2174, 2175, 2143, 2141, 2154,
	2158, 2160, 2162, 2168, 2171, 2144, 2142, 2155, 2159, 2161,
	2163, 2169, 2172, 2130, 2134, 2138, 2147, 2165, 2145, 2164,
	2139, 2151, 2156, 2167, 2140, 2132, 1950, 1953, 1940, 1941,
	1943, 1945, 1951, 1958, 1964, 1942, 1963, 1962, 0, 1938,
	1939, 1944, 1955, 1959, 1947, 1948, 1949, 1954, 1965, 2006,
	2005, 2004, 2049, 1976, 2048, 0, 0, 0, 0, 0,
	1800, 1855, 1856, 2176, 1349, 1350, 1351, 1352, 0, 0,
	0, 0, 0, 0, 0, 291, 292, 1478, 1479, 44,
	1144, 1600, 1429, 1429, 1429, 1429, 1429, 1429, 1083, 1084,
	1085, 1086, 1087, 1113, 1114, 1120, 1121, 2063, 2064, 2065,
	2066, 1893, 2212, 1902, 1903, 2045, 2046, 1915, 1916, 2243,
	2244, -2, -2, -2, 232, 233, 234, 235, 236, 237,
	238, 239, 0, 1854, 2190, 2191, 228, 0, 0, 296,
	293, 294, 295, 1127, 1128, 249, 250, 251, 252, 253,
	254, 255, 256, 257, 258, 259, 260, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 271, 272, 273,
	274, 275, 276, 277, 278, 279, 280, 281, 282, 283,
	284, 285, 286, 287, 288, 289, 290, 298, 299, 2272,
	0, 854, 0, 0, 0, 0, 0, 0, 1642, 1643,
	1503, 0, 1495, 1494, 63, 0, 881, -2, 0, 0,
	0, 0, 47, 0, 52, 942, 884, 77, 76, 1543,
	1546, 0, 0, 0, 59, 1504, 67, 69, 1505, 0,
	886, 887, 0, 918, 922, 0, 0, 0, 1620, 1619,
	1619, 102, 0, 0, 103, 123, 124, 125, 0, 0,
	109, 110, 1606, 1607, 43, 0, 0, 177, 178, 0,
	1101, 428, 0, 173, 0, 421, 360, 0, 1521, 0,
	0, 0, 0, 0, 881, 0, 1614, 154, 155, 162,
	163, 164, 401, 401, 401, 575, 0, 0, 165, 165,
	533, 534, 535, 0, 0, -2, 426, 0, 513, 0,
	0, 415, 415, 419, 417, 418, 0, 0, 0, 0,
	0, 0, 0, 0, 552, 0, 553, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 669, 0, 402, 0,
	573, 574, 464, 0, 0, 0, 0, 0, 0, 0,
	0, 1622, 1623, 0, 550, 551, 0, 0, 0, 401,
	401, 0, 0, 0, 0, 401, 401, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 1534, 0, 0, 0,
	-2, 0, 713, 0, 0, 0, 1615, 1615, 0, 720,
	0, 0, 0, 725, 0, 0, 726, 0, 784, 784,
	782, 783, 728, 729, 730, 731, 787, 0, 0, 410,
	411, 412, 784, 787, 0, 787, 787, 787, 787, 784,
	784, 784, 787, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2273, 790, 787, 0, 759, 0, 760, 761,
	762, 763, 766, 767, 769, 2274, 2275, 1632, 1633, 1644,
	1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654,
	1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664,
	1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674,
	1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684,
	1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694,
	1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704,
	1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714,
	1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724,
	1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734,
	1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744,
	1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754,
	1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764,
	1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774,
	1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784,
	1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794,
	1795, 1796, 2273, 2273, 773, 777, 1605, 799, 805, 807,
	808, 0, 0, 818, 821, 838, 49, 1901, 826, 49,
	828, 829, 830, 856, 857, 862, 0, 0, 0, 0,
	868, 869, 870, 0, 0, 873, 874, 875, 0, 0,
	0, 0, 0, 1007, 0, 0, 1133, 1134, 1135, 1136,
	1137, 1138, 1139, 1140, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1032, 1033, 0, 0, 0, 1057, 1058, 1059,
	1060, 1063, 0, 1074, 0, 1076, 1474, -2, 0, 0,
	0, 1068, 1069, 0, 0, 0, 1625, 1625, 0, 0,
	0, 1466, 0, 0, 1159, 0, 1160, 1162, 1163, 1164,
	0, 1165, 1166, 891, 891, 891, 891, 891, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 891, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1625, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 141,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1625, 0, 0,
	1625, 1625, 0, 0, 220, 221, 222, 223, 224, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 240, 241, 242, 243, 244,
	245, 300, 246, 247, 248, 1144, 0, 0, 0, 46,
	846, 847, 0, 968, 1625, 0, 0, 897, 0, 1640,
	57, 66, 68, 1503, 61, 1503, 0, 901, 0, 0,
	-2, -2, 902, 903, 907, 908, 909, 910, 911, 912,
	913, 914, 915, 54, 2271, 55, 0, 74, 0, 48,
	0, 0, 1544, 0, 1547, 0, 0, 0, 374, 1551,
	0, 0, 1496, 1497, 1500, 0, 919, 1997, 923, 0,
	925, 926, 0, 0, 100, 0, 984, 0, 0, 0,
	111, 0, 113, 114, 0, 0, 0, 385, 1608, 1609,
	1610, -2, 408, 0, 385, 369, 308, 309, 310, 360,
	312, 360, 360, 360, 360, 374, 374, 374, 374, 343,
	344, 345, 346, 347, 0, 0, 329, 360, 360, 360,
	360, 350, 351, 352, 353, 354, 355, 356, 357, 313,
	314, 315, 316, 317, 318, 319, 320, 321, 362, 362,
	362, 362, 362, 366, 366, 0, 1102, 0, 389, 0,
	1500, 0, 0, 1534, 1617, 1627, 0, 0, 0, 1617,
	132, 0, 0, 0, 576, 619, 527, 564, 577, 0,
	530, 531, -2, 0, 0, 512, 0, 514, 0, 409,
	0, -2, 0, 419, 0, 415, 419, 416, 419, 407,
	420, 554, 555, 556, 0, 558, 559, 649, 954, 0,
	0, 0, 0, 0, 655, 656, 657, 0, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 565, 566,
	567, 568, 569, 570, 571, 572, 0, 0, 0, 0,
	514, 0, 561, 0, 0, 465, 466, 467, 0, 0,
	470, 471, 472, 473, 0, 0, 476, 477, 478, 971,
	972, 479, 480, 505, 506, 507, 481, 482, 483, 484,
	485, 486, 487, 499, 500, 501, 502, 503, 504, 488,
	489, 490, 491, 492, 493, 496, 0, 147, 1525, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1615, 0, 0, 0,
	0, 900, 986, 1638, 1639, 722, 0, 0, 788, 789,
	0, 413, 414, 787, 787, 732, 774, 0, 787, 736,
	775, 737, 739, 738, 740, 753, 754, 787, 743, 785,
	786, 744, 745, 746, 747, 748, 749, 750, 770, 755,
	756, 757, 791, 0, 795, 796, 771, 772, 0, 0,
	811, 812, 0, 819, 841, 839, 840, 842, 834, 835,
	836, 837, 0, 843, 0, 0, 859, 96, 864, 865,
	866, 867, 879, 872, 1146, 1004, 1005, 1006, 0, 1008,
	1014, 0, 1129, 1131, 1012, 1013, 1016, 0, 0, 0,
	1010, 1021, 1141, 1142, 1143, 0, 0, 0, 0, 0,
	1025, 1029, 1034, 1035, 1036, 1037, 1038, 0, 1039, 0,
	1042, 1043, 1044, 1045, 1046, 1047, 1053, 1442, 1443, 1444,
	1072, 301, 302, 0, 1073, 0, 0, 0, 0, 0,
	0, 0, 0, 1389, 1390, 1391, 1392, 1393, 1394, 1395,
	1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405,
	1406, 1407, 1408, 1145, 0, 1626, 0, 0, 0, 1472,
	1469, 0, 0, 0, 1428, 1430, 0, 0, 0, 892,
	893, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1409, 1410,
	1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420,
	1421, 1422, 1423, 1424, 1425, 1426, 0, 0, 1445, 0,
	0, 0, 0, 0, 0, 0, 1465, 0, 1078, 1079,
	1080, 0, 0, 0, 0, 0, 0, 1207, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 142,
	143, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1353, 1354, 1355, 1356, 41, 0, 0,
	0, 0, 0, 0, 0, 1476, 0, -2, -2, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1378, 0, 0, 0, 0, 0, 0, 1598,
	0, 0, 849, 850, 852, 0, 988, 0, 969, 0,
	0, 855, 0, 896, 0, 899, 60, 62, 905, 906,
	0, 927, 916, 904, 56, 51, 0, 0, 946, 1545,
	1548, 1549, 374, 1571, 0, 383, 383, 380, 1506, 1507,
	0, 1499, 1501, 1502, 79, 924, 920, 0, 1002, 0,
	0, 983, 0, 930, 932, 933, 934, 966, 0, 937,
	938, 0, 0, 0, 0, 0, 98, 985, 104, 0,
	112, 0, 0, 117, 118, 105, 106, 107, 108, 0,
	608, -2, 460, 179, 181, 182, 183, 174, -2, 372,
	370, 371, 311, 374, 374, 337, 338, 339, 340, 341,
	342, 0, 0, 330, 331, 332, 333, 322, 0, 323,
	324, 325, 364, 0, 326, 327, 0, 328, 427, 0,
	1508, 390, 391, 393, 401, 0, 396, 397, 0, 401,
	401, 0, 422, 423, 0, 1500, 1525, 0, 0, 0,
	1628, 1627, 1627, 1627, 0, 167, 168, 169, 170, 171,
	172, 644, 0, 0, 620, 642, 643, 165, 0, 0,
	175, 516, 515, 0, 676, 0, 425, 0, 0, 419,
	419, 404, 405, 557, 0, 0, 651, 652, 653, 654,
	0, 0, 0, 543, 454, 0, 544, 545, 514, 516,
	0, 0, 385, 468, 469, 474, 475, 494, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	592, 593, 595, 598, 600, 518, 604, 606, 594, 597,
	599, 601, 518, 605, 607, 1522, 1523, 1524, 0, 0,
	714, 0, 0, 451, 94, 1616, 719, 723, 724, 784,
	742, 776, 784, 734, 741, 764, 809, 810, 815, 823,
	824, 825, 863, 0, 0, 0, 0, 871, 0, 0,
	1015, 1130, 1132, 1017, 1018, 1019, 1022, 0, 1026, 1030,
	0, 0, 0, 0, 0, 1077, 1075, 1476, 0, 0,
	0, 1126, 0, 0, 1149, 1150, 0, 0, 0, 0,
	1470, 0, 0, 1157, 0, 1431, 1107, 0, 0, 0,
	0, 0, 1107, 1107, 1107, 1107, 1107, 1107, 1107, 1107,
	1107, 1107, 1494, 1184, 0, 0, 0, 0, 0, 1189,
	1190, 1191, 1107, 0, 1194, 1195, 0, 1197, 0, 1198,
	0, 0, 0, 0, 1205, 1206, 1208, 0, 0, 1211,
	1212, 0, 1214, 0, 1216, 1217, 1218, 1219, 1220, 1221,
	0, 1223, 0, 1225, 1226, 1227, 0, 1229, 0, 1231,
	1232, 0, 1234, 0, 1236, 0, 1239, 0, 1242, 0,
	1245, 0, 1248, 0, 1251, 0, 1254, 0, 1257, 0,
	1260, 0, 1263, 0, 1266, 0, 1269, 0, 1272, 0,
	1275, 0, 1278, 0, 1281, 0, 1284, 1285, 1286, 0,
	1288, 0, 1290, 0, 1293, 1294, 0, 1296, 0, 1299,
	0, 1302, 0, 0, 1303, 0, 0, 0, 1307, 0,
	0, 0, 0, 1316, 1317, 1318, 1319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1330, 1331, 1332,
	1333, 1334, 1335, 0, 1337, 0, 1108, 0, 0, 1108,
	0, 0, 0, 0, 0, 1147, 1625, 0, 1432, 1433,
	1434, 1435, 1436, 0, 0, 0, 0, 0, 0, 1376,
	1377, 1379, 0, 0, 1382, 0, 1384, 0, 1599, 848,
	851, 853, 940, 989, 990, 0, 0, 0, 0, 970,
	1624, 894, 895, 898, 948, 0, 1480, 0, 0, 927,
	1002, 0, 928, 0, 53, 943, 0, 1553, 1552, 1565,
	1578, 383, 383, 377, 378, 384, 379, 381, 382, 1498,
	0, 1503, 0, 1592, 0, 0, 1581, 0, 0, 0,
	0, 0, 0, 0, 0, 973, 0, 0, 976, 0,
	0, 0, 0, 967, 938, 0, 939, 0, -2, 0,
	0, 92, 93, 0, 0, 0, 115, 116, 0, 0,
	122, 386, 387, 156, 165, 462, 180, 435, 0, 0,
	307, 373, 334, 335, 336, 0, 358, 0, 0, 0,
	0, 456, 128, 1512, 1511, 401, 401, 392, 0, 395,
	0, 0, 0, 1629, 361, 424, 0, 146, 0, 0,
	0, 0, 0, 152, 614, 0, 0, 621, 0, 0,
	0, 525, 0, 536, 537, 0, 648, -2, 710, 389,
	0, 403, 406, 955, 0, 0, 538, 0, 541, 542,
	455, 516, 547, 548, 562, 549, 497, 498, 495, 0,
	0, 1535, 1536, 1541, 1539, 1540, 133, 583, 585, 589,
	584, 588, 0, 0, 0, 520, 0, 520, 581, 0,
	451, 1508, 0, 718, 452, 453, 787, 787, 858, 97,
	0, 861, 0, 0, 0, 0, 1023, 1027, 1040, 1041,
	1437, 1463, 360, 360, 1450, 360, 366, 1453, 360, 1455,
	360, 1458, 360, 1461, 1462, 0, 0, 1070, 0, 0,
	0, 0, 1156, 1473, 0, 0, 1167, 1106, 1107, 1107,
	1107, 1107, 1107, 1173, 1174, 1175, 1176, 1177, 1178, 1179,
	1180, 1181, 1182, 1467, 0, 0, 0, 1188, 0, 0,
	1192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	144, 145, 0, 0, 0, 0, 0, 0, 1387, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1101, 1105, 0, 1109, 1110, 0, 0, 1339, 0, 0,
	1357, 0, 0, 0, 0, 0, 0, 0, 1477, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 991,
	998, 0, 998, 0, 998, 0, 0, 0, 1611, 1612,
	1481, 1482, 1002, 1483, 917, 929, 947, 1571, 0, 1564,
	0, -2, 1573, 0, 0, 0, 1579, 375, 376, 921,
	80, 1003, 83, 0, 1592, 1601, 0, 1589, 1594, 1596,
	0, 0, 0, 1585, 0, 1002, 931, 962, 964, 0,
	959, 974, 975, 977, 0, 979, 0, 981, 982, 942,
	936, 0, 100, 0, 1002, 1002, 99, 0, 987, 119,
	120, 121, 461, 184, 189, 0, 0, 0, 194, 0,
	196, 0, 0, 0, 201, 202, 401, 401, 436, 0,
	304, 306, 0, 0, 187, 374, 0, 374, 0, 365,
	367, 0, 437, 457, 1509, 1510, 0, 0, 394, 398,
	399, 400, 0, 1618, 148, 0, 0, 0, 617, 0,
	645, 0, 0, 0, 0, 0, 0, 176, 517, 677,
	678, 679, 680, 681, 682, 683, 684, 685, 0, 401,
	0, 0, 0, 401, 401, 401, 0, 702, 388, 0,
	0, 673, 670, 539, 0, 218, 219, 226, 227, 229,
	0, 0, 0, 0, 0, 546, 942, 1526, 1527, 1528,
	0, 1538, 1542, 136, 0, 0, 0, 0, 591, 596,
	602, 0, 519, 603, 715, 716, 717, 95, 727, 733,
	860, 880, 1011, 1024, 1028, 0, 0, 0, 0, 1464,
	1448, 374, 1451, 1452, 1454, 1456, 1457, 1459, 1460, 1066,
	1067, 1071, 0, 1153, 0, 1155, 0, 1471, 0, 1168,
	1169, 1170, 1171, 1172, 1503, 0, 0, 0, 1187, 0,
	0, 1107, 0, 1200, 1199, 1201, 0, 1203, 1204, 1209,
	1210, 1213, 1215, 1222, 1224, 1228, 1230, 1233, 1235, 1237,
	0, 1240, 0, 1243, 0, 1246, 0, 1249, 0, 1252,
	0, 1255, 0, 1258, 0, 1261, 0, 1264, 0, 1267,
	0, 1270, 0, 1273, 0, 1276, 0, 1279, 0, 1282,
	0, 1287, 1289, 0, 1292, 1295, 1297, 0, 1300, 0,
	1304, 0, 1306, 1308, 1309, 0, 0, 0, 1320, 1321,
	1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1336, 0,
	1099, 1338, 1111, 1112, 1117, 1341, 0, 0, 0, 1344,
	0, 0, 0, 1348, 1148, 1359, 0, 1364, 0, 0,
	1370, 0, 1374, 0, 1380, 1381, 1383, 1385, 0, 0,
	0, 0, 0, 0, 0, 968, 949, 64, 1483, 1487,
	0, 1558, 1556, 1556, 1566, 1567, 0, 0, 1574, 0,
	0, 0, 0, 84, 0, 0, 1580, 0, 0, 1597,
	0, 0, 0, 0, 101, 1494, 956, 963, 0, 0,
	957, 0, 958, 978, 980, 935, 0, 1002, 1002, 90,
	91, 0, 190, 0, 192, 0, 195, 197, 198, 199,
	205, 206, 207, 200, 0, 0, 303, 305, 0, 0,
	348, 359, 349, 0, 0, 1513, 1514, 1515, 1516, 1517,
	1518, 1519, 1520, 942, 149, 150, 151, 609, 0, 619,
	0, 944, 0, 612, 0, 528, 0, 0, 0, 401,
	401, 401, 0, 0, 0, 0, 687, 0, 0, 650,
	0, 658, 0, 0, 0, 230, 231, 0, 1537, 582,
	0, 134, 135, 0, 0, 587, 521, 522, 1064, 0,
	0, 0, 1065, 1449, 0, 0, 0, 0, 0, 1468,
	0, 0, 0, 0, 1193, 1196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1312, 0,
	0, 0, 639, 640, 0, 1388, 1104, 1494, 0, 1108,
	1118, 1119, 0, 1108, 1358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 999, 0, 0, 0,
	950, 951, 0, 0, 0, 988, 1487, 1492, 0, 0,
	1561, 0, 1554, 1557, 1555, 1568, 0, 0, 1575, 0,
	1577, 0, 1602, 1603, 1595, 1590, 0, 1584, 1587, 1589,
	1586, 1503, 960, 0, 965, 0, 1494, 89, 0, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 203, 204, 0, 0, 363, 368, 0, 0, 0,
	610, 0, 945, 622, 613, 0, 700, 0, 704, 0,
	0, 0, 707, 708, 709, 686, 0, 690, 429, 674,
	671, 672, 540, 0, 137, 138, 0, 0, 0, 1438,
	0, 1441, 1151, 1154, 1152, 0, 1183, 1185, 1186, 1446,
	1447, 1202, 1238, 1241, 1244, 1247, 1250, 1253, 1256, 1259,
	1262, 1265, 1268, 1271, 1274, 1277, 1280, 1283, 1291, 1298,
	1301, 1305, 1310, 0, 1313, 0, 0, 1314, 0, 641,
	1095, 0, 0, 1115, 1116, 0, 1343, 1345, 1346, 1347,
	1360, 0, 1365, 1366, 0, 1371, 0, 1375, 1386, 0,
	993, 1000, 1001, 0, 996, 0, 997, 0, 941, 1492,
	82, 1493, 1490, 0, 1488, 1485, 1550, 0, 1559, 1560,
	1569, 1570, 1576, 0, 0, 1589, 0, 1583, 87, 0,
	0, 0, 1503, 191, 0, 210, 0, 618, 0, 621,
	611, 698, 699, 0, 711, 703, 705, 706, 688, -2,
	1529, 0, 0, 0, 590, 1439, 0, 0, 1315, 0,
	637, 638, 1103, 1096, 0, 1081, 1082, 1100, 1340, 1342,
	0, 0, 0, 992, 952, 953, 994, 995, 81, 0,
	1489, 1123, 0, 1484, 0, 1562, 1563, 1593, 0, 1582,
	1588, 961, 968, 0, 88, 442, 435, 1529, 0, 0,
	0, 691, 692, 693, 694, 695, 696, 697, 579, 1531,
	139, 140, 0, 509, 510, 511, 133, 0, 1158, 1311,
	1097, 0, 0, 0, 0, 0, 1361, 0, 1367, 0,
	1372, 0, 1491, 0, 0, 1486, 1591, 623, 0, 625,
	0, -2, 430, 443, 0, 185, 211, 212, 0, 0,
	215, 216, 217, 208, 209, 129, 0, 0, 712, 0,
	1532, 1533, 0, 136, 0, 0, 1088, 1089, 1090, 1091,
	1093, 0, 0, 0, 0, 1124, 1101, 624, 0, 0,
	385, 0, 634, 431, 432, 0, 438, 439, 440, 441,
	213, 214, 646, 0, 0, 508, 586, 1440, 0, 0,
	1362, 0, 1368, 0, 1373, 0, 626, 627, 635, 0,
	433, 0, 434, 0, 0, 0, 615, 0, 646, 1530,
	1098, 1092, 1094, 0, 0, 1122, 0, 636, 632, 444,
	446, 447, 0, 0, 445, 647, 616, 1363, 1369, 0,
	448, 449, 450, 628, 629, 630, 631,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 157, 3, 3, 3, 185, 177, 3,
	95, 97, 182, 180, 96, 181, 235, 183, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 747,
	165, 164, 166, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 187, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 153, 3, 188,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 154, 155,
	156, 158, 159, 160, 161, 162, 163, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 178, 179, 184,
	186, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 233, 234, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 58022, 697, 58023, 698, 58024, 699,
	58025, 700, 58026, 701, 58027, 702, 58028, 703, 58029, 704,
	58030, 705, 58031, 706, 58032, 707, 58033, 708, 58034, 709,
	58035, 710, 58036, 711, 58037, 712, 58038, 713, 58039, 714,
	58040, 715, 58041, 716, 58042, 717, 58043, 718, 58044, 719,
	58045, 720, 58046, 721, 58047, 722, 58048, 723, 58049, 724,
	58050, 725, 58051, 726, 58052, 727, 58053, 728, 58054, 729,
	58055, 730, 58056, 731, 58057, 732, 58058, 733, 58059, 734,
	58060, 735, 58061, 736, 58062, 737, 58063, 738, 58064, 739,
	58065, 740, 58066, 741, 58067, 742, 58068, 743, 58069, 744,
	58070, 745, 58071, 746, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:628
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:641
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:642
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:646
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:685
		{
			setParseTree(yylex, nil)
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:691
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:697
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:703
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:707
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:713
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:719
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:725
		{
			yyLOCAL = &With{CTEs: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:729
		{
			yyLOCAL = &With{CTEs: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:734
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:738
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:744
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:748
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:754
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:760
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:764
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:768
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:791
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:797
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:802
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:808
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:815
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:821
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:828
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 64:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:832
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:838
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:842
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:846
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:850
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:854
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:860
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:864
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:869
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:873
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:879
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:883
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:888
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:894
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:900
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:907
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:913
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:921
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), yyDollar[8].groupByUnion(), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:925
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), yyDollar[7].groupByUnion(), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:931
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = getAliasedTableExprFromTableName(yyDollar[4].tableName)
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:943
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: getAliasedTableExprFromTableName(yyDollar[4].tableName), Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:955
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:959
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:965
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:971
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:975
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:979
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:983
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:988
		{
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:989
		{
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:993
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:997
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1003
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1007
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1013
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1017
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1022
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1026
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1032
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1038
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1042
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1048
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1052
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1056
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1060
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1066
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1070
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1074
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1080
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1084
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1090
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1094
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1100
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1104
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1108
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1114
		{
			yyVAL.str = RepeatableReadStr
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1118
		{
			yyVAL.str = ReadCommittedStr
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1122
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1126
		{
			yyVAL.str = SerializableStr
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1132
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1136
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1140
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1146
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1152
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1159
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1168
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1172
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1179
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1183
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1188
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1192
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1198
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1203
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1208
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1214
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1219
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1225
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 141:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1230
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1234
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1240
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1244
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1250
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 146:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1256
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1263
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1270
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1275
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeFullText}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1280
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeSpatial}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1285
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeUnique}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1292
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1299
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1310
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1317
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1321
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1327
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1331
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1335
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1339
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1343
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1347
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 165:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1353
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1357
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1363
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1367
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1373
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1377
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1383
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1387
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1393
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1397
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1403
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1407
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1413
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1418
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1423
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 180:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1427
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1432
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1436
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1440
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 184:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1451
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1460
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1469
		{
			yyVAL.str = ""
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1473
		{
			yyVAL.str = ""
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1482
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1486
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1491
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1496
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1501
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyDollar[1].columnTypeOptionsUnion().DefaultLiteral = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1507
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1512
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1517
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1522
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1527
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1531
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1536
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1540
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1545
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1550
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1555
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 204:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1559
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1565
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1569
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1573
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1579
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1583
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1588
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1592
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1597
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1602
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1607
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1612
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1617
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1622
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1629
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1636
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1640
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1644
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1648
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1652
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1656
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("sysdate"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1666
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1673
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1677
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1683
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1687
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1691
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1695
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1699
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1703
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1707
		{
			yyLOCAL = NewBitLiteral("0b" + yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1711
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1715
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral("0b" + yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1719
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1723
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1727
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1731
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1735
		{
			arg := parseBindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: arg}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1740
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1744
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1748
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1754
		{
			yyVAL.str = Armscii8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1758
		{
			yyVAL.str = ASCIIStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1762
		{
			yyVAL.str = Big5Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1766
		{
			yyVAL.str = UBinaryStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1770
		{
			yyVAL.str = Cp1250Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1774
		{
			yyVAL.str = Cp1251Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1778
		{
			yyVAL.str = Cp1256Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1782
		{
			yyVAL.str = Cp1257Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1786
		{
			yyVAL.str = Cp850Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1790
		{
			yyVAL.str = Cp852Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1794
		{
			yyVAL.str = Cp866Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1798
		{
			yyVAL.str = Cp932Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1802
		{
			yyVAL.str = Dec8Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1806
		{
			yyVAL.str = EucjpmsStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1810
		{
			yyVAL.str = EuckrStr
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1814
		{
			yyVAL.str = Gb18030Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1818
		{
			yyVAL.str = Gb2312Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1822
		{
			yyVAL.str = GbkStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1826
		{
			yyVAL.str = Geostd8Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1830
		{
			yyVAL.str = GreekStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1834
		{
			yyVAL.str = HebrewStr
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1838
		{
			yyVAL.str = Hp8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1842
		{
			yyVAL.str = Keybcs2Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1846
		{
			yyVAL.str = Koi8rStr
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1850
		{
			yyVAL.str = Koi8uStr
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1854
		{
			yyVAL.str = Latin1Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1858
		{
			yyVAL.str = Latin2Str
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1862
		{
			yyVAL.str = Latin5Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1866
		{
			yyVAL.str = Latin7Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1870
		{
			yyVAL.str = MacceStr
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1874
		{
			yyVAL.str = MacromanStr
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1878
		{
			yyVAL.str = SjisStr
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1882
		{
			yyVAL.str = Swe7Str
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1886
		{
			yyVAL.str = Tis620Str
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1890
		{
			yyVAL.str = Ucs2Str
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1894
		{
			yyVAL.str = UjisStr
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1898
		{
			yyVAL.str = Utf16Str
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1902
		{
			yyVAL.str = Utf16leStr
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1906
		{
			yyVAL.str = Utf32Str
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1910
		{
			yyVAL.str = Utf8mb3Str
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1914
		{
			yyVAL.str = Utf8mb4Str
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1918
		{
			yyVAL.str = Utf8mb3Str
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1928
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1932
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1936
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1942
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1946
		{
			yyLOCAL = AppendString(yyDollar[1].exprUnion(), yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1952
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1956
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1960
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1966
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1970
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1976
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1980
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1984
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1988
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1994
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2005
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].intPtrUnion()
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2010
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2016
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2020
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2024
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2028
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2032
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2036
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2040
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2044
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2048
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2054
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2060
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2066
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2072
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2078
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2084
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2090
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2098
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2102
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2106
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2110
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2114
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2120
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2124
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].intPtrUnion()}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2130
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2134
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2138
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2142
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2146
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2150
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2154
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2158
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2162
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2166
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2170
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2174
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2178
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 349:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2183
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2189
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2193
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2197
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2201
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2205
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2209
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2213
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2217
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2223
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2228
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *int
//line sql.y:2233
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *int
//line sql.y:2237
		{
			yyLOCAL = ptr.Of(convertStringToInt(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2242
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 363:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2246
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2255
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2259
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2266
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2270
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2276
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2284
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2288
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2292
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2297
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2301
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2306
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2310
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2314
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2318
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2322
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2327
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2332
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2337
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2342
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2348
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2352
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2357
		{
			yyVAL.str = ""
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2361
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2365
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 388:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2371
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2376
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2380
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2386
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2390
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2396
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2400
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2405
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2409
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2413
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2417
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2421
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2425
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2431
		{
			yyVAL.str = ""
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2435
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 403:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2441
		{
			yyLOCAL = &IndexInfo{Type: IndexTypePrimary, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY")}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2445
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeSpatial, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2449
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeFullText, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2453
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeUnique, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2457
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeDefault, Name: NewIdentifierCI(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2462
		{
			yyVAL.str = ""
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2466
		{
			yyVAL.str = yyDollar[2].str
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2472
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2476
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2480
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2486
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2490
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 415:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2495
		{
			yyVAL.str = ""
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2499
		{
			yyVAL.str = yyDollar[1].str
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2505
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2509
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2514
		{
			yyVAL.str = ""
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2518
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2524
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2528
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2534
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].intPtrUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2538
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2544
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2548
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2554
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2558
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2564
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2570
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2574
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2578
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2582
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2586
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2591
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2595
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2601
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2607
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2613
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2617
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2621
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2626
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2630
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2636
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2642
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2648
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2652
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2656
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2660
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2664
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2669
		{
			yyVAL.str = ""
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2673
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2677
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2683
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2687
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2692
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2696
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2701
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2705
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2711
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2715
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2719
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2725
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2729
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2735
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2739
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2743
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2747
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2751
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2755
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2759
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2763
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2767
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2771
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2775
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2779
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2783
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2787
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2791
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2795
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2799
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2803
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2807
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2811
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2815
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2819
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2823
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2827
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2831
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2835
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2839
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2843
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2847
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2851
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2855
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2860
		{
			yyVAL.str = ""
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2864
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2868
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2887
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2891
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2895
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2899
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2904
		{
			yyVAL.str = ""
		}
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2910
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2914
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2919
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2923
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2928
		{
			yyVAL.str = ""
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2932
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2937
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2941
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2945
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2950
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2954
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2958
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2962
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2966
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 528:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2970
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2976
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2980
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2984
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2990
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2994
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2998
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3002
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3006
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3010
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3014
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3018
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion(), DefaultLiteral: true}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3022
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3026
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(false)}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3030
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(true)}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3034
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3038
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3042
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3046
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3050
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3054
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3058
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3062
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3066
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3070
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3074
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3078
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3082
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3086
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3090
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3094
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3098
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3102
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3106
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3110
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3116
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3120
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3126
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3130
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3134
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3138
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3142
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3146
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3150
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3154
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3158
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3162
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3168
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3175
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3182
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3189
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3195
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3205
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3212
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3219
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3231
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3241
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3245
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3249
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3262
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3272
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3276
		{
			yyLOCAL = &AlterVschema{Action: DropSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3280
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3291
		{
			yyLOCAL = &AlterVschema{
				Action: DropAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3298
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3305
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3312
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3318
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3325
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3333
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3339
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3346
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3352
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3359
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3365
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3374
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3382
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3389
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3395
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3402
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3409
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3413
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3422
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3430
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3439
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3446
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3454
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3458
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3467
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3478
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3482
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3487
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3491
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3496
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3500
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3506
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3512
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3518
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3522
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3528
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3532
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3538
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3544
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3550
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3556
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3562
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3566
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3570
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3574
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3580
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3586
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3592
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3596
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3600
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3606
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3610
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3615
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3619
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3624
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3628
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3634
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3638
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3642
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3646
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3650
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3654
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3658
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3662
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3666
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3670
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3674
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3678
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3682
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3686
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3690
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3694
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3698
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3702
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3706
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3710
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3714
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3718
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3723
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3727
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3731
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3737
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3741
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3747
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3752
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3756
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3761
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3766
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3771
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3776
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3781
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3786
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3791
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3796
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3802
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3808
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3812
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3818
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3823
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3827
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3832
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3837
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3842
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3847
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3852
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3857
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3864
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3871
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3878
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3886
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3890
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3896
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3902
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3908
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3914
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3920
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3926
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3932
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3938
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3944
		{
			yyVAL.str = ""
		}
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3948
		{
			yyVAL.str = ""
		}
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3954
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3960
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3964
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 716:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3970
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3974
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3983
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3987
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3993
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3997
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4003
		{
			yyLOCAL = &Analyze{IsLocal: yyDollar[2].booleanUnion(), Table: yyDollar[4].tableName}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4009
		{
			yyLOCAL = &PurgeBinaryLogs{To: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4013
		{
			yyLOCAL = &PurgeBinaryLogs{Before: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4019
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4023
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4027
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4031
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4035
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4039
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4043
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4047
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4051
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4055
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4059
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4063
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4067
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4071
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4075
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4079
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4083
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4087
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4091
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4095
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4099
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4103
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4107
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4111
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4115
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4119
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4123
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4127
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4131
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4135
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4139
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4143
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4147
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4151
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4155
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4159
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4163
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4167
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaKeyspaces}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4171
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4175
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4179
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4183
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4187
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4191
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4198
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4202
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4206
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4210
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4214
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4218
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4222
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4226
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4230
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4236
		{
			yyVAL.str = ""
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4240
		{
			yyVAL.str = "extended "
		}
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4246
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4250
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4256
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4260
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4266
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4270
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4274
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 787:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4280
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4284
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4288
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4294
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4298
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4304
		{
			yyVAL.empty = struct{}{}
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4308
		{
			yyVAL.empty = struct{}{}
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4312
		{
			yyVAL.empty = struct{}{}
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4318
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4322
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4328
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4332
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4336
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4343
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4347
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4351
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4355
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4362
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4366
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4371
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4375
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4381
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4385
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4391
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4395
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4399
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4406
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4412
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4416
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4421
		{
			yyVAL.empty = struct{}{}
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4423
		{
			yyVAL.empty = struct{}{}
		}
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4426
		{
			yyVAL.empty = struct{}{}
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4428
		{
			yyVAL.empty = struct{}{}
		}
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4432
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4438
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4443
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4447
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4451
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4455
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4459
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4464
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4468
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4472
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4476
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4482
		{
			yyVAL.str = yyDollar[1].str
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4486
		{
			yyVAL.str = yyDollar[1].str
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4490
		{
			yyVAL.str = yyDollar[1].str
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4496
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4500
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4504
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4508
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4513
		{
			yyVAL.str = ""
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4517
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4521
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 841:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4527
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4531
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4537
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4543
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4547
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4553
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4559
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4563
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4569
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4575
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4579
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4583
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4587
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4593
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4599
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4605
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4609
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4613
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4617
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4621
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4625
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4631
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4635
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4641
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4645
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4649
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4653
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4657
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4661
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4665
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4669
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4673
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4677
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4681
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4685
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4690
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4694
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4698
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4703
		{
			yyVAL.str = ""
		}
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4707
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 881:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4712
		{
			setAllowComments(yylex, true)
		}
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4716
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4722
		{
			yyVAL.strs = nil
		}
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4726
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4732
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4736
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4740
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4745
		{
			yyVAL.str = ""
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4749
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4753
		{
			yyVAL.str = SQLCacheStr
		}
	case 891:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4758
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4762
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4766
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4772
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4776
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4786
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4791
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4795
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4801
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4805
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4810
		{
			yyVAL.strs = nil
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4814
		{
			yyVAL.strs = yyDollar[1].strs
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4820
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4824
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4830
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4834
		{
			yyVAL.str = SQLCacheStr
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4838
		{
			yyVAL.str = DistinctStr
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4842
		{
			yyVAL.str = DistinctStr
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4846
		{
			yyVAL.str = HighPriorityStr
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4850
		{
			yyVAL.str = StraightJoinHint
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4854
		{
			yyVAL.str = SQLBufferResultStr
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4858
		{
			yyVAL.str = SQLSmallResultStr
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4862
		{
			yyVAL.str = SQLBigResultStr
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4866
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4870
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4876
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4880
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4886
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4890
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4894
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4898
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4903
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4907
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4911
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4918
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 927:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4923
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4927
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4933
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4939
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4943
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4953
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4957
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4961
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4965
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4971
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4975
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4981
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4985
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4990
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4994
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4999
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5003
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5009
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5013
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5019
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5023
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5029
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5033
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5037
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5041
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5047
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5051
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5064
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5068
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5072
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5076
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5082
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 961:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5084
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 962:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5088
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5090
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 964:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5094
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5096
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 966:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5099
		{
			yyVAL.empty = struct{}{}
		}
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5101
		{
			yyVAL.empty = struct{}{}
		}
	case 968:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5104
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5108
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5112
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5119
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5125
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5129
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5133
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5139
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5145
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5149
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5153
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5157
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5163
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5167
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5177
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5181
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5187
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5191
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5197
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 988:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5202
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5206
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5212
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5216
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 992:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5222
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5226
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5230
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5234
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5238
		{
			yyLOCAL = &IndexHint{Type: UseVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5242
		{
			yyLOCAL = &IndexHint{Type: IgnoreVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5247
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5251
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5255
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5259
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5265
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5269
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5276
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5280
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5284
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5288
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5292
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5296
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5300
		{
			yyLOCAL = &AssignmentExpr{Left: yyDollar[1].variableUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5304
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5310
		{
		}
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5313
		{
		}
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5318
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5322
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5326
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5330
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5334
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5338
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: All, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5342
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5348
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5352
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5356
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5360
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5364
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5368
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5372
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5376
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5380
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5384
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5388
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5394
		{
		}
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5397
		{
		}
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5403
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5407
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5411
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5415
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5419
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5423
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5427
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAdd, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5431
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinarySub, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5435
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5439
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5443
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5447
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5451
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5455
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5459
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5465
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5469
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5473
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5477
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5481
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5485
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5489
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5493
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5497
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5501
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5505
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5509
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5513
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5517
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5521
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5525
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5529
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5533
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5537
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5541
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5549
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5553
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAddLeft, Date: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion(), Interval: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5557
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5561
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5565
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5571
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5575
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5581
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5585
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5591
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5595
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5599
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5605
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5609
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5616
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5620
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5624
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5628
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5632
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5638
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5642
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5646
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5650
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5654
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5658
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5662
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5667
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5671
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5677
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5681
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5686
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5690
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5695
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5699
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5705
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5711
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5715
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5721
		{
			yyLOCAL = yyDollar[1].overClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5725
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5730
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5737
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5743
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5747
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5753
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5757
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5763
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5767
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5772
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5779
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5785
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5789
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5795
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5801
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5805
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1125:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5811
		{
			yyVAL.str = ""
		}
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5815
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5821
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5825
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5832
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5836
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5840
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5844
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5850
		{
			yyLOCAL = yyDollar[1].comparisonExprOperatorUnion()
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5854
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5860
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5864
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5868
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5872
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5876
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5880
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5886
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5890
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5894
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			markBindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5901
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5907
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5911
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1147:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5921
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5925
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5935
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5939
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5943
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5947
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5951
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5955
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5959
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5963
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5967
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5971
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5975
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5986
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5990
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5996
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6000
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("curdate")}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6004
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6009
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("curtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6014
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6018
		{
			yyLOCAL = &CountStar{OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6022
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6026
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6030
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6034
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6038
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6042
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6046
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6050
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6054
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6058
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6062
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6066
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6070
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6074
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6078
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6082
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6086
		{
			yyLOCAL = &AnyValue{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6090
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprTimestampadd, Date: yyDollar[7].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6094
		{
			yyLOCAL = &TimestampDiffExpr{Unit: yyDollar[3].intervalTypeUnion(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6098
		{
			yyLOCAL = &ExtractFuncExpr{IntervalType: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6102
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6106
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6110
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6114
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6118
		{
			yyLOCAL = &JSONArrayAgg{Expr: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6122
		{
			yyLOCAL = &JSONObjectAgg{Key: yyDollar[3].exprUnion(), Value: yyDollar[5].exprUnion(), OverClause: yyDollar[7].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6126
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, Type: LeadingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6130
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, Type: TrailingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6134
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6138
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6142
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6146
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6150
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6154
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6158
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6162
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6166
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6170
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6174
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6178
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6182
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6186
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6190
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6194
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6198
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6202
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6206
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6210
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6214
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsEmpty, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6218
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsSimple, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6222
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Dimension, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6226
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Envelope, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6230
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: GeometryType, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6234
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6238
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6242
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6246
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6250
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: EndPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6254
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: IsClosed, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6258
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6262
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6266
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: NumPoints, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6270
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: PointN, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6274
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: StartPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6278
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6282
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6286
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6290
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6294
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6298
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6302
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6306
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6310
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6314
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6318
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6322
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6326
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6330
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6334
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6338
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6342
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6346
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6350
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6354
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6358
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6362
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6366
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6370
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6374
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6378
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6382
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6386
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6390
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6394
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6398
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6402
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6406
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6410
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6414
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6418
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6422
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6426
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6430
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6434
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6438
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6442
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6446
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6450
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6454
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6458
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6462
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6466
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6470
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6474
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6478
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6482
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6486
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Area, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6490
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Centroid, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6494
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: ExteriorRing, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6498
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: InteriorRingN, Polygon: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6502
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: NumInteriorRings, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6506
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: GeometryN, GeomColl: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6510
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: NumGeometries, GeomColl: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6514
		{
			yyLOCAL = &GeoHashFromLatLongExpr{Longitude: yyDollar[3].exprUnion(), Latitude: yyDollar[5].exprUnion(), MaxLength: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6518
		{
			yyLOCAL = &GeoHashFromPointExpr{Point: yyDollar[3].exprUnion(), MaxLength: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6522
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LatitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6526
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LongitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6530
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: PointFromHash, GeoHash: yyDollar[3].exprUnion(), SridOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6534
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6538
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6542
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion(), Srid: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6546
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6550
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6554
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion(), Bitmask: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6558
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6562
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6566
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6570
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6574
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6578
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6582
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6586
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6590
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6594
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6598
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6602
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6606
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6610
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6614
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6618
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6622
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6626
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6630
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6634
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6638
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6642
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6646
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6650
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6654
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6658
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6662
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6666
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6670
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6674
		{
			yyLOCAL = &MultiPolygonExpr{PolygonParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6678
		{
			yyLOCAL = &MultiPointExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6682
		{
			yyLOCAL = &MultiLinestringExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6686
		{
			yyLOCAL = &PolygonExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6690
		{
			yyLOCAL = &LineStringExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6694
		{
			yyLOCAL = &PointExpr{XCordinate: yyDollar[3].exprUnion(), YCordinate: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6698
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6702
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6706
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6710
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6714
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6718
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6722
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6726
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6730
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateAdd, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6734
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateSub, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6738
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6742
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6752
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6756
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6760
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6764
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6769
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6773
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6779
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6783
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6787
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6791
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6795
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6800
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6804
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6808
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6812
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6816
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6820
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6825
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6829
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6833
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6837
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6844
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6848
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6854
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6858
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6862
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6866
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6872
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6876
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6880
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6884
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6888
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6892
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6896
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6901
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6905
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6911
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6915
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6919
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6923
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6927
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6931
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6935
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6939
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6943
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6947
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6951
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6955
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6959
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6963
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6967
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6971
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6975
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6979
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6983
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6987
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6993
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6997
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7001
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7005
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7009
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7013
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7017
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7021
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7025
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7029
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7033
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7037
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7041
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7045
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7049
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7053
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7057
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7061
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:7071
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:7075
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:7079
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7089
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7093
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7097
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7101
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7105
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7111
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7115
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7119
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7123
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7127
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7133
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7137
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7141
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1445:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7147
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7151
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7155
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7161
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7165
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7169
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7173
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7177
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7183
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7187
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7191
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7195
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7199
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7203
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7207
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7211
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7215
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7219
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7225
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7229
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7234
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7238
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7243
		{
			yyVAL.str = string("")
		}
	case 1468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7247
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7253
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7257
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1471:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7263
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7268
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7272
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7278
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7282
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7286
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7290
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7296
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7300
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7306
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7315
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7319
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7324
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7328
		{
			yyLOCAL = &GroupBy{Exprs: yyDollar[3].exprsUnion(), WithRollup: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7333
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7337
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7343
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7347
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7353
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7359
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7363
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1492:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7368
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7372
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7377
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7381
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7387
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7393
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7397
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1499:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7403
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7408
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7412
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7416
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7421
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7425
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7431
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7435
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7439
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7444
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7448
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7452
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7456
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7460
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7467
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7471
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7475
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7479
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7485
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7489
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7493
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7497
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7502
		{
			yyVAL.str = ""
		}
	case 1522:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7506
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1523:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7510
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1524:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7514
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1525:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7519
		{
			yyVAL.str = ""
		}
	case 1526:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7523
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7529
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7533
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1529:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7538
		{
			yyVAL.str = ""
		}
	case 1530:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7542
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1531:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7547
		{
			yyVAL.str = "cascaded"
		}
	case 1532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7551
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7555
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1534:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7560
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7564
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7570
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7576
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7582
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7591
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7595
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1541:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7600
		{
			yyVAL.str = ""
		}
	case 1542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7604
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7610
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7614
		{
			yyLOCAL = ForUpdateLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7618
		{
			yyLOCAL = ForUpdateLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7622
		{
			yyLOCAL = ForShareLock
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7626
		{
			yyLOCAL = ForShareLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7630
		{
			yyLOCAL = ForShareLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7634
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7640
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7644
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7648
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7653
		{
			yyVAL.str = ""
		}
	case 1554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7657
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7661
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1556:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7666
		{
			yyVAL.str = ""
		}
	case 1557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7670
		{
			yyVAL.str = " header"
		}
	case 1558:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7675
		{
			yyVAL.str = ""
		}
	case 1559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7679
		{
			yyVAL.str = " manifest on"
		}
	case 1560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7683
		{
			yyVAL.str = " manifest off"
		}
	case 1561:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7688
		{
			yyVAL.str = ""
		}
	case 1562:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7692
		{
			yyVAL.str = " overwrite on"
		}
	case 1563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7696
		{
			yyVAL.str = " overwrite off"
		}
	case 1564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7702
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1565:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7707
		{
			yyVAL.str = ""
		}
	case 1566:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7711
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7717
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7721
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1569:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7727
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7731
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1571:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7736
		{
			yyVAL.str = ""
		}
	case 1572:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7740
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7746
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7750
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1575:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7756
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1576:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7760
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1577:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7764
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1578:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7769
		{
			yyVAL.str = ""
		}
	case 1579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7773
		{
			yyVAL.str = " optionally"
		}
	case 1580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7786
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion(), RowAlias: yyDollar[3].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7790
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7794
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion(), RowAlias: yyDollar[6].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7798
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion(), RowAlias: yyDollar[5].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7802
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7808
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7812
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7816
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1588:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7820
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1589:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7825
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7829
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7833
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7838
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7842
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7848
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7852
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7858
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7862
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7868
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7872
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7877
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7887
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7891
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7897
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7904
		{
			yyVAL.str = "charset"
		}
	case 1608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7914
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7918
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7922
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7931
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7933
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1615:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7936
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7938
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1617:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7941
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7943
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1619:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7946
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7948
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1621:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7951
		{
			yyVAL.empty = struct{}{}
		}
	case 1622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7953
		{
			yyVAL.empty = struct{}{}
		}
	case 1623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7955
		{
			yyVAL.empty = struct{}{}
		}
	case 1624:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7959
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1625:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7964
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7968
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1627:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7973
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7975
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7979
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7985
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7989
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7996
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8002
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8006
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1636:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8012
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8016
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8023
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8029
		{
			yyLOCAL = &Kill{Type: yyDollar[2].killTypeUnion(), ProcesslistID: convertStringToUInt64(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 1641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8035
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8039
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8043
		{
			yyLOCAL = QueryType
		}
		yyVAL.union = yyLOCAL
	case 2270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8698
		{
		}
	case 2271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8703
		{
		}
	case 2272:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8707
		{
			skipToEnd(yylex)
		}
	case 2273:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8712
		{
			skipToEnd(yylex)
		}
	case 2274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8716
		{
			skipToEnd(yylex)
		}
	case 2275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8720
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
