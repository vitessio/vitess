// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const SELECT = 57351
const STREAM = 57352
const VSTREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const DEFAULT = 57374
const SET = 57375
const LOCK = 57376
const UNLOCK = 57377
const KEYS = 57378
const DO = 57379
const CALL = 57380
const DISTINCTROW = 57381
const PARSER = 57382
const GENERATED = 57383
const ALWAYS = 57384
const OUTFILE = 57385
const S3 = 57386
const DATA = 57387
const LOAD = 57388
const LINES = 57389
const TERMINATED = 57390
const ESCAPED = 57391
const ENCLOSED = 57392
const DUMPFILE = 57393
const CSV = 57394
const HEADER = 57395
const MANIFEST = 57396
const OVERWRITE = 57397
const STARTING = 57398
const OPTIONALLY = 57399
const VALUES = 57400
const LAST_INSERT_ID = 57401
const NEXT = 57402
const VALUE = 57403
const SHARE = 57404
const MODE = 57405
const SQL_NO_CACHE = 57406
const SQL_CACHE = 57407
const SQL_CALC_FOUND_ROWS = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const ON = 57419
const USING = 57420
const INPLACE = 57421
const COPY = 57422
const INSTANT = 57423
const ALGORITHM = 57424
const NONE = 57425
const SHARED = 57426
const EXCLUSIVE = 57427
const SUBQUERY_AS_EXPR = 57428
const STRING = 57429
const ID = 57430
const AT_ID = 57431
const AT_AT_ID = 57432
const HEX = 57433
const NCHAR_STRING = 57434
const INTEGRAL = 57435
const FLOAT = 57436
const DECIMAL = 57437
const HEXNUM = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BITNUM = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const VALUE_ARG = 57444
const LIST_ARG = 57445
const OFFSET_ARG = 57446
const JSON_PRETTY = 57447
const JSON_STORAGE_SIZE = 57448
const JSON_STORAGE_FREE = 57449
const JSON_CONTAINS = 57450
const JSON_CONTAINS_PATH = 57451
const JSON_EXTRACT = 57452
const JSON_KEYS = 57453
const JSON_OVERLAPS = 57454
const JSON_SEARCH = 57455
const JSON_VALUE = 57456
const EXTRACT = 57457
const NULL = 57458
const TRUE = 57459
const FALSE = 57460
const OFF = 57461
const DISCARD = 57462
const IMPORT = 57463
const ENABLE = 57464
const DISABLE = 57465
const TABLESPACE = 57466
const VIRTUAL = 57467
const STORED = 57468
const BOTH = 57469
const LEADING = 57470
const TRAILING = 57471
const EMPTY_FROM_CLAUSE = 57472
const LOWER_THAN_CHARSET = 57473
const CHARSET = 57474
const UNIQUE = 57475
const KEY = 57476
const EXPRESSION_PREC_SETTER = 57477
const OR = 57478
const XOR = 57479
const AND = 57480
const NOT = 57481
const BETWEEN = 57482
const CASE = 57483
const WHEN = 57484
const THEN = 57485
const ELSE = 57486
const END = 57487
const LE = 57488
const GE = 57489
const NE = 57490
const NULL_SAFE_EQUAL = 57491
const IS = 57492
const LIKE = 57493
const REGEXP = 57494
const RLIKE = 57495
const IN = 57496
const SHIFT_LEFT = 57497
const SHIFT_RIGHT = 57498
const DIV = 57499
const MOD = 57500
const UNARY = 57501
const COLLATE = 57502
const BINARY = 57503
const UNDERSCORE_ARMSCII8 = 57504
const UNDERSCORE_ASCII = 57505
const UNDERSCORE_BIG5 = 57506
const UNDERSCORE_BINARY = 57507
const UNDERSCORE_CP1250 = 57508
const UNDERSCORE_CP1251 = 57509
const UNDERSCORE_CP1256 = 57510
const UNDERSCORE_CP1257 = 57511
const UNDERSCORE_CP850 = 57512
const UNDERSCORE_CP852 = 57513
const UNDERSCORE_CP866 = 57514
const UNDERSCORE_CP932 = 57515
const UNDERSCORE_DEC8 = 57516
const UNDERSCORE_EUCJPMS = 57517
const UNDERSCORE_EUCKR = 57518
const UNDERSCORE_GB18030 = 57519
const UNDERSCORE_GB2312 = 57520
const UNDERSCORE_GBK = 57521
const UNDERSCORE_GEOSTD8 = 57522
const UNDERSCORE_GREEK = 57523
const UNDERSCORE_HEBREW = 57524
const UNDERSCORE_HP8 = 57525
const UNDERSCORE_KEYBCS2 = 57526
const UNDERSCORE_KOI8R = 57527
const UNDERSCORE_KOI8U = 57528
const UNDERSCORE_LATIN1 = 57529
const UNDERSCORE_LATIN2 = 57530
const UNDERSCORE_LATIN5 = 57531
const UNDERSCORE_LATIN7 = 57532
const UNDERSCORE_MACCE = 57533
const UNDERSCORE_MACROMAN = 57534
const UNDERSCORE_SJIS = 57535
const UNDERSCORE_SWE7 = 57536
const UNDERSCORE_TIS620 = 57537
const UNDERSCORE_UCS2 = 57538
const UNDERSCORE_UJIS = 57539
const UNDERSCORE_UTF16 = 57540
const UNDERSCORE_UTF16LE = 57541
const UNDERSCORE_UTF32 = 57542
const UNDERSCORE_UTF8 = 57543
const UNDERSCORE_UTF8MB4 = 57544
const UNDERSCORE_UTF8MB3 = 57545
const INTERVAL = 57546
const WINDOW_EXPR = 57547
const JSON_EXTRACT_OP = 57548
const JSON_UNQUOTE_EXTRACT_OP = 57549
const CREATE = 57550
const ALTER = 57551
const DROP = 57552
const RENAME = 57553
const ANALYZE = 57554
const ADD = 57555
const FLUSH = 57556
const CHANGE = 57557
const MODIFY = 57558
const DEALLOCATE = 57559
const REVERT = 57560
const SCHEMA = 57561
const TABLE = 57562
const INDEX = 57563
const VIEW = 57564
const TO = 57565
const IGNORE = 57566
const IF = 57567
const PRIMARY = 57568
const COLUMN = 57569
const SPATIAL = 57570
const FULLTEXT = 57571
const KEY_BLOCK_SIZE = 57572
const CHECK = 57573
const INDEXES = 57574
const ACTION = 57575
const CASCADE = 57576
const CONSTRAINT = 57577
const FOREIGN = 57578
const NO = 57579
const REFERENCES = 57580
const RESTRICT = 57581
const SHOW = 57582
const DESCRIBE = 57583
const EXPLAIN = 57584
const DATE = 57585
const ESCAPE = 57586
const REPAIR = 57587
const OPTIMIZE = 57588
const TRUNCATE = 57589
const COALESCE = 57590
const EXCHANGE = 57591
const REBUILD = 57592
const PARTITIONING = 57593
const REMOVE = 57594
const PREPARE = 57595
const EXECUTE = 57596
const MAXVALUE = 57597
const PARTITION = 57598
const REORGANIZE = 57599
const LESS = 57600
const THAN = 57601
const PROCEDURE = 57602
const TRIGGER = 57603
const VINDEX = 57604
const VINDEXES = 57605
const DIRECTORY = 57606
const NAME = 57607
const UPGRADE = 57608
const STATUS = 57609
const VARIABLES = 57610
const WARNINGS = 57611
const CASCADED = 57612
const DEFINER = 57613
const OPTION = 57614
const SQL = 57615
const UNDEFINED = 57616
const SEQUENCE = 57617
const MERGE = 57618
const TEMPORARY = 57619
const TEMPTABLE = 57620
const INVOKER = 57621
const SECURITY = 57622
const FIRST = 57623
const AFTER = 57624
const LAST = 57625
const VITESS_MIGRATION = 57626
const CANCEL = 57627
const RETRY = 57628
const LAUNCH = 57629
const COMPLETE = 57630
const CLEANUP = 57631
const THROTTLE = 57632
const UNTHROTTLE = 57633
const EXPIRE = 57634
const RATIO = 57635
const VITESS_THROTTLER = 57636
const THRESHOLD = 57637
const BEGIN = 57638
const START = 57639
const TRANSACTION = 57640
const COMMIT = 57641
const ROLLBACK = 57642
const SAVEPOINT = 57643
const RELEASE = 57644
const WORK = 57645
const BIT = 57646
const TINYINT = 57647
const SMALLINT = 57648
const MEDIUMINT = 57649
const INT = 57650
const INTEGER = 57651
const BIGINT = 57652
const INTNUM = 57653
const REAL = 57654
const DOUBLE = 57655
const FLOAT_TYPE = 57656
const DECIMAL_TYPE = 57657
const NUMERIC = 57658
const TIME = 57659
const TIMESTAMP = 57660
const DATETIME = 57661
const YEAR = 57662
const CHAR = 57663
const VARCHAR = 57664
const BOOL = 57665
const CHARACTER = 57666
const VARBINARY = 57667
const NCHAR = 57668
const TEXT = 57669
const TINYTEXT = 57670
const MEDIUMTEXT = 57671
const LONGTEXT = 57672
const BLOB = 57673
const TINYBLOB = 57674
const MEDIUMBLOB = 57675
const LONGBLOB = 57676
const JSON = 57677
const JSON_SCHEMA_VALID = 57678
const JSON_SCHEMA_VALIDATION_REPORT = 57679
const ENUM = 57680
const GEOMETRY = 57681
const POINT = 57682
const LINESTRING = 57683
const POLYGON = 57684
const GEOMCOLLECTION = 57685
const GEOMETRYCOLLECTION = 57686
const MULTIPOINT = 57687
const MULTILINESTRING = 57688
const MULTIPOLYGON = 57689
const ASCII = 57690
const UNICODE = 57691
const NULLX = 57692
const AUTO_INCREMENT = 57693
const APPROXNUM = 57694
const SIGNED = 57695
const UNSIGNED = 57696
const ZEROFILL = 57697
const CODE = 57698
const COLLATION = 57699
const COLUMNS = 57700
const DATABASES = 57701
const ENGINES = 57702
const EVENT = 57703
const EXTENDED = 57704
const FIELDS = 57705
const FULL = 57706
const FUNCTION = 57707
const GTID_EXECUTED = 57708
const KEYSPACES = 57709
const OPEN = 57710
const PLUGINS = 57711
const PRIVILEGES = 57712
const PROCESSLIST = 57713
const SCHEMAS = 57714
const TABLES = 57715
const TRIGGERS = 57716
const USER = 57717
const VGTID_EXECUTED = 57718
const VITESS_KEYSPACES = 57719
const VITESS_METADATA = 57720
const VITESS_MIGRATIONS = 57721
const VITESS_REPLICATION_STATUS = 57722
const VITESS_SHARDS = 57723
const VITESS_TABLETS = 57724
const VITESS_TARGET = 57725
const VSCHEMA = 57726
const VITESS_THROTTLED_APPS = 57727
const NAMES = 57728
const GLOBAL = 57729
const SESSION = 57730
const ISOLATION = 57731
const LEVEL = 57732
const READ = 57733
const WRITE = 57734
const ONLY = 57735
const REPEATABLE = 57736
const COMMITTED = 57737
const UNCOMMITTED = 57738
const SERIALIZABLE = 57739
const CURRENT_TIMESTAMP = 57740
const DATABASE = 57741
const CURRENT_DATE = 57742
const NOW = 57743
const CURRENT_TIME = 57744
const LOCALTIME = 57745
const LOCALTIMESTAMP = 57746
const CURRENT_USER = 57747
const UTC_DATE = 57748
const UTC_TIME = 57749
const UTC_TIMESTAMP = 57750
const DAY = 57751
const DAY_HOUR = 57752
const DAY_MICROSECOND = 57753
const DAY_MINUTE = 57754
const DAY_SECOND = 57755
const HOUR = 57756
const HOUR_MICROSECOND = 57757
const HOUR_MINUTE = 57758
const HOUR_SECOND = 57759
const MICROSECOND = 57760
const MINUTE = 57761
const MINUTE_MICROSECOND = 57762
const MINUTE_SECOND = 57763
const MONTH = 57764
const QUARTER = 57765
const SECOND = 57766
const SECOND_MICROSECOND = 57767
const YEAR_MONTH = 57768
const WEEK = 57769
const REPLACE = 57770
const CONVERT = 57771
const CAST = 57772
const SUBSTR = 57773
const SUBSTRING = 57774
const SEPARATOR = 57775
const TIMESTAMPADD = 57776
const TIMESTAMPDIFF = 57777
const WEIGHT_STRING = 57778
const LTRIM = 57779
const RTRIM = 57780
const TRIM = 57781
const JSON_ARRAY = 57782
const JSON_OBJECT = 57783
const JSON_QUOTE = 57784
const JSON_DEPTH = 57785
const JSON_TYPE = 57786
const JSON_LENGTH = 57787
const JSON_VALID = 57788
const JSON_ARRAY_APPEND = 57789
const JSON_ARRAY_INSERT = 57790
const JSON_INSERT = 57791
const JSON_MERGE = 57792
const JSON_MERGE_PATCH = 57793
const JSON_MERGE_PRESERVE = 57794
const JSON_REMOVE = 57795
const JSON_REPLACE = 57796
const JSON_SET = 57797
const JSON_UNQUOTE = 57798
const COUNT = 57799
const AVG = 57800
const MAX = 57801
const MIN = 57802
const SUM = 57803
const GROUP_CONCAT = 57804
const BIT_AND = 57805
const BIT_OR = 57806
const BIT_XOR = 57807
const STD = 57808
const STDDEV = 57809
const STDDEV_POP = 57810
const STDDEV_SAMP = 57811
const VAR_POP = 57812
const VAR_SAMP = 57813
const VARIANCE = 57814
const REGEXP_INSTR = 57815
const REGEXP_LIKE = 57816
const REGEXP_REPLACE = 57817
const REGEXP_SUBSTR = 57818
const ExtractValue = 57819
const UpdateXML = 57820
const GET_LOCK = 57821
const RELEASE_LOCK = 57822
const RELEASE_ALL_LOCKS = 57823
const IS_FREE_LOCK = 57824
const IS_USED_LOCK = 57825
const LOCATE = 57826
const POSITION = 57827
const MATCH = 57828
const AGAINST = 57829
const BOOLEAN = 57830
const LANGUAGE = 57831
const WITH = 57832
const QUERY = 57833
const EXPANSION = 57834
const WITHOUT = 57835
const VALIDATION = 57836
const UNUSED = 57837
const ARRAY = 57838
const BYTE = 57839
const CUME_DIST = 57840
const DESCRIPTION = 57841
const DENSE_RANK = 57842
const EMPTY = 57843
const EXCEPT = 57844
const FIRST_VALUE = 57845
const GROUPING = 57846
const GROUPS = 57847
const JSON_TABLE = 57848
const LAG = 57849
const LAST_VALUE = 57850
const LATERAL = 57851
const LEAD = 57852
const NTH_VALUE = 57853
const NTILE = 57854
const OF = 57855
const OVER = 57856
const PERCENT_RANK = 57857
const RANK = 57858
const RECURSIVE = 57859
const ROW_NUMBER = 57860
const SYSTEM = 57861
const WINDOW = 57862
const ACTIVE = 57863
const ADMIN = 57864
const AUTOEXTEND_SIZE = 57865
const BUCKETS = 57866
const CLONE = 57867
const COLUMN_FORMAT = 57868
const COMPONENT = 57869
const DEFINITION = 57870
const ENFORCED = 57871
const ENGINE_ATTRIBUTE = 57872
const EXCLUDE = 57873
const FOLLOWING = 57874
const GET_MASTER_PUBLIC_KEY = 57875
const HISTOGRAM = 57876
const HISTORY = 57877
const INACTIVE = 57878
const INVISIBLE = 57879
const LOCKED = 57880
const MASTER_COMPRESSION_ALGORITHMS = 57881
const MASTER_PUBLIC_KEY_PATH = 57882
const MASTER_TLS_CIPHERSUITES = 57883
const MASTER_ZSTD_COMPRESSION_LEVEL = 57884
const NESTED = 57885
const NETWORK_NAMESPACE = 57886
const NOWAIT = 57887
const NULLS = 57888
const OJ = 57889
const OLD = 57890
const OPTIONAL = 57891
const ORDINALITY = 57892
const ORGANIZATION = 57893
const OTHERS = 57894
const PARTIAL = 57895
const PATH = 57896
const PERSIST = 57897
const PERSIST_ONLY = 57898
const PRECEDING = 57899
const PRIVILEGE_CHECKS_USER = 57900
const PROCESS = 57901
const RANDOM = 57902
const REFERENCE = 57903
const REQUIRE_ROW_FORMAT = 57904
const RESOURCE = 57905
const RESPECT = 57906
const RESTART = 57907
const RETAIN = 57908
const REUSE = 57909
const ROLE = 57910
const SECONDARY = 57911
const SECONDARY_ENGINE = 57912
const SECONDARY_ENGINE_ATTRIBUTE = 57913
const SECONDARY_LOAD = 57914
const SECONDARY_UNLOAD = 57915
const SIMPLE = 57916
const SKIP = 57917
const SRID = 57918
const THREAD_PRIORITY = 57919
const TIES = 57920
const UNBOUNDED = 57921
const VCPU = 57922
const VISIBLE = 57923
const RETURNING = 57924
const FORMAT_BYTES = 57925
const FORMAT_PICO_TIME = 57926
const PS_CURRENT_THREAD_ID = 57927
const PS_THREAD_ID = 57928
const GTID_SUBSET = 57929
const GTID_SUBTRACT = 57930
const WAIT_FOR_EXECUTED_GTID_SET = 57931
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 57932
const FORMAT = 57933
const TREE = 57934
const VITESS = 57935
const TRADITIONAL = 57936
const VTEXPLAIN = 57937
const LOCAL = 57938
const LOW_PRIORITY = 57939
const NO_WRITE_TO_BINLOG = 57940
const LOGS = 57941
const ERROR = 57942
const GENERAL = 57943
const HOSTS = 57944
const OPTIMIZER_COSTS = 57945
const USER_RESOURCES = 57946
const SLOW = 57947
const CHANNEL = 57948
const RELAY = 57949
const EXPORT = 57950
const CURRENT = 57951
const ROW = 57952
const ROWS = 57953
const AVG_ROW_LENGTH = 57954
const CONNECTION = 57955
const CHECKSUM = 57956
const DELAY_KEY_WRITE = 57957
const ENCRYPTION = 57958
const ENGINE = 57959
const INSERT_METHOD = 57960
const MAX_ROWS = 57961
const MIN_ROWS = 57962
const PACK_KEYS = 57963
const PASSWORD = 57964
const FIXED = 57965
const DYNAMIC = 57966
const COMPRESSED = 57967
const REDUNDANT = 57968
const COMPACT = 57969
const ROW_FORMAT = 57970
const STATS_AUTO_RECALC = 57971
const STATS_PERSISTENT = 57972
const STATS_SAMPLE_PAGES = 57973
const STORAGE = 57974
const MEMORY = 57975
const DISK = 57976
const PARTITIONS = 57977
const LINEAR = 57978
const RANGE = 57979
const LIST = 57980
const SUBPARTITION = 57981
const SUBPARTITIONS = 57982
const HASH = 57983

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"THRESHOLD",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	13, 48,
	14, 48,
	-2, 37,
	-1, 49,
	1, 147,
	659, 147,
	-2, 155,
	-1, 50,
	135, 155,
	176, 155,
	341, 155,
	-2, 507,
	-1, 57,
	36, 757,
	238, 757,
	249, 757,
	284, 771,
	285, 771,
	-2, 759,
	-1, 62,
	240, 788,
	-2, 786,
	-1, 116,
	237, 1444,
	-2, 121,
	-1, 118,
	1, 148,
	659, 148,
	-2, 155,
	-1, 129,
	136, 391,
	243, 391,
	-2, 494,
	-1, 148,
	135, 155,
	176, 155,
	341, 155,
	-2, 516,
	-1, 801,
	87, 1461,
	-2, 1306,
	-1, 802,
	87, 1462,
	221, 1466,
	-2, 1307,
	-1, 803,
	221, 1465,
	-2, 39,
	-1, 883,
	60, 857,
	-2, 872,
	-1, 969,
	248, 40,
	253, 40,
	-2, 402,
	-1, 1055,
	1, 564,
	659, 564,
	-2, 155,
	-1, 1345,
	221, 1466,
	-2, 1307,
	-1, 1493,
	60, 858,
	-2, 877,
	-1, 1494,
	60, 859,
	-2, 878,
	-1, 1545,
	135, 155,
	176, 155,
	341, 155,
	-2, 441,
	-1, 1624,
	136, 391,
	243, 391,
	-2, 494,
	-1, 1633,
	248, 41,
	253, 41,
	-2, 403,
	-1, 1991,
	221, 1470,
	-2, 1464,
	-1, 1992,
	221, 1466,
	-2, 1462,
	-1, 2091,
	135, 155,
	176, 155,
	341, 155,
	-2, 442,
	-1, 2098,
	26, 176,
	-2, 178,
	-1, 2462,
	78, 95,
	88, 95,
	-2, 936,
	-1, 2530,
	634, 683,
	-2, 657,
	-1, 2697,
	50, 1403,
	-2, 1397,
	-1, 2995,
	8, 54,
	19, 54,
	21, 54,
	89, 54,
	-2, 906,
	-1, 3354,
	634, 683,
	-2, 671,
	-1, 3442,
	23, 1822,
	33, 1822,
	177, 1822,
	260, 1822,
	321, 1822,
	322, 1822,
	323, 1822,
	324, 1822,
	325, 1822,
	326, 1822,
	327, 1822,
	329, 1822,
	330, 1822,
	331, 1822,
	332, 1822,
	333, 1822,
	334, 1822,
	335, 1822,
	336, 1822,
	337, 1822,
	338, 1822,
	339, 1822,
	340, 1822,
	342, 1822,
	344, 1822,
	345, 1822,
	346, 1822,
	347, 1822,
	348, 1822,
	349, 1822,
	350, 1822,
	351, 1822,
	352, 1822,
	355, 1822,
	356, 1822,
	357, 1822,
	358, 1822,
	359, 1822,
	361, 1822,
	362, 1822,
	363, 1822,
	364, 1822,
	505, 1822,
	-2, 615,
}

const yyPrivate = 57344

const yyLast = 46541

var yyAct = [...]int{
	1501, 3101, 3102, 812, 3335, 3513, 3482, 3419, 3483, 3440,
	3524, 805, 3072, 3103, 2088, 675, 2927, 1548, 3385, 804,
	1858, 2040, 2849, 3408, 2020, 2752, 2759, 3319, 2809, 771,
	3267, 2814, 39, 655, 2811, 2810, 2808, 2813, 2812, 1119,
	3317, 899, 3059, 2710, 767, 3131, 5, 2360, 2022, 2800,
	876, 802, 2656, 3307, 2713, 2394, 657, 2711, 2158, 2714,
	3136, 2960, 2966, 2828, 2829, 2591, 2044, 2767, 2456, 2986,
	1508, 766, 1471, 2060, 765, 685, 2831, 2708, 2698, 772,
	2420, 2952, 1982, 653, 2121, 2495, 2855, 2575, 2189, 2146,
	1602, 2496, 2527, 931, 2126, 2497, 157, 2076, 900, 2445,
	2065, 40, 38, 2064, 189, 2426, 1121, 189, 1495, 880,
	635, 884, 878, 2412, 2396, 641, 1953, 1873, 1854, 1096,
	2567, 2145, 2128, 1812, 2167, 189, 1649, 143, 1631, 2489,
	902, 2052, 1987, 959, 2206, 2433, 964, 1979, 98, 1537,
	189, 1517, 649, 2464, 2067, 667, 94, 1067, 1475, 1357,
	1756, 1877, 99, 1831, 1752, 1638, 938, 1285, 967, 935,
	2143, 970, 1730, 939, 2117, 641, 189, 641, 965, 966,
	977, 2045, 1536, 1522, 662, 917, 919, 890, 1949, 1341,
	1001, 1988, 1317, 886, 885, 887, 101, 10, 79, 9,
	654, 1110, 8, 1761, 161, 121, 119, 120, 1597, 126,
	1623, 127, 1050, 888, 78, 912, 1117, 100, 2012, 644,
	87, 661, 1365, 1361, 3344, 2520, 92, 3514, 2819, 1886,
	3060, 2, 2797, 907, 911, 2160, 2161, 2162, 3370, 590,
	2160, 2816, 2550, 2549, 630, 2819, 2518, 2204, 3052, 89,
	893, 1715, 1952, 3466, 122, 1006, 3015, 93, 89, 624,
	932, 128, 2583, 89, 3371, 2584, 3366, 2017, 2018, 1819,
	89, 1818, 1817, 105, 106, 107, 630, 110, 3365, 1816,
	116, 1815, 1834, 185, 2817, 1814, 585, 645, 624, 1792,
	3461, 647, 927, 648, 879, 926, 877, 643, 2392, 980,
	957, 2817, 3106, 2694, 956, 2540, 872, 873, 874, 875,
	2823, 981, 883, 894, 2248, 3486, 948, 943, 1007, 1010,
	1011, 901, 2422, 122, 955, 954, 953, 2823, 3534, 3481,
	621, 3106, 2193, 1014, 2660, 3504, 1003, 1302, 2932, 2931,
	914, 915, 2543, 1023, 3320, 821, 822, 823, 2361, 1020,
	1021, 1022, 1286, 1025, 1026, 1027, 1028, 2191, 1824, 1031,
	1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041,
	1042, 1043, 1044, 1045, 1046, 1047, 2192, 3366, 606, 821,
	822, 823, 925, 769, 770, 925, 769, 770, 1502, 3105,
	604, 122, 3470, 624, 3420, 3468, 2874, 3263, 3262, 3065,
	1005, 1004, 3066, 3495, 3273, 3464, 3084, 3073, 3409, 3416,
	2186, 1286, 3272, 2137, 80, 80, 3083, 3469, 3105, 1863,
	3467, 2820, 80, 3445, 2894, 3450, 624, 1612, 2393, 624,
	601, 2557, 2558, 2748, 3349, 2048, 2131, 2582, 2820, 616,
	2257, 80, 2473, 3448, 82, 2472, 2436, 2254, 2474, 1103,
	2082, 1105, 3454, 3455, 611, 1318, 2749, 2750, 1114, 1296,
	2769, 2770, 2566, 3149, 614, 625, 1538, 3449, 1539, 3426,
	1086, 2437, 1299, 2019, 1300, 1301, 2521, 2871, 1319, 1320,
	1321, 1322, 1323, 1324, 1325, 1327, 1326, 1328, 1329, 1102,
	1104, 870, 89, 89, 625, 2083, 2084, 869, 3336, 1087,
	89, 2485, 1049, 3426, 3487, 2255, 1091, 1092, 1074, 1074,
	2882, 1080, 2851, 1075, 1075, 2101, 2100, 624, 1296, 89,
	2963, 1073, 624, 1072, 2880, 3488, 2625, 591, 638, 593,
	607, 1800, 627, 2856, 626, 597, 642, 595, 599, 608,
	600, 1535, 594, 947, 605, 636, 949, 596, 609, 610,
	613, 617, 618, 619, 615, 612, 2568, 603, 628, 2429,
	2430, 1054, 1292, 1024, 1705, 1284, 1927, 2768, 1113, 1743,
	1742, 2249, 2250, 2252, 2251, 952, 624, 1060, 1061, 2771,
	1479, 2528, 2130, 3295, 2168, 3296, 2553, 2207, 1088, 2844,
	1100, 2228, 2212, 2229, 1101, 2230, 1736, 2845, 3516, 625,
	1081, 2852, 1731, 1107, 1106, 1093, 918, 1112, 1706, 1063,
	1707, 1089, 1090, 1095, 1056, 1094, 3462, 3054, 2048, 2570,
	3050, 1292, 2853, 2046, 2047, 3053, 2231, 1030, 1099, 1029,
	2209, 990, 625, 950, 2211, 625, 2219, 2215, 2217, 2218,
	2216, 2220, 2221, 952, 3247, 944, 189, 2213, 189, 2171,
	3110, 189, 946, 945, 184, 1919, 1908, 1909, 1910, 1911,
	1921, 1912, 1913, 1914, 1926, 1922, 1915, 1916, 1923, 1924,
	1925, 1917, 1918, 1920, 2659, 988, 2210, 960, 123, 1482,
	1616, 961, 641, 2061, 641, 641, 1000, 2626, 961, 999,
	2771, 166, 998, 997, 928, 922, 920, 928, 922, 920,
	996, 950, 995, 994, 641, 189, 993, 1335, 1336, 1337,
	1338, 992, 987, 2255, 936, 952, 1048, 1349, 934, 1332,
	1353, 936, 2574, 625, 1084, 1343, 973, 3535, 625, 1009,
	1332, 3493, 1345, 3049, 2478, 972, 936, 1637, 972, 1008,
	1108, 3528, 1753, 2144, 913, 3343, 2519, 163, 2571, 1070,
	164, 1076, 1077, 1078, 1079, 951, 1745, 958, 2197, 2196,
	2190, 1749, 1277, 2555, 2522, 1534, 629, 1017, 2397, 2399,
	2790, 2552, 2487, 183, 1610, 1115, 1116, 991, 1609, 1608,
	1052, 2538, 625, 1750, 1606, 979, 589, 622, 584, 818,
	1053, 1291, 1288, 1289, 1290, 1295, 1297, 1294, 818, 1293,
	3332, 1272, 623, 818, 2587, 1735, 2046, 2047, 1739, 1287,
	1737, 1738, 2964, 1740, 1741, 2269, 3002, 2188, 2982, 2821,
	2822, 989, 2872, 951, 2469, 1339, 2565, 2542, 118, 2564,
	1333, 1334, 2825, 2432, 2369, 1866, 2821, 2822, 1526, 1273,
	1274, 979, 2134, 1434, 1636, 3422, 2427, 3082, 1065, 2825,
	1291, 1288, 1289, 1290, 1295, 1297, 1294, 1469, 1293, 1717,
	1716, 1718, 1719, 1720, 3013, 3014, 2089, 1332, 1287, 979,
	1329, 2541, 979, 2747, 1345, 3421, 2577, 83, 3453, 3422,
	1051, 2576, 2135, 896, 167, 2577, 978, 3104, 1069, 2133,
	2576, 113, 1097, 173, 3357, 951, 1503, 1505, 1111, 1016,
	1887, 1002, 1062, 1059, 921, 1762, 3045, 921, 1363, 3421,
	1364, 1367, 88, 88, 1888, 1071, 3104, 1485, 2976, 2208,
	88, 1489, 3452, 2136, 2256, 2592, 1083, 880, 1483, 979,
	1470, 189, 2916, 2132, 2398, 641, 641, 1085, 1809, 88,
	1486, 1746, 978, 1878, 1540, 2611, 2511, 3496, 972, 975,
	976, 189, 936, 1732, 1301, 1733, 969, 973, 1734, 3526,
	1300, 1301, 3527, 114, 3525, 1878, 3145, 2286, 3020, 3019,
	978, 641, 2175, 978, 189, 982, 972, 968, 982, 972,
	984, 1646, 1645, 984, 985, 983, 641, 985, 983, 1487,
	1635, 2185, 189, 98, 1470, 2183, 1440, 1441, 1442, 1443,
	1444, 990, 1302, 1488, 3489, 986, 988, 99, 2594, 3536,
	979, 2187, 3003, 892, 158, 1055, 1322, 1323, 1324, 1325,
	1327, 1326, 1328, 1329, 1476, 2180, 1826, 1828, 1829, 641,
	978, 1068, 3530, 1984, 1463, 1643, 972, 975, 976, 1098,
	936, 101, 1345, 1885, 969, 973, 3255, 3254, 641, 641,
	1827, 641, 1763, 641, 641, 3245, 641, 641, 641, 641,
	641, 641, 1678, 1302, 2184, 1681, 3095, 1683, 2180, 1345,
	3094, 1629, 1345, 641, 1345, 189, 2848, 2604, 2603, 2602,
	2596, 3079, 2600, 3080, 2595, 2313, 2593, 1725, 1473, 1723,
	1712, 2598, 1700, 3387, 1302, 189, 3537, 877, 1484, 3325,
	2597, 1622, 879, 1507, 1504, 2321, 1836, 2182, 641, 3027,
	189, 978, 1276, 1015, 1490, 1682, 1641, 1012, 2599, 2601,
	1837, 1330, 1331, 1835, 1651, 641, 1652, 189, 1654, 1656,
	1531, 1532, 1660, 1662, 1664, 1666, 1668, 1299, 3388, 1300,
	1301, 3026, 1640, 189, 3326, 3016, 2613, 1613, 1614, 1615,
	189, 1724, 1302, 1722, 1711, 1605, 1639, 1639, 2798, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 641, 2261,
	2262, 2263, 1620, 1619, 1618, 821, 822, 823, 1632, 1502,
	1611, 2786, 1758, 2493, 1302, 2492, 159, 1324, 1325, 1327,
	1326, 1328, 1329, 171, 1302, 2140, 1726, 1710, 1299, 1686,
	1300, 1301, 1764, 1765, 1320, 1321, 1322, 1323, 1324, 1325,
	1327, 1326, 1328, 1329, 1690, 1691, 1769, 1709, 2053, 2054,
	1696, 1697, 1708, 1776, 1777, 1778, 1984, 1754, 1502, 1299,
	1981, 1300, 1301, 1698, 179, 1883, 3500, 1502, 1766, 1983,
	1692, 1689, 1688, 1687, 1884, 1770, 1658, 1772, 1773, 1774,
	1775, 3010, 630, 816, 1779, 2476, 630, 2156, 2155, 630,
	122, 955, 954, 953, 2154, 2153, 1791, 1535, 3498, 1502,
	1302, 3490, 1318, 3352, 2586, 160, 165, 162, 168, 169,
	170, 172, 174, 175, 176, 177, 1768, 1299, 3351, 1300,
	1301, 178, 180, 181, 182, 1319, 1320, 1321, 1322, 1323,
	1324, 1325, 1327, 1326, 1328, 1329, 1302, 2152, 2151, 1790,
	1306, 1307, 1308, 1309, 1310, 1311, 1312, 1304, 3329, 1299,
	39, 1300, 1301, 1789, 2418, 3515, 2755, 95, 1511, 1299,
	3328, 1300, 1301, 641, 641, 3327, 1302, 1805, 96, 2323,
	3250, 641, 3477, 1502, 1298, 1502, 189, 1861, 1861, 1298,
	1502, 2418, 3415, 1502, 3432, 1502, 1318, 1302, 3234, 104,
	1840, 3233, 1302, 1859, 1859, 1862, 2418, 3395, 2418, 3391,
	103, 2756, 102, 1881, 1512, 3144, 2889, 1882, 2325, 1319,
	1320, 1321, 1322, 1323, 1324, 1325, 1327, 1326, 1328, 1329,
	3430, 1502, 1469, 1502, 641, 2758, 1302, 1343, 3142, 1830,
	3378, 1502, 3345, 1832, 1345, 1299, 3091, 1300, 1301, 1468,
	2276, 1945, 1467, 2753, 1879, 641, 3063, 3342, 2274, 1302,
	2275, 1345, 3258, 1502, 3281, 1302, 2418, 3246, 3280, 1318,
	2769, 2770, 1314, 1466, 1315, 3063, 1502, 2754, 3024, 1977,
	1502, 1299, 1502, 1300, 1301, 3009, 641, 641, 1316, 1330,
	1331, 1313, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1327,
	1326, 1328, 1329, 2857, 2006, 1470, 2418, 3061, 1302, 1833,
	2760, 1299, 2854, 1300, 1301, 2789, 79, 1939, 1808, 95,
	1806, 1503, 2013, 1807, 1989, 2788, 97, 1950, 1797, 1798,
	96, 2502, 1299, 2490, 1300, 1301, 1992, 1299, 1465, 1300,
	1301, 2180, 1502, 3428, 1502, 2980, 1502, 1838, 2227, 3304,
	1502, 2465, 1980, 2334, 1502, 2037, 1839, 2202, 1841, 1842,
	1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852,
	1853, 1299, 1865, 1300, 1301, 2779, 2778, 2768, 2030, 189,
	2031, 2201, 2043, 1302, 641, 1502, 1872, 1874, 1302, 2771,
	97, 1991, 3302, 1502, 1299, 2014, 1300, 1301, 2775, 2776,
	1299, 1950, 1300, 1301, 1302, 2775, 2774, 3238, 189, 2442,
	1502, 641, 2025, 2098, 2466, 1302, 1989, 1793, 98, 1994,
	1995, 189, 2255, 2551, 2468, 641, 1302, 1759, 1992, 189,
	1721, 189, 99, 189, 189, 1990, 2414, 1941, 98, 1889,
	1890, 1891, 1892, 1299, 1302, 1300, 1301, 1713, 641, 1502,
	2063, 97, 99, 1903, 2036, 2141, 1319, 1320, 1321, 1322,
	1323, 1324, 1325, 1327, 1326, 1328, 1329, 1993, 1502, 3237,
	1996, 1997, 3299, 1502, 1601, 2532, 2107, 2108, 2109, 2110,
	2525, 2526, 3071, 1991, 2418, 2417, 1302, 1703, 3285, 1502,
	2093, 1302, 2092, 1699, 2102, 1695, 2103, 2104, 2105, 2106,
	3491, 893, 2757, 641, 1515, 2465, 2074, 2024, 1694, 2279,
	2951, 1502, 2113, 2114, 2115, 2116, 2279, 1502, 1299, 1693,
	1300, 1301, 1513, 1299, 2035, 1300, 1301, 2058, 2944, 1502,
	641, 2123, 1109, 2096, 2038, 2709, 641, 1864, 1502, 1299,
	2129, 1300, 1301, 1601, 1600, 2169, 2975, 2056, 1302, 2529,
	1299, 103, 1300, 1301, 1302, 927, 2507, 2080, 926, 2079,
	2078, 1299, 1302, 1300, 1301, 2095, 2094, 2097, 2466, 2181,
	1514, 1318, 2166, 2268, 2975, 2941, 1502, 2434, 2255, 1299,
	1302, 1300, 1301, 641, 2139, 1546, 1545, 1298, 641, 2434,
	2441, 1302, 641, 641, 1319, 1320, 1321, 1322, 1323, 1324,
	1325, 1327, 1326, 1328, 1329, 1302, 2742, 2124, 2119, 2120,
	2977, 3383, 3356, 2418, 2174, 2138, 2255, 2177, 2142, 2178,
	1298, 1299, 2150, 1300, 1301, 2194, 1299, 2180, 1300, 1301,
	189, 2442, 2939, 1502, 2936, 2777, 980, 189, 2904, 1502,
	1302, 2173, 2124, 2176, 2172, 2442, 2887, 1502, 981, 2442,
	189, 189, 2682, 2081, 189, 2198, 189, 2195, 1639, 2199,
	2200, 2975, 2279, 189, 2389, 1502, 2334, 2310, 2309, 2180,
	189, 2163, 2051, 1506, 2015, 2387, 1502, 2761, 1864, 1810,
	1318, 2765, 1748, 1299, 1533, 1300, 1301, 1302, 2764, 1299,
	3340, 1300, 1301, 963, 962, 882, 189, 1299, 89, 1300,
	1301, 641, 2205, 1319, 1320, 1321, 1322, 1323, 1324, 1325,
	1327, 1326, 1328, 1329, 1302, 1299, 2272, 1300, 1301, 3458,
	2277, 2266, 2766, 2280, 3276, 2281, 1299, 2762, 1300, 1301,
	2288, 3398, 2763, 3269, 2290, 2291, 2292, 1509, 3235, 3156,
	1299, 3044, 1300, 1301, 2298, 2299, 2300, 2301, 2302, 2303,
	2304, 2305, 2306, 2307, 3041, 2234, 2273, 1302, 3022, 2271,
	3028, 2899, 2241, 2242, 2898, 1832, 1345, 2244, 1992, 1302,
	2801, 2366, 1502, 89, 1302, 1299, 2245, 1300, 1301, 1603,
	2314, 2315, 2316, 2317, 2318, 2122, 2320, 2846, 2803, 2799,
	2322, 2533, 1302, 2118, 2327, 2328, 2112, 2329, 2349, 1502,
	2332, 2111, 2333, 2283, 1302, 1728, 2336, 1634, 1630, 2293,
	2340, 3029, 3030, 3031, 2345, 2346, 2347, 2348, 2253, 1674,
	1599, 115, 1299, 1991, 1300, 1301, 2308, 2359, 1302, 2362,
	2363, 1833, 1302, 2499, 3032, 2850, 1054, 2365, 2367, 2264,
	3270, 2341, 1502, 2498, 2370, 2371, 2372, 2373, 2374, 1299,
	2137, 1300, 1301, 1302, 3242, 2381, 2382, 2028, 2383, 3046,
	3510, 2386, 2388, 2037, 1302, 2390, 1795, 1990, 3508, 1302,
	1675, 1676, 1677, 3484, 1302, 2402, 2282, 2265, 2285, 2267,
	1861, 3033, 3034, 3035, 2987, 2988, 2993, 3364, 2997, 1302,
	3290, 2499, 1299, 1302, 1300, 1301, 1859, 2403, 2990, 2795,
	2794, 2992, 2793, 2709, 1299, 2728, 1300, 1301, 2512, 1299,
	2235, 1300, 1301, 2494, 2731, 2729, 2946, 189, 3360, 2732,
	2730, 1302, 2401, 2727, 3126, 189, 3125, 1299, 1796, 1300,
	1301, 1670, 104, 1510, 2319, 3271, 641, 2942, 2042, 1299,
	39, 1300, 1301, 103, 2034, 102, 2981, 641, 2914, 2458,
	1302, 2687, 2686, 2910, 97, 3324, 3135, 2438, 2896, 2404,
	2419, 2406, 3137, 1299, 1302, 1300, 1301, 1299, 2968, 1300,
	1301, 189, 2971, 2895, 3124, 189, 2967, 2892, 1671, 1672,
	1673, 2733, 2696, 2451, 2452, 2699, 2701, 1747, 1299, 868,
	1300, 1301, 897, 1302, 2702, 2415, 2773, 1302, 2483, 1299,
	898, 1300, 1301, 2428, 1299, 2385, 1300, 1301, 2503, 1299,
	1476, 1300, 1301, 1502, 2391, 1887, 1019, 1018, 2865, 650,
	2486, 2488, 2457, 2973, 1299, 2498, 1300, 1301, 1299, 1888,
	1300, 1301, 2411, 1302, 2384, 2416, 2524, 2580, 2479, 641,
	95, 1275, 2539, 2431, 123, 189, 95, 2463, 2380, 1302,
	97, 96, 189, 97, 3522, 1302, 1299, 96, 1300, 1301,
	2053, 2054, 2791, 2548, 2238, 3437, 641, 2129, 1302, 2467,
	3341, 2470, 3265, 641, 2477, 2772, 2455, 2379, 2039, 2226,
	2480, 2378, 641, 104, 2225, 1299, 2224, 1300, 1301, 1302,
	2223, 2546, 2491, 1302, 103, 2685, 102, 1302, 1345, 1299,
	2500, 1300, 1301, 2684, 1302, 97, 905, 906, 2222, 2953,
	2259, 189, 189, 189, 189, 189, 1302, 2377, 102, 2513,
	2514, 2515, 903, 2508, 3312, 909, 909, 2509, 1299, 104,
	1300, 1301, 1299, 2376, 1300, 1301, 189, 189, 2545, 2375,
	103, 1622, 102, 3311, 2615, 2616, 2617, 2618, 2619, 3293,
	3143, 3141, 2364, 2589, 2534, 2535, 1302, 189, 3140, 3133,
	1302, 2501, 3042, 2624, 2972, 2970, 2504, 2505, 1299, 2544,
	1300, 1301, 104, 2358, 2804, 2164, 103, 2357, 641, 1617,
	1302, 2356, 904, 103, 1299, 3132, 1300, 1301, 2355, 1302,
	1299, 2605, 1300, 1301, 2961, 2434, 2569, 3512, 3511, 3512,
	2354, 2607, 2588, 1299, 3114, 1300, 1301, 2414, 2572, 2620,
	2578, 2627, 2311, 2579, 2026, 2447, 2450, 2451, 2452, 2448,
	1302, 2449, 2453, 1527, 1299, 641, 1300, 1301, 1299, 1519,
	1300, 1301, 1299, 3511, 1300, 1301, 108, 109, 3330, 1299,
	2353, 1300, 1301, 3008, 2352, 2606, 895, 2608, 3, 91,
	1, 1299, 1744, 1300, 1301, 3012, 3447, 602, 2016, 2666,
	2637, 2661, 2639, 641, 2351, 1474, 3485, 3443, 2663, 3444,
	1714, 641, 1704, 2350, 3074, 1951, 3266, 2807, 2650, 2651,
	2652, 2653, 2170, 3040, 2127, 971, 1980, 148, 1980, 2090,
	2718, 1299, 2629, 1300, 1301, 1299, 2091, 1300, 1301, 3411,
	112, 2635, 641, 929, 2344, 111, 974, 2736, 2737, 1082,
	2165, 2590, 3064, 2484, 2099, 1299, 189, 1300, 1301, 884,
	641, 1552, 2666, 1550, 1299, 2706, 1300, 1301, 1551, 1549,
	1554, 2712, 1553, 2690, 641, 2721, 2712, 2741, 1345, 1489,
	2458, 641, 641, 1345, 189, 189, 189, 189, 189, 2873,
	2312, 2665, 2662, 2915, 2664, 1299, 189, 1300, 1301, 1799,
	2677, 189, 637, 2454, 189, 631, 189, 2715, 186, 189,
	189, 189, 1541, 1520, 2691, 2688, 2928, 2681, 1013, 2703,
	2704, 592, 2780, 2743, 2203, 598, 2744, 1350, 1794, 2683,
	2471, 886, 885, 924, 2723, 2724, 2722, 2726, 2689, 2725,
	916, 2027, 2405, 2734, 923, 2827, 3243, 98, 2717, 1302,
	2965, 2695, 2738, 2739, 189, 2697, 2745, 2720, 2678, 2679,
	2680, 99, 2421, 2806, 2700, 2751, 1758, 641, 1302, 2693,
	1345, 3323, 3134, 2781, 3396, 641, 2867, 2481, 1516, 2783,
	189, 2935, 2782, 2645, 2646, 2647, 2648, 2649, 2284, 1876,
	1340, 2068, 3109, 1825, 189, 659, 2884, 2885, 2886, 658,
	2888, 2890, 2834, 656, 1302, 2835, 2407, 2435, 1302, 2805,
	1305, 2869, 2129, 189, 2897, 806, 189, 2826, 2395, 2901,
	2902, 2903, 2905, 2906, 2907, 2908, 1528, 2841, 2909, 2446,
	2911, 2912, 2913, 2343, 1302, 2917, 2918, 2919, 2920, 2921,
	2922, 2923, 2924, 2925, 2926, 2444, 2858, 2443, 2236, 2861,
	2860, 1302, 2342, 2933, 2075, 2989, 2937, 2985, 2938, 2940,
	2868, 2943, 2945, 3439, 2947, 2948, 2949, 2950, 2070, 2784,
	2785, 2878, 2956, 2875, 2876, 2066, 2877, 2413, 757, 2879,
	756, 2881, 668, 2883, 1299, 660, 1300, 1301, 2339, 1302,
	652, 755, 2338, 754, 2930, 3005, 641, 2833, 3423, 2554,
	2847, 2934, 2556, 1299, 2482, 1300, 1301, 2978, 2979, 2843,
	1283, 2983, 1492, 1302, 646, 942, 2863, 2864, 2337, 1302,
	2870, 1500, 1496, 3347, 2258, 189, 2893, 1491, 1302, 2995,
	2996, 1906, 1907, 3354, 2815, 2335, 1497, 3058, 2796, 1299,
	2530, 1300, 1301, 1299, 1302, 1300, 1301, 2157, 65, 43,
	1302, 2954, 2955, 3318, 3384, 2957, 753, 750, 3111, 3112,
	3113, 2032, 2033, 1499, 2962, 1498, 2969, 2657, 2658, 1299,
	3367, 1300, 1301, 2331, 3368, 749, 3369, 1934, 2974, 1280,
	3460, 1801, 90, 34, 189, 2991, 1299, 33, 1300, 1301,
	32, 31, 30, 25, 24, 23, 2994, 2330, 22, 21,
	27, 2999, 20, 2326, 19, 2998, 18, 2818, 3480, 3521,
	117, 1303, 2324, 189, 2959, 3047, 3048, 2834, 52, 3062,
	2835, 3006, 3007, 49, 1299, 47, 1300, 1301, 2289, 125,
	124, 3023, 189, 3025, 2278, 189, 189, 189, 3068, 3069,
	1358, 50, 46, 1057, 44, 641, 641, 2984, 1299, 29,
	1300, 1301, 28, 17, 1299, 16, 1300, 1301, 15, 14,
	13, 3081, 12, 1299, 3085, 1300, 1301, 11, 7, 3000,
	3001, 1500, 1496, 6, 37, 36, 35, 1804, 26, 1299,
	4, 1300, 1301, 2517, 2159, 1299, 1497, 1300, 1301, 0,
	0, 3096, 641, 641, 641, 641, 0, 0, 2447, 2450,
	2451, 2452, 2448, 3070, 2449, 2453, 3100, 0, 2987, 2988,
	0, 1493, 1494, 1499, 0, 1498, 0, 0, 3108, 0,
	0, 0, 0, 0, 0, 3090, 3115, 0, 0, 0,
	0, 0, 0, 3086, 0, 0, 3017, 3018, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3129, 3107, 3098, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3051, 0,
	0, 1861, 3055, 3056, 3057, 0, 0, 0, 189, 39,
	0, 0, 0, 0, 0, 0, 0, 1859, 3158, 0,
	2712, 3130, 0, 0, 0, 3138, 3150, 1345, 3139, 0,
	0, 0, 641, 3146, 641, 3154, 3152, 3148, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2715, 0, 3257,
	0, 2715, 0, 0, 0, 3162, 3244, 0, 3264, 0,
	0, 0, 0, 0, 1518, 0, 0, 0, 0, 0,
	0, 0, 0, 817, 0, 0, 81, 0, 3274, 3275,
	0, 3277, 0, 3278, 3279, 0, 641, 0, 3282, 3283,
	3284, 3241, 3286, 3289, 3287, 3240, 3256, 3239, 0, 189,
	1861, 1604, 641, 3268, 0, 3288, 0, 0, 3298, 3300,
	3301, 3303, 3305, 3306, 3308, 641, 1859, 3291, 3261, 3260,
	3248, 0, 0, 0, 3159, 3160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3292, 0, 3338, 881, 3294, 81, 0, 0, 3297, 0,
	0, 0, 0, 0, 0, 641, 3316, 0, 3334, 641,
	641, 3313, 3314, 0, 881, 3315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3333, 0, 0, 941,
	0, 0, 0, 0, 3331, 0, 3322, 0, 641, 0,
	3337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2715,
	0, 0, 0, 3251, 3252, 3253, 0, 0, 0, 1760,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 641, 3363, 0,
	0, 3358, 0, 0, 0, 39, 0, 0, 0, 0,
	3350, 3353, 0, 189, 0, 0, 0, 0, 3379, 0,
	0, 0, 3355, 0, 3380, 3381, 0, 0, 0, 0,
	0, 641, 189, 0, 0, 0, 0, 3346, 0, 0,
	0, 0, 0, 0, 0, 0, 3392, 0, 0, 0,
	0, 0, 3373, 0, 0, 3374, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3382, 3362, 0,
	0, 0, 3417, 3418, 0, 0, 3372, 0, 0, 0,
	0, 39, 641, 0, 3389, 2712, 3427, 3429, 3431, 3394,
	0, 3424, 1345, 3402, 641, 3425, 3407, 3410, 3397, 3404,
	3403, 3401, 3406, 3405, 3399, 0, 3268, 3412, 0, 0,
	0, 3459, 0, 0, 0, 0, 0, 0, 641, 641,
	0, 3435, 0, 0, 0, 0, 0, 3438, 0, 0,
	0, 3456, 3446, 3451, 0, 0, 0, 0, 3465, 0,
	641, 0, 3424, 0, 0, 0, 3425, 0, 3463, 0,
	3476, 0, 0, 0, 189, 641, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3474, 0, 0, 0, 3479,
	1353, 0, 0, 0, 0, 0, 0, 0, 1820, 1821,
	1822, 1823, 3497, 3499, 3501, 0, 3494, 0, 0, 0,
	3492, 0, 0, 0, 1861, 0, 0, 3503, 641, 0,
	3509, 3507, 3502, 0, 3505, 0, 0, 0, 0, 0,
	1859, 3506, 0, 3520, 3517, 0, 0, 0, 3424, 0,
	641, 3523, 3425, 0, 0, 0, 0, 1867, 1868, 3532,
	3533, 3531, 1870, 3529, 909, 909, 1875, 641, 0, 641,
	1880, 0, 0, 0, 0, 0, 0, 0, 1861, 0,
	3539, 3540, 3541, 1893, 1894, 1895, 1896, 1897, 1898, 1899,
	1900, 1901, 1902, 3288, 1859, 3538, 0, 1928, 1929, 1930,
	1931, 1932, 1933, 1935, 0, 1940, 0, 1942, 1943, 1944,
	0, 1946, 1947, 1948, 0, 1954, 1955, 1956, 1957, 1958,
	1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968,
	1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 0, 1978,
	0, 1985, 1986, 909, 0, 909, 909, 909, 909, 909,
	0, 0, 0, 0, 0, 1998, 1999, 2000, 2001, 2002,
	2003, 2004, 2005, 0, 2007, 2008, 2009, 2010, 2011, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 909, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2049, 2050, 3478, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1569, 0, 0, 0,
	0, 0, 0, 0, 1118, 0, 1118, 1118, 0, 0,
	2087, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 881, 1342, 1347, 1348, 0, 1351, 0,
	1352, 1354, 1355, 1356, 0, 1359, 1360, 1362, 1362, 2125,
	1362, 1366, 1366, 1368, 1369, 1370, 1371, 1372, 1373, 1374,
	1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384,
	1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394,
	1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404,
	1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414,
	1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424,
	1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 0, 0,
	1557, 0, 1433, 0, 1435, 1436, 1437, 1438, 1439, 0,
	0, 0, 0, 0, 0, 0, 0, 1366, 1366, 1366,
	1366, 1366, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453,
	1454, 1455, 1456, 1457, 1458, 3180, 3182, 3181, 3199, 3200,
	3201, 3202, 3203, 3204, 3205, 707, 0, 0, 0, 0,
	0, 0, 1472, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1570, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1478, 0, 0, 0, 0,
	0, 881, 0, 0, 0, 881, 0, 0, 0, 0,
	0, 881, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1583, 1586, 1587, 1588, 1589, 1590,
	1591, 0, 1592, 1593, 1594, 1595, 1596, 1571, 1572, 1573,
	1574, 1555, 1556, 1584, 0, 1558, 0, 1559, 1560, 1561,
	1562, 1563, 1564, 1565, 1566, 1567, 0, 0, 1568, 1575,
	1576, 1577, 1578, 0, 1579, 1580, 1581, 1582, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2294,
	2295, 2296, 2297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3194, 3195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1585, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1118, 0, 773, 0, 686, 777, 688, 774, 775, 0,
	684, 687, 776, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1518, 0, 0, 0, 0, 0, 0, 705, 706,
	3179, 3183, 3184, 3185, 3196, 3197, 3198, 3206, 3208, 738,
	3207, 3209, 3210, 3211, 3214, 3215, 3216, 3217, 3212, 3213,
	3218, 3163, 3167, 3164, 3165, 3166, 3178, 3168, 3169, 3170,
	3171, 3172, 3173, 3174, 3175, 3176, 3177, 3219, 3220, 3221,
	3222, 3223, 3224, 3189, 3193, 3192, 3190, 3191, 3187, 3188,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 778, 0, 779, 0, 0, 783, 0, 0,
	0, 785, 784, 0, 786, 752, 751, 0, 0, 780,
	781, 801, 782, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1569, 0,
	0, 0, 0, 0, 0, 1118, 1118, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 184, 620,
	0, 0, 0, 0, 0, 640, 0, 3225, 3226, 3227,
	3228, 3229, 3230, 3231, 3232, 0, 0, 0, 0, 0,
	0, 0, 123, 0, 145, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 166, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 640, 0, 640, 0, 0,
	2585, 0, 0, 0, 0, 0, 156, 0, 0, 0,
	0, 0, 144, 0, 0, 0, 0, 0, 0, 909,
	0, 0, 2609, 2610, 0, 0, 2612, 0, 0, 2614,
	0, 163, 0, 0, 164, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2621,
	2622, 2623, 0, 132, 133, 155, 154, 183, 0, 0,
	0, 2628, 1557, 0, 2630, 2631, 2632, 0, 0, 0,
	2633, 2634, 0, 0, 1954, 2636, 0, 0, 2638, 0,
	0, 2640, 2641, 2642, 2643, 0, 0, 0, 0, 2644,
	1954, 1954, 1954, 1954, 1954, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 909, 0,
	0, 0, 0, 0, 0, 2667, 2668, 2669, 2670, 2671,
	2672, 0, 0, 0, 2673, 2674, 0, 2675, 0, 2676,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1570, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 149, 130, 152, 137,
	129, 0, 150, 151, 0, 0, 0, 0, 167, 0,
	0, 0, 0, 0, 2707, 0, 0, 173, 138, 0,
	0, 0, 0, 0, 0, 2069, 0, 0, 0, 0,
	0, 0, 141, 139, 134, 135, 136, 140, 0, 0,
	0, 2740, 0, 0, 131, 0, 1583, 1586, 1587, 1588,
	1589, 1590, 1591, 142, 1592, 1593, 1594, 1595, 1596, 1571,
	1572, 1573, 1574, 1555, 1556, 1584, 0, 1558, 0, 1559,
	1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 0, 0,
	1568, 1575, 1576, 1577, 1578, 0, 1579, 1580, 1581, 1582,
	0, 0, 0, 0, 0, 941, 0, 0, 0, 0,
	0, 2802, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 941, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2891, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2900, 0, 0,
	0, 0, 184, 0, 0, 0, 153, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1585, 0, 0, 0, 0, 0, 123, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 184, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 146, 2523, 0,
	147, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 123, 0, 145, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 166, 163, 0, 0, 164, 0,
	159, 0, 0, 0, 0, 0, 0, 171, 2260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 156, 0, 0, 0, 0,
	0, 144, 640, 1271, 640, 640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2270, 179, 0,
	163, 0, 0, 164, 640, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3043,
	0, 0, 1625, 1626, 155, 154, 183, 0, 0, 0,
	0, 0, 1344, 0, 0, 0, 0, 0, 0, 160,
	165, 162, 168, 169, 170, 172, 174, 175, 176, 177,
	0, 0, 3067, 0, 0, 178, 180, 181, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 167, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3087, 0, 3088,
	0, 0, 3089, 0, 0, 3092, 3093, 0, 0, 0,
	0, 0, 0, 2368, 3097, 149, 1627, 152, 0, 1624,
	0, 150, 151, 0, 3099, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 758, 0, 173, 0, 0, 0,
	0, 0, 0, 0, 0, 2400, 3116, 0, 0, 3117,
	0, 3118, 3119, 0, 3120, 0, 3121, 759, 0, 0,
	0, 3122, 0, 881, 1344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2439, 2440, 3147, 0, 0, 0,
	0, 0, 0, 2459, 0, 2460, 2461, 3155, 639, 0,
	3157, 0, 158, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 588, 3161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 640, 640, 0, 0, 0,
	0, 588, 3236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 891, 0, 933, 0,
	940, 0, 0, 0, 0, 0, 0, 158, 0, 0,
	0, 640, 0, 910, 910, 0, 0, 0, 0, 0,
	0, 0, 588, 0, 0, 0, 640, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1598, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1607, 0, 0, 0,
	0, 0, 0, 0, 0, 2537, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 640,
	0, 1633, 0, 0, 0, 0, 0, 0, 0, 1642,
	0, 0, 1344, 1644, 0, 153, 1647, 1648, 640, 640,
	0, 640, 3321, 640, 640, 0, 640, 640, 640, 640,
	640, 640, 0, 0, 0, 0, 0, 0, 0, 1344,
	1679, 1680, 1344, 640, 1344, 0, 1685, 0, 0, 0,
	0, 0, 0, 0, 159, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 146, 0, 640, 147,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1751, 0, 0, 640, 0, 0, 0, 0,
	0, 0, 179, 0, 0, 0, 0, 0, 0, 159,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 640, 0,
	0, 0, 0, 160, 165, 162, 168, 169, 170, 172,
	174, 175, 176, 177, 0, 0, 0, 179, 0, 178,
	180, 181, 182, 0, 0, 2654, 3361, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3375,
	0, 0, 3376, 0, 3377, 0, 0, 0, 160, 165,
	162, 168, 169, 170, 172, 174, 175, 176, 177, 0,
	0, 0, 0, 0, 178, 180, 181, 182, 2069, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2716, 0, 81, 0, 0, 2069, 2069, 2069, 2069,
	2069, 0, 0, 0, 0, 0, 0, 80, 41, 42,
	82, 0, 0, 2459, 881, 0, 0, 0, 2069, 0,
	0, 2069, 0, 0, 0, 0, 0, 86, 0, 0,
	0, 45, 71, 72, 0, 69, 73, 0, 3457, 0,
	0, 0, 0, 0, 70, 0, 0, 0, 0, 0,
	0, 0, 0, 640, 640, 0, 0, 0, 0, 0,
	0, 640, 0, 0, 0, 0, 0, 0, 3471, 0,
	3472, 0, 3473, 58, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2824, 89, 0, 0, 0, 0,
	0, 0, 0, 0, 2832, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 640, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1344, 0, 0, 0, 0, 0,
	0, 0, 0, 1869, 0, 640, 0, 0, 3518, 0,
	3519, 1344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 640, 640, 0, 0,
	0, 0, 588, 0, 588, 0, 0, 588, 0, 0,
	0, 0, 0, 0, 0, 1120, 0, 1120, 1120, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1278, 0, 0,
	0, 0, 0, 0, 0, 0, 640, 0, 0, 0,
	0, 0, 0, 48, 51, 54, 53, 56, 0, 68,
	0, 588, 77, 74, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 819, 0, 1984, 0, 0, 820,
	0, 0, 0, 0, 0, 57, 85, 84, 1346, 1860,
	66, 67, 55, 0, 640, 0, 0, 0, 75, 76,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 640, 0, 0, 0, 0, 2069, 0, 0, 0,
	0, 0, 0, 0, 0, 640, 0, 0, 640, 3004,
	0, 59, 60, 0, 61, 62, 63, 64, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 640, 0,
	0, 0, 826, 827, 828, 829, 830, 831, 832, 833,
	834, 835, 836, 837, 838, 839, 840, 841, 842, 843,
	844, 845, 846, 847, 848, 849, 850, 851, 852, 853,
	854, 855, 856, 857, 858, 859, 860, 861, 862, 863,
	864, 865, 866, 867, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 640, 0, 0, 0, 0, 0, 0,
	2147, 2148, 2149, 0, 0, 0, 0, 0, 0, 0,
	1346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	640, 0, 0, 0, 0, 0, 640, 1642, 0, 0,
	1642, 0, 1642, 0, 0, 0, 0, 0, 2179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1480, 1481,
	0, 0, 0, 83, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1477, 0, 0, 588, 0, 0,
	0, 0, 0, 640, 0, 0, 0, 0, 640, 0,
	0, 0, 640, 640, 1524, 0, 0, 891, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1542,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	588, 0, 0, 0, 0, 88, 3123, 0, 3127, 3128,
	587, 0, 0, 0, 0, 0, 0, 0, 588, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 871, 0,
	0, 2716, 933, 81, 0, 2716, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1650, 1650, 0, 1650, 0, 1650, 1650, 0, 1659,
	1650, 1650, 1650, 1650, 1650, 0, 0, 0, 1346, 937,
	0, 0, 0, 0, 0, 0, 933, 0, 0, 0,
	0, 640, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1346, 0, 0, 1346, 0,
	1346, 588, 0, 0, 3249, 0, 0, 0, 0, 0,
	0, 1727, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1701, 0, 0, 0, 0, 0, 0, 1755, 0,
	0, 0, 0, 0, 0, 0, 588, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1344, 0, 640, 0,
	0, 0, 0, 1757, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 588,
	0, 1120, 0, 0, 0, 0, 588, 0, 0, 0,
	0, 0, 0, 0, 0, 1780, 1781, 588, 588, 588,
	588, 588, 588, 588, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2716, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1368, 1369, 1370,
	1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380,
	1381, 1382, 1383, 1387, 1388, 1389, 1390, 1391, 1392, 1393,
	1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403,
	1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413,
	1414, 1415, 1416, 1418, 1419, 1420, 1421, 1422, 1423, 1424,
	1425, 1426, 1427, 1445, 1446, 1447, 1448, 1449, 1450, 1451,
	1452, 1453, 1454, 1455, 1456, 1457, 1458, 0, 0, 184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1621, 3348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 123, 0, 145, 640, 0, 0, 81,
	0, 0, 0, 0, 0, 0, 166, 640, 0, 0,
	0, 0, 0, 0, 0, 0, 1120, 1120, 0, 0,
	0, 0, 0, 0, 1802, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 156, 0, 0,
	0, 0, 0, 144, 0, 0, 0, 0, 0, 0,
	0, 2475, 588, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 163, 0, 0, 164, 0, 0, 0, 0,
	3393, 0, 0, 0, 0, 81, 0, 1855, 0, 0,
	0, 0, 0, 0, 1625, 1626, 155, 154, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1871, 640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 910, 910, 0, 0, 640, 1346, 0, 1904,
	1905, 0, 0, 640, 0, 0, 0, 1642, 1642, 0,
	0, 0, 640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1344, 2547,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3475, 0, 0, 0, 0, 0, 0, 0, 1120,
	0, 0, 0, 0, 0, 0, 0, 149, 1627, 152,
	0, 1624, 0, 150, 151, 0, 0, 0, 0, 167,
	0, 910, 1757, 910, 910, 910, 910, 910, 173, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1058,
	0, 1064, 0, 0, 1066, 0, 0, 2029, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 1701, 0, 0, 0, 0,
	0, 0, 0, 0, 2041, 0, 0, 0, 0, 0,
	910, 0, 0, 0, 0, 0, 0, 0, 1524, 0,
	0, 1120, 0, 0, 891, 0, 0, 0, 1279, 0,
	0, 0, 0, 0, 0, 640, 0, 588, 0, 0,
	0, 933, 0, 0, 1757, 588, 0, 588, 0, 588,
	2077, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 640, 0, 0, 0, 0, 0, 158,
	0, 640, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 940, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 933, 0, 0, 0, 0, 0, 940,
	640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 640, 0, 0, 0, 1344, 0,
	0, 640, 640, 1344, 0, 0, 0, 153, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 933, 0, 0, 0,
	0, 1855, 0, 0, 0, 1855, 1855, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2787, 0, 0, 146, 0,
	0, 147, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 640, 0, 0,
	1344, 0, 0, 0, 0, 640, 588, 0, 0, 0,
	0, 159, 0, 588, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 0, 0, 0, 588, 588, 0, 0,
	588, 0, 2239, 0, 0, 0, 0, 0, 0, 588,
	0, 0, 0, 0, 0, 0, 588, 0, 0, 0,
	0, 0, 0, 0, 2247, 0, 2866, 1530, 0, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 588, 0, 0, 1547, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	160, 165, 162, 168, 169, 170, 172, 174, 175, 176,
	177, 0, 0, 0, 0, 0, 178, 180, 181, 182,
	0, 1120, 0, 0, 0, 0, 640, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1346, 0, 1757, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1684, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1729, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1767, 0, 0, 0,
	0, 0, 3011, 1771, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1782, 1783, 1784, 1785, 1786, 1787,
	1788, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 640, 640, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2408,
	0, 0, 0, 588, 0, 0, 0, 0, 0, 0,
	2423, 1701, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 640, 640, 640, 640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 588, 0, 0,
	0, 588, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2041,
	0, 588, 0, 0, 0, 0, 2531, 0, 2516, 1813,
	0, 0, 0, 0, 0, 2536, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1344, 0, 0,
	0, 0, 640, 0, 640, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 588, 588, 588,
	588, 588, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 588, 588, 0, 0, 640, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1855, 640, 588, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 910, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1855, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 640, 0, 0, 0, 640,
	640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2655, 0, 0, 0,
	0, 0, 0, 0, 1120, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 910, 0, 0, 0,
	0, 0, 0, 0, 0, 1650, 0, 0, 0, 0,
	0, 0, 0, 0, 2055, 0, 0, 0, 0, 0,
	0, 0, 2059, 2692, 2062, 0, 0, 1813, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1120, 0, 0,
	0, 0, 588, 0, 2719, 1650, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 640, 0, 0,
	0, 0, 0, 0, 1346, 0, 0, 0, 0, 1346,
	588, 588, 588, 588, 588, 0, 0, 0, 0, 0,
	0, 0, 2735, 0, 0, 0, 0, 588, 0, 0,
	1701, 640, 588, 0, 0, 588, 2746, 1757, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	933, 0, 0, 0, 0, 0, 0, 0, 2041, 0,
	588, 0, 640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1344, 0, 640, 0, 1346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 588, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 640, 640,
	588, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 588,
	640, 0, 588, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 640, 0, 0, 0, 0,
	0, 0, 0, 1813, 819, 0, 0, 0, 0, 820,
	2214, 0, 0, 0, 0, 0, 0, 0, 0, 1860,
	0, 0, 0, 2232, 2233, 0, 0, 2237, 0, 0,
	0, 0, 0, 0, 0, 0, 2240, 0, 640, 2929,
	0, 0, 0, 2243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	640, 0, 0, 0, 0, 0, 0, 0, 0, 2246,
	0, 0, 0, 0, 0, 0, 0, 640, 0, 640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 588, 826, 827, 828, 829, 830, 831, 832, 833,
	834, 835, 836, 837, 838, 839, 840, 841, 842, 843,
	844, 845, 846, 847, 848, 849, 850, 851, 852, 853,
	854, 855, 856, 857, 858, 859, 860, 861, 862, 863,
	864, 865, 866, 867, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	588, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 89, 0, 0, 819, 0, 0, 0, 807,
	820, 821, 822, 823, 808, 0, 0, 809, 810, 588,
	811, 0, 0, 0, 0, 0, 0, 0, 2041, 2041,
	0, 0, 0, 0, 816, 824, 825, 0, 588, 0,
	0, 588, 588, 588, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3075, 3076, 3077, 3078, 0,
	0, 2836, 2837, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 826, 827, 828, 829, 830, 831, 832,
	833, 834, 835, 836, 837, 838, 839, 840, 841, 842,
	843, 844, 845, 846, 847, 848, 849, 850, 851, 852,
	853, 854, 855, 856, 857, 858, 859, 860, 861, 862,
	863, 864, 865, 866, 867, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2838, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2462, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1701, 3151, 0, 3153, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2839,
	2840, 0, 0, 0, 0, 0, 0, 0, 2510, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2041,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1120, 0,
	0, 0, 0, 0, 0, 1701, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2559, 2560, 2561, 2562, 2563, 0,
	773, 0, 0, 777, 0, 774, 775, 0, 0, 0,
	776, 0, 0, 0, 0, 0, 0, 0, 3309, 1813,
	2573, 0, 3309, 3309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2581, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2041, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2041, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2041, 0, 0, 0, 0, 1701,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 588, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3386, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3390, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1346, 0,
	0, 1120, 1120, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3433, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3441, 0,
	0, 0, 0, 0, 0, 0, 0, 2792, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1701, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2830, 0, 0, 0, 0, 0, 0,
	0, 3386, 0, 0, 0, 0, 0, 2842, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2041, 0, 0, 2859, 0, 0, 2862,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 380,
	2929, 0, 3441, 1254, 1239, 496, 0, 1182, 1257, 1151,
	1170, 1267, 1173, 1176, 1218, 1130, 1196, 399, 1167, 1123,
	1155, 1125, 1162, 1126, 1153, 1184, 257, 1150, 1241, 1200,
	1256, 350, 254, 1132, 1156, 413, 1172, 196, 1220, 466,
	241, 361, 358, 504, 269, 260, 256, 239, 303, 369,
	411, 486, 405, 1263, 354, 1206, 0, 476, 384, 0,
	0, 0, 1186, 1245, 1194, 1232, 1181, 1219, 1140, 1205,
	1258, 1168, 1215, 1259, 309, 237, 311, 195, 396, 477,
	273, 0, 0, 0, 0, 3413, 630, 0, 0, 0,
	0, 3414, 0, 0, 0, 0, 228, 0, 2958, 235,
	0, 0, 0, 335, 344, 343, 324, 325, 327, 329,
	334, 341, 347, 1164, 1212, 1253, 1165, 1214, 252, 307,
	259, 251, 501, 1264, 1244, 1129, 1193, 1252, 0, 0,
	219, 1255, 1188, 0, 1217, 0, 1270, 1124, 1208, 0,
	1127, 1131, 1266, 1248, 1159, 262, 0, 0, 0, 0,
	0, 0, 0, 1185, 1195, 1229, 1233, 1179, 0, 0,
	0, 0, 0, 0, 0, 1157, 0, 1204, 0, 0,
	0, 1136, 1128, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3021, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3036, 0, 0, 3037, 3038,
	3039, 0, 0, 0, 0, 1183, 0, 0, 0, 0,
	1139, 0, 1158, 1230, 0, 1122, 284, 1133, 385, 244,
	0, 1237, 1247, 1180, 542, 1251, 1178, 1177, 1224, 1137,
	1243, 1171, 349, 1135, 316, 191, 215, 0, 1169, 395,
	441, 453, 1242, 1154, 1163, 242, 1161, 451, 409, 521,
	223, 271, 438, 415, 449, 422, 274, 1203, 1222, 450,
	356, 506, 432, 518, 543, 544, 250, 389, 530, 490,
	538, 560, 216, 247, 403, 483, 524, 473, 381, 502,
	503, 315, 472, 282, 194, 353, 549, 214, 459, 355,
	232, 221, 509, 527, 276, 436, 556, 508, 203, 485,
	516, 229, 463, 0, 0, 562, 205, 514, 482, 377,
	312, 313, 204, 0, 437, 255, 280, 245, 398, 511,
	512, 243, 563, 218, 537, 210, 1134, 536, 391, 505,
	515, 378, 367, 209, 513, 376, 366, 320, 339, 340,
	267, 293, 429, 359, 430, 292, 294, 387, 386, 388,
	198, 525, 0, 199, 0, 478, 526, 564, 224, 225,
	227, 1149, 266, 270, 278, 281, 289, 290, 299, 351,
	402, 428, 424, 433, 1238, 500, 519, 531, 541, 547,
	548, 550, 551, 552, 553, 554, 557, 555, 390, 297,
	474, 319, 357, 1227, 1269, 408, 452, 230, 523, 475,
	1144, 1148, 1142, 1209, 1143, 1198, 1199, 1145, 1260, 1261,
	1262, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	1231, 1138, 0, 1146, 1147, 1240, 1249, 1250, 583, 368,
	465, 520, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 374, 382, 499, 298, 206, 207, 208, 492, 493,
	494, 495, 534, 535, 539, 442, 443, 444, 445, 279,
	529, 295, 448, 447, 317, 318, 363, 431, 1202, 190,
	211, 352, 1265, 434, 275, 561, 533, 528, 197, 213,
	1141, 249, 1152, 1160, 0, 1166, 1174, 1175, 1187, 1189,
	1190, 1191, 1192, 1210, 1211, 1213, 1221, 1223, 1226, 1228,
	1235, 1246, 1268, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	364, 370, 371, 372, 373, 392, 393, 394, 397, 400,
	401, 404, 406, 407, 410, 414, 418, 419, 420, 421,
	423, 425, 435, 440, 454, 455, 456, 457, 458, 461,
	462, 467, 468, 469, 470, 471, 479, 480, 484, 507,
	510, 522, 540, 545, 460, 287, 288, 426, 427, 300,
	301, 558, 559, 286, 517, 546, 0, 0, 362, 1201,
	1207, 365, 268, 291, 306, 1216, 532, 481, 217, 446,
	277, 240, 1234, 1236, 202, 236, 220, 246, 261, 264,
	310, 375, 383, 412, 417, 283, 258, 234, 439, 231,
	464, 487, 488, 489, 491, 379, 253, 416, 1197, 1225,
	360, 497, 498, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 0,
	0, 0, 1254, 1239, 496, 3359, 1182, 1257, 1151, 1170,
	1267, 1173, 1176, 1218, 1130, 1196, 399, 1167, 1123, 1155,
	1125, 1162, 1126, 1153, 1184, 257, 1150, 1241, 1200, 1256,
	350, 254, 1132, 1156, 413, 1172, 196, 1220, 466, 241,
	361, 358, 504, 269, 260, 256, 239, 303, 369, 411,
	486, 405, 1263, 354, 1206, 0, 476, 384, 0, 0,
	0, 1186, 1245, 1194, 1232, 1181, 1219, 1140, 1205, 1258,
	1168, 1215, 1259, 309, 237, 311, 195, 396, 477, 273,
	0, 0, 0, 0, 0, 188, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 0,
	0, 0, 335, 344, 343, 324, 325, 327, 329, 334,
	341, 347, 1164, 1212, 1253, 1165, 1214, 252, 307, 259,
	251, 501, 1264, 1244, 1129, 1193, 1252, 0, 0, 219,
	1255, 1188, 0, 1217, 0, 1270, 1124, 1208, 0, 1127,
	1131, 1266, 1248, 1159, 262, 0, 0, 0, 0, 0,
	0, 0, 1185, 1195, 1229, 1233, 1179, 0, 0, 0,
	0, 0, 2747, 0, 1157, 0, 1204, 0, 0, 0,
	1136, 1128, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1183, 0, 0, 0, 0, 1139,
	0, 1158, 1230, 0, 1122, 284, 1133, 385, 244, 0,
	1237, 1247, 1180, 542, 1251, 1178, 1177, 1224, 1137, 1243,
	1171, 349, 1135, 316, 191, 215, 0, 1169, 395, 441,
	453, 1242, 1154, 1163, 242, 1161, 451, 409, 521, 223,
	271, 438, 415, 449, 422, 274, 1203, 1222, 450, 356,
	506, 432, 518, 543, 544, 250, 389, 530, 490, 538,
	560, 216, 247, 403, 483, 524, 473, 381, 502, 503,
	315, 472, 282, 194, 353, 549, 214, 459, 355, 232,
	221, 509, 527, 276, 436, 556, 508, 203, 485, 516,
	229, 463, 0, 0, 562, 205, 514, 482, 377, 312,
	313, 204, 0, 437, 255, 280, 245, 398, 511, 512,
	243, 563, 218, 537, 210, 1134, 536, 391, 505, 515,
	378, 367, 209, 513, 376, 366, 320, 339, 340, 267,
	293, 429, 359, 430, 292, 294, 387, 386, 388, 198,
	525, 0, 199, 0, 478, 526, 564, 224, 225, 227,
	1149, 266, 270, 278, 281, 289, 290, 299, 351, 402,
	428, 424, 433, 1238, 500, 519, 531, 541, 547, 548,
	550, 551, 552, 553, 554, 557, 555, 390, 297, 474,
	319, 357, 1227, 1269, 408, 452, 230, 523, 475, 1144,
	1148, 1142, 1209, 1143, 1198, 1199, 1145, 1260, 1261, 1262,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 1231,
	1138, 0, 1146, 1147, 1240, 1249, 1250, 583, 368, 465,
	520, 321, 333, 336, 326, 345, 0, 346, 322, 323,
	328, 330, 331, 332, 337, 338, 342, 348, 238, 201,
	374, 382, 499, 298, 206, 207, 208, 492, 493, 494,
	495, 534, 535, 539, 442, 443, 444, 445, 279, 529,
	295, 448, 447, 317, 318, 363, 431, 1202, 190, 211,
	352, 1265, 434, 275, 561, 533, 528, 197, 213, 1141,
	249, 1152, 1160, 0, 1166, 1174, 1175, 1187, 1189, 1190,
	1191, 1192, 1210, 1211, 1213, 1221, 1223, 1226, 1228, 1235,
	1246, 1268, 192, 193, 200, 212, 222, 226, 233, 248,
	263, 265, 272, 285, 296, 304, 305, 308, 314, 364,
	370, 371, 372, 373, 392, 393, 394, 397, 400, 401,
	404, 406, 407, 410, 414, 418, 419, 420, 421, 423,
	425, 435, 440, 454, 455, 456, 457, 458, 461, 462,
	467, 468, 469, 470, 471, 479, 480, 484, 507, 510,
	522, 540, 545, 460, 287, 288, 426, 427, 300, 301,
	558, 559, 286, 517, 546, 0, 0, 362, 1201, 1207,
	365, 268, 291, 306, 1216, 532, 481, 217, 446, 277,
	240, 1234, 1236, 202, 236, 220, 246, 261, 264, 310,
	375, 383, 412, 417, 283, 258, 234, 439, 231, 464,
	487, 488, 489, 491, 379, 253, 416, 1197, 1225, 360,
	497, 498, 302, 380, 0, 0, 0, 1254, 1239, 496,
	0, 1182, 1257, 1151, 1170, 1267, 1173, 1176, 1218, 1130,
	1196, 399, 1167, 1123, 1155, 1125, 1162, 1126, 1153, 1184,
	257, 1150, 1241, 1200, 1256, 350, 254, 1132, 1156, 413,
	1172, 196, 1220, 466, 241, 361, 358, 504, 269, 260,
	256, 239, 303, 369, 411, 486, 405, 1263, 354, 1206,
	0, 476, 384, 0, 0, 0, 1186, 1245, 1194, 1232,
	1181, 1219, 1140, 1205, 1258, 1168, 1215, 1259, 309, 237,
	311, 195, 396, 477, 273, 0, 0, 0, 0, 0,
	630, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 0, 0, 0, 335, 344, 343,
	324, 325, 327, 329, 334, 341, 347, 1164, 1212, 1253,
	1165, 1214, 252, 307, 259, 251, 501, 1264, 1244, 1129,
	1193, 1252, 0, 0, 219, 1255, 1188, 0, 1217, 0,
	1270, 1124, 1208, 0, 1127, 1131, 1266, 1248, 1159, 262,
	0, 0, 0, 0, 0, 0, 0, 1185, 1195, 1229,
	1233, 1179, 0, 0, 0, 0, 0, 2705, 0, 1157,
	0, 1204, 0, 0, 0, 1136, 1128, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1183,
	0, 0, 0, 0, 1139, 0, 1158, 1230, 0, 1122,
	284, 1133, 385, 244, 0, 1237, 1247, 1180, 542, 1251,
	1178, 1177, 1224, 1137, 1243, 1171, 349, 1135, 316, 191,
	215, 0, 1169, 395, 441, 453, 1242, 1154, 1163, 242,
	1161, 451, 409, 521, 223, 271, 438, 415, 449, 422,
	274, 1203, 1222, 450, 356, 506, 432, 518, 543, 544,
	250, 389, 530, 490, 538, 560, 216, 247, 403, 483,
	524, 473, 381, 502, 503, 315, 472, 282, 194, 353,
	549, 214, 459, 355, 232, 221, 509, 527, 276, 436,
	556, 508, 203, 485, 516, 229, 463, 0, 0, 562,
	205, 514, 482, 377, 312, 313, 204, 0, 437, 255,
	280, 245, 398, 511, 512, 243, 563, 218, 537, 210,
	1134, 536, 391, 505, 515, 378, 367, 209, 513, 376,
	366, 320, 339, 340, 267, 293, 429, 359, 430, 292,
	294, 387, 386, 388, 198, 525, 0, 199, 0, 478,
	526, 564, 224, 225, 227, 1149, 266, 270, 278, 281,
	289, 290, 299, 351, 402, 428, 424, 433, 1238, 500,
	519, 531, 541, 547, 548, 550, 551, 552, 553, 554,
	557, 555, 390, 297, 474, 319, 357, 1227, 1269, 408,
	452, 230, 523, 475, 1144, 1148, 1142, 1209, 1143, 1198,
	1199, 1145, 1260, 1261, 1262, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 1231, 1138, 0, 1146, 1147, 1240,
	1249, 1250, 583, 368, 465, 520, 321, 333, 336, 326,
	345, 0, 346, 322, 323, 328, 330, 331, 332, 337,
	338, 342, 348, 238, 201, 374, 382, 499, 298, 206,
	207, 208, 492, 493, 494, 495, 534, 535, 539, 442,
	443, 444, 445, 279, 529, 295, 448, 447, 317, 318,
	363, 431, 1202, 190, 211, 352, 1265, 434, 275, 561,
	533, 528, 197, 213, 1141, 249, 1152, 1160, 0, 1166,
	1174, 1175, 1187, 1189, 1190, 1191, 1192, 1210, 1211, 1213,
	1221, 1223, 1226, 1228, 1235, 1246, 1268, 192, 193, 200,
	212, 222, 226, 233, 248, 263, 265, 272, 285, 296,
	304, 305, 308, 314, 364, 370, 371, 372, 373, 392,
	393, 394, 397, 400, 401, 404, 406, 407, 410, 414,
	418, 419, 420, 421, 423, 425, 435, 440, 454, 455,
	456, 457, 458, 461, 462, 467, 468, 469, 470, 471,
	479, 480, 484, 507, 510, 522, 540, 545, 460, 287,
	288, 426, 427, 300, 301, 558, 559, 286, 517, 546,
	0, 0, 362, 1201, 1207, 365, 268, 291, 306, 1216,
	532, 481, 217, 446, 277, 240, 1234, 1236, 202, 236,
	220, 246, 261, 264, 310, 375, 383, 412, 417, 283,
	258, 234, 439, 231, 464, 487, 488, 489, 491, 379,
	253, 416, 1197, 1225, 360, 497, 498, 302, 380, 0,
	0, 0, 1254, 1239, 496, 0, 1182, 1257, 1151, 1170,
	1267, 1173, 1176, 1218, 1130, 1196, 399, 1167, 1123, 1155,
	1125, 1162, 1126, 1153, 1184, 257, 1150, 1241, 1200, 1256,
	350, 254, 1132, 1156, 413, 1172, 196, 1220, 466, 241,
	361, 358, 504, 269, 260, 256, 239, 303, 369, 411,
	486, 405, 1263, 354, 1206, 0, 476, 384, 0, 0,
	0, 1186, 1245, 1194, 1232, 1181, 1219, 1140, 1205, 1258,
	1168, 1215, 1259, 309, 237, 311, 195, 396, 477, 273,
	0, 0, 0, 0, 0, 803, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 0,
	0, 0, 335, 344, 343, 324, 325, 327, 329, 334,
	341, 347, 1164, 1212, 1253, 1165, 1214, 252, 307, 259,
	251, 501, 1264, 1244, 1129, 1193, 1252, 0, 0, 219,
	1255, 1188, 0, 1217, 0, 1270, 1124, 1208, 0, 1127,
	1131, 1266, 1248, 1159, 262, 0, 0, 0, 0, 0,
	0, 0, 1185, 1195, 1229, 1233, 1179, 0, 0, 0,
	0, 0, 2057, 0, 1157, 0, 1204, 0, 0, 0,
	1136, 1128, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1183, 0, 0, 0, 0, 1139,
	0, 1158, 1230, 0, 1122, 284, 1133, 385, 244, 0,
	1237, 1247, 1180, 542, 1251, 1178, 1177, 1224, 1137, 1243,
	1171, 349, 1135, 316, 191, 215, 0, 1169, 395, 441,
	453, 1242, 1154, 1163, 242, 1161, 451, 409, 521, 223,
	271, 438, 415, 449, 422, 274, 1203, 1222, 450, 356,
	506, 432, 518, 543, 544, 250, 389, 530, 490, 538,
	560, 216, 247, 403, 483, 524, 473, 381, 502, 503,
	315, 472, 282, 194, 353, 549, 214, 459, 355, 232,
	221, 509, 527, 276, 436, 556, 508, 203, 485, 516,
	229, 463, 0, 0, 562, 205, 514, 482, 377, 312,
	313, 204, 0, 437, 255, 280, 245, 398, 511, 512,
	243, 563, 218, 537, 210, 1134, 536, 391, 505, 515,
	378, 367, 209, 513, 376, 366, 320, 339, 340, 267,
	293, 429, 359, 430, 292, 294, 387, 386, 388, 198,
	525, 0, 199, 0, 478, 526, 564, 224, 225, 227,
	1149, 266, 270, 278, 281, 289, 290, 299, 351, 402,
	428, 424, 433, 1238, 500, 519, 531, 541, 547, 548,
	550, 551, 552, 553, 554, 557, 555, 390, 297, 474,
	319, 357, 1227, 1269, 408, 452, 230, 523, 475, 1144,
	1148, 1142, 1209, 1143, 1198, 1199, 1145, 1260, 1261, 1262,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 1231,
	1138, 0, 1146, 1147, 1240, 1249, 1250, 583, 368, 465,
	520, 321, 333, 336, 326, 345, 0, 346, 322, 323,
	328, 330, 331, 332, 337, 338, 342, 348, 238, 201,
	374, 382, 499, 298, 206, 207, 208, 492, 493, 494,
	495, 534, 535, 539, 442, 443, 444, 445, 279, 529,
	295, 448, 447, 317, 318, 363, 431, 1202, 190, 211,
	352, 1265, 434, 275, 561, 533, 528, 197, 213, 1141,
	249, 1152, 1160, 0, 1166, 1174, 1175, 1187, 1189, 1190,
	1191, 1192, 1210, 1211, 1213, 1221, 1223, 1226, 1228, 1235,
	1246, 1268, 192, 193, 200, 212, 222, 226, 233, 248,
	263, 265, 272, 285, 296, 304, 305, 308, 314, 364,
	370, 371, 372, 373, 392, 393, 394, 397, 400, 401,
	404, 406, 407, 410, 414, 418, 419, 420, 421, 423,
	425, 435, 440, 454, 455, 456, 457, 458, 461, 462,
	467, 468, 469, 470, 471, 479, 480, 484, 507, 510,
	522, 540, 545, 460, 287, 288, 426, 427, 300, 301,
	558, 559, 286, 517, 546, 0, 0, 362, 1201, 1207,
	365, 268, 291, 306, 1216, 532, 481, 217, 446, 277,
	240, 1234, 1236, 202, 236, 220, 246, 261, 264, 310,
	375, 383, 412, 417, 283, 258, 234, 439, 231, 464,
	487, 488, 489, 491, 379, 253, 416, 1197, 1225, 360,
	497, 498, 302, 380, 0, 0, 0, 1254, 1239, 496,
	0, 1182, 1257, 1151, 1170, 1267, 1173, 1176, 1218, 1130,
	1196, 399, 1167, 1123, 1155, 1125, 1162, 1126, 1153, 1184,
	257, 1150, 1241, 1200, 1256, 350, 254, 1132, 1156, 413,
	1172, 196, 1220, 466, 241, 361, 358, 504, 269, 260,
	256, 239, 303, 369, 411, 486, 405, 1263, 354, 1206,
	0, 476, 384, 0, 0, 0, 1186, 1245, 1194, 1232,
	1181, 1219, 1140, 1205, 1258, 1168, 1215, 1259, 309, 237,
	311, 195, 396, 477, 273, 0, 89, 0, 0, 0,
	630, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 0, 0, 0, 335, 344, 343,
	324, 325, 327, 329, 334, 341, 347, 1164, 1212, 1253,
	1165, 1214, 252, 307, 259, 251, 501, 1264, 1244, 1129,
	1193, 1252, 0, 0, 219, 1255, 1188, 0, 1217, 0,
	1270, 1124, 1208, 0, 1127, 1131, 1266, 1248, 1159, 262,
	0, 0, 0, 0, 0, 0, 0, 1185, 1195, 1229,
	1233, 1179, 0, 0, 0, 0, 0, 0, 0, 1157,
	0, 1204, 0, 0, 0, 1136, 1128, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1183,
	0, 0, 0, 0, 1139, 0, 1158, 1230, 0, 1122,
	284, 1133, 385, 244, 0, 1237, 1247, 1180, 542, 1251,
	1178, 1177, 1224, 1137, 1243, 1171, 349, 1135, 316, 191,
	215, 0, 1169, 395, 441, 453, 1242, 1154, 1163, 242,
	1161, 451, 409, 521, 223, 271, 438, 415, 449, 422,
	274, 1203, 1222, 450, 356, 506, 432, 518, 543, 544,
	250, 389, 530, 490, 538, 560, 216, 247, 403, 483,
	524, 473, 381, 502, 503, 315, 472, 282, 194, 353,
	549, 214, 459, 355, 232, 221, 509, 527, 276, 436,
	556, 508, 203, 485, 516, 229, 463, 0, 0, 562,
	205, 514, 482, 377, 312, 313, 204, 0, 437, 255,
	280, 245, 398, 511, 512, 243, 563, 218, 537, 210,
	1134, 536, 391, 505, 515, 378, 367, 209, 513, 376,
	366, 320, 339, 340, 267, 293, 429, 359, 430, 292,
	294, 387, 386, 388, 198, 525, 0, 199, 0, 478,
	526, 564, 224, 225, 227, 1149, 266, 270, 278, 281,
	289, 290, 299, 351, 402, 428, 424, 433, 1238, 500,
	519, 531, 541, 547, 548, 550, 551, 552, 553, 554,
	557, 555, 390, 297, 474, 319, 357, 1227, 1269, 408,
	452, 230, 523, 475, 1144, 1148, 1142, 1209, 1143, 1198,
	1199, 1145, 1260, 1261, 1262, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 1231, 1138, 0, 1146, 1147, 1240,
	1249, 1250, 583, 368, 465, 520, 321, 333, 336, 326,
	345, 0, 346, 322, 323, 328, 330, 331, 332, 337,
	338, 342, 348, 238, 201, 374, 382, 499, 298, 206,
	207, 208, 492, 493, 494, 495, 534, 535, 539, 442,
	443, 444, 445, 279, 529, 295, 448, 447, 317, 318,
	363, 431, 1202, 190, 211, 352, 1265, 434, 275, 561,
	533, 528, 197, 213, 1141, 249, 1152, 1160, 0, 1166,
	1174, 1175, 1187, 1189, 1190, 1191, 1192, 1210, 1211, 1213,
	1221, 1223, 1226, 1228, 1235, 1246, 1268, 192, 193, 200,
	212, 222, 226, 233, 248, 263, 265, 272, 285, 296,
	304, 305, 308, 314, 364, 370, 371, 372, 373, 392,
	393, 394, 397, 400, 401, 404, 406, 407, 410, 414,
	418, 419, 420, 421, 423, 425, 435, 440, 454, 455,
	456, 457, 458, 461, 462, 467, 468, 469, 470, 471,
	479, 480, 484, 507, 510, 522, 540, 545, 460, 287,
	288, 426, 427, 300, 301, 558, 559, 286, 517, 546,
	0, 0, 362, 1201, 1207, 365, 268, 291, 306, 1216,
	532, 481, 217, 446, 277, 240, 1234, 1236, 202, 236,
	220, 246, 261, 264, 310, 375, 383, 412, 417, 283,
	258, 234, 439, 231, 464, 487, 488, 489, 491, 379,
	253, 416, 1197, 1225, 360, 497, 498, 302, 380, 0,
	0, 0, 1254, 1239, 496, 0, 1182, 1257, 1151, 1170,
	1267, 1173, 1176, 1218, 1130, 1196, 399, 1167, 1123, 1155,
	1125, 1162, 1126, 1153, 1184, 257, 1150, 1241, 1200, 1256,
	350, 254, 1132, 1156, 413, 1172, 196, 1220, 466, 241,
	361, 358, 504, 269, 260, 256, 239, 303, 369, 411,
	486, 405, 1263, 354, 1206, 0, 476, 384, 0, 0,
	0, 1186, 1245, 1194, 1232, 1181, 1219, 1140, 1205, 1258,
	1168, 1215, 1259, 309, 237, 311, 195, 396, 477, 273,
	0, 0, 0, 0, 0, 630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 0,
	0, 0, 335, 344, 343, 324, 325, 327, 329, 334,
	341, 347, 1164, 1212, 1253, 1165, 1214, 252, 307, 259,
	251, 501, 1264, 1244, 1129, 1193, 1252, 0, 0, 219,
	1255, 1188, 0, 1217, 0, 1270, 1124, 1208, 0, 1127,
	1131, 1266, 1248, 1159, 262, 0, 0, 0, 0, 0,
	0, 0, 1185, 1195, 1229, 1233, 1179, 0, 0, 0,
	0, 0, 0, 0, 1157, 0, 1204, 0, 0, 0,
	1136, 1128, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1183, 0, 0, 0, 0, 1139,
	0, 1158, 1230, 0, 1122, 284, 1133, 385, 244, 0,
	1237, 1247, 1180, 542, 1251, 1178, 1177, 1224, 1137, 1243,
	1171, 349, 1135, 316, 191, 215, 0, 1169, 395, 441,
	453, 1242, 1154, 1163, 242, 1161, 451, 409, 521, 223,
	271, 438, 415, 449, 422, 274, 1203, 1222, 450, 356,
	506, 432, 518, 543, 544, 250, 389, 530, 490, 538,
	560, 216, 247, 403, 483, 524, 473, 381, 502, 503,
	315, 472, 282, 194, 353, 549, 214, 459, 355, 232,
	221, 509, 527, 276, 436, 556, 508, 203, 485, 516,
	229, 463, 0, 0, 562, 205, 514, 482, 377, 312,
	313, 204, 0, 437, 255, 280, 245, 398, 511, 512,
	243, 563, 218, 537, 210, 1134, 536, 391, 505, 515,
	378, 367, 209, 513, 376, 366, 320, 339, 340, 267,
	293, 429, 359, 430, 292, 294, 387, 386, 388, 198,
	525, 0, 199, 0, 478, 526, 564, 224, 225, 227,
	1149, 266, 270, 278, 281, 289, 290, 299, 351, 402,
	428, 424, 433, 1238, 500, 519, 531, 541, 547, 548,
	550, 551, 552, 553, 554, 557, 555, 390, 297, 474,
	319, 357, 1227, 1269, 408, 452, 230, 523, 475, 1144,
	1148, 1142, 1209, 1143, 1198, 1199, 1145, 1260, 1261, 1262,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 1231,
	1138, 0, 1146, 1147, 1240, 1249, 1250, 583, 368, 465,
	520, 321, 333, 336, 326, 345, 0, 346, 322, 323,
	328, 330, 331, 332, 337, 338, 342, 348, 238, 201,
	374, 382, 499, 298, 206, 207, 208, 492, 493, 494,
	495, 534, 535, 539, 442, 443, 444, 445, 279, 529,
	295, 448, 447, 317, 318, 363, 431, 1202, 190, 211,
	352, 1265, 434, 275, 561, 533, 528, 197, 213, 1141,
	249, 1152, 1160, 0, 1166, 1174, 1175, 1187, 1189, 1190,
	1191, 1192, 1210, 1211, 1213, 1221, 1223, 1226, 1228, 1235,
	1246, 1268, 192, 193, 200, 212, 222, 226, 233, 248,
	263, 265, 272, 285, 296, 304, 305, 308, 314, 364,
	370, 371, 372, 373, 392, 393, 394, 397, 400, 401,
	404, 406, 407, 410, 414, 418, 419, 420, 421, 423,
	425, 435, 440, 454, 455, 456, 457, 458, 461, 462,
	467, 468, 469, 470, 471, 479, 480, 484, 507, 510,
	522, 540, 545, 460, 287, 288, 426, 427, 300, 301,
	558, 559, 286, 517, 546, 0, 0, 362, 1201, 1207,
	365, 268, 291, 306, 1216, 532, 481, 217, 446, 277,
	240, 1234, 1236, 202, 236, 220, 246, 261, 264, 310,
	375, 383, 412, 417, 283, 258, 234, 439, 231, 464,
	487, 488, 489, 491, 379, 253, 416, 1197, 1225, 360,
	497, 498, 302, 380, 0, 0, 0, 1254, 1239, 496,
	0, 1182, 1257, 1151, 1170, 1267, 1173, 1176, 1218, 1130,
	1196, 399, 1167, 1123, 1155, 1125, 1162, 1126, 1153, 1184,
	257, 1150, 1241, 1200, 1256, 350, 254, 1132, 1156, 413,
	1172, 196, 1220, 466, 241, 361, 358, 504, 269, 260,
	256, 239, 303, 369, 411, 486, 405, 1263, 354, 1206,
	0, 476, 384, 0, 0, 0, 1186, 1245, 1194, 1232,
	1181, 1219, 1140, 1205, 1258, 1168, 1215, 1259, 309, 237,
	311, 195, 396, 477, 273, 0, 0, 0, 0, 0,
	803, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 0, 0, 0, 335, 344, 343,
	324, 325, 327, 329, 334, 341, 347, 1164, 1212, 1253,
	1165, 1214, 252, 307, 259, 251, 501, 1264, 1244, 1129,
	1193, 1252, 0, 0, 219, 1255, 1188, 0, 1217, 0,
	1270, 1124, 1208, 0, 1127, 1131, 1266, 1248, 1159, 262,
	0, 0, 0, 0, 0, 0, 0, 1185, 1195, 1229,
	1233, 1179, 0, 0, 0, 0, 0, 0, 0, 1157,
	0, 1204, 0, 0, 0, 1136, 1128, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1183,
	0, 0, 0, 0, 1139, 0, 1158, 1230, 0, 1122,
	284, 1133, 385, 244, 0, 1237, 1247, 1180, 542, 1251,
	1178, 1177, 1224, 1137, 1243, 1171, 349, 1135, 316, 191,
	215, 0, 1169, 395, 441, 453, 1242, 1154, 1163, 242,
	1161, 451, 409, 521, 223, 271, 438, 415, 449, 422,
	274, 1203, 1222, 450, 356, 506, 432, 518, 543, 544,
	250, 389, 530, 490, 538, 560, 216, 247, 403, 483,
	524, 473, 381, 502, 503, 315, 472, 282, 194, 353,
	549, 214, 459, 355, 232, 221, 509, 527, 276, 436,
	556, 508, 203, 485, 516, 229, 463, 0, 0, 562,
	205, 514, 482, 377, 312, 313, 204, 0, 437, 255,
	280, 245, 398, 511, 512, 243, 563, 218, 537, 210,
	1134, 536, 391, 505, 515, 378, 367, 209, 513, 376,
	366, 320, 339, 340, 267, 293, 429, 359, 430, 292,
	294, 387, 386, 388, 198, 525, 0, 199, 0, 478,
	526, 564, 224, 225, 227, 1149, 266, 270, 278, 281,
	289, 290, 299, 351, 402, 428, 424, 433, 1238, 500,
	519, 531, 541, 547, 548, 550, 551, 552, 553, 554,
	557, 555, 390, 297, 474, 319, 357, 1227, 1269, 408,
	452, 230, 523, 475, 1144, 1148, 1142, 1209, 1143, 1198,
	1199, 1145, 1260, 1261, 1262, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 1231, 1138, 0, 1146, 1147, 1240,
	1249, 1250, 583, 368, 465, 520, 321, 333, 336, 326,
	345, 0, 346, 322, 323, 328, 330, 331, 332, 337,
	338, 342, 348, 238, 201, 374, 382, 499, 298, 206,
	207, 208, 492, 493, 494, 495, 534, 535, 539, 442,
	443, 444, 445, 279, 529, 295, 448, 447, 317, 318,
	363, 431, 1202, 190, 211, 352, 1265, 434, 275, 561,
	533, 528, 197, 213, 1141, 249, 1152, 1160, 0, 1166,
	1174, 1175, 1187, 1189, 1190, 1191, 1192, 1210, 1211, 1213,
	1221, 1223, 1226, 1228, 1235, 1246, 1268, 192, 193, 200,
	212, 222, 226, 233, 248, 263, 265, 272, 285, 296,
	304, 305, 308, 314, 364, 370, 371, 372, 373, 392,
	393, 394, 397, 400, 401, 404, 406, 407, 410, 414,
	418, 419, 420, 421, 423, 425, 435, 440, 454, 455,
	456, 457, 458, 461, 462, 467, 468, 469, 470, 471,
	479, 480, 484, 507, 510, 522, 540, 545, 460, 287,
	288, 426, 427, 300, 301, 558, 559, 286, 517, 546,
	0, 0, 362, 1201, 1207, 365, 268, 291, 306, 1216,
	532, 481, 217, 446, 277, 240, 1234, 1236, 202, 236,
	220, 246, 261, 264, 310, 375, 383, 412, 417, 283,
	258, 234, 439, 231, 464, 487, 488, 489, 491, 379,
	253, 416, 1197, 1225, 360, 497, 498, 302, 380, 0,
	0, 0, 1254, 1239, 496, 0, 1182, 1257, 1151, 1170,
	1267, 1173, 1176, 1218, 1130, 1196, 399, 1167, 1123, 1155,
	1125, 1162, 1126, 1153, 1184, 257, 1150, 1241, 1200, 1256,
	350, 254, 1132, 1156, 413, 1172, 196, 1220, 466, 241,
	361, 358, 504, 269, 260, 256, 239, 303, 369, 411,
	486, 405, 1263, 354, 1206, 0, 476, 384, 0, 0,
	0, 1186, 1245, 1194, 1232, 1181, 1219, 1140, 1205, 1258,
	1168, 1215, 1259, 309, 237, 311, 195, 396, 477, 273,
	0, 0, 0, 0, 0, 188, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 0,
	0, 0, 335, 344, 343, 324, 325, 327, 329, 334,
	341, 347, 1164, 1212, 1253, 1165, 1214, 252, 307, 259,
	251, 501, 1264, 1244, 1129, 1193, 1252, 0, 0, 219,
	1255, 1188, 0, 1217, 0, 1270, 1124, 1208, 0, 1127,
	1131, 1266, 1248, 1159, 262, 0, 0, 0, 0, 0,
	0, 0, 1185, 1195, 1229, 1233, 1179, 0, 0, 0,
	0, 0, 0, 0, 1157, 0, 1204, 0, 0, 0,
	1136, 1128, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1183, 0, 0, 0, 0, 1139,
	0, 1158, 1230, 0, 1122, 284, 1133, 385, 244, 0,
	1237, 1247, 1180, 542, 1251, 1178, 1177, 1224, 1137, 1243,
	1171, 349, 1135, 316, 191, 215, 0, 1169, 395, 441,
	453, 1242, 1154, 1163, 242, 1161, 451, 409, 521, 223,
	271, 438, 415, 449, 422, 274, 1203, 1222, 450, 356,
	506, 432, 518, 543, 544, 250, 389, 530, 490, 538,
	560, 216, 247, 403, 483, 524, 473, 381, 502, 503,
	315, 472, 282, 194, 353, 549, 214, 459, 355, 232,
	221, 509, 527, 276, 436, 556, 508, 203, 485, 516,
	229, 463, 0, 0, 562, 205, 514, 482, 377, 312,
	313, 204, 0, 437, 255, 280, 245, 398, 511, 512,
	243, 563, 218, 537, 210, 1134, 536, 391, 505, 515,
	378, 367, 209, 513, 376, 366, 320, 339, 340, 267,
	293, 429, 359, 430, 292, 294, 387, 386, 388, 198,
	525, 0, 199, 0, 478, 526, 564, 224, 225, 227,
	1149, 266, 270, 278, 281, 289, 290, 299, 351, 402,
	428, 424, 433, 1238, 500, 519, 531, 541, 547, 548,
	550, 551, 552, 553, 554, 557, 555, 390, 297, 474,
	319, 357, 1227, 1269, 408, 452, 230, 523, 475, 1144,
	1148, 1142, 1209, 1143, 1198, 1199, 1145, 1260, 1261, 1262,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 1231,
	1138, 0, 1146, 1147, 1240, 1249, 1250, 583, 368, 465,
	520, 321, 333, 336, 326, 345, 0, 346, 322, 323,
	328, 330, 331, 332, 337, 338, 342, 348, 238, 201,
	374, 382, 499, 298, 206, 207, 208, 492, 493, 494,
	495, 534, 535, 539, 442, 443, 444, 445, 279, 529,
	295, 448, 447, 317, 318, 363, 431, 1202, 190, 211,
	352, 1265, 434, 275, 561, 533, 528, 197, 213, 1141,
	249, 1152, 1160, 0, 1166, 1174, 1175, 1187, 1189, 1190,
	1191, 1192, 1210, 1211, 1213, 1221, 1223, 1226, 1228, 1235,
	1246, 1268, 192, 193, 200, 212, 222, 226, 233, 248,
	263, 265, 272, 285, 296, 304, 305, 308, 314, 364,
	370, 371, 372, 373, 392, 393, 394, 397, 400, 401,
	404, 406, 407, 410, 414, 418, 419, 420, 421, 423,
	425, 435, 440, 454, 455, 456, 457, 458, 461, 462,
	467, 468, 469, 470, 471, 479, 480, 484, 507, 510,
	522, 540, 545, 460, 287, 288, 426, 427, 300, 301,
	558, 559, 286, 517, 546, 0, 0, 362, 1201, 1207,
	365, 268, 291, 306, 1216, 532, 481, 217, 446, 277,
	240, 1234, 1236, 202, 236, 220, 246, 261, 264, 310,
	375, 383, 412, 417, 283, 258, 234, 439, 231, 464,
	487, 488, 489, 491, 379, 253, 416, 1197, 1225, 360,
	497, 498, 302, 380, 0, 0, 0, 0, 0, 496,
	0, 682, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 399, 0, 0, 0, 0, 669, 0, 0, 0,
	257, 674, 0, 0, 0, 350, 254, 0, 0, 413,
	0, 196, 0, 466, 241, 361, 358, 504, 269, 260,
	256, 239, 303, 369, 411, 486, 405, 681, 354, 0,
	0, 476, 384, 0, 0, 0, 0, 0, 677, 678,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 396, 477, 273, 0, 89, 0, 0, 819,
	803, 769, 770, 807, 820, 821, 822, 823, 808, 0,
	228, 809, 810, 235, 811, 0, 768, 709, 711, 710,
	728, 729, 730, 731, 732, 733, 734, 707, 816, 824,
	825, 0, 252, 307, 259, 251, 501, 0, 0, 1936,
	1937, 1938, 0, 0, 219, 0, 0, 0, 0, 0,
	0, 0, 651, 666, 0, 680, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 663, 664, 0, 0, 0,
	0, 763, 0, 665, 0, 0, 673, 826, 827, 828,
	829, 830, 831, 832, 833, 834, 835, 836, 837, 838,
	839, 840, 841, 842, 843, 844, 845, 846, 847, 848,
	849, 850, 851, 852, 853, 854, 855, 856, 857, 858,
	859, 860, 861, 862, 863, 864, 865, 866, 867, 676,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 385, 244, 0, 762, 0, 0, 542, 0,
	0, 760, 0, 0, 0, 0, 349, 0, 316, 191,
	215, 0, 0, 395, 441, 453, 0, 0, 0, 813,
	0, 451, 409, 521, 223, 271, 438, 415, 449, 422,
	274, 0, 0, 450, 356, 506, 432, 518, 543, 544,
	250, 389, 530, 490, 538, 560, 216, 247, 403, 483,
	524, 473, 381, 502, 503, 315, 472, 282, 194, 353,
	549, 214, 459, 355, 232, 221, 509, 527, 276, 436,
	556, 508, 203, 485, 516, 229, 463, 0, 0, 562,
	205, 514, 482, 377, 312, 313, 204, 0, 437, 255,
	280, 245, 398, 814, 815, 243, 563, 715, 537, 210,
	0, 536, 391, 505, 515, 378, 367, 209, 513, 376,
	366, 320, 723, 724, 267, 293, 429, 359, 430, 292,
	294, 387, 386, 388, 198, 525, 0, 199, 0, 478,
	526, 564, 224, 225, 227, 0, 266, 270, 278, 281,
	289, 290, 299, 351, 402, 428, 424, 433, 0, 500,
	519, 531, 541, 547, 548, 550, 551, 552, 553, 554,
	557, 555, 390, 297, 474, 319, 357, 0, 0, 408,
	452, 230, 523, 475, 773, 761, 686, 777, 688, 774,
	775, 683, 684, 687, 776, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 764, 672, 671, 0, 679, 0,
	705, 706, 708, 712, 713, 714, 725, 726, 727, 735,
	737, 738, 736, 739, 740, 741, 744, 745, 746, 747,
	742, 743, 748, 689, 693, 690, 691, 692, 704, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 703, 787,
	788, 789, 790, 791, 792, 718, 722, 721, 719, 720,
	716, 717, 670, 190, 211, 352, 0, 434, 275, 561,
	533, 528, 197, 213, 778, 249, 779, 0, 0, 783,
	0, 0, 0, 785, 784, 0, 786, 752, 751, 0,
	0, 780, 781, 0, 782, 0, 0, 192, 193, 200,
	212, 222, 226, 233, 248, 263, 265, 272, 285, 296,
	304, 305, 308, 314, 364, 370, 371, 372, 373, 392,
	393, 394, 397, 400, 401, 404, 406, 407, 410, 414,
	418, 419, 420, 421, 423, 425, 435, 440, 454, 455,
	456, 457, 458, 461, 462, 467, 468, 469, 470, 471,
	479, 480, 484, 507, 510, 522, 540, 545, 460, 793,
	794, 795, 796, 797, 798, 799, 800, 286, 517, 546,
	0, 0, 362, 0, 0, 365, 268, 291, 306, 0,
	532, 481, 217, 446, 277, 240, 818, 0, 202, 236,
	220, 246, 261, 264, 310, 375, 383, 412, 417, 283,
	258, 234, 439, 231, 464, 487, 488, 489, 491, 379,
	253, 416, 380, 0, 360, 497, 498, 302, 496, 0,
	682, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	399, 0, 0, 0, 0, 669, 0, 0, 0, 257,
	674, 0, 0, 0, 350, 254, 0, 0, 413, 0,
	196, 0, 466, 241, 361, 358, 504, 269, 260, 256,
	239, 303, 369, 411, 486, 405, 681, 354, 0, 0,
	476, 384, 0, 0, 0, 0, 0, 677, 678, 0,
	0, 0, 0, 0, 0, 2085, 0, 309, 237, 311,
	195, 396, 477, 273, 0, 89, 0, 0, 819, 803,
	769, 770, 807, 820, 821, 822, 823, 808, 0, 228,
	809, 810, 235, 811, 0, 768, 709, 711, 710, 728,
	729, 730, 731, 732, 733, 734, 707, 816, 824, 825,
	2086, 252, 307, 259, 251, 501, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 651, 666, 0, 680, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 663, 664, 0, 0, 0, 0,
	763, 0, 665, 0, 0, 673, 826, 827, 828, 829,
	830, 831, 832, 833, 834, 835, 836, 837, 838, 839,
	840, 841, 842, 843, 844, 845, 846, 847, 848, 849,
	850, 851, 852, 853, 854, 855, 856, 857, 858, 859,
	860, 861, 862, 863, 864, 865, 866, 867, 676, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 385, 244, 0, 762, 0, 0, 542, 0, 0,
	760, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 395, 441, 453, 0, 0, 0, 813, 0,
	451, 409, 521, 223, 271, 438, 415, 449, 422, 274,
	0, 0, 450, 356, 506, 432, 518, 543, 544, 250,
	389, 530, 490, 538, 560, 216, 247, 403, 483, 524,
	473, 381, 502, 503, 315, 472, 282, 194, 353, 549,
	214, 459, 355, 232, 221, 509, 527, 276, 436, 556,
	508, 203, 485, 516, 229, 463, 0, 0, 562, 205,
	514, 482, 377, 312, 313, 204, 0, 437, 255, 280,
	245, 398, 814, 815, 243, 563, 715, 537, 210, 0,
	536, 391, 505, 515, 378, 367, 209, 513, 376, 366,
	320, 723, 724, 267, 293, 429, 359, 430, 292, 294,
	387, 386, 388, 198, 525, 0, 199, 0, 478, 526,
	564, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 402, 428, 424, 433, 0, 500, 519,
	531, 541, 547, 548, 550, 551, 552, 553, 554, 557,
	555, 390, 297, 474, 319, 357, 0, 0, 408, 452,
	230, 523, 475, 773, 761, 686, 777, 688, 774, 775,
	683, 684, 687, 776, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 764, 672, 671, 0, 679, 0, 705,
	706, 708, 712, 713, 714, 725, 726, 727, 735, 737,
	738, 736, 739, 740, 741, 744, 745, 746, 747, 742,
	743, 748, 689, 693, 690, 691, 692, 704, 694, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 787, 788,
	789, 790, 791, 792, 718, 722, 721, 719, 720, 716,
	717, 670, 190, 211, 352, 0, 434, 275, 561, 533,
	528, 197, 213, 778, 249, 779, 0, 0, 783, 0,
	0, 0, 785, 784, 0, 786, 752, 751, 0, 0,
	780, 781, 0, 782, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 364, 370, 371, 372, 373, 392, 393,
	394, 397, 400, 401, 404, 406, 407, 410, 414, 418,
	419, 420, 421, 423, 425, 435, 440, 454, 455, 456,
	457, 458, 461, 462, 467, 468, 469, 470, 471, 479,
	480, 484, 507, 510, 522, 540, 545, 460, 793, 794,
	795, 796, 797, 798, 799, 800, 286, 517, 546, 0,
	0, 362, 0, 0, 365, 268, 291, 306, 0, 532,
	481, 217, 446, 277, 240, 818, 0, 202, 236, 220,
	246, 261, 264, 310, 375, 383, 412, 417, 283, 258,
	234, 439, 231, 464, 487, 488, 489, 491, 379, 253,
	416, 0, 380, 360, 497, 498, 302, 80, 496, 0,
	682, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	399, 0, 0, 0, 0, 669, 0, 0, 0, 257,
	674, 0, 0, 0, 350, 254, 0, 0, 413, 0,
	196, 0, 466, 241, 361, 358, 504, 269, 260, 256,
	239, 303, 369, 411, 486, 405, 681, 354, 0, 0,
	476, 384, 0, 0, 0, 0, 0, 677, 678, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 237, 311,
	195, 396, 477, 273, 0, 89, 0, 0, 819, 803,
	769, 770, 807, 820, 821, 822, 823, 808, 0, 228,
	809, 810, 235, 811, 0, 768, 709, 711, 710, 728,
	729, 730, 731, 732, 733, 734, 707, 816, 824, 825,
	0, 252, 307, 259, 251, 501, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 651, 666, 0, 680, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 663, 664, 0, 0, 0, 0,
	763, 0, 665, 0, 0, 673, 826, 827, 828, 829,
	830, 831, 832, 833, 834, 835, 836, 837, 838, 839,
	840, 841, 842, 843, 844, 845, 846, 847, 848, 849,
	850, 851, 852, 853, 854, 855, 856, 857, 858, 859,
	860, 861, 862, 863, 864, 865, 866, 867, 676, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 385, 244, 0, 762, 0, 0, 542, 0, 0,
	760, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 395, 441, 453, 0, 0, 0, 813, 0,
	451, 409, 521, 223, 271, 438, 415, 449, 422, 274,
	0, 0, 450, 356, 506, 432, 518, 543, 544, 250,
	389, 530, 490, 538, 560, 216, 247, 403, 483, 524,
	473, 381, 502, 503, 315, 472, 282, 194, 353, 549,
	214, 459, 355, 232, 221, 509, 527, 276, 436, 556,
	508, 203, 485, 516, 229, 463, 0, 0, 562, 205,
	514, 482, 377, 312, 313, 204, 0, 437, 255, 280,
	245, 398, 814, 815, 243, 563, 715, 537, 210, 0,
	536, 391, 505, 515, 378, 367, 209, 513, 376, 366,
	320, 723, 724, 267, 293, 429, 359, 430, 292, 294,
	387, 386, 388, 198, 525, 0, 199, 0, 478, 526,
	564, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 402, 428, 424, 433, 0, 500, 519,
	531, 541, 547, 548, 550, 551, 552, 553, 554, 557,
	555, 390, 297, 474, 319, 357, 0, 0, 408, 452,
	230, 523, 475, 773, 761, 686, 777, 688, 774, 775,
	683, 684, 687, 776, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 764, 672, 671, 0, 679, 0, 705,
	706, 708, 712, 713, 714, 725, 726, 727, 735, 737,
	738, 736, 739, 740, 741, 744, 745, 746, 747, 742,
	743, 748, 689, 693, 690, 691, 692, 704, 694, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 787, 788,
	789, 790, 791, 792, 718, 722, 721, 719, 720, 716,
	717, 670, 190, 211, 352, 88, 434, 275, 561, 533,
	528, 197, 213, 778, 249, 779, 0, 0, 783, 0,
	0, 0, 785, 784, 0, 786, 752, 751, 0, 0,
	780, 781, 0, 782, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 364, 370, 371, 372, 373, 392, 393,
	394, 397, 400, 401, 404, 406, 407, 410, 414, 418,
	419, 420, 421, 423, 425, 435, 440, 454, 455, 456,
	457, 458, 461, 462, 467, 468, 469, 470, 471, 479,
	480, 484, 507, 510, 522, 540, 545, 460, 793, 794,
	795, 796, 797, 798, 799, 800, 286, 517, 546, 0,
	0, 362, 0, 0, 365, 268, 291, 306, 0, 532,
	481, 217, 446, 277, 240, 818, 0, 202, 236, 220,
	246, 261, 264, 310, 375, 383, 412, 417, 283, 258,
	234, 439, 231, 464, 487, 488, 489, 491, 379, 253,
	416, 380, 0, 360, 497, 498, 302, 496, 0, 682,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 399,
	0, 0, 0, 0, 669, 0, 0, 0, 257, 674,
	0, 0, 0, 350, 254, 0, 0, 413, 0, 196,
	0, 466, 241, 361, 358, 504, 269, 260, 256, 239,
	303, 369, 411, 486, 405, 681, 354, 0, 0, 476,
	384, 0, 0, 0, 0, 0, 677, 678, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	396, 477, 273, 0, 89, 0, 0, 819, 803, 769,
	770, 807, 820, 821, 822, 823, 808, 0, 228, 809,
	810, 235, 811, 0, 768, 709, 711, 710, 728, 729,
	730, 731, 732, 733, 734, 707, 816, 824, 825, 0,
	252, 307, 259, 251, 501, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 0, 0,
	651, 666, 0, 680, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 663, 664, 0, 0, 0, 0, 763,
	0, 665, 0, 0, 673, 826, 827, 828, 829, 830,
	831, 832, 833, 834, 835, 836, 837, 838, 839, 840,
	841, 842, 843, 844, 845, 846, 847, 848, 849, 850,
	851, 852, 853, 854, 855, 856, 857, 858, 859, 860,
	861, 862, 863, 864, 865, 866, 867, 676, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	385, 244, 0, 762, 0, 0, 542, 0, 0, 760,
	0, 0, 0, 0, 349, 0, 316, 191, 215, 0,
	0, 395, 441, 453, 0, 0, 0, 813, 0, 451,
	409, 521, 223, 271, 438, 415, 449, 422, 274, 3400,
	0, 450, 356, 506, 432, 518, 543, 544, 250, 389,
	530, 490, 538, 560, 216, 247, 403, 483, 524, 473,
	381, 502, 503, 315, 472, 282, 194, 353, 549, 214,
	459, 355, 232, 221, 509, 527, 276, 436, 556, 508,
	203, 485, 516, 229, 463, 0, 0, 562, 205, 514,
	482, 377, 312, 313, 204, 0, 437, 255, 280, 245,
	398, 814, 815, 243, 563, 715, 537, 210, 0, 536,
	391, 505, 515, 378, 367, 209, 513, 376, 366, 320,
	723, 724, 267, 293, 429, 359, 430, 292, 294, 387,
	386, 388, 198, 525, 0, 199, 0, 478, 526, 564,
	224, 225, 227, 0, 266, 270, 278, 281, 289, 290,
	299, 351, 402, 428, 424, 433, 0, 500, 519, 531,
	541, 547, 548, 550, 551, 552, 553, 554, 557, 555,
	390, 297, 474, 319, 357, 0, 0, 408, 452, 230,
	523, 475, 773, 761, 686, 777, 688, 774, 775, 683,
	684, 687, 776, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 764, 672, 671, 0, 679, 0, 705, 706,
	708, 712, 713, 714, 725, 726, 727, 735, 737, 738,
	736, 739, 740, 741, 744, 745, 746, 747, 742, 743,
	748, 689, 693, 690, 691, 692, 704, 694, 695, 696,
	697, 698, 699, 700, 701, 702, 703, 787, 788, 789,
	790, 791, 792, 718, 722, 721, 719, 720, 716, 717,
	670, 190, 211, 352, 0, 434, 275, 561, 533, 528,
	197, 213, 778, 249, 779, 0, 0, 783, 0, 0,
	0, 785, 784, 0, 786, 752, 751, 0, 0, 780,
	781, 0, 782, 0, 0, 192, 193, 200, 212, 222,
	226, 233, 248, 263, 265, 272, 285, 296, 304, 305,
	308, 314, 364, 370, 371, 372, 373, 392, 393, 394,
	397, 400, 401, 404, 406, 407, 410, 414, 418, 419,
	420, 421, 423, 425, 435, 440, 454, 455, 456, 457,
	458, 461, 462, 467, 468, 469, 470, 471, 479, 480,
	484, 507, 510, 522, 540, 545, 460, 793, 794, 795,
	796, 797, 798, 799, 800, 286, 517, 546, 0, 0,
	362, 0, 0, 365, 268, 291, 306, 0, 532, 481,
	217, 446, 277, 240, 818, 0, 202, 236, 220, 246,
	261, 264, 310, 375, 383, 412, 417, 283, 258, 234,
	439, 231, 464, 487, 488, 489, 491, 379, 253, 416,
	380, 0, 360, 497, 498, 302, 496, 0, 682, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 399, 0,
	0, 0, 0, 669, 0, 0, 0, 257, 674, 0,
	0, 0, 350, 254, 0, 0, 413, 0, 196, 0,
	466, 241, 361, 358, 504, 269, 260, 256, 239, 303,
	369, 411, 486, 405, 681, 354, 0, 0, 476, 384,
	0, 0, 0, 0, 0, 677, 678, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 237, 311, 195, 396,
	477, 273, 0, 89, 0, 1502, 819, 803, 769, 770,
	807, 820, 821, 822, 823, 808, 0, 228, 809, 810,
	235, 811, 0, 768, 709, 711, 710, 728, 729, 730,
	731, 732, 733, 734, 707, 816, 824, 825, 0, 252,
	307, 259, 251, 501, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 651,
	666, 0, 680, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 663, 664, 0, 0, 0, 0, 763, 0,
	665, 0, 0, 673, 826, 827, 828, 829, 830, 831,
	832, 833, 834, 835, 836, 837, 838, 839, 840, 841,
	842, 843, 844, 845, 846, 847, 848, 849, 850, 851,
	852, 853, 854, 855, 856, 857, 858, 859, 860, 861,
	862, 863, 864, 865, 866, 867, 676, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 385,
	244, 0, 762, 0, 0, 542, 0, 0, 760, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	395, 441, 453, 0, 0, 0, 813, 0, 451, 409,
	521, 223, 271, 438, 415, 449, 422, 274, 0, 0,
	450, 356, 506, 432, 518, 543, 544, 250, 389, 530,
	490, 538, 560, 216, 247, 403, 483, 524, 473, 381,
	502, 503, 315, 472, 282, 194, 353, 549, 214, 459,
	355, 232, 221, 509, 527, 276, 436, 556, 508, 203,
	485, 516, 229, 463, 0, 0, 562, 205, 514, 482,
	377, 312, 313, 204, 0, 437, 255, 280, 245, 398,
	814, 815, 243, 563, 715, 537, 210, 0, 536, 391,
	505, 515, 378, 367, 209, 513, 376, 366, 320, 723,
	724, 267, 293, 429, 359, 430, 292, 294, 387, 386,
	388, 198, 525, 0, 199, 0, 478, 526, 564, 224,
	225, 227, 0, 266, 270, 278, 281, 289, 290, 299,
	351, 402, 428, 424, 433, 0, 500, 519, 531, 541,
	547, 548, 550, 551, 552, 553, 554, 557, 555, 390,
	297, 474, 319, 357, 0, 0, 408, 452, 230, 523,
	475, 773, 761, 686, 777, 688, 774, 775, 683, 684,
	687, 776, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 764, 672, 671, 0, 679, 0, 705, 706, 708,
	712, 713, 714, 725, 726, 727, 735, 737, 738, 736,
	739, 740, 741, 744, 745, 746, 747, 742, 743, 748,
	689, 693, 690, 691, 692, 704, 694, 695, 696, 697,
	698, 699, 700, 701, 702, 703, 787, 788, 789, 790,
	791, 792, 718, 722, 721, 719, 720, 716, 717, 670,
	190, 211, 352, 0, 434, 275, 561, 533, 528, 197,
	213, 778, 249, 779, 0, 0, 783, 0, 0, 0,
	785, 784, 0, 786, 752, 751, 0, 0, 780, 781,
	0, 782, 0, 0, 192, 193, 200, 212, 222, 226,
	233, 248, 263, 265, 272, 285, 296, 304, 305, 308,
	314, 364, 370, 371, 372, 373, 392, 393, 394, 397,
	400, 401, 404, 406, 407, 410, 414, 418, 419, 420,
	421, 423, 425, 435, 440, 454, 455, 456, 457, 458,
	461, 462, 467, 468, 469, 470, 471, 479, 480, 484,
	507, 510, 522, 540, 545, 460, 793, 794, 795, 796,
	797, 798, 799, 800, 286, 517, 546, 0, 0, 362,
	0, 0, 365, 268, 291, 306, 0, 532, 481, 217,
	446, 277, 240, 818, 0, 202, 236, 220, 246, 261,
	264, 310, 375, 383, 412, 417, 283, 258, 234, 439,
	231, 464, 487, 488, 489, 491, 379, 253, 416, 380,
	0, 360, 497, 498, 302, 496, 0, 682, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 399, 0, 0,
	0, 0, 669, 0, 0, 0, 257, 674, 0, 0,
	0, 350, 254, 0, 0, 413, 0, 196, 0, 466,
	241, 361, 358, 504, 269, 260, 256, 239, 303, 369,
	411, 486, 405, 681, 354, 0, 0, 476, 384, 0,
	0, 0, 0, 0, 677, 678, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 237, 311, 195, 396, 477,
	273, 0, 89, 0, 0, 819, 803, 769, 770, 807,
	820, 821, 822, 823, 808, 0, 228, 809, 810, 235,
	811, 0, 768, 709, 711, 710, 728, 729, 730, 731,
	732, 733, 734, 707, 816, 824, 825, 0, 252, 307,
	259, 251, 501, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 651, 666,
	0, 680, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 663, 664, 908, 0, 0, 0, 763, 0, 665,
	0, 0, 673, 826, 827, 828, 829, 830, 831, 832,
	833, 834, 835, 836, 837, 838, 839, 840, 841, 842,
	843, 844, 845, 846, 847, 848, 849, 850, 851, 852,
	853, 854, 855, 856, 857, 858, 859, 860, 861, 862,
	863, 864, 865, 866, 867, 676, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 385, 244,
	0, 762, 0, 0, 542, 0, 0, 760, 0, 0,
	0, 0, 349, 0, 316, 191, 215, 0, 0, 395,
	441, 453, 0, 0, 0, 813, 0, 451, 409, 521,
	223, 271, 438, 415, 449, 422, 274, 0, 0, 450,
	356, 506, 432, 518, 543, 544, 250, 389, 530, 490,
	538, 560, 216, 247, 403, 483, 524, 473, 381, 502,
	503, 315, 472, 282, 194, 353, 549, 214, 459, 355,
	232, 221, 509, 527, 276, 436, 556, 508, 203, 485,
	516, 229, 463, 0, 0, 562, 205, 514, 482, 377,
	312, 313, 204, 0, 437, 255, 280, 245, 398, 814,
	815, 243, 563, 715, 537, 210, 0, 536, 391, 505,
	515, 378, 367, 209, 513, 376, 366, 320, 723, 724,
	267, 293, 429, 359, 430, 292, 294, 387, 386, 388,
	198, 525, 0, 199, 0, 478, 526, 564, 224, 225,
	227, 0, 266, 270, 278, 281, 289, 290, 299, 351,
	402, 428, 424, 433, 0, 500, 519, 531, 541, 547,
	548, 550, 551, 552, 553, 554, 557, 555, 390, 297,
	474, 319, 357, 0, 0, 408, 452, 230, 523, 475,
	773, 761, 686, 777, 688, 774, 775, 683, 684, 687,
	776, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	764, 672, 671, 0, 679, 0, 705, 706, 708, 712,
	713, 714, 725, 726, 727, 735, 737, 738, 736, 739,
	740, 741, 744, 745, 746, 747, 742, 743, 748, 689,
	693, 690, 691, 692, 704, 694, 695, 696, 697, 698,
	699, 700, 701, 702, 703, 787, 788, 789, 790, 791,
	792, 718, 722, 721, 719, 720, 716, 717, 670, 190,
	211, 352, 0, 434, 275, 561, 533, 528, 197, 213,
	778, 249, 779, 0, 0, 783, 0, 0, 0, 785,
	784, 0, 786, 752, 751, 0, 0, 780, 781, 0,
	782, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	364, 370, 371, 372, 373, 392, 393, 394, 397, 400,
	401, 404, 406, 407, 410, 414, 418, 419, 420, 421,
	423, 425, 435, 440, 454, 455, 456, 457, 458, 461,
	462, 467, 468, 469, 470, 471, 479, 480, 484, 507,
	510, 522, 540, 545, 460, 793, 794, 795, 796, 797,
	798, 799, 800, 286, 517, 546, 0, 0, 362, 0,
	0, 365, 268, 291, 306, 0, 532, 481, 217, 446,
	277, 240, 818, 0, 202, 236, 220, 246, 261, 264,
	310, 375, 383, 412, 417, 283, 258, 234, 439, 231,
	464, 487, 488, 489, 491, 379, 253, 416, 380, 0,
	360, 497, 498, 302, 496, 0, 682, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 399, 0, 0, 0,
	0, 669, 0, 0, 0, 257, 674, 0, 0, 0,
	350, 254, 0, 0, 413, 0, 196, 0, 466, 241,
	361, 358, 504, 269, 260, 256, 239, 303, 369, 411,
	486, 405, 681, 354, 0, 0, 476, 384, 0, 0,
	0, 0, 0, 677, 678, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 237, 311, 195, 396, 477, 273,
	0, 89, 0, 0, 819, 803, 769, 770, 807, 820,
	821, 822, 823, 808, 0, 228, 809, 810, 235, 811,
	0, 768, 709, 711, 710, 728, 729, 730, 731, 732,
	733, 734, 707, 816, 824, 825, 0, 252, 307, 259,
	251, 501, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 651, 666, 0,
	680, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	663, 664, 0, 0, 0, 0, 763, 0, 665, 0,
	0, 673, 826, 827, 828, 829, 830, 831, 832, 833,
	834, 835, 836, 837, 838, 839, 840, 841, 842, 843,
	844, 845, 846, 847, 848, 849, 850, 851, 852, 853,
	854, 855, 856, 857, 858, 859, 860, 861, 862, 863,
	864, 865, 866, 867, 676, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 385, 244, 0,
	762, 0, 0, 542, 0, 0, 760, 0, 0, 0,
	0, 349, 0, 316, 191, 215, 0, 0, 395, 441,
	453, 0, 0, 0, 813, 0, 451, 409, 521, 223,
	271, 438, 415, 449, 422, 274, 0, 0, 450, 356,
	506, 432, 518, 543, 544, 250, 389, 530, 490, 538,
	560, 216, 247, 403, 483, 524, 473, 381, 502, 503,
	315, 472, 282, 194, 353, 549, 214, 459, 355, 232,
	221, 509, 527, 276, 436, 556, 508, 203, 485, 516,
	229, 463, 0, 0, 562, 205, 514, 482, 377, 312,
	313, 204, 0, 437, 255, 280, 245, 398, 814, 815,
	243, 563, 715, 537, 210, 0, 536, 391, 505, 515,
	378, 367, 209, 513, 376, 366, 320, 723, 724, 267,
	293, 429, 359, 430, 292, 294, 387, 386, 388, 198,
	525, 0, 199, 0, 478, 526, 564, 224, 225, 227,
	0, 266, 270, 278, 281, 289, 290, 299, 351, 402,
	428, 424, 433, 0, 500, 519, 531, 541, 547, 548,
	550, 551, 552, 553, 554, 557, 555, 390, 297, 474,
	319, 357, 0, 0, 408, 452, 230, 523, 475, 773,
	761, 686, 777, 688, 774, 775, 683, 684, 687, 776,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 764,
	672, 671, 0, 679, 0, 705, 706, 708, 712, 713,
	714, 725, 726, 727, 735, 737, 738, 736, 739, 740,
	741, 744, 745, 746, 747, 742, 743, 748, 689, 693,
	690, 691, 692, 704, 694, 695, 696, 697, 698, 699,
	700, 701, 702, 703, 787, 788, 789, 790, 791, 792,
	718, 722, 721, 719, 720, 716, 717, 670, 190, 211,
	352, 0, 434, 275, 561, 533, 528, 197, 213, 778,
	249, 779, 0, 0, 783, 0, 0, 0, 785, 784,
	0, 786, 752, 751, 0, 0, 780, 781, 0, 782,
	0, 0, 192, 193, 200, 212, 222, 226, 233, 248,
	263, 265, 272, 285, 296, 304, 305, 308, 314, 364,
	370, 371, 372, 373, 392, 393, 394, 397, 400, 401,
	404, 406, 407, 410, 414, 418, 419, 420, 421, 423,
	425, 435, 440, 454, 455, 456, 457, 458, 461, 462,
	467, 468, 469, 470, 471, 479, 480, 484, 507, 510,
	522, 540, 545, 460, 793, 794, 795, 796, 797, 798,
	799, 800, 286, 517, 546, 0, 0, 362, 0, 0,
	365, 268, 291, 306, 0, 532, 481, 217, 446, 277,
	240, 818, 0, 202, 236, 220, 246, 261, 264, 310,
	375, 383, 412, 417, 283, 258, 234, 439, 231, 464,
	487, 488, 489, 491, 379, 253, 416, 380, 0, 360,
	497, 498, 302, 496, 0, 682, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 399, 0, 0, 0, 0,
	669, 0, 0, 0, 257, 674, 0, 0, 0, 350,
	254, 0, 0, 413, 0, 196, 0, 466, 241, 361,
	358, 504, 269, 260, 256, 239, 303, 369, 411, 486,
	405, 681, 354, 0, 0, 476, 384, 0, 0, 0,
	0, 0, 677, 678, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 237, 311, 195, 396, 477, 273, 0,
	89, 0, 0, 819, 803, 769, 770, 807, 820, 821,
	822, 823, 808, 0, 228, 809, 810, 235, 811, 0,
	768, 709, 711, 710, 728, 729, 730, 731, 732, 733,
	734, 707, 816, 824, 825, 0, 252, 307, 259, 251,
	501, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 666, 0, 680,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 663,
	664, 0, 0, 0, 0, 763, 0, 665, 0, 0,
	673, 826, 827, 828, 829, 830, 831, 832, 833, 834,
	835, 836, 837, 838, 839, 840, 841, 842, 843, 844,
	845, 846, 847, 848, 849, 850, 851, 852, 853, 854,
	855, 856, 857, 858, 859, 860, 861, 862, 863, 864,
	865, 866, 867, 676, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 385, 244, 0, 762,
	0, 0, 542, 0, 0, 760, 0, 0, 0, 0,
	349, 0, 316, 191, 215, 0, 0, 395, 441, 453,
	0, 0, 0, 813, 0, 451, 409, 521, 223, 271,
	438, 415, 449, 422, 274, 0, 0, 450, 356, 506,
	432, 518, 543, 544, 250, 389, 530, 490, 538, 560,
	216, 247, 403, 483, 524, 473, 381, 502, 503, 315,
	472, 282, 194, 353, 549, 214, 459, 355, 232, 221,
	509, 527, 276, 436, 556, 508, 203, 485, 516, 229,
	463, 0, 0, 562, 205, 514, 482, 377, 312, 313,
	204, 0, 437, 255, 280, 245, 398, 814, 815, 243,
	563, 715, 537, 210, 0, 536, 391, 505, 515, 378,
	367, 209, 513, 376, 366, 320, 723, 724, 267, 293,
	429, 359, 430, 292, 294, 387, 386, 388, 198, 525,
	0, 199, 0, 478, 526, 564, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 402, 428,
	424, 433, 0, 500, 519, 531, 541, 547, 548, 550,
	551, 552, 553, 554, 557, 555, 390, 297, 474, 319,
	357, 0, 0, 408, 452, 230, 523, 475, 773, 761,
	686, 777, 688, 774, 775, 683, 684, 687, 776, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 764, 672,
	671, 0, 679, 0, 705, 706, 708, 712, 713, 714,
	725, 726, 727, 735, 737, 738, 736, 739, 740, 741,
	744, 745, 746, 747, 742, 743, 748, 689, 693, 690,
	691, 692, 704, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 703, 787, 788, 789, 790, 791, 792, 718,
	722, 721, 719, 720, 716, 717, 670, 190, 211, 352,
	0, 434, 275, 561, 533, 528, 197, 213, 778, 249,
	779, 0, 0, 783, 0, 0, 0, 785, 784, 0,
	786, 752, 751, 0, 0, 780, 781, 0, 782, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 364, 370,
	371, 372, 373, 392, 393, 394, 397, 400, 401, 404,
	406, 407, 410, 414, 418, 419, 420, 421, 423, 425,
	435, 440, 454, 455, 456, 457, 458, 461, 462, 467,
	468, 469, 470, 471, 479, 480, 484, 507, 510, 522,
	540, 545, 460, 793, 794, 795, 796, 797, 798, 799,
	800, 286, 517, 546, 0, 0, 362, 0, 0, 365,
	268, 291, 306, 0, 532, 481, 217, 446, 277, 240,
	818, 0, 202, 236, 220, 246, 261, 264, 310, 375,
	383, 412, 417, 283, 258, 234, 439, 231, 464, 487,
	488, 489, 491, 379, 253, 416, 380, 0, 360, 497,
	498, 302, 496, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 350, 254,
	0, 0, 413, 0, 196, 0, 466, 241, 361, 358,
	504, 269, 260, 256, 239, 303, 369, 411, 486, 405,
	0, 354, 0, 0, 476, 384, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 237, 311, 195, 396, 477, 273, 0, 0,
	0, 0, 0, 630, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 235, 0, 0, 0,
	335, 344, 343, 324, 325, 327, 329, 334, 341, 347,
	0, 0, 0, 0, 0, 252, 307, 259, 251, 501,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 979,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 385, 244, 0, 0, 0,
	978, 542, 0, 0, 0, 0, 0, 975, 976, 349,
	936, 316, 191, 215, 969, 973, 395, 441, 453, 0,
	0, 0, 242, 0, 451, 409, 521, 223, 271, 438,
	415, 449, 422, 274, 0, 0, 450, 356, 506, 432,
	518, 543, 544, 250, 389, 530, 490, 538, 560, 216,
	247, 403, 483, 524, 473, 381, 502, 503, 315, 472,
	282, 194, 353, 549, 214, 459, 355, 232, 221, 509,
	527, 276, 436, 556, 508, 203, 485, 516, 229, 463,
	0, 0, 562, 205, 514, 482, 377, 312, 313, 204,
	0, 437, 255, 280, 245, 398, 511, 512, 243, 563,
	218, 537, 210, 0, 536, 391, 505, 515, 378, 367,
	209, 513, 376, 366, 320, 339, 340, 267, 293, 429,
	359, 430, 292, 294, 387, 386, 388, 198, 525, 0,
	199, 0, 478, 526, 564, 224, 225, 227, 0, 266,
	270, 278, 281, 289, 290, 299, 351, 402, 428, 424,
	433, 0, 500, 519, 531, 541, 547, 548, 550, 551,
	552, 553, 554, 557, 555, 390, 297, 474, 319, 357,
	0, 0, 408, 452, 230, 523, 475, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 583, 368, 465, 520, 321,
	333, 336, 326, 345, 0, 346, 322, 323, 328, 330,
	331, 332, 337, 338, 342, 348, 238, 201, 374, 382,
	499, 298, 206, 207, 208, 492, 493, 494, 495, 534,
	535, 539, 442, 443, 444, 445, 279, 529, 295, 448,
	447, 317, 318, 363, 431, 0, 190, 211, 352, 0,
	434, 275, 561, 533, 528, 197, 213, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 200, 212, 222, 226, 233, 248, 263, 265,
	272, 285, 296, 304, 305, 308, 314, 364, 370, 371,
	372, 373, 392, 393, 394, 397, 400, 401, 404, 406,
	407, 410, 414, 418, 419, 420, 421, 423, 425, 435,
	440, 454, 455, 456, 457, 458, 461, 462, 467, 468,
	469, 470, 471, 479, 480, 484, 507, 510, 522, 540,
	545, 460, 287, 288, 426, 427, 300, 301, 558, 559,
	286, 517, 546, 0, 0, 362, 0, 0, 365, 268,
	291, 306, 0, 532, 481, 217, 446, 277, 240, 0,
	0, 202, 236, 220, 246, 261, 264, 310, 375, 383,
	412, 417, 283, 258, 234, 439, 231, 464, 487, 488,
	489, 491, 379, 253, 416, 380, 0, 360, 497, 498,
	302, 496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 399, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 350, 254, 0,
	0, 413, 0, 196, 0, 466, 241, 361, 358, 504,
	269, 260, 256, 239, 303, 369, 411, 486, 405, 0,
	354, 0, 0, 476, 384, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 237, 311, 195, 396, 477, 273, 0, 0, 0,
	0, 1465, 803, 0, 0, 1462, 0, 0, 0, 0,
	1460, 0, 228, 1461, 1459, 235, 1464, 0, 768, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 0,
	0, 0, 0, 0, 252, 307, 259, 251, 501, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 385, 244, 0, 0, 0, 0,
	542, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 395, 441, 453, 0, 0,
	0, 242, 0, 451, 409, 521, 223, 271, 438, 415,
	449, 422, 274, 0, 0, 450, 356, 506, 432, 518,
	543, 544, 250, 389, 530, 490, 538, 560, 216, 247,
	403, 483, 524, 473, 381, 502, 503, 315, 472, 282,
	194, 353, 549, 214, 459, 355, 232, 221, 509, 527,
	276, 436, 556, 508, 203, 485, 516, 229, 463, 0,
	0, 562, 205, 514, 482, 377, 312, 313, 204, 0,
	437, 255, 280, 245, 398, 511, 512, 243, 563, 218,
	537, 210, 0, 536, 391, 505, 515, 378, 367, 209,
	513, 376, 366, 320, 339, 340, 267, 293, 429, 359,
	430, 292, 294, 387, 386, 388, 198, 525, 0, 199,
	0, 478, 526, 564, 224, 225, 227, 0, 266, 270,
	278, 281, 289, 290, 299, 351, 402, 428, 424, 433,
	0, 500, 519, 531, 541, 547, 548, 550, 551, 552,
	553, 554, 557, 555, 390, 297, 474, 319, 357, 0,
	0, 408, 452, 230, 523, 475, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 583, 368, 465, 520, 321, 333,
	336, 326, 345, 0, 346, 322, 323, 328, 330, 331,
	332, 337, 338, 342, 348, 238, 201, 374, 382, 499,
	298, 206, 207, 208, 492, 493, 494, 495, 534, 535,
	539, 442, 443, 444, 445, 279, 529, 295, 448, 447,
	317, 318, 363, 431, 0, 190, 211, 352, 0, 434,
	275, 561, 533, 528, 197, 213, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 248, 263, 265, 272,
	285, 296, 304, 305, 308, 314, 364, 370, 371, 372,
	373, 392, 393, 394, 397, 400, 401, 404, 406, 407,
	410, 414, 418, 419, 420, 421, 423, 425, 435, 440,
	454, 455, 456, 457, 458, 461, 462, 467, 468, 469,
	470, 471, 479, 480, 484, 507, 510, 522, 540, 545,
	460, 287, 288, 426, 427, 300, 301, 558, 559, 286,
	517, 546, 0, 0, 362, 0, 0, 365, 268, 291,
	306, 0, 532, 481, 217, 446, 277, 240, 0, 0,
	202, 236, 220, 246, 261, 264, 310, 375, 383, 412,
	417, 283, 258, 234, 439, 231, 464, 487, 488, 489,
	491, 379, 253, 416, 0, 380, 360, 497, 498, 302,
	80, 496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 399, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 350, 254, 0,
	0, 413, 0, 196, 0, 466, 241, 361, 358, 504,
	269, 260, 256, 239, 303, 369, 411, 486, 405, 0,
	354, 0, 0, 476, 384, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 237, 311, 195, 396, 477, 273, 0, 89, 0,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 0, 0, 0, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 0,
	0, 0, 0, 0, 252, 307, 259, 251, 501, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 385, 244, 0, 0, 0, 0,
	542, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 395, 441, 453, 0, 0,
	0, 242, 0, 451, 409, 521, 223, 271, 438, 415,
	449, 422, 274, 0, 0, 450, 356, 506, 432, 518,
	543, 544, 250, 389, 530, 490, 538, 560, 216, 247,
	403, 483, 524, 473, 381, 502, 503, 315, 472, 282,
	194, 353, 549, 214, 459, 355, 232, 221, 509, 527,
	276, 436, 556, 508, 203, 485, 516, 229, 463, 0,
	0, 562, 205, 514, 482, 377, 312, 313, 204, 0,
	437, 255, 280, 245, 398, 511, 512, 243, 563, 218,
	537, 210, 0, 536, 391, 505, 515, 378, 367, 209,
	513, 376, 366, 320, 339, 340, 267, 293, 429, 359,
	430, 292, 294, 387, 386, 388, 198, 525, 0, 199,
	0, 478, 526, 564, 224, 225, 227, 0, 266, 270,
	278, 281, 289, 290, 299, 351, 402, 428, 424, 433,
	0, 500, 519, 531, 541, 547, 548, 550, 551, 552,
	553, 554, 557, 555, 390, 297, 474, 319, 357, 0,
	0, 408, 452, 230, 523, 475, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 583, 368, 465, 520, 321, 333,
	336, 326, 345, 0, 346, 322, 323, 328, 330, 331,
	332, 337, 338, 342, 348, 238, 201, 374, 382, 499,
	298, 206, 207, 208, 492, 493, 494, 495, 534, 535,
	539, 442, 443, 444, 445, 279, 529, 295, 448, 447,
	317, 318, 363, 431, 0, 190, 211, 352, 88, 434,
	275, 561, 533, 528, 197, 213, 0, 249, 0, 0,
	0, 0, 0, 0, 2072, 0, 0, 2071, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 248, 263, 265, 272,
	285, 296, 304, 305, 308, 314, 364, 370, 371, 372,
	373, 392, 393, 394, 397, 400, 401, 404, 406, 407,
	410, 414, 418, 419, 420, 421, 423, 425, 435, 440,
	454, 455, 456, 457, 458, 461, 462, 467, 468, 469,
	470, 471, 479, 480, 484, 507, 510, 522, 540, 545,
	460, 287, 288, 426, 427, 300, 301, 558, 559, 286,
	517, 546, 0, 0, 362, 0, 0, 365, 268, 291,
	306, 0, 532, 481, 217, 446, 277, 240, 0, 0,
	202, 236, 220, 246, 261, 264, 310, 375, 383, 412,
	417, 283, 258, 234, 439, 231, 464, 487, 488, 489,
	491, 379, 253, 416, 1521, 0, 360, 497, 498, 302,
	496, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 399, 0, 0, 0, 1523, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 350, 254, 0, 0,
	413, 0, 196, 0, 466, 241, 361, 358, 504, 269,
	260, 256, 239, 303, 369, 411, 486, 405, 0, 354,
	0, 0, 476, 384, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	237, 311, 195, 396, 477, 273, 0, 0, 0, 0,
	1525, 630, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 335, 344,
	343, 324, 325, 327, 329, 334, 341, 347, 0, 0,
	0, 0, 0, 252, 307, 259, 251, 501, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 1299,
	0, 1300, 1301, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 385, 244, 0, 0, 0, 0, 542,
	0, 0, 0, 0, 0, 0, 0, 349, 0, 316,
	191, 215, 0, 0, 395, 441, 453, 0, 0, 0,
	242, 0, 451, 409, 521, 223, 271, 438, 415, 449,
	422, 274, 0, 0, 450, 356, 506, 432, 518, 543,
	544, 250, 389, 530, 490, 538, 560, 216, 247, 403,
	483, 524, 473, 381, 502, 503, 315, 472, 282, 194,
	353, 549, 214, 459, 355, 232, 221, 509, 527, 276,
	436, 556, 508, 203, 485, 516, 229, 463, 0, 0,
	562, 205, 514, 482, 377, 312, 313, 204, 0, 437,
	255, 280, 245, 398, 511, 512, 243, 563, 218, 537,
	210, 0, 536, 391, 505, 515, 378, 367, 209, 513,
	376, 366, 320, 339, 340, 267, 293, 429, 359, 430,
	292, 294, 387, 386, 388, 198, 525, 0, 199, 0,
	478, 526, 564, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 402, 428, 424, 433, 0,
	500, 519, 531, 541, 547, 548, 550, 551, 552, 553,
	554, 557, 555, 390, 297, 474, 319, 357, 0, 0,
	408, 452, 230, 523, 475, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 583, 368, 465, 520, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 374, 382, 499, 298,
	206, 207, 208, 492, 493, 494, 495, 534, 535, 539,
	442, 443, 444, 445, 279, 529, 295, 448, 447, 317,
	318, 363, 431, 0, 190, 211, 352, 0, 434, 275,
	561, 533, 528, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 364, 370, 371, 372, 373,
	392, 393, 394, 397, 400, 401, 404, 406, 407, 410,
	414, 418, 419, 420, 421, 423, 425, 435, 440, 454,
	455, 456, 457, 458, 461, 462, 467, 468, 469, 470,
	471, 479, 480, 484, 507, 510, 522, 540, 545, 460,
	287, 288, 426, 427, 300, 301, 558, 559, 286, 517,
	546, 0, 0, 362, 0, 0, 365, 268, 291, 306,
	0, 532, 481, 217, 446, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 375, 383, 412, 417,
	283, 258, 234, 439, 231, 464, 487, 488, 489, 491,
	379, 253, 416, 0, 380, 360, 497, 498, 302, 80,
	496, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 399, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 350, 254, 0, 0,
	413, 0, 196, 0, 466, 241, 361, 358, 504, 269,
	260, 256, 239, 303, 369, 411, 486, 405, 0, 354,
	0, 0, 476, 384, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	237, 311, 195, 396, 477, 273, 0, 89, 0, 1502,
	0, 630, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 335, 344,
	343, 324, 325, 327, 329, 334, 341, 347, 0, 0,
	0, 0, 0, 252, 307, 259, 251, 501, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 385, 244, 0, 0, 0, 0, 542,
	0, 0, 0, 0, 0, 0, 0, 349, 0, 316,
	191, 215, 0, 0, 395, 441, 453, 0, 0, 0,
	242, 0, 451, 409, 521, 223, 271, 438, 415, 449,
	422, 274, 0, 0, 450, 356, 506, 432, 518, 543,
	544, 250, 389, 530, 490, 538, 560, 216, 247, 403,
	483, 524, 473, 381, 502, 503, 315, 472, 282, 194,
	353, 549, 214, 459, 355, 232, 221, 509, 527, 276,
	436, 556, 508, 203, 485, 516, 229, 463, 0, 0,
	562, 205, 514, 482, 377, 312, 313, 204, 0, 437,
	255, 280, 245, 398, 511, 512, 243, 563, 218, 537,
	210, 0, 536, 391, 505, 515, 378, 367, 209, 513,
	376, 366, 320, 339, 340, 267, 293, 429, 359, 430,
	292, 294, 387, 386, 388, 198, 525, 0, 199, 0,
	478, 526, 564, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 402, 428, 424, 433, 0,
	500, 519, 531, 541, 547, 548, 550, 551, 552, 553,
	554, 557, 555, 390, 297, 474, 319, 357, 0, 0,
	408, 452, 230, 523, 475, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 583, 368, 465, 520, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 374, 382, 499, 298,
	206, 207, 208, 492, 493, 494, 495, 534, 535, 539,
	442, 443, 444, 445, 279, 529, 295, 448, 447, 317,
	318, 363, 431, 0, 190, 211, 352, 88, 434, 275,
	561, 533, 528, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 364, 370, 371, 372, 373,
	392, 393, 394, 397, 400, 401, 404, 406, 407, 410,
	414, 418, 419, 420, 421, 423, 425, 435, 440, 454,
	455, 456, 457, 458, 461, 462, 467, 468, 469, 470,
	471, 479, 480, 484, 507, 510, 522, 540, 545, 460,
	287, 288, 426, 427, 300, 301, 558, 559, 286, 517,
	546, 0, 0, 362, 0, 0, 365, 268, 291, 306,
	0, 532, 481, 217, 446, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 375, 383, 412, 417,
	283, 258, 234, 439, 231, 464, 487, 488, 489, 491,
	379, 253, 416, 380, 0, 360, 497, 498, 302, 496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 399, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 413,
	0, 196, 0, 466, 241, 361, 358, 504, 269, 260,
	256, 239, 303, 369, 411, 486, 405, 0, 354, 0,
	0, 476, 384, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 396, 477, 273, 0, 89, 0, 0, 0,
	188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 0, 0, 0, 335, 344, 343,
	324, 325, 327, 329, 334, 341, 347, 0, 0, 0,
	0, 0, 252, 307, 259, 251, 501, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 385, 244, 0, 0, 0, 0, 542, 0,
	0, 0, 0, 0, 0, 0, 349, 0, 316, 191,
	215, 0, 0, 395, 441, 453, 0, 0, 0, 242,
	0, 451, 409, 521, 223, 271, 438, 415, 449, 422,
	274, 0, 0, 450, 356, 506, 432, 518, 543, 544,
	250, 389, 530, 490, 538, 560, 216, 247, 403, 483,
	524, 473, 381, 502, 503, 315, 472, 282, 194, 353,
	549, 214, 459, 355, 232, 221, 509, 527, 276, 436,
	556, 508, 203, 485, 516, 229, 463, 0, 0, 562,
	205, 514, 482, 377, 312, 313, 204, 0, 437, 255,
	280, 245, 398, 511, 512, 243, 563, 218, 537, 210,
	0, 536, 391, 505, 515, 378, 367, 209, 513, 376,
	366, 320, 339, 340, 267, 293, 429, 359, 430, 292,
	294, 387, 386, 388, 198, 525, 0, 199, 0, 478,
	526, 564, 224, 225, 227, 0, 266, 270, 278, 281,
	289, 290, 299, 351, 402, 428, 424, 433, 0, 500,
	519, 531, 541, 547, 548, 550, 551, 552, 553, 554,
	557, 555, 390, 297, 474, 319, 357, 0, 0, 408,
	452, 230, 523, 475, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 583, 368, 465, 520, 321, 333, 336, 326,
	345, 0, 346, 322, 323, 328, 330, 331, 332, 337,
	338, 342, 348, 238, 201, 374, 382, 499, 298, 206,
	207, 208, 492, 493, 494, 495, 534, 535, 539, 442,
	443, 444, 445, 279, 529, 295, 448, 447, 317, 318,
	363, 431, 0, 190, 211, 352, 0, 434, 275, 561,
	533, 528, 197, 213, 0, 249, 0, 0, 0, 0,
	0, 0, 2072, 0, 0, 2071, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 200,
	212, 222, 226, 233, 248, 263, 265, 272, 285, 296,
	304, 305, 308, 314, 364, 370, 371, 372, 373, 392,
	393, 394, 397, 400, 401, 404, 406, 407, 410, 414,
	418, 419, 420, 421, 423, 425, 435, 440, 454, 455,
	456, 457, 458, 461, 462, 467, 468, 469, 470, 471,
	479, 480, 484, 507, 510, 522, 540, 545, 460, 287,
	288, 426, 427, 300, 301, 558, 559, 286, 517, 546,
	0, 0, 362, 0, 0, 365, 268, 291, 306, 0,
	532, 481, 217, 446, 277, 240, 0, 0, 202, 236,
	220, 246, 261, 264, 310, 375, 383, 412, 417, 283,
	258, 234, 439, 231, 464, 487, 488, 489, 491, 379,
	253, 416, 380, 0, 360, 497, 498, 302, 496, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	399, 0, 0, 0, 2023, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 350, 254, 0, 0, 413, 0,
	196, 0, 466, 241, 361, 358, 504, 269, 260, 256,
	239, 303, 369, 411, 486, 405, 0, 354, 0, 0,
	476, 384, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 237, 311,
	195, 396, 477, 273, 0, 0, 0, 0, 1702, 188,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 235, 0, 0, 0, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 501, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 385, 244, 0, 0, 0, 0, 542, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 395, 441, 453, 0, 0, 0, 242, 0,
	451, 409, 521, 223, 271, 438, 415, 449, 422, 274,
	0, 2021, 450, 356, 506, 432, 518, 543, 544, 250,
	389, 530, 490, 538, 560, 216, 247, 403, 483, 524,
	473, 381, 502, 503, 315, 472, 282, 194, 353, 549,
	214, 459, 355, 232, 221, 509, 527, 276, 436, 556,
	508, 203, 485, 516, 229, 463, 0, 0, 562, 205,
	514, 482, 377, 312, 313, 204, 0, 437, 255, 280,
	245, 398, 511, 512, 243, 563, 218, 537, 210, 0,
	536, 391, 505, 515, 378, 367, 209, 513, 376, 366,
	320, 339, 340, 267, 293, 429, 359, 430, 292, 294,
	387, 386, 388, 198, 525, 0, 199, 0, 478, 526,
	564, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 402, 428, 424, 433, 0, 500, 519,
	531, 541, 547, 548, 550, 551, 552, 553, 554, 557,
	555, 390, 297, 474, 319, 357, 0, 0, 408, 452,
	230, 523, 475, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 583, 368, 465, 520, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 374, 382, 499, 298, 206, 207,
	208, 492, 493, 494, 495, 534, 535, 539, 442, 443,
	444, 445, 279, 529, 295, 448, 447, 317, 318, 363,
	431, 0, 190, 211, 352, 0, 434, 275, 561, 533,
	528, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 364, 370, 371, 372, 373, 392, 393,
	394, 397, 400, 401, 404, 406, 407, 410, 414, 418,
	419, 420, 421, 423, 425, 435, 440, 454, 455, 456,
	457, 458, 461, 462, 467, 468, 469, 470, 471, 479,
	480, 484, 507, 510, 522, 540, 545, 460, 287, 288,
	426, 427, 300, 301, 558, 559, 286, 517, 546, 0,
	0, 362, 0, 0, 365, 268, 291, 306, 0, 532,
	481, 217, 446, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 375, 383, 412, 417, 283, 258,
	234, 439, 231, 464, 487, 488, 489, 491, 379, 253,
	416, 380, 0, 360, 497, 498, 302, 496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 399,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 413, 0, 196,
	0, 466, 241, 361, 358, 504, 269, 260, 256, 239,
	303, 369, 411, 486, 405, 0, 354, 0, 0, 476,
	384, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	396, 477, 273, 0, 0, 0, 0, 0, 630, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 235, 0, 0, 0, 335, 344, 343, 324, 325,
	327, 329, 334, 341, 347, 0, 0, 0, 0, 0,
	252, 307, 259, 251, 501, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 930, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	385, 244, 0, 0, 0, 0, 542, 0, 0, 0,
	0, 0, 0, 0, 349, 936, 316, 191, 215, 934,
	0, 395, 441, 453, 0, 0, 0, 242, 0, 451,
	409, 521, 223, 271, 438, 415, 449, 422, 274, 0,
	0, 450, 356, 506, 432, 518, 543, 544, 250, 389,
	530, 490, 538, 560, 216, 247, 403, 483, 524, 473,
	381, 502, 503, 315, 472, 282, 194, 353, 549, 214,
	459, 355, 232, 221, 509, 527, 276, 436, 556, 508,
	203, 485, 516, 229, 463, 0, 0, 562, 205, 514,
	482, 377, 312, 313, 204, 0, 437, 255, 280, 245,
	398, 511, 512, 243, 563, 218, 537, 210, 0, 536,
	391, 505, 515, 378, 367, 209, 513, 376, 366, 320,
	339, 340, 267, 293, 429, 359, 430, 292, 294, 387,
	386, 388, 198, 525, 0, 199, 0, 478, 526, 564,
	224, 225, 227, 0, 266, 270, 278, 281, 289, 290,
	299, 351, 402, 428, 424, 433, 0, 500, 519, 531,
	541, 547, 548, 550, 551, 552, 553, 554, 557, 555,
	390, 297, 474, 319, 357, 0, 0, 408, 452, 230,
	523, 475, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	583, 368, 465, 520, 321, 333, 336, 326, 345, 0,
	346, 322, 323, 328, 330, 331, 332, 337, 338, 342,
	348, 238, 201, 374, 382, 499, 298, 206, 207, 208,
	492, 493, 494, 495, 534, 535, 539, 442, 443, 444,
	445, 279, 529, 295, 448, 447, 317, 318, 363, 431,
	0, 190, 211, 352, 0, 434, 275, 561, 533, 528,
	197, 213, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 200, 212, 222,
	226, 233, 248, 263, 265, 272, 285, 296, 304, 305,
	308, 314, 364, 370, 371, 372, 373, 392, 393, 394,
	397, 400, 401, 404, 406, 407, 410, 414, 418, 419,
	420, 421, 423, 425, 435, 440, 454, 455, 456, 457,
	458, 461, 462, 467, 468, 469, 470, 471, 479, 480,
	484, 507, 510, 522, 540, 545, 460, 287, 288, 426,
	427, 300, 301, 558, 559, 286, 517, 546, 0, 0,
	362, 0, 0, 365, 268, 291, 306, 0, 532, 481,
	217, 446, 277, 240, 0, 0, 202, 236, 220, 246,
	261, 264, 310, 375, 383, 412, 417, 283, 258, 234,
	439, 231, 464, 487, 488, 489, 491, 379, 253, 416,
	380, 0, 360, 497, 498, 302, 496, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 399, 0,
	0, 0, 2023, 0, 0, 0, 0, 257, 0, 0,
	0, 0, 350, 254, 0, 0, 413, 0, 196, 0,
	466, 241, 361, 358, 504, 269, 260, 256, 239, 303,
	369, 411, 486, 405, 0, 354, 0, 0, 476, 384,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 237, 311, 195, 396,
	477, 273, 0, 0, 0, 0, 1702, 188, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	235, 0, 0, 0, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 501, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 385,
	244, 0, 0, 0, 0, 542, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	395, 441, 453, 0, 0, 0, 242, 0, 451, 409,
	521, 223, 271, 438, 415, 449, 422, 274, 0, 0,
	450, 356, 506, 432, 518, 543, 544, 250, 389, 530,
	490, 538, 560, 216, 247, 403, 483, 524, 473, 381,
	502, 503, 315, 472, 282, 194, 353, 549, 214, 459,
	355, 232, 221, 509, 527, 276, 436, 556, 508, 203,
	485, 516, 229, 463, 0, 0, 562, 205, 514, 482,
	377, 312, 313, 204, 0, 437, 255, 280, 245, 398,
	511, 512, 243, 563, 218, 537, 210, 0, 536, 391,
	505, 515, 378, 367, 209, 513, 376, 366, 320, 339,
	340, 267, 293, 429, 359, 430, 292, 294, 387, 386,
	388, 198, 525, 0, 199, 0, 478, 526, 564, 224,
	225, 227, 0, 266, 270, 278, 281, 289, 290, 299,
	351, 402, 428, 424, 433, 0, 500, 519, 531, 541,
	547, 548, 550, 551, 552, 553, 554, 557, 555, 390,
	297, 474, 319, 357, 0, 0, 408, 452, 230, 523,
	475, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 583,
	368, 465, 520, 321, 333, 336, 326, 345, 0, 346,
	322, 323, 328, 330, 331, 332, 337, 338, 342, 348,
	238, 201, 374, 382, 499, 298, 206, 207, 208, 492,
	493, 494, 495, 534, 535, 539, 442, 443, 444, 445,
	279, 529, 295, 448, 447, 317, 318, 363, 431, 0,
	190, 211, 352, 0, 434, 275, 561, 533, 528, 197,
	213, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 200, 212, 222, 226,
	233, 248, 263, 265, 272, 285, 296, 304, 305, 308,
	314, 364, 370, 371, 372, 373, 392, 393, 394, 397,
	400, 401, 404, 406, 407, 410, 414, 418, 419, 420,
	421, 423, 425, 435, 440, 454, 455, 456, 457, 458,
	461, 462, 467, 468, 469, 470, 471, 479, 480, 484,
	507, 510, 522, 540, 545, 460, 287, 288, 426, 427,
	300, 301, 558, 559, 286, 517, 546, 0, 0, 362,
	0, 0, 365, 268, 291, 306, 0, 532, 481, 217,
	446, 277, 240, 0, 0, 202, 236, 220, 246, 261,
	264, 310, 375, 383, 412, 417, 283, 258, 234, 439,
	231, 464, 487, 488, 489, 491, 379, 253, 416, 380,
	0, 360, 497, 498, 302, 496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 399, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 350, 254, 0, 0, 413, 0, 196, 0, 466,
	241, 361, 358, 504, 269, 260, 256, 239, 303, 369,
	411, 486, 405, 0, 354, 0, 0, 476, 384, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 237, 311, 195, 396, 477,
	273, 0, 0, 0, 1502, 0, 630, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	0, 0, 0, 335, 344, 343, 324, 325, 327, 329,
	334, 341, 347, 0, 0, 0, 0, 0, 252, 307,
	259, 251, 501, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 385, 244,
	0, 0, 0, 0, 542, 0, 0, 0, 3310, 0,
	0, 0, 349, 0, 316, 191, 215, 0, 0, 395,
	441, 453, 0, 0, 0, 242, 0, 451, 409, 521,
	223, 271, 438, 415, 449, 422, 274, 0, 0, 450,
	356, 506, 432, 518, 543, 544, 250, 389, 530, 490,
	538, 560, 216, 247, 403, 483, 524, 473, 381, 502,
	503, 315, 472, 282, 194, 353, 549, 214, 459, 355,
	232, 221, 509, 527, 276, 436, 556, 508, 203, 485,
	516, 229, 463, 0, 0, 562, 205, 514, 482, 377,
	312, 313, 204, 0, 437, 255, 280, 245, 398, 511,
	512, 243, 563, 218, 537, 210, 0, 536, 391, 505,
	515, 378, 367, 209, 513, 376, 366, 320, 339, 340,
	267, 293, 429, 359, 430, 292, 294, 387, 386, 388,
	198, 525, 0, 199, 0, 478, 526, 564, 224, 225,
	227, 0, 266, 270, 278, 281, 289, 290, 299, 351,
	402, 428, 424, 433, 0, 500, 519, 531, 541, 547,
	548, 550, 551, 552, 553, 554, 557, 555, 390, 297,
	474, 319, 357, 0, 0, 408, 452, 230, 523, 475,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 583, 368,
	465, 520, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 374, 382, 499, 298, 206, 207, 208, 492, 493,
	494, 495, 534, 535, 539, 442, 443, 444, 445, 279,
	529, 295, 448, 447, 317, 318, 363, 431, 0, 190,
	211, 352, 0, 434, 275, 561, 533, 528, 197, 213,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	364, 370, 371, 372, 373, 392, 393, 394, 397, 400,
	401, 404, 406, 407, 410, 414, 418, 419, 420, 421,
	423, 425, 435, 440, 454, 455, 456, 457, 458, 461,
	462, 467, 468, 469, 470, 471, 479, 480, 484, 507,
	510, 522, 540, 545, 460, 287, 288, 426, 427, 300,
	301, 558, 559, 286, 517, 546, 0, 0, 362, 0,
	0, 365, 268, 291, 306, 0, 532, 481, 217, 446,
	277, 240, 0, 0, 202, 236, 220, 246, 261, 264,
	310, 375, 383, 412, 417, 283, 258, 234, 439, 231,
	464, 487, 488, 489, 491, 379, 253, 416, 380, 0,
	360, 497, 498, 302, 496, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 399, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	350, 254, 0, 0, 413, 0, 196, 0, 466, 241,
	361, 358, 504, 269, 260, 256, 239, 303, 369, 411,
	486, 405, 0, 354, 0, 0, 476, 384, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 237, 311, 195, 396, 477, 273,
	0, 0, 0, 0, 1856, 630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 0,
	0, 0, 335, 344, 343, 324, 325, 327, 329, 334,
	341, 347, 0, 0, 0, 0, 0, 252, 307, 259,
	251, 501, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1857, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 385, 244, 0,
	0, 0, 0, 542, 0, 0, 0, 0, 0, 0,
	0, 349, 0, 316, 191, 215, 0, 0, 395, 441,
	453, 0, 0, 0, 242, 0, 451, 409, 521, 223,
	271, 438, 415, 449, 422, 274, 0, 0, 450, 356,
	506, 432, 518, 543, 544, 250, 389, 530, 490, 538,
	560, 216, 247, 403, 483, 524, 473, 381, 502, 503,
	315, 472, 282, 194, 353, 549, 214, 459, 355, 232,
	221, 509, 527, 276, 436, 556, 508, 203, 485, 516,
	229, 463, 0, 0, 562, 205, 514, 482, 377, 312,
	313, 204, 0, 437, 255, 280, 245, 398, 511, 512,
	243, 563, 218, 537, 210, 0, 536, 391, 505, 515,
	378, 367, 209, 513, 376, 366, 320, 339, 340, 267,
	293, 429, 359, 430, 292, 294, 387, 386, 388, 198,
	525, 0, 199, 0, 478, 526, 564, 224, 225, 227,
	0, 266, 270, 278, 281, 289, 290, 299, 351, 402,
	428, 424, 433, 0, 500, 519, 531, 541, 547, 548,
	550, 551, 552, 553, 554, 557, 555, 390, 297, 474,
	319, 357, 0, 0, 408, 452, 230, 523, 475, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 583, 368, 465,
	520, 321, 333, 336, 326, 345, 0, 346, 322, 323,
	328, 330, 331, 332, 337, 338, 342, 348, 238, 201,
	374, 382, 499, 298, 206, 207, 208, 492, 493, 494,
	495, 534, 535, 539, 442, 443, 444, 445, 279, 529,
	295, 448, 447, 317, 318, 363, 431, 0, 190, 211,
	352, 0, 434, 275, 561, 533, 528, 197, 213, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 200, 212, 222, 226, 233, 248,
	263, 265, 272, 285, 296, 304, 305, 308, 314, 364,
	370, 371, 372, 373, 392, 393, 394, 397, 400, 401,
	404, 406, 407, 410, 414, 418, 419, 420, 421, 423,
	425, 435, 440, 454, 455, 456, 457, 458, 461, 462,
	467, 468, 469, 470, 471, 479, 480, 484, 507, 510,
	522, 540, 545, 460, 287, 288, 426, 427, 300, 301,
	558, 559, 286, 517, 546, 0, 0, 362, 0, 0,
	365, 268, 291, 306, 0, 532, 481, 217, 446, 277,
	240, 0, 0, 202, 236, 220, 246, 261, 264, 310,
	375, 383, 412, 417, 283, 258, 234, 439, 231, 464,
	487, 488, 489, 491, 379, 253, 416, 380, 0, 360,
	497, 498, 302, 496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 399, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 350,
	254, 0, 0, 413, 0, 196, 0, 466, 241, 361,
	358, 504, 269, 260, 256, 239, 303, 369, 411, 486,
	405, 0, 354, 0, 0, 476, 384, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 237, 311, 195, 396, 477, 273, 0,
	0, 0, 0, 2424, 630, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 235, 0, 0,
	0, 335, 344, 343, 324, 325, 327, 329, 334, 341,
	347, 0, 0, 0, 0, 0, 252, 307, 259, 251,
	501, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2425, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 385, 244, 0, 0,
	0, 0, 542, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 316, 191, 215, 0, 0, 395, 441, 453,
	0, 0, 0, 242, 0, 451, 409, 521, 223, 271,
	438, 415, 449, 422, 274, 0, 0, 450, 356, 506,
	432, 518, 543, 544, 250, 389, 530, 490, 538, 560,
	216, 247, 403, 483, 524, 473, 381, 502, 503, 315,
	472, 282, 194, 353, 549, 214, 459, 355, 232, 221,
	509, 527, 276, 436, 556, 508, 203, 485, 516, 229,
	463, 0, 0, 562, 205, 514, 482, 377, 312, 313,
	204, 0, 437, 255, 280, 245, 398, 511, 512, 243,
	563, 218, 537, 210, 0, 536, 391, 505, 515, 378,
	367, 209, 513, 376, 366, 320, 339, 340, 267, 293,
	429, 359, 430, 292, 294, 387, 386, 388, 198, 525,
	0, 199, 0, 478, 526, 564, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 402, 428,
	424, 433, 0, 500, 519, 531, 541, 547, 548, 550,
	551, 552, 553, 554, 557, 555, 390, 297, 474, 319,
	357, 0, 0, 408, 452, 230, 523, 475, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 583, 368, 465, 520,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 374,
	382, 499, 298, 206, 207, 208, 492, 493, 494, 495,
	534, 535, 539, 442, 443, 444, 445, 279, 529, 295,
	448, 447, 317, 318, 363, 431, 0, 190, 211, 352,
	0, 434, 275, 561, 533, 528, 197, 213, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 364, 370,
	371, 372, 373, 392, 393, 394, 397, 400, 401, 404,
	406, 407, 410, 414, 418, 419, 420, 421, 423, 425,
	435, 440, 454, 455, 456, 457, 458, 461, 462, 467,
	468, 469, 470, 471, 479, 480, 484, 507, 510, 522,
	540, 545, 460, 287, 288, 426, 427, 300, 301, 558,
	559, 286, 517, 546, 0, 0, 362, 0, 0, 365,
	268, 291, 306, 0, 532, 481, 217, 446, 277, 240,
	0, 0, 202, 236, 220, 246, 261, 264, 310, 375,
	383, 412, 417, 283, 258, 234, 439, 231, 464, 487,
	488, 489, 491, 379, 253, 416, 380, 0, 360, 497,
	498, 302, 496, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 350, 254,
	0, 0, 413, 0, 196, 0, 466, 241, 361, 358,
	504, 269, 260, 256, 239, 303, 369, 411, 486, 405,
	0, 354, 0, 0, 476, 384, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 237, 311, 195, 396, 477, 273, 0, 0,
	0, 0, 0, 630, 0, 0, 0, 0, 2409, 0,
	0, 0, 0, 228, 0, 0, 235, 2410, 0, 0,
	335, 344, 343, 324, 325, 327, 329, 334, 341, 347,
	0, 0, 0, 0, 0, 252, 307, 259, 251, 501,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 385, 244, 0, 0, 0,
	0, 542, 0, 0, 0, 0, 0, 0, 0, 349,
	0, 316, 191, 215, 0, 0, 395, 441, 453, 0,
	0, 0, 242, 0, 451, 409, 521, 223, 271, 438,
	415, 449, 422, 274, 0, 0, 450, 356, 506, 432,
	518, 543, 544, 250, 389, 530, 490, 538, 560, 216,
	247, 403, 483, 524, 473, 381, 502, 503, 315, 472,
	282, 194, 353, 549, 214, 459, 355, 232, 221, 509,
	527, 276, 436, 556, 508, 203, 485, 516, 229, 463,
	0, 0, 562, 205, 514, 482, 377, 312, 313, 204,
	0, 437, 255, 280, 245, 398, 511, 512, 243, 563,
	218, 537, 210, 0, 536, 391, 505, 515, 378, 367,
	209, 513, 376, 366, 320, 339, 340, 267, 293, 429,
	359, 430, 292, 294, 387, 386, 388, 198, 525, 0,
	199, 0, 478, 526, 564, 224, 225, 227, 0, 266,
	270, 278, 281, 289, 290, 299, 351, 402, 428, 424,
	433, 0, 500, 519, 531, 541, 547, 548, 550, 551,
	552, 553, 554, 557, 555, 390, 297, 474, 319, 357,
	0, 0, 408, 452, 230, 523, 475, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 583, 368, 465, 520, 321,
	333, 336, 326, 345, 0, 346, 322, 323, 328, 330,
	331, 332, 337, 338, 342, 348, 238, 201, 374, 382,
	499, 298, 206, 207, 208, 492, 493, 494, 495, 534,
	535, 539, 442, 443, 444, 445, 279, 529, 295, 448,
	447, 317, 318, 363, 431, 0, 190, 211, 352, 0,
	434, 275, 561, 533, 528, 197, 213, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 200, 212, 222, 226, 233, 248, 263, 265,
	272, 285, 296, 304, 305, 308, 314, 364, 370, 371,
	372, 373, 392, 393, 394, 397, 400, 401, 404, 406,
	407, 410, 414, 418, 419, 420, 421, 423, 425, 435,
	440, 454, 455, 456, 457, 458, 461, 462, 467, 468,
	469, 470, 471, 479, 480, 484, 507, 510, 522, 540,
	545, 460, 287, 288, 426, 427, 300, 301, 558, 559,
	286, 517, 546, 0, 0, 362, 0, 0, 365, 268,
	291, 306, 0, 532, 481, 217, 446, 277, 240, 0,
	0, 202, 236, 220, 246, 261, 264, 310, 375, 383,
	412, 417, 283, 258, 234, 439, 231, 464, 487, 488,
	489, 491, 379, 253, 416, 380, 0, 360, 497, 498,
	302, 496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 399, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 1544, 0, 0, 0, 350, 254, 0,
	0, 413, 0, 196, 0, 466, 241, 361, 358, 504,
	269, 260, 256, 239, 303, 369, 411, 486, 405, 0,
	354, 0, 0, 476, 384, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 237, 311, 195, 396, 477, 273, 0, 0, 0,
	0, 1543, 630, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 0, 0, 0, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 0,
	0, 0, 0, 0, 252, 307, 259, 251, 501, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 385, 244, 0, 0, 0, 0,
	542, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 395, 441, 453, 0, 0,
	0, 242, 0, 451, 409, 521, 223, 271, 438, 415,
	449, 422, 274, 0, 0, 450, 356, 506, 432, 518,
	543, 544, 250, 389, 530, 490, 538, 560, 216, 247,
	403, 483, 524, 473, 381, 502, 503, 315, 472, 282,
	194, 353, 549, 214, 459, 355, 232, 221, 509, 527,
	276, 436, 556, 508, 203, 485, 516, 229, 463, 0,
	0, 562, 205, 514, 482, 377, 312, 313, 204, 0,
	437, 255, 280, 245, 398, 511, 512, 243, 563, 218,
	537, 210, 0, 536, 391, 505, 515, 378, 367, 209,
	513, 376, 366, 320, 339, 340, 267, 293, 429, 359,
	430, 292, 294, 387, 386, 388, 198, 525, 0, 199,
	0, 478, 526, 564, 224, 225, 227, 0, 266, 270,
	278, 281, 289, 290, 299, 351, 402, 428, 424, 433,
	0, 500, 519, 531, 541, 547, 548, 550, 551, 552,
	553, 554, 557, 555, 390, 297, 474, 319, 357, 0,
	0, 408, 452, 230, 523, 475, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 583, 368, 465, 520, 321, 333,
	336, 326, 345, 0, 346, 322, 323, 328, 330, 331,
	332, 337, 338, 342, 348, 238, 201, 374, 382, 499,
	298, 206, 207, 208, 492, 493, 494, 495, 534, 535,
	539, 442, 443, 444, 445, 279, 529, 295, 448, 447,
	317, 318, 363, 431, 0, 190, 211, 352, 0, 434,
	275, 561, 533, 528, 197, 213, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 248, 263, 265, 272,
	285, 296, 304, 305, 308, 314, 364, 370, 371, 372,
	373, 392, 393, 394, 397, 400, 401, 404, 406, 407,
	410, 414, 418, 419, 420, 421, 423, 425, 435, 440,
	454, 455, 456, 457, 458, 461, 462, 467, 468, 469,
	470, 471, 479, 480, 484, 507, 510, 522, 540, 545,
	460, 287, 288, 426, 427, 300, 301, 558, 559, 286,
	517, 546, 0, 0, 362, 0, 0, 365, 268, 291,
	306, 0, 532, 481, 217, 446, 277, 240, 0, 0,
	202, 236, 220, 246, 261, 264, 310, 375, 383, 412,
	417, 283, 258, 234, 439, 231, 464, 487, 488, 489,
	491, 379, 253, 416, 380, 0, 360, 497, 498, 302,
	496, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 399, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 350, 254, 0, 0,
	413, 0, 196, 0, 466, 241, 361, 358, 504, 269,
	260, 256, 239, 303, 369, 411, 486, 405, 0, 354,
	0, 0, 476, 384, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	237, 311, 195, 396, 477, 273, 0, 0, 0, 0,
	0, 632, 633, 634, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 335, 344,
	343, 324, 325, 327, 329, 334, 341, 347, 0, 0,
	0, 0, 0, 252, 307, 259, 251, 501, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 385, 244, 0, 0, 0, 0, 542,
	0, 0, 0, 0, 0, 0, 0, 349, 0, 316,
	191, 215, 0, 0, 395, 441, 453, 0, 0, 0,
	242, 0, 451, 409, 521, 223, 271, 438, 415, 449,
	422, 274, 0, 0, 450, 356, 506, 432, 518, 543,
	544, 250, 389, 530, 490, 538, 560, 216, 247, 403,
	483, 524, 473, 381, 502, 503, 315, 472, 282, 194,
	353, 549, 214, 459, 355, 232, 221, 509, 527, 276,
	436, 556, 508, 203, 485, 516, 229, 463, 0, 0,
	562, 205, 514, 482, 377, 312, 313, 204, 0, 437,
	255, 280, 245, 398, 511, 512, 243, 563, 218, 537,
	210, 0, 536, 391, 505, 515, 378, 367, 209, 513,
	376, 366, 320, 339, 340, 267, 293, 429, 359, 430,
	292, 294, 387, 386, 388, 198, 525, 0, 199, 0,
	478, 526, 564, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 402, 428, 424, 433, 0,
	500, 519, 531, 541, 547, 548, 550, 551, 552, 553,
	554, 557, 555, 390, 297, 474, 319, 357, 0, 0,
	408, 452, 230, 523, 475, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 583, 368, 465, 520, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 374, 382, 499, 298,
	206, 207, 208, 492, 493, 494, 495, 534, 535, 539,
	442, 443, 444, 445, 279, 529, 295, 448, 447, 317,
	318, 363, 431, 0, 190, 211, 352, 0, 434, 275,
	561, 533, 528, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 364, 370, 371, 372, 373,
	392, 393, 394, 397, 400, 401, 404, 406, 407, 410,
	414, 418, 419, 420, 421, 423, 425, 435, 440, 454,
	455, 456, 457, 458, 461, 462, 467, 468, 469, 470,
	471, 479, 480, 484, 507, 510, 522, 540, 545, 460,
	287, 288, 426, 427, 300, 301, 558, 559, 286, 517,
	546, 0, 0, 362, 0, 0, 365, 268, 291, 306,
	0, 532, 481, 217, 446, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 375, 383, 412, 417,
	283, 258, 234, 439, 231, 464, 487, 488, 489, 491,
	379, 253, 416, 380, 0, 360, 497, 498, 302, 496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 399, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 413,
	0, 196, 0, 466, 241, 361, 358, 504, 269, 260,
	256, 239, 303, 369, 411, 486, 405, 0, 354, 0,
	0, 476, 384, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 396, 477, 273, 0, 0, 0, 0, 0,
	630, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 0, 0, 0, 335, 344, 343,
	324, 325, 327, 329, 334, 341, 347, 0, 0, 0,
	0, 0, 252, 307, 259, 251, 501, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 385, 244, 0, 0, 0, 0, 542, 0,
	0, 0, 3434, 0, 0, 0, 349, 0, 316, 191,
	215, 0, 0, 395, 441, 453, 0, 0, 0, 242,
	0, 451, 409, 521, 223, 271, 438, 415, 449, 422,
	274, 0, 0, 450, 356, 506, 432, 518, 543, 544,
	250, 389, 530, 490, 538, 560, 216, 247, 403, 483,
	524, 473, 381, 502, 503, 315, 472, 282, 194, 353,
	549, 214, 459, 355, 232, 221, 509, 527, 276, 436,
	556, 508, 203, 485, 516, 229, 463, 0, 0, 562,
	205, 514, 482, 377, 312, 313, 204, 0, 437, 255,
	280, 245, 398, 511, 512, 243, 563, 218, 537, 210,
	0, 536, 391, 505, 515, 378, 367, 209, 513, 376,
	366, 320, 339, 340, 267, 293, 429, 359, 430, 292,
	294, 387, 386, 388, 198, 525, 0, 199, 0, 478,
	526, 564, 224, 225, 227, 0, 266, 270, 278, 281,
	289, 290, 299, 351, 402, 428, 424, 433, 0, 500,
	519, 531, 541, 547, 548, 550, 551, 552, 553, 554,
	557, 555, 390, 297, 474, 319, 357, 0, 0, 408,
	452, 230, 523, 475, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 583, 368, 465, 520, 321, 333, 336, 326,
	345, 0, 346, 322, 323, 328, 330, 331, 332, 337,
	338, 342, 348, 238, 201, 374, 382, 499, 298, 206,
	207, 208, 492, 493, 494, 495, 534, 535, 539, 442,
	443, 444, 445, 279, 529, 295, 448, 447, 317, 318,
	363, 431, 0, 190, 211, 352, 0, 434, 275, 561,
	533, 528, 197, 213, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 200,
	212, 222, 226, 233, 248, 263, 265, 272, 285, 296,
	304, 305, 308, 314, 364, 370, 371, 372, 373, 392,
	393, 394, 397, 400, 401, 404, 406, 407, 410, 414,
	418, 419, 420, 421, 423, 425, 435, 440, 454, 455,
	456, 457, 458, 461, 462, 467, 468, 469, 470, 471,
	479, 480, 484, 507, 510, 522, 540, 545, 460, 287,
	288, 426, 427, 300, 301, 558, 559, 286, 517, 546,
	0, 0, 362, 0, 0, 365, 268, 291, 306, 0,
	532, 481, 217, 446, 277, 240, 0, 0, 202, 236,
	220, 246, 261, 264, 310, 375, 383, 412, 417, 283,
	258, 234, 439, 231, 464, 487, 488, 489, 491, 379,
	253, 416, 380, 0, 360, 497, 498, 302, 496, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 350, 254, 0, 0, 413, 0,
	196, 0, 466, 241, 361, 358, 504, 269, 260, 256,
	239, 303, 369, 411, 486, 405, 0, 354, 0, 0,
	476, 384, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 237, 311,
	195, 396, 477, 273, 0, 0, 0, 0, 1702, 188,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 235, 0, 0, 0, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 501, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 385, 244, 0, 0, 0, 0, 542, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 395, 441, 453, 0, 0, 0, 242, 0,
	451, 409, 521, 223, 271, 438, 415, 449, 422, 274,
	0, 0, 450, 356, 506, 432, 518, 543, 544, 250,
	389, 530, 490, 538, 560, 216, 247, 403, 483, 524,
	473, 381, 502, 503, 315, 472, 282, 194, 353, 549,
	214, 459, 355, 232, 221, 509, 527, 276, 436, 556,
	508, 203, 485, 516, 229, 463, 0, 0, 562, 205,
	514, 482, 377, 312, 313, 204, 0, 437, 255, 280,
	245, 398, 511, 512, 243, 563, 218, 537, 210, 0,
	536, 391, 505, 515, 378, 367, 209, 513, 376, 366,
	320, 339, 340, 267, 293, 429, 359, 430, 292, 294,
	387, 386, 388, 198, 525, 0, 199, 0, 478, 526,
	564, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 402, 428, 424, 433, 0, 500, 519,
	531, 541, 547, 548, 550, 551, 552, 553, 554, 557,
	555, 390, 297, 474, 319, 357, 0, 0, 408, 452,
	230, 523, 475, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 583, 368, 465, 520, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 374, 382, 499, 298, 206, 207,
	208, 492, 493, 494, 495, 534, 535, 539, 442, 443,
	444, 445, 279, 529, 295, 448, 447, 317, 318, 363,
	431, 0, 190, 211, 352, 0, 434, 275, 561, 533,
	528, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 364, 370, 371, 372, 373, 392, 393,
	394, 397, 400, 401, 404, 406, 407, 410, 414, 418,
	419, 420, 421, 423, 425, 435, 440, 454, 455, 456,
	457, 458, 461, 462, 467, 468, 469, 470, 471, 479,
	480, 484, 507, 510, 522, 540, 545, 460, 287, 288,
	426, 427, 300, 301, 558, 559, 286, 517, 546, 0,
	0, 362, 0, 0, 365, 268, 291, 306, 0, 532,
	481, 217, 446, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 375, 383, 412, 417, 283, 258,
	234, 439, 231, 464, 487, 488, 489, 491, 379, 253,
	416, 380, 0, 360, 497, 498, 302, 496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 399,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 413, 0, 196,
	0, 466, 241, 361, 358, 504, 269, 260, 256, 239,
	303, 369, 411, 486, 405, 0, 354, 0, 0, 476,
	384, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	396, 477, 273, 0, 0, 0, 0, 0, 630, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 235, 0, 0, 0, 335, 344, 343, 324, 325,
	327, 329, 334, 341, 347, 0, 0, 0, 0, 0,
	252, 307, 259, 251, 501, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	385, 244, 0, 0, 0, 0, 542, 0, 0, 0,
	3310, 0, 0, 0, 349, 0, 316, 191, 215, 0,
	0, 395, 441, 453, 0, 0, 0, 242, 0, 451,
	409, 521, 223, 271, 438, 415, 449, 422, 274, 0,
	0, 450, 356, 506, 432, 518, 543, 544, 250, 389,
	530, 490, 538, 560, 216, 247, 403, 483, 524, 473,
	381, 502, 503, 315, 472, 282, 194, 353, 549, 214,
	459, 355, 232, 221, 509, 527, 276, 436, 556, 508,
	203, 485, 516, 229, 463, 0, 0, 562, 205, 514,
	482, 377, 312, 313, 204, 0, 437, 255, 280, 245,
	398, 511, 512, 243, 563, 218, 537, 210, 0, 536,
	391, 505, 515, 378, 367, 209, 513, 376, 366, 320,
	339, 340, 267, 293, 429, 359, 430, 292, 294, 387,
	386, 388, 198, 525, 0, 199, 0, 478, 526, 564,
	224, 225, 227, 0, 266, 270, 278, 281, 289, 290,
	299, 351, 402, 428, 424, 433, 0, 500, 519, 531,
	541, 547, 548, 550, 551, 552, 553, 554, 557, 555,
	390, 297, 474, 319, 357, 0, 0, 408, 452, 230,
	523, 475, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	583, 368, 465, 520, 321, 333, 336, 326, 345, 0,
	346, 322, 323, 328, 330, 331, 332, 337, 338, 342,
	348, 238, 201, 374, 382, 499, 298, 206, 207, 208,
	492, 493, 494, 495, 534, 535, 539, 442, 443, 444,
	445, 279, 529, 295, 448, 447, 317, 318, 363, 431,
	0, 190, 211, 352, 0, 434, 275, 561, 533, 528,
	197, 213, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 200, 212, 222,
	226, 233, 248, 263, 265, 272, 285, 296, 304, 305,
	308, 314, 364, 370, 371, 372, 373, 392, 393, 394,
	397, 400, 401, 404, 406, 407, 410, 414, 418, 419,
	420, 421, 423, 425, 435, 440, 454, 455, 456, 457,
	458, 461, 462, 467, 468, 469, 470, 471, 479, 480,
	484, 507, 510, 522, 540, 545, 460, 287, 288, 426,
	427, 300, 301, 558, 559, 286, 517, 546, 0, 0,
	362, 0, 0, 365, 268, 291, 306, 0, 532, 481,
	217, 446, 277, 240, 0, 0, 202, 236, 220, 246,
	261, 264, 310, 375, 383, 412, 417, 283, 258, 234,
	439, 231, 464, 487, 488, 489, 491, 379, 253, 416,
	380, 0, 360, 497, 498, 302, 496, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 399, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 0,
	0, 0, 350, 254, 0, 0, 413, 0, 196, 0,
	466, 241, 361, 358, 504, 269, 260, 256, 239, 303,
	369, 411, 486, 405, 0, 354, 0, 0, 476, 384,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 237, 311, 195, 396,
	477, 273, 0, 89, 0, 0, 0, 630, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	235, 0, 0, 0, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 501, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 385,
	244, 0, 0, 0, 0, 542, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	395, 441, 453, 0, 0, 0, 242, 0, 451, 409,
	521, 223, 271, 438, 415, 449, 422, 274, 0, 0,
	450, 356, 506, 432, 518, 543, 544, 250, 389, 530,
	490, 538, 560, 216, 247, 403, 483, 524, 473, 381,
	502, 503, 315, 472, 282, 194, 353, 549, 214, 459,
	355, 232, 221, 509, 527, 276, 436, 556, 508, 203,
	485, 516, 229, 463, 0, 0, 562, 205, 514, 482,
	377, 312, 313, 204, 0, 437, 255, 280, 245, 398,
	511, 512, 243, 563, 218, 537, 210, 0, 536, 391,
	505, 515, 378, 367, 209, 513, 376, 366, 320, 339,
	340, 267, 293, 429, 359, 430, 292, 294, 387, 386,
	388, 198, 525, 0, 199, 0, 478, 526, 564, 224,
	225, 227, 0, 266, 270, 278, 281, 289, 290, 299,
	351, 402, 428, 424, 433, 0, 500, 519, 531, 541,
	547, 548, 550, 551, 552, 553, 554, 557, 555, 390,
	297, 474, 319, 357, 0, 0, 408, 452, 230, 523,
	475, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 583,
	368, 465, 520, 321, 333, 336, 326, 345, 0, 346,
	322, 323, 328, 330, 331, 332, 337, 338, 342, 348,
	238, 201, 374, 382, 499, 298, 206, 207, 208, 492,
	493, 494, 495, 534, 535, 539, 442, 443, 444, 445,
	279, 529, 295, 448, 447, 317, 318, 363, 431, 0,
	190, 211, 352, 0, 434, 275, 561, 533, 528, 197,
	213, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 200, 212, 222, 226,
	233, 248, 263, 265, 272, 285, 296, 304, 305, 308,
	314, 364, 370, 371, 372, 373, 392, 393, 394, 397,
	400, 401, 404, 406, 407, 410, 414, 418, 419, 420,
	421, 423, 425, 435, 440, 454, 455, 456, 457, 458,
	461, 462, 467, 468, 469, 470, 471, 479, 480, 484,
	507, 510, 522, 540, 545, 460, 287, 288, 426, 427,
	300, 301, 558, 559, 286, 517, 546, 0, 0, 362,
	0, 0, 365, 268, 291, 306, 0, 532, 481, 217,
	446, 277, 240, 0, 0, 202, 236, 220, 246, 261,
	264, 310, 375, 383, 412, 417, 283, 258, 234, 439,
	231, 464, 487, 488, 489, 491, 379, 253, 416, 380,
	0, 360, 497, 498, 302, 496, 0, 0, 0, 0,
	2073, 0, 0, 0, 0, 0, 0, 399, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 350, 254, 0, 0, 413, 0, 196, 0, 466,
	241, 361, 358, 504, 269, 260, 256, 239, 303, 369,
	411, 486, 405, 0, 354, 0, 0, 476, 384, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 237, 311, 195, 396, 477,
	273, 0, 0, 0, 0, 0, 188, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	0, 0, 0, 335, 344, 343, 324, 325, 327, 329,
	334, 341, 347, 0, 0, 0, 0, 0, 252, 307,
	259, 251, 501, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 385, 244,
	0, 0, 0, 0, 542, 0, 0, 0, 0, 0,
	0, 0, 349, 0, 316, 191, 215, 0, 0, 395,
	441, 453, 0, 0, 0, 242, 0, 451, 409, 521,
	223, 271, 438, 415, 449, 422, 274, 0, 0, 450,
	356, 506, 432, 518, 543, 544, 250, 389, 530, 490,
	538, 560, 216, 247, 403, 483, 524, 473, 381, 502,
	503, 315, 472, 282, 194, 353, 549, 214, 459, 355,
	232, 221, 509, 527, 276, 436, 556, 508, 203, 485,
	516, 229, 463, 0, 0, 562, 205, 514, 482, 377,
	312, 313, 204, 0, 437, 255, 280, 245, 398, 511,
	512, 243, 563, 218, 537, 210, 0, 536, 391, 505,
	515, 378, 367, 209, 513, 376, 366, 320, 339, 340,
	267, 293, 429, 359, 430, 292, 294, 387, 386, 388,
	198, 525, 0, 199, 0, 478, 526, 564, 224, 225,
	227, 0, 266, 270, 278, 281, 289, 290, 299, 351,
	402, 428, 424, 433, 0, 500, 519, 531, 541, 547,
	548, 550, 551, 552, 553, 554, 557, 555, 390, 297,
	474, 319, 357, 0, 0, 408, 452, 230, 523, 475,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 583, 368,
	465, 520, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 374, 382, 499, 298, 206, 207, 208, 492, 493,
	494, 495, 534, 535, 539, 442, 443, 444, 445, 279,
	529, 295, 448, 447, 317, 318, 363, 431, 0, 190,
	211, 352, 0, 434, 275, 561, 533, 528, 197, 213,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	364, 370, 371, 372, 373, 392, 393, 394, 397, 400,
	401, 404, 406, 407, 410, 414, 418, 419, 420, 421,
	423, 425, 435, 440, 454, 455, 456, 457, 458, 461,
	462, 467, 468, 469, 470, 471, 479, 480, 484, 507,
	510, 522, 540, 545, 460, 287, 288, 426, 427, 300,
	301, 558, 559, 286, 517, 546, 0, 0, 362, 0,
	0, 365, 268, 291, 306, 0, 532, 481, 217, 446,
	277, 240, 0, 0, 202, 236, 220, 246, 261, 264,
	310, 375, 383, 412, 417, 283, 258, 234, 439, 231,
	464, 487, 488, 489, 491, 379, 253, 416, 380, 0,
	360, 497, 498, 302, 496, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 399, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	350, 254, 0, 0, 413, 0, 196, 0, 466, 241,
	361, 358, 504, 269, 260, 256, 239, 303, 369, 411,
	486, 405, 0, 354, 0, 0, 476, 384, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 237, 311, 195, 396, 477, 273,
	0, 0, 0, 0, 1525, 630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 0,
	0, 0, 335, 344, 343, 324, 325, 327, 329, 334,
	341, 347, 0, 0, 0, 0, 0, 252, 307, 259,
	251, 501, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 385, 244, 0,
	0, 0, 0, 542, 0, 0, 0, 0, 0, 0,
	0, 349, 0, 316, 191, 215, 0, 0, 395, 441,
	453, 0, 0, 0, 242, 0, 451, 409, 521, 223,
	271, 438, 415, 449, 422, 274, 0, 0, 450, 356,
	506, 432, 518, 543, 544, 250, 389, 530, 490, 538,
	560, 216, 247, 403, 483, 524, 473, 381, 502, 503,
	315, 472, 282, 194, 353, 549, 214, 459, 355, 232,
	221, 509, 527, 276, 436, 556, 508, 203, 485, 516,
	229, 463, 0, 0, 562, 205, 514, 482, 377, 312,
	313, 204, 0, 437, 255, 280, 245, 398, 511, 512,
	243, 563, 218, 537, 210, 0, 536, 391, 505, 515,
	378, 367, 209, 513, 376, 366, 320, 339, 340, 267,
	293, 429, 359, 430, 292, 294, 387, 386, 388, 198,
	525, 0, 199, 0, 478, 526, 564, 224, 225, 227,
	0, 266, 270, 278, 281, 289, 290, 299, 351, 402,
	428, 424, 433, 0, 500, 519, 531, 541, 547, 548,
	550, 551, 552, 553, 554, 557, 555, 390, 297, 474,
	319, 357, 0, 0, 408, 452, 230, 523, 475, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 583, 368, 465,
	520, 321, 333, 336, 326, 345, 0, 346, 322, 323,
	328, 330, 331, 332, 337, 338, 342, 348, 238, 201,
	374, 382, 499, 298, 206, 207, 208, 492, 493, 494,
	495, 534, 535, 539, 442, 443, 444, 445, 279, 529,
	295, 448, 447, 317, 318, 363, 431, 0, 190, 211,
	352, 0, 434, 275, 561, 533, 528, 197, 213, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 200, 212, 222, 226, 233, 248,
	263, 265, 272, 285, 296, 304, 305, 308, 314, 364,
	370, 371, 372, 373, 392, 393, 394, 397, 400, 401,
	404, 406, 407, 410, 414, 418, 419, 420, 421, 423,
	425, 435, 440, 454, 455, 456, 457, 458, 461, 462,
	467, 468, 469, 470, 471, 479, 480, 484, 507, 510,
	522, 540, 545, 460, 287, 288, 426, 427, 300, 301,
	558, 559, 286, 517, 546, 0, 0, 362, 0, 0,
	365, 268, 291, 306, 0, 532, 481, 217, 446, 277,
	240, 0, 0, 202, 236, 220, 246, 261, 264, 310,
	375, 383, 412, 417, 283, 258, 234, 439, 231, 464,
	487, 488, 489, 491, 379, 253, 416, 380, 0, 360,
	497, 498, 302, 496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 399, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 350,
	254, 0, 0, 413, 0, 196, 0, 466, 241, 361,
	358, 504, 269, 260, 256, 239, 303, 369, 411, 486,
	405, 0, 354, 0, 0, 476, 384, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 237, 311, 195, 396, 477, 273, 0,
	0, 0, 0, 0, 630, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 235, 0, 0,
	0, 335, 344, 343, 324, 325, 327, 329, 334, 341,
	347, 0, 0, 0, 0, 0, 252, 307, 259, 251,
	501, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1332,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 385, 244, 0, 0,
	0, 0, 542, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 316, 191, 215, 0, 0, 395, 441, 453,
	0, 0, 0, 242, 0, 451, 409, 521, 223, 271,
	438, 415, 449, 422, 274, 0, 0, 450, 356, 506,
	432, 518, 543, 544, 250, 389, 530, 490, 538, 560,
	216, 247, 403, 483, 524, 473, 381, 502, 503, 315,
	472, 282, 194, 353, 549, 214, 459, 355, 232, 221,
	509, 527, 276, 436, 556, 508, 203, 485, 516, 229,
	463, 0, 0, 562, 205, 514, 482, 377, 312, 313,
	204, 0, 437, 255, 280, 245, 398, 511, 512, 243,
	563, 218, 537, 210, 0, 536, 391, 505, 515, 378,
	367, 209, 513, 376, 366, 320, 339, 340, 267, 293,
	429, 359, 430, 292, 294, 387, 386, 388, 198, 525,
	0, 199, 0, 478, 526, 564, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 402, 428,
	424, 433, 0, 500, 519, 531, 541, 547, 548, 550,
	551, 552, 553, 554, 557, 555, 390, 297, 474, 319,
	357, 0, 0, 408, 452, 230, 523, 475, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 583, 368, 465, 520,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 374,
	382, 499, 298, 206, 207, 208, 492, 493, 494, 495,
	534, 535, 539, 442, 443, 444, 445, 279, 529, 295,
	448, 447, 317, 318, 363, 431, 0, 190, 211, 352,
	0, 434, 275, 561, 533, 528, 197, 213, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 364, 370,
	371, 372, 373, 392, 393, 394, 397, 400, 401, 404,
	406, 407, 410, 414, 418, 419, 420, 421, 423, 425,
	435, 440, 454, 455, 456, 457, 458, 461, 462, 467,
	468, 469, 470, 471, 479, 480, 484, 507, 510, 522,
	540, 545, 460, 287, 288, 426, 427, 300, 301, 558,
	559, 286, 517, 546, 0, 0, 362, 0, 0, 365,
	268, 291, 306, 0, 532, 481, 217, 446, 277, 240,
	0, 0, 202, 236, 220, 246, 261, 264, 310, 375,
	383, 412, 417, 283, 258, 234, 439, 231, 464, 487,
	488, 489, 491, 379, 253, 416, 380, 0, 360, 497,
	498, 302, 496, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 350, 254,
	0, 0, 413, 0, 196, 0, 466, 241, 361, 358,
	504, 269, 260, 256, 239, 303, 369, 411, 486, 405,
	0, 354, 0, 0, 476, 384, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 237, 311, 195, 396, 477, 273, 0, 0,
	0, 0, 0, 188, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 235, 0, 0, 0,
	335, 344, 343, 324, 325, 327, 329, 334, 341, 347,
	0, 0, 0, 0, 0, 252, 307, 259, 251, 501,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 385, 244, 0, 0, 0,
	0, 542, 0, 0, 0, 0, 0, 0, 0, 349,
	0, 316, 191, 215, 0, 0, 395, 441, 453, 0,
	0, 0, 242, 0, 451, 409, 521, 223, 271, 438,
	415, 449, 422, 274, 0, 0, 450, 356, 506, 432,
	518, 543, 544, 250, 389, 530, 490, 538, 560, 216,
	247, 403, 483, 524, 473, 381, 502, 503, 315, 472,
	282, 194, 353, 549, 214, 459, 355, 232, 221, 509,
	527, 276, 436, 556, 508, 203, 485, 516, 229, 463,
	0, 0, 562, 205, 514, 482, 377, 312, 313, 204,
	0, 437, 255, 280, 245, 398, 511, 512, 243, 563,
	218, 537, 210, 0, 536, 391, 505, 515, 378, 367,
	209, 513, 376, 366, 320, 339, 340, 267, 293, 429,
	359, 430, 292, 294, 387, 386, 388, 198, 525, 0,
	199, 0, 478, 526, 564, 224, 225, 227, 0, 266,
	270, 278, 281, 289, 290, 299, 351, 402, 428, 424,
	433, 0, 500, 519, 531, 541, 547, 548, 550, 551,
	552, 553, 554, 557, 555, 390, 297, 474, 319, 357,
	0, 0, 408, 452, 230, 523, 475, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 583, 368, 465, 520, 321,
	333, 336, 326, 345, 0, 346, 322, 323, 328, 330,
	331, 332, 337, 338, 342, 348, 238, 201, 374, 382,
	499, 298, 206, 207, 208, 492, 493, 494, 495, 534,
	535, 539, 442, 443, 444, 445, 279, 529, 295, 448,
	447, 317, 318, 363, 431, 0, 190, 211, 352, 1811,
	434, 275, 561, 533, 528, 197, 213, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 200, 212, 222, 226, 233, 248, 263, 265,
	272, 285, 296, 304, 305, 308, 314, 364, 370, 371,
	372, 373, 392, 393, 394, 397, 400, 401, 404, 406,
	407, 410, 414, 418, 419, 420, 421, 423, 425, 435,
	440, 454, 455, 456, 457, 458, 461, 462, 467, 468,
	469, 470, 471, 479, 480, 484, 507, 510, 522, 540,
	545, 460, 287, 288, 426, 427, 300, 301, 558, 559,
	286, 517, 546, 0, 0, 362, 0, 0, 365, 268,
	291, 306, 0, 532, 481, 217, 446, 277, 240, 0,
	0, 202, 236, 220, 246, 261, 264, 310, 375, 383,
	412, 417, 283, 258, 234, 439, 231, 464, 487, 488,
	489, 491, 379, 253, 416, 380, 0, 360, 497, 498,
	302, 496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 399, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 350, 254, 0,
	0, 413, 0, 196, 0, 466, 241, 361, 358, 504,
	269, 260, 256, 239, 303, 369, 411, 486, 405, 0,
	354, 0, 0, 476, 384, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 237, 311, 195, 396, 477, 273, 0, 0, 0,
	0, 1803, 630, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 0, 0, 0, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 0,
	0, 0, 0, 0, 252, 307, 259, 251, 501, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 385, 244, 0, 0, 0, 0,
	542, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 395, 441, 453, 0, 0,
	0, 242, 0, 451, 409, 521, 223, 271, 438, 415,
	449, 422, 274, 0, 0, 450, 356, 506, 432, 518,
	543, 544, 250, 389, 530, 490, 538, 560, 216, 247,
	403, 483, 524, 473, 381, 502, 503, 315, 472, 282,
	194, 353, 549, 214, 459, 355, 232, 221, 509, 527,
	276, 436, 556, 508, 203, 485, 516, 229, 463, 0,
	0, 562, 205, 514, 482, 377, 312, 313, 204, 0,
	437, 255, 280, 245, 398, 511, 512, 243, 563, 218,
	537, 210, 0, 536, 391, 505, 515, 378, 367, 209,
	513, 376, 366, 320, 339, 340, 267, 293, 429, 359,
	430, 292, 294, 387, 386, 388, 198, 525, 0, 199,
	0, 478, 526, 564, 224, 225, 227, 0, 266, 270,
	278, 281, 289, 290, 299, 351, 402, 428, 424, 433,
	0, 500, 519, 531, 541, 547, 548, 550, 551, 552,
	553, 554, 557, 555, 390, 297, 474, 319, 357, 0,
	0, 408, 452, 230, 523, 475, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 583, 368, 465, 520, 321, 333,
	336, 326, 345, 0, 346, 322, 323, 328, 330, 331,
	332, 337, 338, 342, 348, 238, 201, 374, 382, 499,
	298, 206, 207, 208, 492, 493, 494, 495, 534, 535,
	539, 442, 443, 444, 445, 279, 529, 295, 448, 447,
	317, 318, 363, 431, 0, 190, 211, 352, 0, 434,
	275, 561, 533, 528, 197, 213, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 248, 263, 265, 272,
	285, 296, 304, 305, 308, 314, 364, 370, 371, 372,
	373, 392, 393, 394, 397, 400, 401, 404, 406, 407,
	410, 414, 418, 419, 420, 421, 423, 425, 435, 440,
	454, 455, 456, 457, 458, 461, 462, 467, 468, 469,
	470, 471, 479, 480, 484, 507, 510, 522, 540, 545,
	460, 287, 288, 426, 427, 300, 301, 558, 559, 286,
	517, 546, 0, 0, 362, 0, 0, 365, 268, 291,
	306, 0, 532, 481, 217, 446, 277, 240, 0, 0,
	202, 236, 220, 246, 261, 264, 310, 375, 383, 412,
	417, 283, 258, 234, 439, 231, 464, 487, 488, 489,
	491, 379, 253, 416, 380, 0, 360, 497, 498, 302,
	496, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 399, 0, 1669, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 350, 254, 0, 0,
	413, 0, 196, 0, 466, 241, 361, 358, 504, 269,
	260, 256, 239, 303, 369, 411, 486, 405, 0, 354,
	0, 0, 476, 384, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	237, 311, 195, 396, 477, 273, 0, 0, 0, 0,
	0, 630, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 335, 344,
	343, 324, 325, 327, 329, 334, 341, 347, 0, 0,
	0, 0, 0, 252, 307, 259, 251, 501, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 385, 244, 0, 0, 0, 0, 542,
	0, 0, 0, 0, 0, 0, 0, 349, 0, 316,
	191, 215, 0, 0, 395, 441, 453, 0, 0, 0,
	242, 0, 451, 409, 521, 223, 271, 438, 415, 449,
	422, 274, 0, 0, 450, 356, 506, 432, 518, 543,
	544, 250, 389, 530, 490, 538, 560, 216, 247, 403,
	483, 524, 473, 381, 502, 503, 315, 472, 282, 194,
	353, 549, 214, 459, 355, 232, 221, 509, 527, 276,
	436, 556, 508, 203, 485, 516, 229, 463, 0, 0,
	562, 205, 514, 482, 377, 312, 313, 204, 0, 437,
	255, 280, 245, 398, 511, 512, 243, 563, 218, 537,
	210, 0, 536, 391, 505, 515, 378, 367, 209, 513,
	376, 366, 320, 339, 340, 267, 293, 429, 359, 430,
	292, 294, 387, 386, 388, 198, 525, 0, 199, 0,
	478, 526, 564, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 402, 428, 424, 433, 0,
	500, 519, 531, 541, 547, 548, 550, 551, 552, 553,
	554, 557, 555, 390, 297, 474, 319, 357, 0, 0,
	408, 452, 230, 523, 475, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 583, 368, 465, 520, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 374, 382, 499, 298,
	206, 207, 208, 492, 493, 494, 495, 534, 535, 539,
	442, 443, 444, 445, 279, 529, 295, 448, 447, 317,
	318, 363, 431, 0, 190, 211, 352, 0, 434, 275,
	561, 533, 528, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 364, 370, 371, 372, 373,
	392, 393, 394, 397, 400, 401, 404, 406, 407, 410,
	414, 418, 419, 420, 421, 423, 425, 435, 440, 454,
	455, 456, 457, 458, 461, 462, 467, 468, 469, 470,
	471, 479, 480, 484, 507, 510, 522, 540, 545, 460,
	287, 288, 426, 427, 300, 301, 558, 559, 286, 517,
	546, 0, 0, 362, 0, 0, 365, 268, 291, 306,
	0, 532, 481, 217, 446, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 375, 383, 412, 417,
	283, 258, 234, 439, 231, 464, 487, 488, 489, 491,
	379, 253, 416, 380, 0, 360, 497, 498, 302, 496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 399, 0, 1667, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 413,
	0, 196, 0, 466, 241, 361, 358, 504, 269, 260,
	256, 239, 303, 369, 411, 486, 405, 0, 354, 0,
	0, 476, 384, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 396, 477, 273, 0, 0, 0, 0, 0,
	630, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 0, 0, 0, 335, 344, 343,
	324, 325, 327, 329, 334, 341, 347, 0, 0, 0,
	0, 0, 252, 307, 259, 251, 501, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 385, 244, 0, 0, 0, 0, 542, 0,
	0, 0, 0, 0, 0, 0, 349, 0, 316, 191,
	215, 0, 0, 395, 441, 453, 0, 0, 0, 242,
	0, 451, 409, 521, 223, 271, 438, 415, 449, 422,
	274, 0, 0, 450, 356, 506, 432, 518, 543, 544,
	250, 389, 530, 490, 538, 560, 216, 247, 403, 483,
	524, 473, 381, 502, 503, 315, 472, 282, 194, 353,
	549, 214, 459, 355, 232, 221, 509, 527, 276, 436,
	556, 508, 203, 485, 516, 229, 463, 0, 0, 562,
	205, 514, 482, 377, 312, 313, 204, 0, 437, 255,
	280, 245, 398, 511, 512, 243, 563, 218, 537, 210,
	0, 536, 391, 505, 515, 378, 367, 209, 513, 376,
	366, 320, 339, 340, 267, 293, 429, 359, 430, 292,
	294, 387, 386, 388, 198, 525, 0, 199, 0, 478,
	526, 564, 224, 225, 227, 0, 266, 270, 278, 281,
	289, 290, 299, 351, 402, 428, 424, 433, 0, 500,
	519, 531, 541, 547, 548, 550, 551, 552, 553, 554,
	557, 555, 390, 297, 474, 319, 357, 0, 0, 408,
	452, 230, 523, 475, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 583, 368, 465, 520, 321, 333, 336, 326,
	345, 0, 346, 322, 323, 328, 330, 331, 332, 337,
	338, 342, 348, 238, 201, 374, 382, 499, 298, 206,
	207, 208, 492, 493, 494, 495, 534, 535, 539, 442,
	443, 444, 445, 279, 529, 295, 448, 447, 317, 318,
	363, 431, 0, 190, 211, 352, 0, 434, 275, 561,
	533, 528, 197, 213, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 200,
	212, 222, 226, 233, 248, 263, 265, 272, 285, 296,
	304, 305, 308, 314, 364, 370, 371, 372, 373, 392,
	393, 394, 397, 400, 401, 404, 406, 407, 410, 414,
	418, 419, 420, 421, 423, 425, 435, 440, 454, 455,
	456, 457, 458, 461, 462, 467, 468, 469, 470, 471,
	479, 480, 484, 507, 510, 522, 540, 545, 460, 287,
	288, 426, 427, 300, 301, 558, 559, 286, 517, 546,
	0, 0, 362, 0, 0, 365, 268, 291, 306, 0,
	532, 481, 217, 446, 277, 240, 0, 0, 202, 236,
	220, 246, 261, 264, 310, 375, 383, 412, 417, 283,
	258, 234, 439, 231, 464, 487, 488, 489, 491, 379,
	253, 416, 380, 0, 360, 497, 498, 302, 496, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	399, 0, 1665, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 350, 254, 0, 0, 413, 0,
	196, 0, 466, 241, 361, 358, 504, 269, 260, 256,
	239, 303, 369, 411, 486, 405, 0, 354, 0, 0,
	476, 384, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 237, 311,
	195, 396, 477, 273, 0, 0, 0, 0, 0, 630,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 235, 0, 0, 0, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 501, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 385, 244, 0, 0, 0, 0, 542, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 395, 441, 453, 0, 0, 0, 242, 0,
	451, 409, 521, 223, 271, 438, 415, 449, 422, 274,
	0, 0, 450, 356, 506, 432, 518, 543, 544, 250,
	389, 530, 490, 538, 560, 216, 247, 403, 483, 524,
	473, 381, 502, 503, 315, 472, 282, 194, 353, 549,
	214, 459, 355, 232, 221, 509, 527, 276, 436, 556,
	508, 203, 485, 516, 229, 463, 0, 0, 562, 205,
	514, 482, 377, 312, 313, 204, 0, 437, 255, 280,
	245, 398, 511, 512, 243, 563, 218, 537, 210, 0,
	536, 391, 505, 515, 378, 367, 209, 513, 376, 366,
	320, 339, 340, 267, 293, 429, 359, 430, 292, 294,
	387, 386, 388, 198, 525, 0, 199, 0, 478, 526,
	564, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 402, 428, 424, 433, 0, 500, 519,
	531, 541, 547, 548, 550, 551, 552, 553, 554, 557,
	555, 390, 297, 474, 319, 357, 0, 0, 408, 452,
	230, 523, 475, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 583, 368, 465, 520, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 374, 382, 499, 298, 206, 207,
	208, 492, 493, 494, 495, 534, 535, 539, 442, 443,
	444, 445, 279, 529, 295, 448, 447, 317, 318, 363,
	431, 0, 190, 211, 352, 0, 434, 275, 561, 533,
	528, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 364, 370, 371, 372, 373, 392, 393,
	394, 397, 400, 401, 404, 406, 407, 410, 414, 418,
	419, 420, 421, 423, 425, 435, 440, 454, 455, 456,
	457, 458, 461, 462, 467, 468, 469, 470, 471, 479,
	480, 484, 507, 510, 522, 540, 545, 460, 287, 288,
	426, 427, 300, 301, 558, 559, 286, 517, 546, 0,
	0, 362, 0, 0, 365, 268, 291, 306, 0, 532,
	481, 217, 446, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 375, 383, 412, 417, 283, 258,
	234, 439, 231, 464, 487, 488, 489, 491, 379, 253,
	416, 380, 0, 360, 497, 498, 302, 496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 399,
	0, 1663, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 413, 0, 196,
	0, 466, 241, 361, 358, 504, 269, 260, 256, 239,
	303, 369, 411, 486, 405, 0, 354, 0, 0, 476,
	384, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	396, 477, 273, 0, 0, 0, 0, 0, 630, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 235, 0, 0, 0, 335, 344, 343, 324, 325,
	327, 329, 334, 341, 347, 0, 0, 0, 0, 0,
	252, 307, 259, 251, 501, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	385, 244, 0, 0, 0, 0, 542, 0, 0, 0,
	0, 0, 0, 0, 349, 0, 316, 191, 215, 0,
	0, 395, 441, 453, 0, 0, 0, 242, 0, 451,
	409, 521, 223, 271, 438, 415, 449, 422, 274, 0,
	0, 450, 356, 506, 432, 518, 543, 544, 250, 389,
	530, 490, 538, 560, 216, 247, 403, 483, 524, 473,
	381, 502, 503, 315, 472, 282, 194, 353, 549, 214,
	459, 355, 232, 221, 509, 527, 276, 436, 556, 508,
	203, 485, 516, 229, 463, 0, 0, 562, 205, 514,
	482, 377, 312, 313, 204, 0, 437, 255, 280, 245,
	398, 511, 512, 243, 563, 218, 537, 210, 0, 536,
	391, 505, 515, 378, 367, 209, 513, 376, 366, 320,
	339, 340, 267, 293, 429, 359, 430, 292, 294, 387,
	386, 388, 198, 525, 0, 199, 0, 478, 526, 564,
	224, 225, 227, 0, 266, 270, 278, 281, 289, 290,
	299, 351, 402, 428, 424, 433, 0, 500, 519, 531,
	541, 547, 548, 550, 551, 552, 553, 554, 557, 555,
	390, 297, 474, 319, 357, 0, 0, 408, 452, 230,
	523, 475, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	583, 368, 465, 520, 321, 333, 336, 326, 345, 0,
	346, 322, 323, 328, 330, 331, 332, 337, 338, 342,
	348, 238, 201, 374, 382, 499, 298, 206, 207, 208,
	492, 493, 494, 495, 534, 535, 539, 442, 443, 444,
	445, 279, 529, 295, 448, 447, 317, 318, 363, 431,
	0, 190, 211, 352, 0, 434, 275, 561, 533, 528,
	197, 213, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 200, 212, 222,
	226, 233, 248, 263, 265, 272, 285, 296, 304, 305,
	308, 314, 364, 370, 371, 372, 373, 392, 393, 394,
	397, 400, 401, 404, 406, 407, 410, 414, 418, 419,
	420, 421, 423, 425, 435, 440, 454, 455, 456, 457,
	458, 461, 462, 467, 468, 469, 470, 471, 479, 480,
	484, 507, 510, 522, 540, 545, 460, 287, 288, 426,
	427, 300, 301, 558, 559, 286, 517, 546, 0, 0,
	362, 0, 0, 365, 268, 291, 306, 0, 532, 481,
	217, 446, 277, 240, 0, 0, 202, 236, 220, 246,
	261, 264, 310, 375, 383, 412, 417, 283, 258, 234,
	439, 231, 464, 487, 488, 489, 491, 379, 253, 416,
	380, 0, 360, 497, 498, 302, 496, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 399, 0,
	1661, 0, 0, 0, 0, 0, 0, 257, 0, 0,
	0, 0, 350, 254, 0, 0, 413, 0, 196, 0,
	466, 241, 361, 358, 504, 269, 260, 256, 239, 303,
	369, 411, 486, 405, 0, 354, 0, 0, 476, 384,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 237, 311, 195, 396,
	477, 273, 0, 0, 0, 0, 0, 630, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	235, 0, 0, 0, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 501, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 385,
	244, 0, 0, 0, 0, 542, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	395, 441, 453, 0, 0, 0, 242, 0, 451, 409,
	521, 223, 271, 438, 415, 449, 422, 274, 0, 0,
	450, 356, 506, 432, 518, 543, 544, 250, 389, 530,
	490, 538, 560, 216, 247, 403, 483, 524, 473, 381,
	502, 503, 315, 472, 282, 194, 353, 549, 214, 459,
	355, 232, 221, 509, 527, 276, 436, 556, 508, 203,
	485, 516, 229, 463, 0, 0, 562, 205, 514, 482,
	377, 312, 313, 204, 0, 437, 255, 280, 245, 398,
	511, 512, 243, 563, 218, 537, 210, 0, 536, 391,
	505, 515, 378, 367, 209, 513, 376, 366, 320, 339,
	340, 267, 293, 429, 359, 430, 292, 294, 387, 386,
	388, 198, 525, 0, 199, 0, 478, 526, 564, 224,
	225, 227, 0, 266, 270, 278, 281, 289, 290, 299,
	351, 402, 428, 424, 433, 0, 500, 519, 531, 541,
	547, 548, 550, 551, 552, 553, 554, 557, 555, 390,
	297, 474, 319, 357, 0, 0, 408, 452, 230, 523,
	475, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 583,
	368, 465, 520, 321, 333, 336, 326, 345, 0, 346,
	322, 323, 328, 330, 331, 332, 337, 338, 342, 348,
	238, 201, 374, 382, 499, 298, 206, 207, 208, 492,
	493, 494, 495, 534, 535, 539, 442, 443, 444, 445,
	279, 529, 295, 448, 447, 317, 318, 363, 431, 0,
	190, 211, 352, 0, 434, 275, 561, 533, 528, 197,
	213, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 200, 212, 222, 226,
	233, 248, 263, 265, 272, 285, 296, 304, 305, 308,
	314, 364, 370, 371, 372, 373, 392, 393, 394, 397,
	400, 401, 404, 406, 407, 410, 414, 418, 419, 420,
	421, 423, 425, 435, 440, 454, 455, 456, 457, 458,
	461, 462, 467, 468, 469, 470, 471, 479, 480, 484,
	507, 510, 522, 540, 545, 460, 287, 288, 426, 427,
	300, 301, 558, 559, 286, 517, 546, 0, 0, 362,
	0, 0, 365, 268, 291, 306, 0, 532, 481, 217,
	446, 277, 240, 0, 0, 202, 236, 220, 246, 261,
	264, 310, 375, 383, 412, 417, 283, 258, 234, 439,
	231, 464, 487, 488, 489, 491, 379, 253, 416, 380,
	0, 360, 497, 498, 302, 496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 399, 0, 1657,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 350, 254, 0, 0, 413, 0, 196, 0, 466,
	241, 361, 358, 504, 269, 260, 256, 239, 303, 369,
	411, 486, 405, 0, 354, 0, 0, 476, 384, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 237, 311, 195, 396, 477,
	273, 0, 0, 0, 0, 0, 630, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	0, 0, 0, 335, 344, 343, 324, 325, 327, 329,
	334, 341, 347, 0, 0, 0, 0, 0, 252, 307,
	259, 251, 501, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 385, 244,
	0, 0, 0, 0, 542, 0, 0, 0, 0, 0,
	0, 0, 349, 0, 316, 191, 215, 0, 0, 395,
	441, 453, 0, 0, 0, 242, 0, 451, 409, 521,
	223, 271, 438, 415, 449, 422, 274, 0, 0, 450,
	356, 506, 432, 518, 543, 544, 250, 389, 530, 490,
	538, 560, 216, 247, 403, 483, 524, 473, 381, 502,
	503, 315, 472, 282, 194, 353, 549, 214, 459, 355,
	232, 221, 509, 527, 276, 436, 556, 508, 203, 485,
	516, 229, 463, 0, 0, 562, 205, 514, 482, 377,
	312, 313, 204, 0, 437, 255, 280, 245, 398, 511,
	512, 243, 563, 218, 537, 210, 0, 536, 391, 505,
	515, 378, 367, 209, 513, 376, 366, 320, 339, 340,
	267, 293, 429, 359, 430, 292, 294, 387, 386, 388,
	198, 525, 0, 199, 0, 478, 526, 564, 224, 225,
	227, 0, 266, 270, 278, 281, 289, 290, 299, 351,
	402, 428, 424, 433, 0, 500, 519, 531, 541, 547,
	548, 550, 551, 552, 553, 554, 557, 555, 390, 297,
	474, 319, 357, 0, 0, 408, 452, 230, 523, 475,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 583, 368,
	465, 520, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 374, 382, 499, 298, 206, 207, 208, 492, 493,
	494, 495, 534, 535, 539, 442, 443, 444, 445, 279,
	529, 295, 448, 447, 317, 318, 363, 431, 0, 190,
	211, 352, 0, 434, 275, 561, 533, 528, 197, 213,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	364, 370, 371, 372, 373, 392, 393, 394, 397, 400,
	401, 404, 406, 407, 410, 414, 418, 419, 420, 421,
	423, 425, 435, 440, 454, 455, 456, 457, 458, 461,
	462, 467, 468, 469, 470, 471, 479, 480, 484, 507,
	510, 522, 540, 545, 460, 287, 288, 426, 427, 300,
	301, 558, 559, 286, 517, 546, 0, 0, 362, 0,
	0, 365, 268, 291, 306, 0, 532, 481, 217, 446,
	277, 240, 0, 0, 202, 236, 220, 246, 261, 264,
	310, 375, 383, 412, 417, 283, 258, 234, 439, 231,
	464, 487, 488, 489, 491, 379, 253, 416, 380, 0,
	360, 497, 498, 302, 496, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 399, 0, 1655, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	350, 254, 0, 0, 413, 0, 196, 0, 466, 241,
	361, 358, 504, 269, 260, 256, 239, 303, 369, 411,
	486, 405, 0, 354, 0, 0, 476, 384, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 237, 311, 195, 396, 477, 273,
	0, 0, 0, 0, 0, 630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 0,
	0, 0, 335, 344, 343, 324, 325, 327, 329, 334,
	341, 347, 0, 0, 0, 0, 0, 252, 307, 259,
	251, 501, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 385, 244, 0,
	0, 0, 0, 542, 0, 0, 0, 0, 0, 0,
	0, 349, 0, 316, 191, 215, 0, 0, 395, 441,
	453, 0, 0, 0, 242, 0, 451, 409, 521, 223,
	271, 438, 415, 449, 422, 274, 0, 0, 450, 356,
	506, 432, 518, 543, 544, 250, 389, 530, 490, 538,
	560, 216, 247, 403, 483, 524, 473, 381, 502, 503,
	315, 472, 282, 194, 353, 549, 214, 459, 355, 232,
	221, 509, 527, 276, 436, 556, 508, 203, 485, 516,
	229, 463, 0, 0, 562, 205, 514, 482, 377, 312,
	313, 204, 0, 437, 255, 280, 245, 398, 511, 512,
	243, 563, 218, 537, 210, 0, 536, 391, 505, 515,
	378, 367, 209, 513, 376, 366, 320, 339, 340, 267,
	293, 429, 359, 430, 292, 294, 387, 386, 388, 198,
	525, 0, 199, 0, 478, 526, 564, 224, 225, 227,
	0, 266, 270, 278, 281, 289, 290, 299, 351, 402,
	428, 424, 433, 0, 500, 519, 531, 541, 547, 548,
	550, 551, 552, 553, 554, 557, 555, 390, 297, 474,
	319, 357, 0, 0, 408, 452, 230, 523, 475, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 583, 368, 465,
	520, 321, 333, 336, 326, 345, 0, 346, 322, 323,
	328, 330, 331, 332, 337, 338, 342, 348, 238, 201,
	374, 382, 499, 298, 206, 207, 208, 492, 493, 494,
	495, 534, 535, 539, 442, 443, 444, 445, 279, 529,
	295, 448, 447, 317, 318, 363, 431, 0, 190, 211,
	352, 0, 434, 275, 561, 533, 528, 197, 213, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 200, 212, 222, 226, 233, 248,
	263, 265, 272, 285, 296, 304, 305, 308, 314, 364,
	370, 371, 372, 373, 392, 393, 394, 397, 400, 401,
	404, 406, 407, 410, 414, 418, 419, 420, 421, 423,
	425, 435, 440, 454, 455, 456, 457, 458, 461, 462,
	467, 468, 469, 470, 471, 479, 480, 484, 507, 510,
	522, 540, 545, 460, 287, 288, 426, 427, 300, 301,
	558, 559, 286, 517, 546, 0, 0, 362, 0, 0,
	365, 268, 291, 306, 0, 532, 481, 217, 446, 277,
	240, 0, 0, 202, 236, 220, 246, 261, 264, 310,
	375, 383, 412, 417, 283, 258, 234, 439, 231, 464,
	487, 488, 489, 491, 379, 253, 416, 380, 0, 360,
	497, 498, 302, 496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 399, 0, 1653, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 350,
	254, 0, 0, 413, 0, 196, 0, 466, 241, 361,
	358, 504, 269, 260, 256, 239, 303, 369, 411, 486,
	405, 0, 354, 0, 0, 476, 384, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 237, 311, 195, 396, 477, 273, 0,
	0, 0, 0, 0, 630, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 235, 0, 0,
	0, 335, 344, 343, 324, 325, 327, 329, 334, 341,
	347, 0, 0, 0, 0, 0, 252, 307, 259, 251,
	501, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 385, 244, 0, 0,
	0, 0, 542, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 316, 191, 215, 0, 0, 395, 441, 453,
	0, 0, 0, 242, 0, 451, 409, 521, 223, 271,
	438, 415, 449, 422, 274, 0, 0, 450, 356, 506,
	432, 518, 543, 544, 250, 389, 530, 490, 538, 560,
	216, 247, 403, 483, 524, 473, 381, 502, 503, 315,
	472, 282, 194, 353, 549, 214, 459, 355, 232, 221,
	509, 527, 276, 436, 556, 508, 203, 485, 516, 229,
	463, 0, 0, 562, 205, 514, 482, 377, 312, 313,
	204, 0, 437, 255, 280, 245, 398, 511, 512, 243,
	563, 218, 537, 210, 0, 536, 391, 505, 515, 378,
	367, 209, 513, 376, 366, 320, 339, 340, 267, 293,
	429, 359, 430, 292, 294, 387, 386, 388, 198, 525,
	0, 199, 0, 478, 526, 564, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 402, 428,
	424, 433, 0, 500, 519, 531, 541, 547, 548, 550,
	551, 552, 553, 554, 557, 555, 390, 297, 474, 319,
	357, 0, 0, 408, 452, 230, 523, 475, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 583, 368, 465, 520,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 374,
	382, 499, 298, 206, 207, 208, 492, 493, 494, 495,
	534, 535, 539, 442, 443, 444, 445, 279, 529, 295,
	448, 447, 317, 318, 363, 431, 0, 190, 211, 352,
	0, 434, 275, 561, 533, 528, 197, 213, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 364, 370,
	371, 372, 373, 392, 393, 394, 397, 400, 401, 404,
	406, 407, 410, 414, 418, 419, 420, 421, 423, 425,
	435, 440, 454, 455, 456, 457, 458, 461, 462, 467,
	468, 469, 470, 471, 479, 480, 484, 507, 510, 522,
	540, 545, 460, 287, 288, 426, 427, 300, 301, 558,
	559, 286, 517, 546, 0, 0, 362, 0, 0, 365,
	268, 291, 306, 0, 532, 481, 217, 446, 277, 240,
	0, 0, 202, 236, 220, 246, 261, 264, 310, 375,
	383, 412, 417, 283, 258, 234, 439, 231, 464, 487,
	488, 489, 491, 379, 253, 416, 380, 0, 360, 497,
	498, 302, 496, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 350, 254,
	0, 0, 413, 0, 196, 0, 466, 241, 361, 358,
	504, 269, 260, 256, 239, 303, 369, 411, 486, 405,
	0, 354, 0, 0, 476, 384, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 237, 311, 195, 396, 477, 273, 0, 1628,
	0, 0, 0, 630, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 235, 0, 0, 0,
	335, 344, 343, 324, 325, 327, 329, 334, 341, 347,
	0, 0, 0, 0, 0, 252, 307, 259, 251, 501,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 385, 244, 0, 0, 0,
	0, 542, 0, 0, 0, 0, 0, 0, 0, 349,
	0, 316, 191, 215, 0, 0, 395, 441, 453, 0,
	0, 0, 242, 0, 451, 409, 521, 223, 271, 438,
	415, 449, 422, 274, 0, 0, 450, 356, 506, 432,
	518, 543, 544, 250, 389, 530, 490, 538, 560, 216,
	247, 403, 483, 524, 473, 381, 502, 503, 315, 472,
	282, 194, 353, 549, 214, 459, 355, 232, 221, 509,
	527, 276, 436, 556, 508, 203, 485, 516, 229, 463,
	0, 0, 562, 205, 514, 482, 377, 312, 313, 204,
	0, 437, 255, 280, 245, 398, 511, 512, 243, 563,
	218, 537, 210, 0, 536, 391, 505, 515, 378, 367,
	209, 513, 376, 366, 320, 339, 340, 267, 293, 429,
	359, 430, 292, 294, 387, 386, 388, 198, 525, 0,
	199, 0, 478, 526, 564, 224, 225, 227, 0, 266,
	270, 278, 281, 289, 290, 299, 351, 402, 428, 424,
	433, 0, 500, 519, 531, 541, 547, 548, 550, 551,
	552, 553, 554, 557, 555, 390, 297, 474, 319, 357,
	0, 0, 408, 452, 230, 523, 475, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 583, 368, 465, 520, 321,
	333, 336, 326, 345, 0, 346, 322, 323, 328, 330,
	331, 332, 337, 338, 342, 348, 238, 201, 374, 382,
	499, 298, 206, 207, 208, 492, 493, 494, 495, 534,
	535, 539, 442, 443, 444, 445, 279, 529, 295, 448,
	447, 317, 318, 363, 431, 0, 190, 211, 352, 0,
	434, 275, 561, 533, 528, 197, 213, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 200, 212, 222, 226, 233, 248, 263, 265,
	272, 285, 296, 304, 305, 308, 314, 364, 370, 371,
	372, 373, 392, 393, 394, 397, 400, 401, 404, 406,
	407, 410, 414, 418, 419, 420, 421, 423, 425, 435,
	440, 454, 455, 456, 457, 458, 461, 462, 467, 468,
	469, 470, 471, 479, 480, 484, 507, 510, 522, 540,
	545, 460, 287, 288, 426, 427, 300, 301, 558, 559,
	286, 517, 546, 0, 0, 362, 0, 0, 365, 268,
	291, 306, 0, 532, 481, 217, 446, 277, 240, 0,
	0, 202, 236, 220, 246, 261, 264, 310, 375, 383,
	412, 417, 283, 258, 234, 439, 231, 464, 487, 488,
	489, 491, 379, 253, 416, 380, 0, 360, 497, 498,
	302, 496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 399, 0, 0, 0, 0, 0, 0,
	0, 1529, 257, 0, 0, 0, 0, 350, 254, 0,
	0, 413, 0, 196, 0, 466, 241, 361, 358, 504,
	269, 260, 256, 239, 303, 369, 411, 486, 405, 0,
	354, 0, 0, 476, 384, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 237, 311, 195, 396, 477, 273, 0, 0, 0,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 0, 0, 0, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 0,
	0, 0, 0, 0, 252, 307, 259, 251, 501, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 385, 244, 0, 0, 0, 0,
	542, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 395, 441, 453, 0, 0,
	0, 242, 0, 451, 409, 521, 223, 271, 438, 415,
	449, 422, 274, 0, 0, 450, 356, 506, 432, 518,
	543, 544, 250, 389, 530, 490, 538, 560, 216, 247,
	403, 483, 524, 473, 381, 502, 503, 315, 472, 282,
	194, 353, 549, 214, 459, 355, 232, 221, 509, 527,
	276, 436, 556, 508, 203, 485, 516, 229, 463, 0,
	0, 562, 205, 514, 482, 377, 312, 313, 204, 0,
	437, 255, 280, 245, 398, 511, 512, 243, 563, 218,
	537, 210, 0, 536, 391, 505, 515, 378, 367, 209,
	513, 376, 366, 320, 339, 340, 267, 293, 429, 359,
	430, 292, 294, 387, 386, 388, 198, 525, 0, 199,
	0, 478, 526, 564, 224, 225, 227, 0, 266, 270,
	278, 281, 289, 290, 299, 351, 402, 428, 424, 433,
	0, 500, 519, 531, 541, 547, 548, 550, 551, 552,
	553, 554, 557, 555, 390, 297, 474, 319, 357, 0,
	0, 408, 452, 230, 523, 475, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 583, 368, 465, 520, 321, 333,
	336, 326, 345, 0, 346, 322, 323, 328, 330, 331,
	332, 337, 338, 342, 348, 238, 201, 374, 382, 499,
	298, 206, 207, 208, 492, 493, 494, 495, 534, 535,
	539, 442, 443, 444, 445, 279, 529, 295, 448, 447,
	317, 318, 363, 431, 0, 190, 211, 352, 0, 434,
	275, 561, 533, 528, 197, 213, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 248, 263, 265, 272,
	285, 296, 304, 305, 308, 314, 364, 370, 371, 372,
	373, 392, 393, 394, 397, 400, 401, 404, 406, 407,
	410, 414, 418, 419, 420, 421, 423, 425, 435, 440,
	454, 455, 456, 457, 458, 461, 462, 467, 468, 469,
	470, 471, 479, 480, 484, 507, 510, 522, 540, 545,
	460, 287, 288, 426, 427, 300, 301, 558, 559, 286,
	517, 546, 0, 0, 362, 0, 0, 365, 268, 291,
	306, 0, 532, 481, 217, 446, 277, 240, 0, 0,
	202, 236, 220, 246, 261, 264, 310, 375, 383, 412,
	417, 283, 258, 234, 439, 231, 464, 487, 488, 489,
	491, 379, 253, 416, 380, 0, 360, 497, 498, 302,
	496, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 399, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 350, 254, 0, 0,
	413, 0, 196, 0, 466, 241, 361, 358, 504, 269,
	260, 256, 239, 303, 369, 411, 486, 405, 0, 354,
	0, 0, 476, 384, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	237, 311, 195, 396, 477, 273, 0, 89, 0, 0,
	0, 803, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 335, 344,
	343, 324, 325, 327, 329, 334, 341, 347, 0, 0,
	0, 0, 0, 252, 307, 259, 251, 501, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 385, 244, 0, 0, 0, 0, 542,
	0, 0, 0, 0, 0, 0, 0, 349, 0, 316,
	191, 215, 0, 0, 395, 441, 453, 0, 0, 0,
	242, 0, 451, 409, 521, 223, 271, 438, 415, 449,
	422, 274, 0, 0, 450, 356, 506, 432, 518, 543,
	544, 250, 389, 530, 490, 538, 560, 216, 247, 403,
	483, 524, 473, 381, 502, 503, 315, 472, 282, 194,
	353, 549, 214, 459, 355, 232, 221, 509, 527, 276,
	436, 556, 508, 203, 485, 516, 229, 463, 0, 0,
	562, 205, 514, 482, 377, 312, 313, 204, 0, 437,
	255, 280, 245, 398, 511, 512, 243, 563, 218, 537,
	210, 0, 536, 391, 505, 515, 378, 367, 209, 513,
	376, 366, 320, 339, 340, 267, 293, 429, 359, 430,
	292, 294, 387, 386, 388, 198, 525, 0, 199, 0,
	478, 526, 564, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 402, 428, 424, 433, 0,
	500, 519, 531, 541, 547, 548, 550, 551, 552, 553,
	554, 557, 555, 390, 297, 474, 319, 357, 0, 0,
	408, 452, 230, 523, 475, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 583, 368, 465, 520, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 374, 382, 499, 298,
	206, 207, 208, 492, 493, 494, 495, 534, 535, 539,
	442, 443, 444, 445, 279, 529, 295, 448, 447, 317,
	318, 363, 431, 0, 190, 211, 352, 0, 434, 275,
	561, 533, 528, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 364, 370, 371, 372, 373,
	392, 393, 394, 397, 400, 401, 404, 406, 407, 410,
	414, 418, 419, 420, 421, 423, 425, 435, 440, 454,
	455, 456, 457, 458, 461, 462, 467, 468, 469, 470,
	471, 479, 480, 484, 507, 510, 522, 540, 545, 460,
	287, 288, 426, 427, 300, 301, 558, 559, 286, 517,
	546, 0, 0, 362, 0, 0, 365, 268, 291, 306,
	0, 532, 481, 217, 446, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 375, 383, 412, 417,
	283, 258, 234, 439, 231, 464, 487, 488, 489, 491,
	379, 253, 416, 380, 0, 360, 497, 498, 302, 496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 399, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 413,
	0, 196, 0, 466, 241, 361, 358, 504, 269, 260,
	256, 239, 303, 369, 411, 486, 405, 0, 354, 0,
	0, 476, 384, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 396, 477, 273, 0, 0, 0, 0, 0,
	188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 0, 0, 0, 335, 344, 343,
	324, 325, 327, 329, 334, 341, 347, 0, 0, 0,
	0, 0, 252, 307, 259, 251, 501, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1282, 0,
	284, 0, 385, 244, 0, 0, 0, 0, 542, 0,
	0, 0, 0, 0, 0, 0, 349, 0, 316, 191,
	215, 0, 0, 395, 441, 453, 0, 0, 0, 242,
	0, 451, 409, 521, 223, 271, 438, 415, 449, 422,
	274, 0, 0, 450, 356, 506, 432, 518, 543, 544,
	250, 389, 530, 490, 538, 560, 216, 247, 403, 483,
	524, 473, 381, 502, 503, 315, 472, 282, 194, 353,
	549, 214, 459, 355, 232, 221, 509, 527, 276, 436,
	556, 508, 203, 485, 516, 229, 463, 0, 0, 562,
	205, 514, 482, 377, 312, 313, 204, 0, 437, 255,
	280, 245, 398, 511, 512, 243, 563, 218, 537, 210,
	0, 536, 391, 505, 515, 378, 367, 209, 513, 376,
	366, 320, 339, 340, 267, 293, 429, 359, 430, 292,
	294, 387, 386, 388, 198, 525, 0, 199, 0, 478,
	526, 564, 224, 225, 227, 0, 266, 270, 278, 281,
	289, 290, 299, 351, 402, 428, 424, 433, 0, 500,
	519, 531, 541, 547, 548, 550, 551, 552, 553, 554,
	557, 555, 390, 297, 474, 319, 357, 0, 0, 408,
	452, 230, 523, 475, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 583, 368, 465, 520, 321, 333, 336, 326,
	345, 0, 346, 322, 323, 328, 330, 331, 332, 337,
	338, 342, 348, 238, 201, 374, 382, 499, 298, 206,
	207, 208, 492, 493, 494, 495, 534, 535, 539, 442,
	443, 444, 445, 279, 529, 295, 448, 447, 317, 318,
	363, 431, 0, 190, 211, 352, 0, 434, 275, 561,
	533, 528, 197, 213, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 200,
	212, 222, 226, 233, 248, 263, 265, 272, 285, 296,
	304, 305, 308, 314, 364, 370, 371, 372, 373, 392,
	393, 394, 397, 400, 401, 404, 406, 407, 410, 414,
	418, 419, 420, 421, 423, 425, 435, 440, 454, 455,
	456, 457, 458, 461, 462, 467, 468, 469, 470, 471,
	479, 480, 484, 507, 510, 522, 540, 545, 460, 287,
	288, 426, 427, 300, 301, 558, 559, 1281, 517, 546,
	0, 0, 362, 0, 0, 365, 268, 291, 306, 0,
	532, 481, 217, 446, 277, 240, 0, 0, 202, 236,
	220, 246, 261, 264, 310, 375, 383, 412, 417, 283,
	258, 234, 439, 231, 464, 487, 488, 489, 491, 379,
	253, 416, 380, 0, 360, 497, 498, 302, 496, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 350, 254, 0, 0, 413, 0,
	196, 0, 466, 241, 361, 358, 504, 269, 260, 256,
	239, 303, 369, 411, 486, 405, 0, 354, 0, 0,
	476, 384, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 237, 311,
	195, 396, 477, 273, 0, 0, 0, 0, 0, 188,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 235, 0, 0, 0, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 501, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 385, 244, 0, 0, 0, 0, 542, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 395, 441, 453, 0, 0, 0, 242, 0,
	451, 409, 521, 223, 271, 438, 415, 449, 422, 274,
	0, 0, 450, 356, 506, 432, 518, 543, 544, 250,
	389, 530, 490, 538, 560, 216, 247, 403, 483, 524,
	473, 381, 502, 503, 315, 472, 282, 194, 353, 549,
	214, 459, 355, 232, 221, 509, 527, 276, 436, 556,
	508, 203, 485, 516, 229, 463, 0, 0, 562, 205,
	514, 482, 377, 312, 313, 204, 0, 437, 255, 280,
	245, 398, 511, 512, 243, 563, 218, 537, 210, 0,
	536, 391, 505, 515, 378, 367, 209, 513, 376, 366,
	320, 339, 340, 267, 293, 429, 359, 430, 292, 294,
	387, 386, 388, 198, 525, 0, 199, 0, 478, 526,
	564, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 402, 428, 424, 433, 0, 500, 519,
	531, 541, 547, 548, 550, 551, 552, 553, 554, 557,
	555, 390, 297, 474, 319, 357, 0, 0, 408, 452,
	230, 523, 475, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 583, 368, 465, 520, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 374, 382, 499, 298, 206, 207,
	208, 492, 493, 494, 495, 534, 535, 539, 442, 443,
	444, 445, 279, 529, 295, 448, 447, 317, 318, 363,
	431, 0, 190, 211, 352, 0, 434, 275, 561, 533,
	528, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 889, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 364, 370, 371, 372, 373, 392, 393,
	394, 397, 400, 401, 404, 406, 407, 410, 414, 418,
	419, 420, 421, 423, 425, 435, 440, 454, 455, 456,
	457, 458, 461, 462, 467, 468, 469, 470, 471, 479,
	480, 484, 507, 510, 522, 540, 545, 460, 287, 288,
	426, 427, 300, 301, 558, 559, 286, 517, 546, 0,
	0, 362, 0, 0, 365, 268, 291, 306, 0, 532,
	481, 217, 446, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 375, 383, 412, 417, 283, 258,
	234, 439, 231, 464, 487, 488, 489, 491, 379, 253,
	416, 380, 0, 360, 497, 498, 302, 496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 399,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 413, 0, 196,
	0, 466, 241, 361, 358, 504, 269, 260, 256, 239,
	303, 369, 411, 486, 405, 0, 354, 0, 0, 476,
	384, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	396, 477, 273, 0, 0, 0, 0, 0, 188, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 235, 0, 0, 0, 335, 344, 343, 324, 325,
	327, 329, 334, 341, 347, 0, 0, 0, 0, 0,
	252, 307, 259, 251, 501, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	385, 244, 0, 0, 586, 0, 542, 0, 0, 0,
	0, 0, 0, 0, 349, 0, 316, 191, 215, 0,
	0, 395, 441, 453, 0, 0, 0, 242, 0, 451,
	409, 521, 223, 271, 438, 415, 449, 422, 274, 0,
	0, 450, 356, 506, 432, 518, 543, 544, 250, 389,
	530, 490, 538, 560, 216, 247, 403, 483, 524, 473,
	381, 502, 503, 315, 472, 282, 194, 353, 549, 214,
	459, 355, 232, 221, 509, 527, 276, 436, 556, 508,
	203, 485, 516, 229, 463, 0, 0, 562, 205, 514,
	482, 377, 312, 313, 204, 0, 437, 255, 280, 245,
	398, 511, 512, 243, 563, 218, 537, 210, 0, 536,
	391, 505, 515, 378, 367, 209, 513, 376, 366, 320,
	339, 340, 267, 293, 429, 359, 430, 292, 294, 387,
	386, 388, 198, 525, 0, 199, 0, 478, 526, 564,
	224, 225, 227, 0, 266, 270, 278, 281, 289, 290,
	299, 351, 402, 428, 424, 433, 0, 500, 519, 531,
	541, 547, 548, 550, 551, 552, 553, 554, 557, 555,
	390, 297, 474, 319, 357, 0, 0, 408, 452, 230,
	523, 475, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	583, 368, 465, 520, 321, 333, 336, 326, 345, 0,
	346, 322, 323, 328, 330, 331, 332, 337, 338, 342,
	348, 238, 201, 374, 382, 499, 298, 206, 207, 208,
	492, 493, 494, 495, 534, 535, 539, 442, 443, 444,
	445, 279, 529, 295, 448, 447, 317, 318, 363, 431,
	0, 190, 211, 352, 0, 434, 275, 561, 533, 528,
	197, 213, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 200, 212, 222,
	226, 233, 248, 263, 265, 272, 285, 296, 304, 305,
	308, 314, 364, 370, 371, 372, 373, 392, 393, 394,
	397, 400, 401, 404, 406, 407, 410, 414, 418, 419,
	420, 421, 423, 425, 435, 440, 454, 455, 456, 457,
	458, 461, 462, 467, 468, 469, 470, 471, 479, 480,
	484, 507, 510, 522, 540, 545, 460, 287, 288, 426,
	427, 300, 301, 558, 559, 286, 517, 546, 0, 0,
	362, 0, 0, 365, 268, 291, 306, 0, 532, 481,
	217, 446, 277, 240, 0, 0, 202, 236, 220, 246,
	261, 264, 310, 375, 383, 412, 417, 283, 258, 234,
	439, 231, 464, 487, 488, 489, 491, 379, 253, 416,
	380, 0, 360, 497, 498, 302, 496, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 399, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 0,
	0, 0, 350, 254, 0, 0, 413, 0, 196, 0,
	466, 241, 361, 358, 504, 269, 260, 256, 239, 303,
	369, 411, 486, 405, 0, 354, 0, 0, 476, 384,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 237, 311, 195, 396,
	477, 273, 0, 0, 0, 0, 0, 630, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	235, 0, 0, 0, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 501, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 385,
	244, 0, 0, 0, 0, 542, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	395, 441, 453, 0, 0, 0, 242, 0, 451, 409,
	521, 223, 271, 438, 415, 449, 422, 274, 0, 0,
	450, 356, 506, 432, 518, 543, 544, 250, 389, 530,
	490, 538, 560, 216, 247, 403, 483, 524, 473, 381,
	502, 503, 315, 472, 282, 194, 353, 549, 214, 459,
	355, 232, 221, 509, 527, 276, 436, 556, 508, 203,
	485, 516, 229, 463, 0, 0, 562, 205, 514, 482,
	377, 312, 313, 204, 0, 437, 255, 280, 245, 398,
	511, 512, 243, 563, 218, 537, 210, 0, 536, 391,
	505, 515, 378, 367, 209, 513, 376, 366, 320, 339,
	340, 267, 293, 429, 359, 430, 292, 294, 387, 386,
	388, 198, 525, 0, 199, 0, 478, 526, 564, 224,
	225, 227, 0, 266, 270, 278, 281, 289, 290, 299,
	351, 402, 428, 424, 433, 0, 500, 519, 531, 541,
	547, 548, 550, 551, 552, 553, 554, 557, 555, 390,
	297, 474, 319, 357, 0, 0, 408, 452, 230, 523,
	475, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 583,
	368, 465, 520, 321, 333, 336, 326, 345, 0, 346,
	322, 323, 328, 330, 331, 332, 337, 338, 342, 348,
	238, 201, 374, 382, 499, 298, 206, 207, 208, 492,
	493, 494, 495, 534, 535, 539, 442, 443, 444, 445,
	279, 529, 295, 448, 447, 317, 318, 363, 431, 0,
	190, 211, 352, 0, 434, 275, 561, 533, 528, 197,
	213, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 200, 212, 222, 226,
	233, 248, 263, 265, 272, 285, 296, 304, 305, 308,
	314, 364, 370, 371, 372, 373, 3442, 393, 394, 397,
	400, 401, 404, 406, 407, 410, 414, 418, 419, 420,
	421, 423, 425, 435, 440, 454, 455, 456, 457, 458,
	461, 462, 467, 468, 469, 470, 471, 479, 480, 484,
	507, 510, 522, 540, 545, 460, 287, 288, 426, 427,
	300, 301, 558, 559, 286, 517, 546, 0, 0, 362,
	0, 0, 365, 268, 291, 306, 0, 532, 481, 217,
	446, 277, 240, 0, 0, 202, 236, 220, 246, 261,
	264, 310, 375, 383, 412, 417, 283, 258, 234, 439,
	231, 464, 487, 488, 489, 491, 379, 253, 416, 380,
	0, 360, 497, 498, 302, 496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 399, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 350, 254, 0, 0, 413, 0, 196, 0, 466,
	241, 361, 358, 504, 269, 260, 256, 239, 303, 369,
	411, 486, 405, 0, 354, 0, 0, 476, 384, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 237, 311, 195, 396, 477,
	273, 0, 0, 0, 0, 0, 630, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	0, 0, 0, 335, 344, 343, 324, 325, 327, 329,
	334, 341, 347, 0, 0, 0, 0, 0, 252, 307,
	259, 251, 501, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 385, 244,
	0, 0, 0, 0, 542, 0, 0, 0, 0, 0,
	0, 0, 349, 0, 316, 191, 215, 0, 0, 395,
	441, 453, 0, 0, 0, 242, 0, 451, 409, 521,
	223, 271, 438, 415, 449, 422, 274, 0, 0, 450,
	356, 506, 432, 518, 543, 544, 250, 389, 530, 490,
	538, 560, 216, 247, 403, 483, 524, 473, 381, 502,
	503, 315, 472, 282, 194, 353, 549, 214, 459, 355,
	232, 221, 509, 527, 276, 436, 556, 508, 203, 485,
	516, 229, 463, 0, 0, 562, 205, 514, 482, 377,
	312, 313, 204, 0, 437, 255, 280, 245, 398, 511,
	512, 243, 563, 218, 537, 210, 0, 536, 391, 505,
	515, 378, 367, 209, 513, 376, 366, 320, 339, 340,
	267, 293, 429, 359, 430, 292, 294, 387, 386, 388,
	198, 525, 0, 199, 0, 478, 526, 564, 224, 225,
	227, 0, 266, 270, 278, 281, 289, 290, 299, 351,
	402, 428, 424, 433, 0, 500, 519, 531, 541, 547,
	548, 550, 551, 552, 553, 554, 557, 555, 390, 297,
	474, 319, 357, 0, 0, 408, 452, 230, 523, 475,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 583, 368,
	465, 520, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 374, 382, 499, 298, 206, 207, 208, 492, 493,
	494, 495, 534, 535, 539, 442, 443, 444, 445, 279,
	529, 295, 448, 447, 317, 318, 363, 431, 0, 190,
	211, 352, 0, 434, 275, 561, 533, 528, 197, 213,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	364, 370, 371, 372, 373, 392, 393, 394, 397, 400,
	401, 404, 406, 407, 410, 414, 418, 419, 420, 421,
	423, 425, 435, 440, 454, 455, 456, 457, 458, 461,
	462, 467, 468, 469, 470, 471, 479, 480, 484, 507,
	510, 522, 540, 545, 460, 287, 288, 426, 427, 300,
	301, 558, 559, 286, 517, 546, 0, 0, 362, 0,
	0, 365, 268, 291, 306, 0, 532, 481, 217, 446,
	277, 240, 0, 0, 202, 236, 220, 246, 261, 264,
	310, 375, 383, 412, 417, 283, 258, 234, 439, 231,
	464, 487, 488, 489, 491, 379, 253, 416, 380, 0,
	360, 497, 498, 302, 496, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 399, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	350, 254, 0, 0, 413, 0, 196, 0, 466, 241,
	361, 358, 504, 269, 260, 256, 239, 303, 369, 411,
	486, 405, 0, 354, 0, 0, 476, 384, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 237, 311, 195, 396, 477, 273,
	0, 0, 0, 0, 0, 803, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 0,
	0, 0, 335, 344, 343, 324, 325, 327, 329, 334,
	341, 347, 0, 0, 0, 0, 0, 252, 307, 259,
	251, 501, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 385, 244, 0,
	0, 0, 0, 542, 0, 0, 0, 0, 0, 0,
	0, 349, 0, 316, 191, 215, 0, 0, 395, 441,
	453, 0, 0, 0, 242, 0, 451, 409, 521, 223,
	271, 438, 415, 449, 422, 274, 0, 0, 450, 356,
	506, 432, 518, 543, 544, 250, 389, 530, 490, 538,
	560, 216, 247, 403, 483, 524, 473, 381, 502, 503,
	315, 472, 282, 194, 353, 549, 214, 459, 355, 232,
	221, 509, 527, 276, 436, 556, 508, 203, 485, 516,
	229, 463, 0, 0, 562, 205, 514, 482, 377, 312,
	313, 204, 0, 437, 255, 280, 245, 398, 511, 512,
	243, 563, 218, 537, 210, 0, 536, 391, 505, 515,
	378, 367, 209, 513, 376, 366, 320, 339, 340, 267,
	293, 429, 359, 430, 292, 294, 387, 386, 388, 198,
	525, 0, 199, 0, 478, 526, 564, 224, 225, 227,
	0, 266, 270, 278, 281, 289, 290, 299, 351, 402,
	428, 424, 433, 0, 500, 519, 531, 541, 547, 548,
	550, 551, 552, 553, 554, 557, 555, 390, 297, 474,
	319, 357, 0, 0, 408, 452, 230, 523, 475, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 583, 368, 465,
	520, 321, 333, 336, 326, 345, 0, 346, 322, 323,
	328, 330, 331, 332, 337, 338, 342, 348, 238, 201,
	374, 382, 499, 298, 206, 207, 208, 492, 493, 494,
	495, 534, 535, 539, 442, 443, 444, 445, 279, 529,
	295, 448, 447, 317, 318, 363, 431, 0, 190, 211,
	352, 0, 434, 275, 561, 533, 528, 197, 213, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 200, 212, 222, 226, 233, 248,
	263, 265, 272, 285, 296, 304, 305, 308, 314, 364,
	370, 371, 372, 373, 392, 393, 394, 397, 400, 401,
	404, 406, 407, 410, 414, 418, 419, 420, 421, 423,
	425, 435, 440, 454, 455, 456, 457, 458, 461, 462,
	467, 468, 469, 470, 471, 479, 480, 484, 507, 510,
	522, 540, 545, 460, 287, 288, 426, 427, 300, 301,
	558, 559, 286, 517, 546, 0, 0, 362, 0, 0,
	365, 268, 291, 306, 0, 532, 481, 217, 446, 277,
	240, 0, 0, 202, 236, 220, 246, 261, 264, 310,
	375, 383, 412, 417, 283, 258, 234, 439, 231, 464,
	487, 488, 489, 491, 379, 253, 416, 380, 0, 360,
	497, 498, 302, 496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 399, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 350,
	254, 0, 0, 413, 0, 196, 0, 466, 241, 361,
	358, 504, 269, 260, 256, 239, 303, 369, 411, 486,
	405, 0, 354, 0, 0, 476, 384, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 237, 311, 195, 396, 477, 273, 0,
	0, 0, 0, 0, 188, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 235, 0, 0,
	0, 335, 344, 343, 324, 325, 327, 329, 334, 341,
	347, 0, 0, 0, 0, 0, 252, 307, 259, 251,
	501, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 385, 244, 0, 0,
	0, 0, 542, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 316, 191, 215, 0, 0, 395, 441, 453,
	0, 0, 0, 242, 0, 451, 409, 521, 223, 271,
	438, 415, 449, 422, 274, 0, 0, 450, 356, 506,
	432, 518, 543, 544, 250, 389, 530, 490, 538, 560,
	216, 247, 403, 483, 524, 473, 381, 502, 503, 315,
	472, 282, 194, 353, 549, 214, 459, 355, 232, 221,
	509, 527, 276, 436, 556, 508, 203, 485, 516, 229,
	463, 0, 0, 562, 205, 514, 482, 377, 312, 313,
	204, 0, 437, 255, 280, 245, 398, 511, 512, 243,
	563, 218, 537, 210, 0, 536, 391, 505, 515, 378,
	367, 209, 513, 376, 366, 320, 339, 340, 267, 293,
	429, 359, 430, 292, 294, 387, 386, 388, 198, 525,
	0, 199, 0, 478, 526, 564, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 402, 428,
	424, 433, 0, 500, 519, 531, 541, 547, 548, 550,
	551, 552, 553, 554, 557, 555, 390, 297, 474, 319,
	357, 0, 0, 408, 452, 230, 523, 475, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 583, 368, 465, 520,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 374,
	382, 499, 298, 206, 207, 208, 492, 493, 494, 495,
	534, 535, 539, 442, 443, 444, 445, 279, 529, 295,
	448, 447, 317, 318, 363, 431, 0, 190, 211, 352,
	0, 434, 275, 561, 533, 528, 197, 213, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 364, 370,
	371, 372, 373, 392, 393, 394, 397, 400, 401, 404,
	406, 407, 410, 414, 418, 419, 420, 421, 423, 425,
	435, 440, 454, 455, 456, 457, 458, 461, 462, 467,
	468, 469, 470, 471, 479, 480, 484, 507, 510, 522,
	540, 545, 460, 287, 288, 426, 427, 300, 301, 558,
	559, 286, 517, 546, 0, 0, 362, 0, 0, 365,
	268, 291, 306, 0, 532, 481, 217, 446, 277, 240,
	0, 0, 202, 236, 220, 246, 261, 264, 310, 375,
	383, 412, 417, 283, 258, 234, 439, 231, 464, 487,
	488, 489, 491, 379, 253, 416, 0, 0, 360, 497,
	498, 302, 89, 0, 0, 819, 0, 0, 0, 807,
	820, 821, 822, 823, 808, 0, 0, 809, 810, 0,
	811, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 816, 824, 825, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2836, 2837, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 826, 827, 828, 829, 830, 831, 832,
	833, 834, 835, 836, 837, 838, 839, 840, 841, 842,
	843, 844, 845, 846, 847, 848, 849, 850, 851, 852,
	853, 854, 855, 856, 857, 858, 859, 860, 861, 862,
	863, 864, 865, 866, 867, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2838, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2839,
	2840,
}

var yyPact = [...]int{
	-1000, -1000, 5528, -1000, -443, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2173, 2225,
	-1000, -1000, -1000, -1000, 2373, -1000, 794, 1884, -1000, 2162,
	4360, -1000, 45633, 541, -1000, 43037, 539, 143, 28110, -1000,
	220, -1000, 198, 44335, 208, -1000, -1000, -1000, -332, 17724,
	2094, 97, 91, 45633, -1000, -1000, -1000, -1000, 2314, 1836,
	-1000, 396, -1000, -1000, -1000, -1000, -1000, -1000, 42388, -1000,
	903, -1000, -1000, 2170, 2167, 2383, 711, 2099, -1000, 2247,
	1836, -1000, 17724, 2312, 2232, 17075, 17075, 493, -1000, -1000,
	281, -1000, -1000, 23567, 45633, 30706, 397, -1000, 2162, -1000,
	-1000, -1000, 114, -1000, 398, 1756, -1000, 1755, -1000, 694,
	722, 429, 538, 494, 428, 423, 420, 419, 417, 410,
	409, 406, 408, -1000, 740, 740, -120, -121, 4794, 481,
	484, 484, 863, 517, 2131, 2130, -1000, -1000, 740, 740,
	740, 377, 740, 740, 740, 740, 338, 336, 740, 740,
	740, 740, 740, 740, 740, 740, 740, 740, 740, 740,
	740, 740, 740, 740, 740, 469, 2162, 321, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 45633, 329, 45633, -1000, 617, 45633,
	862, 862, 123, 862, 862, 862, 862, 217, 678, 70,
	-1000, 205, 317, 212, 319, 867, 202, -1000, -1000, 308,
	867, 1592, -1000, 729, 313, 168, -1000, 862, 862, -1000,
	11209, 175, 11209, 11209, -1000, 2158, -1000, -1000, -1000, -1000,
	-1000, 1010, -1000, -1000, -1000, -1000, -1000, 512, -1000, -1000,
	-1000, -1000, 44335, 41739, -1000, -1000, 165, -1000, -1000, 1649,
	1348, 17724, 1149, -1000, 1279, 681, -1000, -1000, -1000, -1000,
	-1000, 597, -1000, 18373, 18373, 18373, 18373, -1000, -1000, 1761,
	41090, 1761, 1761, 18373, 1761, -1000, 18373, 1761, 1761, 1761,
	17724, 1761, 1761, 1761, 1761, -1000, 1761, 1761, 1761, 1761,
	1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761,
	1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761,
	1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761,
	1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761,
	1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761,
	1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761,
	1761, 1761, 1761, 1761, -1000, -1000, -1000, -1000, 1761, 612,
	1761, 1761, 1761, 1761, 1761, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1761, 1761, 1761, 1761, 1761, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1761, 1761, 1761,
	1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761,
	1761, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 19671, 1333, 1312, 1309, -1000, 15128, 1761, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 45633,
	-1000, 1761, 269, 44335, 44335, 399, 2247, 1836, -1000, 2314,
	2271, 396, -1000, 2857, 2074, 1446, 1254, 1836, 1735, 45633,
	-1000, 1800, -1000, -1000, -1000, -1000, 2021, 1274, 1582, -1000,
	-1000, -1000, -1000, 1632, 17724, -1000, -1000, 2364, -1000, 20970,
	607, 2358, 40441, -1000, 493, 493, 1746, 440, 50, -1000,
	-1000, -1000, -1000, 783, 27461, -1000, -1000, -1000, -1000, 1647,
	45633, -1000, -1000, 4315, 1158, -1000, 1883, -1000, 1605, -1000,
	1842, 17724, 1904, 537, 1158, 531, 530, 526, -1000, -28,
	-1000, -1000, -1000, -1000, -1000, -1000, 740, 740, 740, -1000,
	402, 2309, 4360, 6311, -1000, -1000, -1000, 39792, 1871, 1158,
	-1000, 1870, -1000, 843, 591, 638, 638, 1158, -1000, -1000,
	44984, 1158, 835, 834, 1158, 1158, 44335, 44335, -1000, 39143,
	-1000, 38494, 37845, 1140, 44335, 37196, 36547, 35898, 35249, 34600,
	-1000, 2049, -1000, 1937, -1000, -1000, -1000, 44984, 1158, 1158,
	44984, 44335, 44984, 45633, 1158, -1000, -1000, 372, -1000, -1000,
	1137, 1136, 1135, 740, 740, 1134, 1579, 1568, 1555, 740,
	740, 1127, 1553, 29408, 1547, 300, 1116, 1111, 1091, 1048,
	1507, 209, 1490, 1047, 1045, 1090, 44335, 1868, 45633, -1000,
	304, 718, 496, 434, 780, 2162, 2092, 1744, 511, 536,
	1158, 490, 490, 44335, -1000, 13174, -1000, -1000, 1487, 17724,
	-1000, 880, 867, 867, -1000, -1000, -1000, -1000, -1000, -1000,
	862, 45633, 880, -1000, -1000, -1000, 867, 862, 45633, 862,
	862, 862, 862, 867, 867, 867, 862, 45633, 45633, 45633,
	45633, 45633, 45633, 45633, 45633, 45633, 11209, 729, 862, -337,
	-1000, 1477, -1000, -1000, 2001, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 11209, 11209, -1000, -1000, -1000, -1000, 203, -1000, 33951,
	422, 777, -1000, 1741, 33302, -1000, -341, -345, -347, -354,
	-1000, -1000, -1000, -355, -357, -1000, -1000, -1000, 17724, 17724,
	17724, 17724, -182, -1000, 897, 18373, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 166, 951, 18373, 18373, 18373, 18373, 18373,
	18373, 18373, 18373, 18373, 18373, 18373, 18373, 18373, 18373, 18373,
	-1000, -1000, 25514, 7624, 7624, 681, 681, 681, 681, -1000,
	-95, 1740, 44984, -1000, -1000, -1000, 604, 17724, 17724, 681,
	-1000, 1158, 15128, 32653, 17075, 17075, 17724, 786, 1348, 44984,
	17724, -1000, 1254, -1000, -1000, -1000, 1129, -1000, 865, 2140,
	2140, 2140, 2140, 17724, 17724, 17724, 17724, 17724, 17724, 17724,
	17724, 17724, 17724, 2140, 44335, 44335, 219, 17724, 17724, 17724,
	17724, 17724, 17724, 13829, 17724, 17724, 18373, 17724, 17724, 17724,
	1254, 17724, 17724, 17724, 17724, 17724, 17724, 17724, 17724, 17724,
	17724, 17724, 17724, 17724, 17724, 17724, 17724, 17724, 17724, 17724,
	17724, 17724, 17724, 17724, 17724, 17724, 17724, 17724, 1254, 17724,
	1124, 17724, 17724, 17075, 12519, 17075, 17075, 17075, 17075, 17075,
	-1000, -1000, -1000, -1000, -1000, 17724, 17724, 17724, 17724, 17724,
	17724, 17724, 17724, 1254, 17724, 17724, 17724, 17724, 17724, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1341,
	1294, 1246, 17724, -1000, 1736, -1000, -151, 22918, 17724, 1472,
	2349, 1929, 44335, -1000, -1000, -1000, 2247, -1000, 2247, 1341,
	2707, 2034, 17075, -1000, -1000, 2707, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1510, -1000, 45633, 1735, 2202, 44335,
	2025, 1442, 431, -1000, 17724, 17724, 1734, -1000, 1180, 45633,
	-1000, -182, -1000, 32004, -1000, -1000, 10554, 45633, 400, 45633,
	-1000, 22269, 31355, 284, 50, -1000, 1715, -1000, 33, 76,
	14478, 680, -1000, -1000, -1000, 4794, 19022, 1628, 680, 135,
	-1000, -1000, -1000, 1842, -1000, 1842, 1842, 1842, 1842, 431,
	431, 431, 431, -1000, -1000, -1000, -1000, -1000, 1864, 1859,
	-1000, 1842, 1842, 1842, 1842, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1856, 1856, 1856, 1848, 1848, 478, -1000, 17724,
	325, 30706, 2182, 1089, 1529, 304, 491, 1922, 1158, 1158,
	1158, 491, -1000, 1207, 1164, 1157, -1000, -428, 1733, -1000,
	-1000, 2305, -1000, -1000, 782, 869, 864, 725, 44335, 276,
	366, -1000, 463, -1000, 30706, 1158, 825, 638, 1158, -1000,
	1158, -1000, -1000, -1000, -1000, -1000, 1158, -1000, -1000, 1731,
	-1000, 1689, 970, 858, 927, 854, 1731, -1000, -1000, -107,
	1731, -1000, 1731, -1000, 1731, -1000, 1731, -1000, 1731, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 774, 204,
	-232, 44335, 276, 509, -1000, 508, 25514, -1000, -1000, -1000,
	25514, 25514, -1000, -1000, -1000, -1000, 1441, 1417, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -412, 45633, -1000,
	287, 758, 341, 387, 345, 45633, 324, 2234, 2216, 2212,
	2210, 2205, -1000, -1000, -1000, 1408, 290, 335, 45633, 45633,
	490, 1983, 45633, 2187, 45633, -1000, -1000, -1000, -1000, -1000,
	1348, 45633, -1000, -1000, 862, 862, -1000, -1000, 45633, 862,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 862, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 45633, -1000, -1000, -1000, -1000, 44335,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -48,
	224, 29, 407, -1000, -1000, -1000, -1000, -1000, 2237, -1000,
	1348, 809, 802, -1000, 1761, -1000, -1000, 1040, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 166, 18373, 18373, 18373, 1581,
	544, 1690, 1443, 1030, 840, 840, 1009, 1009, 687, 687,
	687, 687, 687, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1398, -1000, 1761, 44984, 1599, 12519, 1382, 1322, 1254,
	2756, -1000, 1578, -1000, 1578, 1938, 808, -1000, 17724, 1254,
	2750, -1000, -1000, 1254, 1254, 1254, 17724, -1000, -1000, 17724,
	17724, 17724, 17724, 1529, 1529, 1529, 1529, 1529, 1529, 1529,
	1529, 1529, 1529, 17724, 1730, 1729, 2347, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1049, 1529,
	1529, 1529, 1529, 1529, 17724, 1080, -1000, -1000, -1000, 1251,
	2734, 1206, 2725, 1529, 1529, -1000, 1529, 2719, 2695, 1254,
	1649, 1254, 1728, -1000, 2657, 1529, 2640, 2614, 2610, 1903,
	2574, 2555, 2366, 1529, 1529, 1529, 1860, 2335, 2326, 2306,
	2302, 2262, 2250, 2243, 2239, 2235, 1529, -193, 1529, 1254,
	-1000, -1000, -1000, -1000, -1000, 2214, 1833, 1254, 1724, 1761,
	603, -1000, -1000, 1578, 1254, 1254, 1578, 1578, 2201, 2195,
	2179, 2143, 2139, 2110, 1529, 1529, -1000, 1529, 2096, 2067,
	1737, 1726, 1254, -1000, 1246, 45633, -1000, -325, -1000, 9,
	683, 1761, -1000, 29408, 1254, -1000, 5684, -1000, 931, -1000,
	-1000, -1000, -1000, -1000, 26812, 1571, 2707, -1000, -1000, 1761,
	1546, -1000, -1000, 431, 124, 26163, 659, 659, 184, 1348,
	1348, 17724, -1000, -1000, -1000, -1000, -1000, -1000, 602, 2329,
	403, 1761, -1000, 1707, 2298, -1000, -1000, -1000, 2200, 20321,
	-1000, 1761, 1761, 45633, 1640, 1486, -1000, 593, -1000, 1166,
	1715, 50, 24, -1000, -1000, -1000, -1000, 1348, -1000, 1155,
	405, 636, -1000, 456, -1000, -1000, -1000, -1000, 2107, 119,
	-1000, -1000, -1000, 248, 431, -1000, -1000, -1000, -1000, -1000,
	-1000, 1393, 1393, -1000, -1000, -1000, -1000, -1000, 1079, -1000,
	-1000, -1000, 1077, -1000, -1000, 1974, 1959, 325, -1000, -1000,
	740, 1391, -1000, -1000, 2118, 740, 740, 44335, -1000, -1000,
	1617, 2182, 287, 45633, 793, 1981, -1000, 1922, 1922, 1922,
	45633, -1000, -1000, -1000, -1000, -1000, -1000, -416, 78, 379,
	-1000, -1000, -1000, 4849, 44335, 1542, -1000, 272, -1000, 1610,
	-1000, 44335, -1000, 1536, 1854, 1158, 1158, -1000, -1000, -1000,
	44335, 1761, -1000, -1000, -1000, -1000, 534, 2160, 263, -1000,
	-1000, -214, -1000, -1000, 276, 272, 44984, 1158, 680, -1000,
	-1000, -1000, -1000, -1000, -418, 1484, 522, 279, 331, 45633,
	45633, 45633, 45633, 45633, 589, -1000, -1000, 54, -1000, -1000,
	237, -1000, -1000, -1000, -1000, 237, -1000, -1000, -1000, -1000,
	-1000, 327, 498, -1000, 45633, 45633, 624, -1000, -1000, -1000,
	867, -1000, -1000, 867, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2153, 45633, 19, -373, -1000, -368,
	17724, -1000, -1000, -1000, -1000, 1122, 533, 1690, 18373, 18373,
	18373, -1000, -1000, -1000, 738, 738, 25514, -1000, 17724, 17075,
	-1000, -1000, 17724, 17724, 785, -1000, 17724, 988, -1000, 17724,
	-1000, -1000, -1000, 1246, 1529, 1529, 1529, 1529, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1682, 17724,
	17724, 17724, 1254, 339, -1000, -1000, -1000, -1000, -1000, 2346,
	-1000, 17724, -1000, 25514, 17724, 17724, 17724, -1000, -1000, -1000,
	17724, 17724, -1000, -1000, 17724, 17724, -1000, 17724, 17724, 17724,
	-1000, 17724, 17724, 17724, 17724, -1000, -1000, -1000, -1000, 17724,
	17724, 17724, 17724, 17724, 17724, 17724, 17724, 17724, 17724, -1000,
	-1000, 30706, 83, -193, 1124, 83, 1124, -1000, 17075, 11864,
	-1000, -1000, -1000, -1000, -1000, 17724, 17724, 17724, 17724, 17724,
	17724, -1000, -1000, -1000, 17724, 17724, -1000, 17724, -1000, 17724,
	-1000, -1000, -1000, -1000, -1000, 683, -1000, 638, 638, 638,
	44335, -1000, -1000, -1000, -1000, 1714, -1000, 2230, -1000, 2044,
	2043, 2342, 2329, -1000, 22269, 2707, -1000, -1000, 44335, -315,
	-1000, 2085, 2087, 659, 659, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 9899, 2247, 17724, 1976, 44984, 161, -1000, 21620,
	44335, 44984, 22269, 22269, 22269, 22269, 22269, -1000, 2006, 1988,
	-1000, 1998, 1997, 2064, 45633, -1000, 1471, 1254, 2271, 20321,
	396, 17724, 24216, 1678, 22269, -1000, -1000, 22269, 45633, 9244,
	-1000, -1000, 15, 34, -1000, -1000, -1000, -1000, 4794, -1000,
	-1000, 1284, 2199, 2104, -1000, -1000, -1000, -1000, -1000, 1467,
	-1000, 1460, 1697, 1437, 204, -1000, 1901, 2141, 740, 740,
	-1000, 1075, -1000, 1158, 1385, 1375, -1000, -1000, -1000, 521,
	-1000, 2185, 45633, 1975, 1973, 1972, -1000, -434, 1052, 1852,
	1838, 17724, 1851, 2304, 1675, 44335, -1000, -1000, 44984, -1000,
	173, -1000, 325, 44335, -1000, -1000, -1000, 366, 45633, -1000,
	46205, -1000, -1000, -1000, 272, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 45633, 291, -1000, 1850, 974, -1000, -1000, 1907,
	-1000, -1000, -1000, -1000, 223, 333, 1372, 213, 1363, 213,
	-1000, 45633, 615, 1959, 45633, -1000, -1000, -1000, 862, 862,
	-1000, -1000, 2134, -1000, 1158, 1529, 18373, 18373, -1000, 681,
	305, -127, 1842, 1842, -1000, 1842, 1848, -1000, 1842, 188,
	1842, 174, 1842, -1000, -1000, 1254, 1254, 1246, -1000, 1708,
	1343, -1000, 1348, 17724, 2039, -1000, -1000, -1000, -1000, -1000,
	-36, 2035, 2020, 1529, -1000, 1827, 1824, 17724, 1529, 1254,
	1700, 1529, 1529, 1529, 1529, -1000, 1348, 1246, 2015, 1246,
	1529, 1529, 2010, 323, 1529, 1415, 1415, 1415, 1415, 1415,
	1246, 1246, 1246, 1246, 44335, -1000, -193, -1000, -1000, -234,
	-235, -1000, 1254, -193, 1696, 1254, -1000, 1694, 1637, 1999,
	1590, 1529, 1978, 1529, 1529, 1529, 1572, -1000, 2236, 2236,
	2236, 1403, 931, 45633, -1000, -1000, -1000, -1000, 2329, 2327,
	1693, -1000, -1000, 124, 458, -1000, 2070, 2087, -1000, 2295,
	2072, 2294, -1000, -1000, -1000, -1000, -1000, 1348, -1000, 2142,
	1608, -1000, 757, 1672, -1000, -1000, 16426, 1407, 2038, 587,
	1403, 1723, 2298, 1957, 1971, 2841, -1000, -1000, -1000, -1000,
	1984, -1000, 1969, -1000, -1000, 1800, -1000, -1000, 1294, 1254,
	1950, 400, 22269, 1711, 1711, -1000, 585, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 883, 7785, 2380, -1000, 1345, -1000,
	1151, 214, 1039, -1000, -1000, 740, 740, -1000, 822, 821,
	-1000, 45633, 1821, -1000, 431, 1338, 431, 1035, -1000, 1003,
	-1000, -1000, -1000, -1000, 1878, 1952, -1000, -1000, -1000, -1000,
	45633, -1000, -1000, 45633, 45633, 45633, 1817, 2292, -1000, 17724,
	1804, 745, 1920, 44335, 44335, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 448, 740, -396, 334,
	326, 740, 740, 740, -436, -1000, -1000, 1368, 1337, -1000,
	-118, -1000, 17724, -1000, -1000, -1000, 1069, 1069, 1333, 1312,
	1309, -1000, 1800, -1000, -1000, -1000, 1543, -1000, -1000, -110,
	44335, 44335, 44335, 44335, -1000, -1000, 975, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 681,
	1254, 332, -112, 1254, -1000, -1000, 431, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 17724, -1000, 17724,
	-1000, 1348, 17724, 2247, 1306, 17724, 17724, -1000, 964, 960,
	1529, -1000, -1000, -1000, 17724, -1000, -1000, -1000, -1000, -1000,
	17724, -1000, -1000, -1000, 17724, 289, 738, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1254, 367, -1000,
	-1000, -1000, -1000, 2339, -1000, 1254, 17724, -1000, -1000, 17724,
	-1000, 17724, 17724, -1000, 17724, -1000, 17724, -1000, -1000, -1000,
	-1000, 17724, 1761, 2057, 1761, 1761, 24216, -1000, -1000, 2327,
	2317, 2289, 2052, 2059, 2059, 2070, -1000, 2288, 2281, -1000,
	1298, 2280, 1275, 819, -1000, 44984, 17724, 161, -1000, 395,
	44335, 161, 44335, -1000, 2307, -1000, -1000, 17724, 1802, -1000,
	17724, -1000, -1000, -1000, -1000, -1000, -1000, 7624, 2329, 1711,
	-1000, -1000, 695, -1000, 17724, -1000, -1000, -1000, 3777, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1261, 1258, -1000,
	-1000, 1801, 17724, -1000, -1000, -1000, 1530, 1468, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1800, -1000, -1000, -1000,
	-1000, 366, -423, 1915, 44335, 949, -1000, 1328, 1675, 358,
	161, 1240, 740, 740, 740, 941, 940, 29408, 1324, -1000,
	44335, 425, -1000, 366, -1000, -123, -124, 1529, -1000, -1000,
	2196, -1000, -1000, 11864, -1000, -1000, 1796, 1912, -1000, -1000,
	-1000, -1000, 2022, -104, -115, -1000, -1000, 1529, 1529, 1786,
	1254, -1000, 1529, 1529, 1329, 1325, -1000, 1529, 1246, 1550,
	-1000, 289, 1254, 1963, -1000, -1000, 7624, -1000, -1000, 2307,
	2279, 83, -1000, -1000, 275, 83, 1348, 1534, 1529, 1454,
	1411, 1529, 1529, 24865, -1000, 2273, 2254, 30057, 30057, 683,
	2317, -203, 17724, 17724, 2050, 1012, -1000, -1000, -1000, -1000,
	1235, 1230, -1000, 1218, -1000, 2375, -1000, 1348, -1000, 161,
	-1000, 569, 1672, -1000, 2247, 1348, 44335, 1348, 113, 2307,
	-1000, 1529, -1000, 1761, 1761, 1761, 1761, 1761, 1761, 1761,
	1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761,
	1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761,
	1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761,
	1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761,
	1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761,
	1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761,
	1761, 1761, 1761, -1000, -1000, 44335, 1751, -1000, -1000, 2194,
	1318, 77, -1000, 1303, 1675, -1000, -1000, 152, -1000, 17724,
	-1000, 29408, 1188, 1173, -1000, -1000, -1000, -1000, -436, -1000,
	-1000, -1000, -1000, -1000, -1000, 396, 1674, -1000, 733, 44335,
	45633, -1000, 2005, -1000, -1000, -1000, 17724, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 17724, -1000, 1254, 1960, -1000,
	-250, -1000, -400, 17724, -193, -1000, -1000, -193, -1000, 17724,
	-1000, -1000, 17724, -1000, 17724, -1000, -1000, 1302, -1000, -1000,
	-1000, -1000, -1000, 1302, 1302, -1000, -203, -1000, 1673, -1000,
	44335, 1348, 1649, -1000, 1006, -1000, -1000, -1000, -1000, -1000,
	44984, 1672, 44335, -1000, 1270, 1254, 1761, 2247, -1000, 1268,
	-1000, 396, -1000, 1794, 1838, -1000, -1000, -1000, 15777, -1000,
	-1000, -1000, -1000, -1000, 190, -109, 11864, 8565, 1253, -1000,
	-108, 1529, 1246, -1000, -361, -1000, -1000, -1000, -1000, 239,
	-1000, -1000, 1649, -1000, -1000, 1405, 1292, 1256, 28759, -1000,
	-1000, -1000, -1000, -203, -1000, -1000, 2189, -1000, -1000, 1636,
	-1000, -1000, 24216, 43686, -1000, -90, 314, -109, 17724, 1782,
	1254, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -7,
	-1000, -1000, -1000, -1000, -1000, 1907, -113, -1000, -1000, -1000,
	273, -384, -164, -167, -1000, -1000, 18373, -1000, 17724, -1000,
	17724, -1000, 17724, -1000, -1000, -1000, 44335, 1761, -1000, 1244,
	-1000, 3663, -252, 1946, -1000, -76, -1000, -1000, -1000, 875,
	1171, -1000, -1000, -1000, -1000, -1000, -1000, 1561, 44335, -1000,
	473, -1000, -1000, -110, -116, 795, -1000, -1000, -1000, -1000,
	-1000, 1170, 1138, 1529, -1000, 44335, -1000, 43686, -242, 680,
	7624, -1000, 1941, 1933, 2334, -1000, -1000, -1000, -1000, -1000,
	-1000, -440, 1226, 299, -1000, -1000, 273, -1000, 17724, -1000,
	17724, -1000, 1254, -1000, -1000, 2177, 113, -1000, 2336, -1000,
	2369, 698, 698, -1000, 926, -440, -1000, -1000, 1529, 1529,
	-1000, -253, -1000, -1000, -1000, -1000, -1000, 467, 967, -1000,
	-1000, -1000, -1000, -1000, 7624, -1000, -1000, -1000, 260, 260,
	-1000, -1000,
}

var yyPgo = [...]int{
	0, 2894, 2893, 49, 5, 38, 37, 2890, 29, 102,
	204, 46, 210, 101, 2888, 2887, 2886, 2885, 2884, 2883,
	2878, 192, 189, 187, 2877, 2872, 2870, 2869, 2868, 2865,
	2863, 2862, 2859, 2854, 185, 177, 203, 2853, 2852, 2851,
	127, 200, 91, 95, 201, 2840, 2839, 85, 2835, 2833,
	2828, 197, 196, 195, 818, 2820, 194, 124, 58, 2819,
	2818, 2817, 2816, 2814, 2812, 2810, 2809, 2808, 2805, 2804,
	2803, 2802, 2801, 2800, 2797, 2793, 221, 2792, 2791, 23,
	2790, 87, 2789, 2787, 2786, 2785, 7, 2784, 2780, 16,
	47, 2778, 2777, 52, 2770, 2769, 2768, 2767, 2766, 18,
	2764, 27, 2763, 40, 2759, 2758, 133, 2757, 2750, 2748,
	42, 2747, 2744, 2743, 2742, 2741, 2737, 2736, 157, 2734,
	2733, 2730, 219, 207, 2725, 2724, 181, 132, 117, 2722,
	2720, 108, 202, 2719, 134, 2714, 2712, 2710, 162, 2709,
	2169, 2708, 2707, 76, 71, 2705, 190, 2703, 2701, 15,
	33, 74, 11, 19, 20, 2700, 2695, 75, 83, 2692,
	137, 2690, 2688, 113, 68, 2687, 103, 100, 2685, 2678,
	9, 4, 2673, 2, 1, 13, 69, 2667, 2665, 123,
	2664, 2658, 2657, 99, 2655, 2639, 5984, 2636, 97, 144,
	114, 81, 2628, 55, 135, 2625, 2620, 2617, 2616, 2613,
	56, 2609, 2605, 2603, 153, 72, 178, 2602, 54, 79,
	59, 145, 2601, 44, 92, 211, 179, 2600, 2599, 151,
	149, 2598, 2591, 61, 45, 50, 2588, 112, 141, 131,
	41, 98, 146, 2587, 2584, 60, 80, 2582, 2581, 2579,
	2574, 182, 2572, 2565, 78, 2561, 62, 2560, 208, 2558,
	21, 70, 2556, 53, 174, 2554, 82, 2552, 2551, 73,
	126, 77, 43, 2550, 171, 2543, 57, 176, 139, 172,
	2540, 2539, 2538, 2537, 205, 312, 2535, 2534, 147, 191,
	154, 160, 88, 2532, 307, 2531, 2528, 106, 51, 5094,
	2526, 39, 173, 2523, 2522, 5117, 150, 48, 24, 2518,
	119, 2515, 2513, 2512, 2509, 209, 206, 118, 175, 65,
	2503, 2500, 2499, 17, 2482, 2480, 2479, 2478, 2473, 2471,
	90, 36, 35, 34, 212, 66, 14, 105, 164, 84,
	2464, 2463, 2462, 129, 93, 2460, 169, 168, 136, 170,
	2459, 193, 155, 128, 2456, 180, 31, 2455, 2453, 2450,
	2449, 96, 2446, 2439, 2437, 2435, 163, 156, 122, 89,
	2434, 94, 121, 161, 159, 63, 2433, 64, 2432, 2427,
	28, 199, 30, 2426, 12, 116, 242, 2425, 4311, 198,
	2424, 22, 306, 158, 2422, 2420, 10, 6, 8, 2419,
	2417, 2416, 2415, 148, 2408, 2407, 2406, 2405, 26, 67,
	25, 3, 120, 86, 2402, 2400, 2399, 3083, 0, 143,
	2398, 213,
}

//line sql.y:7925
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 405, 406, 406, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 256, 378,
	379, 379, 254, 254, 32, 71, 34, 34, 33, 33,
	36, 36, 35, 8, 8, 8, 9, 9, 9, 9,
	9, 9, 9, 9, 10, 10, 10, 10, 10, 11,
	11, 11, 11, 13, 13, 13, 13, 13, 19, 20,
	12, 12, 21, 21, 104, 104, 22, 23, 23, 23,
	23, 409, 409, 181, 181, 179, 179, 180, 180, 259,
	259, 24, 25, 25, 269, 269, 268, 268, 268, 270,
	270, 270, 270, 308, 308, 308, 26, 26, 26, 26,
	26, 124, 124, 381, 381, 380, 374, 374, 373, 373,
	372, 377, 377, 376, 376, 375, 38, 39, 48, 48,
	48, 48, 49, 50, 382, 382, 347, 55, 55, 54,
	54, 54, 54, 54, 54, 56, 56, 52, 52, 51,
	51, 53, 53, 349, 349, 335, 335, 348, 348, 348,
	348, 348, 348, 348, 334, 334, 135, 135, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 397, 397, 397, 396, 396,
	234, 234, 234, 234, 234, 234, 234, 234, 145, 145,
	157, 157, 157, 157, 157, 143, 143, 144, 142, 142,
	142, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 401, 401,
	401, 401, 401, 401, 401, 401, 401, 401, 401, 401,
	401, 401, 401, 401, 401, 401, 401, 401, 401, 401,
	401, 401, 401, 401, 401, 401, 401, 401, 401, 401,
	401, 401, 401, 401, 401, 401, 401, 401, 401, 401,
	156, 156, 152, 152, 152, 153, 153, 153, 154, 154,
	398, 398, 398, 398, 313, 313, 313, 313, 316, 316,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 315,
	315, 315, 315, 315, 317, 317, 317, 317, 317, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 319, 319, 319, 319, 319,
	319, 319, 319, 333, 333, 320, 320, 328, 328, 329,
	329, 329, 330, 330, 330, 331, 331, 325, 325, 325,
	325, 325, 325, 325, 325, 325, 327, 327, 326, 326,
	326, 336, 361, 361, 360, 360, 358, 358, 358, 358,
	358, 358, 358, 358, 345, 345, 355, 355, 355, 355,
	355, 344, 344, 340, 340, 340, 341, 341, 342, 342,
	339, 339, 343, 343, 357, 357, 356, 356, 337, 337,
	338, 338, 363, 399, 399, 399, 399, 399, 400, 400,
	364, 389, 391, 391, 391, 390, 390, 387, 388, 386,
	386, 386, 386, 386, 81, 81, 81, 282, 282, 283,
	283, 353, 353, 352, 352, 352, 354, 354, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 277,
	277, 277, 385, 385, 385, 385, 385, 385, 384, 384,
	384, 350, 350, 350, 383, 383, 57, 57, 214, 214,
	402, 402, 403, 403, 403, 404, 404, 45, 45, 45,
	45, 45, 45, 44, 44, 44, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 46, 46, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	106, 106, 107, 107, 107, 107, 109, 109, 109, 366,
	366, 58, 58, 3, 3, 169, 171, 172, 172, 170,
	170, 170, 170, 170, 170, 60, 60, 59, 59, 174,
	173, 175, 175, 175, 1, 1, 2, 2, 4, 4,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 332, 332, 332, 365, 365, 367, 108, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 112, 111,
	111, 110, 113, 113, 113, 113, 113, 113, 113, 113,
	369, 369, 369, 61, 61, 370, 321, 322, 323, 5,
	6, 346, 368, 120, 120, 28, 37, 37, 29, 29,
	29, 29, 30, 30, 62, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 276, 276, 285,
	285, 275, 275, 300, 300, 300, 278, 278, 278, 279,
	279, 395, 395, 395, 272, 272, 64, 64, 64, 301,
	301, 301, 301, 66, 66, 67, 68, 68, 303, 303,
	304, 304, 69, 70, 82, 82, 82, 82, 82, 82,
	82, 105, 105, 105, 15, 15, 15, 15, 78, 78,
	78, 14, 14, 65, 65, 72, 392, 392, 393, 394,
	394, 394, 394, 73, 75, 31, 31, 31, 31, 31,
	31, 130, 130, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 125, 125, 125, 119, 119,
	410, 76, 77, 77, 123, 123, 123, 116, 116, 116,
	122, 122, 122, 16, 16, 17, 258, 258, 18, 18,
	127, 127, 129, 129, 129, 129, 129, 131, 131, 131,
	131, 131, 131, 131, 126, 126, 128, 128, 128, 128,
	293, 293, 293, 292, 292, 163, 163, 165, 164, 164,
	166, 166, 167, 167, 167, 167, 212, 212, 189, 189,
	251, 251, 252, 252, 250, 250, 257, 257, 253, 253,
	253, 253, 260, 260, 168, 168, 168, 168, 176, 176,
	177, 177, 178, 178, 302, 302, 298, 298, 298, 297,
	297, 182, 182, 182, 184, 183, 183, 183, 183, 185,
	185, 187, 187, 186, 186, 188, 193, 193, 192, 192,
	190, 190, 190, 190, 191, 191, 191, 191, 194, 194,
	140, 140, 140, 140, 140, 140, 140, 155, 155, 155,
	155, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 241, 241, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 149, 217, 217, 216, 216, 83, 83, 83,
	84, 84, 85, 85, 85, 85, 85, 86, 86, 86,
	86, 86, 141, 141, 88, 88, 87, 87, 207, 207,
	290, 290, 89, 90, 90, 93, 93, 92, 91, 91,
	97, 97, 94, 94, 96, 96, 95, 98, 98, 99,
	100, 100, 273, 273, 195, 195, 203, 203, 203, 203,
	196, 196, 196, 196, 196, 196, 196, 204, 204, 204,
	211, 205, 205, 201, 201, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 160, 160, 160, 160, 222, 222, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 148, 148, 161, 161, 161, 161, 162, 162,
	162, 162, 162, 162, 162, 310, 310, 115, 115, 115,
	115, 115, 115, 115, 115, 115, 115, 115, 115, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 411, 411,
	324, 324, 324, 324, 202, 202, 202, 202, 202, 121,
	121, 121, 121, 121, 307, 307, 307, 311, 311, 311,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 312, 312, 220, 220, 117,
	117, 218, 218, 219, 221, 221, 213, 213, 213, 213,
	215, 215, 198, 198, 198, 223, 223, 224, 224, 101,
	102, 102, 103, 103, 225, 225, 227, 226, 226, 228,
	229, 229, 229, 230, 230, 231, 231, 231, 47, 47,
	47, 47, 47, 42, 42, 42, 42, 43, 43, 43,
	43, 132, 132, 132, 132, 134, 134, 133, 133, 79,
	79, 80, 80, 80, 138, 138, 139, 139, 139, 136,
	136, 137, 137, 248, 248, 232, 232, 232, 239, 239,
	239, 235, 235, 237, 237, 237, 238, 238, 238, 236,
	245, 245, 247, 247, 246, 246, 242, 242, 243, 243,
	244, 244, 244, 240, 240, 197, 197, 197, 197, 197,
	249, 249, 249, 249, 261, 261, 208, 208, 210, 210,
	209, 209, 159, 262, 262, 266, 263, 263, 267, 267,
	267, 267, 255, 255, 255, 264, 264, 265, 265, 294,
	294, 294, 271, 271, 284, 284, 280, 280, 281, 281,
	274, 274, 286, 286, 286, 74, 206, 206, 362, 362,
	359, 289, 289, 291, 291, 295, 295, 299, 299, 296,
	296, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 407, 408, 305, 306, 306, 306,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	0, 1, 1, 1, 2, 3, 2, 3, 0, 1,
	3, 1, 4, 3, 3, 4, 3, 2, 3, 4,
	3, 4, 2, 7, 1, 3, 3, 3, 3, 1,
	2, 1, 1, 3, 2, 3, 3, 2, 5, 7,
	10, 9, 7, 8, 1, 1, 10, 11, 9, 8,
	8, 1, 1, 1, 3, 1, 3, 1, 3, 0,
	4, 3, 5, 4, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 2, 2, 6, 12,
	2, 0, 2, 0, 2, 1, 0, 2, 1, 3,
	3, 0, 1, 1, 3, 3, 6, 4, 7, 8,
	8, 8, 6, 3, 1, 1, 5, 0, 1, 1,
	1, 1, 2, 2, 2, 0, 1, 4, 4, 4,
	4, 4, 4, 2, 4, 1, 3, 1, 1, 3,
	4, 3, 3, 3, 5, 10, 0, 2, 0, 2,
	3, 5, 3, 4, 2, 3, 2, 3, 3, 3,
	3, 2, 2, 4, 4, 1, 1, 1, 1, 1,
	0, 2, 2, 3, 3, 2, 2, 2, 1, 1,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 3, 1, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 2, 2, 2, 2, 3,
	3, 3, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 5, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 3, 0, 5, 0,
	3, 5, 0, 1, 1, 0, 1, 0, 3, 3,
	2, 2, 2, 1, 2, 2, 0, 1, 0, 2,
	2, 5, 0, 1, 1, 2, 1, 3, 2, 1,
	1, 3, 3, 3, 0, 1, 4, 3, 3, 4,
	2, 0, 2, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 0, 1, 1, 3, 3, 4, 3, 1,
	3, 1, 7, 6, 7, 7, 8, 8, 0, 1,
	5, 2, 1, 1, 1, 0, 1, 3, 3, 1,
	1, 2, 2, 2, 0, 1, 1, 1, 2, 0,
	1, 0, 1, 1, 3, 2, 1, 2, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 4, 5, 0,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 1, 0, 2,
	0, 2, 0, 2, 2, 0, 2, 0, 1, 5,
	1, 3, 7, 1, 3, 3, 1, 2, 2, 2,
	5, 5, 5, 6, 8, 5, 5, 4, 4, 4,
	6, 5, 5, 5, 2, 2, 2, 2, 3, 3,
	3, 4, 3, 3, 1, 3, 5, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 3,
	4, 4, 2, 11, 3, 6, 8, 6, 6, 6,
	13, 8, 6, 10, 5, 5, 5, 7, 5, 5,
	5, 5, 5, 7, 7, 5, 5, 4, 4, 4,
	0, 6, 5, 6, 4, 5, 0, 8, 9, 0,
	3, 0, 1, 0, 3, 8, 4, 1, 3, 3,
	6, 7, 7, 8, 4, 0, 1, 0, 1, 3,
	3, 1, 1, 2, 1, 1, 0, 2, 0, 2,
	5, 3, 7, 4, 4, 4, 4, 3, 3, 3,
	7, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 0, 2, 2, 1, 3, 2, 0, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 3, 1,
	3, 3, 0, 2, 2, 2, 2, 2, 2, 2,
	4, 4, 3, 0, 1, 4, 3, 4, 4, 3,
	3, 3, 2, 1, 3, 3, 3, 5, 7, 7,
	6, 5, 3, 2, 3, 3, 3, 7, 3, 3,
	3, 3, 4, 7, 5, 2, 4, 4, 4, 4,
	4, 5, 5, 4, 4, 4, 4, 4, 4, 4,
	4, 2, 2, 4, 4, 4, 4, 4, 2, 3,
	3, 3, 3, 5, 2, 3, 3, 2, 3, 4,
	4, 4, 3, 4, 4, 5, 3, 0, 1, 0,
	1, 1, 1, 0, 2, 2, 0, 2, 2, 0,
	2, 0, 1, 1, 1, 1, 2, 1, 3, 1,
	1, 1, 1, 1, 2, 1, 1, 5, 0, 1,
	0, 1, 2, 3, 0, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 4, 4, 2, 2, 3, 1, 3, 2, 1,
	2, 1, 2, 2, 4, 3, 3, 6, 4, 7,
	6, 1, 3, 2, 2, 2, 2, 1, 1, 1,
	3, 2, 1, 1, 1, 0, 1, 1, 0, 3,
	0, 2, 0, 2, 1, 2, 2, 0, 1, 1,
	0, 1, 1, 5, 5, 4, 0, 2, 4, 4,
	0, 1, 0, 1, 2, 3, 4, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 2, 3, 5,
	0, 1, 2, 1, 1, 0, 1, 2, 1, 3,
	1, 1, 1, 4, 3, 1, 3, 4, 3, 7,
	0, 3, 0, 1, 1, 3, 1, 3, 1, 1,
	3, 3, 1, 3, 4, 4, 4, 3, 2, 4,
	0, 1, 0, 2, 0, 1, 0, 1, 2, 1,
	1, 1, 2, 2, 1, 2, 3, 2, 3, 2,
	2, 2, 1, 1, 3, 3, 0, 1, 1, 2,
	6, 5, 6, 6, 0, 2, 3, 3, 0, 2,
	3, 3, 3, 2, 3, 1, 6, 3, 4, 3,
	1, 3, 4, 5, 6, 3, 4, 5, 6, 3,
	4, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 3, 1, 1, 1, 2, 2, 2, 2, 1,
	1, 2, 7, 7, 6, 6, 2, 2, 1, 6,
	3, 3, 3, 1, 3, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 1, 1, 0, 1, 2, 5, 0, 3,
	0, 1, 4, 4, 2, 0, 1, 1, 2, 2,
	1, 1, 2, 2, 0, 1, 1, 1, 1, 5,
	1, 3, 0, 3, 1, 1, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 4, 6, 4, 4, 8, 6, 8,
	6, 5, 4, 10, 2, 2, 1, 2, 2, 2,
	4, 5, 5, 5, 5, 5, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 8, 8, 8, 6,
	5, 4, 4, 4, 4, 4, 7, 4, 4, 6,
	6, 6, 8, 6, 6, 4, 4, 3, 4, 6,
	6, 4, 4, 4, 6, 8, 6, 4, 6, 6,
	8, 10, 7, 8, 8, 9, 4, 4, 4, 4,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	4, 4, 6, 5, 9, 6, 9, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 6, 8, 10,
	12, 14, 6, 8, 8, 10, 12, 14, 6, 8,
	10, 12, 6, 8, 4, 4, 3, 4, 6, 6,
	4, 6, 4, 6, 8, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	0, 2, 3, 3, 4, 4, 4, 4, 4, 0,
	3, 4, 7, 3, 1, 1, 1, 0, 5, 5,
	2, 3, 1, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 2, 1, 1, 0, 1, 0, 1, 0,
	2, 1, 2, 4, 0, 2, 1, 1, 3, 5,
	1, 1, 1, 2, 2, 0, 3, 0, 2, 2,
	1, 3, 0, 1, 0, 1, 3, 1, 3, 2,
	0, 1, 1, 0, 1, 2, 4, 4, 0, 2,
	2, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 0, 3, 3, 3, 0, 3, 1, 1, 0,
	4, 0, 1, 1, 0, 3, 1, 3, 2, 1,
	1, 0, 1, 2, 4, 9, 3, 5, 0, 3,
	3, 0, 1, 0, 2, 2, 0, 2, 2, 2,
	0, 2, 1, 2, 3, 3, 0, 2, 1, 2,
	3, 4, 3, 0, 1, 2, 1, 5, 4, 4,
	1, 3, 3, 5, 0, 5, 1, 3, 1, 2,
	3, 4, 1, 1, 3, 3, 1, 3, 3, 3,
	3, 3, 1, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 2, 0, 3,
	0, 1, 0, 1, 1, 5, 0, 1, 0, 1,
	2, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -405, -76, -410, -7, -11, -19, -20, -21, -22,
	-23, -24, -25, -26, -27, -28, -29, -30, -62, -63,
	-64, -66, -67, -68, -69, -70, -14, -65, -31, -32,
	-71, -72, -73, -74, -75, -16, -17, -18, -9, -8,
	-13, 10, 11, -104, -33, 33, -38, -48, 225, -49,
	-39, 226, -50, 228, 227, 264, 229, 257, 75, 313,
	314, 316, 317, 318, 319, -105, 262, 263, 231, 37,
	46, 34, 35, 38, 235, 270, 271, 234, -10, -34,
	9, -407, 12, 445, 259, 258, 29, -12, 507, 87,
	-77, -406, 659, -248, -232, 23, 34, 30, -231, -227,
	-123, -232, 21, 19, 8, -76, -76, -76, 13, 14,
	-76, -347, -349, 87, 159, 87, -76, -55, -54, -52,
	-51, -53, -56, 32, -45, -46, -371, -44, -41, 230,
	227, 274, 123, 124, 264, 265, 266, 229, 248, 263,
	267, 262, 283, -40, 82, 34, 507, 510, -354, 226,
	232, 233, 228, 446, 126, 125, 76, -351, 368, 540,
	629, -56, 631, 101, 104, 630, 45, 238, 632, 633,
	634, 547, 635, 247, 636, 637, 638, 639, 645, 588,
	646, 647, 648, 127, 8, -76, -299, -295, 91, -288,
	504, 250, 538, 539, 299, 82, 42, 513, 365, 368,
	540, 475, 629, 313, 327, 321, 480, 481, 482, 348,
	340, 505, 541, 514, 302, 251, 287, 623, 338, 135,
	631, 306, 542, 265, 373, 374, 543, 375, 101, 316,
	412, 644, 305, 544, 642, 104, 630, 80, 474, 52,
	626, 45, 260, 336, 234, 332, 632, 288, 545, 516,
	281, 126, 123, 651, 37, 330, 51, 31, 641, 125,
	50, 633, 150, 546, 634, 547, 377, 355, 617, 49,
	378, 266, 548, 85, 271, 509, 309, 625, 379, 494,
	331, 380, 298, 640, 231, 549, 608, 600, 601, 381,
	382, 618, 360, 356, 361, 496, 550, 404, 479, 383,
	604, 605, 658, 53, 551, 552, 619, 124, 553, 79,
	635, 81, 325, 326, 554, 296, 249, 499, 500, 406,
	352, 457, 464, 465, 111, 112, 460, 113, 466, 114,
	467, 468, 469, 458, 115, 108, 459, 470, 471, 353,
	354, 116, 472, 110, 109, 461, 463, 117, 473, 247,
	36, 384, 506, 300, 59, 304, 275, 407, 47, 358,
	655, 46, 613, 501, 555, 616, 351, 347, 454, 54,
	556, 557, 558, 559, 476, 636, 350, 324, 346, 650,
	4, 293, 477, 637, 63, 233, 363, 362, 364, 282,
	403, 343, 560, 561, 562, 254, 83, 563, 333, 22,
	564, 565, 385, 289, 566, 57, 567, 568, 410, 263,
	569, 55, 638, 40, 570, 268, 652, 639, 571, 572,
	573, 574, 270, 575, 387, 576, 602, 603, 386, 357,
	359, 502, 277, 388, 508, 577, 310, 329, 267, 643,
	578, 255, 490, 491, 492, 493, 624, 498, 497, 269,
	274, 262, 411, 256, 579, 580, 581, 582, 583, 303,
	599, 584, 585, 317, 645, 455, 44, 586, 587, 588,
	589, 590, 297, 292, 405, 414, 62, 84, 370, 591,
	592, 622, 323, 290, 593, 314, 56, 646, 647, 648,
	284, 649, 483, 484, 485, 486, 10, 656, 657, 478,
	390, 127, 294, 295, 48, 344, 276, 594, 312, 307,
	595, 334, 335, 349, 322, 345, 315, 609, 278, 391,
	456, 264, 596, 413, 291, 366, 371, 308, 512, 495,
	283, 392, 621, 511, 487, 488, 342, 339, 285, 489,
	597, 393, 239, 279, 280, 598, 610, 394, 395, 301,
	396, 397, 398, 399, 400, 402, 311, 401, 606, 607,
	286, 510, 320, 337, 372, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 453, 237, -76, 237, -186, -295, 237,
	-264, 374, -285, 376, 389, 384, 394, 382, -276, 385,
	387, 277, -395, 404, 237, 391, 225, 377, 386, 395,
	396, 301, 402, 397, 311, 401, 286, 398, 399, 400,
	-378, 177, 634, 649, 135, 341, 381, 379, 405, 613,
	91, -301, 91, 92, 93, -288, 315, -303, 320, -289,
	-378, -288, 318, -76, -305, -305, -125, 613, 615, -205,
	-140, 143, -155, -158, -146, -150, -199, -200, -201, -202,
	-156, -215, -254, 166, 167, 174, 144, -211, -159, 27,
	503, 447, 446, 177, 32, -149, 220, 69, 70, 449,
	146, 58, 12, 422, 423, -157, 417, 424, 419, 474,
	476, 477, 478, 475, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 479, 451, 452, 118, 453, 108,
	110, 109, 454, 455, 456, 338, 501, 502, 496, 499,
	500, 498, 497, 353, 354, 457, 458, 459, 111, 112,
	113, 114, 115, 116, 117, 460, 463, 461, 462, 464,
	465, 466, 471, 472, 467, 468, 469, 470, 473, -85,
	-97, 529, 528, -98, -147, -148, -161, -162, -289, -295,
	242, 416, 236, 172, 445, -151, -144, -213, 107, 92,
	93, -8, -209, 415, 420, 421, 425, 418, 515, 517,
	532, 533, 535, 520, 525, 524, 527, 490, 491, 492,
	493, 494, 495, 600, 601, 602, 603, 604, 605, 606,
	607, -378, -288, 91, -153, -152, -195, 94, 99, 102,
	103, 105, -401, 260, 334, 335, 119, -407, 627, 90,
	95, 96, 97, 98, 120, 121, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 45, 390,
	390, -186, -76, -76, -76, -76, -225, -123, -227, -10,
	-8, -407, 9, -76, -8, -9, -13, -34, -36, 534,
	-35, -295, 100, -232, -248, 13, 162, 43, 51, -230,
	-231, -12, -8, -140, 20, 24, 25, -128, 168, -140,
	-295, -128, -274, 241, -76, -76, -263, -308, 315, -267,
	405, 613, 404, -255, -265, 91, -254, -264, 403, -348,
	159, -334, -338, -289, 252, -364, 248, -186, -357, -356,
	-289, -407, -124, -284, 238, 246, 245, 136, -382, 139,
	294, 416, 236, -51, -52, -53, -264, 176, 633, -106,
	269, 273, 88, 88, -338, -337, -336, -383, 273, 252,
	-363, -355, 244, 253, -344, 245, 246, -339, 238, 137,
	-383, -339, 243, 253, 248, 252, 273, 273, 127, 273,
	127, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	268, -345, 151, -345, 511, 511, -351, -383, 248, 238,
	-383, -383, 244, -286, -339, 240, 26, 240, 36, 36,
	-345, -345, -345, -264, 176, -345, -345, -345, -345, 281,
	281, -345, -345, -345, -345, -345, -345, -345, -345, -345,
	-345, -345, -345, -345, -345, -345, -345, -345, 237, -382,
	-132, 401, 301, 311, 82, -54, 283, -37, -186, -284,
	238, 239, -382, 270, -186, 221, -186, -278, 159, 16,
	-278, -275, 390, 388, 375, 380, -278, -278, -278, -278,
	284, 373, -340, 238, 36, 249, 390, 284, 373, 284,
	285, 284, 285, 383, 393, 284, -300, 15, 162, 416,
	378, 382, 277, 237, 278, 239, 392, 285, -300, 90,
	-279, 159, 284, 390, 280, -278, -278, -306, -407, -291,
	-289, -287, 230, 24, 142, 26, 28, 145, 177, 130,
	20, 146, 38, 232, 341, 248, 176, 244, 446, 225,
	73, 515, 417, 419, 415, 422, 448, 449, 416, 376,
	32, 14, 517, 29, 258, 25, 39, 170, 227, 149,
	518, 261, 27, 259, 118, 121, 520, 23, 76, 253,
	15, 246, 41, 17, 521, 522, 18, 242, 241, 162,
	238, 71, 12, 220, 30, 158, 67, 523, 137, 524,
	525, 526, 527, 131, 69, 159, 21, 653, 420, 421,
	34, 614, 503, 272, 172, 74, 60, 615, 143, 418,
	528, 529, 119, 530, 122, 77, 620, 139, 19, 72,
	43, 531, 273, 532, 243, 654, 533, 408, 534, 160,
	228, 445, 70, 161, 627, 535, 628, 236, 389, 9,
	450, 33, 257, 245, 129, 68, 536, 237, 148, 451,
	452, 240, 132, 120, 8, 136, 35, 13, 75, 78,
	423, 424, 425, 58, 128, 507, 147, 16, 537, 409,
	141, -378, 616, -306, -306, 33, 92, 240, -289, -186,
	-82, 608, 229, -130, 390, -118, 177, 634, 617, 618,
	619, 616, 387, 624, 622, 620, 284, 621, 88, 139,
	141, 142, 4, -140, 158, -196, 151, 152, 153, 154,
	155, 156, 157, 162, 143, 145, 159, -241, 140, 163,
	164, 165, 166, 167, 168, 169, 171, 170, 172, 173,
	160, 161, 176, 223, 224, -150, -150, -150, -150, -211,
	-217, -216, -407, -213, -378, -288, -295, -407, -407, -150,
	-273, -407, -407, -150, -407, -407, -407, -220, -140, -407,
	-407, -411, -407, -411, -411, -324, -407, -324, -407, -407,
	-407, -407, -407, -407, -407, -407, -407, -407, -407, -407,
	-407, -407, -407, -407, -407, -407, -407, -407, -407, -407,
	-407, -407, -407, -407, -407, -407, -407, -407, -407, -407,
	-407, -407, -407, -407, -407, -407, -407, -407, -407, -407,
	-407, -407, -407, -407, -407, -407, -407, -407, -407, -407,
	-407, -407, -407, -407, -407, -407, -407, -407, -407, -407,
	-407, -407, -407, -407, 221, -407, -407, -407, -407, -407,
	-324, -324, -324, -324, -324, -407, -407, -407, -407, -407,
	-407, -407, -407, -407, -407, -407, -407, -407, -407, 103,
	99, 102, 94, -215, 105, 90, 90, 90, 90, -8,
	-9, -205, -407, -305, -392, -393, -189, -186, -407, 301,
	-289, -289, 270, -230, -12, -8, -225, -231, -227, -8,
	-76, -116, -129, 64, 65, -131, 25, 39, 68, 66,
	24, -408, 89, -408, -248, -408, 88, -36, -251, 87,
	62, 44, 90, 90, 88, 22, -226, -228, -140, 15,
	-293, 4, -292, 26, -289, 90, 221, 15, -187, 30,
	-186, -274, -274, 88, 315, 91, -269, -268, 406, 408,
	151, -294, -289, 90, 32, 89, 88, -186, -313, -316,
	-318, -317, -319, -314, -315, 338, 339, 177, 342, 344,
	345, 346, 347, 348, 349, 350, 351, 352, 355, 33,
	260, 334, 335, 336, 337, 356, 357, 358, 359, 361,
	362, 363, 364, 321, 340, 505, 322, 323, 324, 325,
	326, 327, 329, 330, 331, 332, 333, -379, -378, 87,
	89, 88, -320, 87, -140, -132, 237, -378, 238, 238,
	238, -76, 445, -345, -345, -345, 268, 20, -44, -41,
	-371, 19, -40, -41, 230, 123, 124, 227, 87, -334,
	87, -343, -379, -378, 87, 137, 243, 136, -342, -339,
	-342, -343, -378, -213, -378, 137, 137, -378, -378, -260,
	-289, -260, -260, 24, -260, 24, -260, 24, 96, -289,
	-260, 24, -260, 24, -260, 24, -260, 24, -260, 24,
	32, 79, 80, 81, 32, 83, 84, 85, -213, -378,
	-378, -213, -334, -213, -186, -378, -264, 96, 96, 96,
	-345, -345, 96, 90, 90, 90, -345, -345, 96, 90,
	-297, -295, 90, 90, -384, 254, 298, 300, 96, 96,
	96, 96, 32, 90, -385, 32, 641, 640, 642, 643,
	644, 90, 96, 32, 96, 32, 96, -289, 87, -186,
	-138, 288, 225, 227, 230, 77, 90, 304, 305, 302,
	307, 308, 126, 125, -404, 312, 151, 45, 88, 240,
	237, -378, -280, 242, -280, -289, -296, -295, -287, 90,
	-140, -341, 15, 162, -300, -300, -278, -186, -341, -300,
	-278, -186, -278, -278, -278, -278, -300, -300, -300, -278,
	-295, -295, -186, -186, -186, -186, -186, -186, -186, -306,
	-279, -278, 616, 90, -272, 15, 77, -306, -306, -304,
	318, -78, -289, 90, -15, -11, -22, -21, -23, 151,
	88, 507, -179, -186, 616, 616, 616, 616, 616, 616,
	-140, -140, -140, -140, 530, -203, 119, 143, 120, 121,
	-158, -204, -209, -211, 106, 162, 145, 159, -241, -146,
	-150, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -307, -289, 90, 177, -154, -153,
	105, -401, -154, 504, 88, -216, 221, -140, -140, -378,
	-140, -289, -126, -128, -126, -140, -218, -219, 147, -213,
	-140, -408, -408, 96, 105, 168, -122, 25, 39, -122,
	-122, -122, -122, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -122, -289, -289, -115, -114, 427, 428,
	429, 430, 432, 433, 434, 437, 438, 442, 443, 426,
	444, 431, 436, 439, 440, 441, 435, 337, -140, -140,
	-140, -140, -140, -140, -83, -140, 130, 131, 132, -205,
	-140, -146, -140, -140, -140, -408, -140, -140, -140, -206,
	-205, -377, -376, -375, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -408, -140, -160,
	-144, 96, -256, 105, 92, -140, -140, -127, -126, -291,
	-296, -287, -288, -126, -127, -127, -126, -126, -140, -140,
	-140, -140, -140, -140, -140, -140, -408, -140, -140, -140,
	-140, -140, -248, -408, -205, 88, -394, 408, 409, 614,
	-298, 273, -297, 26, -206, 90, 15, -258, 78, -289,
	-230, -230, 64, 65, 60, -126, -131, -408, -35, 26,
	-250, -289, 63, 90, -325, -264, 365, 366, 177, -140,
	-140, 88, -229, 28, 29, -186, -292, 168, -296, -186,
	-259, 273, -186, -164, -166, -167, -168, -189, -212, -407,
	-169, 526, 523, 15, -179, -180, -188, -295, -267, -308,
	-269, 88, 407, 409, 410, 77, 122, -140, -326, 176,
	-353, -352, -351, -334, -336, -337, -338, 89, -326, -330,
	371, 370, -320, -320, -320, -320, -320, -325, -325, -325,
	-325, 87, 87, -320, -320, -320, -320, -328, 87, -328,
	-328, -329, 87, -329, -364, -140, -361, -360, -358, -359,
	247, 101, 598, 554, 507, 547, 588, 78, -356, -229,
	96, -408, -138, -281, 242, -362, -359, -378, -378, -378,
	-281, 91, 90, 91, 90, 91, 90, -107, -58, -1,
	653, 654, 655, 88, 20, -335, -334, -57, 298, -367,
	-368, 273, -363, -357, -343, 137, -342, -343, -343, -378,
	88, 30, 127, 127, 127, 127, 507, 227, 33, -282,
	546, 143, 598, 554, -334, -57, 240, 240, -307, -307,
	-307, 90, 90, -277, 649, -179, -134, 290, 151, 279,
	279, 237, 237, 292, -186, 303, 306, 304, 305, 302,
	307, 308, 24, 24, 24, 24, 24, 90, 291, 293,
	295, 281, -186, -186, -280, 77, -181, -186, 27, -295,
	-186, -278, -278, -186, -278, -278, -186, -289, 352, 609,
	610, 612, 611, -118, 408, 88, 507, 23, -119, 23,
	-407, 119, 120, 121, -204, -146, -150, -146, 142, 261,
	-407, -213, -408, -291, 26, 88, 78, -408, 88, 88,
	-408, -408, 88, 15, -221, -219, 149, -140, -408, 88,
	-408, -408, -408, -205, -140, -140, -140, -140, -408, -408,
	-408, -408, -408, -408, -408, -408, -408, -408, -205, 88,
	88, 15, -311, 26, -408, -408, -408, -408, -408, -220,
	-408, 15, -408, 78, 88, 162, 88, -408, -408, -408,
	88, 88, -408, -408, 88, 88, -408, 88, 88, 88,
	-408, 88, 88, 88, 88, -408, -408, -408, -408, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 88, -408,
	-90, 531, -408, -408, 88, -408, 88, -408, -407, 221,
	-408, -408, -408, -408, -408, 88, 88, 88, 88, 88,
	88, -408, -408, -408, 88, 88, -408, 88, -408, 88,
	-408, -393, 613, 409, -193, -192, -190, 75, 241, 76,
	-407, -297, -408, -154, -256, -257, -256, -198, -289, 96,
	105, -232, -163, -165, 15, -131, -211, 89, 88, -325,
	-236, -242, -275, -289, 90, 177, -327, 177, -327, 365,
	366, -228, 221, -194, 16, -197, 33, 58, -11, -407,
	-407, 33, 88, -182, -184, -183, -185, 67, 71, 73,
	68, 69, 70, 74, -302, 26, -164, -9, -8, -407,
	-407, -407, -186, -179, -409, 15, 78, -409, 88, 221,
	-268, -270, 411, 408, 414, -378, 90, -106, 88, -351,
	-338, -233, -135, 41, -331, 372, -325, 514, -325, -333,
	90, -333, 96, 96, 89, -47, -42, -43, 34, 82,
	-358, -345, 90, 40, -345, -345, -289, 89, -229, -134,
	-186, 143, 77, -362, -362, -362, -295, -2, 652, 658,
	137, 87, 375, 19, -250, 88, 89, -214, 299, 89,
	-108, -289, 89, 87, -343, -343, -289, -407, 237, 32,
	32, 598, 554, 546, -57, -214, -213, -378, -326, 651,
	650, 89, 239, 297, -139, 422, -136, 90, 91, -186,
	-186, -186, -186, -186, 230, 227, 398, -402, 309, -402,
	282, 240, -179, -186, 88, -81, 256, 251, -300, -300,
	34, -186, 408, 625, 623, -140, 142, 261, -158, -150,
	-146, -309, 177, 338, 260, 336, 332, 352, 343, 370,
	334, 371, 331, 330, 329, -309, -307, -205, -128, -140,
	-140, 150, -140, 148, -140, -408, -408, -408, -408, -408,
	-225, -140, -140, -140, -408, 177, 338, 15, -140, -307,
	-140, -140, -140, -140, -140, -375, -140, -205, -140, -205,
	-140, -140, -140, -140, -140, -376, -376, -376, -376, -376,
	-205, -205, -205, -205, -407, -289, -93, -92, -91, 581,
	241, -90, -160, -93, -160, -127, -291, -140, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -190, -339, -339,
	-339, -260, 88, -271, 23, 15, 58, 58, -163, -194,
	-164, -131, -289, -239, 608, -245, 47, -243, -244, 48,
	-240, 49, 57, -327, -327, 168, -230, -140, -261, 77,
	-262, -266, -213, -208, -210, -209, -407, -249, -408, -289,
	-260, -262, -166, -167, -167, -166, -167, 67, 67, 67,
	72, 67, 72, 67, -183, -295, -408, -408, -9, -9,
	-140, -298, 78, -164, -164, -188, -295, 168, 408, 412,
	413, -351, -400, 119, 143, 32, 77, 368, 101, -398,
	176, 543, 593, 598, 554, 547, 588, -399, 243, 136,
	137, 255, 26, 42, 89, 88, 89, 88, 89, 88,
	-283, -282, -43, -42, -345, -345, 96, -378, 90, 90,
	239, 27, -186, 77, 77, 77, -109, 656, 96, 87,
	-3, 82, -140, 87, 20, -334, -213, -369, -321, -370,
	-322, -323, -5, -6, -346, -112, 58, 101, -61, 45,
	238, 636, 637, 127, -407, 649, -361, -250, -365, -367,
	-186, -143, -407, -142, -144, -151, 166, 167, 260, 334,
	335, -214, -186, -133, 288, 296, 87, -137, 92, -381,
	78, 279, 368, 279, 90, -403, 310, 90, -403, -186,
	-81, -47, -186, -278, -278, 34, -378, -408, -158, -150,
	-121, 162, 507, -312, 513, -320, -320, -320, -329, -320,
	326, -320, 326, -320, -408, -408, -408, 88, -408, 23,
	-408, -140, 88, -117, 450, 88, 88, -408, 87, 87,
	-140, -408, -408, -408, 88, -408, -408, -408, -408, -408,
	88, -408, -408, -408, 88, -310, 599, -408, -408, -408,
	-408, -408, -408, -408, -408, -408, -408, -89, -290, -289,
	-90, 563, 563, -408, -90, -222, 88, -408, -408, 88,
	-408, 88, 88, -408, 88, -408, 88, -408, -408, -408,
	-408, 88, -191, 23, -191, -191, -408, -256, -186, -194,
	-223, 17, -236, 52, 344, -247, -246, 56, 48, -244,
	20, 50, 20, 31, -261, 88, 151, 88, -408, -408,
	88, 58, 221, -408, -194, -177, -176, 77, 78, -178,
	77, -176, 67, 67, -251, -408, -408, 88, -259, -164,
	-194, -194, 221, 119, -407, -145, -157, -143, 13, 90,
	90, -378, -397, 640, 641, 32, 96, -345, -345, 137,
	137, -186, 87, -325, 90, -325, 96, 96, 32, 83,
	84, 85, 32, 79, 80, 81, -186, -186, -186, -186,
	-366, 87, 20, -140, 87, 151, 89, -250, -250, 275,
	162, -345, 634, 281, 281, -345, -345, -345, -111, -110,
	656, 89, -408, 88, -332, 507, 510, -140, -152, -152,
	-251, 89, -374, 507, -380, -289, -289, -289, -289, 96,
	98, -408, 505, 74, 508, -408, -325, -140, -140, -140,
	-230, 90, -140, -140, 96, 96, -408, -140, -205, -140,
	-408, -174, -173, -175, 617, 119, 32, -309, -408, -207,
	273, -96, -95, -94, 15, -408, -140, -140, -140, -140,
	-140, -140, -140, -407, 67, 19, 17, -407, -407, -298,
	-223, -224, 18, 20, -237, 54, -235, 53, -235, -246,
	20, 20, 90, 20, 90, 137, -266, -140, -210, 58,
	-11, -289, -208, -289, -225, -140, 87, -140, -154, -194,
	-194, -140, -200, 474, 476, 477, 478, 475, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 479, 453,
	108, 110, 109, 454, 455, 456, 338, 501, 502, 496,
	499, 500, 498, 497, 353, 354, 457, 458, 459, 111,
	112, 113, 114, 115, 116, 117, 460, 463, 461, 464,
	465, 466, 471, 472, 467, 468, 469, 470, 473, 490,
	491, 492, 493, 494, 495, 600, 601, 602, 603, 604,
	605, 606, 607, 90, 90, 87, -140, 89, 89, -251,
	-365, -58, 89, -252, -250, 96, 89, 276, -209, -407,
	90, -345, -345, -345, 96, 96, -297, -408, 88, -289,
	-399, -367, 511, 511, -408, 26, -373, -372, -291, 87,
	78, 63, 506, 509, -408, -408, 88, -408, -408, -408,
	89, 89, -408, -408, -408, 88, -408, -173, -175, -408,
	77, -154, -225, 20, -93, 298, 300, -93, -408, 88,
	-408, -408, 88, -408, 88, -408, -408, -253, -408, -289,
	243, 20, 20, -253, -253, -193, -224, -103, -102, -101,
	537, -140, -205, -238, 55, 77, 122, 90, 90, 90,
	13, -208, 221, -230, -250, -171, 375, -225, -408, -250,
	89, 26, 89, 658, 137, 89, -209, -120, -407, 272,
	-297, 90, 90, -110, -113, -11, 88, 151, -250, -186,
	63, -140, -205, -408, 77, 518, 617, -88, -87, -84,
	628, 654, -205, -90, -90, -140, -140, -140, 88, -408,
	-408, -408, -103, 88, -100, -99, -289, 77, 122, -262,
	-289, 89, -408, -407, -230, 89, -234, -11, 87, -3,
	272, -321, -370, -322, -323, -5, -6, -346, -79, 507,
	-372, -350, -291, 90, 96, 89, 507, -408, -408, -86,
	145, 626, 596, -141, -152, -149, 220, -408, 88, -408,
	88, -408, 88, -289, 243, -101, 88, 26, -298, -172,
	-170, -289, 560, -390, -389, 503, -400, -396, 119, 143,
	101, -398, 598, 554, 128, 129, -79, -140, 87, -408,
	-80, 287, 613, -381, 508, -86, 627, 574, 549, 574,
	549, -140, -140, -140, -99, -407, -408, 88, 23, -313,
	-60, 571, -387, -388, 77, -391, 381, 570, 591, 119,
	90, 89, -250, 248, -374, 509, 142, -408, 88, -408,
	88, -408, -89, -170, 567, -326, -154, -388, 77, -387,
	77, 14, 13, -4, 657, 89, 289, -86, -140, -140,
	-408, -59, 27, -171, -386, 256, 251, 254, 33, -386,
	96, -4, -408, -408, 571, 250, 32, 119, -154, -174,
	-173, -173,
}

var yyDef = [...]int{
	850, -2, -2, 852, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 69, 71,
	72, 850, 850, 850, 0, 850, 0, 0, 850, -2,
	-2, 850, 1467, 0, 850, 0, 0, -2, 777, 783,
	0, 785, -2, 0, 0, 850, 2016, 2016, 845, 0,
	0, 0, 0, 0, 850, 850, 850, 850, 1324, 49,
	850, 0, 84, 85, 801, 802, 803, 64, 0, 2014,
	851, 1, 3, 70, 74, 0, 0, 0, 57, 1333,
	0, 77, 0, 0, 854, 0, 0, 1450, 850, 850,
	0, 116, 117, 0, 0, 0, -2, 120, -2, 149,
	150, 151, 0, 156, 590, 510, 562, 508, 547, -2,
	494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 513, 384, 384, 0, 0, -2, 494,
	494, 494, 1452, 0, 0, 0, 544, 446, 384, 384,
	384, 0, 384, 384, 384, 384, 0, 0, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 1351, 155, 1468, 1465, 1466,
	1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629,
	1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639,
	1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649,
	1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659,
	1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669,
	1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679,
	1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689,
	1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699,
	1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709,
	1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719,
	1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729,
	1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739,
	1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749,
	1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759,
	1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769,
	1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779,
	1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789,
	1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799,
	1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809,
	1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819,
	1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829,
	1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839,
	1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849,
	1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859,
	1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869,
	1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879,
	1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889,
	1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899,
	1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909,
	1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919,
	1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929,
	1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939,
	1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949,
	1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959,
	1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969,
	1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979,
	1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989,
	1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
	2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009,
	2010, 2011, 2012, 2013, 0, 1444, 0, 703, 953, 0,
	766, 766, 0, 766, 766, 766, 766, 0, 0, 0,
	715, 0, 0, 0, 0, 763, 0, 731, 732, 0,
	763, 0, 738, 769, 0, 0, 744, 766, 766, 747,
	2017, 0, 2017, 2017, 1435, 0, 760, 758, 772, 773,
	39, 776, 779, 780, 781, 782, 784, 0, 789, 792,
	1461, 1462, 0, 794, 813, 814, 0, 846, 847, 44,
	1101, 0, 975, 980, 991, 1006, 1007, 1008, 1009, 1010,
	1012, 1013, 1014, 0, 0, 0, 0, 1019, 1020, 0,
	0, 0, 0, 0, 1082, 1028, 0, 0, 0, 0,
	1297, 0, 0, 1258, 1258, 1116, 1258, 1260, 1260, 1668,
	1804, 1812, 1929, 1631, 1636, 1637, 1638, 1922, 1923, 1924,
	1925, 1964, 1965, 1969, 1728, 0, 0, 0, 2013, 1765,
	1773, 1774, 1798, 1895, 1950, 1648, 1793, 1861, 1725, 1747,
	1748, 1877, 1878, 1769, 1770, 1751, 1763, 1766, 1754, 1755,
	1757, 1759, 1764, 1771, 1777, 1756, 1776, 1775, 0, 1752,
	1753, 1758, 1768, 1772, 1760, 1761, 1762, 1767, 1778, 0,
	0, 0, 0, 0, 1197, 1198, 1199, 1200, 0, 0,
	0, 0, 0, 0, 0, 280, 281, 1310, 1311, 42,
	43, 1100, 1422, 1260, 1260, 1260, 1260, 1260, 1042, 1043,
	1044, 1045, 1046, 1070, 1071, 1077, 1078, 1872, 1873, 1874,
	1875, 1709, 1959, 1717, 1718, 1856, 1857, 1730, 1731, 1988,
	1989, -2, -2, -2, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 1672, 1941, 1942, 217, 0, 0, 285,
	286, 282, 283, 284, 1084, 1085, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257, 258, 259, 260, 261,
	262, 263, 264, 265, 266, 267, 268, 269, 270, 271,
	272, 273, 274, 275, 276, 277, 278, 279, 2016, 0,
	823, 0, 0, 0, 0, 0, 1333, 0, 1325, 1324,
	62, 0, 850, -2, 0, 0, 0, 0, 46, 0,
	51, 910, 853, 76, 75, 1373, 0, 0, 0, 58,
	1334, 66, 68, 1335, 0, 855, 856, 0, 886, 890,
	0, 0, 0, 1451, 1450, 1450, 101, 0, 0, 1426,
	113, 114, 115, 0, 0, 1432, 1433, 1437, 1438, 0,
	0, 167, 168, 0, 40, 411, 0, 163, 0, 404,
	345, 0, 1351, 0, 0, 0, 0, 0, 850, 0,
	1445, 144, 145, 152, 153, 154, 384, 384, 384, 559,
	0, 0, 155, 155, 517, 518, 519, 0, 0, -2,
	409, 0, 495, 0, 0, 398, 398, 402, 400, 401,
	0, 0, 0, 0, 0, 0, 0, 0, 536, 0,
	537, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	651, 0, 385, 0, 557, 558, 447, 0, 0, 0,
	0, 0, 0, 0, 0, 1453, 1454, 0, 534, 535,
	0, 0, 0, 384, 384, 0, 0, 0, 0, 384,
	384, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 143,
	1364, 0, 0, 505, 0, -2, 0, 695, 0, 0,
	0, 1446, 1446, 0, 702, 0, 704, 705, 0, 0,
	706, 0, 763, 763, 761, 762, 708, 709, 710, 711,
	766, 0, 0, 393, 394, 395, 763, 766, 0, 766,
	766, 766, 766, 763, 763, 763, 766, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2017, 769, 766, 0,
	739, 0, 740, 741, 742, 745, 746, 748, 2018, 2019,
	1463, 1464, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478,
	1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488,
	1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498,
	1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508,
	1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518,
	1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528,
	1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538,
	1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548,
	1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558,
	1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568,
	1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578,
	1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588,
	1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598,
	1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608,
	1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618,
	1619, 2017, 2017, 752, 756, 1436, 778, 790, 793, 808,
	48, 1716, 800, 825, 826, 831, 0, 0, 0, 0,
	837, 838, 839, 0, 0, 842, 843, 844, 0, 0,
	0, 0, 0, 973, 0, 0, 1090, 1091, 1092, 1093,
	1094, 1095, 1096, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	992, 993, 0, 0, 0, 1015, 1016, 1017, 1018, 1021,
	0, 1033, 0, 1035, 1306, -2, 0, 0, 0, 1026,
	1027, 0, 0, 0, 0, 0, 0, 0, 1298, 0,
	0, 1114, 0, 1115, 1117, 1118, 0, 1119, 860, 860,
	860, 860, 860, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 860, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1456, 131, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 870, 0, 0, 870, 870, 0, 0,
	210, 211, 212, 213, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	230, 231, 232, 233, 234, 287, 235, 236, 237, 1100,
	0, 0, 0, 45, 815, 816, 0, 936, 1456, 0,
	0, 866, 0, 56, 65, 67, 1333, 60, 1333, 0,
	872, 0, 0, -2, -2, 873, 879, 880, 881, 882,
	883, 53, 2015, 54, 0, 73, 0, 47, 0, 0,
	0, 0, 357, 1376, 0, 0, 1326, 1327, 1330, 0,
	887, 1810, 891, 0, 893, 894, 0, 0, 99, 0,
	952, 0, 0, 0, 0, 1434, 103, 104, 0, 0,
	0, 368, 1439, 1440, 1441, -2, 391, 0, 368, 352,
	295, 296, 297, 345, 299, 345, 345, 345, 345, 357,
	357, 357, 357, 328, 329, 330, 331, 332, 0, 0,
	314, 345, 345, 345, 345, 335, 336, 337, 338, 339,
	340, 341, 342, 300, 301, 302, 303, 304, 305, 306,
	307, 308, 347, 347, 347, 349, 349, 0, 41, 0,
	372, 0, 1330, 0, 0, 1364, 1448, 1458, 0, 0,
	0, 1448, 122, 0, 0, 0, 560, 601, 511, 548,
	561, 0, 514, 515, -2, 0, 0, 494, 0, 496,
	0, 392, 0, -2, 0, 402, 0, 398, 402, 399,
	402, 390, 403, 538, 539, 540, 0, 542, 543, 631,
	922, 0, 0, 0, 0, 0, 637, 638, 639, 0,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	549, 550, 551, 552, 553, 554, 555, 556, 0, 0,
	0, 0, 496, 0, 545, 0, 0, 448, 449, 450,
	0, 0, 453, 454, 455, 456, 0, 0, 459, 460,
	461, 939, 940, 462, 463, 488, 489, 490, 464, 465,
	466, 467, 468, 469, 470, 482, 483, 484, 485, 486,
	487, 471, 472, 473, 474, 475, 476, 479, 0, 137,
	1355, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 587, 588, 589, 0, 0, 0, 0, 0,
	1446, 0, 0, 0, 0, 869, 954, 1469, 1470, 767,
	768, 0, 396, 397, 766, 766, 712, 753, 0, 766,
	716, 754, 717, 719, 718, 720, 733, 734, 766, 723,
	764, 765, 724, 725, 726, 727, 728, 729, 730, 749,
	735, 736, 737, 770, 0, 774, 775, 750, 751, 0,
	791, 811, 809, 810, 812, 804, 805, 806, 807, 0,
	0, 0, 828, 95, 833, 834, 835, 836, 848, 841,
	1102, 970, 971, 972, 0, 974, 977, 0, 1086, 1088,
	979, 981, 1097, 1098, 1099, 0, 0, 0, 0, 0,
	985, 989, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1011, 1274, 1275, 1276, 1030, 288,
	289, 0, 1031, 0, 0, 0, 0, 0, 0, 0,
	1101, 1032, 0, 884, 0, 0, 1304, 1301, 0, 0,
	0, 1259, 1261, 0, 0, 0, 0, 861, 862, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1237, 1238, 1239,
	1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249,
	1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1277, 0,
	0, 0, 0, 0, 1297, 0, 1037, 1038, 1039, 0,
	0, 0, 0, 0, 0, 1157, 0, 0, 0, 0,
	1457, 0, 132, 133, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1201, 1202, 1203, 1204, 38, 0, 0, 0, 871, 1308,
	0, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1226, 0, 0, 0,
	0, 0, 0, 1420, 0, 0, 818, 819, 821, 0,
	956, 0, 937, 0, 0, 824, 0, 865, 0, 868,
	59, 61, 877, 878, 0, 895, 874, 55, 50, 0,
	0, 914, 1374, 357, 1396, 0, 366, 366, 363, 1336,
	1337, 0, 1329, 1331, 1332, 78, 892, 888, 0, 968,
	0, 0, 951, 0, 898, 900, 901, 902, 934, 0,
	905, 0, 0, 0, 0, 0, 97, 953, 1427, 0,
	102, 0, 0, 107, 108, 1428, 1429, 1430, 1431, 0,
	590, -2, 443, 169, 171, 172, 173, 164, -2, 355,
	353, 354, 298, 357, 357, 322, 323, 324, 325, 326,
	327, 0, 0, 315, 316, 317, 318, 309, 0, 310,
	311, 312, 0, 313, 410, 0, 1338, 373, 374, 376,
	384, 0, 379, 380, 0, 384, 384, 0, 405, 406,
	0, 1330, 1355, 0, 0, 0, 1459, 1458, 1458, 1458,
	0, 157, 158, 159, 160, 161, 162, 626, 0, 0,
	602, 624, 625, 155, 0, 0, 165, 498, 497, 0,
	658, 0, 408, 0, 0, 402, 402, 387, 388, 541,
	0, 0, 633, 634, 635, 636, 0, 0, 0, 527,
	437, 0, 528, 529, 496, 498, 0, 0, 368, 451,
	452, 457, 458, 477, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 574, 575, 576, 579, 581,
	500, 585, 578, 580, 582, 500, 586, 506, 1352, 1353,
	1354, 0, 0, 696, 0, 0, 434, 93, 1447, 701,
	763, 722, 755, 763, 714, 721, 743, 787, 795, 796,
	797, 798, 799, 832, 0, 0, 0, 0, 840, 0,
	0, 978, 1087, 1089, 982, 0, 986, 990, 0, 0,
	0, 1036, 1034, 1308, 0, 0, 0, 1083, 0, 0,
	1105, 1106, 0, 0, 0, 1302, 0, 0, 1112, 0,
	1262, 1263, 1120, 0, 0, 0, 0, 0, 1126, 1127,
	1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1324, 0,
	0, 0, 0, 0, 1141, 1142, 1143, 1144, 1145, 0,
	1147, 0, 1148, 0, 0, 0, 0, 1155, 1156, 1158,
	0, 0, 1161, 1162, 0, 0, 1163, 0, 0, 0,
	1167, 0, 0, 0, 0, 1176, 1177, 1178, 1179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1190,
	1191, 0, 1065, 0, 0, 1065, 0, 1103, 870, 0,
	1264, 1265, 1266, 1267, 1268, 0, 0, 0, 0, 0,
	0, 1224, 1225, 1227, 0, 0, 1230, 0, 1232, 0,
	1421, 817, 820, 822, 908, 957, 958, 0, 0, 0,
	0, 938, 1455, 863, 864, 867, 916, 0, 1312, 0,
	0, 895, 968, 896, 0, 875, 52, 911, 0, 1378,
	1377, 1390, 1403, 366, 366, 360, 361, 367, 362, 364,
	365, 1328, 0, 1333, 0, 1414, 0, 0, 1406, 0,
	0, 0, 0, 0, 0, 0, 0, 941, 0, 0,
	944, 0, 0, 0, 0, 935, 0, 0, 0, 0,
	0, 0, -2, 0, 0, 91, 92, 0, 0, 0,
	105, 106, 0, 0, 112, 369, 370, 146, 155, 445,
	170, 418, 0, 0, 294, 356, 319, 320, 321, 0,
	343, 0, 0, 0, 439, 118, 1342, 1341, 384, 384,
	375, 0, 378, 0, 0, 0, 1460, 346, 407, 0,
	136, 0, 0, 0, 0, 0, 142, 596, 0, 0,
	603, 0, 0, 0, 509, 0, 520, 521, 0, 630,
	-2, 692, 372, 0, 386, 389, 923, 0, 0, 522,
	0, 525, 526, 438, 498, 531, 532, 546, 533, 480,
	481, 478, 0, 0, 1365, 1366, 1371, 1369, 1370, 123,
	567, 569, 568, 572, 0, 0, 0, 502, 0, 502,
	565, 0, 434, 1338, 0, 700, 435, 436, 766, 766,
	827, 96, 0, 830, 0, 0, 0, 0, 983, 987,
	1269, 1295, 345, 345, 1282, 345, 349, 1285, 345, 1287,
	345, 1290, 345, 1293, 1294, 0, 0, 0, 885, 0,
	0, 1111, 1305, 0, 0, 1121, 1122, 1123, 1124, 1125,
	1299, 0, 0, 0, 1140, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 134, 135, 0, 0, 0,
	0, 0, 0, 1235, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1060, 1064, 0, 1066, 1067, 0,
	0, 1193, 0, 0, 1205, 0, 1309, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 959, 964, 964,
	964, 0, 0, 0, 1442, 1443, 1313, 1314, 968, 1315,
	897, 876, 915, 1396, 0, 1389, 0, -2, 1398, 0,
	0, 0, 1404, 358, 359, 889, 79, 969, 82, 0,
	1414, 1423, 0, 1405, 1416, 1418, 0, 0, 0, 1410,
	0, 968, 899, 930, 932, 0, 927, 942, 943, 945,
	0, 947, 0, 949, 950, 910, 904, 906, 0, 0,
	0, 99, 0, 968, 968, 98, 0, 955, 109, 110,
	111, 444, 174, 179, 0, 0, 0, 184, 0, 186,
	0, 0, 0, 191, 192, 384, 384, 419, 0, 291,
	293, 0, 0, 177, 357, 0, 357, 0, 350, 0,
	420, 440, 1339, 1340, 0, 0, 377, 381, 382, 383,
	0, 1449, 138, 0, 0, 0, 599, 0, 627, 0,
	0, 0, 0, 0, 0, 166, 499, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 0, 384, 0, 0,
	0, 384, 384, 384, 0, 684, 371, 0, 0, 655,
	652, 523, 0, 215, 216, 218, 0, 0, 0, 0,
	0, 530, 910, 1356, 1357, 1358, 0, 1368, 1372, 126,
	0, 0, 0, 0, 577, 583, 0, 501, 584, 697,
	698, 699, 94, 707, 713, 829, 849, 976, 984, 988,
	0, 0, 0, 0, 1296, 1280, 357, 1283, 1284, 1286,
	1288, 1289, 1291, 1292, 1024, 1025, 1029, 0, 1108, 0,
	1110, 1303, 0, 1333, 0, 0, 0, 1139, 0, 0,
	0, 1150, 1149, 1151, 0, 1153, 1154, 1159, 1160, 1164,
	0, 1166, 1168, 1169, 0, 0, 0, 1180, 1181, 1182,
	1183, 1184, 1185, 1186, 1187, 1188, 1189, 0, 1058, 1061,
	1192, 1068, 1069, 1074, 1195, 0, 0, 1104, 1207, 0,
	1212, 0, 0, 1218, 0, 1222, 0, 1228, 1229, 1231,
	1233, 0, 0, 0, 0, 0, 936, 917, 63, 1315,
	1317, 0, 1383, 1381, 1381, 1391, 1392, 0, 0, 1399,
	0, 0, 0, 0, 83, 0, 0, 0, 1419, 0,
	0, 0, 0, 100, 1324, 924, 931, 0, 0, 925,
	0, 926, 946, 948, 903, -2, 907, 0, 968, 968,
	89, 90, 0, 180, 0, 182, 208, 209, 0, 185,
	187, 188, 189, 195, 196, 197, 190, 0, 0, 290,
	292, 0, 0, 333, 344, 334, 0, 0, 1343, 1344,
	1345, 1346, 1347, 1348, 1349, 1350, 910, 139, 140, 141,
	591, 0, 601, 0, 912, 0, 594, 0, 512, 0,
	0, 0, 384, 384, 384, 0, 0, 0, 0, 669,
	0, 0, 632, 0, 640, 0, 0, 0, 219, 220,
	0, 1367, 566, 0, 124, 125, 0, 0, 571, 503,
	504, 1022, 0, 0, 0, 1023, 1281, 0, 0, 0,
	0, 1300, 0, 0, 0, 0, 1146, 0, 0, 0,
	1172, 0, 0, 0, 621, 622, 0, 1236, 1063, 1324,
	0, 1065, 1075, 1076, 0, 1065, 1206, 0, 0, 0,
	0, 0, 0, 0, 965, 0, 0, 0, 0, 956,
	1317, 1322, 0, 0, 1386, 0, 1379, 1382, 1380, 1393,
	0, 0, 1400, 0, 1402, 0, 1424, 1425, 1417, 0,
	1409, 1412, 1408, 1411, 1333, 928, 0, 933, 0, 1324,
	88, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 0, 0, 348, 351, 0,
	0, 0, 592, 0, 913, 604, 595, 0, 682, 0,
	686, 0, 0, 0, 689, 690, 691, 668, 0, 672,
	412, 656, 653, 654, 524, 0, 127, 128, 0, 0,
	0, 1270, 0, 1273, 1107, 1109, 0, 1136, 1137, 1138,
	1278, 1279, 1152, 1165, 1170, 0, 1173, 0, 0, 1174,
	0, 623, 1054, 0, 0, 1072, 1073, 0, 1208, 0,
	1213, 1214, 0, 1219, 0, 1223, 1234, 0, 961, 918,
	919, 966, 967, 0, 0, 909, 1322, 81, 1323, 1320,
	0, 1318, 1316, 1375, 0, 1384, 1385, 1394, 1395, 1401,
	0, 1407, 0, 86, 0, 0, 0, 1333, 181, 0,
	200, 0, 600, 0, 603, 593, 680, 681, 0, 693,
	685, 687, 688, 670, -2, 1359, 0, 0, 0, 573,
	1271, 0, 0, 1175, 0, 619, 620, 1062, 1055, 0,
	1040, 1041, 1059, 1194, 1196, 0, 0, 0, 0, 960,
	962, 963, 80, 0, 1319, 1080, 0, 1387, 1388, 1415,
	1413, 929, 936, 0, 87, 425, 418, 1359, 0, 0,
	0, 673, 674, 675, 676, 677, 678, 679, 563, 1361,
	129, 130, 491, 492, 493, 123, 0, 1113, 1171, 1056,
	0, 0, 0, 0, 1052, 1053, 0, 1209, 0, 1215,
	0, 1220, 0, 920, 921, 1321, 0, 0, 605, 0,
	607, 0, -2, 413, 426, 0, 175, 201, 202, 0,
	0, 205, 206, 207, 198, 199, 119, 0, 0, 694,
	0, 1362, 1363, 126, 0, 0, 1047, 1048, 1049, 1050,
	1051, 0, 0, 0, 1081, 1060, 606, 0, 0, 368,
	0, 616, 414, 415, 0, 421, 422, 423, 424, 203,
	204, 628, 0, 0, 570, 1272, 0, 1210, 0, 1216,
	0, 1221, 0, 608, 609, 617, 0, 416, 0, 417,
	0, 0, 0, 597, 0, 628, 1360, 1057, 0, 0,
	1079, 0, 618, 614, 427, 429, 430, 0, 0, 428,
	629, 598, 1211, 1217, 0, 431, 432, 433, 610, 611,
	612, 613,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 144, 3, 3, 3, 171, 163, 3,
	87, 89, 168, 166, 88, 167, 221, 169, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 659,
	152, 151, 153, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 173, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 174,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 141, 142, 143, 145, 146,
	147, 148, 149, 150, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 164, 165, 170, 172, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:601
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:614
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:615
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:619
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:655
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:661
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:667
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:672
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:676
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:682
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:686
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:692
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:698
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:704
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:708
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:713
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:717
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:723
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:727
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:733
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:739
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:743
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:747
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:770
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:776
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:781
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:787
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:794
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:800
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:807
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 63:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:811
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:817
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:821
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:825
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:829
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:833
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:839
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:843
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:848
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:852
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:858
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:862
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:867
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:873
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:879
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:886
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:892
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:900
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:904
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:910
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:922
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:934
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:938
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:944
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:950
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:954
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:958
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:962
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:967
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:968
		{
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:972
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:976
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:982
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:986
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:992
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:996
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 99:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1001
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1005
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1011
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1017
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1021
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: NoScope}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:1027
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1031
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1037
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1041
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1045
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1051
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1055
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1059
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1063
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1069
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1073
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1077
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1083
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1089
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1096
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1105
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1109
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1116
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1120
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1125
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1129
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1135
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 126:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1140
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1145
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1151
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1156
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1162
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 131:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1167
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1171
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1177
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1181
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1187
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 136:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1193
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1200
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1207
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1212
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1217
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1222
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1229
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1236
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1247
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1254
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1258
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1264
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1268
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1272
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1276
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1280
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1284
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 155:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1290
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1294
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1300
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1304
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1310
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1314
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1320
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1324
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1330
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1334
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1340
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1344
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1350
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1355
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1360
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1364
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1369
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1373
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1377
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 174:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1388
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1397
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1406
		{
			yyVAL.str = ""
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1410
		{
			yyVAL.str = ""
		}
	case 178:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1419
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1423
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1429
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1435
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1440
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1445
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1450
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1455
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1460
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1465
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1469
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1474
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1478
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1483
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1489
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1495
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 194:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1499
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1505
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1509
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1513
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1519
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1523
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1528
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1532
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1537
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1543
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1549
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1554
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1559
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1565
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1573
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1580
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1584
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1588
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1592
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1596
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1606
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1613
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1617
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1623
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1627
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1631
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1635
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1639
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1643
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1647
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1651
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1656
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1660
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1664
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1668
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1672
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1676
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1681
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1685
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1689
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1695
		{
			yyVAL.str = Armscii8Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1699
		{
			yyVAL.str = ASCIIStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1703
		{
			yyVAL.str = Big5Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1707
		{
			yyVAL.str = UBinaryStr
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1711
		{
			yyVAL.str = Cp1250Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1715
		{
			yyVAL.str = Cp1251Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1719
		{
			yyVAL.str = Cp1256Str
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1723
		{
			yyVAL.str = Cp1257Str
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1727
		{
			yyVAL.str = Cp850Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1731
		{
			yyVAL.str = Cp852Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1735
		{
			yyVAL.str = Cp866Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1739
		{
			yyVAL.str = Cp932Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1743
		{
			yyVAL.str = Dec8Str
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1747
		{
			yyVAL.str = EucjpmsStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1751
		{
			yyVAL.str = EuckrStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1755
		{
			yyVAL.str = Gb18030Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1759
		{
			yyVAL.str = Gb2312Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1763
		{
			yyVAL.str = GbkStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1767
		{
			yyVAL.str = Geostd8Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1771
		{
			yyVAL.str = GreekStr
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1775
		{
			yyVAL.str = HebrewStr
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1779
		{
			yyVAL.str = Hp8Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1783
		{
			yyVAL.str = Keybcs2Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1787
		{
			yyVAL.str = Koi8rStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1791
		{
			yyVAL.str = Koi8uStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1795
		{
			yyVAL.str = Latin1Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1799
		{
			yyVAL.str = Latin2Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1803
		{
			yyVAL.str = Latin5Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1807
		{
			yyVAL.str = Latin7Str
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1811
		{
			yyVAL.str = MacceStr
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1815
		{
			yyVAL.str = MacromanStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1819
		{
			yyVAL.str = SjisStr
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1823
		{
			yyVAL.str = Swe7Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1827
		{
			yyVAL.str = Tis620Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1831
		{
			yyVAL.str = Ucs2Str
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1835
		{
			yyVAL.str = UjisStr
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1839
		{
			yyVAL.str = Utf16Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1843
		{
			yyVAL.str = Utf16leStr
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1847
		{
			yyVAL.str = Utf32Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1851
		{
			yyVAL.str = Utf8Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1855
		{
			yyVAL.str = Utf8mb4Str
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1859
		{
			yyVAL.str = Utf8Str
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1869
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1873
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1877
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1883
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1887
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1891
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1897
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1901
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1908
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1912
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1916
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1920
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1926
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1937
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1942
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1948
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1952
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1956
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1960
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1964
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1968
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1972
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1976
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1980
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1986
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1992
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1998
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2004
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2010
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2018
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2022
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2026
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2030
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2034
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2040
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2044
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2050
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2054
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2058
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2062
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2066
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2070
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2074
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2078
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2082
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2086
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2090
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2094
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2098
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 334:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2103
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2109
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2113
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2117
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2121
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2125
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2129
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2133
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2137
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2143
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2148
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2153
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2157
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2162
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2166
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 349:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2174
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2178
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 351:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2184
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2192
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2196
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2200
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2205
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2209
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2214
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2218
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2222
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2226
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2230
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2235
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2240
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2245
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2250
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2256
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2260
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2265
		{
			yyVAL.str = ""
		}
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2269
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2273
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2279
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2284
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2288
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2294
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2298
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2304
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2308
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2313
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2317
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2321
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2325
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2329
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2333
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2339
		{
			yyVAL.str = ""
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2343
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2349
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2353
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2357
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2361
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2365
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2370
		{
			yyVAL.str = ""
		}
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2374
		{
			yyVAL.str = yyDollar[2].str
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2380
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2384
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2388
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2394
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2398
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2403
		{
			yyVAL.str = "key"
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2407
		{
			yyVAL.str = yyDollar[1].str
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2413
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2417
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2422
		{
			yyVAL.str = ""
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2426
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2432
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2436
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2442
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2446
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2452
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2456
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2462
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2466
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2472
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2478
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2482
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2486
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2490
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2494
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2499
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2503
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2509
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2515
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2521
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2525
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2529
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2534
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2538
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2544
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2550
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2556
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2560
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2564
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2568
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2572
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2577
		{
			yyVAL.str = ""
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2581
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2585
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2591
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2595
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2600
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2604
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2609
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2613
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2619
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2623
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2627
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2633
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2637
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2643
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2647
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2651
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2655
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2659
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2663
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2667
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2671
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2675
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2679
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2683
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2687
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2691
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2695
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2699
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2703
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2707
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2711
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2715
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2719
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2723
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2727
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2731
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2735
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2739
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2743
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2747
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2751
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2755
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2759
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2763
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2768
		{
			yyVAL.str = ""
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2772
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2776
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2795
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2799
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2803
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2808
		{
			yyVAL.str = ""
		}
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2814
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2818
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2823
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2827
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2832
		{
			yyVAL.str = ""
		}
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2836
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 502:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2841
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2845
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2849
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2854
		{
			yyVAL.str = ""
		}
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2858
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 507:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2863
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2867
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2871
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2875
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2879
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 512:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2883
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2889
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2893
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2897
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2903
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2907
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2911
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2915
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2919
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2923
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2927
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2931
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2935
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2939
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2944
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2949
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2953
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2957
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2961
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2965
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2969
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2973
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2977
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2981
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2985
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2989
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2993
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2997
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3001
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3005
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3009
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3013
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3017
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3021
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3025
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3031
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3035
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3041
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3045
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3049
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3053
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3057
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3061
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3065
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3069
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3073
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3077
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3083
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3090
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3097
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3104
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3110
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3120
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3127
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3134
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3146
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3156
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3160
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3164
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3177
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3187
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3191
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3202
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3209
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3216
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3223
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3231
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3237
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3244
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3250
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3257
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3263
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3272
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3280
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3287
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3293
		{
			yyLOCAL = &AlterThrottler{
				Type:     AlterThrottlerDisableType,
				Comments: Comments(yyDollar[2].strs).Parsed(),
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3300
		{
			yyLOCAL = &AlterThrottler{
				Type:     AlterThrottlerEnableType,
				Comments: Comments(yyDollar[2].strs).Parsed(),
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3307
		{
			yyLOCAL = &AlterThrottler{
				Type:      AlterThrottlerParamsType,
				Threshold: yyDollar[4].str,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3317
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3321
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3330
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3338
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3347
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3354
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3362
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3366
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3375
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3386
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3390
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3395
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3399
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3404
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3408
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3414
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3420
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3426
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3430
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3436
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3440
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3446
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3452
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3458
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3464
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3470
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3474
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3478
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3482
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3488
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3494
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3500
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3504
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3508
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3514
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3518
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3523
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3527
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3532
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3536
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3542
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3546
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3550
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3554
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3558
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3562
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3566
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3570
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3574
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3578
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3582
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3586
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3590
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3594
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3598
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3602
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3606
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3610
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3614
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3618
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3622
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3626
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3631
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3635
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3639
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3645
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3649
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3655
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 658:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3660
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3664
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3669
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3674
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3679
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3684
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3689
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3695
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3701
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3706
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3712
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3718
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3722
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3728
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3733
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3737
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3742
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3747
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3752
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3757
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3763
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3769
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3776
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3783
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3790
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3798
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3802
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3808
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3814
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3820
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3826
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3832
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3838
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3844
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3850
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3856
		{
			yyVAL.str = ""
		}
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3860
		{
			yyVAL.str = ""
		}
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3866
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3872
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3876
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 698:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3882
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3886
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3895
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3899
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3905
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3909
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3915
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3921
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3925
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3929
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3933
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3937
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3941
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3945
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3949
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3953
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3957
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3961
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3965
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3969
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3973
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3977
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3981
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3985
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3989
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3993
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3997
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4001
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4005
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4009
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4013
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4017
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4021
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4025
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4029
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4033
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4037
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4041
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4045
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4049
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4053
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4057
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4061
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4065
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4069
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4073
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4077
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4081
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4085
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4089
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4096
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4100
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4104
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4108
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4112
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4116
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4120
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4124
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4128
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4134
		{
			yyVAL.str = ""
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4138
		{
			yyVAL.str = "extended "
		}
	case 759:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4144
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4148
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4154
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4158
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 763:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4164
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4168
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4172
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4178
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4182
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4186
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4192
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4196
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4202
		{
			yyVAL.empty = struct{}{}
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4206
		{
			yyVAL.empty = struct{}{}
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4210
		{
			yyVAL.empty = struct{}{}
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4216
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4220
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4226
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4230
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4234
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4241
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4245
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4249
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4253
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4260
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4264
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4270
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4276
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4280
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4285
		{
			yyVAL.empty = struct{}{}
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4287
		{
			yyVAL.empty = struct{}{}
		}
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4290
		{
			yyVAL.empty = struct{}{}
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4292
		{
			yyVAL.empty = struct{}{}
		}
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4296
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4302
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4307
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4311
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4315
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4319
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4323
		{
			yyLOCAL = VTExplainType
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4327
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4331
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4337
		{
			yyVAL.str = yyDollar[1].str
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4341
		{
			yyVAL.str = yyDollar[1].str
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4345
		{
			yyVAL.str = yyDollar[1].str
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4351
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4355
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4359
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4363
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4368
		{
			yyVAL.str = ""
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4372
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4376
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4382
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4386
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4392
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4396
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4402
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4408
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4412
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4418
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4424
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4428
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4432
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4436
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4442
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4448
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4454
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4458
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4462
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4466
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4470
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4474
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4480
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4484
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4490
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4494
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4498
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4502
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4506
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4510
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4514
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4518
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4522
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4526
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4530
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4534
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 845:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4539
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4543
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4547
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4552
		{
			yyVAL.str = ""
		}
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4556
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 850:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4561
		{
			setAllowComments(yylex, true)
		}
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4565
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4571
		{
			yyVAL.strs = nil
		}
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4575
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4581
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4585
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4589
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4594
		{
			yyVAL.str = ""
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4598
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4602
		{
			yyVAL.str = SQLCacheStr
		}
	case 860:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4607
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4611
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4615
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4621
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4625
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4635
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4640
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4644
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4650
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4654
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4659
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4663
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4668
		{
			yyVAL.strs = nil
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4672
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4676
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4680
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 876:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4684
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4690
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4694
		{
			yyVAL.str = SQLCacheStr
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4698
		{
			yyVAL.str = DistinctStr
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4702
		{
			yyVAL.str = DistinctStr
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4706
		{
			yyVAL.str = StraightJoinHint
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4710
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4714
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4720
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4724
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4730
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4734
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4738
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4742
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4747
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4751
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4755
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4762
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 895:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4767
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4771
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4777
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4783
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4787
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4797
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4801
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4805
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4809
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4815
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4819
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4825
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4829
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4834
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4838
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4843
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4847
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4853
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4857
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4863
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4867
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4873
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4877
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4881
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4885
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4891
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4895
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 924:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4908
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4912
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4916
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4920
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4926
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 929:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4928
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 930:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4932
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4934
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 932:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4938
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4940
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 934:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4943
		{
			yyVAL.empty = struct{}{}
		}
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4945
		{
			yyVAL.empty = struct{}{}
		}
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4948
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4952
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4956
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4963
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4969
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4973
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4977
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4983
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4989
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4993
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4997
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5001
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5007
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5011
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5021
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5025
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5031
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5035
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5041
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 956:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5046
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5050
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5056
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5060
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 960:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5066
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5070
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5074
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5078
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5083
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5087
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5091
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5095
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5101
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5105
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5112
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5116
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5120
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5124
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5128
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5132
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5136
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5142
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5146
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5150
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5154
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5160
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5164
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5168
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5172
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5176
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5180
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5184
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5188
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5192
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5196
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5200
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5206
		{
		}
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5209
		{
		}
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5215
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5219
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5223
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5227
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5231
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5235
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5239
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5243
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5247
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5251
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5255
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5259
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5263
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5269
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5273
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5277
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5281
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5285
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5289
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5293
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5297
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5301
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5305
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5309
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5313
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5317
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5321
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5325
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5329
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5333
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5337
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5341
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5345
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5353
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5357
		{
			// INTERVAL can trigger a shift / reduce conflict. We want
			// to shift here for the interval rule. In case we do have
			// the additional expression_list below, we'd pick that path
			// and thus properly parse it as a function when needed.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5365
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5369
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5373
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5379
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5385
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5389
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5395
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5399
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5405
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5409
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5413
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5419
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5423
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5430
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5434
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5438
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5442
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5446
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5452
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5456
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5460
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5464
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5468
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5474
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5478
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5483
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5487
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5493
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5497
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5502
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5506
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5511
		{
		}
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5514
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1062:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5520
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5526
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5530
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5535
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5542
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5548
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5552
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5558
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5562
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5568
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5572
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5577
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5584
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5590
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5594
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5600
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5606
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5610
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1082:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5616
		{
			yyVAL.str = ""
		}
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5620
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5626
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5630
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5637
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5641
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5645
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5649
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5655
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5659
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5663
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5667
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5671
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5675
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5679
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5685
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5689
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5693
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5700
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5706
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5710
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5720
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5724
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5734
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5738
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5742
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5746
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5750
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5754
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5758
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5762
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5766
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5770
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5781
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5785
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5791
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5795
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5800
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5804
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5808
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5812
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5816
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5820
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5824
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5828
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5832
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5836
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5840
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5844
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5848
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5852
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5856
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5860
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5864
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5868
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5872
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5876
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5880
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5884
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5888
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5892
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5896
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5900
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5904
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5908
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5912
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5916
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5920
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5924
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5928
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5932
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5936
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5940
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5944
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5948
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5952
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5956
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5960
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5964
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5968
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5972
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5976
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5980
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5984
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5988
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5992
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5996
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6000
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6004
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6008
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6012
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6016
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6020
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6024
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6028
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6032
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6036
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6040
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6044
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6048
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6052
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6056
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6060
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6064
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6068
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6072
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6076
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6080
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6084
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6088
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6092
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6096
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6100
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6104
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6108
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6118
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6122
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6126
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6130
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6136
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6140
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6146
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6150
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6154
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6158
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6162
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6167
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6171
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6175
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6179
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6183
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6187
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6192
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6196
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6200
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6204
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6211
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6215
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6221
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6225
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6229
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6233
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6239
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6243
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6247
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6251
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6255
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6259
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6263
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6268
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6272
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6278
		{
		}
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6280
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6284
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6288
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6292
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6296
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6300
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6304
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6308
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6312
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6316
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6320
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6326
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6330
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6334
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6338
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6342
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6346
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6350
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6354
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6358
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6368
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6372
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6376
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6380
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6391
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6395
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6399
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6403
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6407
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6413
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6417
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6421
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6425
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6429
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6435
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6439
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6443
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1277:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6449
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6453
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6457
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6463
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6467
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6471
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6475
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6479
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6485
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6489
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6493
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6497
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6501
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6505
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6509
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6513
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6517
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6521
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6527
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6531
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6536
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6540
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6545
		{
			yyVAL.str = string("")
		}
	case 1300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6549
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:6555
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6559
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:6565
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6570
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6574
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6580
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6584
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6588
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6592
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6598
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6602
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6608
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6617
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6621
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6627
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6631
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6636
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6640
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:6646
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6652
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6656
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1322:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6661
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6665
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6670
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6674
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6680
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6686
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6690
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:6696
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6701
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6705
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6709
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6714
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6718
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6724
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6728
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6732
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6737
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6741
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6745
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6749
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6753
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6760
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6764
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6768
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6772
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6778
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6782
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6786
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6790
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6795
		{
			yyVAL.str = ""
		}
	case 1352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6799
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6803
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6807
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6812
		{
			yyVAL.str = ""
		}
	case 1356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6816
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6822
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6826
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1359:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6831
		{
			yyVAL.str = ""
		}
	case 1360:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6835
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6840
		{
			yyVAL.str = "cascaded"
		}
	case 1362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6844
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6848
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1364:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6853
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6857
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6863
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6869
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6875
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6884
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6888
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1371:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6893
		{
			yyVAL.str = ""
		}
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6897
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6903
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6907
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6913
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6917
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6921
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6926
		{
			yyVAL.str = ""
		}
	case 1379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6930
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6934
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6939
		{
			yyVAL.str = ""
		}
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6943
		{
			yyVAL.str = " header"
		}
	case 1383:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6948
		{
			yyVAL.str = ""
		}
	case 1384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6952
		{
			yyVAL.str = " manifest on"
		}
	case 1385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6956
		{
			yyVAL.str = " manifest off"
		}
	case 1386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6961
		{
			yyVAL.str = ""
		}
	case 1387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6965
		{
			yyVAL.str = " overwrite on"
		}
	case 1388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6969
		{
			yyVAL.str = " overwrite off"
		}
	case 1389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6975
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1390:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6980
		{
			yyVAL.str = ""
		}
	case 1391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6984
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6990
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6994
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7000
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7004
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1396:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7009
		{
			yyVAL.str = ""
		}
	case 1397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7013
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7019
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1399:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7023
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7029
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1401:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7033
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7037
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1403:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7042
		{
			yyVAL.str = ""
		}
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7046
		{
			yyVAL.str = " optionally"
		}
	case 1405:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7059
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7063
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7067
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7071
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7075
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7081
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7085
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7089
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1413:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7093
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1414:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7098
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7102
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7108
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7112
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7118
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7122
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7128
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7132
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7137
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7147
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7151
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7157
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:7163
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7167
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:7173
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:7177
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:7181
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:7185
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:7191
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:7195
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:7199
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7206
		{
			yyVAL.str = "charset"
		}
	case 1439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7216
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7220
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7224
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7233
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7235
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7238
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7240
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7243
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7245
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7248
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7250
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7253
		{
			yyVAL.empty = struct{}{}
		}
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7255
		{
			yyVAL.empty = struct{}{}
		}
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7257
		{
			yyVAL.empty = struct{}{}
		}
	case 1455:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7261
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7266
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7270
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7275
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7277
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7281
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7287
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7291
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7298
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7304
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7308
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1467:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7314
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7318
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7325
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 2014:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7895
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2015:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7904
		{
			decNesting(yylex)
		}
	case 2016:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7909
		{
			skipToEnd(yylex)
		}
	case 2017:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7914
		{
			skipToEnd(yylex)
		}
	case 2018:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7918
		{
			skipToEnd(yylex)
		}
	case 2019:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7922
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
