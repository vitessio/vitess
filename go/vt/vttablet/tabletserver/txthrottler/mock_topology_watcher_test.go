/*
Copyright 2017 Google Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreedto in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/youtube/vitess/go/vt/tabletserver/txthrottler (interfaces: TopologyWatcherInterface)

package txthrottler

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of TopologyWatcherInterface interface
type MockTopologyWatcherInterface struct {
	ctrl     *gomock.Controller
	recorder *_MockTopologyWatcherInterfaceRecorder
}

// Recorder for MockTopologyWatcherInterface (not exported)
type _MockTopologyWatcherInterfaceRecorder struct {
	mock *MockTopologyWatcherInterface
}

func NewMockTopologyWatcherInterface(ctrl *gomock.Controller) *MockTopologyWatcherInterface {
	mock := &MockTopologyWatcherInterface{ctrl: ctrl}
	mock.recorder = &_MockTopologyWatcherInterfaceRecorder{mock}
	return mock
}

func (_m *MockTopologyWatcherInterface) EXPECT() *_MockTopologyWatcherInterfaceRecorder {
	return _m.recorder
}

func (_m *MockTopologyWatcherInterface) Stop() {
	_m.ctrl.Call(_m, "Stop")
}

func (_mr *_MockTopologyWatcherInterfaceRecorder) Stop() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Stop")
}

func (_m *MockTopologyWatcherInterface) WaitForInitialTopology() error {
	ret := _m.ctrl.Call(_m, "WaitForInitialTopology")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockTopologyWatcherInterfaceRecorder) WaitForInitialTopology() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "WaitForInitialTopology")
}
