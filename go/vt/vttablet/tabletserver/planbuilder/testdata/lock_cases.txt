# is_free_lock is safe outside of reserved connection
"select is_free_lock('foo') from dual"
{
  "PlanID": "Select",
  "TableName": "dual",
  "Permissions": [
    {
      "TableName": "dual",
      "Role": 0
    }
  ],
  "FullQuery": "select is_free_lock('foo') from dual limit :#maxLimit"
}

# is_used_lock is safe outside of reserved connection
"select is_used_lock('foo') from dual"
{
  "PlanID": "Select",
  "TableName": "dual",
  "Permissions": [
    {
      "TableName": "dual",
      "Role": 0
    }
  ],
  "FullQuery": "select is_used_lock('foo') from dual limit :#maxLimit"
}

# release_all_locks is safe outside of reserved connection
"select release_all_locks() from dual"
{
  "PlanID": "Select",
  "TableName": "dual",
  "Permissions": [
    {
      "TableName": "dual",
      "Role": 0
    }
  ],
  "FullQuery": "select release_all_locks() from dual limit :#maxLimit"
}

# release_lock is safe outside of reserved connection
"select release_lock('foo') from dual"
{
  "PlanID": "Select",
  "TableName": "dual",
  "Permissions": [
    {
      "TableName": "dual",
      "Role": 0
    }
  ],
  "FullQuery": "select release_lock('foo') from dual limit :#maxLimit"
}

# impossible lock query is safe outside of reserved connection
"select get_lock('foo', 10) from dual where 1 != 1"
{
  "PlanID": "SelectImpossible",
  "TableName": "dual",
  "Permissions": [
    {
      "TableName": "dual",
      "Role": 0
    }
  ],
  "FullQuery": "select get_lock('foo', 10) from dual where 1 != 1 limit :#maxLimit"
}

# get_lock cannot be executed outside of reserved connection
"select get_lock('foo', 10) from dual"
{
  "PlanID": "SelectLockFunc",
  "TableName": "dual",
  "Permissions": [
    {
      "TableName": "dual",
      "Role": 0
    }
  ],
  "FullQuery": "select get_lock('foo', 10) from dual limit :#maxLimit",
  "NeedsReservedConn": true
}
