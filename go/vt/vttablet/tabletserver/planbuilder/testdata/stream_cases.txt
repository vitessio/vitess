# select
"select * from a"
{
  "PlanID": "SelectStream",
  "TableName": "a",
  "Permissions":[{"TableName":"a","Role":0}],
  "FullQuery": "select * from a"
}

# select join
"select * from a join b"
{
  "PlanID": "SelectStream",
  "TableName": "",
  "Permissions":[{"TableName":"a","Role":0},{"TableName":"b","Role":0}],
  "FullQuery": "select * from a join b"
}

# select for update
"select * from a for update"
{
  "PlanID": "SelectStream",
  "TableName": "a",
  "Permissions":[{"TableName":"a","Role":0}],
  "FullQuery": "select * from a for update"
}

# union
"select * from a union select * from b"
{
  "PlanID": "SelectStream",
  "TableName": "",
  "Permissions":[{"TableName":"a","Role":0},{"TableName":"b","Role":0}],
  "FullQuery": "select * from a union select * from b"
}

# show
"show tables"
{
  "PlanID": "SelectStream",
  "TableName": "",
  "FullQuery": "show tables"
}

# show table status
"show table status"
{
  "PlanID": "SelectStream",
  "TableName": "",
  "FullQuery": "show table status"
}

# other
"desc foo"
{
  "PlanID": "SelectStream",
  "TableName": "",
  "FullQuery": "explain foo"
}

# dml
"update a set b = 1"
"UPDATE not allowed for streaming"

# syntax error
"syntax error"
"syntax error at position 7 near 'syntax'"

# named locks are unsafe with server-side connection pooling, plan is generated with NeedReservedConn set to true
"select get_lock('foo', 10) from dual"
{
  "PlanID": "SelectStream",
  "TableName": "dual",
  "Permissions": [
    {
      "TableName": "dual",
      "Role": 0
    }
  ],
  "FullQuery": "select get_lock('foo', 10) from dual",
  "NeedsReservedConn": true
}

# set statement unsafe with pooling
"set @udv = 10"
"SET not allowed for streaming"

# analyze statement
"analyze table a"
{
  "PlanID": "OtherRead",
  "TableName": "",
  "Permissions": [
    {
      "TableName": "a",
      "Role": 1
    }
  ],
  "FullQuery": "analyze table a"
}
