/*
Copyright 2022 The Vitess Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package semantics

import (
	"sort"
	"strings"

	"vitess.io/vitess/go/mysql/collations"
	"vitess.io/vitess/go/vt/key"
	"vitess.io/vitess/go/vt/proto/query"
	topodatapb "vitess.io/vitess/go/vt/proto/topodata"
	"vitess.io/vitess/go/vt/sqlparser"
	"vitess.io/vitess/go/vt/vtgate/vindexes"
)

// getInfoSchema returns a map of all information_schema tables and their columns with types
// To recreate this information from MySQL, you can run the test in info_schema_gen_test.go0
func getInfoSchema() map[string]map[string]query.Type {
	infSchema := map[string]map[string]query.Type{}
	cols := map[string]query.Type{}
	cols["USER"] = query.Type(6165)
	cols["HOST"] = query.Type(6165)
	cols["GRANTEE"] = query.Type(6165)
	cols["GRANTEE_HOST"] = query.Type(6165)
	cols["ROLE_NAME"] = query.Type(6165)
	cols["ROLE_HOST"] = query.Type(6165)
	cols["IS_GRANTABLE"] = query.Type(6165)
	cols["IS_DEFAULT"] = query.Type(6165)
	cols["IS_MANDATORY"] = query.Type(6165)
	infSchema["ADMINISTRABLE_ROLE_AUTHORIZATIONS"] = cols
	cols = map[string]query.Type{}
	cols["USER"] = query.Type(6165)
	cols["HOST"] = query.Type(6165)
	cols["GRANTEE"] = query.Type(6165)
	cols["GRANTEE_HOST"] = query.Type(6165)
	cols["ROLE_NAME"] = query.Type(6165)
	cols["ROLE_HOST"] = query.Type(6165)
	cols["IS_GRANTABLE"] = query.Type(6165)
	cols["IS_DEFAULT"] = query.Type(6165)
	cols["IS_MANDATORY"] = query.Type(6165)
	infSchema["APPLICABLE_ROLES"] = cols
	cols = map[string]query.Type{}
	cols["CHARACTER_SET_NAME"] = query.Type(6165)
	cols["DEFAULT_COLLATE_NAME"] = query.Type(6165)
	cols["DESCRIPTION"] = query.Type(6165)
	cols["MAXLEN"] = query.Type(776)
	infSchema["CHARACTER_SETS"] = cols
	cols = map[string]query.Type{}
	cols["CONSTRAINT_CATALOG"] = query.Type(6165)
	cols["CONSTRAINT_SCHEMA"] = query.Type(6165)
	cols["CONSTRAINT_NAME"] = query.Type(6165)
	cols["CHECK_CLAUSE"] = query.Type(6163)
	infSchema["CHECK_CONSTRAINTS"] = cols
	cols = map[string]query.Type{}
	cols["COLLATION_NAME"] = query.Type(6165)
	cols["CHARACTER_SET_NAME"] = query.Type(6165)
	infSchema["COLLATION_CHARACTER_SET_APPLICABILITY"] = cols
	cols = map[string]query.Type{}
	cols["COLLATION_NAME"] = query.Type(6165)
	cols["CHARACTER_SET_NAME"] = query.Type(6165)
	cols["ID"] = query.Type(778)
	cols["IS_DEFAULT"] = query.Type(6165)
	cols["IS_COMPILED"] = query.Type(6165)
	cols["SORTLEN"] = query.Type(776)
	cols["PAD_ATTRIBUTE"] = query.Type(2074)
	infSchema["COLLATIONS"] = cols
	cols = map[string]query.Type{}
	cols["GRANTEE"] = query.Type(6165)
	cols["TABLE_CATALOG"] = query.Type(6165)
	cols["TABLE_SCHEMA"] = query.Type(6165)
	cols["TABLE_NAME"] = query.Type(6165)
	cols["COLUMN_NAME"] = query.Type(6165)
	cols["PRIVILEGE_TYPE"] = query.Type(6165)
	cols["IS_GRANTABLE"] = query.Type(6165)
	infSchema["COLUMN_PRIVILEGES"] = cols
	cols = map[string]query.Type{}
	cols["SCHEMA_NAME"] = query.Type(6165)
	cols["TABLE_NAME"] = query.Type(6165)
	cols["COLUMN_NAME"] = query.Type(6165)
	cols["HISTOGRAM"] = query.Type(2078)
	infSchema["COLUMN_STATISTICS"] = cols
	cols = map[string]query.Type{}
	cols["TABLE_CATALOG"] = query.Type(6165)
	cols["TABLE_SCHEMA"] = query.Type(6165)
	cols["TABLE_NAME"] = query.Type(6165)
	cols["COLUMN_NAME"] = query.Type(6165)
	cols["ORDINAL_POSITION"] = query.Type(776)
	cols["COLUMN_DEFAULT"] = query.Type(6163)
	cols["IS_NULLABLE"] = query.Type(6165)
	cols["DATA_TYPE"] = query.Type(6163)
	cols["CHARACTER_MAXIMUM_LENGTH"] = query.Type(265)
	cols["CHARACTER_OCTET_LENGTH"] = query.Type(265)
	cols["NUMERIC_PRECISION"] = query.Type(778)
	cols["NUMERIC_SCALE"] = query.Type(778)
	cols["DATETIME_PRECISION"] = query.Type(776)
	cols["CHARACTER_SET_NAME"] = query.Type(6165)
	cols["COLLATION_NAME"] = query.Type(6165)
	cols["COLUMN_TYPE"] = query.Type(6163)
	cols["COLUMN_KEY"] = query.Type(2074)
	cols["EXTRA"] = query.Type(6165)
	cols["PRIVILEGES"] = query.Type(6165)
	cols["COLUMN_COMMENT"] = query.Type(6163)
	cols["GENERATION_EXPRESSION"] = query.Type(6163)
	cols["SRS_ID"] = query.Type(776)
	infSchema["COLUMNS"] = cols
	cols = map[string]query.Type{}
	cols["TABLE_CATALOG"] = query.Type(6165)
	cols["TABLE_SCHEMA"] = query.Type(6165)
	cols["TABLE_NAME"] = query.Type(6165)
	cols["COLUMN_NAME"] = query.Type(6165)
	cols["ENGINE_ATTRIBUTE"] = query.Type(2078)
	cols["SECONDARY_ENGINE_ATTRIBUTE"] = query.Type(2078)
	infSchema["COLUMNS_EXTENSIONS"] = cols
	cols = map[string]query.Type{}
	cols["ROLE_NAME"] = query.Type(6165)
	cols["ROLE_HOST"] = query.Type(6165)
	cols["IS_DEFAULT"] = query.Type(6165)
	cols["IS_MANDATORY"] = query.Type(6165)
	infSchema["ENABLED_ROLES"] = cols
	cols = map[string]query.Type{}
	cols["ENGINE"] = query.Type(6165)
	cols["SUPPORT"] = query.Type(6165)
	cols["COMMENT"] = query.Type(6165)
	cols["TRANSACTIONS"] = query.Type(6165)
	cols["XA"] = query.Type(6165)
	cols["SAVEPOINTS"] = query.Type(6165)
	infSchema["ENGINES"] = cols
	cols = map[string]query.Type{}
	cols["EVENT_CATALOG"] = query.Type(6165)
	cols["EVENT_SCHEMA"] = query.Type(6165)
	cols["EVENT_NAME"] = query.Type(6165)
	cols["DEFINER"] = query.Type(6165)
	cols["TIME_ZONE"] = query.Type(6165)
	cols["EVENT_BODY"] = query.Type(6165)
	cols["EVENT_DEFINITION"] = query.Type(6163)
	cols["EVENT_TYPE"] = query.Type(6165)
	cols["EXECUTE_AT"] = query.Type(2064)
	cols["INTERVAL_VALUE"] = query.Type(6165)
	cols["INTERVAL_FIELD"] = query.Type(2074)
	cols["SQL_MODE"] = query.Type(2075)
	cols["STARTS"] = query.Type(2064)
	cols["ENDS"] = query.Type(2064)
	cols["STATUS"] = query.Type(2074)
	cols["ON_COMPLETION"] = query.Type(6165)
	cols["CREATED"] = query.Type(2061)
	cols["LAST_ALTERED"] = query.Type(2061)
	cols["LAST_EXECUTED"] = query.Type(2064)
	cols["EVENT_COMMENT"] = query.Type(6165)
	cols["ORIGINATOR"] = query.Type(776)
	cols["CHARACTER_SET_CLIENT"] = query.Type(6165)
	cols["COLLATION_CONNECTION"] = query.Type(6165)
	cols["DATABASE_COLLATION"] = query.Type(6165)
	infSchema["EVENTS"] = cols
	cols = map[string]query.Type{}
	cols["FILE_ID"] = query.Type(265)
	cols["FILE_NAME"] = query.Type(6163)
	cols["FILE_TYPE"] = query.Type(6165)
	cols["TABLESPACE_NAME"] = query.Type(6165)
	cols["TABLE_CATALOG"] = query.Type(6167)
	cols["TABLE_SCHEMA"] = query.Type(10264)
	cols["TABLE_NAME"] = query.Type(10264)
	cols["LOGFILE_GROUP_NAME"] = query.Type(6165)
	cols["LOGFILE_GROUP_NUMBER"] = query.Type(265)
	cols["ENGINE"] = query.Type(6165)
	cols["FULLTEXT_KEYS"] = query.Type(10264)
	cols["DELETED_ROWS"] = query.Type(10264)
	cols["UPDATE_COUNT"] = query.Type(10264)
	cols["FREE_EXTENTS"] = query.Type(265)
	cols["TOTAL_EXTENTS"] = query.Type(265)
	cols["EXTENT_SIZE"] = query.Type(265)
	cols["INITIAL_SIZE"] = query.Type(265)
	cols["MAXIMUM_SIZE"] = query.Type(265)
	cols["AUTOEXTEND_SIZE"] = query.Type(265)
	cols["CREATION_TIME"] = query.Type(10264)
	cols["LAST_UPDATE_TIME"] = query.Type(10264)
	cols["LAST_ACCESS_TIME"] = query.Type(10264)
	cols["RECOVER_TIME"] = query.Type(10264)
	cols["TRANSACTION_COUNTER"] = query.Type(10264)
	cols["VERSION"] = query.Type(265)
	cols["ROW_FORMAT"] = query.Type(6165)
	cols["TABLE_ROWS"] = query.Type(10264)
	cols["AVG_ROW_LENGTH"] = query.Type(10264)
	cols["DATA_LENGTH"] = query.Type(10264)
	cols["MAX_DATA_LENGTH"] = query.Type(10264)
	cols["INDEX_LENGTH"] = query.Type(10264)
	cols["DATA_FREE"] = query.Type(265)
	cols["CREATE_TIME"] = query.Type(10264)
	cols["UPDATE_TIME"] = query.Type(10264)
	cols["CHECK_TIME"] = query.Type(10264)
	cols["CHECKSUM"] = query.Type(10264)
	cols["STATUS"] = query.Type(6165)
	cols["EXTRA"] = query.Type(6165)
	infSchema["FILES"] = cols
	cols = map[string]query.Type{}
	cols["POOL_ID"] = query.Type(778)
	cols["BLOCK_ID"] = query.Type(778)
	cols["SPACE"] = query.Type(778)
	cols["PAGE_NUMBER"] = query.Type(778)
	cols["PAGE_TYPE"] = query.Type(6165)
	cols["FLUSH_TYPE"] = query.Type(778)
	cols["FIX_COUNT"] = query.Type(778)
	cols["IS_HASHED"] = query.Type(6165)
	cols["NEWEST_MODIFICATION"] = query.Type(778)
	cols["OLDEST_MODIFICATION"] = query.Type(778)
	cols["ACCESS_TIME"] = query.Type(778)
	cols["TABLE_NAME"] = query.Type(6165)
	cols["INDEX_NAME"] = query.Type(6165)
	cols["NUMBER_RECORDS"] = query.Type(778)
	cols["DATA_SIZE"] = query.Type(778)
	cols["COMPRESSED_SIZE"] = query.Type(778)
	cols["PAGE_STATE"] = query.Type(6165)
	cols["IO_FIX"] = query.Type(6165)
	cols["IS_OLD"] = query.Type(6165)
	cols["FREE_PAGE_CLOCK"] = query.Type(778)
	cols["IS_STALE"] = query.Type(6165)
	infSchema["INNODB_BUFFER_PAGE"] = cols
	cols = map[string]query.Type{}
	cols["POOL_ID"] = query.Type(778)
	cols["LRU_POSITION"] = query.Type(778)
	cols["SPACE"] = query.Type(778)
	cols["PAGE_NUMBER"] = query.Type(778)
	cols["PAGE_TYPE"] = query.Type(6165)
	cols["FLUSH_TYPE"] = query.Type(778)
	cols["FIX_COUNT"] = query.Type(778)
	cols["IS_HASHED"] = query.Type(6165)
	cols["NEWEST_MODIFICATION"] = query.Type(778)
	cols["OLDEST_MODIFICATION"] = query.Type(778)
	cols["ACCESS_TIME"] = query.Type(778)
	cols["TABLE_NAME"] = query.Type(6165)
	cols["INDEX_NAME"] = query.Type(6165)
	cols["NUMBER_RECORDS"] = query.Type(778)
	cols["DATA_SIZE"] = query.Type(778)
	cols["COMPRESSED_SIZE"] = query.Type(778)
	cols["COMPRESSED"] = query.Type(6165)
	cols["IO_FIX"] = query.Type(6165)
	cols["IS_OLD"] = query.Type(6165)
	cols["FREE_PAGE_CLOCK"] = query.Type(778)
	infSchema["INNODB_BUFFER_PAGE_LRU"] = cols
	cols = map[string]query.Type{}
	cols["POOL_ID"] = query.Type(778)
	cols["POOL_SIZE"] = query.Type(778)
	cols["FREE_BUFFERS"] = query.Type(778)
	cols["DATABASE_PAGES"] = query.Type(778)
	cols["OLD_DATABASE_PAGES"] = query.Type(778)
	cols["MODIFIED_DATABASE_PAGES"] = query.Type(778)
	cols["PENDING_DECOMPRESS"] = query.Type(778)
	cols["PENDING_READS"] = query.Type(778)
	cols["PENDING_FLUSH_LRU"] = query.Type(778)
	cols["PENDING_FLUSH_LIST"] = query.Type(778)
	cols["PAGES_MADE_YOUNG"] = query.Type(778)
	cols["PAGES_NOT_MADE_YOUNG"] = query.Type(778)
	cols["PAGES_MADE_YOUNG_RATE"] = query.Type(1035)
	cols["PAGES_MADE_NOT_YOUNG_RATE"] = query.Type(1035)
	cols["NUMBER_PAGES_READ"] = query.Type(778)
	cols["NUMBER_PAGES_CREATED"] = query.Type(778)
	cols["NUMBER_PAGES_WRITTEN"] = query.Type(778)
	cols["PAGES_READ_RATE"] = query.Type(1035)
	cols["PAGES_CREATE_RATE"] = query.Type(1035)
	cols["PAGES_WRITTEN_RATE"] = query.Type(1035)
	cols["NUMBER_PAGES_GET"] = query.Type(778)
	cols["HIT_RATE"] = query.Type(778)
	cols["YOUNG_MAKE_PER_THOUSAND_GETS"] = query.Type(778)
	cols["NOT_YOUNG_MAKE_PER_THOUSAND_GETS"] = query.Type(778)
	cols["NUMBER_PAGES_READ_AHEAD"] = query.Type(778)
	cols["NUMBER_READ_AHEAD_EVICTED"] = query.Type(778)
	cols["READ_AHEAD_RATE"] = query.Type(1035)
	cols["READ_AHEAD_EVICTED_RATE"] = query.Type(1035)
	cols["LRU_IO_TOTAL"] = query.Type(778)
	cols["LRU_IO_CURRENT"] = query.Type(778)
	cols["UNCOMPRESS_TOTAL"] = query.Type(778)
	cols["UNCOMPRESS_CURRENT"] = query.Type(778)
	infSchema["INNODB_BUFFER_POOL_STATS"] = cols
	cols = map[string]query.Type{}
	cols["SPACE_ID"] = query.Type(776)
	cols["INDEX_ID"] = query.Type(778)
	cols["N_CACHED_PAGES"] = query.Type(778)
	infSchema["INNODB_CACHED_INDEXES"] = cols
	cols = map[string]query.Type{}
	cols["page_size"] = query.Type(263)
	cols["compress_ops"] = query.Type(263)
	cols["compress_ops_ok"] = query.Type(263)
	cols["compress_time"] = query.Type(263)
	cols["uncompress_ops"] = query.Type(263)
	cols["uncompress_time"] = query.Type(263)
	infSchema["INNODB_CMP"] = cols
	cols = map[string]query.Type{}
	cols["database_name"] = query.Type(6165)
	cols["table_name"] = query.Type(6165)
	cols["index_name"] = query.Type(6165)
	cols["compress_ops"] = query.Type(263)
	cols["compress_ops_ok"] = query.Type(263)
	cols["compress_time"] = query.Type(263)
	cols["uncompress_ops"] = query.Type(263)
	cols["uncompress_time"] = query.Type(263)
	infSchema["INNODB_CMP_PER_INDEX"] = cols
	cols = map[string]query.Type{}
	cols["database_name"] = query.Type(6165)
	cols["table_name"] = query.Type(6165)
	cols["index_name"] = query.Type(6165)
	cols["compress_ops"] = query.Type(263)
	cols["compress_ops_ok"] = query.Type(263)
	cols["compress_time"] = query.Type(263)
	cols["uncompress_ops"] = query.Type(263)
	cols["uncompress_time"] = query.Type(263)
	infSchema["INNODB_CMP_PER_INDEX_RESET"] = cols
	cols = map[string]query.Type{}
	cols["page_size"] = query.Type(263)
	cols["compress_ops"] = query.Type(263)
	cols["compress_ops_ok"] = query.Type(263)
	cols["compress_time"] = query.Type(263)
	cols["uncompress_ops"] = query.Type(263)
	cols["uncompress_time"] = query.Type(263)
	infSchema["INNODB_CMP_RESET"] = cols
	cols = map[string]query.Type{}
	cols["page_size"] = query.Type(263)
	cols["buffer_pool_instance"] = query.Type(263)
	cols["pages_used"] = query.Type(263)
	cols["pages_free"] = query.Type(263)
	cols["relocation_ops"] = query.Type(265)
	cols["relocation_time"] = query.Type(263)
	infSchema["INNODB_CMPMEM"] = cols
	cols = map[string]query.Type{}
	cols["page_size"] = query.Type(263)
	cols["buffer_pool_instance"] = query.Type(263)
	cols["pages_used"] = query.Type(263)
	cols["pages_free"] = query.Type(263)
	cols["relocation_ops"] = query.Type(265)
	cols["relocation_time"] = query.Type(263)
	infSchema["INNODB_CMPMEM_RESET"] = cols
	cols = map[string]query.Type{}
	cols["TABLE_ID"] = query.Type(778)
	cols["NAME"] = query.Type(6165)
	cols["POS"] = query.Type(778)
	cols["MTYPE"] = query.Type(263)
	cols["PRTYPE"] = query.Type(263)
	cols["LEN"] = query.Type(263)
	cols["HAS_DEFAULT"] = query.Type(263)
	cols["DEFAULT_VALUE"] = query.Type(6163)
	infSchema["INNODB_COLUMNS"] = cols
	cols = map[string]query.Type{}
	cols["SPACE"] = query.Type(10262)
	cols["PATH"] = query.Type(6165)
	infSchema["INNODB_DATAFILES"] = cols
	cols = map[string]query.Type{}
	cols["INDEX_ID"] = query.Type(10262)
	cols["NAME"] = query.Type(6165)
	cols["POS"] = query.Type(778)
	infSchema["INNODB_FIELDS"] = cols
	cols = map[string]query.Type{}
	cols["ID"] = query.Type(6165)
	cols["FOR_NAME"] = query.Type(6165)
	cols["REF_NAME"] = query.Type(6165)
	cols["N_COLS"] = query.Type(265)
	cols["TYPE"] = query.Type(778)
	infSchema["INNODB_FOREIGN"] = cols
	cols = map[string]query.Type{}
	cols["ID"] = query.Type(6165)
	cols["FOR_COL_NAME"] = query.Type(6165)
	cols["REF_COL_NAME"] = query.Type(6165)
	cols["POS"] = query.Type(776)
	infSchema["INNODB_FOREIGN_COLS"] = cols
	cols = map[string]query.Type{}
	cols["DOC_ID"] = query.Type(778)
	infSchema["INNODB_FT_BEING_DELETED"] = cols
	cols = map[string]query.Type{}
	cols["KEY"] = query.Type(6165)
	cols["VALUE"] = query.Type(6165)
	infSchema["INNODB_FT_CONFIG"] = cols
	cols = map[string]query.Type{}
	cols["value"] = query.Type(6165)
	infSchema["INNODB_FT_DEFAULT_STOPWORD"] = cols
	cols = map[string]query.Type{}
	cols["DOC_ID"] = query.Type(778)
	infSchema["INNODB_FT_DELETED"] = cols
	cols = map[string]query.Type{}
	cols["WORD"] = query.Type(6165)
	cols["FIRST_DOC_ID"] = query.Type(778)
	cols["LAST_DOC_ID"] = query.Type(778)
	cols["DOC_COUNT"] = query.Type(778)
	cols["DOC_ID"] = query.Type(778)
	cols["POSITION"] = query.Type(778)
	infSchema["INNODB_FT_INDEX_CACHE"] = cols
	cols = map[string]query.Type{}
	cols["WORD"] = query.Type(6165)
	cols["FIRST_DOC_ID"] = query.Type(778)
	cols["LAST_DOC_ID"] = query.Type(778)
	cols["DOC_COUNT"] = query.Type(778)
	cols["DOC_ID"] = query.Type(778)
	cols["POSITION"] = query.Type(778)
	infSchema["INNODB_FT_INDEX_TABLE"] = cols
	cols = map[string]query.Type{}
	cols["INDEX_ID"] = query.Type(778)
	cols["NAME"] = query.Type(6165)
	cols["TABLE_ID"] = query.Type(778)
	cols["TYPE"] = query.Type(263)
	cols["N_FIELDS"] = query.Type(263)
	cols["PAGE_NO"] = query.Type(263)
	cols["SPACE"] = query.Type(263)
	cols["MERGE_THRESHOLD"] = query.Type(263)
	infSchema["INNODB_INDEXES"] = cols
	cols = map[string]query.Type{}
	cols["NAME"] = query.Type(6165)
	cols["SUBSYSTEM"] = query.Type(6165)
	cols["COUNT"] = query.Type(265)
	cols["MAX_COUNT"] = query.Type(265)
	cols["MIN_COUNT"] = query.Type(265)
	cols["AVG_COUNT"] = query.Type(1035)
	cols["COUNT_RESET"] = query.Type(265)
	cols["MAX_COUNT_RESET"] = query.Type(265)
	cols["MIN_COUNT_RESET"] = query.Type(265)
	cols["AVG_COUNT_RESET"] = query.Type(1035)
	cols["TIME_ENABLED"] = query.Type(2064)
	cols["TIME_DISABLED"] = query.Type(2064)
	cols["TIME_ELAPSED"] = query.Type(265)
	cols["TIME_RESET"] = query.Type(2064)
	cols["STATUS"] = query.Type(6165)
	cols["TYPE"] = query.Type(6165)
	cols["COMMENT"] = query.Type(6165)
	infSchema["INNODB_METRICS"] = cols
	cols = map[string]query.Type{}
	cols["ID"] = query.Type(776)
	cols["SPACE"] = query.Type(776)
	cols["PATH"] = query.Type(6165)
	cols["SIZE"] = query.Type(778)
	cols["STATE"] = query.Type(6165)
	cols["PURPOSE"] = query.Type(6165)
	infSchema["INNODB_SESSION_TEMP_TABLESPACES"] = cols
	cols = map[string]query.Type{}
	cols["TABLE_ID"] = query.Type(778)
	cols["NAME"] = query.Type(6165)
	cols["FLAG"] = query.Type(263)
	cols["N_COLS"] = query.Type(263)
	cols["SPACE"] = query.Type(265)
	cols["ROW_FORMAT"] = query.Type(6165)
	cols["ZIP_PAGE_SIZE"] = query.Type(776)
	cols["SPACE_TYPE"] = query.Type(6165)
	cols["INSTANT_COLS"] = query.Type(263)
	infSchema["INNODB_TABLES"] = cols
	cols = map[string]query.Type{}
	cols["SPACE"] = query.Type(776)
	cols["NAME"] = query.Type(6165)
	cols["FLAG"] = query.Type(776)
	cols["ROW_FORMAT"] = query.Type(6165)
	cols["PAGE_SIZE"] = query.Type(776)
	cols["ZIP_PAGE_SIZE"] = query.Type(776)
	cols["SPACE_TYPE"] = query.Type(6165)
	cols["FS_BLOCK_SIZE"] = query.Type(776)
	cols["FILE_SIZE"] = query.Type(778)
	cols["ALLOCATED_SIZE"] = query.Type(778)
	cols["AUTOEXTEND_SIZE"] = query.Type(778)
	cols["SERVER_VERSION"] = query.Type(6165)
	cols["SPACE_VERSION"] = query.Type(776)
	cols["ENCRYPTION"] = query.Type(6165)
	cols["STATE"] = query.Type(6165)
	infSchema["INNODB_TABLESPACES"] = cols
	cols = map[string]query.Type{}
	cols["SPACE"] = query.Type(10262)
	cols["NAME"] = query.Type(6165)
	cols["PATH"] = query.Type(6165)
	cols["FLAG"] = query.Type(10262)
	cols["SPACE_TYPE"] = query.Type(6165)
	infSchema["INNODB_TABLESPACES_BRIEF"] = cols
	cols = map[string]query.Type{}
	cols["TABLE_ID"] = query.Type(778)
	cols["NAME"] = query.Type(6165)
	cols["STATS_INITIALIZED"] = query.Type(6165)
	cols["NUM_ROWS"] = query.Type(778)
	cols["CLUST_INDEX_SIZE"] = query.Type(778)
	cols["OTHER_INDEX_SIZE"] = query.Type(778)
	cols["MODIFIED_COUNTER"] = query.Type(778)
	cols["AUTOINC"] = query.Type(778)
	cols["REF_COUNT"] = query.Type(263)
	infSchema["INNODB_TABLESTATS"] = cols
	cols = map[string]query.Type{}
	cols["TABLE_ID"] = query.Type(778)
	cols["NAME"] = query.Type(6165)
	cols["N_COLS"] = query.Type(776)
	cols["SPACE"] = query.Type(776)
	infSchema["INNODB_TEMP_TABLE_INFO"] = cols
	cols = map[string]query.Type{}
	cols["trx_id"] = query.Type(778)
	cols["trx_state"] = query.Type(6165)
	cols["trx_started"] = query.Type(2064)
	cols["trx_requested_lock_id"] = query.Type(6165)
	cols["trx_wait_started"] = query.Type(2064)
	cols["trx_weight"] = query.Type(778)
	cols["trx_mysql_thread_id"] = query.Type(778)
	cols["trx_query"] = query.Type(6165)
	cols["trx_operation_state"] = query.Type(6165)
	cols["trx_tables_in_use"] = query.Type(778)
	cols["trx_tables_locked"] = query.Type(778)
	cols["trx_lock_structs"] = query.Type(778)
	cols["trx_lock_memory_bytes"] = query.Type(778)
	cols["trx_rows_locked"] = query.Type(778)
	cols["trx_rows_modified"] = query.Type(778)
	cols["trx_concurrency_tickets"] = query.Type(778)
	cols["trx_isolation_level"] = query.Type(6165)
	cols["trx_unique_checks"] = query.Type(263)
	cols["trx_foreign_key_checks"] = query.Type(263)
	cols["trx_last_foreign_key_error"] = query.Type(6165)
	cols["trx_adaptive_hash_latched"] = query.Type(263)
	cols["trx_adaptive_hash_timeout"] = query.Type(778)
	cols["trx_is_read_only"] = query.Type(263)
	cols["trx_autocommit_non_locking"] = query.Type(263)
	cols["trx_schedule_weight"] = query.Type(778)
	infSchema["INNODB_TRX"] = cols
	cols = map[string]query.Type{}
	cols["TABLE_ID"] = query.Type(778)
	cols["POS"] = query.Type(776)
	cols["BASE_POS"] = query.Type(776)
	infSchema["INNODB_VIRTUAL"] = cols
	cols = map[string]query.Type{}
	cols["CONSTRAINT_CATALOG"] = query.Type(6165)
	cols["CONSTRAINT_SCHEMA"] = query.Type(6165)
	cols["CONSTRAINT_NAME"] = query.Type(6165)
	cols["TABLE_CATALOG"] = query.Type(6165)
	cols["TABLE_SCHEMA"] = query.Type(6165)
	cols["TABLE_NAME"] = query.Type(6165)
	cols["COLUMN_NAME"] = query.Type(6165)
	cols["ORDINAL_POSITION"] = query.Type(776)
	cols["POSITION_IN_UNIQUE_CONSTRAINT"] = query.Type(776)
	cols["REFERENCED_TABLE_SCHEMA"] = query.Type(6165)
	cols["REFERENCED_TABLE_NAME"] = query.Type(6165)
	cols["REFERENCED_COLUMN_NAME"] = query.Type(6165)
	infSchema["KEY_COLUMN_USAGE"] = cols
	cols = map[string]query.Type{}
	cols["WORD"] = query.Type(6165)
	cols["RESERVED"] = query.Type(263)
	infSchema["KEYWORDS"] = cols
	cols = map[string]query.Type{}
	cols["QUERY"] = query.Type(6165)
	cols["TRACE"] = query.Type(6165)
	cols["MISSING_BYTES_BEYOND_MAX_MEM_SIZE"] = query.Type(263)
	cols["INSUFFICIENT_PRIVILEGES"] = query.Type(257)
	infSchema["OPTIMIZER_TRACE"] = cols
	cols = map[string]query.Type{}
	cols["SPECIFIC_CATALOG"] = query.Type(6165)
	cols["SPECIFIC_SCHEMA"] = query.Type(6165)
	cols["SPECIFIC_NAME"] = query.Type(6165)
	cols["ORDINAL_POSITION"] = query.Type(778)
	cols["PARAMETER_MODE"] = query.Type(6165)
	cols["PARAMETER_NAME"] = query.Type(6165)
	cols["DATA_TYPE"] = query.Type(6163)
	cols["CHARACTER_MAXIMUM_LENGTH"] = query.Type(265)
	cols["CHARACTER_OCTET_LENGTH"] = query.Type(265)
	cols["NUMERIC_PRECISION"] = query.Type(776)
	cols["NUMERIC_SCALE"] = query.Type(265)
	cols["DATETIME_PRECISION"] = query.Type(776)
	cols["CHARACTER_SET_NAME"] = query.Type(6165)
	cols["COLLATION_NAME"] = query.Type(6165)
	cols["DTD_IDENTIFIER"] = query.Type(6163)
	cols["ROUTINE_TYPE"] = query.Type(2074)
	infSchema["PARAMETERS"] = cols
	cols = map[string]query.Type{}
	cols["TABLE_CATALOG"] = query.Type(6165)
	cols["TABLE_SCHEMA"] = query.Type(6165)
	cols["TABLE_NAME"] = query.Type(6165)
	cols["PARTITION_NAME"] = query.Type(6165)
	cols["SUBPARTITION_NAME"] = query.Type(6165)
	cols["PARTITION_ORDINAL_POSITION"] = query.Type(776)
	cols["SUBPARTITION_ORDINAL_POSITION"] = query.Type(776)
	cols["PARTITION_METHOD"] = query.Type(6165)
	cols["SUBPARTITION_METHOD"] = query.Type(6165)
	cols["PARTITION_EXPRESSION"] = query.Type(6165)
	cols["SUBPARTITION_EXPRESSION"] = query.Type(6165)
	cols["PARTITION_DESCRIPTION"] = query.Type(6163)
	cols["TABLE_ROWS"] = query.Type(778)
	cols["AVG_ROW_LENGTH"] = query.Type(778)
	cols["DATA_LENGTH"] = query.Type(778)
	cols["MAX_DATA_LENGTH"] = query.Type(778)
	cols["INDEX_LENGTH"] = query.Type(778)
	cols["DATA_FREE"] = query.Type(778)
	cols["CREATE_TIME"] = query.Type(2061)
	cols["UPDATE_TIME"] = query.Type(2064)
	cols["CHECK_TIME"] = query.Type(2064)
	cols["CHECKSUM"] = query.Type(265)
	cols["PARTITION_COMMENT"] = query.Type(6163)
	cols["NODEGROUP"] = query.Type(6165)
	cols["TABLESPACE_NAME"] = query.Type(6165)
	infSchema["PARTITIONS"] = cols
	cols = map[string]query.Type{}
	cols["PLUGIN_NAME"] = query.Type(6165)
	cols["PLUGIN_VERSION"] = query.Type(6165)
	cols["PLUGIN_STATUS"] = query.Type(6165)
	cols["PLUGIN_TYPE"] = query.Type(6165)
	cols["PLUGIN_TYPE_VERSION"] = query.Type(6165)
	cols["PLUGIN_LIBRARY"] = query.Type(6165)
	cols["PLUGIN_LIBRARY_VERSION"] = query.Type(6165)
	cols["PLUGIN_AUTHOR"] = query.Type(6165)
	cols["PLUGIN_DESCRIPTION"] = query.Type(6165)
	cols["PLUGIN_LICENSE"] = query.Type(6165)
	cols["LOAD_OPTION"] = query.Type(6165)
	infSchema["PLUGINS"] = cols
	cols = map[string]query.Type{}
	cols["ID"] = query.Type(778)
	cols["USER"] = query.Type(6165)
	cols["HOST"] = query.Type(6165)
	cols["DB"] = query.Type(6165)
	cols["COMMAND"] = query.Type(6165)
	cols["TIME"] = query.Type(263)
	cols["STATE"] = query.Type(6165)
	cols["INFO"] = query.Type(6165)
	infSchema["PROCESSLIST"] = cols
	cols = map[string]query.Type{}
	cols["QUERY_ID"] = query.Type(263)
	cols["SEQ"] = query.Type(263)
	cols["STATE"] = query.Type(6165)
	cols["DURATION"] = query.Type(18)
	cols["CPU_USER"] = query.Type(18)
	cols["CPU_SYSTEM"] = query.Type(18)
	cols["CONTEXT_VOLUNTARY"] = query.Type(263)
	cols["CONTEXT_INVOLUNTARY"] = query.Type(263)
	cols["BLOCK_OPS_IN"] = query.Type(263)
	cols["BLOCK_OPS_OUT"] = query.Type(263)
	cols["MESSAGES_SENT"] = query.Type(263)
	cols["MESSAGES_RECEIVED"] = query.Type(263)
	cols["PAGE_FAULTS_MAJOR"] = query.Type(263)
	cols["PAGE_FAULTS_MINOR"] = query.Type(263)
	cols["SWAPS"] = query.Type(263)
	cols["SOURCE_FUNCTION"] = query.Type(6165)
	cols["SOURCE_FILE"] = query.Type(6165)
	cols["SOURCE_LINE"] = query.Type(263)
	infSchema["PROFILING"] = cols
	cols = map[string]query.Type{}
	cols["CONSTRAINT_CATALOG"] = query.Type(6165)
	cols["CONSTRAINT_SCHEMA"] = query.Type(6165)
	cols["CONSTRAINT_NAME"] = query.Type(6165)
	cols["UNIQUE_CONSTRAINT_CATALOG"] = query.Type(6165)
	cols["UNIQUE_CONSTRAINT_SCHEMA"] = query.Type(6165)
	cols["UNIQUE_CONSTRAINT_NAME"] = query.Type(6165)
	cols["MATCH_OPTION"] = query.Type(2074)
	cols["UPDATE_RULE"] = query.Type(2074)
	cols["DELETE_RULE"] = query.Type(2074)
	cols["TABLE_NAME"] = query.Type(6165)
	cols["REFERENCED_TABLE_NAME"] = query.Type(6165)
	infSchema["REFERENTIAL_CONSTRAINTS"] = cols
	cols = map[string]query.Type{}
	cols["RESOURCE_GROUP_NAME"] = query.Type(6165)
	cols["RESOURCE_GROUP_TYPE"] = query.Type(2074)
	cols["RESOURCE_GROUP_ENABLED"] = query.Type(257)
	cols["VCPU_IDS"] = query.Type(10260)
	cols["THREAD_PRIORITY"] = query.Type(263)
	infSchema["RESOURCE_GROUPS"] = cols
	cols = map[string]query.Type{}
	cols["GRANTOR"] = query.Type(6165)
	cols["GRANTOR_HOST"] = query.Type(6165)
	cols["GRANTEE"] = query.Type(6167)
	cols["GRANTEE_HOST"] = query.Type(6167)
	cols["TABLE_CATALOG"] = query.Type(6165)
	cols["TABLE_SCHEMA"] = query.Type(6167)
	cols["TABLE_NAME"] = query.Type(6167)
	cols["COLUMN_NAME"] = query.Type(6167)
	cols["PRIVILEGE_TYPE"] = query.Type(2075)
	cols["IS_GRANTABLE"] = query.Type(6165)
	infSchema["ROLE_COLUMN_GRANTS"] = cols
	cols = map[string]query.Type{}
	cols["GRANTOR"] = query.Type(6165)
	cols["GRANTOR_HOST"] = query.Type(6165)
	cols["GRANTEE"] = query.Type(6167)
	cols["GRANTEE_HOST"] = query.Type(6167)
	cols["SPECIFIC_CATALOG"] = query.Type(6165)
	cols["SPECIFIC_SCHEMA"] = query.Type(6167)
	cols["SPECIFIC_NAME"] = query.Type(6167)
	cols["ROUTINE_CATALOG"] = query.Type(6165)
	cols["ROUTINE_SCHEMA"] = query.Type(6167)
	cols["ROUTINE_NAME"] = query.Type(6167)
	cols["PRIVILEGE_TYPE"] = query.Type(2075)
	cols["IS_GRANTABLE"] = query.Type(6165)
	infSchema["ROLE_ROUTINE_GRANTS"] = cols
	cols = map[string]query.Type{}
	cols["GRANTOR"] = query.Type(6165)
	cols["GRANTOR_HOST"] = query.Type(6165)
	cols["GRANTEE"] = query.Type(6167)
	cols["GRANTEE_HOST"] = query.Type(6167)
	cols["TABLE_CATALOG"] = query.Type(6165)
	cols["TABLE_SCHEMA"] = query.Type(6167)
	cols["TABLE_NAME"] = query.Type(6167)
	cols["PRIVILEGE_TYPE"] = query.Type(2075)
	cols["IS_GRANTABLE"] = query.Type(6165)
	infSchema["ROLE_TABLE_GRANTS"] = cols
	cols = map[string]query.Type{}
	cols["SPECIFIC_NAME"] = query.Type(6165)
	cols["ROUTINE_CATALOG"] = query.Type(6165)
	cols["ROUTINE_SCHEMA"] = query.Type(6165)
	cols["ROUTINE_NAME"] = query.Type(6165)
	cols["ROUTINE_TYPE"] = query.Type(2074)
	cols["DATA_TYPE"] = query.Type(6163)
	cols["CHARACTER_MAXIMUM_LENGTH"] = query.Type(265)
	cols["CHARACTER_OCTET_LENGTH"] = query.Type(265)
	cols["NUMERIC_PRECISION"] = query.Type(776)
	cols["NUMERIC_SCALE"] = query.Type(776)
	cols["DATETIME_PRECISION"] = query.Type(776)
	cols["CHARACTER_SET_NAME"] = query.Type(6165)
	cols["COLLATION_NAME"] = query.Type(6165)
	cols["DTD_IDENTIFIER"] = query.Type(6163)
	cols["ROUTINE_BODY"] = query.Type(6165)
	cols["ROUTINE_DEFINITION"] = query.Type(6163)
	cols["EXTERNAL_NAME"] = query.Type(10264)
	cols["EXTERNAL_LANGUAGE"] = query.Type(6165)
	cols["PARAMETER_STYLE"] = query.Type(6165)
	cols["IS_DETERMINISTIC"] = query.Type(6165)
	cols["SQL_DATA_ACCESS"] = query.Type(2074)
	cols["SQL_PATH"] = query.Type(10264)
	cols["SECURITY_TYPE"] = query.Type(2074)
	cols["CREATED"] = query.Type(2061)
	cols["LAST_ALTERED"] = query.Type(2061)
	cols["SQL_MODE"] = query.Type(2075)
	cols["ROUTINE_COMMENT"] = query.Type(6163)
	cols["DEFINER"] = query.Type(6165)
	cols["CHARACTER_SET_CLIENT"] = query.Type(6165)
	cols["COLLATION_CONNECTION"] = query.Type(6165)
	cols["DATABASE_COLLATION"] = query.Type(6165)
	infSchema["ROUTINES"] = cols
	cols = map[string]query.Type{}
	cols["GRANTEE"] = query.Type(6165)
	cols["TABLE_CATALOG"] = query.Type(6165)
	cols["TABLE_SCHEMA"] = query.Type(6165)
	cols["PRIVILEGE_TYPE"] = query.Type(6165)
	cols["IS_GRANTABLE"] = query.Type(6165)
	infSchema["SCHEMA_PRIVILEGES"] = cols
	cols = map[string]query.Type{}
	cols["CATALOG_NAME"] = query.Type(6165)
	cols["SCHEMA_NAME"] = query.Type(6165)
	cols["DEFAULT_CHARACTER_SET_NAME"] = query.Type(6165)
	cols["DEFAULT_COLLATION_NAME"] = query.Type(6165)
	cols["SQL_PATH"] = query.Type(10264)
	cols["DEFAULT_ENCRYPTION"] = query.Type(2074)
	infSchema["SCHEMATA"] = cols
	cols = map[string]query.Type{}
	cols["CATALOG_NAME"] = query.Type(6165)
	cols["SCHEMA_NAME"] = query.Type(6165)
	cols["OPTIONS"] = query.Type(6165)
	infSchema["SCHEMATA_EXTENSIONS"] = cols
	cols = map[string]query.Type{}
	cols["TABLE_CATALOG"] = query.Type(6165)
	cols["TABLE_SCHEMA"] = query.Type(6165)
	cols["TABLE_NAME"] = query.Type(6165)
	cols["COLUMN_NAME"] = query.Type(6165)
	cols["SRS_NAME"] = query.Type(6165)
	cols["SRS_ID"] = query.Type(776)
	cols["GEOMETRY_TYPE_NAME"] = query.Type(6163)
	infSchema["ST_GEOMETRY_COLUMNS"] = cols
	cols = map[string]query.Type{}
	cols["SRS_NAME"] = query.Type(6165)
	cols["SRS_ID"] = query.Type(776)
	cols["ORGANIZATION"] = query.Type(6165)
	cols["ORGANIZATION_COORDSYS_ID"] = query.Type(776)
	cols["DEFINITION"] = query.Type(6165)
	cols["DESCRIPTION"] = query.Type(6165)
	infSchema["ST_SPATIAL_REFERENCE_SYSTEMS"] = cols
	cols = map[string]query.Type{}
	cols["UNIT_NAME"] = query.Type(6165)
	cols["UNIT_TYPE"] = query.Type(6165)
	cols["CONVERSION_FACTOR"] = query.Type(1036)
	cols["DESCRIPTION"] = query.Type(6165)
	infSchema["ST_UNITS_OF_MEASURE"] = cols
	cols = map[string]query.Type{}
	cols["TABLE_CATALOG"] = query.Type(6165)
	cols["TABLE_SCHEMA"] = query.Type(6165)
	cols["TABLE_NAME"] = query.Type(6165)
	cols["NON_UNIQUE"] = query.Type(263)
	cols["INDEX_SCHEMA"] = query.Type(6165)
	cols["INDEX_NAME"] = query.Type(6165)
	cols["SEQ_IN_INDEX"] = query.Type(776)
	cols["COLUMN_NAME"] = query.Type(6165)
	cols["COLLATION"] = query.Type(6165)
	cols["CARDINALITY"] = query.Type(265)
	cols["SUB_PART"] = query.Type(265)
	cols["PACKED"] = query.Type(10264)
	cols["NULLABLE"] = query.Type(6165)
	cols["INDEX_TYPE"] = query.Type(6165)
	cols["COMMENT"] = query.Type(6165)
	cols["INDEX_COMMENT"] = query.Type(6165)
	cols["IS_VISIBLE"] = query.Type(6165)
	cols["EXPRESSION"] = query.Type(6163)
	infSchema["STATISTICS"] = cols
	cols = map[string]query.Type{}
	cols["CONSTRAINT_CATALOG"] = query.Type(6165)
	cols["CONSTRAINT_SCHEMA"] = query.Type(6165)
	cols["CONSTRAINT_NAME"] = query.Type(6165)
	cols["TABLE_SCHEMA"] = query.Type(6165)
	cols["TABLE_NAME"] = query.Type(6165)
	cols["CONSTRAINT_TYPE"] = query.Type(6165)
	cols["ENFORCED"] = query.Type(6165)
	infSchema["TABLE_CONSTRAINTS"] = cols
	cols = map[string]query.Type{}
	cols["CONSTRAINT_CATALOG"] = query.Type(6165)
	cols["CONSTRAINT_SCHEMA"] = query.Type(6165)
	cols["CONSTRAINT_NAME"] = query.Type(6165)
	cols["TABLE_NAME"] = query.Type(6165)
	cols["ENGINE_ATTRIBUTE"] = query.Type(2078)
	cols["SECONDARY_ENGINE_ATTRIBUTE"] = query.Type(2078)
	infSchema["TABLE_CONSTRAINTS_EXTENSIONS"] = cols
	cols = map[string]query.Type{}
	cols["GRANTEE"] = query.Type(6165)
	cols["TABLE_CATALOG"] = query.Type(6165)
	cols["TABLE_SCHEMA"] = query.Type(6165)
	cols["TABLE_NAME"] = query.Type(6165)
	cols["PRIVILEGE_TYPE"] = query.Type(6165)
	cols["IS_GRANTABLE"] = query.Type(6165)
	infSchema["TABLE_PRIVILEGES"] = cols
	cols = map[string]query.Type{}
	cols["TABLE_CATALOG"] = query.Type(6165)
	cols["TABLE_SCHEMA"] = query.Type(6165)
	cols["TABLE_NAME"] = query.Type(6165)
	cols["TABLE_TYPE"] = query.Type(2074)
	cols["ENGINE"] = query.Type(6165)
	cols["VERSION"] = query.Type(263)
	cols["ROW_FORMAT"] = query.Type(2074)
	cols["TABLE_ROWS"] = query.Type(778)
	cols["AVG_ROW_LENGTH"] = query.Type(778)
	cols["DATA_LENGTH"] = query.Type(778)
	cols["MAX_DATA_LENGTH"] = query.Type(778)
	cols["INDEX_LENGTH"] = query.Type(778)
	cols["DATA_FREE"] = query.Type(778)
	cols["AUTO_INCREMENT"] = query.Type(778)
	cols["CREATE_TIME"] = query.Type(2061)
	cols["UPDATE_TIME"] = query.Type(2064)
	cols["CHECK_TIME"] = query.Type(2064)
	cols["TABLE_COLLATION"] = query.Type(6165)
	cols["CHECKSUM"] = query.Type(265)
	cols["CREATE_OPTIONS"] = query.Type(6165)
	cols["TABLE_COMMENT"] = query.Type(6163)
	infSchema["TABLES"] = cols
	cols = map[string]query.Type{}
	cols["TABLE_CATALOG"] = query.Type(6165)
	cols["TABLE_SCHEMA"] = query.Type(6165)
	cols["TABLE_NAME"] = query.Type(6165)
	cols["ENGINE_ATTRIBUTE"] = query.Type(2078)
	cols["SECONDARY_ENGINE_ATTRIBUTE"] = query.Type(2078)
	infSchema["TABLES_EXTENSIONS"] = cols
	cols = map[string]query.Type{}
	cols["TABLESPACE_NAME"] = query.Type(6165)
	cols["ENGINE"] = query.Type(6165)
	cols["TABLESPACE_TYPE"] = query.Type(6165)
	cols["LOGFILE_GROUP_NAME"] = query.Type(6165)
	cols["EXTENT_SIZE"] = query.Type(778)
	cols["AUTOEXTEND_SIZE"] = query.Type(778)
	cols["MAXIMUM_SIZE"] = query.Type(778)
	cols["NODEGROUP_ID"] = query.Type(778)
	cols["TABLESPACE_COMMENT"] = query.Type(6165)
	infSchema["TABLESPACES"] = cols
	cols = map[string]query.Type{}
	cols["TABLESPACE_NAME"] = query.Type(6165)
	cols["ENGINE_ATTRIBUTE"] = query.Type(2078)
	infSchema["TABLESPACES_EXTENSIONS"] = cols
	cols = map[string]query.Type{}
	cols["TRIGGER_CATALOG"] = query.Type(6165)
	cols["TRIGGER_SCHEMA"] = query.Type(6165)
	cols["TRIGGER_NAME"] = query.Type(6165)
	cols["EVENT_MANIPULATION"] = query.Type(2074)
	cols["EVENT_OBJECT_CATALOG"] = query.Type(6165)
	cols["EVENT_OBJECT_SCHEMA"] = query.Type(6165)
	cols["EVENT_OBJECT_TABLE"] = query.Type(6165)
	cols["ACTION_ORDER"] = query.Type(776)
	cols["ACTION_CONDITION"] = query.Type(10264)
	cols["ACTION_STATEMENT"] = query.Type(6163)
	cols["ACTION_ORIENTATION"] = query.Type(6165)
	cols["ACTION_TIMING"] = query.Type(2074)
	cols["ACTION_REFERENCE_OLD_TABLE"] = query.Type(10264)
	cols["ACTION_REFERENCE_NEW_TABLE"] = query.Type(10264)
	cols["ACTION_REFERENCE_OLD_ROW"] = query.Type(6165)
	cols["ACTION_REFERENCE_NEW_ROW"] = query.Type(6165)
	cols["CREATED"] = query.Type(2061)
	cols["SQL_MODE"] = query.Type(2075)
	cols["DEFINER"] = query.Type(6165)
	cols["CHARACTER_SET_CLIENT"] = query.Type(6165)
	cols["COLLATION_CONNECTION"] = query.Type(6165)
	cols["DATABASE_COLLATION"] = query.Type(6165)
	infSchema["TRIGGERS"] = cols
	cols = map[string]query.Type{}
	cols["USER"] = query.Type(6167)
	cols["HOST"] = query.Type(6167)
	cols["ATTRIBUTE"] = query.Type(6163)
	infSchema["USER_ATTRIBUTES"] = cols
	cols = map[string]query.Type{}
	cols["GRANTEE"] = query.Type(6165)
	cols["TABLE_CATALOG"] = query.Type(6165)
	cols["PRIVILEGE_TYPE"] = query.Type(6165)
	cols["IS_GRANTABLE"] = query.Type(6165)
	infSchema["USER_PRIVILEGES"] = cols
	cols = map[string]query.Type{}
	cols["TABLE_CATALOG"] = query.Type(6165)
	cols["TABLE_SCHEMA"] = query.Type(6165)
	cols["TABLE_NAME"] = query.Type(6165)
	cols["SPECIFIC_CATALOG"] = query.Type(6165)
	cols["SPECIFIC_SCHEMA"] = query.Type(6165)
	cols["SPECIFIC_NAME"] = query.Type(6165)
	infSchema["VIEW_ROUTINE_USAGE"] = cols
	cols = map[string]query.Type{}
	cols["VIEW_CATALOG"] = query.Type(6165)
	cols["VIEW_SCHEMA"] = query.Type(6165)
	cols["VIEW_NAME"] = query.Type(6165)
	cols["TABLE_CATALOG"] = query.Type(6165)
	cols["TABLE_SCHEMA"] = query.Type(6165)
	cols["TABLE_NAME"] = query.Type(6165)
	infSchema["VIEW_TABLE_USAGE"] = cols
	cols = map[string]query.Type{}
	cols["TABLE_CATALOG"] = query.Type(6165)
	cols["TABLE_SCHEMA"] = query.Type(6165)
	cols["TABLE_NAME"] = query.Type(6165)
	cols["VIEW_DEFINITION"] = query.Type(6163)
	cols["CHECK_OPTION"] = query.Type(2074)
	cols["IS_UPDATABLE"] = query.Type(2074)
	cols["DEFINER"] = query.Type(6165)
	cols["SECURITY_TYPE"] = query.Type(6165)
	cols["CHARACTER_SET_CLIENT"] = query.Type(6165)
	cols["COLLATION_CONNECTION"] = query.Type(6165)
	infSchema["VIEWS"] = cols
	return infSchema
}

type infoSchemaWithColumns struct {
	inner          SchemaInformation
	infoSchemaData map[string]map[string]query.Type
}

// newSchemaInfo returns a SchemaInformation that has the column information for all info_schema tables
func newSchemaInfo(inner SchemaInformation) SchemaInformation {
	return &infoSchemaWithColumns{inner: inner, infoSchemaData: getInfoSchema()}
}

// FindTableOrVindex implements the SchemaInformation interface
func (i *infoSchemaWithColumns) FindTableOrVindex(tbl sqlparser.TableName) (*vindexes.Table, vindexes.Vindex, string, topodatapb.TabletType, key.Destination, error) {
	if !strings.EqualFold(tbl.Qualifier.String(), "information_schema") {
		return i.inner.FindTableOrVindex(tbl)
	}

	ks := vindexes.Keyspace{
		Name:    "information_schema",
		Sharded: false,
	}
	var cols []vindexes.Column
	for name, typ := range i.infoSchemaData[strings.ToUpper(tbl.Name.String())] {
		cols = append(cols, vindexes.Column{
			Name: sqlparser.NewIdentifierCI(name),
			Type: typ,
		})
	}

	sort.Slice(cols, func(i, j int) bool {
		return cols[i].Name.String() < cols[j].Name.String()
	})

	vtbl := &vindexes.Table{
		Type:                    "View",
		Name:                    sqlparser.NewIdentifierCS(tbl.Name.String()),
		Keyspace:                &ks,
		Columns:                 cols,
		ColumnListAuthoritative: true,
	}
	return vtbl, nil, "", topodatapb.TabletType_UNKNOWN, nil, nil
}

// ConnCollation implements the SchemaInformation interface
func (i *infoSchemaWithColumns) ConnCollation() collations.ID {
	return i.inner.ConnCollation()
}
