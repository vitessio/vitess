[
  {
    "comment": "union all between two scatter selects",
    "query": "select id from user union all select id from music",
    "v3-plan": {
      "QueryType": "SELECT",
      "Original": "select id from user union all select id from music",
      "Instructions": {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from `user` where 1 != 1 union all select id from music where 1 != 1",
        "Query": "select id from `user` union all select id from music",
        "Table": "`user`"
      }
    },
    "gen4-plan": {
      "QueryType": "SELECT",
      "Original": "select id from user union all select id from music",
      "Instructions": {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select id from `user` where 1 != 1 union all select id from music where 1 != 1",
        "Query": "select id from `user` union all select id from music",
        "Table": "`user`"
      },
      "TablesUsed": [
        "user.music",
        "user.user"
      ]
    }
  },
  {
    "comment": "union distinct between two scatter selects",
    "query": "select id from user union select id from music",
    "v3-plan": {
      "QueryType": "SELECT",
      "Original": "select id from user union select id from music",
      "Instructions": {
        "OperatorType": "Distinct",
        "Inputs": [
          {
            "OperatorType": "Concatenate",
            "Inputs": [
              {
                "OperatorType": "Route",
                "Variant": "Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select id from `user` where 1 != 1",
                "Query": "select id from `user`",
                "Table": "`user`"
              },
              {
                "OperatorType": "Route",
                "Variant": "Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select id from music where 1 != 1",
                "Query": "select id from music",
                "Table": "music"
              }
            ]
          }
        ]
      }
    },
    "gen4-plan": {
      "QueryType": "SELECT",
      "Original": "select id from user union select id from music",
      "Instructions": {
        "OperatorType": "Distinct",
        "Collations": [
          "(0:1)"
        ],
        "ResultColumns": 1,
        "Inputs": [
          {
            "OperatorType": "Route",
            "Variant": "Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select id, weight_string(id) from `user` where 1 != 1 union select id, weight_string(id) from music where 1 != 1",
            "Query": "select id, weight_string(id) from `user` union select id, weight_string(id) from music",
            "Table": "`user`"
          }
        ]
      },
      "TablesUsed": [
        "user.music",
        "user.user"
      ]
    }
  },
  {
    "comment": "union all between two SelectEqualUnique",
    "query": "select id from user where id = 1 union all select id from user where id = 5",
    "v3-plan": {
      "QueryType": "SELECT",
      "Original": "select id from user where id = 1 union all select id from user where id = 5",
      "Instructions": {
        "OperatorType": "Concatenate",
        "Inputs": [
          {
            "OperatorType": "Route",
            "Variant": "EqualUnique",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select id from `user` where 1 != 1",
            "Query": "select id from `user` where id = 1",
            "Table": "`user`",
            "Values": [
              "INT64(1)"
            ],
            "Vindex": "user_index"
          },
          {
            "OperatorType": "Route",
            "Variant": "EqualUnique",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select id from `user` where 1 != 1",
            "Query": "select id from `user` where id = 5",
            "Table": "`user`",
            "Values": [
              "INT64(5)"
            ],
            "Vindex": "user_index"
          }
        ]
      }
    },
    "gen4-plan": {
      "QueryType": "SELECT",
      "Original": "select id from user where id = 1 union all select id from user where id = 5",
      "Instructions": {
        "OperatorType": "Concatenate",
        "Inputs": [
          {
            "OperatorType": "Route",
            "Variant": "EqualUnique",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select id from `user` where 1 != 1",
            "Query": "select id from `user` where id = 1",
            "Table": "`user`",
            "Values": [
              "INT64(1)"
            ],
            "Vindex": "user_index"
          },
          {
            "OperatorType": "Route",
            "Variant": "EqualUnique",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select id from `user` where 1 != 1",
            "Query": "select id from `user` where id = 5",
            "Table": "`user`",
            "Values": [
              "INT64(5)"
            ],
            "Vindex": "user_index"
          }
        ]
      },
      "TablesUsed": [
        "user.user"
      ]
    }
  },
  {
    "comment": "almost dereks query - two queries with order by and limit being scattered to two different sets of tablets",
    "query": "(SELECT id FROM user ORDER BY id DESC LIMIT 1) UNION ALL (SELECT id FROM music ORDER BY id DESC LIMIT 1)",
    "v3-plan": {
      "QueryType": "SELECT",
      "Original": "(SELECT id FROM user ORDER BY id DESC LIMIT 1) UNION ALL (SELECT id FROM music ORDER BY id DESC LIMIT 1)",
      "Instructions": {
        "OperatorType": "Concatenate",
        "Inputs": [
          {
            "OperatorType": "Limit",
            "Count": "INT64(1)",
            "Inputs": [
              {
                "OperatorType": "Route",
                "Variant": "Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select id, weight_string(id) from `user` where 1 != 1",
                "OrderBy": "(0|1) DESC",
                "Query": "select id, weight_string(id) from `user` order by id desc limit :__upper_limit",
                "ResultColumns": 1,
                "Table": "`user`"
              }
            ]
          },
          {
            "OperatorType": "Limit",
            "Count": "INT64(1)",
            "Inputs": [
              {
                "OperatorType": "Route",
                "Variant": "Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select id, weight_string(id) from music where 1 != 1",
                "OrderBy": "(0|1) DESC",
                "Query": "select id, weight_string(id) from music order by id desc limit :__upper_limit",
                "ResultColumns": 1,
                "Table": "music"
              }
            ]
          }
        ]
      }
    },
    "gen4-plan": {
      "QueryType": "SELECT",
      "Original": "(SELECT id FROM user ORDER BY id DESC LIMIT 1) UNION ALL (SELECT id FROM music ORDER BY id DESC LIMIT 1)",
      "Instructions": {
        "OperatorType": "Concatenate",
        "Inputs": [
          {
            "OperatorType": "Limit",
            "Count": "INT64(1)",
            "Inputs": [
              {
                "OperatorType": "Route",
                "Variant": "Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select id, weight_string(id) from `user` where 1 != 1",
                "OrderBy": "(0|1) DESC",
                "Query": "select id, weight_string(id) from `user` order by id desc limit :__upper_limit",
                "ResultColumns": 1,
                "Table": "`user`"
              }
            ]
          },
          {
            "OperatorType": "Limit",
            "Count": "INT64(1)",
            "Inputs": [
              {
                "OperatorType": "Route",
                "Variant": "Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select id, weight_string(id) from music where 1 != 1",
                "OrderBy": "(0|1) DESC",
                "Query": "select id, weight_string(id) from music order by id desc limit :__upper_limit",
                "ResultColumns": 1,
                "Table": "music"
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "user.music",
        "user.user"
      ]
    }
  },
  {
    "comment": "Union all",
    "query": "select col1, col2 from user union all select col1, col2 from user_extra",
    "v3-plan": {
      "QueryType": "SELECT",
      "Original": "select col1, col2 from user union all select col1, col2 from user_extra",
      "Instructions": {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select col1, col2 from `user` where 1 != 1 union all select col1, col2 from user_extra where 1 != 1",
        "Query": "select col1, col2 from `user` union all select col1, col2 from user_extra",
        "Table": "`user`"
      }
    },
    "gen4-plan": {
      "QueryType": "SELECT",
      "Original": "select col1, col2 from user union all select col1, col2 from user_extra",
      "Instructions": {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select col1, col2 from `user` where 1 != 1 union all select col1, col2 from user_extra where 1 != 1",
        "Query": "select col1, col2 from `user` union all select col1, col2 from user_extra",
        "Table": "`user`"
      },
      "TablesUsed": [
        "user.user",
        "user.user_extra"
      ]
    }
  },
  {
    "comment": "union operations in subqueries (FROM)",
    "query": "select * from (select * from user union all select * from user_extra) as t",
    "v3-plan": {
      "QueryType": "SELECT",
      "Original": "select * from (select * from user union all select * from user_extra) as t",
      "Instructions": {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select * from (select * from `user` where 1 != 1 union all select * from user_extra where 1 != 1) as t where 1 != 1",
        "Query": "select * from (select * from `user` union all select * from user_extra) as t",
        "Table": "`user`"
      }
    },
    "gen4-plan": {
      "QueryType": "SELECT",
      "Original": "select * from (select * from user union all select * from user_extra) as t",
      "Instructions": {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select * from (select * from `user` where 1 != 1 union all select * from user_extra where 1 != 1) as t where 1 != 1",
        "Query": "select * from (select * from `user` union all select * from user_extra) as t",
        "Table": "`user`"
      },
      "TablesUsed": [
        "user.user",
        "user.user_extra"
      ]
    }
  },
  {
    "comment": "union operations in derived table, without star expression (FROM)¡",
    "query": "select col1,col2 from (select col1, col2 from user union all select col1, col2 from user_extra) as t",
    "v3-plan": {
      "QueryType": "SELECT",
      "Original": "select col1,col2 from (select col1, col2 from user union all select col1, col2 from user_extra) as t",
      "Instructions": {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select col1, col2 from (select col1, col2 from `user` where 1 != 1 union all select col1, col2 from user_extra where 1 != 1) as t where 1 != 1",
        "Query": "select col1, col2 from (select col1, col2 from `user` union all select col1, col2 from user_extra) as t",
        "Table": "`user`"
      }
    },
    "gen4-plan": {
      "QueryType": "SELECT",
      "Original": "select col1,col2 from (select col1, col2 from user union all select col1, col2 from user_extra) as t",
      "Instructions": {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select col1, col2 from (select col1, col2 from `user` where 1 != 1 union all select col1, col2 from user_extra where 1 != 1) as t where 1 != 1",
        "Query": "select col1, col2 from (select col1, col2 from `user` union all select col1, col2 from user_extra) as t",
        "Table": "`user`"
      },
      "TablesUsed": [
        "user.user",
        "user.user_extra"
      ]
    }
  },
  {
    "comment": "union all between two scatter selects, with order by",
    "query": "(select id from user order by id limit 5) union all (select id from music order by id desc limit 5)",
    "v3-plan": {
      "QueryType": "SELECT",
      "Original": "(select id from user order by id limit 5) union all (select id from music order by id desc limit 5)",
      "Instructions": {
        "OperatorType": "Concatenate",
        "Inputs": [
          {
            "OperatorType": "Limit",
            "Count": "INT64(5)",
            "Inputs": [
              {
                "OperatorType": "Route",
                "Variant": "Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select id, weight_string(id) from `user` where 1 != 1",
                "OrderBy": "(0|1) ASC",
                "Query": "select id, weight_string(id) from `user` order by id asc limit :__upper_limit",
                "ResultColumns": 1,
                "Table": "`user`"
              }
            ]
          },
          {
            "OperatorType": "Limit",
            "Count": "INT64(5)",
            "Inputs": [
              {
                "OperatorType": "Route",
                "Variant": "Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select id, weight_string(id) from music where 1 != 1",
                "OrderBy": "(0|1) DESC",
                "Query": "select id, weight_string(id) from music order by id desc limit :__upper_limit",
                "ResultColumns": 1,
                "Table": "music"
              }
            ]
          }
        ]
      }
    },
    "gen4-plan": {
      "QueryType": "SELECT",
      "Original": "(select id from user order by id limit 5) union all (select id from music order by id desc limit 5)",
      "Instructions": {
        "OperatorType": "Concatenate",
        "Inputs": [
          {
            "OperatorType": "Limit",
            "Count": "INT64(5)",
            "Inputs": [
              {
                "OperatorType": "Route",
                "Variant": "Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select id, weight_string(id) from `user` where 1 != 1",
                "OrderBy": "(0|1) ASC",
                "Query": "select id, weight_string(id) from `user` order by id asc limit :__upper_limit",
                "ResultColumns": 1,
                "Table": "`user`"
              }
            ]
          },
          {
            "OperatorType": "Limit",
            "Count": "INT64(5)",
            "Inputs": [
              {
                "OperatorType": "Route",
                "Variant": "Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select id, weight_string(id) from music where 1 != 1",
                "OrderBy": "(0|1) DESC",
                "Query": "select id, weight_string(id) from music order by id desc limit :__upper_limit",
                "ResultColumns": 1,
                "Table": "music"
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "user.music",
        "user.user"
      ]
    }
  },
  {
    "comment": "union all on scatter and single route",
    "query": "select id from user where id = 1 union select id from user where id = 1  union all select id from user",
    "v3-plan": {
      "QueryType": "SELECT",
      "Original": "select id from user where id = 1 union select id from user where id = 1  union all select id from user",
      "Instructions": {
        "OperatorType": "Concatenate",
        "Inputs": [
          {
            "OperatorType": "Route",
            "Variant": "EqualUnique",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select id from `user` where 1 != 1 union select id from `user` where 1 != 1",
            "Query": "select id from `user` where id = 1 union select id from `user` where id = 1",
            "Table": "`user`",
            "Values": [
              "INT64(1)"
            ],
            "Vindex": "user_index"
          },
          {
            "OperatorType": "Route",
            "Variant": "Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select id from `user` where 1 != 1",
            "Query": "select id from `user`",
            "Table": "`user`"
          }
        ]
      }
    },
    "gen4-plan": {
      "QueryType": "SELECT",
      "Original": "select id from user where id = 1 union select id from user where id = 1  union all select id from user",
      "Instructions": {
        "OperatorType": "Concatenate",
        "Inputs": [
          {
            "OperatorType": "Route",
            "Variant": "EqualUnique",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select id from `user` where 1 != 1 union select id from `user` where 1 != 1",
            "Query": "select id from `user` where id = 1 union select id from `user` where id = 1",
            "Table": "`user`",
            "Values": [
              "INT64(1)"
            ],
            "Vindex": "user_index"
          },
          {
            "OperatorType": "Route",
            "Variant": "Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select id from `user` where 1 != 1",
            "Query": "select id from `user`",
            "Table": "`user`"
          }
        ]
      },
      "TablesUsed": [
        "user.user"
      ]
    }
  },
  {
    "comment": "union of information_schema with normal table",
    "query": "select * from information_schema.a union select * from unsharded",
    "v3-plan": {
      "QueryType": "SELECT",
      "Original": "select * from information_schema.a union select * from unsharded",
      "Instructions": {
        "OperatorType": "Distinct",
        "Inputs": [
          {
            "OperatorType": "Concatenate",
            "Inputs": [
              {
                "OperatorType": "Route",
                "Variant": "DBA",
                "Keyspace": {
                  "Name": "main",
                  "Sharded": false
                },
                "FieldQuery": "select * from information_schema.a where 1 != 1",
                "Query": "select * from information_schema.a",
                "Table": "information_schema.a"
              },
              {
                "OperatorType": "Route",
                "Variant": "Unsharded",
                "Keyspace": {
                  "Name": "main",
                  "Sharded": false
                },
                "FieldQuery": "select * from unsharded where 1 != 1",
                "Query": "select * from unsharded",
                "Table": "unsharded"
              }
            ]
          }
        ]
      }
    },
    "gen4-plan": {
      "QueryType": "SELECT",
      "Original": "select * from information_schema.a union select * from unsharded",
      "Instructions": {
        "OperatorType": "Distinct",
        "Inputs": [
          {
            "OperatorType": "Concatenate",
            "Inputs": [
              {
                "OperatorType": "Route",
                "Variant": "DBA",
                "Keyspace": {
                  "Name": "main",
                  "Sharded": false
                },
                "FieldQuery": "select * from information_schema.a where 1 != 1",
                "Query": "select distinct * from information_schema.a",
                "Table": "information_schema.a"
              },
              {
                "OperatorType": "Route",
                "Variant": "Unsharded",
                "Keyspace": {
                  "Name": "main",
                  "Sharded": false
                },
                "FieldQuery": "select * from unsharded where 1 != 1",
                "Query": "select distinct * from unsharded",
                "Table": "unsharded"
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "main.unsharded"
      ]
    }
  },
  {
    "comment": "union of information_schema with normal table",
    "query": "select * from unsharded union select * from information_schema.a",
    "v3-plan": {
      "QueryType": "SELECT",
      "Original": "select * from unsharded union select * from information_schema.a",
      "Instructions": {
        "OperatorType": "Distinct",
        "Inputs": [
          {
            "OperatorType": "Concatenate",
            "Inputs": [
              {
                "OperatorType": "Route",
                "Variant": "Unsharded",
                "Keyspace": {
                  "Name": "main",
                  "Sharded": false
                },
                "FieldQuery": "select * from unsharded where 1 != 1",
                "Query": "select * from unsharded",
                "Table": "unsharded"
              },
              {
                "OperatorType": "Route",
                "Variant": "DBA",
                "Keyspace": {
                  "Name": "main",
                  "Sharded": false
                },
                "FieldQuery": "select * from information_schema.a where 1 != 1",
                "Query": "select * from information_schema.a",
                "Table": "information_schema.a"
              }
            ]
          }
        ]
      }
    },
    "gen4-plan": {
      "QueryType": "SELECT",
      "Original": "select * from unsharded union select * from information_schema.a",
      "Instructions": {
        "OperatorType": "Distinct",
        "Inputs": [
          {
            "OperatorType": "Concatenate",
            "Inputs": [
              {
                "OperatorType": "Route",
                "Variant": "Unsharded",
                "Keyspace": {
                  "Name": "main",
                  "Sharded": false
                },
                "FieldQuery": "select * from unsharded where 1 != 1",
                "Query": "select distinct * from unsharded",
                "Table": "unsharded"
              },
              {
                "OperatorType": "Route",
                "Variant": "DBA",
                "Keyspace": {
                  "Name": "main",
                  "Sharded": false
                },
                "FieldQuery": "select * from information_schema.a where 1 != 1",
                "Query": "select distinct * from information_schema.a",
                "Table": "information_schema.a"
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "main.unsharded"
      ]
    }
  },
  {
    "comment": "multi-shard union",
    "query": "(select id from user union select id from music) union select 1 from dual",
    "v3-plan": {
      "QueryType": "SELECT",
      "Original": "(select id from user union select id from music) union select 1 from dual",
      "Instructions": {
        "OperatorType": "Distinct",
        "Inputs": [
          {
            "OperatorType": "Concatenate",
            "Inputs": [
              {
                "OperatorType": "Distinct",
                "Inputs": [
                  {
                    "OperatorType": "Concatenate",
                    "Inputs": [
                      {
                        "OperatorType": "Route",
                        "Variant": "Scatter",
                        "Keyspace": {
                          "Name": "user",
                          "Sharded": true
                        },
                        "FieldQuery": "select id from `user` where 1 != 1",
                        "Query": "select id from `user`",
                        "Table": "`user`"
                      },
                      {
                        "OperatorType": "Route",
                        "Variant": "Scatter",
                        "Keyspace": {
                          "Name": "user",
                          "Sharded": true
                        },
                        "FieldQuery": "select id from music where 1 != 1",
                        "Query": "select id from music",
                        "Table": "music"
                      }
                    ]
                  }
                ]
              },
              {
                "OperatorType": "Route",
                "Variant": "Reference",
                "Keyspace": {
                  "Name": "main",
                  "Sharded": false
                },
                "FieldQuery": "select 1 from dual where 1 != 1",
                "Query": "select 1 from dual",
                "Table": "dual"
              }
            ]
          }
        ]
      }
    },
    "gen4-plan": {
      "QueryType": "SELECT",
      "Original": "(select id from user union select id from music) union select 1 from dual",
      "Instructions": {
        "OperatorType": "Distinct",
        "Collations": [
          "(0:1)"
        ],
        "ResultColumns": 1,
        "Inputs": [
          {
            "OperatorType": "Concatenate",
            "Inputs": [
              {
                "OperatorType": "Route",
                "Variant": "Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select id, weight_string(id) from `user` where 1 != 1 union select id, weight_string(id) from music where 1 != 1",
                "Query": "select id, weight_string(id) from `user` union select id, weight_string(id) from music",
                "Table": "`user`"
              },
              {
                "OperatorType": "Route",
                "Variant": "Reference",
                "Keyspace": {
                  "Name": "main",
                  "Sharded": false
                },
                "FieldQuery": "select 1, weight_string(1) from dual where 1 != 1",
                "Query": "select distinct 1, weight_string(1) from dual",
                "Table": "dual"
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "main.dual",
        "user.music",
        "user.user"
      ]
    }
  },
  {
    "comment": "multi-shard union",
    "query": "select 1 from music union (select id from user union all select name from unsharded)",
    "v3-plan": {
      "QueryType": "SELECT",
      "Original": "select 1 from music union (select id from user union all select name from unsharded)",
      "Instructions": {
        "OperatorType": "Distinct",
        "Inputs": [
          {
            "OperatorType": "Concatenate",
            "Inputs": [
              {
                "OperatorType": "Route",
                "Variant": "Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select 1 from music where 1 != 1",
                "Query": "select 1 from music",
                "Table": "music"
              },
              {
                "OperatorType": "Concatenate",
                "Inputs": [
                  {
                    "OperatorType": "Route",
                    "Variant": "Scatter",
                    "Keyspace": {
                      "Name": "user",
                      "Sharded": true
                    },
                    "FieldQuery": "select id from `user` where 1 != 1",
                    "Query": "select id from `user`",
                    "Table": "`user`"
                  },
                  {
                    "OperatorType": "Route",
                    "Variant": "Unsharded",
                    "Keyspace": {
                      "Name": "main",
                      "Sharded": false
                    },
                    "FieldQuery": "select `name` from unsharded where 1 != 1",
                    "Query": "select `name` from unsharded",
                    "Table": "unsharded"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    "gen4-plan": "nesting of unions at the right-hand side is not yet supported"
  },
  {
    "comment": "multi-shard union",
    "query": "select 1 from music union (select id from user union select name from unsharded)",
    "v3-plan": {
      "QueryType": "SELECT",
      "Original": "select 1 from music union (select id from user union select name from unsharded)",
      "Instructions": {
        "OperatorType": "Distinct",
        "Inputs": [
          {
            "OperatorType": "Concatenate",
            "Inputs": [
              {
                "OperatorType": "Route",
                "Variant": "Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select 1 from music where 1 != 1",
                "Query": "select 1 from music",
                "Table": "music"
              },
              {
                "OperatorType": "Distinct",
                "Inputs": [
                  {
                    "OperatorType": "Concatenate",
                    "Inputs": [
                      {
                        "OperatorType": "Route",
                        "Variant": "Scatter",
                        "Keyspace": {
                          "Name": "user",
                          "Sharded": true
                        },
                        "FieldQuery": "select id from `user` where 1 != 1",
                        "Query": "select id from `user`",
                        "Table": "`user`"
                      },
                      {
                        "OperatorType": "Route",
                        "Variant": "Unsharded",
                        "Keyspace": {
                          "Name": "main",
                          "Sharded": false
                        },
                        "FieldQuery": "select `name` from unsharded where 1 != 1",
                        "Query": "select `name` from unsharded",
                        "Table": "unsharded"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    "gen4-plan": "nesting of unions at the right-hand side is not yet supported"
  },
  {
    "comment": "union with the same target shard because of vindex",
    "query": "select * from music where id = 1 union select * from user where id = 1",
    "v3-plan": {
      "QueryType": "SELECT",
      "Original": "select * from music where id = 1 union select * from user where id = 1",
      "Instructions": {
        "OperatorType": "Distinct",
        "Inputs": [
          {
            "OperatorType": "Concatenate",
            "Inputs": [
              {
                "OperatorType": "Route",
                "Variant": "EqualUnique",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select * from music where 1 != 1",
                "Query": "select * from music where id = 1",
                "Table": "music",
                "Values": [
                  "INT64(1)"
                ],
                "Vindex": "music_user_map"
              },
              {
                "OperatorType": "Route",
                "Variant": "EqualUnique",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select * from `user` where 1 != 1",
                "Query": "select * from `user` where id = 1",
                "Table": "`user`",
                "Values": [
                  "INT64(1)"
                ],
                "Vindex": "user_index"
              }
            ]
          }
        ]
      }
    },
    "gen4-plan": {
      "QueryType": "SELECT",
      "Original": "select * from music where id = 1 union select * from user where id = 1",
      "Instructions": {
        "OperatorType": "Distinct",
        "Inputs": [
          {
            "OperatorType": "Concatenate",
            "Inputs": [
              {
                "OperatorType": "Route",
                "Variant": "EqualUnique",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select * from music where 1 != 1",
                "Query": "select distinct * from music where id = 1",
                "Table": "music",
                "Values": [
                  "INT64(1)"
                ],
                "Vindex": "music_user_map"
              },
              {
                "OperatorType": "Route",
                "Variant": "EqualUnique",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select * from `user` where 1 != 1",
                "Query": "select distinct * from `user` where id = 1",
                "Table": "`user`",
                "Values": [
                  "INT64(1)"
                ],
                "Vindex": "user_index"
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "user.music",
        "user.user"
      ]
    }
  },
  {
    "comment": "union with different target shards",
    "query": "select 1 from music where id = 1 union select 1 from music where id = 2",
    "v3-plan": {
      "QueryType": "SELECT",
      "Original": "select 1 from music where id = 1 union select 1 from music where id = 2",
      "Instructions": {
        "OperatorType": "Distinct",
        "Inputs": [
          {
            "OperatorType": "Concatenate",
            "Inputs": [
              {
                "OperatorType": "Route",
                "Variant": "EqualUnique",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select 1 from music where 1 != 1",
                "Query": "select 1 from music where id = 1",
                "Table": "music",
                "Values": [
                  "INT64(1)"
                ],
                "Vindex": "music_user_map"
              },
              {
                "OperatorType": "Route",
                "Variant": "EqualUnique",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select 1 from music where 1 != 1",
                "Query": "select 1 from music where id = 2",
                "Table": "music",
                "Values": [
                  "INT64(2)"
                ],
                "Vindex": "music_user_map"
              }
            ]
          }
        ]
      }
    },
    "gen4-plan": {
      "QueryType": "SELECT",
      "Original": "select 1 from music where id = 1 union select 1 from music where id = 2",
      "Instructions": {
        "OperatorType": "Distinct",
        "Collations": [
          "0: binary"
        ],
        "Inputs": [
          {
            "OperatorType": "Concatenate",
            "Inputs": [
              {
                "OperatorType": "Route",
                "Variant": "EqualUnique",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select 1 from music where 1 != 1",
                "Query": "select distinct 1 from music where id = 1",
                "Table": "music",
                "Values": [
                  "INT64(1)"
                ],
                "Vindex": "music_user_map"
              },
              {
                "OperatorType": "Route",
                "Variant": "EqualUnique",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select 1 from music where 1 != 1",
                "Query": "select distinct 1 from music where id = 2",
                "Table": "music",
                "Values": [
                  "INT64(2)"
                ],
                "Vindex": "music_user_map"
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "user.music"
      ]
    }
  },
  {
    "comment": "multiple select statement have inner order by with union - TODO (systay) no need to send down ORDER BY if we are going to loose it with UNION DISTINCT",
    "query": "(select id from user order by 1 desc) union (select id from user order by 1 asc)",
    "v3-plan": {
      "QueryType": "SELECT",
      "Original": "(select id from user order by 1 desc) union (select id from user order by 1 asc)",
      "Instructions": {
        "OperatorType": "Distinct",
        "Inputs": [
          {
            "OperatorType": "Concatenate",
            "Inputs": [
              {
                "OperatorType": "Route",
                "Variant": "Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select id, weight_string(id) from `user` where 1 != 1",
                "OrderBy": "(0|1) DESC",
                "Query": "select id, weight_string(id) from `user` order by 1 desc",
                "ResultColumns": 1,
                "Table": "`user`"
              },
              {
                "OperatorType": "Route",
                "Variant": "Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select id, weight_string(id) from `user` where 1 != 1",
                "OrderBy": "(0|1) ASC",
                "Query": "select id, weight_string(id) from `user` order by 1 asc",
                "ResultColumns": 1,
                "Table": "`user`"
              }
            ]
          }
        ]
      }
    },
    "gen4-plan": {
      "QueryType": "SELECT",
      "Original": "(select id from user order by 1 desc) union (select id from user order by 1 asc)",
      "Instructions": {
        "OperatorType": "Distinct",
        "Collations": [
          "(0:1)"
        ],
        "ResultColumns": 1,
        "Inputs": [
          {
            "OperatorType": "Route",
            "Variant": "Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "(select id, weight_string(id) from `user` where 1 != 1) union (select id, weight_string(id) from `user` where 1 != 1)",
            "OrderBy": "(0|1) DESC",
            "Query": "(select id, weight_string(id) from `user` order by id desc) union (select id, weight_string(id) from `user` order by id asc)",
            "ResultColumns": 1,
            "Table": "`user`"
          }
        ]
      },
      "TablesUsed": [
        "user.user"
      ]
    }
  },
  {
    "comment": "multiple unions",
    "query": "select 1 union select null union select 1.0 union select '1' union select 2 union select 2.0 from user",
    "v3-plan": {
      "QueryType": "SELECT",
      "Original": "select 1 union select null union select 1.0 union select '1' union select 2 union select 2.0 from user",
      "Instructions": {
        "OperatorType": "Distinct",
        "Inputs": [
          {
            "OperatorType": "Concatenate",
            "Inputs": [
              {
                "OperatorType": "Route",
                "Variant": "Reference",
                "Keyspace": {
                  "Name": "main",
                  "Sharded": false
                },
                "FieldQuery": "select 1 from dual where 1 != 1 union select null from dual where 1 != 1 union select 1.0 from dual where 1 != 1 union select '1' from dual where 1 != 1 union select 2 from dual where 1 != 1",
                "Query": "select 1 from dual union select null from dual union select 1.0 from dual union select '1' from dual union select 2 from dual",
                "Table": "dual"
              },
              {
                "OperatorType": "Route",
                "Variant": "Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select 2.0 from `user` where 1 != 1",
                "Query": "select 2.0 from `user`",
                "Table": "`user`"
              }
            ]
          }
        ]
      }
    },
    "gen4-plan": {
      "QueryType": "SELECT",
      "Original": "select 1 union select null union select 1.0 union select '1' union select 2 union select 2.0 from user",
      "Instructions": {
        "OperatorType": "Distinct",
        "Collations": [
          "0: binary"
        ],
        "Inputs": [
          {
            "OperatorType": "Concatenate",
            "Inputs": [
              {
                "OperatorType": "Route",
                "Variant": "Reference",
                "Keyspace": {
                  "Name": "main",
                  "Sharded": false
                },
                "FieldQuery": "select 1 from dual where 1 != 1 union all select null from dual where 1 != 1 union all select 1.0 from dual where 1 != 1 union all select '1' from dual where 1 != 1 union select 2 from dual where 1 != 1",
                "Query": "select 1 from dual union all select null from dual union all select 1.0 from dual union all select '1' from dual union select 2 from dual",
                "Table": "dual"
              },
              {
                "OperatorType": "Route",
                "Variant": "Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select 2.0 from `user` where 1 != 1",
                "Query": "select distinct 2.0 from `user`",
                "Table": "`user`"
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "main.dual",
        "user.user"
      ]
    }
  },
  {
    "comment": "union distinct between a scatter query and a join (other side)",
    "query": "(select user.id, user.name from user join user_extra where user_extra.extra = 'asdf') union select 'b','c' from user",
    "v3-plan": {
      "QueryType": "SELECT",
      "Original": "(select user.id, user.name from user join user_extra where user_extra.extra = 'asdf') union select 'b','c' from user",
      "Instructions": {
        "OperatorType": "Distinct",
        "Inputs": [
          {
            "OperatorType": "Concatenate",
            "Inputs": [
              {
                "OperatorType": "Join",
                "Variant": "Join",
                "JoinColumnIndexes": "L:0,L:1",
                "TableName": "`user`_user_extra",
                "Inputs": [
                  {
                    "OperatorType": "Route",
                    "Variant": "Scatter",
                    "Keyspace": {
                      "Name": "user",
                      "Sharded": true
                    },
                    "FieldQuery": "select `user`.id, `user`.`name` from `user` where 1 != 1",
                    "Query": "select `user`.id, `user`.`name` from `user`",
                    "Table": "`user`"
                  },
                  {
                    "OperatorType": "Route",
                    "Variant": "Scatter",
                    "Keyspace": {
                      "Name": "user",
                      "Sharded": true
                    },
                    "FieldQuery": "select 1 from user_extra where 1 != 1",
                    "Query": "select 1 from user_extra where user_extra.extra = 'asdf'",
                    "Table": "user_extra"
                  }
                ]
              },
              {
                "OperatorType": "Route",
                "Variant": "Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select 'b', 'c' from `user` where 1 != 1",
                "Query": "select 'b', 'c' from `user`",
                "Table": "`user`"
              }
            ]
          }
        ]
      }
    },
    "gen4-plan": {
      "QueryType": "SELECT",
      "Original": "(select user.id, user.name from user join user_extra where user_extra.extra = 'asdf') union select 'b','c' from user",
      "Instructions": {
        "OperatorType": "Distinct",
        "Collations": [
          "(0:2)",
          "(1:3)"
        ],
        "ResultColumns": 2,
        "Inputs": [
          {
            "OperatorType": "Concatenate",
            "Inputs": [
              {
                "OperatorType": "Join",
                "Variant": "Join",
                "JoinColumnIndexes": "L:0,L:1,L:2,L:3",
                "TableName": "`user`_user_extra",
                "Inputs": [
                  {
                    "OperatorType": "Route",
                    "Variant": "Scatter",
                    "Keyspace": {
                      "Name": "user",
                      "Sharded": true
                    },
                    "FieldQuery": "select `user`.id, `user`.`name`, weight_string(`user`.id), weight_string(`user`.`name`) from `user` where 1 != 1",
                    "Query": "select `user`.id, `user`.`name`, weight_string(`user`.id), weight_string(`user`.`name`) from `user`",
                    "Table": "`user`"
                  },
                  {
                    "OperatorType": "Route",
                    "Variant": "Scatter",
                    "Keyspace": {
                      "Name": "user",
                      "Sharded": true
                    },
                    "FieldQuery": "select 1 from user_extra where 1 != 1",
                    "Query": "select 1 from user_extra where user_extra.extra = 'asdf'",
                    "Table": "user_extra"
                  }
                ]
              },
              {
                "OperatorType": "Route",
                "Variant": "Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select 'b', 'c', weight_string('b'), weight_string('c') from `user` where 1 != 1",
                "Query": "select distinct 'b', 'c', weight_string('b'), weight_string('c') from `user`",
                "Table": "`user`"
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "user.user",
        "user.user_extra"
      ]
    }
  },
  {
    "comment": "union distinct between a scatter query and a join (other side)",
    "query": "select 'b','c' from user union (select user.id, user.name from user join user_extra where user_extra.extra = 'asdf')",
    "v3-plan": {
      "QueryType": "SELECT",
      "Original": "select 'b','c' from user union (select user.id, user.name from user join user_extra where user_extra.extra = 'asdf')",
      "Instructions": {
        "OperatorType": "Distinct",
        "Inputs": [
          {
            "OperatorType": "Concatenate",
            "Inputs": [
              {
                "OperatorType": "Route",
                "Variant": "Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select 'b', 'c' from `user` where 1 != 1",
                "Query": "select 'b', 'c' from `user`",
                "Table": "`user`"
              },
              {
                "OperatorType": "Join",
                "Variant": "Join",
                "JoinColumnIndexes": "L:0,L:1",
                "TableName": "`user`_user_extra",
                "Inputs": [
                  {
                    "OperatorType": "Route",
                    "Variant": "Scatter",
                    "Keyspace": {
                      "Name": "user",
                      "Sharded": true
                    },
                    "FieldQuery": "select `user`.id, `user`.`name` from `user` where 1 != 1",
                    "Query": "select `user`.id, `user`.`name` from `user`",
                    "Table": "`user`"
                  },
                  {
                    "OperatorType": "Route",
                    "Variant": "Scatter",
                    "Keyspace": {
                      "Name": "user",
                      "Sharded": true
                    },
                    "FieldQuery": "select 1 from user_extra where 1 != 1",
                    "Query": "select 1 from user_extra where user_extra.extra = 'asdf'",
                    "Table": "user_extra"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    "gen4-plan": {
      "QueryType": "SELECT",
      "Original": "select 'b','c' from user union (select user.id, user.name from user join user_extra where user_extra.extra = 'asdf')",
      "Instructions": {
        "OperatorType": "Distinct",
        "Collations": [
          "(0:2)",
          "(1:3)"
        ],
        "ResultColumns": 2,
        "Inputs": [
          {
            "OperatorType": "Concatenate",
            "Inputs": [
              {
                "OperatorType": "Route",
                "Variant": "Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select 'b', 'c', weight_string('b'), weight_string('c') from `user` where 1 != 1",
                "Query": "select distinct 'b', 'c', weight_string('b'), weight_string('c') from `user`",
                "Table": "`user`"
              },
              {
                "OperatorType": "Join",
                "Variant": "Join",
                "JoinColumnIndexes": "L:0,L:1,L:2,L:3",
                "TableName": "`user`_user_extra",
                "Inputs": [
                  {
                    "OperatorType": "Route",
                    "Variant": "Scatter",
                    "Keyspace": {
                      "Name": "user",
                      "Sharded": true
                    },
                    "FieldQuery": "select `user`.id, `user`.`name`, weight_string(`user`.id), weight_string(`user`.`name`) from `user` where 1 != 1",
                    "Query": "select `user`.id, `user`.`name`, weight_string(`user`.id), weight_string(`user`.`name`) from `user`",
                    "Table": "`user`"
                  },
                  {
                    "OperatorType": "Route",
                    "Variant": "Scatter",
                    "Keyspace": {
                      "Name": "user",
                      "Sharded": true
                    },
                    "FieldQuery": "select 1 from user_extra where 1 != 1",
                    "Query": "select 1 from user_extra where user_extra.extra = 'asdf'",
                    "Table": "user_extra"
                  }
                ]
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "user.user",
        "user.user_extra"
      ]
    }
  },
  {
    "comment": "unmergable because we are using aggregation",
    "query": "select count(*) as s from user union select count(*) as s from music",
    "v3-plan": {
      "QueryType": "SELECT",
      "Original": "select count(*) as s from user union select count(*) as s from music",
      "Instructions": {
        "OperatorType": "Distinct",
        "Inputs": [
          {
            "OperatorType": "Concatenate",
            "Inputs": [
              {
                "OperatorType": "Aggregate",
                "Variant": "Scalar",
                "Aggregates": "sum_count(0) AS count",
                "Inputs": [
                  {
                    "OperatorType": "Route",
                    "Variant": "Scatter",
                    "Keyspace": {
                      "Name": "user",
                      "Sharded": true
                    },
                    "FieldQuery": "select count(*) as s from `user` where 1 != 1",
                    "Query": "select count(*) as s from `user`",
                    "Table": "`user`"
                  }
                ]
              },
              {
                "OperatorType": "Aggregate",
                "Variant": "Scalar",
                "Aggregates": "sum_count(0) AS count",
                "Inputs": [
                  {
                    "OperatorType": "Route",
                    "Variant": "Scatter",
                    "Keyspace": {
                      "Name": "user",
                      "Sharded": true
                    },
                    "FieldQuery": "select count(*) as s from music where 1 != 1",
                    "Query": "select count(*) as s from music",
                    "Table": "music"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    "gen4-plan": {
      "QueryType": "SELECT",
      "Original": "select count(*) as s from user union select count(*) as s from music",
      "Instructions": {
        "OperatorType": "Distinct",
        "Collations": [
          "0: binary"
        ],
        "Inputs": [
          {
            "OperatorType": "Concatenate",
            "Inputs": [
              {
                "OperatorType": "Aggregate",
                "Variant": "Scalar",
                "Aggregates": "sum_count_star(0) AS s",
                "Inputs": [
                  {
                    "OperatorType": "Route",
                    "Variant": "Scatter",
                    "Keyspace": {
                      "Name": "user",
                      "Sharded": true
                    },
                    "FieldQuery": "select count(*) as s from `user` where 1 != 1",
                    "Query": "select count(*) as s from `user`",
                    "Table": "`user`"
                  }
                ]
              },
              {
                "OperatorType": "Aggregate",
                "Variant": "Scalar",
                "Aggregates": "sum_count_star(0) AS s",
                "Inputs": [
                  {
                    "OperatorType": "Route",
                    "Variant": "Scatter",
                    "Keyspace": {
                      "Name": "user",
                      "Sharded": true
                    },
                    "FieldQuery": "select count(*) as s from music where 1 != 1",
                    "Query": "select count(*) as s from music",
                    "Table": "music"
                  }
                ]
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "user.music",
        "user.user"
      ]
    }
  },
  {
    "comment": "Union in derived table with first SELECT being an UNION",
    "query": "select * from ((select id from user union select id+1 from user) union select user_id from user_extra) as t",
    "v3-plan": {
      "QueryType": "SELECT",
      "Original": "select * from ((select id from user union select id+1 from user) union select user_id from user_extra) as t",
      "Instructions": {
        "OperatorType": "SimpleProjection",
        "Columns": [
          0
        ],
        "Inputs": [
          {
            "OperatorType": "Distinct",
            "Inputs": [
              {
                "OperatorType": "Concatenate",
                "Inputs": [
                  {
                    "OperatorType": "Distinct",
                    "Inputs": [
                      {
                        "OperatorType": "Concatenate",
                        "Inputs": [
                          {
                            "OperatorType": "Route",
                            "Variant": "Scatter",
                            "Keyspace": {
                              "Name": "user",
                              "Sharded": true
                            },
                            "FieldQuery": "select id from `user` where 1 != 1",
                            "Query": "select id from `user`",
                            "Table": "`user`"
                          },
                          {
                            "OperatorType": "Route",
                            "Variant": "Scatter",
                            "Keyspace": {
                              "Name": "user",
                              "Sharded": true
                            },
                            "FieldQuery": "select id + 1 from `user` where 1 != 1",
                            "Query": "select id + 1 from `user`",
                            "Table": "`user`"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "OperatorType": "Route",
                    "Variant": "Scatter",
                    "Keyspace": {
                      "Name": "user",
                      "Sharded": true
                    },
                    "FieldQuery": "select user_id from user_extra where 1 != 1",
                    "Query": "select user_id from user_extra",
                    "Table": "user_extra"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    "gen4-plan": {
      "QueryType": "SELECT",
      "Original": "select * from ((select id from user union select id+1 from user) union select user_id from user_extra) as t",
      "Instructions": {
        "OperatorType": "SimpleProjection",
        "Columns": [
          0
        ],
        "Inputs": [
          {
            "OperatorType": "Distinct",
            "Collations": [
              "(0:1)"
            ],
            "Inputs": [
              {
                "OperatorType": "Route",
                "Variant": "Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select id, weight_string(id) from `user` where 1 != 1 union all select id + 1, weight_string(id + 1) from `user` where 1 != 1 union select user_id, weight_string(user_id) from user_extra where 1 != 1",
                "Query": "select id, weight_string(id) from `user` union all select id + 1, weight_string(id + 1) from `user` union select user_id, weight_string(user_id) from user_extra",
                "Table": "`user`"
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "user.user",
        "user.user_extra"
      ]
    }
  },
  {
    "comment": "gen4 optimises away ORDER BY when it's safe to do",
    "query": "(select id from user union select id from music order by id) union select 1 from unsharded",
    "v3-plan": "can't do ORDER BY on top of UNION",
    "gen4-plan": {
      "QueryType": "SELECT",
      "Original": "(select id from user union select id from music order by id) union select 1 from unsharded",
      "Instructions": {
        "OperatorType": "Distinct",
        "Collations": [
          "(0:1)"
        ],
        "ResultColumns": 1,
        "Inputs": [
          {
            "OperatorType": "Concatenate",
            "Inputs": [
              {
                "OperatorType": "Route",
                "Variant": "Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select id, weight_string(id) from `user` where 1 != 1 union select id, weight_string(id) from music where 1 != 1",
                "Query": "select id, weight_string(id) from `user` union select id, weight_string(id) from music",
                "Table": "`user`"
              },
              {
                "OperatorType": "Route",
                "Variant": "Unsharded",
                "Keyspace": {
                  "Name": "main",
                  "Sharded": false
                },
                "FieldQuery": "select 1, weight_string(1) from unsharded where 1 != 1",
                "Query": "select distinct 1, weight_string(1) from unsharded",
                "Table": "unsharded"
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "main.unsharded",
        "user.music",
        "user.user"
      ]
    }
  },
  {
    "comment": "push down the ::upper_limit to the sources, since we are doing DISTINCT on them, it's safe",
    "query": "select id from user union select 3 limit 10",
    "v3-plan": {
      "QueryType": "SELECT",
      "Original": "select id from user union select 3 limit 10",
      "Instructions": {
        "OperatorType": "Limit",
        "Count": "INT64(10)",
        "Inputs": [
          {
            "OperatorType": "Distinct",
            "Inputs": [
              {
                "OperatorType": "Concatenate",
                "Inputs": [
                  {
                    "OperatorType": "Route",
                    "Variant": "Scatter",
                    "Keyspace": {
                      "Name": "user",
                      "Sharded": true
                    },
                    "FieldQuery": "select id from `user` where 1 != 1",
                    "Query": "select id from `user`",
                    "Table": "`user`"
                  },
                  {
                    "OperatorType": "Route",
                    "Variant": "Reference",
                    "Keyspace": {
                      "Name": "main",
                      "Sharded": false
                    },
                    "FieldQuery": "select 3 from dual where 1 != 1",
                    "Query": "select 3 from dual",
                    "Table": "dual"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    "gen4-plan": {
      "QueryType": "SELECT",
      "Original": "select id from user union select 3 limit 10",
      "Instructions": {
        "OperatorType": "Limit",
        "Count": "INT64(10)",
        "Inputs": [
          {
            "OperatorType": "Distinct",
            "Collations": [
              "(0:1)"
            ],
            "ResultColumns": 1,
            "Inputs": [
              {
                "OperatorType": "Concatenate",
                "Inputs": [
                  {
                    "OperatorType": "Route",
                    "Variant": "Scatter",
                    "Keyspace": {
                      "Name": "user",
                      "Sharded": true
                    },
                    "FieldQuery": "select id, weight_string(id) from `user` where 1 != 1",
                    "Query": "select distinct id, weight_string(id) from `user` limit :__upper_limit",
                    "Table": "`user`"
                  },
                  {
                    "OperatorType": "Route",
                    "Variant": "Reference",
                    "Keyspace": {
                      "Name": "main",
                      "Sharded": false
                    },
                    "FieldQuery": "select 3, weight_string(3) from dual where 1 != 1",
                    "Query": "select distinct 3, weight_string(3) from dual limit :__upper_limit",
                    "Table": "dual"
                  }
                ]
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "main.dual",
        "user.user"
      ]
    }
  },
  {
    "comment": "silly query that should be collapsed into a single unsharded UNION route",
    "query": "(select 1 from unsharded union select 1 from unsharded union all select 1 from unsharded order by 1) union select 1 from unsharded union all select 1 from unsharded order by 1",
    "v3-plan": {
      "QueryType": "SELECT",
      "Original": "(select 1 from unsharded union select 1 from unsharded union all select 1 from unsharded order by 1) union select 1 from unsharded union all select 1 from unsharded order by 1",
      "Instructions": {
        "OperatorType": "Route",
        "Variant": "Unsharded",
        "Keyspace": {
          "Name": "main",
          "Sharded": false
        },
        "FieldQuery": "(select 1 from unsharded where 1 != 1 union select 1 from unsharded where 1 != 1 union all select 1 from unsharded where 1 != 1) union select 1 from unsharded where 1 != 1 union all select 1 from unsharded where 1 != 1",
        "Query": "(select 1 from unsharded union select 1 from unsharded union all select 1 from unsharded order by 1 asc) union select 1 from unsharded union all select 1 from unsharded order by 1 asc",
        "Table": "unsharded"
      }
    },
    "gen4-plan": {
      "QueryType": "SELECT",
      "Original": "(select 1 from unsharded union select 1 from unsharded union all select 1 from unsharded order by 1) union select 1 from unsharded union all select 1 from unsharded order by 1",
      "Instructions": {
        "OperatorType": "Route",
        "Variant": "Unsharded",
        "Keyspace": {
          "Name": "main",
          "Sharded": false
        },
        "FieldQuery": "(select 1 from unsharded where 1 != 1 union select 1 from unsharded where 1 != 1 union all select 1 from unsharded where 1 != 1) union select 1 from unsharded where 1 != 1 union all select 1 from unsharded where 1 != 1",
        "Query": "(select 1 from unsharded union select 1 from unsharded union all select 1 from unsharded order by 1 asc) union select 1 from unsharded union all select 1 from unsharded order by 1 asc",
        "Table": "unsharded"
      },
      "TablesUsed": [
        "main.unsharded"
      ]
    }
  },
  {
    "comment": "UNION that needs to be reordered to be merged more aggressively. Gen4 is able to get it down to 2 routes",
    "query": "select col from unsharded union select id from user union select col2 from unsharded union select col from user_extra",
    "v3-plan": {
      "QueryType": "SELECT",
      "Original": "select col from unsharded union select id from user union select col2 from unsharded union select col from user_extra",
      "Instructions": {
        "OperatorType": "Distinct",
        "Inputs": [
          {
            "OperatorType": "Concatenate",
            "Inputs": [
              {
                "OperatorType": "Distinct",
                "Inputs": [
                  {
                    "OperatorType": "Concatenate",
                    "Inputs": [
                      {
                        "OperatorType": "Distinct",
                        "Inputs": [
                          {
                            "OperatorType": "Concatenate",
                            "Inputs": [
                              {
                                "OperatorType": "Route",
                                "Variant": "Unsharded",
                                "Keyspace": {
                                  "Name": "main",
                                  "Sharded": false
                                },
                                "FieldQuery": "select col from unsharded where 1 != 1",
                                "Query": "select col from unsharded",
                                "Table": "unsharded"
                              },
                              {
                                "OperatorType": "Route",
                                "Variant": "Scatter",
                                "Keyspace": {
                                  "Name": "user",
                                  "Sharded": true
                                },
                                "FieldQuery": "select id from `user` where 1 != 1",
                                "Query": "select id from `user`",
                                "Table": "`user`"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "OperatorType": "Route",
                        "Variant": "Unsharded",
                        "Keyspace": {
                          "Name": "main",
                          "Sharded": false
                        },
                        "FieldQuery": "select col2 from unsharded where 1 != 1",
                        "Query": "select col2 from unsharded",
                        "Table": "unsharded"
                      }
                    ]
                  }
                ]
              },
              {
                "OperatorType": "Route",
                "Variant": "Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select col from user_extra where 1 != 1",
                "Query": "select col from user_extra",
                "Table": "user_extra"
              }
            ]
          }
        ]
      }
    },
    "gen4-plan": {
      "QueryType": "SELECT",
      "Original": "select col from unsharded union select id from user union select col2 from unsharded union select col from user_extra",
      "Instructions": {
        "OperatorType": "Distinct",
        "Collations": [
          "(0:1)"
        ],
        "ResultColumns": 1,
        "Inputs": [
          {
            "OperatorType": "Concatenate",
            "Inputs": [
              {
                "OperatorType": "Route",
                "Variant": "Unsharded",
                "Keyspace": {
                  "Name": "main",
                  "Sharded": false
                },
                "FieldQuery": "select col, weight_string(col) from unsharded where 1 != 1 union select col2, weight_string(col2) from unsharded where 1 != 1",
                "Query": "select col, weight_string(col) from unsharded union select col2, weight_string(col2) from unsharded",
                "Table": "unsharded"
              },
              {
                "OperatorType": "Route",
                "Variant": "Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select id, weight_string(id) from `user` where 1 != 1 union select col, weight_string(col) from user_extra where 1 != 1",
                "Query": "select id, weight_string(id) from `user` union select col, weight_string(col) from user_extra",
                "Table": "`user`"
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "main.unsharded",
        "user.user",
        "user.user_extra"
      ]
    }
  },
  {
    "comment": "derived table with union",
    "query": "select tbl2.id FROM ((select id from user order by id limit 5) union all (select id from user order by id desc limit 5)) as tbl1 INNER JOIN user as tbl2  ON tbl1.id = tbl2.id",
    "v3-plan": {
      "QueryType": "SELECT",
      "Original": "select tbl2.id FROM ((select id from user order by id limit 5) union all (select id from user order by id desc limit 5)) as tbl1 INNER JOIN user as tbl2  ON tbl1.id = tbl2.id",
      "Instructions": {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "R:0",
        "JoinVars": {
          "tbl1_id": 0
        },
        "TableName": "`user`_`user`",
        "Inputs": [
          {
            "OperatorType": "SimpleProjection",
            "Columns": [
              0
            ],
            "Inputs": [
              {
                "OperatorType": "Concatenate",
                "Inputs": [
                  {
                    "OperatorType": "Limit",
                    "Count": "INT64(5)",
                    "Inputs": [
                      {
                        "OperatorType": "Route",
                        "Variant": "Scatter",
                        "Keyspace": {
                          "Name": "user",
                          "Sharded": true
                        },
                        "FieldQuery": "select id, weight_string(id) from `user` where 1 != 1",
                        "OrderBy": "(0|1) ASC",
                        "Query": "select id, weight_string(id) from `user` order by id asc limit :__upper_limit",
                        "ResultColumns": 1,
                        "Table": "`user`"
                      }
                    ]
                  },
                  {
                    "OperatorType": "Limit",
                    "Count": "INT64(5)",
                    "Inputs": [
                      {
                        "OperatorType": "Route",
                        "Variant": "Scatter",
                        "Keyspace": {
                          "Name": "user",
                          "Sharded": true
                        },
                        "FieldQuery": "select id, weight_string(id) from `user` where 1 != 1",
                        "OrderBy": "(0|1) DESC",
                        "Query": "select id, weight_string(id) from `user` order by id desc limit :__upper_limit",
                        "ResultColumns": 1,
                        "Table": "`user`"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "OperatorType": "Route",
            "Variant": "EqualUnique",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select tbl2.id from `user` as tbl2 where 1 != 1",
            "Query": "select tbl2.id from `user` as tbl2 where tbl2.id = :tbl1_id",
            "Table": "`user`",
            "Values": [
              ":tbl1_id"
            ],
            "Vindex": "user_index"
          }
        ]
      }
    },
    "gen4-plan": {
      "QueryType": "SELECT",
      "Original": "select tbl2.id FROM ((select id from user order by id limit 5) union all (select id from user order by id desc limit 5)) as tbl1 INNER JOIN user as tbl2  ON tbl1.id = tbl2.id",
      "Instructions": {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "R:0",
        "JoinVars": {
          "tbl1_id": 0
        },
        "TableName": "`user`_`user`",
        "Inputs": [
          {
            "OperatorType": "SimpleProjection",
            "Columns": [
              0
            ],
            "Inputs": [
              {
                "OperatorType": "Concatenate",
                "Inputs": [
                  {
                    "OperatorType": "Limit",
                    "Count": "INT64(5)",
                    "Inputs": [
                      {
                        "OperatorType": "Route",
                        "Variant": "Scatter",
                        "Keyspace": {
                          "Name": "user",
                          "Sharded": true
                        },
                        "FieldQuery": "select id, weight_string(id) from `user` where 1 != 1",
                        "OrderBy": "(0|1) ASC",
                        "Query": "select id, weight_string(id) from `user` order by id asc limit :__upper_limit",
                        "ResultColumns": 1,
                        "Table": "`user`"
                      }
                    ]
                  },
                  {
                    "OperatorType": "Limit",
                    "Count": "INT64(5)",
                    "Inputs": [
                      {
                        "OperatorType": "Route",
                        "Variant": "Scatter",
                        "Keyspace": {
                          "Name": "user",
                          "Sharded": true
                        },
                        "FieldQuery": "select id, weight_string(id) from `user` where 1 != 1",
                        "OrderBy": "(0|1) DESC",
                        "Query": "select id, weight_string(id) from `user` order by id desc limit :__upper_limit",
                        "ResultColumns": 1,
                        "Table": "`user`"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "OperatorType": "Route",
            "Variant": "EqualUnique",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select tbl2.id from `user` as tbl2 where 1 != 1",
            "Query": "select tbl2.id from `user` as tbl2 where tbl2.id = :tbl1_id",
            "Table": "`user`",
            "Values": [
              ":tbl1_id"
            ],
            "Vindex": "user_index"
          }
        ]
      },
      "TablesUsed": [
        "user.user"
      ]
    }
  },
  {
    "comment": "ambiguous LIMIT",
    "query": "select id from user limit 1 union all select id from music limit 1",
    "plan": "syntax error at position 34 near 'union'"
  },
  {
    "comment": "ambiguous ORDER BY",
    "query": "select id from user order by id union all select id from music order by id desc",
    "plan": "syntax error at position 38 near 'union'"
  },
  {
    "comment": "different number of columns",
    "query": "select id, 42 from user where id = 1 union all select id from user where id = 5",
    "v3-plan": "The used SELECT statements have a different number of columns (errno 1222) (sqlstate 21000) during query: select id, 42 from `user` where id = 1 union all select id from `user` where id = 5",
    "gen4-plan": "The used SELECT statements have a different number of columns"
  },
  {
    "comment": "union with invalid order by clause with table qualifier",
    "query": "select id from user union select 3 order by user.id",
    "v3-plan": "can't do ORDER BY on top of UNION",
    "gen4-plan": "Table 'user' from one of the SELECTs cannot be used in global ORDER clause"
  },
  {
    "comment": "union with invalid order by clause with table qualifier",
    "query": "select id from user union select 3 order by id",
    "plan": "can't do ORDER BY on top of UNION"
  },
  {
    "query": "select 1 from (select id+42 as foo from user union select 1+id as foo from unsharded) as t",
    "v3-plan": "unsupported: expression on results of a cross-shard subquery",
    "gen4-plan": {
      "QueryType": "SELECT",
      "Original": "select 1 from (select id+42 as foo from user union select 1+id as foo from unsharded) as t",
      "Instructions": {
        "OperatorType": "SimpleProjection",
        "Columns": [
          2
        ],
        "Inputs": [
          {
            "OperatorType": "Distinct",
            "Collations": [
              "(0:1)"
            ],
            "Inputs": [
              {
                "OperatorType": "Concatenate",
                "Inputs": [
                  {
                    "OperatorType": "Route",
                    "Variant": "Scatter",
                    "Keyspace": {
                      "Name": "user",
                      "Sharded": true
                    },
                    "FieldQuery": "select id + 42 as foo, weight_string(id + 42), 1 from `user` where 1 != 1",
                    "Query": "select distinct id + 42 as foo, weight_string(id + 42), 1 from `user`",
                    "Table": "`user`"
                  },
                  {
                    "OperatorType": "Route",
                    "Variant": "Unsharded",
                    "Keyspace": {
                      "Name": "main",
                      "Sharded": false
                    },
                    "FieldQuery": "select 1 + id as foo, weight_string(1 + id), 1 from unsharded where 1 != 1",
                    "Query": "select distinct 1 + id as foo, weight_string(1 + id), 1 from unsharded",
                    "Table": "unsharded"
                  }
                ]
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "main.unsharded",
        "user.user"
      ]
    }
  }
]