# Test cases in this file are currently turned off
# Multi-route unique vindex constraint (with hash join)
"select /*vt+ ALLOW_HASH_JOIN */ user_extra.id from user join user_extra on user.col = user_extra.col where user.id = 5"
{
  "QueryType": "SELECT",
  "Original": "select /*vt+ ALLOW_HASH_JOIN */ user_extra.id from user join user_extra on user.col = user_extra.col where user.id = 5",
  "Instructions": {
    "OperatorType": "Join",
    "Variant": "Join",
    "JoinColumnIndexes": "1",
    "JoinVars": {
      "user_col": 0
    },
    "TableName": "`user`_user_extra",
    "Inputs": [
      {
        "OperatorType": "Route",
        "Variant": "EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select `user`.col from `user` where 1 != 1",
        "Query": "select /*vt+ ALLOW_HASH_JOIN */ `user`.col from `user` where `user`.id = 5",
        "Table": "`user`",
        "Values": [
          "INT64(5)"
        ],
        "Vindex": "user_index"
      },
      {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select user_extra.id from user_extra where 1 != 1",
        "Query": "select /*vt+ ALLOW_HASH_JOIN */ user_extra.id from user_extra where user_extra.col = :user_col",
        "Table": "user_extra"
      }
    ]
  }
}
{
  "QueryType": "SELECT",
  "Original": "select /*vt+ ALLOW_HASH_JOIN */ user_extra.id from user join user_extra on user.col = user_extra.col where user.id = 5",
  "Instructions": {
    "OperatorType": "Join",
    "Variant": "HashJoin",
    "ComparisonType": "INT16",
    "JoinColumnIndexes": "2",
    "Predicate": "`user`.col = user_extra.col",
    "TableName": "`user`_user_extra",
    "Inputs": [
      {
        "OperatorType": "Route",
        "Variant": "EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select `user`.col from `user` where 1 != 1",
        "Query": "select /*vt+ ALLOW_HASH_JOIN */ `user`.col from `user` where `user`.id = 5",
        "Table": "`user`",
        "Values": [
          "INT64(5)"
        ],
        "Vindex": "user_index"
      },
      {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select user_extra.col, user_extra.id from user_extra where 1 != 1",
        "Query": "select /*vt+ ALLOW_HASH_JOIN */ user_extra.col, user_extra.id from user_extra",
        "Table": "user_extra"
      }
    ]
  }
}


# Multi-route with non-route constraint, should use first route.
"select /*vt+ ALLOW_HASH_JOIN */ user_extra.id from user join user_extra on user.col = user_extra.col where 1 = 1"
{
  "QueryType": "SELECT",
  "Original": "select /*vt+ ALLOW_HASH_JOIN */ user_extra.id from user join user_extra on user.col = user_extra.col where 1 = 1",
  "Instructions": {
    "OperatorType": "Join",
    "Variant": "Join",
    "JoinColumnIndexes": "1",
    "JoinVars": {
      "user_col": 0
    },
    "TableName": "`user`_user_extra",
    "Inputs": [
      {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select `user`.col from `user` where 1 != 1",
        "Query": "select /*vt+ ALLOW_HASH_JOIN */ `user`.col from `user` where 1 = 1",
        "Table": "`user`"
      },
      {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select user_extra.id from user_extra where 1 != 1",
        "Query": "select /*vt+ ALLOW_HASH_JOIN */ user_extra.id from user_extra where user_extra.col = :user_col",
        "Table": "user_extra"
      }
    ]
  }
}
{
  "QueryType": "SELECT",
  "Original": "select /*vt+ ALLOW_HASH_JOIN */ user_extra.id from user join user_extra on user.col = user_extra.col where 1 = 1",
  "Instructions": {
    "OperatorType": "Join",
    "Variant": "HashJoin",
    "ComparisonType": "INT16",
    "JoinColumnIndexes": "2",
    "Predicate": "`user`.col = user_extra.col",
    "TableName": "`user`_user_extra",
    "Inputs": [
      {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select `user`.col from `user` where 1 != 1",
        "Query": "select /*vt+ ALLOW_HASH_JOIN */ `user`.col from `user` where 1 = 1",
        "Table": "`user`"
      },
      {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select user_extra.col, user_extra.id from user_extra where 1 != 1",
        "Query": "select /*vt+ ALLOW_HASH_JOIN */ user_extra.col, user_extra.id from user_extra where 1 = 1",
        "Table": "user_extra"
      }
    ]
  }
}

# wire-up on within cross-shard derived table (hash-join version)
"select /*vt+ ALLOW_HASH_JOIN */ t.id from (select user.id, user.col1 from user join user_extra on user_extra.col = user.col) as t"
{
  "QueryType": "SELECT",
  "Original": "select /*vt+ ALLOW_HASH_JOIN */ t.id from (select user.id, user.col1 from user join user_extra on user_extra.col = user.col) as t",
  "Instructions": {
    "OperatorType": "SimpleProjection",
    "Columns": [
      0
    ],
    "Inputs": [
      {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "-1,-2",
        "JoinVars": {
          "user_col": 2
        },
        "TableName": "`user`_user_extra",
        "Inputs": [
          {
            "OperatorType": "Route",
            "Variant": "Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select `user`.id, `user`.col1, `user`.col from `user` where 1 != 1",
            "Query": "select /*vt+ ALLOW_HASH_JOIN */ `user`.id, `user`.col1, `user`.col from `user`",
            "Table": "`user`"
          },
          {
            "OperatorType": "Route",
            "Variant": "Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select 1 from user_extra where 1 != 1",
            "Query": "select /*vt+ ALLOW_HASH_JOIN */ 1 from user_extra where user_extra.col = :user_col",
            "Table": "user_extra"
          }
        ]
      }
    ]
  }
}
{
  "QueryType": "SELECT",
  "Original": "select /*vt+ ALLOW_HASH_JOIN */ t.id from (select user.id, user.col1 from user join user_extra on user_extra.col = user.col) as t",
  "Instructions": {
    "OperatorType": "SimpleProjection",
    "Columns": [
      0
    ],
    "Inputs": [
      {
        "OperatorType": "Join",
        "Variant": "HashJoin",
        "ComparisonType": "INT16",
        "JoinColumnIndexes": "-2,-3",
        "Predicate": "user_extra.col = `user`.col",
        "TableName": "`user`_user_extra",
        "Inputs": [
          {
            "OperatorType": "Route",
            "Variant": "Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select `user`.col, `user`.id, `user`.col1 from `user` where 1 != 1",
            "Query": "select /*vt+ ALLOW_HASH_JOIN */ `user`.col, `user`.id, `user`.col1 from `user`",
            "Table": "`user`"
          },
          {
            "OperatorType": "Route",
            "Variant": "Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select user_extra.col from user_extra where 1 != 1",
            "Query": "select /*vt+ ALLOW_HASH_JOIN */ user_extra.col from user_extra",
            "Table": "user_extra"
          }
        ]
      }
    ]
  }
}

# hash join on int columns
"select /*vt+ ALLOW_HASH_JOIN */ u.id from user as u join user as uu on u.intcol = uu.intcol"
{
  "QueryType": "SELECT",
  "Original": "select /*vt+ ALLOW_HASH_JOIN */ u.id from user as u join user as uu on u.intcol = uu.intcol",
  "Instructions": {
    "OperatorType": "Join",
    "Variant": "Join",
    "JoinColumnIndexes": "-1",
    "JoinVars": {
      "u_intcol": 1
    },
    "TableName": "`user`_`user`",
    "Inputs": [
      {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select u.id, u.intcol from `user` as u where 1 != 1",
        "Query": "select /*vt+ ALLOW_HASH_JOIN */ u.id, u.intcol from `user` as u",
        "Table": "`user`"
      },
      {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select 1 from `user` as uu where 1 != 1",
        "Query": "select /*vt+ ALLOW_HASH_JOIN */ 1 from `user` as uu where uu.intcol = :u_intcol",
        "Table": "`user`"
      }
    ]
  }
}
{
  "QueryType": "SELECT",
  "Original": "select /*vt+ ALLOW_HASH_JOIN */ u.id from user as u join user as uu on u.intcol = uu.intcol",
  "Instructions": {
    "OperatorType": "Join",
    "Variant": "HashJoin",
    "ComparisonType": "INT16",
    "JoinColumnIndexes": "-2",
    "Predicate": "u.intcol = uu.intcol",
    "TableName": "`user`_`user`",
    "Inputs": [
      {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select u.intcol, u.id from `user` as u where 1 != 1",
        "Query": "select /*vt+ ALLOW_HASH_JOIN */ u.intcol, u.id from `user` as u",
        "Table": "`user`"
      },
      {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select uu.intcol from `user` as uu where 1 != 1",
        "Query": "select /*vt+ ALLOW_HASH_JOIN */ uu.intcol from `user` as uu",
        "Table": "`user`"
      }
    ]
  }
}

# Author5.joins(books: [{orders: :customer}, :supplier]) (with hash join)
"select /*vt+ ALLOW_HASH_JOIN */ author5s.* from author5s join book6s on book6s.author5_id = author5s.id join book6s_order2s on book6s_order2s.book6_id = book6s.id join order2s on order2s.id = book6s_order2s.order2_id join customer2s on customer2s.id = order2s.customer2_id join supplier5s on supplier5s.id = book6s.supplier5_id"
{
  "QueryType": "SELECT",
  "Original": "select /*vt+ ALLOW_HASH_JOIN */ author5s.* from author5s join book6s on book6s.author5_id = author5s.id join book6s_order2s on book6s_order2s.book6_id = book6s.id join order2s on order2s.id = book6s_order2s.order2_id join customer2s on customer2s.id = order2s.customer2_id join supplier5s on supplier5s.id = book6s.supplier5_id",
  "Instructions": {
    "OperatorType": "Join",
    "Variant": "Join",
    "JoinColumnIndexes": "-1,-2,-3,-4",
    "JoinVars": {
      "book6s_supplier5_id": 4
    },
    "TableName": "author5s, book6s_book6s_order2s_order2s_customer2s_supplier5s",
    "Inputs": [
      {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "-1,-2,-3,-4,-5",
        "JoinVars": {
          "order2s_customer2_id": 5
        },
        "TableName": "author5s, book6s_book6s_order2s_order2s_customer2s",
        "Inputs": [
          {
            "OperatorType": "Join",
            "Variant": "Join",
            "JoinColumnIndexes": "-1,-2,-3,-4,-5,1",
            "JoinVars": {
              "book6s_order2s_order2_id": 5
            },
            "TableName": "author5s, book6s_book6s_order2s_order2s",
            "Inputs": [
              {
                "OperatorType": "Join",
                "Variant": "Join",
                "JoinColumnIndexes": "-1,-2,-3,-4,-5,1",
                "JoinVars": {
                  "book6s_id": 5
                },
                "TableName": "author5s, book6s_book6s_order2s",
                "Inputs": [
                  {
                    "OperatorType": "Route",
                    "Variant": "Scatter",
                    "Keyspace": {
                      "Name": "user",
                      "Sharded": true
                    },
                    "FieldQuery": "select author5s.id, author5s.`name`, author5s.created_at, author5s.updated_at, book6s.supplier5_id, book6s.id from author5s join book6s on book6s.author5_id = author5s.id where 1 != 1",
                    "Query": "select /*vt+ ALLOW_HASH_JOIN */ author5s.id, author5s.`name`, author5s.created_at, author5s.updated_at, book6s.supplier5_id, book6s.id from author5s join book6s on book6s.author5_id = author5s.id",
                    "Table": "author5s, book6s"
                  },
                  {
                    "OperatorType": "Route",
                    "Variant": "EqualUnique",
                    "Keyspace": {
                      "Name": "user",
                      "Sharded": true
                    },
                    "FieldQuery": "select book6s_order2s.order2_id from book6s_order2s where 1 != 1",
                    "Query": "select /*vt+ ALLOW_HASH_JOIN */ book6s_order2s.order2_id from book6s_order2s where book6s_order2s.book6_id = :book6s_id",
                    "Table": "book6s_order2s",
                    "Values": [
                      ":book6s_id"
                    ],
                    "Vindex": "binary_md5"
                  }
                ]
              },
              {
                "OperatorType": "Route",
                "Variant": "Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select order2s.customer2_id from order2s where 1 != 1",
                "Query": "select /*vt+ ALLOW_HASH_JOIN */ order2s.customer2_id from order2s where order2s.id = :book6s_order2s_order2_id",
                "Table": "order2s"
              }
            ]
          },
          {
            "OperatorType": "Route",
            "Variant": "EqualUnique",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select 1 from customer2s where 1 != 1",
            "Query": "select /*vt+ ALLOW_HASH_JOIN */ 1 from customer2s where customer2s.id = :order2s_customer2_id",
            "Table": "customer2s",
            "Values": [
              ":order2s_customer2_id"
            ],
            "Vindex": "binary_md5"
          }
        ]
      },
      {
        "OperatorType": "Route",
        "Variant": "EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select 1 from supplier5s where 1 != 1",
        "Query": "select /*vt+ ALLOW_HASH_JOIN */ 1 from supplier5s where supplier5s.id = :book6s_supplier5_id",
        "Table": "supplier5s",
        "Values": [
          ":book6s_supplier5_id"
        ],
        "Vindex": "binary_md5"
      }
    ]
  }
}
{
  "QueryType": "SELECT",
  "Original": "select /*vt+ ALLOW_HASH_JOIN */ author5s.* from author5s join book6s on book6s.author5_id = author5s.id join book6s_order2s on book6s_order2s.book6_id = book6s.id join order2s on order2s.id = book6s_order2s.order2_id join customer2s on customer2s.id = order2s.customer2_id join supplier5s on supplier5s.id = book6s.supplier5_id",
  "Instructions": {
    "OperatorType": "Join",
    "Variant": "HashJoin",
    "ComparisonType": "INT64",
    "JoinColumnIndexes": "2,3,4,5",
    "Predicate": "order2s.id = book6s_order2s.order2_id",
    "TableName": "customer2s, order2s_author5s, book6s_book6s_order2s_supplier5s",
    "Inputs": [
      {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select order2s.id from order2s, customer2s where 1 != 1",
        "Query": "select /*vt+ ALLOW_HASH_JOIN */ order2s.id from order2s, customer2s where customer2s.id = order2s.customer2_id",
        "Table": "customer2s, order2s"
      },
      {
        "OperatorType": "Join",
        "Variant": "HashJoin",
        "ComparisonType": "INT64",
        "JoinColumnIndexes": "-1,-2,-3,-4,-5",
        "Predicate": "supplier5s.id = book6s.supplier5_id",
        "TableName": "author5s, book6s_book6s_order2s_supplier5s",
        "Inputs": [
          {
            "OperatorType": "Join",
            "Variant": "Join",
            "JoinColumnIndexes": "1,-3,-4,-5,-6",
            "JoinVars": {
              "book6s_id": 0
            },
            "Predicate": "book6s_order2s.book6_id = book6s.id",
            "TableName": "author5s, book6s_book6s_order2s",
            "Inputs": [
              {
                "OperatorType": "Route",
                "Variant": "Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select book6s.id, book6s.supplier5_id, author5s.id as id, author5s.`name` as `name`, author5s.created_at as created_at, author5s.updated_at as updated_at from author5s, book6s where 1 != 1",
                "Query": "select /*vt+ ALLOW_HASH_JOIN */ book6s.id, book6s.supplier5_id, author5s.id as id, author5s.`name` as `name`, author5s.created_at as created_at, author5s.updated_at as updated_at from author5s, book6s where book6s.author5_id = author5s.id",
                "Table": "author5s, book6s"
              },
              {
                "OperatorType": "Route",
                "Variant": "EqualUnique",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select book6s_order2s.order2_id from book6s_order2s where 1 != 1",
                "Query": "select /*vt+ ALLOW_HASH_JOIN */ book6s_order2s.order2_id from book6s_order2s where book6s_order2s.book6_id = :book6s_id",
                "Table": "book6s_order2s",
                "Values": [
                  ":book6s_id"
                ],
                "Vindex": "binary_md5"
              }
            ]
          },
          {
            "OperatorType": "Route",
            "Variant": "Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select supplier5s.id from supplier5s where 1 != 1",
            "Query": "select /*vt+ ALLOW_HASH_JOIN */ supplier5s.id from supplier5s",
            "Table": "supplier5s"
          }
        ]
      }
    ]
  }
}
