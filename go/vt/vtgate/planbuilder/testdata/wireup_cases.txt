# join on having clause
"select e.col, u.id uid, e.id eid from user u join user_extra e having uid = eid"
{
  "QueryType": "SELECT",
  "Original": "select e.col, u.id uid, e.id eid from user u join user_extra e having uid = eid",
  "Instructions": {
    "OperatorType": "Join",
    "Variant": "Join",
    "JoinColumnIndexes": "R:0,L:0,R:1",
    "JoinVars": {
      "uid": 0
    },
    "TableName": "`user`_user_extra",
    "Inputs": [
      {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select u.id as uid from `user` as u where 1 != 1",
        "Query": "select u.id as uid from `user` as u",
        "Table": "`user`"
      },
      {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select e.col, e.id as eid from user_extra as e where 1 != 1",
        "Query": "select e.col, e.id as eid from user_extra as e having eid = :uid",
        "Table": "user_extra"
      }
    ]
  }
}
{
  "QueryType": "SELECT",
  "Original": "select e.col, u.id uid, e.id eid from user u join user_extra e having uid = eid",
  "Instructions": {
    "OperatorType": "Join",
    "Variant": "Join",
    "JoinColumnIndexes": "L:1,R:0,L:2",
    "JoinVars": {
      "e_id": 0
    },
    "TableName": "user_extra_`user`",
    "Inputs": [
      {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select e.id, e.col, e.id as eid from user_extra as e where 1 != 1",
        "Query": "select e.id, e.col, e.id as eid from user_extra as e",
        "Table": "user_extra"
      },
      {
        "OperatorType": "Route",
        "Variant": "EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select u.id as uid from `user` as u where 1 != 1",
        "Query": "select u.id as uid from `user` as u where u.id = :e_id",
        "Table": "`user`",
        "Values": [
          ":e_id"
        ],
        "Vindex": "user_index"
      }
    ]
  },
  "TablesUsed": [
    "user.user",
    "user.user_extra"
  ]
}

# bind var already in use
"select e.col, u.id uid, e.id eid from user u join user_extra e having uid = eid and e.col = :uid"
{
  "QueryType": "SELECT",
  "Original": "select e.col, u.id uid, e.id eid from user u join user_extra e having uid = eid and e.col = :uid",
  "Instructions": {
    "OperatorType": "Join",
    "Variant": "Join",
    "JoinColumnIndexes": "R:0,L:0,R:1",
    "JoinVars": {
      "uid1": 0
    },
    "TableName": "`user`_user_extra",
    "Inputs": [
      {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select u.id as uid from `user` as u where 1 != 1",
        "Query": "select u.id as uid from `user` as u",
        "Table": "`user`"
      },
      {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select e.col, e.id as eid from user_extra as e where 1 != 1",
        "Query": "select e.col, e.id as eid from user_extra as e having eid = :uid1 and e.col = :uid",
        "Table": "user_extra"
      }
    ]
  }
}
{
  "QueryType": "SELECT",
  "Original": "select e.col, u.id uid, e.id eid from user u join user_extra e having uid = eid and e.col = :uid",
  "Instructions": {
    "OperatorType": "Join",
    "Variant": "Join",
    "JoinColumnIndexes": "L:1,R:0,L:2",
    "JoinVars": {
      "e_id": 0
    },
    "TableName": "user_extra_`user`",
    "Inputs": [
      {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select e.id, e.col, e.id as eid from user_extra as e where 1 != 1",
        "Query": "select e.id, e.col, e.id as eid from user_extra as e where e.col = :uid",
        "Table": "user_extra"
      },
      {
        "OperatorType": "Route",
        "Variant": "EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select u.id as uid from `user` as u where 1 != 1",
        "Query": "select u.id as uid from `user` as u where u.id = :e_id",
        "Table": "`user`",
        "Values": [
          ":e_id"
        ],
        "Vindex": "user_index"
      }
    ]
  },
  "TablesUsed": [
    "user.user",
    "user.user_extra"
  ]
}

# wire-up join with join, going left
"select u1.id from user u1 join user u2 join user u3 where u3.col = u1.col"
{
  "QueryType": "SELECT",
  "Original": "select u1.id from user u1 join user u2 join user u3 where u3.col = u1.col",
  "Instructions": {
    "OperatorType": "Join",
    "Variant": "Join",
    "JoinColumnIndexes": "L:0",
    "JoinVars": {
      "u1_col": 1
    },
    "TableName": "`user`_`user`_`user`",
    "Inputs": [
      {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "L:0,L:1",
        "TableName": "`user`_`user`",
        "Inputs": [
          {
            "OperatorType": "Route",
            "Variant": "Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select u1.id, u1.col from `user` as u1 where 1 != 1",
            "Query": "select u1.id, u1.col from `user` as u1",
            "Table": "`user`"
          },
          {
            "OperatorType": "Route",
            "Variant": "Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select 1 from `user` as u2 where 1 != 1",
            "Query": "select 1 from `user` as u2",
            "Table": "`user`"
          }
        ]
      },
      {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select 1 from `user` as u3 where 1 != 1",
        "Query": "select 1 from `user` as u3 where u3.col = :u1_col",
        "Table": "`user`"
      }
    ]
  }
}
{
  "QueryType": "SELECT",
  "Original": "select u1.id from user u1 join user u2 join user u3 where u3.col = u1.col",
  "Instructions": {
    "OperatorType": "Join",
    "Variant": "Join",
    "JoinColumnIndexes": "R:0",
    "TableName": "`user`_`user`_`user`",
    "Inputs": [
      {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select 1 from `user` as u2 where 1 != 1",
        "Query": "select 1 from `user` as u2",
        "Table": "`user`"
      },
      {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "L:1",
        "JoinVars": {
          "u1_col": 0
        },
        "TableName": "`user`_`user`",
        "Inputs": [
          {
            "OperatorType": "Route",
            "Variant": "Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select u1.col, u1.id from `user` as u1 where 1 != 1",
            "Query": "select u1.col, u1.id from `user` as u1",
            "Table": "`user`"
          },
          {
            "OperatorType": "Route",
            "Variant": "Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select 1 from `user` as u3 where 1 != 1",
            "Query": "select 1 from `user` as u3 where u3.col = :u1_col",
            "Table": "`user`"
          }
        ]
      }
    ]
  },
  "TablesUsed": [
    "user.user"
  ]
}

# wire-up join with join, going left, then right
"select u1.id from user u1 join user u2 join user u3 where u3.col = u2.col"
{
  "QueryType": "SELECT",
  "Original": "select u1.id from user u1 join user u2 join user u3 where u3.col = u2.col",
  "Instructions": {
    "OperatorType": "Join",
    "Variant": "Join",
    "JoinColumnIndexes": "L:0",
    "JoinVars": {
      "u2_col": 1
    },
    "TableName": "`user`_`user`_`user`",
    "Inputs": [
      {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "L:0,R:0",
        "TableName": "`user`_`user`",
        "Inputs": [
          {
            "OperatorType": "Route",
            "Variant": "Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select u1.id from `user` as u1 where 1 != 1",
            "Query": "select u1.id from `user` as u1",
            "Table": "`user`"
          },
          {
            "OperatorType": "Route",
            "Variant": "Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select u2.col from `user` as u2 where 1 != 1",
            "Query": "select u2.col from `user` as u2",
            "Table": "`user`"
          }
        ]
      },
      {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select 1 from `user` as u3 where 1 != 1",
        "Query": "select 1 from `user` as u3 where u3.col = :u2_col",
        "Table": "`user`"
      }
    ]
  }
}
{
  "QueryType": "SELECT",
  "Original": "select u1.id from user u1 join user u2 join user u3 where u3.col = u2.col",
  "Instructions": {
    "OperatorType": "Join",
    "Variant": "Join",
    "JoinColumnIndexes": "L:0",
    "TableName": "`user`_`user`_`user`",
    "Inputs": [
      {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select u1.id from `user` as u1 where 1 != 1",
        "Query": "select u1.id from `user` as u1",
        "Table": "`user`"
      },
      {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinVars": {
          "u2_col": 0
        },
        "TableName": "`user`_`user`",
        "Inputs": [
          {
            "OperatorType": "Route",
            "Variant": "Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select u2.col from `user` as u2 where 1 != 1",
            "Query": "select u2.col from `user` as u2",
            "Table": "`user`"
          },
          {
            "OperatorType": "Route",
            "Variant": "Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select 1 from `user` as u3 where 1 != 1",
            "Query": "select 1 from `user` as u3 where u3.col = :u2_col",
            "Table": "`user`"
          }
        ]
      }
    ]
  },
  "TablesUsed": [
    "user.user"
  ]
}

# wire-up join with join, reuse existing result from a lower join
"select u1.id from user u1 join user u2 on u2.col = u1.col join user u3 where u3.col = u1.col"
{
  "QueryType": "SELECT",
  "Original": "select u1.id from user u1 join user u2 on u2.col = u1.col join user u3 where u3.col = u1.col",
  "Instructions": {
    "OperatorType": "Join",
    "Variant": "Join",
    "JoinColumnIndexes": "L:0",
    "JoinVars": {
      "u1_col": 1
    },
    "TableName": "`user`_`user`_`user`",
    "Inputs": [
      {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "L:0,L:1",
        "JoinVars": {
          "u1_col": 1
        },
        "TableName": "`user`_`user`",
        "Inputs": [
          {
            "OperatorType": "Route",
            "Variant": "Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select u1.id, u1.col from `user` as u1 where 1 != 1",
            "Query": "select u1.id, u1.col from `user` as u1",
            "Table": "`user`"
          },
          {
            "OperatorType": "Route",
            "Variant": "Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select 1 from `user` as u2 where 1 != 1",
            "Query": "select 1 from `user` as u2 where u2.col = :u1_col",
            "Table": "`user`"
          }
        ]
      },
      {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select 1 from `user` as u3 where 1 != 1",
        "Query": "select 1 from `user` as u3 where u3.col = :u1_col",
        "Table": "`user`"
      }
    ]
  }
}
{
  "QueryType": "SELECT",
  "Original": "select u1.id from user u1 join user u2 on u2.col = u1.col join user u3 where u3.col = u1.col",
  "Instructions": {
    "OperatorType": "Join",
    "Variant": "Join",
    "JoinColumnIndexes": "R:0",
    "JoinVars": {
      "u3_col": 0
    },
    "TableName": "`user`_`user`_`user`",
    "Inputs": [
      {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select u3.col from `user` as u3 where 1 != 1",
        "Query": "select u3.col from `user` as u3",
        "Table": "`user`"
      },
      {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "L:1",
        "JoinVars": {
          "u1_col": 0
        },
        "TableName": "`user`_`user`",
        "Inputs": [
          {
            "OperatorType": "Route",
            "Variant": "Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select u1.col, u1.id from `user` as u1 where 1 != 1",
            "Query": "select u1.col, u1.id from `user` as u1 where u1.col = :u3_col",
            "Table": "`user`"
          },
          {
            "OperatorType": "Route",
            "Variant": "Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select 1 from `user` as u2 where 1 != 1",
            "Query": "select 1 from `user` as u2 where u2.col = :u1_col",
            "Table": "`user`"
          }
        ]
      }
    ]
  },
  "TablesUsed": [
    "user.user"
  ]
}

# wire-up join with join, reuse existing result from a lower join.
# You need two levels of join nesting to test this: when u3 requests
# col from u1, the u1-u2 joins exports the column to u2-u3. When
# u4 requests it, it should be reused from the u1-u2 join.
"select u1.id from user u1 join user u2 join user u3 on u3.id = u1.col join user u4 where u4.col = u1.col"
{
  "QueryType": "SELECT",
  "Original": "select u1.id from user u1 join user u2 join user u3 on u3.id = u1.col join user u4 where u4.col = u1.col",
  "Instructions": {
    "OperatorType": "Join",
    "Variant": "Join",
    "JoinColumnIndexes": "L:0",
    "JoinVars": {
      "u1_col": 1
    },
    "TableName": "`user`_`user`_`user`_`user`",
    "Inputs": [
      {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "L:0,L:1",
        "JoinVars": {
          "u1_col": 1
        },
        "TableName": "`user`_`user`_`user`",
        "Inputs": [
          {
            "OperatorType": "Join",
            "Variant": "Join",
            "JoinColumnIndexes": "L:0,L:1",
            "TableName": "`user`_`user`",
            "Inputs": [
              {
                "OperatorType": "Route",
                "Variant": "Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select u1.id, u1.col from `user` as u1 where 1 != 1",
                "Query": "select u1.id, u1.col from `user` as u1",
                "Table": "`user`"
              },
              {
                "OperatorType": "Route",
                "Variant": "Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select 1 from `user` as u2 where 1 != 1",
                "Query": "select 1 from `user` as u2",
                "Table": "`user`"
              }
            ]
          },
          {
            "OperatorType": "Route",
            "Variant": "EqualUnique",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select 1 from `user` as u3 where 1 != 1",
            "Query": "select 1 from `user` as u3 where u3.id = :u1_col",
            "Table": "`user`",
            "Values": [
              ":u1_col"
            ],
            "Vindex": "user_index"
          }
        ]
      },
      {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select 1 from `user` as u4 where 1 != 1",
        "Query": "select 1 from `user` as u4 where u4.col = :u1_col",
        "Table": "`user`"
      }
    ]
  }
}
{
  "QueryType": "SELECT",
  "Original": "select u1.id from user u1 join user u2 join user u3 on u3.id = u1.col join user u4 where u4.col = u1.col",
  "Instructions": {
    "OperatorType": "Join",
    "Variant": "Join",
    "JoinColumnIndexes": "R:0",
    "TableName": "`user`_`user`_`user`_`user`",
    "Inputs": [
      {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select 1 from `user` as u2 where 1 != 1",
        "Query": "select 1 from `user` as u2",
        "Table": "`user`"
      },
      {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "R:0",
        "JoinVars": {
          "u4_col": 0
        },
        "TableName": "`user`_`user`_`user`",
        "Inputs": [
          {
            "OperatorType": "Route",
            "Variant": "Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select u4.col from `user` as u4 where 1 != 1",
            "Query": "select u4.col from `user` as u4",
            "Table": "`user`"
          },
          {
            "OperatorType": "Join",
            "Variant": "Join",
            "JoinColumnIndexes": "L:1",
            "JoinVars": {
              "u1_col": 0
            },
            "TableName": "`user`_`user`",
            "Inputs": [
              {
                "OperatorType": "Route",
                "Variant": "Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select u1.col, u1.id from `user` as u1 where 1 != 1",
                "Query": "select u1.col, u1.id from `user` as u1 where u1.col = :u4_col",
                "Table": "`user`"
              },
              {
                "OperatorType": "Route",
                "Variant": "EqualUnique",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select 1 from `user` as u3 where 1 != 1",
                "Query": "select 1 from `user` as u3 where u3.id = :u1_col",
                "Table": "`user`",
                "Values": [
                  ":u1_col"
                ],
                "Vindex": "user_index"
              }
            ]
          }
        ]
      }
    ]
  },
  "TablesUsed": [
    "user.user"
  ]
}

# Test reuse of join var already being supplied to the right of a node.
"select u1.id from user u1 join (user u2 join user u3) where u2.id = u1.col and u3.id = u1.col"
{
  "QueryType": "SELECT",
  "Original": "select u1.id from user u1 join (user u2 join user u3) where u2.id = u1.col and u3.id = u1.col",
  "Instructions": {
    "OperatorType": "Join",
    "Variant": "Join",
    "JoinColumnIndexes": "L:0",
    "JoinVars": {
      "u1_col": 1
    },
    "TableName": "`user`_`user`_`user`",
    "Inputs": [
      {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select u1.id, u1.col from `user` as u1 where 1 != 1",
        "Query": "select u1.id, u1.col from `user` as u1",
        "Table": "`user`"
      },
      {
        "OperatorType": "Join",
        "Variant": "Join",
        "TableName": "`user`_`user`",
        "Inputs": [
          {
            "OperatorType": "Route",
            "Variant": "EqualUnique",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select 1 from `user` as u2 where 1 != 1",
            "Query": "select 1 from `user` as u2 where u2.id = :u1_col",
            "Table": "`user`",
            "Values": [
              ":u1_col"
            ],
            "Vindex": "user_index"
          },
          {
            "OperatorType": "Route",
            "Variant": "EqualUnique",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select 1 from `user` as u3 where 1 != 1",
            "Query": "select 1 from `user` as u3 where u3.id = :u1_col",
            "Table": "`user`",
            "Values": [
              ":u1_col"
            ],
            "Vindex": "user_index"
          }
        ]
      }
    ]
  }
}
{
  "QueryType": "SELECT",
  "Original": "select u1.id from user u1 join (user u2 join user u3) where u2.id = u1.col and u3.id = u1.col",
  "Instructions": {
    "OperatorType": "Join",
    "Variant": "Join",
    "JoinColumnIndexes": "L:1",
    "JoinVars": {
      "u1_col": 0
    },
    "TableName": "`user`_`user`_`user`",
    "Inputs": [
      {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "L:0,L:1",
        "JoinVars": {
          "u1_col": 0
        },
        "TableName": "`user`_`user`",
        "Inputs": [
          {
            "OperatorType": "Route",
            "Variant": "Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select u1.col, u1.id from `user` as u1 where 1 != 1",
            "Query": "select u1.col, u1.id from `user` as u1",
            "Table": "`user`"
          },
          {
            "OperatorType": "Route",
            "Variant": "EqualUnique",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select 1 from `user` as u2 where 1 != 1",
            "Query": "select 1 from `user` as u2 where u2.id = :u1_col",
            "Table": "`user`",
            "Values": [
              ":u1_col"
            ],
            "Vindex": "user_index"
          }
        ]
      },
      {
        "OperatorType": "Route",
        "Variant": "EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select 1 from `user` as u3 where 1 != 1",
        "Query": "select 1 from `user` as u3 where u3.id = :u1_col",
        "Table": "`user`",
        "Values": [
          ":u1_col"
        ],
        "Vindex": "user_index"
      }
    ]
  },
  "TablesUsed": [
    "user.user"
  ]
}

# Join on weird columns.
"select `weird``name`.a, unsharded.b from `weird``name` join unsharded on `weird``name`.`a``b*c` = unsharded.id"
{
  "QueryType": "SELECT",
  "Original": "select `weird``name`.a, unsharded.b from `weird``name` join unsharded on `weird``name`.`a``b*c` = unsharded.id",
  "Instructions": {
    "OperatorType": "Join",
    "Variant": "Join",
    "JoinColumnIndexes": "L:0,R:0",
    "JoinVars": {
      "weird_name_a_b_c": 1
    },
    "TableName": "`weird``name`_unsharded",
    "Inputs": [
      {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select `weird``name`.a, `weird``name`.`a``b*c` from `weird``name` where 1 != 1",
        "Query": "select `weird``name`.a, `weird``name`.`a``b*c` from `weird``name`",
        "Table": "`weird``name`"
      },
      {
        "OperatorType": "Route",
        "Variant": "Unsharded",
        "Keyspace": {
          "Name": "main",
          "Sharded": false
        },
        "FieldQuery": "select unsharded.b from unsharded where 1 != 1",
        "Query": "select unsharded.b from unsharded where unsharded.id = :weird_name_a_b_c",
        "Table": "unsharded"
      }
    ]
  }
}
{
  "QueryType": "SELECT",
  "Original": "select `weird``name`.a, unsharded.b from `weird``name` join unsharded on `weird``name`.`a``b*c` = unsharded.id",
  "Instructions": {
    "OperatorType": "Join",
    "Variant": "Join",
    "JoinColumnIndexes": "R:0,L:1",
    "JoinVars": {
      "unsharded_id": 0
    },
    "TableName": "unsharded_`weird``name`",
    "Inputs": [
      {
        "OperatorType": "Route",
        "Variant": "Unsharded",
        "Keyspace": {
          "Name": "main",
          "Sharded": false
        },
        "FieldQuery": "select unsharded.id, unsharded.b from unsharded where 1 != 1",
        "Query": "select unsharded.id, unsharded.b from unsharded",
        "Table": "unsharded"
      },
      {
        "OperatorType": "Route",
        "Variant": "EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select `weird``name`.a from `weird``name` where 1 != 1",
        "Query": "select `weird``name`.a from `weird``name` where `weird``name`.`a``b*c` = :unsharded_id",
        "Table": "`weird``name`",
        "Values": [
          ":unsharded_id"
        ],
        "Vindex": "user_index"
      }
    ]
  },
  "TablesUsed": [
    "main.unsharded",
    "user.weird`name"
  ]
}

# Join on weird column (col is not in select)
"select unsharded.b from `weird``name` join unsharded on `weird``name`.`a``b*c` = unsharded.id"
{
  "QueryType": "SELECT",
  "Original": "select unsharded.b from `weird``name` join unsharded on `weird``name`.`a``b*c` = unsharded.id",
  "Instructions": {
    "OperatorType": "Join",
    "Variant": "Join",
    "JoinColumnIndexes": "R:0",
    "JoinVars": {
      "weird_name_a_b_c": 0
    },
    "TableName": "`weird``name`_unsharded",
    "Inputs": [
      {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select `weird``name`.`a``b*c` from `weird``name` where 1 != 1",
        "Query": "select `weird``name`.`a``b*c` from `weird``name`",
        "Table": "`weird``name`"
      },
      {
        "OperatorType": "Route",
        "Variant": "Unsharded",
        "Keyspace": {
          "Name": "main",
          "Sharded": false
        },
        "FieldQuery": "select unsharded.b from unsharded where 1 != 1",
        "Query": "select unsharded.b from unsharded where unsharded.id = :weird_name_a_b_c",
        "Table": "unsharded"
      }
    ]
  }
}
{
  "QueryType": "SELECT",
  "Original": "select unsharded.b from `weird``name` join unsharded on `weird``name`.`a``b*c` = unsharded.id",
  "Instructions": {
    "OperatorType": "Join",
    "Variant": "Join",
    "JoinColumnIndexes": "L:1",
    "JoinVars": {
      "unsharded_id": 0
    },
    "TableName": "unsharded_`weird``name`",
    "Inputs": [
      {
        "OperatorType": "Route",
        "Variant": "Unsharded",
        "Keyspace": {
          "Name": "main",
          "Sharded": false
        },
        "FieldQuery": "select unsharded.id, unsharded.b from unsharded where 1 != 1",
        "Query": "select unsharded.id, unsharded.b from unsharded",
        "Table": "unsharded"
      },
      {
        "OperatorType": "Route",
        "Variant": "EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select 1 from `weird``name` where 1 != 1",
        "Query": "select 1 from `weird``name` where `weird``name`.`a``b*c` = :unsharded_id",
        "Table": "`weird``name`",
        "Values": [
          ":unsharded_id"
        ],
        "Vindex": "user_index"
      }
    ]
  },
  "TablesUsed": [
    "main.unsharded",
    "user.weird`name"
  ]
}

# wire-up with limit primitive
"select u.id, e.id from user u join user_extra e where e.id = u.col limit 10"
{
  "QueryType": "SELECT",
  "Original": "select u.id, e.id from user u join user_extra e where e.id = u.col limit 10",
  "Instructions": {
    "OperatorType": "Limit",
    "Count": "INT64(10)",
    "Inputs": [
      {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "L:0,R:0",
        "JoinVars": {
          "u_col": 1
        },
        "TableName": "`user`_user_extra",
        "Inputs": [
          {
            "OperatorType": "Route",
            "Variant": "Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select u.id, u.col from `user` as u where 1 != 1",
            "Query": "select u.id, u.col from `user` as u",
            "Table": "`user`"
          },
          {
            "OperatorType": "Route",
            "Variant": "Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select e.id from user_extra as e where 1 != 1",
            "Query": "select e.id from user_extra as e where e.id = :u_col",
            "Table": "user_extra"
          }
        ]
      }
    ]
  }
}
{
  "QueryType": "SELECT",
  "Original": "select u.id, e.id from user u join user_extra e where e.id = u.col limit 10",
  "Instructions": {
    "OperatorType": "Limit",
    "Count": "INT64(10)",
    "Inputs": [
      {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "L:1,R:0",
        "JoinVars": {
          "u_col": 0
        },
        "TableName": "`user`_user_extra",
        "Inputs": [
          {
            "OperatorType": "Route",
            "Variant": "Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select u.col, u.id from `user` as u where 1 != 1",
            "Query": "select u.col, u.id from `user` as u",
            "Table": "`user`"
          },
          {
            "OperatorType": "Route",
            "Variant": "Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select e.id from user_extra as e where 1 != 1",
            "Query": "select e.id from user_extra as e where e.id = :u_col",
            "Table": "user_extra"
          }
        ]
      }
    ]
  },
  "TablesUsed": [
    "user.user",
    "user.user_extra"
  ]
}

# Wire-up in subquery
"select 1 from user where id in (select u.id, e.id from user u join user_extra e where e.id = u.col limit 10)"
{
  "QueryType": "SELECT",
  "Original": "select 1 from user where id in (select u.id, e.id from user u join user_extra e where e.id = u.col limit 10)",
  "Instructions": {
    "OperatorType": "Subquery",
    "Variant": "PulloutIn",
    "PulloutVars": [
      "__sq_has_values1",
      "__sq1"
    ],
    "Inputs": [
      {
        "OperatorType": "Limit",
        "Count": "INT64(10)",
        "Inputs": [
          {
            "OperatorType": "Join",
            "Variant": "Join",
            "JoinColumnIndexes": "L:0,R:0",
            "JoinVars": {
              "u_col": 1
            },
            "TableName": "`user`_user_extra",
            "Inputs": [
              {
                "OperatorType": "Route",
                "Variant": "Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select u.id, u.col from `user` as u where 1 != 1",
                "Query": "select u.id, u.col from `user` as u",
                "Table": "`user`"
              },
              {
                "OperatorType": "Route",
                "Variant": "Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select e.id from user_extra as e where 1 != 1",
                "Query": "select e.id from user_extra as e where e.id = :u_col",
                "Table": "user_extra"
              }
            ]
          }
        ]
      },
      {
        "OperatorType": "Route",
        "Variant": "IN",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select 1 from `user` where 1 != 1",
        "Query": "select 1 from `user` where :__sq_has_values1 = 1 and id in ::__vals",
        "Table": "`user`",
        "Values": [
          ":__sq1"
        ],
        "Vindex": "user_index"
      }
    ]
  }
}
{
  "QueryType": "SELECT",
  "Original": "select 1 from user where id in (select u.id, e.id from user u join user_extra e where e.id = u.col limit 10)",
  "Instructions": {
    "OperatorType": "Subquery",
    "Variant": "PulloutIn",
    "PulloutVars": [
      "__sq_has_values1",
      "__sq1"
    ],
    "Inputs": [
      {
        "OperatorType": "Limit",
        "Count": "INT64(10)",
        "Inputs": [
          {
            "OperatorType": "Join",
            "Variant": "Join",
            "JoinColumnIndexes": "L:1,R:0",
            "JoinVars": {
              "u_col": 0
            },
            "TableName": "`user`_user_extra",
            "Inputs": [
              {
                "OperatorType": "Route",
                "Variant": "Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select u.col, u.id from `user` as u where 1 != 1",
                "Query": "select u.col, u.id from `user` as u",
                "Table": "`user`"
              },
              {
                "OperatorType": "Route",
                "Variant": "Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select e.id from user_extra as e where 1 != 1",
                "Query": "select e.id from user_extra as e where e.id = :u_col",
                "Table": "user_extra"
              }
            ]
          }
        ]
      },
      {
        "OperatorType": "Route",
        "Variant": "IN",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select 1 from `user` where 1 != 1",
        "Query": "select 1 from `user` where :__sq_has_values1 = 1 and id in ::__vals",
        "Table": "`user`",
        "Values": [
          ":__sq1"
        ],
        "Vindex": "user_index"
      }
    ]
  },
  "TablesUsed": [
    "user.user",
    "user.user_extra"
  ]
}

# Wire-up in underlying primitive after pullout
"select u.id, e.id, (select col from user) from user u join user_extra e where e.id = u.col limit 10"
{
  "QueryType": "SELECT",
  "Original": "select u.id, e.id, (select col from user) from user u join user_extra e where e.id = u.col limit 10",
  "Instructions": {
    "OperatorType": "Limit",
    "Count": "INT64(10)",
    "Inputs": [
      {
        "OperatorType": "Subquery",
        "Variant": "PulloutValue",
        "PulloutVars": [
          "__sq_has_values1",
          "__sq1"
        ],
        "Inputs": [
          {
            "OperatorType": "Route",
            "Variant": "Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select col from `user` where 1 != 1",
            "Query": "select col from `user`",
            "Table": "`user`"
          },
          {
            "OperatorType": "Join",
            "Variant": "Join",
            "JoinColumnIndexes": "L:0,R:0,L:1",
            "JoinVars": {
              "u_col": 2
            },
            "TableName": "`user`_user_extra",
            "Inputs": [
              {
                "OperatorType": "Route",
                "Variant": "Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select u.id, :__sq1, u.col from `user` as u where 1 != 1",
                "Query": "select u.id, :__sq1, u.col from `user` as u",
                "Table": "`user`"
              },
              {
                "OperatorType": "Route",
                "Variant": "Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select e.id from user_extra as e where 1 != 1",
                "Query": "select e.id from user_extra as e where e.id = :u_col",
                "Table": "user_extra"
              }
            ]
          }
        ]
      }
    ]
  }
}
{
  "QueryType": "SELECT",
  "Original": "select u.id, e.id, (select col from user) from user u join user_extra e where e.id = u.col limit 10",
  "Instructions": {
    "OperatorType": "Limit",
    "Count": "INT64(10)",
    "Inputs": [
      {
        "OperatorType": "Subquery",
        "Variant": "PulloutValue",
        "PulloutVars": [
          "__sq1"
        ],
        "Inputs": [
          {
            "OperatorType": "Route",
            "Variant": "Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select col from `user` where 1 != 1",
            "Query": "select col from `user`",
            "Table": "`user`"
          },
          {
            "OperatorType": "Join",
            "Variant": "Join",
            "JoinColumnIndexes": "L:1,R:0,L:2",
            "JoinVars": {
              "u_col": 0
            },
            "TableName": "`user`_user_extra",
            "Inputs": [
              {
                "OperatorType": "Route",
                "Variant": "Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select u.col, u.id, :__sq1 from `user` as u where 1 != 1",
                "Query": "select u.col, u.id, :__sq1 from `user` as u",
                "Table": "`user`"
              },
              {
                "OperatorType": "Route",
                "Variant": "Scatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select e.id from user_extra as e where 1 != 1",
                "Query": "select e.id from user_extra as e where e.id = :u_col",
                "Table": "user_extra"
              }
            ]
          }
        ]
      }
    ]
  },
  "TablesUsed": [
    "user.user",
    "user.user_extra"
  ]
}

# Invalid value in IN clause
"select id from user where id in (18446744073709551616, 1)"
{
  "QueryType": "SELECT",
  "Original": "select id from user where id in (18446744073709551616, 1)",
  "Instructions": {
    "OperatorType": "Route",
    "Variant": "IN",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "FieldQuery": "select id from `user` where 1 != 1",
    "Query": "select id from `user` where id in ::__vals",
    "Table": "`user`",
    "Values": [
      "(DECIMAL(18446744073709551616), INT64(1))"
    ],
    "Vindex": "user_index"
  }
}
{
  "QueryType": "SELECT",
  "Original": "select id from user where id in (18446744073709551616, 1)",
  "Instructions": {
    "OperatorType": "Route",
    "Variant": "IN",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "FieldQuery": "select id from `user` where 1 != 1",
    "Query": "select id from `user` where id in ::__vals",
    "Table": "`user`",
    "Values": [
      "(DECIMAL(18446744073709551616), INT64(1))"
    ],
    "Vindex": "user_index"
  },
  "TablesUsed": [
    "user.user"
  ]
}

# Invalid value in IN clause from LHS of join
"select u1.id from user u1 join user u2 where u1.id = 18446744073709551616"
{
  "QueryType": "SELECT",
  "Original": "select u1.id from user u1 join user u2 where u1.id = 18446744073709551616",
  "Instructions": {
    "OperatorType": "Join",
    "Variant": "Join",
    "JoinColumnIndexes": "L:0",
    "TableName": "`user`_`user`",
    "Inputs": [
      {
        "OperatorType": "Route",
        "Variant": "EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select u1.id from `user` as u1 where 1 != 1",
        "Query": "select u1.id from `user` as u1 where u1.id = 18446744073709551616",
        "Table": "`user`",
        "Values": [
          "DECIMAL(18446744073709551616)"
        ],
        "Vindex": "user_index"
      },
      {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select 1 from `user` as u2 where 1 != 1",
        "Query": "select 1 from `user` as u2",
        "Table": "`user`"
      }
    ]
  }
}
{
  "QueryType": "SELECT",
  "Original": "select u1.id from user u1 join user u2 where u1.id = 18446744073709551616",
  "Instructions": {
    "OperatorType": "Join",
    "Variant": "Join",
    "JoinColumnIndexes": "L:0",
    "TableName": "`user`_`user`",
    "Inputs": [
      {
        "OperatorType": "Route",
        "Variant": "EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select u1.id from `user` as u1 where 1 != 1",
        "Query": "select u1.id from `user` as u1 where u1.id = 18446744073709551616",
        "Table": "`user`",
        "Values": [
          "DECIMAL(18446744073709551616)"
        ],
        "Vindex": "user_index"
      },
      {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select 1 from `user` as u2 where 1 != 1",
        "Query": "select 1 from `user` as u2",
        "Table": "`user`"
      }
    ]
  },
  "TablesUsed": [
    "user.user"
  ]
}

# Invalid value in IN clause from RHS of join
"select u1.id from user u1 join user u2 where u2.id = 18446744073709551616"
{
  "QueryType": "SELECT",
  "Original": "select u1.id from user u1 join user u2 where u2.id = 18446744073709551616",
  "Instructions": {
    "OperatorType": "Join",
    "Variant": "Join",
    "JoinColumnIndexes": "L:0",
    "TableName": "`user`_`user`",
    "Inputs": [
      {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select u1.id from `user` as u1 where 1 != 1",
        "Query": "select u1.id from `user` as u1",
        "Table": "`user`"
      },
      {
        "OperatorType": "Route",
        "Variant": "EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select 1 from `user` as u2 where 1 != 1",
        "Query": "select 1 from `user` as u2 where u2.id = 18446744073709551616",
        "Table": "`user`",
        "Values": [
          "DECIMAL(18446744073709551616)"
        ],
        "Vindex": "user_index"
      }
    ]
  }
}
{
  "QueryType": "SELECT",
  "Original": "select u1.id from user u1 join user u2 where u2.id = 18446744073709551616",
  "Instructions": {
    "OperatorType": "Join",
    "Variant": "Join",
    "JoinColumnIndexes": "L:0",
    "TableName": "`user`_`user`",
    "Inputs": [
      {
        "OperatorType": "Route",
        "Variant": "Scatter",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select u1.id from `user` as u1 where 1 != 1",
        "Query": "select u1.id from `user` as u1",
        "Table": "`user`"
      },
      {
        "OperatorType": "Route",
        "Variant": "EqualUnique",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select 1 from `user` as u2 where 1 != 1",
        "Query": "select 1 from `user` as u2 where u2.id = 18446744073709551616",
        "Table": "`user`",
        "Values": [
          "DECIMAL(18446744073709551616)"
        ],
        "Vindex": "user_index"
      }
    ]
  },
  "TablesUsed": [
    "user.user"
  ]
}

# derived table with column aliases not supported by v3, but planner is overridden with hint
"select /*vt+ PLANNER=gen4 */ u.a from (select id as b, name from user) u(a, n) where u.n = 1"
{
  "QueryType": "SELECT",
  "Original": "select /*vt+ PLANNER=gen4 */ u.a from (select id as b, name from user) u(a, n) where u.n = 1",
  "Instructions": {
    "OperatorType": "VindexLookup",
    "Variant": "Equal",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Values": [
      "INT64(1)"
    ],
    "Vindex": "name_user_map",
    "Inputs": [
      {
        "OperatorType": "Route",
        "Variant": "IN",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select `name`, keyspace_id from name_user_vdx where 1 != 1",
        "Query": "select `name`, keyspace_id from name_user_vdx where `name` in ::__vals",
        "Table": "name_user_vdx",
        "Values": [
          ":name"
        ],
        "Vindex": "user_index"
      },
      {
        "OperatorType": "Route",
        "Variant": "ByDestination",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select u.a from (select id as b, `name` from `user` where 1 != 1) as u(a, n) where 1 != 1",
        "Query": "select /*vt+ PLANNER=gen4 */ u.a from (select id as b, `name` from `user` where `name` = 1) as u(a, n)",
        "Table": "`user`"
      }
    ]
  },
  "TablesUsed": [
    "user.user"
  ]
}
Gen4 plan same as above

# derived table with column aliases not supported by v3, but planner is overridden with hint
"select /*vt+ PLANNER=v3 */ u.a from (select id as b, name from user) u(a, n) where u.n = 1"
"unsupported: column aliases in derived table"
Gen4 plan same as above

# Three-way join using the left2right. The normal gen4 planner would merge m1 and m2 first, but the left to right doesnt
"select /*vt+ PLANNER=left2right */ user.col from user join unsharded as m1 join unsharded as m2"
{
  "QueryType": "SELECT",
  "Original": "select /*vt+ PLANNER=left2right */ user.col from user join unsharded as m1 join unsharded as m2",
  "Instructions": {
    "OperatorType": "Join",
    "Variant": "Join",
    "JoinColumnIndexes": "L:0",
    "TableName": "`user`_unsharded_unsharded",
    "Inputs": [
      {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "L:0",
        "TableName": "`user`_unsharded",
        "Inputs": [
          {
            "OperatorType": "Route",
            "Variant": "Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select `user`.col from `user` where 1 != 1",
            "Query": "select /*vt+ PLANNER=left2right */ `user`.col from `user`",
            "Table": "`user`"
          },
          {
            "OperatorType": "Route",
            "Variant": "Unsharded",
            "Keyspace": {
              "Name": "main",
              "Sharded": false
            },
            "FieldQuery": "select 1 from unsharded as m1 where 1 != 1",
            "Query": "select /*vt+ PLANNER=left2right */ 1 from unsharded as m1",
            "Table": "unsharded"
          }
        ]
      },
      {
        "OperatorType": "Route",
        "Variant": "Unsharded",
        "Keyspace": {
          "Name": "main",
          "Sharded": false
        },
        "FieldQuery": "select 1 from unsharded as m2 where 1 != 1",
        "Query": "select /*vt+ PLANNER=left2right */ 1 from unsharded as m2",
        "Table": "unsharded"
      }
    ]
  },
  "TablesUsed": [
    "main.unsharded",
    "user.user"
  ]
}
Gen4 plan same as above
