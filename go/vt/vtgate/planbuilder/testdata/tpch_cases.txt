# TPC-H query 1
"select l_returnflag, l_linestatus, sum(l_quantity) as sum_qty, sum(l_extendedprice) as sum_base_price, sum(l_extendedprice * (1 - l_discount)) as sum_disc_price, sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) as sum_charge, avg(l_quantity) as avg_qty, avg(l_extendedprice) as avg_price, avg(l_discount) as avg_disc, count(*) as count_order from lineitem where l_shipdate <= '1998-12-01' - interval '108' day group by l_returnflag, l_linestatus order by l_returnflag, l_linestatus"
"unsupported: in scatter query: complex aggregate expression"
Gen4 plan same as above

# TPC-H query 2
"select s_acctbal, s_name, n_name, p_partkey, p_mfgr, s_address, s_phone, s_comment from part, supplier, partsupp, nation, region where p_partkey = ps_partkey and s_suppkey = ps_suppkey and p_size = 15 and p_type like '%BRASS' and s_nationkey = n_nationkey and n_regionkey = r_regionkey and r_name = 'EUROPE' and ps_supplycost = ( select min(ps_supplycost) from partsupp, supplier, nation, region where p_partkey = ps_partkey and s_suppkey = ps_suppkey and s_nationkey = n_nationkey and n_regionkey = r_regionkey and r_name = 'EUROPE' ) order by s_acctbal desc, n_name, s_name, p_partkey limit 10"
"symbol p_partkey not found"
Gen4 error: unsupported: cross-shard correlated subquery

# TPC-H query 3
"select l_orderkey, sum(l_extendedprice * (1 - l_discount)) as revenue, o_orderdate, o_shippriority from customer, orders, lineitem where c_mktsegment = 'BUILDING' and c_custkey = o_custkey and l_orderkey = o_orderkey and o_orderdate < date('1995-03-15') and l_shipdate > date('1995-03-15') group by l_orderkey, o_orderdate, o_shippriority order by revenue desc, o_orderdate limit 10"
"unsupported: cross-shard query with aggregates"
{
  "QueryType": "SELECT",
  "Original": "select l_orderkey, sum(l_extendedprice * (1 - l_discount)) as revenue, o_orderdate, o_shippriority from customer, orders, lineitem where c_mktsegment = 'BUILDING' and c_custkey = o_custkey and l_orderkey = o_orderkey and o_orderdate \u003c date('1995-03-15') and l_shipdate \u003e date('1995-03-15') group by l_orderkey, o_orderdate, o_shippriority order by revenue desc, o_orderdate limit 10",
  "Instructions": {
    "OperatorType": "Limit",
    "Count": 10,
    "Inputs": [
      {
        "OperatorType": "Sort",
        "Variant": "Memory",
        "OrderBy": "1 DESC, (2|5) ASC",
        "ResultColumns": 4,
        "Inputs": [
          {
            "OperatorType": "Aggregate",
            "Variant": "Ordered",
            "Aggregates": "sum(1) AS revenue",
            "GroupBy": "(0|4), (2|5), (3|6)",
            "Inputs": [
              {
                "OperatorType": "Sort",
                "Variant": "Memory",
                "OrderBy": "(0|4) ASC, (2|5) ASC, (3|6) ASC",
                "Inputs": [
                  {
                    "OperatorType": "Join",
                    "Variant": "Join",
                    "JoinColumnIndexes": "-1,-2,1,2,-3,3,4",
                    "JoinVars": {
                      "l_orderkey": 0
                    },
                    "TableName": "lineitem_orders_customer",
                    "Inputs": [
                      {
                        "OperatorType": "Route",
                        "Variant": "SelectScatter",
                        "Keyspace": {
                          "Name": "main",
                          "Sharded": true
                        },
                        "FieldQuery": "select l_orderkey, sum(l_extendedprice * (1 - l_discount)) as revenue, weight_string(l_orderkey) from lineitem where 1 != 1",
                        "Query": "select l_orderkey, sum(l_extendedprice * (1 - l_discount)) as revenue, weight_string(l_orderkey) from lineitem where l_shipdate \u003e date('1995-03-15')",
                        "Table": "lineitem"
                      },
                      {
                        "OperatorType": "Join",
                        "Variant": "Join",
                        "JoinColumnIndexes": "-2,-3,-4,-5",
                        "JoinVars": {
                          "o_custkey": 0
                        },
                        "TableName": "orders_customer",
                        "Inputs": [
                          {
                            "OperatorType": "Route",
                            "Variant": "SelectEqualUnique",
                            "Keyspace": {
                              "Name": "main",
                              "Sharded": true
                            },
                            "FieldQuery": "select o_custkey, o_orderdate, o_shippriority, weight_string(o_orderdate), weight_string(o_shippriority) from orders where 1 != 1",
                            "Query": "select o_custkey, o_orderdate, o_shippriority, weight_string(o_orderdate), weight_string(o_shippriority) from orders where o_orderdate \u003c date('1995-03-15') and o_orderkey = :l_orderkey",
                            "Table": "orders",
                            "Values": [
                              ":l_orderkey"
                            ],
                            "Vindex": "hash"
                          },
                          {
                            "OperatorType": "Route",
                            "Variant": "SelectEqualUnique",
                            "Keyspace": {
                              "Name": "main",
                              "Sharded": true
                            },
                            "FieldQuery": "select 1 from customer where 1 != 1",
                            "Query": "select 1 from customer where c_mktsegment = 'BUILDING' and c_custkey = :o_custkey",
                            "Table": "customer",
                            "Values": [
                              ":o_custkey"
                            ],
                            "Vindex": "hash"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}

# TPC-H query 4
"select o_orderpriority, count(*) as order_count from orders where o_orderdate >= date('1993-07-01') and o_orderdate < date('1993-07-01') + interval '3' month and exists ( select * from lineitem where l_orderkey = o_orderkey and l_commitdate < l_receiptdate ) group by o_orderpriority order by o_orderpriority"
"symbol o_orderkey not found in table or subquery"
Gen4 error: unsupported: cross-shard correlated subquery

# TPC-H query 5 - Gen4 produces plan but the plan output is flaky
"select n_name, sum(l_extendedprice * (1 - l_discount)) as revenue from customer, orders, lineitem, supplier, nation, region where c_custkey = o_custkey and l_orderkey = o_orderkey and l_suppkey = s_suppkey and c_nationkey = s_nationkey and s_nationkey = n_nationkey and n_regionkey = r_regionkey and r_name = 'ASIA' and o_orderdate >= date('1994-01-01') and o_orderdate < date('1994-01-01') + interval '1' year group by n_name order by revenue desc"
"unsupported: cross-shard query with aggregates"
{
  "QueryType": "SELECT",
  "Original": "select n_name, sum(l_extendedprice * (1 - l_discount)) as revenue from customer, orders, lineitem, supplier, nation, region where c_custkey = o_custkey and l_orderkey = o_orderkey and l_suppkey = s_suppkey and c_nationkey = s_nationkey and s_nationkey = n_nationkey and n_regionkey = r_regionkey and r_name = 'ASIA' and o_orderdate \u003e= date('1994-01-01') and o_orderdate \u003c date('1994-01-01') + interval '1' year group by n_name order by revenue desc",
  "Instructions": {
    "OperatorType": "Sort",
    "Variant": "Memory",
    "OrderBy": "1 DESC",
    "ResultColumns": 2,
    "Inputs": [
      {
        "OperatorType": "Aggregate",
        "Variant": "Ordered",
        "Aggregates": "sum(1) AS revenue",
        "GroupBy": "(0|2)",
        "Inputs": [
          {
            "OperatorType": "Sort",
            "Variant": "Memory",
            "OrderBy": "(0|2) ASC",
            "Inputs": [
              {
                "OperatorType": "Join",
                "Variant": "Join",
                "JoinColumnIndexes": "1,-2,2",
                "JoinVars": {
                  "s_nationkey": 0
                },
                "TableName": "orders_customer_lineitem_supplier_nation_region",
                "Inputs": [
                  {
                    "OperatorType": "Join",
                    "Variant": "Join",
                    "JoinColumnIndexes": "1,2",
                    "JoinVars": {
                      "c_nationkey": 1,
                      "o_orderkey": 0
                    },
                    "TableName": "orders_customer_lineitem_supplier",
                    "Inputs": [
                      {
                        "OperatorType": "Join",
                        "Variant": "Join",
                        "JoinVars": {
                          "o_custkey": 0
                        },
                        "TableName": "orders_customer",
                        "Inputs": [
                          {
                            "OperatorType": "Route",
                            "Variant": "SelectScatter",
                            "Keyspace": {
                              "Name": "main",
                              "Sharded": true
                            },
                            "FieldQuery": "select o_custkey, o_orderkey from orders where 1 != 1",
                            "Query": "select o_custkey, o_orderkey from orders where o_orderdate \u003e= date('1994-01-01') and o_orderdate \u003c date('1994-01-01') + interval '1' year",
                            "Table": "orders"
                          },
                          {
                            "OperatorType": "Route",
                            "Variant": "SelectEqualUnique",
                            "Keyspace": {
                              "Name": "main",
                              "Sharded": true
                            },
                            "FieldQuery": "select c_nationkey from customer where 1 != 1",
                            "Query": "select c_nationkey from customer where c_custkey = :o_custkey",
                            "Table": "customer",
                            "Values": [
                              ":o_custkey"
                            ],
                            "Vindex": "hash"
                          }
                        ]
                      },
                      {
                        "OperatorType": "Join",
                        "Variant": "Join",
                        "JoinColumnIndexes": "1,-2",
                        "JoinVars": {
                          "l_suppkey": 0
                        },
                        "TableName": "lineitem_supplier",
                        "Inputs": [
                          {
                            "OperatorType": "Route",
                            "Variant": "SelectEqualUnique",
                            "Keyspace": {
                              "Name": "main",
                              "Sharded": true
                            },
                            "FieldQuery": "select l_suppkey, sum(l_extendedprice * (1 - l_discount)) as revenue from lineitem where 1 != 1",
                            "Query": "select l_suppkey, sum(l_extendedprice * (1 - l_discount)) as revenue from lineitem where l_orderkey = :o_orderkey",
                            "Table": "lineitem",
                            "Values": [
                              ":o_orderkey"
                            ],
                            "Vindex": "lineitem_map"
                          },
                          {
                            "OperatorType": "Route",
                            "Variant": "SelectEqualUnique",
                            "Keyspace": {
                              "Name": "main",
                              "Sharded": true
                            },
                            "FieldQuery": "select s_nationkey from supplier where 1 != 1",
                            "Query": "select s_nationkey from supplier where s_suppkey = :l_suppkey and s_nationkey = :c_nationkey",
                            "Table": "supplier",
                            "Values": [
                              ":l_suppkey"
                            ],
                            "Vindex": "hash"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "OperatorType": "Join",
                    "Variant": "Join",
                    "JoinColumnIndexes": "-2,-3",
                    "JoinVars": {
                      "n_regionkey": 0
                    },
                    "TableName": "nation_region",
                    "Inputs": [
                      {
                        "OperatorType": "Route",
                        "Variant": "SelectEqualUnique",
                        "Keyspace": {
                          "Name": "main",
                          "Sharded": true
                        },
                        "FieldQuery": "select n_regionkey, n_name, weight_string(n_name) from nation where 1 != 1",
                        "Query": "select n_regionkey, n_name, weight_string(n_name) from nation where n_nationkey = :s_nationkey",
                        "Table": "nation",
                        "Values": [
                          ":s_nationkey"
                        ],
                        "Vindex": "hash"
                      },
                      {
                        "OperatorType": "Route",
                        "Variant": "SelectEqualUnique",
                        "Keyspace": {
                          "Name": "main",
                          "Sharded": true
                        },
                        "FieldQuery": "select 1 from region where 1 != 1",
                        "Query": "select 1 from region where r_name = 'ASIA' and r_regionkey = :n_regionkey",
                        "Table": "region",
                        "Values": [
                          ":n_regionkey"
                        ],
                        "Vindex": "hash"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}

# TPC-H query 6
"select sum(l_extendedprice * l_discount) as revenue from lineitem where l_shipdate >= date('1994-01-01') and l_shipdate < date('1994-01-01') + interval '1' year and l_discount between 0.06 - 0.01 and 0.06 + 0.01 and l_quantity < 24"
{
  "QueryType": "SELECT",
  "Original": "select sum(l_extendedprice * l_discount) as revenue from lineitem where l_shipdate \u003e= date('1994-01-01') and l_shipdate \u003c date('1994-01-01') + interval '1' year and l_discount between 0.06 - 0.01 and 0.06 + 0.01 and l_quantity \u003c 24",
  "Instructions": {
    "OperatorType": "Aggregate",
    "Variant": "Ordered",
    "Aggregates": "sum(0)",
    "Inputs": [
      {
        "OperatorType": "Route",
        "Variant": "SelectScatter",
        "Keyspace": {
          "Name": "main",
          "Sharded": true
        },
        "FieldQuery": "select sum(l_extendedprice * l_discount) as revenue from lineitem where 1 != 1",
        "Query": "select sum(l_extendedprice * l_discount) as revenue from lineitem where l_shipdate \u003e= date('1994-01-01') and l_shipdate \u003c date('1994-01-01') + interval '1' year and l_discount between 0.06 - 0.01 and 0.06 + 0.01 and l_quantity \u003c 24",
        "Table": "lineitem"
      }
    ]
  }
}
{
  "QueryType": "SELECT",
  "Original": "select sum(l_extendedprice * l_discount) as revenue from lineitem where l_shipdate \u003e= date('1994-01-01') and l_shipdate \u003c date('1994-01-01') + interval '1' year and l_discount between 0.06 - 0.01 and 0.06 + 0.01 and l_quantity \u003c 24",
  "Instructions": {
    "OperatorType": "Aggregate",
    "Variant": "Ordered",
    "Aggregates": "sum(0) AS revenue",
    "Inputs": [
      {
        "OperatorType": "Route",
        "Variant": "SelectScatter",
        "Keyspace": {
          "Name": "main",
          "Sharded": true
        },
        "FieldQuery": "select sum(l_extendedprice * l_discount) as revenue from lineitem where 1 != 1",
        "Query": "select sum(l_extendedprice * l_discount) as revenue from lineitem where l_shipdate \u003e= date('1994-01-01') and l_shipdate \u003c date('1994-01-01') + interval '1' year and l_discount between 0.06 - 0.01 and 0.06 + 0.01 and l_quantity \u003c 24",
        "Table": "lineitem"
      }
    ]
  }
}

# TPC-H query 7
"select supp_nation, cust_nation, l_year, sum(volume) as revenue from (select n1.n_name as supp_nation, n2.n_name as cust_nation, extract(year from l_shipdate) as l_year, l_extendedprice * (1 - l_discount) as volume from supplier, lineitem, orders, customer, nation n1, nation n2 where s_suppkey = l_suppkey and o_orderkey = l_orderkey and c_custkey = o_custkey and s_nationkey = n1.n_nationkey and c_nationkey = n2.n_nationkey and ((n1.n_name = 'FRANCE' and n2.n_name = 'GERMANY') or (n1.n_name = 'GERMANY' and n2.n_name = 'FRANCE')) and l_shipdate between date('1995-01-01') and date('1996-12-31')) as shipping group by supp_nation, cust_nation, l_year order by supp_nation, cust_nation, l_year"
"syntax error at position 147 near 'from'"
Gen4 plan same as above

# TPC-H query 8
"select o_year, sum(case when nation = 'BRAZIL' then volume else 0 end) / sum(volume) as mkt_share from ( select extract(year from o_orderdate) as o_year, l_extendedprice * (1 - l_discount) as volume, n2.n_name as nation from part, supplier, lineitem, orders, customer, nation n1, nation n2, region where p_partkey = l_partkey and s_suppkey = l_suppkey and l_orderkey = o_orderkey and o_custkey = c_custkey and c_nationkey = n1.n_nationkey and n1.n_regionkey = r_regionkey and r_name = 'AMERICA' and s_nationkey = n2.n_nationkey and o_orderdate between date '1995-01-01' and date('1996-12-31') and p_type = 'ECONOMY ANODIZED STEEL' ) as all_nations group by o_year order by o_year"
"syntax error at position 130 near 'from'"
Gen4 plan same as above

# TPC-H query 9
"select nation, o_year, sum(amount) as sum_profit from ( select n_name as nation, extract(year from o_orderdate) as o_year, l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount from part, supplier, lineitem, partsupp, orders, nation where s_suppkey = l_suppkey and ps_suppkey = l_suppkey and ps_partkey = l_partkey and p_partkey = l_partkey and o_orderkey = l_orderkey and s_nationkey = n_nationkey and p_name like '%green%' ) as profit group by nation, o_year order by nation, o_year desc"
"syntax error at position 99 near 'from'"
Gen4 plan same as above

# TPC-H query 10
"select c_custkey, c_name, sum(l_extendedprice * (1 - l_discount)) as revenue, c_acctbal, n_name, c_address, c_phone, c_comment from customer, orders, lineitem, nation where c_custkey = o_custkey and l_orderkey = o_orderkey and o_orderdate >= date('1993-10-01') and o_orderdate < date('1993-10-01') + interval '3' month and l_returnflag = 'R' and c_nationkey = n_nationkey group by c_custkey, c_name, c_acctbal, c_phone, n_name, c_address, c_comment order by revenue desc limit 20"
"unsupported: cross-shard query with aggregates"
{
  "QueryType": "SELECT",
  "Original": "select c_custkey, c_name, sum(l_extendedprice * (1 - l_discount)) as revenue, c_acctbal, n_name, c_address, c_phone, c_comment from customer, orders, lineitem, nation where c_custkey = o_custkey and l_orderkey = o_orderkey and o_orderdate \u003e= date('1993-10-01') and o_orderdate \u003c date('1993-10-01') + interval '3' month and l_returnflag = 'R' and c_nationkey = n_nationkey group by c_custkey, c_name, c_acctbal, c_phone, n_name, c_address, c_comment order by revenue desc limit 20",
  "Instructions": {
    "OperatorType": "Limit",
    "Count": 20,
    "Inputs": [
      {
        "OperatorType": "Sort",
        "Variant": "Memory",
        "OrderBy": "2 DESC",
        "ResultColumns": 8,
        "Inputs": [
          {
            "OperatorType": "Aggregate",
            "Variant": "Ordered",
            "Aggregates": "sum(2) AS revenue",
            "GroupBy": "(0|8), (1|9), (3|10), (6|11), (4|12), (5|13), (7|14)",
            "Inputs": [
              {
                "OperatorType": "Sort",
                "Variant": "Memory",
                "OrderBy": "(0|8) ASC, (1|9) ASC, (3|10) ASC, (6|11) ASC, (4|12) ASC, (5|13) ASC, (7|14) ASC",
                "Inputs": [
                  {
                    "OperatorType": "Join",
                    "Variant": "Join",
                    "JoinColumnIndexes": "1,2,-2,3,4,5,6,7,8,9,10,11,12,13,14",
                    "JoinVars": {
                      "o_custkey": 0
                    },
                    "TableName": "orders_lineitem_customer_nation",
                    "Inputs": [
                      {
                        "OperatorType": "Join",
                        "Variant": "Join",
                        "JoinColumnIndexes": "-2,1",
                        "JoinVars": {
                          "o_orderkey": 0
                        },
                        "TableName": "orders_lineitem",
                        "Inputs": [
                          {
                            "OperatorType": "Route",
                            "Variant": "SelectScatter",
                            "Keyspace": {
                              "Name": "main",
                              "Sharded": true
                            },
                            "FieldQuery": "select o_orderkey, o_custkey from orders where 1 != 1",
                            "Query": "select o_orderkey, o_custkey from orders where o_orderdate \u003e= date('1993-10-01') and o_orderdate \u003c date('1993-10-01') + interval '3' month",
                            "Table": "orders"
                          },
                          {
                            "OperatorType": "Route",
                            "Variant": "SelectEqualUnique",
                            "Keyspace": {
                              "Name": "main",
                              "Sharded": true
                            },
                            "FieldQuery": "select sum(l_extendedprice * (1 - l_discount)) as revenue from lineitem where 1 != 1",
                            "Query": "select sum(l_extendedprice * (1 - l_discount)) as revenue from lineitem where l_returnflag = 'R' and l_orderkey = :o_orderkey",
                            "Table": "lineitem",
                            "Values": [
                              ":o_orderkey"
                            ],
                            "Vindex": "lineitem_map"
                          }
                        ]
                      },
                      {
                        "OperatorType": "Join",
                        "Variant": "Join",
                        "JoinColumnIndexes": "-2,-3,-4,1,-5,-6,-7,-8,-9,-10,-11,2,-12,-13",
                        "JoinVars": {
                          "c_nationkey": 0
                        },
                        "TableName": "customer_nation",
                        "Inputs": [
                          {
                            "OperatorType": "Route",
                            "Variant": "SelectEqualUnique",
                            "Keyspace": {
                              "Name": "main",
                              "Sharded": true
                            },
                            "FieldQuery": "select c_nationkey, c_custkey, c_name, c_acctbal, c_address, c_phone, c_comment, weight_string(c_custkey), weight_string(c_name), weight_string(c_acctbal), weight_string(c_phone), weight_string(c_address), weight_string(c_comment) from customer where 1 != 1",
                            "Query": "select c_nationkey, c_custkey, c_name, c_acctbal, c_address, c_phone, c_comment, weight_string(c_custkey), weight_string(c_name), weight_string(c_acctbal), weight_string(c_phone), weight_string(c_address), weight_string(c_comment) from customer where c_custkey = :o_custkey",
                            "Table": "customer",
                            "Values": [
                              ":o_custkey"
                            ],
                            "Vindex": "hash"
                          },
                          {
                            "OperatorType": "Route",
                            "Variant": "SelectEqualUnique",
                            "Keyspace": {
                              "Name": "main",
                              "Sharded": true
                            },
                            "FieldQuery": "select n_name, weight_string(n_name) from nation where 1 != 1",
                            "Query": "select n_name, weight_string(n_name) from nation where n_nationkey = :c_nationkey",
                            "Table": "nation",
                            "Values": [
                              ":c_nationkey"
                            ],
                            "Vindex": "hash"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}

# TPC-H query 11
"select ps_partkey, sum(ps_supplycost * ps_availqty) as value from partsupp, supplier, nation where ps_suppkey = s_suppkey and s_nationkey = n_nationkey and n_name = 'GERMANY' group by ps_partkey  having sum(ps_supplycost * ps_availqty) > ( select sum(ps_supplycost * ps_availqty) * 0.00001000000 from partsupp, supplier, nation where ps_suppkey = s_suppkey and s_nationkey = n_nationkey and n_name = 'GERMANY' ) order by value desc"
"unsupported: cross-shard query with aggregates"
Gen4 error: unsupported: in scatter query: complex aggregate expression

# TPC-H query 12
"select l_shipmode, sum(case when o_orderpriority = '1-URGENT' or o_orderpriority = '2-HIGH' then 1 else 0 end) as high_line_count, sum(case when o_orderpriority <> '1-URGENT' and o_orderpriority <> '2-HIGH' then 1 else 0 end) as low_line_count from orders, lineitem where o_orderkey = l_orderkey and l_shipmode in ('MAIL', 'SHIP') and l_commitdate < l_receiptdate and l_shipdate < l_commitdate and l_receiptdate >= date('1994-01-01') and l_receiptdate < date('1994-01-01') + interval '1' year group by l_shipmode order by l_shipmode"
"unsupported: cross-shard query with aggregates"
{
  "QueryType": "SELECT",
  "Original": "select l_shipmode, sum(case when o_orderpriority = '1-URGENT' or o_orderpriority = '2-HIGH' then 1 else 0 end) as high_line_count, sum(case when o_orderpriority \u003c\u003e '1-URGENT' and o_orderpriority \u003c\u003e '2-HIGH' then 1 else 0 end) as low_line_count from orders, lineitem where o_orderkey = l_orderkey and l_shipmode in ('MAIL', 'SHIP') and l_commitdate \u003c l_receiptdate and l_shipdate \u003c l_commitdate and l_receiptdate \u003e= date('1994-01-01') and l_receiptdate \u003c date('1994-01-01') + interval '1' year group by l_shipmode order by l_shipmode",
  "Instructions": {
    "OperatorType": "Aggregate",
    "Variant": "Ordered",
    "Aggregates": "sum(1) AS high_line_count, sum(2) AS low_line_count",
    "GroupBy": "(0|3)",
    "ResultColumns": 3,
    "Inputs": [
      {
        "OperatorType": "Sort",
        "Variant": "Memory",
        "OrderBy": "(0|3) ASC",
        "Inputs": [
          {
            "OperatorType": "Join",
            "Variant": "Join",
            "JoinColumnIndexes": "1,-2,-3,2",
            "JoinVars": {
              "o_orderkey": 0
            },
            "TableName": "orders_lineitem",
            "Inputs": [
              {
                "OperatorType": "Route",
                "Variant": "SelectScatter",
                "Keyspace": {
                  "Name": "main",
                  "Sharded": true
                },
                "FieldQuery": "select o_orderkey, sum(case when o_orderpriority = '1-URGENT' or o_orderpriority = '2-HIGH' then 1 else 0 end) as high_line_count, sum(case when o_orderpriority != '1-URGENT' and o_orderpriority != '2-HIGH' then 1 else 0 end) as low_line_count from orders where 1 != 1",
                "Query": "select o_orderkey, sum(case when o_orderpriority = '1-URGENT' or o_orderpriority = '2-HIGH' then 1 else 0 end) as high_line_count, sum(case when o_orderpriority != '1-URGENT' and o_orderpriority != '2-HIGH' then 1 else 0 end) as low_line_count from orders",
                "Table": "orders"
              },
              {
                "OperatorType": "Route",
                "Variant": "SelectEqualUnique",
                "Keyspace": {
                  "Name": "main",
                  "Sharded": true
                },
                "FieldQuery": "select l_shipmode, weight_string(l_shipmode) from lineitem where 1 != 1",
                "Query": "select l_shipmode, weight_string(l_shipmode) from lineitem where l_shipmode in ('MAIL', 'SHIP') and l_commitdate \u003c l_receiptdate and l_shipdate \u003c l_commitdate and l_receiptdate \u003e= date('1994-01-01') and l_receiptdate \u003c date('1994-01-01') + interval '1' year and l_orderkey = :o_orderkey",
                "Table": "lineitem",
                "Values": [
                  ":o_orderkey"
                ],
                "Vindex": "lineitem_map"
              }
            ]
          }
        ]
      }
    ]
  }
}

# TPC-H query 13
"select c_count, count(*) as custdist from ( select c_custkey, count(o_orderkey) from customer left outer join orders on c_custkey = o_custkey and o_comment not like '%special%requests%' group by c_custkey ) as c_orders(c_custkey, c_count) group by c_count order by custdist desc, c_count desc"
"unsupported: column aliases in derived table"
gen4 does not yet support: column aliases in derived table

# TPC-H query 14
"select 100.00 * sum(case when p_type like 'PROMO%' then l_extendedprice * (1 - l_discount) else 0 end) /  sum(l_extendedprice * (1 - l_discount)) as promo_revenue from lineitem, part where l_partkey = p_partkey and l_shipdate >= date('1995-09-01') and l_shipdate < date('1995-09-01') + interval '1' month"
"unsupported: cross-shard query with aggregates"
Gen4 error: unsupported: in scatter query: complex aggregate expression

# TPC-H query 15 view
"with revenue0(supplier_no, total_revenue) as (select l_suppkey, sum(l_extendedprice * (1 - l_discount))  from lineitem where l_shipdate >= date('1996-01-01') and l_shipdate < date('1996-01-01') + interval '3' month group by l_suppkey )"
"syntax error at position 5 near 'with'"
Gen4 plan same as above

# TPC-H query 15
"select s_suppkey, s_name, s_address, s_phone, total_revenue from supplier, revenue0 where s_suppkey = supplier_no and total_revenue = ( select max(total_revenue) from revenue0 ) order by s_suppkey"
{
  "QueryType": "SELECT",
  "Original": "select s_suppkey, s_name, s_address, s_phone, total_revenue from supplier, revenue0 where s_suppkey = supplier_no and total_revenue = ( select max(total_revenue) from revenue0 ) order by s_suppkey",
  "Instructions": {
    "OperatorType": "Subquery",
    "Variant": "PulloutValue",
    "Inputs": [
      {
        "OperatorType": "Aggregate",
        "Variant": "Ordered",
        "Aggregates": "max(0)",
        "Inputs": [
          {
            "OperatorType": "Route",
            "Variant": "SelectScatter",
            "Keyspace": {
              "Name": "main",
              "Sharded": true
            },
            "FieldQuery": "select max(total_revenue) from revenue0 where 1 != 1",
            "Query": "select max(total_revenue) from revenue0",
            "Table": "revenue0"
          }
        ]
      },
      {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "-1,-2,-3,-4,1",
        "JoinVars": {
          "s_suppkey": 0
        },
        "TableName": "supplier_revenue0",
        "Inputs": [
          {
            "OperatorType": "Route",
            "Variant": "SelectScatter",
            "Keyspace": {
              "Name": "main",
              "Sharded": true
            },
            "FieldQuery": "select s_suppkey, s_name, s_address, s_phone, weight_string(s_suppkey) from supplier where 1 != 1",
            "OrderBy": "(0|4) ASC",
            "Query": "select s_suppkey, s_name, s_address, s_phone, weight_string(s_suppkey) from supplier order by s_suppkey asc",
            "ResultColumns": 4,
            "Table": "supplier"
          },
          {
            "OperatorType": "Route",
            "Variant": "SelectEqualUnique",
            "Keyspace": {
              "Name": "main",
              "Sharded": true
            },
            "FieldQuery": "select total_revenue from revenue0 where 1 != 1",
            "Query": "select total_revenue from revenue0 where supplier_no = :s_suppkey and total_revenue = :__sq1",
            "Table": "revenue0",
            "Values": [
              ":s_suppkey"
            ],
            "Vindex": "hash"
          }
        ]
      }
    ]
  }
}
{
  "QueryType": "SELECT",
  "Original": "select s_suppkey, s_name, s_address, s_phone, total_revenue from supplier, revenue0 where s_suppkey = supplier_no and total_revenue = ( select max(total_revenue) from revenue0 ) order by s_suppkey",
  "Instructions": {
    "OperatorType": "Subquery",
    "Variant": "PulloutValue",
    "Inputs": [
      {
        "OperatorType": "Aggregate",
        "Variant": "Ordered",
        "Aggregates": "max(0) AS max(total_revenue)",
        "Inputs": [
          {
            "OperatorType": "Route",
            "Variant": "SelectScatter",
            "Keyspace": {
              "Name": "main",
              "Sharded": true
            },
            "FieldQuery": "select max(total_revenue) from revenue0 where 1 != 1",
            "Query": "select max(total_revenue) from revenue0",
            "Table": "revenue0"
          }
        ]
      },
      {
        "OperatorType": "Route",
        "Variant": "SelectScatter",
        "Keyspace": {
          "Name": "main",
          "Sharded": true
        },
        "FieldQuery": "select s_suppkey, s_name, s_address, s_phone, total_revenue, weight_string(s_suppkey) from supplier, revenue0 where 1 != 1",
        "OrderBy": "(0|5) ASC",
        "Query": "select s_suppkey, s_name, s_address, s_phone, total_revenue, weight_string(s_suppkey) from supplier, revenue0 where total_revenue = :__sq1 and s_suppkey = supplier_no order by s_suppkey asc",
        "ResultColumns": 5,
        "Table": "revenue0, supplier"
      }
    ]
  }
}

# TPC-H query 16
"select p_brand, p_type, p_size, count(distinct ps_suppkey) as supplier_cnt from partsupp, part where p_partkey = ps_partkey and p_brand <> 'Brand#45' and p_type not like 'MEDIUM POLISHED%' and p_size in (49, 14, 23, 45, 19, 3, 36, 9) and ps_suppkey not in ( select s_suppkey from supplier where s_comment like '%Customer%Complaints%' ) group by p_brand, p_type, p_size order by supplier_cnt desc, p_brand, p_type, p_size"
"unsupported: cross-shard query with aggregates"
{
  "QueryType": "SELECT",
  "Original": "select p_brand, p_type, p_size, count(distinct ps_suppkey) as supplier_cnt from partsupp, part where p_partkey = ps_partkey and p_brand \u003c\u003e 'Brand#45' and p_type not like 'MEDIUM POLISHED%' and p_size in (49, 14, 23, 45, 19, 3, 36, 9) and ps_suppkey not in ( select s_suppkey from supplier where s_comment like '%Customer%Complaints%' ) group by p_brand, p_type, p_size order by supplier_cnt desc, p_brand, p_type, p_size",
  "Instructions": {
    "OperatorType": "Sort",
    "Variant": "Memory",
    "OrderBy": "3 DESC, (0|4) ASC, (1|5) ASC, (2|6) ASC",
    "ResultColumns": 4,
    "Inputs": [
      {
        "OperatorType": "Aggregate",
        "Variant": "Ordered",
        "Aggregates": "count_distinct(3|7) AS supplier_cnt",
        "GroupBy": "(0|4), (1|5), (2|6)",
        "Inputs": [
          {
            "OperatorType": "Subquery",
            "Variant": "PulloutNotIn",
            "Inputs": [
              {
                "OperatorType": "Route",
                "Variant": "SelectScatter",
                "Keyspace": {
                  "Name": "main",
                  "Sharded": true
                },
                "FieldQuery": "select s_suppkey from supplier where 1 != 1",
                "Query": "select s_suppkey from supplier where s_comment like '%Customer%Complaints%'",
                "Table": "supplier"
              },
              {
                "OperatorType": "Sort",
                "Variant": "Memory",
                "OrderBy": "(0|4) ASC, (1|5) ASC, (2|6) ASC, (3|7) ASC",
                "Inputs": [
                  {
                    "OperatorType": "Join",
                    "Variant": "Join",
                    "JoinColumnIndexes": "1,2,3,-2,4,5,6,-3",
                    "JoinVars": {
                      "ps_partkey": 0
                    },
                    "TableName": "partsupp_part",
                    "Inputs": [
                      {
                        "OperatorType": "Route",
                        "Variant": "SelectScatter",
                        "Keyspace": {
                          "Name": "main",
                          "Sharded": true
                        },
                        "FieldQuery": "select ps_partkey, ps_suppkey, weight_string(ps_suppkey) from partsupp where 1 != 1",
                        "Query": "select ps_partkey, ps_suppkey, weight_string(ps_suppkey) from partsupp where :__sq_has_values1 = 0 or ps_suppkey not in ::__sq1",
                        "Table": "partsupp"
                      },
                      {
                        "OperatorType": "Route",
                        "Variant": "SelectEqualUnique",
                        "Keyspace": {
                          "Name": "main",
                          "Sharded": true
                        },
                        "FieldQuery": "select p_brand, p_type, p_size, weight_string(p_brand), weight_string(p_type), weight_string(p_size) from part where 1 != 1",
                        "Query": "select p_brand, p_type, p_size, weight_string(p_brand), weight_string(p_type), weight_string(p_size) from part where p_brand != 'Brand#45' and p_type not like 'MEDIUM POLISHED%' and p_size in (49, 14, 23, 45, 19, 3, 36, 9) and p_partkey = :ps_partkey",
                        "Table": "part",
                        "Values": [
                          ":ps_partkey"
                        ],
                        "Vindex": "hash"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}

# TPC-H query 17
"select sum(l_extendedprice) / 7.0 as avg_yearly from lineitem, part where p_partkey = l_partkey and p_brand = 'Brand#23' and p_container = 'MED BOX' and l_quantity < ( select 0.2 * avg(l_quantity) from lineitem where l_partkey = p_partkey )"
"symbol p_partkey not found in table or subquery"
Gen4 error: unsupported: cross-shard correlated subquery

# TPC-H query 18
"select c_name, c_custkey, o_orderkey, o_orderdate, o_totalprice, sum(l_quantity) from customer, orders, lineitem where o_orderkey in ( select l_orderkey from lineitem group by l_orderkey having sum(l_quantity) > 300 ) and c_custkey = o_custkey and o_orderkey = l_orderkey group by c_name, c_custkey, o_orderkey, o_orderdate, o_totalprice order by o_totalprice desc, o_orderdate limit 100"
"unsupported: cross-shard query with aggregates"
{
  "QueryType": "SELECT",
  "Original": "select c_name, c_custkey, o_orderkey, o_orderdate, o_totalprice, sum(l_quantity) from customer, orders, lineitem where o_orderkey in ( select l_orderkey from lineitem group by l_orderkey having sum(l_quantity) \u003e 300 ) and c_custkey = o_custkey and o_orderkey = l_orderkey group by c_name, c_custkey, o_orderkey, o_orderdate, o_totalprice order by o_totalprice desc, o_orderdate limit 100",
  "Instructions": {
    "OperatorType": "Limit",
    "Count": 100,
    "Inputs": [
      {
        "OperatorType": "Subquery",
        "Variant": "PulloutIn",
        "Inputs": [
          {
            "OperatorType": "Route",
            "Variant": "SelectScatter",
            "Keyspace": {
              "Name": "main",
              "Sharded": true
            },
            "FieldQuery": "select l_orderkey from lineitem where 1 != 1 group by l_orderkey",
            "Query": "select l_orderkey from lineitem group by l_orderkey having sum(l_quantity) \u003e 300",
            "Table": "lineitem"
          },
          {
            "OperatorType": "Join",
            "Variant": "Join",
            "JoinColumnIndexes": "-2,-3,-1,-4,-5,1,-6,-7,-8,-9,-10",
            "JoinVars": {
              "o_orderkey": 0
            },
            "TableName": "orders_customer_lineitem",
            "Inputs": [
              {
                "OperatorType": "Join",
                "Variant": "Join",
                "JoinColumnIndexes": "-2,1,2,-3,-4,3,4,-5,-6,-7",
                "JoinVars": {
                  "o_custkey": 0
                },
                "TableName": "orders_customer",
                "Inputs": [
                  {
                    "OperatorType": "Route",
                    "Variant": "SelectIN",
                    "Keyspace": {
                      "Name": "main",
                      "Sharded": true
                    },
                    "FieldQuery": "select o_custkey, o_orderkey, o_orderdate, o_totalprice, weight_string(o_orderkey), weight_string(o_orderdate), weight_string(o_totalprice) from orders where 1 != 1",
                    "OrderBy": "(3|6) DESC, (2|5) ASC",
                    "Query": "select o_custkey, o_orderkey, o_orderdate, o_totalprice, weight_string(o_orderkey), weight_string(o_orderdate), weight_string(o_totalprice) from orders where :__sq_has_values1 = 1 and o_orderkey in ::__vals order by o_totalprice desc, o_orderdate asc",
                    "Table": "orders",
                    "Values": [
                      "::__sq1"
                    ],
                    "Vindex": "hash"
                  },
                  {
                    "OperatorType": "Route",
                    "Variant": "SelectEqualUnique",
                    "Keyspace": {
                      "Name": "main",
                      "Sharded": true
                    },
                    "FieldQuery": "select c_name, c_custkey, weight_string(c_name), weight_string(c_custkey) from customer where 1 != 1",
                    "Query": "select c_name, c_custkey, weight_string(c_name), weight_string(c_custkey) from customer where c_custkey = :o_custkey",
                    "Table": "customer",
                    "Values": [
                      ":o_custkey"
                    ],
                    "Vindex": "hash"
                  }
                ]
              },
              {
                "OperatorType": "Route",
                "Variant": "SelectEqualUnique",
                "Keyspace": {
                  "Name": "main",
                  "Sharded": true
                },
                "FieldQuery": "select sum(l_quantity) from lineitem where 1 != 1",
                "Query": "select sum(l_quantity) from lineitem where l_orderkey = :o_orderkey",
                "Table": "lineitem",
                "Values": [
                  ":o_orderkey"
                ],
                "Vindex": "lineitem_map"
              }
            ]
          }
        ]
      }
    ]
  }
}

# TPC-H query 19
"select sum(l_extendedprice* (1 - l_discount)) as revenue from lineitem, part where ( p_partkey = l_partkey and p_brand = 'Brand#12' and p_container in ('SM CASE', 'SM BOX', 'SM PACK', 'SM PKG') and l_quantity >= 1 and l_quantity <= 1 + 10 and p_size between 1 and 5 and l_shipmode in ('AIR', 'AIR REG') and l_shipinstruct = 'DELIVER IN PERSON' ) or ( p_partkey = l_partkey and p_brand = 'Brand#23' and p_container in ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK') and l_quantity >= 10 and l_quantity <= 10 + 10 and p_size between 1 and 10 and l_shipmode in ('AIR', 'AIR REG') and l_shipinstruct = 'DELIVER IN PERSON' ) or ( p_partkey = l_partkey and p_brand = 'Brand#34' and p_container in ('LG CASE', 'LG BOX', 'LG PACK', 'LG PKG') and l_quantity >= 20 and l_quantity <= 20 + 10 and p_size between 1 and 15 and l_shipmode in ('AIR', 'AIR REG') and l_shipinstruct = 'DELIVER IN PERSON' )"
"unsupported: cross-shard query with aggregates"
{
  "QueryType": "SELECT",
  "Original": "select sum(l_extendedprice* (1 - l_discount)) as revenue from lineitem, part where ( p_partkey = l_partkey and p_brand = 'Brand#12' and p_container in ('SM CASE', 'SM BOX', 'SM PACK', 'SM PKG') and l_quantity \u003e= 1 and l_quantity \u003c= 1 + 10 and p_size between 1 and 5 and l_shipmode in ('AIR', 'AIR REG') and l_shipinstruct = 'DELIVER IN PERSON' ) or ( p_partkey = l_partkey and p_brand = 'Brand#23' and p_container in ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK') and l_quantity \u003e= 10 and l_quantity \u003c= 10 + 10 and p_size between 1 and 10 and l_shipmode in ('AIR', 'AIR REG') and l_shipinstruct = 'DELIVER IN PERSON' ) or ( p_partkey = l_partkey and p_brand = 'Brand#34' and p_container in ('LG CASE', 'LG BOX', 'LG PACK', 'LG PKG') and l_quantity \u003e= 20 and l_quantity \u003c= 20 + 10 and p_size between 1 and 15 and l_shipmode in ('AIR', 'AIR REG') and l_shipinstruct = 'DELIVER IN PERSON' )",
  "Instructions": {
    "OperatorType": "Aggregate",
    "Variant": "Ordered",
    "Aggregates": "sum(0) AS revenue",
    "Inputs": [
      {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "-5",
        "JoinVars": {
          "l_partkey": 10,
          "l_quantity": 12,
          "l_shipinstruct": 14,
          "l_shipmode": 13
        },
        "TableName": "lineitem_part",
        "Inputs": [
          {
            "OperatorType": "Route",
            "Variant": "SelectScatter",
            "Keyspace": {
              "Name": "main",
              "Sharded": true
            },
            "FieldQuery": "select l_partkey, l_quantity, l_shipmode, l_shipinstruct, sum(l_extendedprice * (1 - l_discount)) as revenue from lineitem where 1 != 1",
            "Query": "select l_partkey, l_quantity, l_shipmode, l_shipinstruct, sum(l_extendedprice * (1 - l_discount)) as revenue from lineitem",
            "Table": "lineitem"
          },
          {
            "OperatorType": "Route",
            "Variant": "SelectScatter",
            "Keyspace": {
              "Name": "main",
              "Sharded": true
            },
            "FieldQuery": "select 1 from part where 1 != 1",
            "Query": "select 1 from part where p_partkey = :l_partkey and p_brand = 'Brand#12' and p_container in ('SM CASE', 'SM BOX', 'SM PACK', 'SM PKG') and :l_quantity \u003e= 1 and :l_quantity \u003c= 1 + 10 and p_size between 1 and 5 and :l_shipmode in ('AIR', 'AIR REG') and :l_shipinstruct = 'DELIVER IN PERSON' or p_partkey = :l_partkey and p_brand = 'Brand#23' and p_container in ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK') and :l_quantity \u003e= 10 and :l_quantity \u003c= 10 + 10 and p_size between 1 and 10 and :l_shipmode in ('AIR', 'AIR REG') and :l_shipinstruct = 'DELIVER IN PERSON' or p_partkey = :l_partkey and p_brand = 'Brand#34' and p_container in ('LG CASE', 'LG BOX', 'LG PACK', 'LG PKG') and :l_quantity \u003e= 20 and :l_quantity \u003c= 20 + 10 and p_size between 1 and 15 and :l_shipmode in ('AIR', 'AIR REG') and :l_shipinstruct = 'DELIVER IN PERSON'",
            "Table": "part"
          }
        ]
      }
    ]
  }
}

# TPC-H query 20
"select s_name, s_address from supplier, nation where s_suppkey in ( select ps_suppkey from partsupp where ps_partkey in ( select p_partkey from part where p_name like 'forest%' ) and ps_availqty > ( select 0.5 * sum(l_quantity) from lineitem where l_partkey = ps_partkey and l_suppkey = ps_suppkey and l_shipdate >= date('1994-01-01') and l_shipdate < date('1994-01-01') + interval '1' year ) ) and s_nationkey = n_nationkey and n_name = 'CANADA' order by s_name"
"symbol ps_partkey not found in table or subquery"
Gen4 error: unsupported: cross-shard correlated subquery

# TPC-H query 21
"select s_name, count(*) as numwait from supplier, lineitem l1, orders, nation where s_suppkey = l1.l_suppkey and o_orderkey = l1.l_orderkey and o_orderstatus = 'F' and l1.l_receiptdate > l1.l_commitdate and exists ( select * from lineitem l2 where l2.l_orderkey = l1.l_orderkey and l2.l_suppkey <> l1.l_suppkey ) and not exists ( select * from lineitem l3 where l3.l_orderkey = l1.l_orderkey and l3.l_suppkey <> l1.l_suppkey and l3.l_receiptdate > l3.l_commitdate ) and s_nationkey = n_nationkey and n_name = 'SAUDI ARABIA' group by s_name order by numwait desc, s_name limit 100"
"unsupported: cross-shard query with aggregates"
Gen4 plan same as above

# TPC-H query 22
"select cntrycode, count(*) as numcust, sum(c_acctbal) as totacctbal from ( select substring(c_phone from 1 for 2) as cntrycode, c_acctbal from customer where substring(c_phone from 1 for 2) in ('13', '31', '23', '29', '30', '18', '17') and c_acctbal > ( select avg(c_acctbal) from customer where c_acctbal > 0.00 and substring(c_phone from 1 for 2) in ('13', '31', '23', '29', '30', '18', '17') ) and not exists ( select * from orders where o_custkey = c_custkey ) ) as custsale group by cntrycode order by cntrycode"
"symbol c_custkey not found in table or subquery"
Gen4 error: unsupported: cross-shard correlated subquery
