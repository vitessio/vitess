[
  {
    "comment": "TPC-H query 1",
    "query": "select l_returnflag, l_linestatus, sum(l_quantity) as sum_qty, sum(l_extendedprice) as sum_base_price, sum(l_extendedprice * (1 - l_discount)) as sum_disc_price, sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) as sum_charge, avg(l_quantity) as avg_qty, avg(l_extendedprice) as avg_price, avg(l_discount) as avg_disc, count(*) as count_order from lineitem where l_shipdate <= '1998-12-01' - interval '108' day group by l_returnflag, l_linestatus order by l_returnflag, l_linestatus",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select l_returnflag, l_linestatus, sum(l_quantity) as sum_qty, sum(l_extendedprice) as sum_base_price, sum(l_extendedprice * (1 - l_discount)) as sum_disc_price, sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) as sum_charge, avg(l_quantity) as avg_qty, avg(l_extendedprice) as avg_price, avg(l_discount) as avg_disc, count(*) as count_order from lineitem where l_shipdate <= '1998-12-01' - interval '108' day group by l_returnflag, l_linestatus order by l_returnflag, l_linestatus",
      "Instructions": {
        "OperatorType": "Projection",
        "Expressions": [
          ":0 as l_returnflag",
          ":1 as l_linestatus",
          ":2 as sum_qty",
          ":3 as sum_base_price",
          ":4 as sum_disc_price",
          ":5 as sum_charge",
          "sum(l_quantity) / count(l_quantity) as avg_qty",
          "sum(l_extendedprice) / count(l_extendedprice) as avg_price",
          "sum(l_discount) / count(l_discount) as avg_disc",
          ":9 as count_order"
        ],
        "Inputs": [
          {
            "OperatorType": "Aggregate",
            "Variant": "Ordered",
            "Aggregates": "sum(2) AS sum_qty, sum(3) AS sum_base_price, sum(4) AS sum_disc_price, sum(5) AS sum_charge, sum(6) AS avg_qty, sum(7) AS avg_price, sum(8) AS avg_disc, sum_count_star(9) AS count_order, sum_count(10) AS count(l_quantity), sum_count(11) AS count(l_extendedprice), sum_count(12) AS count(l_discount)",
            "GroupBy": "(0|13), (1|14)",
            "Inputs": [
              {
                "OperatorType": "Route",
                "Variant": "Scatter",
                "Keyspace": {
                  "Name": "main",
                  "Sharded": true
                },
                "FieldQuery": "select l_returnflag, l_linestatus, sum(l_quantity) as sum_qty, sum(l_extendedprice) as sum_base_price, sum(l_extendedprice * (1 - l_discount)) as sum_disc_price, sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) as sum_charge, sum(l_quantity) as avg_qty, sum(l_extendedprice) as avg_price, sum(l_discount) as avg_disc, count(*) as count_order, count(l_quantity), count(l_extendedprice), count(l_discount), weight_string(l_returnflag), weight_string(l_linestatus) from lineitem where 1 != 1 group by l_returnflag, l_linestatus, weight_string(l_returnflag), weight_string(l_linestatus)",
                "OrderBy": "(0|13) ASC, (1|14) ASC",
                "Query": "select l_returnflag, l_linestatus, sum(l_quantity) as sum_qty, sum(l_extendedprice) as sum_base_price, sum(l_extendedprice * (1 - l_discount)) as sum_disc_price, sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) as sum_charge, sum(l_quantity) as avg_qty, sum(l_extendedprice) as avg_price, sum(l_discount) as avg_disc, count(*) as count_order, count(l_quantity), count(l_extendedprice), count(l_discount), weight_string(l_returnflag), weight_string(l_linestatus) from lineitem where l_shipdate <= '1998-12-01' - interval '108' day group by l_returnflag, l_linestatus, weight_string(l_returnflag), weight_string(l_linestatus) order by lineitem.l_returnflag asc, lineitem.l_linestatus asc",
                "Table": "lineitem"
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "main.lineitem"
      ]
    }
  },
  {
    "comment": "TPC-H query 2",
    "query": "select s_acctbal, s_name, n_name, p_partkey, p_mfgr, s_address, s_phone, s_comment from part, supplier, partsupp, nation, region where p_partkey = ps_partkey and s_suppkey = ps_suppkey and p_size = 15 and p_type like '%BRASS' and s_nationkey = n_nationkey and n_regionkey = r_regionkey and r_name = 'EUROPE' and ps_supplycost = ( select min(ps_supplycost) from partsupp, supplier, nation, region where p_partkey = ps_partkey and s_suppkey = ps_suppkey and s_nationkey = n_nationkey and n_regionkey = r_regionkey and r_name = 'EUROPE' ) order by s_acctbal desc, n_name, s_name, p_partkey limit 10",
    "plan": "VT12001: unsupported: correlated subquery is only supported for EXISTS"
  },
  {
    "comment": "TPC-H query 3",
    "query": "select l_orderkey, sum(l_extendedprice * (1 - l_discount)) as revenue, o_orderdate, o_shippriority from customer, orders, lineitem where c_mktsegment = 'BUILDING' and c_custkey = o_custkey and l_orderkey = o_orderkey and o_orderdate < date('1995-03-15') and l_shipdate > date('1995-03-15') group by l_orderkey, o_orderdate, o_shippriority order by revenue desc, o_orderdate limit 10",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select l_orderkey, sum(l_extendedprice * (1 - l_discount)) as revenue, o_orderdate, o_shippriority from customer, orders, lineitem where c_mktsegment = 'BUILDING' and c_custkey = o_custkey and l_orderkey = o_orderkey and o_orderdate < date('1995-03-15') and l_shipdate > date('1995-03-15') group by l_orderkey, o_orderdate, o_shippriority order by revenue desc, o_orderdate limit 10",
      "Instructions": {
        "OperatorType": "Limit",
        "Count": "10",
        "Inputs": [
          {
            "OperatorType": "Sort",
            "Variant": "Memory",
            "OrderBy": "1 DESC COLLATE utf8mb4_0900_ai_ci, (2|5) ASC",
            "ResultColumns": 4,
            "Inputs": [
              {
                "OperatorType": "Aggregate",
                "Variant": "Ordered",
                "Aggregates": "sum(1) AS revenue",
                "GroupBy": "(0|4), (2|5), (3|6)",
                "Inputs": [
                  {
                    "OperatorType": "Projection",
                    "Expressions": [
                      ":2 as l_orderkey",
                      "sum(l_extendedprice * (1 - l_discount)) * count(*) as revenue",
                      ":3 as o_orderdate",
                      ":4 as o_shippriority",
                      ":5 as weight_string(l_orderkey)",
                      ":6 as weight_string(o_orderdate)",
                      ":7 as weight_string(o_shippriority)"
                    ],
                    "Inputs": [
                      {
                        "OperatorType": "Sort",
                        "Variant": "Memory",
                        "OrderBy": "(2|5) ASC, (3|6) ASC, (4|7) ASC",
                        "Inputs": [
                          {
                            "OperatorType": "Join",
                            "Variant": "Join",
                            "JoinColumnIndexes": "L:0,R:0,L:1,R:1,R:2,L:2,R:3,R:4",
                            "JoinVars": {
                              "l_orderkey": 1
                            },
                            "TableName": "lineitem_orders_customer",
                            "Inputs": [
                              {
                                "OperatorType": "Route",
                                "Variant": "Scatter",
                                "Keyspace": {
                                  "Name": "main",
                                  "Sharded": true
                                },
                                "FieldQuery": "select sum(l_extendedprice * (1 - l_discount)) as revenue, l_orderkey, weight_string(l_orderkey) from lineitem where 1 != 1 group by l_orderkey, weight_string(l_orderkey)",
                                "Query": "select sum(l_extendedprice * (1 - l_discount)) as revenue, l_orderkey, weight_string(l_orderkey) from lineitem where l_shipdate > date('1995-03-15') group by l_orderkey, weight_string(l_orderkey)",
                                "Table": "lineitem"
                              },
                              {
                                "OperatorType": "Projection",
                                "Expressions": [
                                  "count(*) * count(*) as count(*)",
                                  ":2 as o_orderdate",
                                  ":3 as o_shippriority",
                                  ":4 as weight_string(o_orderdate)",
                                  ":5 as weight_string(o_shippriority)"
                                ],
                                "Inputs": [
                                  {
                                    "OperatorType": "Join",
                                    "Variant": "Join",
                                    "JoinColumnIndexes": "L:0,R:0,L:1,L:2,L:4,L:5",
                                    "JoinVars": {
                                      "o_custkey": 3
                                    },
                                    "TableName": "orders_customer",
                                    "Inputs": [
                                      {
                                        "OperatorType": "Route",
                                        "Variant": "EqualUnique",
                                        "Keyspace": {
                                          "Name": "main",
                                          "Sharded": true
                                        },
                                        "FieldQuery": "select count(*), o_orderdate, o_shippriority, o_custkey, weight_string(o_orderdate), weight_string(o_shippriority) from orders where 1 != 1 group by o_orderdate, o_shippriority, o_custkey, weight_string(o_orderdate), weight_string(o_shippriority)",
                                        "Query": "select count(*), o_orderdate, o_shippriority, o_custkey, weight_string(o_orderdate), weight_string(o_shippriority) from orders where o_orderdate < date('1995-03-15') and o_orderkey = :l_orderkey group by o_orderdate, o_shippriority, o_custkey, weight_string(o_orderdate), weight_string(o_shippriority)",
                                        "Table": "orders",
                                        "Values": [
                                          ":l_orderkey"
                                        ],
                                        "Vindex": "hash"
                                      },
                                      {
                                        "OperatorType": "Route",
                                        "Variant": "EqualUnique",
                                        "Keyspace": {
                                          "Name": "main",
                                          "Sharded": true
                                        },
                                        "FieldQuery": "select count(*) from customer where 1 != 1 group by .0",
                                        "Query": "select count(*) from customer where c_mktsegment = 'BUILDING' and c_custkey = :o_custkey group by .0",
                                        "Table": "customer",
                                        "Values": [
                                          ":o_custkey"
                                        ],
                                        "Vindex": "hash"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "main.customer",
        "main.lineitem",
        "main.orders"
      ]
    }
  },
  {
    "comment": "TPC-H query 4",
    "query": "select o_orderpriority, count(*) as order_count from orders where o_orderdate >= date('1993-07-01') and o_orderdate < date('1993-07-01') + interval '3' month and exists ( select * from lineitem where l_orderkey = o_orderkey and l_commitdate < l_receiptdate ) group by o_orderpriority order by o_orderpriority",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select o_orderpriority, count(*) as order_count from orders where o_orderdate >= date('1993-07-01') and o_orderdate < date('1993-07-01') + interval '3' month and exists ( select * from lineitem where l_orderkey = o_orderkey and l_commitdate < l_receiptdate ) group by o_orderpriority order by o_orderpriority",
      "Instructions": {
        "OperatorType": "Aggregate",
        "Variant": "Ordered",
        "Aggregates": "sum_count_star(1) AS order_count",
        "GroupBy": "(0|3)",
        "ResultColumns": 2,
        "Inputs": [
          {
            "OperatorType": "SemiJoin",
            "JoinVars": {
              "o_orderkey": 2
            },
            "TableName": "orders_lineitem",
            "Inputs": [
              {
                "InputName": "Outer",
                "OperatorType": "Route",
                "Variant": "Scatter",
                "Keyspace": {
                  "Name": "main",
                  "Sharded": true
                },
                "FieldQuery": "select o_orderpriority, count(*) as order_count, o_orderkey, weight_string(o_orderpriority) from orders where 1 != 1 group by o_orderpriority, o_orderkey, weight_string(o_orderpriority)",
                "OrderBy": "(0|3) ASC",
                "Query": "select o_orderpriority, count(*) as order_count, o_orderkey, weight_string(o_orderpriority) from orders where o_orderdate >= date('1993-07-01') and o_orderdate < date('1993-07-01') + interval '3' month group by o_orderpriority, o_orderkey, weight_string(o_orderpriority) order by orders.o_orderpriority asc",
                "Table": "orders"
              },
              {
                "InputName": "SubQuery",
                "OperatorType": "VindexLookup",
                "Variant": "EqualUnique",
                "Keyspace": {
                  "Name": "main",
                  "Sharded": true
                },
                "Values": [
                  ":o_orderkey"
                ],
                "Vindex": "lineitem_map",
                "Inputs": [
                  {
                    "OperatorType": "Route",
                    "Variant": "IN",
                    "Keyspace": {
                      "Name": "main",
                      "Sharded": true
                    },
                    "FieldQuery": "select l_orderkey, l_linenumber from lineitem_map where 1 != 1",
                    "Query": "select l_orderkey, l_linenumber from lineitem_map where l_orderkey in ::__vals",
                    "Table": "lineitem_map",
                    "Values": [
                      "::l_orderkey"
                    ],
                    "Vindex": "md5"
                  },
                  {
                    "OperatorType": "Route",
                    "Variant": "ByDestination",
                    "Keyspace": {
                      "Name": "main",
                      "Sharded": true
                    },
                    "FieldQuery": "select 1 from lineitem where 1 != 1",
                    "Query": "select 1 from lineitem where l_orderkey = :o_orderkey and l_commitdate < l_receiptdate",
                    "Table": "lineitem"
                  }
                ]
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "main.lineitem",
        "main.orders"
      ]
    }
  },
  {
    "comment": "TPC-H query 5",
    "query": "select n_name, sum(l_extendedprice * (1 - l_discount)) as revenue from customer, orders, lineitem, supplier, nation, region where c_custkey = o_custkey and l_orderkey = o_orderkey and l_suppkey = s_suppkey and c_nationkey = s_nationkey and s_nationkey = n_nationkey and n_regionkey = r_regionkey and r_name = 'ASIA' and o_orderdate >= date('1994-01-01') and o_orderdate < date('1994-01-01') + interval '1' year group by n_name order by revenue desc",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select n_name, sum(l_extendedprice * (1 - l_discount)) as revenue from customer, orders, lineitem, supplier, nation, region where c_custkey = o_custkey and l_orderkey = o_orderkey and l_suppkey = s_suppkey and c_nationkey = s_nationkey and s_nationkey = n_nationkey and n_regionkey = r_regionkey and r_name = 'ASIA' and o_orderdate >= date('1994-01-01') and o_orderdate < date('1994-01-01') + interval '1' year group by n_name order by revenue desc",
      "Instructions": {
        "OperatorType": "Sort",
        "Variant": "Memory",
        "OrderBy": "1 DESC COLLATE utf8mb4_0900_ai_ci",
        "ResultColumns": 2,
        "Inputs": [
          {
            "OperatorType": "Aggregate",
            "Variant": "Ordered",
            "Aggregates": "sum(1) AS revenue",
            "GroupBy": "(0|2)",
            "Inputs": [
              {
                "OperatorType": "Projection",
                "Expressions": [
                  ":2 as n_name",
                  "sum(l_extendedprice * (1 - l_discount)) * count(*) as revenue",
                  ":3 as weight_string(n_name)"
                ],
                "Inputs": [
                  {
                    "OperatorType": "Sort",
                    "Variant": "Memory",
                    "OrderBy": "(2|3) ASC",
                    "Inputs": [
                      {
                        "OperatorType": "Join",
                        "Variant": "Join",
                        "JoinColumnIndexes": "L:0,R:0,R:1,R:2",
                        "JoinVars": {
                          "s_nationkey": 1
                        },
                        "TableName": "orders_customer_lineitem_supplier_nation_region",
                        "Inputs": [
                          {
                            "OperatorType": "Projection",
                            "Expressions": [
                              "count(*) * sum(l_extendedprice * (1 - l_discount)) as revenue",
                              ":2 as s_nationkey"
                            ],
                            "Inputs": [
                              {
                                "OperatorType": "Join",
                                "Variant": "Join",
                                "JoinColumnIndexes": "R:0,L:0,R:1",
                                "JoinVars": {
                                  "c_nationkey": 2,
                                  "o_orderkey": 1
                                },
                                "TableName": "orders_customer_lineitem_supplier",
                                "Inputs": [
                                  {
                                    "OperatorType": "Projection",
                                    "Expressions": [
                                      "count(*) * count(*) as count(*)",
                                      ":2 as o_orderkey",
                                      ":3 as c_nationkey"
                                    ],
                                    "Inputs": [
                                      {
                                        "OperatorType": "Join",
                                        "Variant": "Join",
                                        "JoinColumnIndexes": "L:0,R:0,L:1,R:1",
                                        "JoinVars": {
                                          "o_custkey": 2
                                        },
                                        "TableName": "orders_customer",
                                        "Inputs": [
                                          {
                                            "OperatorType": "Route",
                                            "Variant": "Scatter",
                                            "Keyspace": {
                                              "Name": "main",
                                              "Sharded": true
                                            },
                                            "FieldQuery": "select count(*), o_orderkey, o_custkey from orders where 1 != 1 group by o_orderkey, o_custkey",
                                            "Query": "select count(*), o_orderkey, o_custkey from orders where o_orderdate >= date('1994-01-01') and o_orderdate < date('1994-01-01') + interval '1' year group by o_orderkey, o_custkey",
                                            "Table": "orders"
                                          },
                                          {
                                            "OperatorType": "Route",
                                            "Variant": "EqualUnique",
                                            "Keyspace": {
                                              "Name": "main",
                                              "Sharded": true
                                            },
                                            "FieldQuery": "select count(*), c_nationkey from customer where 1 != 1 group by c_nationkey",
                                            "Query": "select count(*), c_nationkey from customer where c_custkey = :o_custkey group by c_nationkey",
                                            "Table": "customer",
                                            "Values": [
                                              ":o_custkey"
                                            ],
                                            "Vindex": "hash"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "OperatorType": "Projection",
                                    "Expressions": [
                                      "sum(l_extendedprice * (1 - l_discount)) * count(*) as revenue",
                                      ":2 as s_nationkey"
                                    ],
                                    "Inputs": [
                                      {
                                        "OperatorType": "Join",
                                        "Variant": "Join",
                                        "JoinColumnIndexes": "L:0,R:0,R:1",
                                        "JoinVars": {
                                          "l_suppkey": 1
                                        },
                                        "TableName": "lineitem_supplier",
                                        "Inputs": [
                                          {
                                            "OperatorType": "VindexLookup",
                                            "Variant": "EqualUnique",
                                            "Keyspace": {
                                              "Name": "main",
                                              "Sharded": true
                                            },
                                            "Values": [
                                              ":o_orderkey"
                                            ],
                                            "Vindex": "lineitem_map",
                                            "Inputs": [
                                              {
                                                "OperatorType": "Route",
                                                "Variant": "IN",
                                                "Keyspace": {
                                                  "Name": "main",
                                                  "Sharded": true
                                                },
                                                "FieldQuery": "select l_orderkey, l_linenumber from lineitem_map where 1 != 1",
                                                "Query": "select l_orderkey, l_linenumber from lineitem_map where l_orderkey in ::__vals",
                                                "Table": "lineitem_map",
                                                "Values": [
                                                  "::l_orderkey"
                                                ],
                                                "Vindex": "md5"
                                              },
                                              {
                                                "OperatorType": "Route",
                                                "Variant": "ByDestination",
                                                "Keyspace": {
                                                  "Name": "main",
                                                  "Sharded": true
                                                },
                                                "FieldQuery": "select sum(l_extendedprice * (1 - l_discount)) as revenue, l_suppkey from lineitem where 1 != 1 group by l_suppkey",
                                                "Query": "select sum(l_extendedprice * (1 - l_discount)) as revenue, l_suppkey from lineitem where l_orderkey = :o_orderkey group by l_suppkey",
                                                "Table": "lineitem"
                                              }
                                            ]
                                          },
                                          {
                                            "OperatorType": "Route",
                                            "Variant": "EqualUnique",
                                            "Keyspace": {
                                              "Name": "main",
                                              "Sharded": true
                                            },
                                            "FieldQuery": "select count(*), s_nationkey from supplier where 1 != 1 group by s_nationkey",
                                            "Query": "select count(*), s_nationkey from supplier where s_nationkey = :c_nationkey and s_suppkey = :l_suppkey group by s_nationkey",
                                            "Table": "supplier",
                                            "Values": [
                                              ":l_suppkey"
                                            ],
                                            "Vindex": "hash"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "OperatorType": "Projection",
                            "Expressions": [
                              "count(*) * count(*) as count(*)",
                              ":2 as n_name",
                              ":3 as weight_string(n_name)"
                            ],
                            "Inputs": [
                              {
                                "OperatorType": "Join",
                                "Variant": "Join",
                                "JoinColumnIndexes": "L:0,R:0,L:1,L:3",
                                "JoinVars": {
                                  "n_regionkey": 2
                                },
                                "TableName": "nation_region",
                                "Inputs": [
                                  {
                                    "OperatorType": "Route",
                                    "Variant": "EqualUnique",
                                    "Keyspace": {
                                      "Name": "main",
                                      "Sharded": true
                                    },
                                    "FieldQuery": "select count(*), n_name, n_regionkey, weight_string(n_name) from nation where 1 != 1 group by n_name, n_regionkey, weight_string(n_name)",
                                    "Query": "select count(*), n_name, n_regionkey, weight_string(n_name) from nation where n_nationkey = :s_nationkey group by n_name, n_regionkey, weight_string(n_name)",
                                    "Table": "nation",
                                    "Values": [
                                      ":s_nationkey"
                                    ],
                                    "Vindex": "hash"
                                  },
                                  {
                                    "OperatorType": "Route",
                                    "Variant": "EqualUnique",
                                    "Keyspace": {
                                      "Name": "main",
                                      "Sharded": true
                                    },
                                    "FieldQuery": "select count(*) from region where 1 != 1 group by .0",
                                    "Query": "select count(*) from region where r_name = 'ASIA' and r_regionkey = :n_regionkey group by .0",
                                    "Table": "region",
                                    "Values": [
                                      ":n_regionkey"
                                    ],
                                    "Vindex": "hash"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "main.customer",
        "main.lineitem",
        "main.nation",
        "main.orders",
        "main.region",
        "main.supplier"
      ]
    }
  },
  {
    "comment": "TPC-H query 6",
    "query": "select sum(l_extendedprice * l_discount) as revenue from lineitem where l_shipdate >= date('1994-01-01') and l_shipdate < date('1994-01-01') + interval '1' year and l_discount between 0.06 - 0.01 and 0.06 + 0.01 and l_quantity < 24",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select sum(l_extendedprice * l_discount) as revenue from lineitem where l_shipdate >= date('1994-01-01') and l_shipdate < date('1994-01-01') + interval '1' year and l_discount between 0.06 - 0.01 and 0.06 + 0.01 and l_quantity < 24",
      "Instructions": {
        "OperatorType": "Aggregate",
        "Variant": "Scalar",
        "Aggregates": "sum(0) AS revenue",
        "Inputs": [
          {
            "OperatorType": "Route",
            "Variant": "Scatter",
            "Keyspace": {
              "Name": "main",
              "Sharded": true
            },
            "FieldQuery": "select sum(l_extendedprice * l_discount) as revenue from lineitem where 1 != 1",
            "Query": "select sum(l_extendedprice * l_discount) as revenue from lineitem where l_shipdate >= date('1994-01-01') and l_shipdate < date('1994-01-01') + interval '1' year and l_discount between 0.06 - 0.01 and 0.06 + 0.01 and l_quantity < 24",
            "Table": "lineitem"
          }
        ]
      },
      "TablesUsed": [
        "main.lineitem"
      ]
    }
  },
  {
    "comment": "TPC-H query 7",
    "query": "select supp_nation, cust_nation, l_year, sum(volume) as revenue from (select n1.n_name as supp_nation, n2.n_name as cust_nation, extract(year from l_shipdate) as l_year, l_extendedprice * (1 - l_discount) as volume from supplier, lineitem, orders, customer, nation n1, nation n2 where s_suppkey = l_suppkey and o_orderkey = l_orderkey and c_custkey = o_custkey and s_nationkey = n1.n_nationkey and c_nationkey = n2.n_nationkey and ((n1.n_name = 'FRANCE' and n2.n_name = 'GERMANY') or (n1.n_name = 'GERMANY' and n2.n_name = 'FRANCE')) and l_shipdate between date('1995-01-01') and date('1996-12-31')) as shipping group by supp_nation, cust_nation, l_year order by supp_nation, cust_nation, l_year",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select supp_nation, cust_nation, l_year, sum(volume) as revenue from (select n1.n_name as supp_nation, n2.n_name as cust_nation, extract(year from l_shipdate) as l_year, l_extendedprice * (1 - l_discount) as volume from supplier, lineitem, orders, customer, nation n1, nation n2 where s_suppkey = l_suppkey and o_orderkey = l_orderkey and c_custkey = o_custkey and s_nationkey = n1.n_nationkey and c_nationkey = n2.n_nationkey and ((n1.n_name = 'FRANCE' and n2.n_name = 'GERMANY') or (n1.n_name = 'GERMANY' and n2.n_name = 'FRANCE')) and l_shipdate between date('1995-01-01') and date('1996-12-31')) as shipping group by supp_nation, cust_nation, l_year order by supp_nation, cust_nation, l_year",
      "Instructions": {
        "OperatorType": "Aggregate",
        "Variant": "Ordered",
        "Aggregates": "sum(3) AS revenue",
        "GroupBy": "(0|4), (1|5), (2|6)",
        "ResultColumns": 4,
        "Inputs": [
          {
            "OperatorType": "Projection",
            "Expressions": [
              ":2 as supp_nation",
              ":3 as cust_nation",
              ":4 as l_year",
              "sum(volume) * count(*) as revenue",
              ":5 as weight_string(supp_nation)",
              ":6 as weight_string(cust_nation)",
              ":7 as weight_string(l_year)"
            ],
            "Inputs": [
              {
                "OperatorType": "Join",
                "Variant": "Join",
                "JoinColumnIndexes": "L:0,R:0,L:1,R:1,L:2,L:4,R:2,L:5",
                "JoinVars": {
                  "n1_n_name": 1,
                  "o_custkey": 3
                },
                "TableName": "lineitem_orders_supplier_nation_customer_nation",
                "Inputs": [
                  {
                    "OperatorType": "Projection",
                    "Expressions": [
                      "sum(volume) * count(*) as revenue",
                      ":2 as supp_nation",
                      ":3 as l_year",
                      ":4 as o_custkey",
                      ":5 as weight_string(supp_nation)",
                      ":6 as weight_string(l_year)"
                    ],
                    "Inputs": [
                      {
                        "OperatorType": "Join",
                        "Variant": "Join",
                        "JoinColumnIndexes": "L:0,R:0,R:1,L:1,L:2,R:2,L:4",
                        "JoinVars": {
                          "l_suppkey": 3
                        },
                        "TableName": "lineitem_orders_supplier_nation",
                        "Inputs": [
                          {
                            "OperatorType": "Projection",
                            "Expressions": [
                              "sum(volume) * count(*) as revenue",
                              ":2 as l_year",
                              ":3 as o_custkey",
                              ":4 as l_suppkey",
                              ":5 as weight_string(l_year)"
                            ],
                            "Inputs": [
                              {
                                "OperatorType": "Join",
                                "Variant": "Join",
                                "JoinColumnIndexes": "L:0,R:0,L:1,R:1,L:2,L:4",
                                "JoinVars": {
                                  "l_orderkey": 3
                                },
                                "TableName": "lineitem_orders",
                                "Inputs": [
                                  {
                                    "OperatorType": "Route",
                                    "Variant": "Scatter",
                                    "Keyspace": {
                                      "Name": "main",
                                      "Sharded": true
                                    },
                                    "FieldQuery": "select sum(volume) as revenue, l_year, shipping.l_suppkey, shipping.l_orderkey, weight_string(l_year), shipping.supp_nation, weight_string(shipping.supp_nation), shipping.cust_nation, weight_string(shipping.cust_nation) from (select extract(year from l_shipdate) as l_year, l_extendedprice * (1 - l_discount) as volume, l_suppkey as l_suppkey, l_orderkey as l_orderkey from lineitem where 1 != 1) as shipping where 1 != 1 group by l_year, shipping.l_suppkey, shipping.l_orderkey, weight_string(l_year)",
                                    "OrderBy": "(5|6) ASC, (7|8) ASC, (1|4) ASC",
                                    "Query": "select sum(volume) as revenue, l_year, shipping.l_suppkey, shipping.l_orderkey, weight_string(l_year), shipping.supp_nation, weight_string(shipping.supp_nation), shipping.cust_nation, weight_string(shipping.cust_nation) from (select extract(year from l_shipdate) as l_year, l_extendedprice * (1 - l_discount) as volume, l_suppkey as l_suppkey, l_orderkey as l_orderkey from lineitem where l_shipdate between date('1995-01-01') and date('1996-12-31')) as shipping group by l_year, shipping.l_suppkey, shipping.l_orderkey, weight_string(l_year) order by shipping.supp_nation asc, shipping.cust_nation asc, shipping.l_year asc",
                                    "Table": "lineitem"
                                  },
                                  {
                                    "OperatorType": "Route",
                                    "Variant": "EqualUnique",
                                    "Keyspace": {
                                      "Name": "main",
                                      "Sharded": true
                                    },
                                    "FieldQuery": "select count(*), shipping.o_custkey from (select o_custkey as o_custkey from orders where 1 != 1) as shipping where 1 != 1 group by shipping.o_custkey",
                                    "Query": "select count(*), shipping.o_custkey from (select o_custkey as o_custkey from orders where o_orderkey = :l_orderkey) as shipping group by shipping.o_custkey",
                                    "Table": "orders",
                                    "Values": [
                                      ":l_orderkey"
                                    ],
                                    "Vindex": "hash"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "OperatorType": "Projection",
                            "Expressions": [
                              "count(*) * count(*) as count(*)",
                              ":2 as supp_nation",
                              ":3 as weight_string(supp_nation)"
                            ],
                            "Inputs": [
                              {
                                "OperatorType": "Join",
                                "Variant": "Join",
                                "JoinColumnIndexes": "L:0,R:0,R:1,R:2",
                                "JoinVars": {
                                  "s_nationkey": 1
                                },
                                "TableName": "supplier_nation",
                                "Inputs": [
                                  {
                                    "OperatorType": "Route",
                                    "Variant": "EqualUnique",
                                    "Keyspace": {
                                      "Name": "main",
                                      "Sharded": true
                                    },
                                    "FieldQuery": "select count(*), shipping.s_nationkey from (select s_nationkey as s_nationkey from supplier where 1 != 1) as shipping where 1 != 1 group by shipping.s_nationkey",
                                    "Query": "select count(*), shipping.s_nationkey from (select s_nationkey as s_nationkey from supplier where s_suppkey = :l_suppkey) as shipping group by shipping.s_nationkey",
                                    "Table": "supplier",
                                    "Values": [
                                      ":l_suppkey"
                                    ],
                                    "Vindex": "hash"
                                  },
                                  {
                                    "OperatorType": "Route",
                                    "Variant": "EqualUnique",
                                    "Keyspace": {
                                      "Name": "main",
                                      "Sharded": true
                                    },
                                    "FieldQuery": "select count(*), supp_nation, weight_string(supp_nation) from (select n1.n_name as supp_nation, n1.n_name = 'FRANCE' as `n1.n_name = 'FRANCE'`, n1.n_name = 'GERMANY' as `n1.n_name = 'GERMANY'` from nation as n1 where 1 != 1) as shipping where 1 != 1 group by supp_nation, weight_string(supp_nation)",
                                    "Query": "select count(*), supp_nation, weight_string(supp_nation) from (select n1.n_name as supp_nation, n1.n_name = 'FRANCE' as `n1.n_name = 'FRANCE'`, n1.n_name = 'GERMANY' as `n1.n_name = 'GERMANY'` from nation as n1 where n1.n_nationkey = :s_nationkey) as shipping group by supp_nation, weight_string(supp_nation)",
                                    "Table": "nation",
                                    "Values": [
                                      ":s_nationkey"
                                    ],
                                    "Vindex": "hash"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "OperatorType": "Projection",
                    "Expressions": [
                      "count(*) * count(*) as count(*)",
                      ":2 as cust_nation",
                      ":3 as weight_string(cust_nation)"
                    ],
                    "Inputs": [
                      {
                        "OperatorType": "Join",
                        "Variant": "Join",
                        "JoinColumnIndexes": "L:0,R:0,R:1,R:2",
                        "JoinVars": {
                          "c_nationkey": 1
                        },
                        "TableName": "customer_nation",
                        "Inputs": [
                          {
                            "OperatorType": "Route",
                            "Variant": "EqualUnique",
                            "Keyspace": {
                              "Name": "main",
                              "Sharded": true
                            },
                            "FieldQuery": "select count(*), shipping.c_nationkey from (select c_nationkey as c_nationkey from customer where 1 != 1) as shipping where 1 != 1 group by shipping.c_nationkey",
                            "Query": "select count(*), shipping.c_nationkey from (select c_nationkey as c_nationkey from customer where c_custkey = :o_custkey) as shipping group by shipping.c_nationkey",
                            "Table": "customer",
                            "Values": [
                              ":o_custkey"
                            ],
                            "Vindex": "hash"
                          },
                          {
                            "OperatorType": "Route",
                            "Variant": "EqualUnique",
                            "Keyspace": {
                              "Name": "main",
                              "Sharded": true
                            },
                            "FieldQuery": "select count(*), cust_nation, weight_string(cust_nation) from (select n2.n_name as cust_nation from nation as n2 where 1 != 1) as shipping where 1 != 1 group by cust_nation, weight_string(cust_nation)",
                            "Query": "select count(*), cust_nation, weight_string(cust_nation) from (select n2.n_name as cust_nation from nation as n2 where (:n1_n_name = 'FRANCE' and n2.n_name = 'GERMANY' or :n1_n_name = 'GERMANY' and n2.n_name = 'FRANCE') and n2.n_nationkey = :c_nationkey) as shipping group by cust_nation, weight_string(cust_nation)",
                            "Table": "nation",
                            "Values": [
                              ":c_nationkey"
                            ],
                            "Vindex": "hash"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "main.customer",
        "main.lineitem",
        "main.nation",
        "main.orders",
        "main.supplier"
      ]
    }
  },
  {
    "comment": "TPC-H query 8",
    "query": "select o_year, sum(case when nation = 'BRAZIL' then volume else 0 end) / sum(volume) as mkt_share from ( select extract(year from o_orderdate) as o_year, l_extendedprice * (1 - l_discount) as volume, n2.n_name as nation from part, supplier, lineitem, orders, customer, nation n1, nation n2, region where p_partkey = l_partkey and s_suppkey = l_suppkey and l_orderkey = o_orderkey and o_custkey = c_custkey and c_nationkey = n1.n_nationkey and n1.n_regionkey = r_regionkey and r_name = 'AMERICA' and s_nationkey = n2.n_nationkey and o_orderdate between date '1995-01-01' and date('1996-12-31') and p_type = 'ECONOMY ANODIZED STEEL' ) as all_nations group by o_year order by o_year",
    "plan": "VT13002: unexpected AST struct for query: o_year"
  },
  {
    "comment": "TPC-H query 9",
    "query": "select nation, o_year, sum(amount) as sum_profit from ( select n_name as nation, extract(year from o_orderdate) as o_year, l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount from part, supplier, lineitem, partsupp, orders, nation where s_suppkey = l_suppkey and ps_suppkey = l_suppkey and ps_partkey = l_partkey and p_partkey = l_partkey and o_orderkey = l_orderkey and s_nationkey = n_nationkey and p_name like '%green%' ) as profit group by nation, o_year order by nation, o_year desc",
    "plan": "VT13002: unexpected AST struct for query: nation"
  },
  {
    "comment": "TPC-H query 10",
    "query": "select c_custkey, c_name, sum(l_extendedprice * (1 - l_discount)) as revenue, c_acctbal, n_name, c_address, c_phone, c_comment from customer, orders, lineitem, nation where c_custkey = o_custkey and l_orderkey = o_orderkey and o_orderdate >= date('1993-10-01') and o_orderdate < date('1993-10-01') + interval '3' month and l_returnflag = 'R' and c_nationkey = n_nationkey group by c_custkey, c_name, c_acctbal, c_phone, n_name, c_address, c_comment order by revenue desc limit 20",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select c_custkey, c_name, sum(l_extendedprice * (1 - l_discount)) as revenue, c_acctbal, n_name, c_address, c_phone, c_comment from customer, orders, lineitem, nation where c_custkey = o_custkey and l_orderkey = o_orderkey and o_orderdate >= date('1993-10-01') and o_orderdate < date('1993-10-01') + interval '3' month and l_returnflag = 'R' and c_nationkey = n_nationkey group by c_custkey, c_name, c_acctbal, c_phone, n_name, c_address, c_comment order by revenue desc limit 20",
      "Instructions": {
        "OperatorType": "Limit",
        "Count": "20",
        "Inputs": [
          {
            "OperatorType": "Sort",
            "Variant": "Memory",
            "OrderBy": "2 DESC COLLATE utf8mb4_0900_ai_ci",
            "ResultColumns": 8,
            "Inputs": [
              {
                "OperatorType": "Aggregate",
                "Variant": "Ordered",
                "Aggregates": "sum(2) AS revenue",
                "GroupBy": "(0|8), (1|9), (3|10), (6|11), (4|12), (5|13), (7|14)",
                "Inputs": [
                  {
                    "OperatorType": "Projection",
                    "Expressions": [
                      ":2 as c_custkey",
                      ":3 as c_name",
                      "sum(l_extendedprice * (1 - l_discount)) * count(*) as revenue",
                      ":4 as c_acctbal",
                      ":6 as n_name",
                      ":7 as c_address",
                      ":5 as c_phone",
                      ":8 as c_comment",
                      ":9 as weight_string(c_custkey)",
                      ":10 as weight_string(c_name)",
                      ":11 as weight_string(c_acctbal)",
                      ":12 as weight_string(c_phone)",
                      ":13 as weight_string(n_name)",
                      ":14 as weight_string(c_address)",
                      ":15 as weight_string(c_comment)"
                    ],
                    "Inputs": [
                      {
                        "OperatorType": "Sort",
                        "Variant": "Memory",
                        "OrderBy": "(2|9) ASC, (3|10) ASC, (4|11) ASC, (5|12) ASC, (6|13) ASC, (7|14) ASC, (8|15) ASC",
                        "Inputs": [
                          {
                            "OperatorType": "Join",
                            "Variant": "Join",
                            "JoinColumnIndexes": "L:0,R:0,R:1,R:2,R:3,R:4,R:5,R:6,R:7,R:8,R:9,R:10,R:11,R:12,R:13,R:14",
                            "JoinVars": {
                              "o_custkey": 1
                            },
                            "TableName": "orders_lineitem_customer_nation",
                            "Inputs": [
                              {
                                "OperatorType": "Projection",
                                "Expressions": [
                                  "count(*) * sum(l_extendedprice * (1 - l_discount)) as revenue",
                                  ":2 as o_custkey"
                                ],
                                "Inputs": [
                                  {
                                    "OperatorType": "Join",
                                    "Variant": "Join",
                                    "JoinColumnIndexes": "R:0,L:0,L:1",
                                    "JoinVars": {
                                      "o_orderkey": 2
                                    },
                                    "TableName": "orders_lineitem",
                                    "Inputs": [
                                      {
                                        "OperatorType": "Route",
                                        "Variant": "Scatter",
                                        "Keyspace": {
                                          "Name": "main",
                                          "Sharded": true
                                        },
                                        "FieldQuery": "select count(*), o_custkey, o_orderkey from orders where 1 != 1 group by o_custkey, o_orderkey",
                                        "Query": "select count(*), o_custkey, o_orderkey from orders where o_orderdate >= date('1993-10-01') and o_orderdate < date('1993-10-01') + interval '3' month group by o_custkey, o_orderkey",
                                        "Table": "orders"
                                      },
                                      {
                                        "OperatorType": "VindexLookup",
                                        "Variant": "EqualUnique",
                                        "Keyspace": {
                                          "Name": "main",
                                          "Sharded": true
                                        },
                                        "Values": [
                                          ":o_orderkey"
                                        ],
                                        "Vindex": "lineitem_map",
                                        "Inputs": [
                                          {
                                            "OperatorType": "Route",
                                            "Variant": "IN",
                                            "Keyspace": {
                                              "Name": "main",
                                              "Sharded": true
                                            },
                                            "FieldQuery": "select l_orderkey, l_linenumber from lineitem_map where 1 != 1",
                                            "Query": "select l_orderkey, l_linenumber from lineitem_map where l_orderkey in ::__vals",
                                            "Table": "lineitem_map",
                                            "Values": [
                                              "::l_orderkey"
                                            ],
                                            "Vindex": "md5"
                                          },
                                          {
                                            "OperatorType": "Route",
                                            "Variant": "ByDestination",
                                            "Keyspace": {
                                              "Name": "main",
                                              "Sharded": true
                                            },
                                            "FieldQuery": "select sum(l_extendedprice * (1 - l_discount)) as revenue from lineitem where 1 != 1 group by .0",
                                            "Query": "select sum(l_extendedprice * (1 - l_discount)) as revenue from lineitem where l_returnflag = 'R' and l_orderkey = :o_orderkey group by .0",
                                            "Table": "lineitem"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "OperatorType": "Projection",
                                "Expressions": [
                                  "count(*) * count(*) as count(*)",
                                  ":2 as c_custkey",
                                  ":3 as c_name",
                                  ":4 as c_acctbal",
                                  ":5 as c_phone",
                                  ":6 as n_name",
                                  ":7 as c_address",
                                  ":8 as c_comment",
                                  ":9 as weight_string(c_custkey)",
                                  ":10 as weight_string(c_name)",
                                  ":11 as weight_string(c_acctbal)",
                                  ":12 as weight_string(c_phone)",
                                  ":13 as weight_string(n_name)",
                                  ":14 as weight_string(c_address)",
                                  ":15 as weight_string(c_comment)"
                                ],
                                "Inputs": [
                                  {
                                    "OperatorType": "Join",
                                    "Variant": "Join",
                                    "JoinColumnIndexes": "L:0,R:0,L:1,L:2,L:3,L:4,R:1,L:5,L:6,L:8,L:9,L:10,L:11,R:2,L:12,L:13",
                                    "JoinVars": {
                                      "c_nationkey": 7
                                    },
                                    "TableName": "customer_nation",
                                    "Inputs": [
                                      {
                                        "OperatorType": "Route",
                                        "Variant": "EqualUnique",
                                        "Keyspace": {
                                          "Name": "main",
                                          "Sharded": true
                                        },
                                        "FieldQuery": "select count(*), c_custkey, c_name, c_acctbal, c_phone, c_address, c_comment, c_nationkey, weight_string(c_custkey), weight_string(c_name), weight_string(c_acctbal), weight_string(c_phone), weight_string(c_address), weight_string(c_comment) from customer where 1 != 1 group by c_custkey, c_name, c_acctbal, c_phone, c_address, c_comment, c_nationkey, weight_string(c_custkey), weight_string(c_name), weight_string(c_acctbal), weight_string(c_phone), weight_string(c_address), weight_string(c_comment)",
                                        "Query": "select count(*), c_custkey, c_name, c_acctbal, c_phone, c_address, c_comment, c_nationkey, weight_string(c_custkey), weight_string(c_name), weight_string(c_acctbal), weight_string(c_phone), weight_string(c_address), weight_string(c_comment) from customer where c_custkey = :o_custkey group by c_custkey, c_name, c_acctbal, c_phone, c_address, c_comment, c_nationkey, weight_string(c_custkey), weight_string(c_name), weight_string(c_acctbal), weight_string(c_phone), weight_string(c_address), weight_string(c_comment)",
                                        "Table": "customer",
                                        "Values": [
                                          ":o_custkey"
                                        ],
                                        "Vindex": "hash"
                                      },
                                      {
                                        "OperatorType": "Route",
                                        "Variant": "EqualUnique",
                                        "Keyspace": {
                                          "Name": "main",
                                          "Sharded": true
                                        },
                                        "FieldQuery": "select count(*), n_name, weight_string(n_name) from nation where 1 != 1 group by n_name, weight_string(n_name)",
                                        "Query": "select count(*), n_name, weight_string(n_name) from nation where n_nationkey = :c_nationkey group by n_name, weight_string(n_name)",
                                        "Table": "nation",
                                        "Values": [
                                          ":c_nationkey"
                                        ],
                                        "Vindex": "hash"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "main.customer",
        "main.lineitem",
        "main.nation",
        "main.orders"
      ]
    }
  },
  {
    "comment": "TPC-H query 11",
    "query": "select ps_partkey, sum(ps_supplycost * ps_availqty) as value from partsupp, supplier, nation where ps_suppkey = s_suppkey and s_nationkey = n_nationkey and n_name = 'GERMANY' group by ps_partkey  having sum(ps_supplycost * ps_availqty) > ( select sum(ps_supplycost * ps_availqty) * 0.00001000000 from partsupp, supplier, nation where ps_suppkey = s_suppkey and s_nationkey = n_nationkey and n_name = 'GERMANY' ) order by value desc",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select ps_partkey, sum(ps_supplycost * ps_availqty) as value from partsupp, supplier, nation where ps_suppkey = s_suppkey and s_nationkey = n_nationkey and n_name = 'GERMANY' group by ps_partkey  having sum(ps_supplycost * ps_availqty) > ( select sum(ps_supplycost * ps_availqty) * 0.00001000000 from partsupp, supplier, nation where ps_suppkey = s_suppkey and s_nationkey = n_nationkey and n_name = 'GERMANY' ) order by value desc",
      "Instructions": {
        "OperatorType": "UncorrelatedSubquery",
        "Variant": "PulloutValue",
        "PulloutVars": [
          "__sq1"
        ],
        "Inputs": [
          {
            "InputName": "SubQuery",
            "OperatorType": "Projection",
            "Expressions": [
              "sum(ps_supplycost * ps_availqty) * 0.00001000000 as sum(ps_supplycost * ps_availqty) * 0.00001000000"
            ],
            "Inputs": [
              {
                "OperatorType": "Aggregate",
                "Variant": "Scalar",
                "Aggregates": "sum(0) AS sum(ps_supplycost * ps_availqty), any_value(1)",
                "Inputs": [
                  {
                    "OperatorType": "Projection",
                    "Expressions": [
                      "sum(ps_supplycost * ps_availqty) * count(*) as sum(ps_supplycost * ps_availqty)",
                      ":2 as 0.00001000000"
                    ],
                    "Inputs": [
                      {
                        "OperatorType": "Join",
                        "Variant": "Join",
                        "JoinColumnIndexes": "L:0,R:0,L:1",
                        "JoinVars": {
                          "s_nationkey1": 2
                        },
                        "TableName": "partsupp_supplier_nation",
                        "Inputs": [
                          {
                            "OperatorType": "Projection",
                            "Expressions": [
                              "sum(ps_supplycost * ps_availqty) * count(*) as sum(ps_supplycost * ps_availqty)",
                              ":2 as 0.00001000000",
                              ":3 as s_nationkey"
                            ],
                            "Inputs": [
                              {
                                "OperatorType": "Join",
                                "Variant": "Join",
                                "JoinColumnIndexes": "L:0,R:0,L:1,R:1",
                                "JoinVars": {
                                  "ps_suppkey1": 2
                                },
                                "TableName": "partsupp_supplier",
                                "Inputs": [
                                  {
                                    "OperatorType": "Route",
                                    "Variant": "Scatter",
                                    "Keyspace": {
                                      "Name": "main",
                                      "Sharded": true
                                    },
                                    "FieldQuery": "select sum(ps_supplycost * ps_availqty), 0.00001000000, ps_suppkey from partsupp where 1 != 1 group by ps_suppkey",
                                    "Query": "select sum(ps_supplycost * ps_availqty), 0.00001000000, ps_suppkey from partsupp group by ps_suppkey",
                                    "Table": "partsupp"
                                  },
                                  {
                                    "OperatorType": "Route",
                                    "Variant": "EqualUnique",
                                    "Keyspace": {
                                      "Name": "main",
                                      "Sharded": true
                                    },
                                    "FieldQuery": "select count(*), s_nationkey from supplier where 1 != 1 group by s_nationkey",
                                    "Query": "select count(*), s_nationkey from supplier where s_suppkey = :ps_suppkey1 group by s_nationkey",
                                    "Table": "supplier",
                                    "Values": [
                                      ":ps_suppkey1"
                                    ],
                                    "Vindex": "hash"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "OperatorType": "Route",
                            "Variant": "EqualUnique",
                            "Keyspace": {
                              "Name": "main",
                              "Sharded": true
                            },
                            "FieldQuery": "select count(*) from nation where 1 != 1 group by .0",
                            "Query": "select count(*) from nation where n_name = 'GERMANY' and n_nationkey = :s_nationkey1 group by .0",
                            "Table": "nation",
                            "Values": [
                              ":s_nationkey1"
                            ],
                            "Vindex": "hash"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "InputName": "Outer",
            "OperatorType": "Filter",
            "Predicate": "sum(ps_supplycost * ps_availqty) > :__sq1",
            "ResultColumns": 2,
            "Inputs": [
              {
                "OperatorType": "Sort",
                "Variant": "Memory",
                "OrderBy": "1 DESC COLLATE utf8mb4_0900_ai_ci",
                "Inputs": [
                  {
                    "OperatorType": "Aggregate",
                    "Variant": "Ordered",
                    "Aggregates": "sum(1) AS value",
                    "GroupBy": "(0|2)",
                    "Inputs": [
                      {
                        "OperatorType": "Projection",
                        "Expressions": [
                          ":2 as ps_partkey",
                          "sum(ps_supplycost * ps_availqty) * count(*) as value",
                          ":3 as weight_string(ps_partkey)"
                        ],
                        "Inputs": [
                          {
                            "OperatorType": "Join",
                            "Variant": "Join",
                            "JoinColumnIndexes": "L:0,R:0,L:1,L:3",
                            "JoinVars": {
                              "s_nationkey": 2
                            },
                            "TableName": "partsupp_supplier_nation",
                            "Inputs": [
                              {
                                "OperatorType": "Projection",
                                "Expressions": [
                                  "sum(ps_supplycost * ps_availqty) * count(*) as value",
                                  ":2 as ps_partkey",
                                  ":3 as s_nationkey",
                                  ":4 as weight_string(ps_partkey)"
                                ],
                                "Inputs": [
                                  {
                                    "OperatorType": "Join",
                                    "Variant": "Join",
                                    "JoinColumnIndexes": "L:0,R:0,L:1,R:1,L:3",
                                    "JoinVars": {
                                      "ps_suppkey": 2
                                    },
                                    "TableName": "partsupp_supplier",
                                    "Inputs": [
                                      {
                                        "OperatorType": "Route",
                                        "Variant": "Scatter",
                                        "Keyspace": {
                                          "Name": "main",
                                          "Sharded": true
                                        },
                                        "FieldQuery": "select sum(ps_supplycost * ps_availqty) as value, ps_partkey, ps_suppkey, weight_string(ps_partkey) from partsupp where 1 != 1 group by ps_partkey, ps_suppkey, weight_string(ps_partkey)",
                                        "OrderBy": "(1|3) ASC",
                                        "Query": "select sum(ps_supplycost * ps_availqty) as value, ps_partkey, ps_suppkey, weight_string(ps_partkey) from partsupp group by ps_partkey, ps_suppkey, weight_string(ps_partkey) order by ps_partkey asc",
                                        "Table": "partsupp"
                                      },
                                      {
                                        "OperatorType": "Route",
                                        "Variant": "EqualUnique",
                                        "Keyspace": {
                                          "Name": "main",
                                          "Sharded": true
                                        },
                                        "FieldQuery": "select count(*), s_nationkey from supplier where 1 != 1 group by s_nationkey",
                                        "Query": "select count(*), s_nationkey from supplier where s_suppkey = :ps_suppkey group by s_nationkey",
                                        "Table": "supplier",
                                        "Values": [
                                          ":ps_suppkey"
                                        ],
                                        "Vindex": "hash"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "OperatorType": "Route",
                                "Variant": "EqualUnique",
                                "Keyspace": {
                                  "Name": "main",
                                  "Sharded": true
                                },
                                "FieldQuery": "select count(*) from nation where 1 != 1 group by .0",
                                "Query": "select count(*) from nation where n_name = 'GERMANY' and n_nationkey = :s_nationkey group by .0",
                                "Table": "nation",
                                "Values": [
                                  ":s_nationkey"
                                ],
                                "Vindex": "hash"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "main.nation",
        "main.partsupp",
        "main.supplier"
      ]
    }
  },
  {
    "comment": "TPC-H query 12",
    "query": "select l_shipmode, sum(case when o_orderpriority = '1-URGENT' or o_orderpriority = '2-HIGH' then 1 else 0 end) as high_line_count, sum(case when o_orderpriority <> '1-URGENT' and o_orderpriority <> '2-HIGH' then 1 else 0 end) as low_line_count from orders, lineitem where o_orderkey = l_orderkey and l_shipmode in ('MAIL', 'SHIP') and l_commitdate < l_receiptdate and l_shipdate < l_commitdate and l_receiptdate >= date('1994-01-01') and l_receiptdate < date('1994-01-01') + interval '1' year group by l_shipmode order by l_shipmode",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select l_shipmode, sum(case when o_orderpriority = '1-URGENT' or o_orderpriority = '2-HIGH' then 1 else 0 end) as high_line_count, sum(case when o_orderpriority <> '1-URGENT' and o_orderpriority <> '2-HIGH' then 1 else 0 end) as low_line_count from orders, lineitem where o_orderkey = l_orderkey and l_shipmode in ('MAIL', 'SHIP') and l_commitdate < l_receiptdate and l_shipdate < l_commitdate and l_receiptdate >= date('1994-01-01') and l_receiptdate < date('1994-01-01') + interval '1' year group by l_shipmode order by l_shipmode",
      "Instructions": {
        "OperatorType": "Aggregate",
        "Variant": "Ordered",
        "Aggregates": "sum(1) AS high_line_count, sum(2) AS low_line_count",
        "GroupBy": "(0|3)",
        "ResultColumns": 3,
        "Inputs": [
          {
            "OperatorType": "Sort",
            "Variant": "Memory",
            "OrderBy": "(0|3) ASC",
            "Inputs": [
              {
                "OperatorType": "Join",
                "Variant": "Join",
                "JoinColumnIndexes": "R:0,L:0,L:1,R:1",
                "JoinVars": {
                  "o_orderkey": 2
                },
                "TableName": "orders_lineitem",
                "Inputs": [
                  {
                    "OperatorType": "Route",
                    "Variant": "Scatter",
                    "Keyspace": {
                      "Name": "main",
                      "Sharded": true
                    },
                    "FieldQuery": "select case when o_orderpriority = '1-URGENT' or o_orderpriority = '2-HIGH' then 1 else 0 end, case when o_orderpriority != '1-URGENT' and o_orderpriority != '2-HIGH' then 1 else 0 end, o_orderkey from orders where 1 != 1",
                    "Query": "select case when o_orderpriority = '1-URGENT' or o_orderpriority = '2-HIGH' then 1 else 0 end, case when o_orderpriority != '1-URGENT' and o_orderpriority != '2-HIGH' then 1 else 0 end, o_orderkey from orders",
                    "Table": "orders"
                  },
                  {
                    "OperatorType": "VindexLookup",
                    "Variant": "EqualUnique",
                    "Keyspace": {
                      "Name": "main",
                      "Sharded": true
                    },
                    "Values": [
                      ":o_orderkey"
                    ],
                    "Vindex": "lineitem_map",
                    "Inputs": [
                      {
                        "OperatorType": "Route",
                        "Variant": "IN",
                        "Keyspace": {
                          "Name": "main",
                          "Sharded": true
                        },
                        "FieldQuery": "select l_orderkey, l_linenumber from lineitem_map where 1 != 1",
                        "Query": "select l_orderkey, l_linenumber from lineitem_map where l_orderkey in ::__vals",
                        "Table": "lineitem_map",
                        "Values": [
                          "::l_orderkey"
                        ],
                        "Vindex": "md5"
                      },
                      {
                        "OperatorType": "Route",
                        "Variant": "ByDestination",
                        "Keyspace": {
                          "Name": "main",
                          "Sharded": true
                        },
                        "FieldQuery": "select l_shipmode, weight_string(l_shipmode) from lineitem where 1 != 1",
                        "Query": "select l_shipmode, weight_string(l_shipmode) from lineitem where l_shipmode in ('MAIL', 'SHIP') and l_commitdate < l_receiptdate and l_shipdate < l_commitdate and l_receiptdate >= date('1994-01-01') and l_receiptdate < date('1994-01-01') + interval '1' year and l_orderkey = :o_orderkey",
                        "Table": "lineitem"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "main.lineitem",
        "main.orders"
      ]
    }
  },
  {
    "comment": "TPC-H query 13",
    "query": "select c_count, count(*) as custdist from ( select c_custkey, count(o_orderkey) from customer left outer join orders on c_custkey = o_custkey and o_comment not like '%special%requests%' group by c_custkey ) as c_orders(c_custkey, c_count) group by c_count order by custdist desc, c_count desc",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select c_count, count(*) as custdist from ( select c_custkey, count(o_orderkey) from customer left outer join orders on c_custkey = o_custkey and o_comment not like '%special%requests%' group by c_custkey ) as c_orders(c_custkey, c_count) group by c_count order by custdist desc, c_count desc",
      "Instructions": {
        "OperatorType": "Sort",
        "Variant": "Memory",
        "OrderBy": "1 DESC, 0 DESC",
        "Inputs": [
          {
            "OperatorType": "Aggregate",
            "Variant": "Ordered",
            "Aggregates": "count_star(1) AS custdist",
            "GroupBy": "0",
            "Inputs": [
              {
                "OperatorType": "SimpleProjection",
                "Columns": [
                  1,
                  3
                ],
                "Inputs": [
                  {
                    "OperatorType": "Aggregate",
                    "Variant": "Ordered",
                    "Aggregates": "sum_count(1) AS count(o_orderkey), any_value(3)",
                    "GroupBy": "(0|2)",
                    "Inputs": [
                      {
                        "OperatorType": "Projection",
                        "Expressions": [
                          ":2 as c_custkey",
                          "count(*) * count(o_orderkey) as count(o_orderkey)",
                          ":3 as weight_string(c_custkey)",
                          ":4 as 1"
                        ],
                        "Inputs": [
                          {
                            "OperatorType": "Sort",
                            "Variant": "Memory",
                            "OrderBy": "0 ASC, (2|3) ASC",
                            "Inputs": [
                              {
                                "OperatorType": "Join",
                                "Variant": "LeftJoin",
                                "JoinColumnIndexes": "R:0,L:0,L:1,L:2,L:3",
                                "JoinVars": {
                                  "c_custkey": 1
                                },
                                "TableName": "customer_orders",
                                "Inputs": [
                                  {
                                    "OperatorType": "Route",
                                    "Variant": "Scatter",
                                    "Keyspace": {
                                      "Name": "main",
                                      "Sharded": true
                                    },
                                    "FieldQuery": "select count(*), c_custkey, weight_string(c_custkey), 1 from customer where 1 != 1 group by c_custkey, weight_string(c_custkey)",
                                    "OrderBy": "(1|2) ASC",
                                    "Query": "select count(*), c_custkey, weight_string(c_custkey), 1 from customer group by c_custkey, weight_string(c_custkey) order by c_custkey asc",
                                    "Table": "customer"
                                  },
                                  {
                                    "OperatorType": "Route",
                                    "Variant": "Scatter",
                                    "Keyspace": {
                                      "Name": "main",
                                      "Sharded": true
                                    },
                                    "FieldQuery": "select count(o_orderkey) from orders where 1 != 1 group by .0",
                                    "Query": "select count(o_orderkey) from orders where o_comment not like '%special%requests%' and o_custkey = :c_custkey group by .0",
                                    "Table": "orders"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "main.customer",
        "main.orders"
      ]
    }
  },
  {
    "comment": "TPC-H query 14",
    "query": "select 100.00 * sum(case when p_type like 'PROMO%' then l_extendedprice * (1 - l_discount) else 0 end) /  sum(l_extendedprice * (1 - l_discount)) as promo_revenue from lineitem, part where l_partkey = p_partkey and l_shipdate >= date('1995-09-01') and l_shipdate < date('1995-09-01') + interval '1' month",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select 100.00 * sum(case when p_type like 'PROMO%' then l_extendedprice * (1 - l_discount) else 0 end) /  sum(l_extendedprice * (1 - l_discount)) as promo_revenue from lineitem, part where l_partkey = p_partkey and l_shipdate >= date('1995-09-01') and l_shipdate < date('1995-09-01') + interval '1' month",
      "Instructions": {
        "OperatorType": "Projection",
        "Expressions": [
          "100.00 * sum(case when p_type like 'PROMO%' then l_extendedprice * (1 - l_discount) else 0 end) / sum(l_extendedprice * (1 - l_discount)) as promo_revenue"
        ],
        "Inputs": [
          {
            "OperatorType": "Aggregate",
            "Variant": "Scalar",
            "Aggregates": "any_value(0), sum(1) AS sum(case when p_type like 'PROMO%' then l_extendedprice * (1 - l_discount) else 0 end), sum(2) AS sum(l_extendedprice * (1 - l_discount))",
            "Inputs": [
              {
                "OperatorType": "Join",
                "Variant": "Join",
                "JoinColumnIndexes": "L:0,R:0,L:3",
                "JoinVars": {
                  "l_discount": 2,
                  "l_extendedprice": 1,
                  "l_partkey": 4
                },
                "TableName": "lineitem_part",
                "Inputs": [
                  {
                    "OperatorType": "Route",
                    "Variant": "Scatter",
                    "Keyspace": {
                      "Name": "main",
                      "Sharded": true
                    },
                    "FieldQuery": "select 100.00, l_extendedprice, l_discount, l_extendedprice * (1 - l_discount), l_partkey from lineitem where 1 != 1",
                    "Query": "select 100.00, l_extendedprice, l_discount, l_extendedprice * (1 - l_discount), l_partkey from lineitem where l_shipdate >= date('1995-09-01') and l_shipdate < date('1995-09-01') + interval '1' month",
                    "Table": "lineitem"
                  },
                  {
                    "OperatorType": "Route",
                    "Variant": "EqualUnique",
                    "Keyspace": {
                      "Name": "main",
                      "Sharded": true
                    },
                    "FieldQuery": "select case when p_type like 'PROMO%' then :l_extendedprice * (1 - :l_discount) else 0 end from part where 1 != 1",
                    "Query": "select case when p_type like 'PROMO%' then :l_extendedprice * (1 - :l_discount) else 0 end from part where p_partkey = :l_partkey",
                    "Table": "part",
                    "Values": [
                      ":l_partkey"
                    ],
                    "Vindex": "hash"
                  }
                ]
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "main.lineitem",
        "main.part"
      ]
    }
  },
  {
    "comment": "TPC-H query 15",
    "query": "select s_suppkey, s_name, s_address, s_phone, total_revenue from supplier, revenue0 where s_suppkey = supplier_no and total_revenue = ( select max(total_revenue) from revenue0 ) order by s_suppkey",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select s_suppkey, s_name, s_address, s_phone, total_revenue from supplier, revenue0 where s_suppkey = supplier_no and total_revenue = ( select max(total_revenue) from revenue0 ) order by s_suppkey",
      "Instructions": {
        "OperatorType": "UncorrelatedSubquery",
        "Variant": "PulloutValue",
        "PulloutVars": [
          "__sq1"
        ],
        "Inputs": [
          {
            "InputName": "SubQuery",
            "OperatorType": "Aggregate",
            "Variant": "Scalar",
            "Aggregates": "max(0|1) AS max(total_revenue)",
            "Inputs": [
              {
                "OperatorType": "Route",
                "Variant": "Scatter",
                "Keyspace": {
                  "Name": "main",
                  "Sharded": true
                },
                "FieldQuery": "select max(total_revenue), weight_string(total_revenue) from revenue0 where 1 != 1 group by weight_string(total_revenue)",
                "Query": "select max(total_revenue), weight_string(total_revenue) from revenue0 group by weight_string(total_revenue)",
                "Table": "revenue0"
              }
            ]
          },
          {
            "InputName": "Outer",
            "OperatorType": "Route",
            "Variant": "Scatter",
            "Keyspace": {
              "Name": "main",
              "Sharded": true
            },
            "FieldQuery": "select s_suppkey, s_name, s_address, s_phone, total_revenue, weight_string(s_suppkey) from supplier, revenue0 where 1 != 1",
            "OrderBy": "(0|5) ASC",
            "Query": "select s_suppkey, s_name, s_address, s_phone, total_revenue, weight_string(s_suppkey) from supplier, revenue0 where s_suppkey = supplier_no and total_revenue = :__sq1 order by supplier.s_suppkey asc",
            "ResultColumns": 5,
            "Table": "revenue0, supplier"
          }
        ]
      },
      "TablesUsed": [
        "main.revenue0",
        "main.supplier"
      ]
    }
  },
  {
    "comment": "TPC-H query 16",
    "query": "select p_brand, p_type, p_size, count(distinct ps_suppkey) as supplier_cnt from partsupp, part where p_partkey = ps_partkey and p_brand <> 'Brand#45' and p_type not like 'MEDIUM POLISHED%' and p_size in (49, 14, 23, 45, 19, 3, 36, 9) and ps_suppkey not in ( select s_suppkey from supplier where s_comment like '%Customer%Complaints%' ) group by p_brand, p_type, p_size order by supplier_cnt desc, p_brand, p_type, p_size",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select p_brand, p_type, p_size, count(distinct ps_suppkey) as supplier_cnt from partsupp, part where p_partkey = ps_partkey and p_brand <> 'Brand#45' and p_type not like 'MEDIUM POLISHED%' and p_size in (49, 14, 23, 45, 19, 3, 36, 9) and ps_suppkey not in ( select s_suppkey from supplier where s_comment like '%Customer%Complaints%' ) group by p_brand, p_type, p_size order by supplier_cnt desc, p_brand, p_type, p_size",
      "Instructions": {
        "OperatorType": "Sort",
        "Variant": "Memory",
        "OrderBy": "3 DESC, (0|4) ASC, (1|5) ASC, (2|6) ASC",
        "ResultColumns": 4,
        "Inputs": [
          {
            "OperatorType": "Aggregate",
            "Variant": "Ordered",
            "Aggregates": "count_distinct(3|7) AS supplier_cnt",
            "GroupBy": "(0|4), (1|5), (2|6)",
            "Inputs": [
              {
                "OperatorType": "Sort",
                "Variant": "Memory",
                "OrderBy": "(0|4) ASC, (1|5) ASC, (2|6) ASC, (3|7) ASC",
                "Inputs": [
                  {
                    "OperatorType": "Join",
                    "Variant": "Join",
                    "JoinColumnIndexes": "R:0,R:1,R:2,L:0,R:3,R:4,R:5,L:1",
                    "JoinVars": {
                      "ps_partkey": 2,
                      "ps_suppkey": 0
                    },
                    "TableName": "partsupp_part",
                    "Inputs": [
                      {
                        "OperatorType": "UncorrelatedSubquery",
                        "Variant": "PulloutNotIn",
                        "PulloutVars": [
                          "__sq_has_values",
                          "__sq1"
                        ],
                        "Inputs": [
                          {
                            "InputName": "SubQuery",
                            "OperatorType": "Route",
                            "Variant": "Scatter",
                            "Keyspace": {
                              "Name": "main",
                              "Sharded": true
                            },
                            "FieldQuery": "select s_suppkey from supplier where 1 != 1",
                            "Query": "select s_suppkey from supplier where s_comment like '%Customer%Complaints%'",
                            "Table": "supplier"
                          },
                          {
                            "InputName": "Outer",
                            "OperatorType": "Route",
                            "Variant": "Scatter",
                            "Keyspace": {
                              "Name": "main",
                              "Sharded": true
                            },
                            "FieldQuery": "select ps_suppkey, weight_string(ps_suppkey), ps_partkey from partsupp where 1 != 1",
                            "Query": "select ps_suppkey, weight_string(ps_suppkey), ps_partkey from partsupp where not :__sq_has_values or ps_suppkey not in ::__sq1",
                            "Table": "partsupp"
                          }
                        ]
                      },
                      {
                        "OperatorType": "Route",
                        "Variant": "EqualUnique",
                        "Keyspace": {
                          "Name": "main",
                          "Sharded": true
                        },
                        "FieldQuery": "select p_brand, p_type, p_size, weight_string(p_brand), weight_string(p_type), weight_string(p_size) from part where 1 != 1",
                        "Query": "select p_brand, p_type, p_size, weight_string(p_brand), weight_string(p_type), weight_string(p_size) from part where p_brand != 'Brand#45' and p_type not like 'MEDIUM POLISHED%' and p_size in (49, 14, 23, 45, 19, 3, 36, 9) and p_partkey = :ps_partkey",
                        "Table": "part",
                        "Values": [
                          ":ps_partkey"
                        ],
                        "Vindex": "hash"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "main.part",
        "main.partsupp",
        "main.supplier"
      ]
    }
  },
  {
    "comment": "TPC-H query 17",
    "query": "select sum(l_extendedprice) / 7.0 as avg_yearly from lineitem, part where p_partkey = l_partkey and p_brand = 'Brand#23' and p_container = 'MED BOX' and l_quantity < ( select 0.2 * avg(l_quantity) from lineitem where l_partkey = p_partkey )",
    "plan": "VT12001: unsupported: correlated subquery is only supported for EXISTS"
  },
  {
    "comment": "TPC-H query 18",
    "query": "select c_name, c_custkey, o_orderkey, o_orderdate, o_totalprice, sum(l_quantity) from customer, orders, lineitem where o_orderkey in ( select l_orderkey from lineitem group by l_orderkey having sum(l_quantity) > 300 ) and c_custkey = o_custkey and o_orderkey = l_orderkey group by c_name, c_custkey, o_orderkey, o_orderdate, o_totalprice order by o_totalprice desc, o_orderdate limit 100",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select c_name, c_custkey, o_orderkey, o_orderdate, o_totalprice, sum(l_quantity) from customer, orders, lineitem where o_orderkey in ( select l_orderkey from lineitem group by l_orderkey having sum(l_quantity) > 300 ) and c_custkey = o_custkey and o_orderkey = l_orderkey group by c_name, c_custkey, o_orderkey, o_orderdate, o_totalprice order by o_totalprice desc, o_orderdate limit 100",
      "Instructions": {
        "OperatorType": "Limit",
        "Count": "100",
        "Inputs": [
          {
            "OperatorType": "Aggregate",
            "Variant": "Ordered",
            "Aggregates": "sum(5) AS sum(l_quantity)",
            "GroupBy": "(4|6), (3|7), (0|8), (1|9), (2|10)",
            "ResultColumns": 6,
            "Inputs": [
              {
                "OperatorType": "UncorrelatedSubquery",
                "Variant": "PulloutIn",
                "PulloutVars": [
                  "__sq_has_values",
                  "__sq1"
                ],
                "Inputs": [
                  {
                    "InputName": "SubQuery",
                    "OperatorType": "Route",
                    "Variant": "Scatter",
                    "Keyspace": {
                      "Name": "main",
                      "Sharded": true
                    },
                    "FieldQuery": "select l_orderkey from lineitem where 1 != 1 group by l_orderkey",
                    "Query": "select l_orderkey from lineitem group by l_orderkey having sum(l_quantity) > 300",
                    "Table": "lineitem"
                  },
                  {
                    "InputName": "Outer",
                    "OperatorType": "Filter",
                    "Predicate": ":__sq_has_values and o_orderkey in ::__sq1",
                    "Inputs": [
                      {
                        "OperatorType": "Aggregate",
                        "Variant": "Ordered",
                        "Aggregates": "sum(5) AS sum(l_quantity)",
                        "GroupBy": "(4|6), (3|7), (0|8), (1|9), (2|10)",
                        "Inputs": [
                          {
                            "OperatorType": "Sort",
                            "Variant": "Memory",
                            "OrderBy": "(4|6) DESC, (3|7) ASC, (0|8) ASC, (1|9) ASC, (2|10) ASC",
                            "Inputs": [
                              {
                                "OperatorType": "Join",
                                "Variant": "Join",
                                "JoinColumnIndexes": "R:0,R:1,R:2,R:3,R:4,L:0,R:5,R:6,R:7,R:8,R:9",
                                "JoinVars": {
                                  "l_orderkey": 1
                                },
                                "TableName": "lineitem_orders_customer",
                                "Inputs": [
                                  {
                                    "OperatorType": "Route",
                                    "Variant": "Scatter",
                                    "Keyspace": {
                                      "Name": "main",
                                      "Sharded": true
                                    },
                                    "FieldQuery": "select l_quantity, l_orderkey from lineitem where 1 != 1",
                                    "Query": "select l_quantity, l_orderkey from lineitem",
                                    "Table": "lineitem"
                                  },
                                  {
                                    "OperatorType": "Join",
                                    "Variant": "Join",
                                    "JoinColumnIndexes": "R:0,R:1,L:0,L:1,L:2,L:3,L:4,R:2,R:3,L:5",
                                    "JoinVars": {
                                      "o_custkey": 6
                                    },
                                    "TableName": "orders_customer",
                                    "Inputs": [
                                      {
                                        "OperatorType": "Route",
                                        "Variant": "EqualUnique",
                                        "Keyspace": {
                                          "Name": "main",
                                          "Sharded": true
                                        },
                                        "FieldQuery": "select o_orderkey, o_orderdate, o_totalprice, weight_string(o_totalprice), weight_string(o_orderdate), weight_string(o_orderkey), o_custkey from orders where 1 != 1",
                                        "Query": "select o_orderkey, o_orderdate, o_totalprice, weight_string(o_totalprice), weight_string(o_orderdate), weight_string(o_orderkey), o_custkey from orders where o_orderkey = :l_orderkey",
                                        "Table": "orders",
                                        "Values": [
                                          ":l_orderkey"
                                        ],
                                        "Vindex": "hash"
                                      },
                                      {
                                        "OperatorType": "Route",
                                        "Variant": "EqualUnique",
                                        "Keyspace": {
                                          "Name": "main",
                                          "Sharded": true
                                        },
                                        "FieldQuery": "select c_name, c_custkey, weight_string(c_name), weight_string(c_custkey) from customer where 1 != 1",
                                        "Query": "select c_name, c_custkey, weight_string(c_name), weight_string(c_custkey) from customer where c_custkey = :o_custkey",
                                        "Table": "customer",
                                        "Values": [
                                          ":o_custkey"
                                        ],
                                        "Vindex": "hash"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "main.customer",
        "main.lineitem",
        "main.orders"
      ]
    }
  },
  {
    "comment": "TPC-H query 19",
    "query": "select sum(l_extendedprice* (1 - l_discount)) as revenue from lineitem, part where ( p_partkey = l_partkey and p_brand = 'Brand#12' and p_container in ('SM CASE', 'SM BOX', 'SM PACK', 'SM PKG') and l_quantity >= 1 and l_quantity <= 1 + 10 and p_size between 1 and 5 and l_shipmode in ('AIR', 'AIR REG') and l_shipinstruct = 'DELIVER IN PERSON' ) or ( p_partkey = l_partkey and p_brand = 'Brand#23' and p_container in ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK') and l_quantity >= 10 and l_quantity <= 10 + 10 and p_size between 1 and 10 and l_shipmode in ('AIR', 'AIR REG') and l_shipinstruct = 'DELIVER IN PERSON' ) or ( p_partkey = l_partkey and p_brand = 'Brand#34' and p_container in ('LG CASE', 'LG BOX', 'LG PACK', 'LG PKG') and l_quantity >= 20 and l_quantity <= 20 + 10 and p_size between 1 and 15 and l_shipmode in ('AIR', 'AIR REG') and l_shipinstruct = 'DELIVER IN PERSON' )",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select sum(l_extendedprice* (1 - l_discount)) as revenue from lineitem, part where ( p_partkey = l_partkey and p_brand = 'Brand#12' and p_container in ('SM CASE', 'SM BOX', 'SM PACK', 'SM PKG') and l_quantity >= 1 and l_quantity <= 1 + 10 and p_size between 1 and 5 and l_shipmode in ('AIR', 'AIR REG') and l_shipinstruct = 'DELIVER IN PERSON' ) or ( p_partkey = l_partkey and p_brand = 'Brand#23' and p_container in ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK') and l_quantity >= 10 and l_quantity <= 10 + 10 and p_size between 1 and 10 and l_shipmode in ('AIR', 'AIR REG') and l_shipinstruct = 'DELIVER IN PERSON' ) or ( p_partkey = l_partkey and p_brand = 'Brand#34' and p_container in ('LG CASE', 'LG BOX', 'LG PACK', 'LG PKG') and l_quantity >= 20 and l_quantity <= 20 + 10 and p_size between 1 and 15 and l_shipmode in ('AIR', 'AIR REG') and l_shipinstruct = 'DELIVER IN PERSON' )",
      "Instructions": {
        "OperatorType": "Aggregate",
        "Variant": "Scalar",
        "Aggregates": "sum(0) AS revenue",
        "Inputs": [
          {
            "OperatorType": "Projection",
            "Expressions": [
              "sum(l_extendedprice * (1 - l_discount)) * count(*) as revenue"
            ],
            "Inputs": [
              {
                "OperatorType": "Join",
                "Variant": "Join",
                "JoinColumnIndexes": "L:0,R:0",
                "JoinVars": {
                  "l_partkey": 1,
                  "l_quantity": 2,
                  "l_shipinstruct": 4,
                  "l_shipmode": 3
                },
                "TableName": "lineitem_part",
                "Inputs": [
                  {
                    "OperatorType": "Route",
                    "Variant": "Scatter",
                    "Keyspace": {
                      "Name": "main",
                      "Sharded": true
                    },
                    "FieldQuery": "select sum(l_extendedprice * (1 - l_discount)) as revenue, l_partkey, l_quantity, l_shipmode, l_shipinstruct from lineitem where 1 != 1 group by l_partkey, l_quantity, l_shipmode, l_shipinstruct",
                    "Query": "select sum(l_extendedprice * (1 - l_discount)) as revenue, l_partkey, l_quantity, l_shipmode, l_shipinstruct from lineitem group by l_partkey, l_quantity, l_shipmode, l_shipinstruct",
                    "Table": "lineitem"
                  },
                  {
                    "OperatorType": "Route",
                    "Variant": "Scatter",
                    "Keyspace": {
                      "Name": "main",
                      "Sharded": true
                    },
                    "FieldQuery": "select count(*) from part where 1 != 1 group by .0",
                    "Query": "select count(*) from part where p_partkey = :l_partkey and p_brand = 'Brand#12' and p_container in ('SM CASE', 'SM BOX', 'SM PACK', 'SM PKG') and :l_quantity >= 1 and :l_quantity <= 1 + 10 and p_size between 1 and 5 and :l_shipmode in ('AIR', 'AIR REG') and :l_shipinstruct = 'DELIVER IN PERSON' or p_partkey = :l_partkey and p_brand = 'Brand#23' and p_container in ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK') and :l_quantity >= 10 and :l_quantity <= 10 + 10 and p_size between 1 and 10 and :l_shipmode in ('AIR', 'AIR REG') and :l_shipinstruct = 'DELIVER IN PERSON' or p_partkey = :l_partkey and p_brand = 'Brand#34' and p_container in ('LG CASE', 'LG BOX', 'LG PACK', 'LG PKG') and :l_quantity >= 20 and :l_quantity <= 20 + 10 and p_size between 1 and 15 and :l_shipmode in ('AIR', 'AIR REG') and :l_shipinstruct = 'DELIVER IN PERSON' group by .0",
                    "Table": "part"
                  }
                ]
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "main.lineitem",
        "main.part"
      ]
    }
  },
  {
    "comment": "TPC-H query 20",
    "query": "select s_name, s_address from supplier, nation where s_suppkey in ( select ps_suppkey from partsupp where ps_partkey in ( select p_partkey from part where p_name like 'forest%' ) and ps_availqty > ( select 0.5 * sum(l_quantity) from lineitem where l_partkey = ps_partkey and l_suppkey = ps_suppkey and l_shipdate >= date('1994-01-01') and l_shipdate < date('1994-01-01') + interval '1' year ) ) and s_nationkey = n_nationkey and n_name = 'CANADA' order by s_name",
    "plan": "VT12001: unsupported: correlated subquery is only supported for EXISTS"
  },
  {
    "comment": "TPC-H query 21",
    "query": "select s_name, count(*) as numwait from supplier, lineitem l1, orders, nation where s_suppkey = l1.l_suppkey and o_orderkey = l1.l_orderkey and o_orderstatus = 'F' and l1.l_receiptdate > l1.l_commitdate and exists ( select * from lineitem l2 where l2.l_orderkey = l1.l_orderkey and l2.l_suppkey <> l1.l_suppkey ) and not exists ( select * from lineitem l3 where l3.l_orderkey = l1.l_orderkey and l3.l_suppkey <> l1.l_suppkey and l3.l_receiptdate > l3.l_commitdate ) and s_nationkey = n_nationkey and n_name = 'SAUDI ARABIA' group by s_name order by numwait desc, s_name limit 100",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select s_name, count(*) as numwait from supplier, lineitem l1, orders, nation where s_suppkey = l1.l_suppkey and o_orderkey = l1.l_orderkey and o_orderstatus = 'F' and l1.l_receiptdate > l1.l_commitdate and exists ( select * from lineitem l2 where l2.l_orderkey = l1.l_orderkey and l2.l_suppkey <> l1.l_suppkey ) and not exists ( select * from lineitem l3 where l3.l_orderkey = l1.l_orderkey and l3.l_suppkey <> l1.l_suppkey and l3.l_receiptdate > l3.l_commitdate ) and s_nationkey = n_nationkey and n_name = 'SAUDI ARABIA' group by s_name order by numwait desc, s_name limit 100",
      "Instructions": {
        "OperatorType": "Limit",
        "Count": "100",
        "Inputs": [
          {
            "OperatorType": "Sort",
            "Variant": "Memory",
            "OrderBy": "1 DESC, (0|2) ASC",
            "ResultColumns": 2,
            "Inputs": [
              {
                "OperatorType": "Aggregate",
                "Variant": "Ordered",
                "Aggregates": "sum_count_star(1) AS numwait",
                "GroupBy": "(0|2)",
                "Inputs": [
                  {
                    "OperatorType": "Projection",
                    "Expressions": [
                      ":2 as s_name",
                      "count(*) * count(*) as numwait",
                      ":3 as weight_string(s_name)"
                    ],
                    "Inputs": [
                      {
                        "OperatorType": "Sort",
                        "Variant": "Memory",
                        "OrderBy": "(2|3) ASC",
                        "Inputs": [
                          {
                            "OperatorType": "Join",
                            "Variant": "Join",
                            "JoinColumnIndexes": "L:0,R:0,R:1,R:2",
                            "JoinVars": {
                              "l1_l_suppkey": 1
                            },
                            "TableName": "lineitem_orders_supplier_nation",
                            "Inputs": [
                              {
                                "OperatorType": "Projection",
                                "Expressions": [
                                  "count(*) * count(*) as count(*)",
                                  ":2 as l_suppkey"
                                ],
                                "Inputs": [
                                  {
                                    "OperatorType": "Join",
                                    "Variant": "Join",
                                    "JoinColumnIndexes": "L:0,R:0,L:1",
                                    "JoinVars": {
                                      "l1_l_orderkey": 2,
                                      "l1_l_suppkey": 1
                                    },
                                    "TableName": "lineitem_orders",
                                    "Inputs": [
                                      {
                                        "OperatorType": "Route",
                                        "Variant": "Scatter",
                                        "Keyspace": {
                                          "Name": "main",
                                          "Sharded": true
                                        },
                                        "FieldQuery": "select count(*), l1.l_suppkey, l1.l_orderkey from lineitem as l1 where 1 != 1 group by l1.l_suppkey, l1.l_orderkey",
                                        "Query": "select count(*), l1.l_suppkey, l1.l_orderkey from lineitem as l1 where l1.l_receiptdate > l1.l_commitdate and exists (select 1 from lineitem as l2 where l2.l_orderkey = l1.l_orderkey and l2.l_suppkey != l1.l_suppkey) and not exists (select 1 from lineitem as l3 where l3.l_orderkey = l1.l_orderkey and l3.l_suppkey != l1.l_suppkey and l3.l_receiptdate > l3.l_commitdate) group by l1.l_suppkey, l1.l_orderkey",
                                        "Table": "lineitem"
                                      },
                                      {
                                        "OperatorType": "Route",
                                        "Variant": "EqualUnique",
                                        "Keyspace": {
                                          "Name": "main",
                                          "Sharded": true
                                        },
                                        "FieldQuery": "select count(*) from orders where 1 != 1 group by .0",
                                        "Query": "select count(*) from orders where o_orderstatus = 'F' and o_orderkey = :l1_l_orderkey group by .0",
                                        "Table": "orders",
                                        "Values": [
                                          ":l1_l_orderkey"
                                        ],
                                        "Vindex": "hash"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "OperatorType": "Projection",
                                "Expressions": [
                                  "count(*) * count(*) as count(*)",
                                  ":2 as s_name",
                                  ":3 as weight_string(s_name)"
                                ],
                                "Inputs": [
                                  {
                                    "OperatorType": "Join",
                                    "Variant": "Join",
                                    "JoinColumnIndexes": "L:0,R:0,L:1,L:3",
                                    "JoinVars": {
                                      "s_nationkey": 2
                                    },
                                    "TableName": "supplier_nation",
                                    "Inputs": [
                                      {
                                        "OperatorType": "Route",
                                        "Variant": "EqualUnique",
                                        "Keyspace": {
                                          "Name": "main",
                                          "Sharded": true
                                        },
                                        "FieldQuery": "select count(*), s_name, s_nationkey, weight_string(s_name) from supplier where 1 != 1 group by s_name, s_nationkey, weight_string(s_name)",
                                        "Query": "select count(*), s_name, s_nationkey, weight_string(s_name) from supplier where s_suppkey = :l1_l_suppkey group by s_name, s_nationkey, weight_string(s_name)",
                                        "Table": "supplier",
                                        "Values": [
                                          ":l1_l_suppkey"
                                        ],
                                        "Vindex": "hash"
                                      },
                                      {
                                        "OperatorType": "Route",
                                        "Variant": "EqualUnique",
                                        "Keyspace": {
                                          "Name": "main",
                                          "Sharded": true
                                        },
                                        "FieldQuery": "select count(*) from nation where 1 != 1 group by .0",
                                        "Query": "select count(*) from nation where n_name = 'SAUDI ARABIA' and n_nationkey = :s_nationkey group by .0",
                                        "Table": "nation",
                                        "Values": [
                                          ":s_nationkey"
                                        ],
                                        "Vindex": "hash"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "main.lineitem",
        "main.nation",
        "main.orders",
        "main.supplier"
      ]
    }
  },
  {
    "comment": "TPC-H query 22",
    "query": "select cntrycode, count(*) as numcust, sum(c_acctbal) as totacctbal from ( select substring(c_phone from 1 for 2) as cntrycode, c_acctbal from customer where substring(c_phone from 1 for 2) in ('13', '31', '23', '29', '30', '18', '17') and c_acctbal > ( select avg(c_acctbal) from customer where c_acctbal > 0.00 and substring(c_phone from 1 for 2) in ('13', '31', '23', '29', '30', '18', '17') ) and not exists ( select * from orders where o_custkey = c_custkey ) ) as custsale group by cntrycode order by cntrycode",
    "plan": "VT12001: unsupported: correlated subquery is only supported for EXISTS"
  }
]
