[
  {
    "comment": "get_lock from dual",
    "query": "select get_lock('xyz', 10) from dual",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select get_lock('xyz', 10) from dual",
      "Instructions": {
        "OperatorType": "Lock",
        "Keyspace": {
          "Name": "main",
          "Sharded": false
        },
        "TargetDestination": "KeyspaceID(00)",
        "FieldQuery": "select get_lock('xyz', 10) from dual where 1 != 1",
        "lock_func": [
          "get_lock('xyz', 10)"
        ]
      },
      "TablesUsed": [
        "main.dual"
      ]
    }
  },
  {
    "comment": "is_free_lock from dual",
    "query": "select is_free_lock('xyz') from dual",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select is_free_lock('xyz') from dual",
      "Instructions": {
        "OperatorType": "Lock",
        "Keyspace": {
          "Name": "main",
          "Sharded": false
        },
        "TargetDestination": "KeyspaceID(00)",
        "FieldQuery": "select is_free_lock('xyz') from dual where 1 != 1",
        "lock_func": [
          "is_free_lock('xyz')"
        ]
      },
      "TablesUsed": [
        "main.dual"
      ]
    }
  },
  {
    "comment": "get_lock from dual prepare query",
    "query": "select get_lock(?, ?)",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select get_lock(?, ?)",
      "Instructions": {
        "OperatorType": "Lock",
        "Keyspace": {
          "Name": "main",
          "Sharded": false
        },
        "TargetDestination": "KeyspaceID(00)",
        "FieldQuery": "select get_lock(:v1, :v2) from dual where 1 != 1",
        "lock_func": [
          "get_lock(:v1, :v2)"
        ]
      },
      "TablesUsed": [
        "main.dual"
      ]
    }
  },
  {
    "comment": "lock tables read",
    "query": "lock tables t as x read local",
    "plan": {
      "QueryType": "LOCK_TABLES",
      "Original": "lock tables t as x read local",
      "Instructions": {
        "OperatorType": "Rows"
      }
    }
  },
  {
    "comment": "lock tables write",
    "query": "lock tables t low_priority write",
    "plan": {
      "QueryType": "LOCK_TABLES",
      "Original": "lock tables t low_priority write",
      "Instructions": {
        "OperatorType": "Rows"
      }
    }
  },
  {
    "comment": "unlock tables",
    "query": "unlock tables",
    "plan": {
      "QueryType": "UNLOCK_TABLES",
      "Original": "unlock tables",
      "Instructions": {
        "OperatorType": "UnlockTables"
      }
    }
  },
  {
    "comment": "multiple lock functions",
    "query": "select get_lock('xyz', 10), is_free_lock('abc') from dual",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select get_lock('xyz', 10), is_free_lock('abc') from dual",
      "Instructions": {
        "OperatorType": "Lock",
        "Keyspace": {
          "Name": "main",
          "Sharded": false
        },
        "TargetDestination": "KeyspaceID(00)",
        "FieldQuery": "select get_lock('xyz', 10), is_free_lock('abc') from dual where 1 != 1",
        "lock_func": [
          "get_lock('xyz', 10)",
          "is_free_lock('abc')"
        ]
      },
      "TablesUsed": [
        "main.dual"
      ]
    }
  },
  {
    "comment": "select nowait",
    "query": "select u.col, u.bar from user u join music m on u.foo = m.foo for update nowait",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select u.col, u.bar from user u join music m on u.foo = m.foo for update nowait",
      "Instructions": {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "L:0,L:1",
        "JoinVars": {
          "u_foo": 2
        },
        "TableName": "`user`_music",
        "Inputs": [
          {
            "OperatorType": "Route",
            "Variant": "Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select u.col, u.bar, u.foo from `user` as u where 1 != 1",
            "Query": "select u.col, u.bar, u.foo from `user` as u for update nowait",
            "Table": "`user`"
          },
          {
            "OperatorType": "Route",
            "Variant": "Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select 1 from music as m where 1 != 1",
            "Query": "select 1 from music as m where m.foo = :u_foo for update nowait",
            "Table": "music"
          }
        ]
      },
      "TablesUsed": [
        "user.music",
        "user.user"
      ]
    }
  },
  {
    "comment": "select skip locked",
    "query": "select u.col, u.bar from user u join music m on u.foo = m.foo for share skip locked",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select u.col, u.bar from user u join music m on u.foo = m.foo for share skip locked",
      "Instructions": {
        "OperatorType": "Join",
        "Variant": "Join",
        "JoinColumnIndexes": "L:0,L:1",
        "JoinVars": {
          "u_foo": 2
        },
        "TableName": "`user`_music",
        "Inputs": [
          {
            "OperatorType": "Route",
            "Variant": "Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select u.col, u.bar, u.foo from `user` as u where 1 != 1",
            "Query": "select u.col, u.bar, u.foo from `user` as u for share skip locked",
            "Table": "`user`"
          },
          {
            "OperatorType": "Route",
            "Variant": "Scatter",
            "Keyspace": {
              "Name": "user",
              "Sharded": true
            },
            "FieldQuery": "select 1 from music as m where 1 != 1",
            "Query": "select 1 from music as m where m.foo = :u_foo for share skip locked",
            "Table": "music"
          }
        ]
      },
      "TablesUsed": [
        "user.music",
        "user.user"
      ]
    }
  }
]
