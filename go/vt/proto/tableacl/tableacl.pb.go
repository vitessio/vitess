// Code generated by protoc-gen-go.
// source: tableacl.proto
// DO NOT EDIT!

/*
Package tableacl is a generated protocol buffer package.

It is generated from these files:
	tableacl.proto

It has these top-level messages:
	TableGroupSpec
	Config
*/
package tableacl

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// TableGroupSpec defines ACLs for a group of tables.
type TableGroupSpec struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// either tables or a table name prefixes (if it ends in a %)
	TableNamesOrPrefixes []string `protobuf:"bytes,2,rep,name=table_names_or_prefixes" json:"table_names_or_prefixes,omitempty"`
	Readers              []string `protobuf:"bytes,3,rep,name=readers" json:"readers,omitempty"`
	Writers              []string `protobuf:"bytes,4,rep,name=writers" json:"writers,omitempty"`
	Admins               []string `protobuf:"bytes,5,rep,name=admins" json:"admins,omitempty"`
}

func (m *TableGroupSpec) Reset()                    { *m = TableGroupSpec{} }
func (m *TableGroupSpec) String() string            { return proto.CompactTextString(m) }
func (*TableGroupSpec) ProtoMessage()               {}
func (*TableGroupSpec) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Config struct {
	TableGroups []*TableGroupSpec `protobuf:"bytes,1,rep,name=table_groups" json:"table_groups,omitempty"`
}

func (m *Config) Reset()                    { *m = Config{} }
func (m *Config) String() string            { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()               {}
func (*Config) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Config) GetTableGroups() []*TableGroupSpec {
	if m != nil {
		return m.TableGroups
	}
	return nil
}

func init() {
	proto.RegisterType((*TableGroupSpec)(nil), "tableacl.TableGroupSpec")
	proto.RegisterType((*Config)(nil), "tableacl.Config")
}

var fileDescriptor0 = []byte{
	// 175 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0x49, 0x4c, 0xca,
	0x49, 0x4d, 0x4c, 0xce, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x80, 0xf1, 0x95, 0x0a,
	0xb9, 0xf8, 0x42, 0x40, 0x6c, 0xf7, 0xa2, 0xfc, 0xd2, 0x82, 0xe0, 0x82, 0xd4, 0x64, 0x21, 0x1e,
	0x2e, 0x96, 0xbc, 0xc4, 0xdc, 0x54, 0x09, 0x46, 0x05, 0x46, 0x0d, 0x4e, 0x21, 0x79, 0x2e, 0x71,
	0xb0, 0xda, 0x78, 0x90, 0x58, 0x71, 0x7c, 0x7e, 0x51, 0x7c, 0x41, 0x51, 0x6a, 0x5a, 0x66, 0x45,
	0x6a, 0xb1, 0x04, 0x93, 0x02, 0x33, 0x50, 0x01, 0x3f, 0x17, 0x7b, 0x51, 0x6a, 0x62, 0x4a, 0x6a,
	0x51, 0xb1, 0x04, 0x33, 0x4c, 0xa0, 0xbc, 0x28, 0xb3, 0x04, 0x24, 0xc0, 0x02, 0x16, 0xe0, 0xe3,
	0x62, 0x4b, 0x4c, 0xc9, 0xcd, 0xcc, 0x2b, 0x96, 0x60, 0x05, 0xf1, 0x95, 0x2c, 0xb8, 0xd8, 0x9c,
	0xf3, 0xf3, 0xd2, 0x32, 0xd3, 0x85, 0xf4, 0xb8, 0x78, 0x20, 0x86, 0xa7, 0x83, 0x6c, 0x2f, 0x06,
	0x5a, 0xc9, 0xac, 0xc1, 0x6d, 0x24, 0xa1, 0x07, 0x77, 0x2d, 0xaa, 0xd3, 0x92, 0xd8, 0xc0, 0xae,
	0x37, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x7e, 0x4b, 0x96, 0xc0, 0xcf, 0x00, 0x00, 0x00,
}
