//
//Copyright 2025 The Vitess Authors.
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// This file contains the Vitess topology related data structures.
// Very few of these structures are exchanged over the wire (only
// TabletType and KeyRange), but they are all used by the topology
// service.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.21.3
// source: vtorcdata.proto

package vtorcdata

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// KeyspaceConfig stores configuration for Vtorc.
type KeyspaceConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// DisableEmergencyReparent reflects if EmergencyReparentShard
	// can be used in Vtorc recoveries.
	DisableEmergencyReparent bool `protobuf:"varint,1,opt,name=disable_emergency_reparent,json=disableEmergencyReparent,proto3" json:"disable_emergency_reparent,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *KeyspaceConfig) Reset() {
	*x = KeyspaceConfig{}
	mi := &file_vtorcdata_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyspaceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyspaceConfig) ProtoMessage() {}

func (x *KeyspaceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_vtorcdata_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyspaceConfig.ProtoReflect.Descriptor instead.
func (*KeyspaceConfig) Descriptor() ([]byte, []int) {
	return file_vtorcdata_proto_rawDescGZIP(), []int{0}
}

func (x *KeyspaceConfig) GetDisableEmergencyReparent() bool {
	if x != nil {
		return x.DisableEmergencyReparent
	}
	return false
}

// ShardConfig stores configuration for Vtorc.
type ShardConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// DisableEmergencyReparent reflects if EmergencyReparentShard
	// can be used in Vtorc recoveries.
	DisableEmergencyReparent bool `protobuf:"varint,1,opt,name=disable_emergency_reparent,json=disableEmergencyReparent,proto3" json:"disable_emergency_reparent,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *ShardConfig) Reset() {
	*x = ShardConfig{}
	mi := &file_vtorcdata_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShardConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardConfig) ProtoMessage() {}

func (x *ShardConfig) ProtoReflect() protoreflect.Message {
	mi := &file_vtorcdata_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardConfig.ProtoReflect.Descriptor instead.
func (*ShardConfig) Descriptor() ([]byte, []int) {
	return file_vtorcdata_proto_rawDescGZIP(), []int{1}
}

func (x *ShardConfig) GetDisableEmergencyReparent() bool {
	if x != nil {
		return x.DisableEmergencyReparent
	}
	return false
}

var File_vtorcdata_proto protoreflect.FileDescriptor

var file_vtorcdata_proto_rawDesc = string([]byte{
	0x0a, 0x0f, 0x76, 0x74, 0x6f, 0x72, 0x63, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x76, 0x74, 0x6f, 0x72, 0x63, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4e, 0x0a, 0x0e,
	0x4b, 0x65, 0x79, 0x73, 0x70, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3c,
	0x0a, 0x1a, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x65, 0x6d, 0x65, 0x72, 0x67, 0x65,
	0x6e, 0x63, 0x79, 0x5f, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x18, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x6d, 0x65, 0x72, 0x67,
	0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0x4b, 0x0a, 0x0b,
	0x53, 0x68, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3c, 0x0a, 0x1a, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x65, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79,
	0x5f, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x18, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63,
	0x79, 0x52, 0x65, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x39, 0x0a, 0x0f, 0x69, 0x6f, 0x2e,
	0x76, 0x69, 0x74, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x26, 0x76, 0x69,
	0x74, 0x65, 0x73, 0x73, 0x2e, 0x69, 0x6f, 0x2f, 0x76, 0x69, 0x74, 0x65, 0x73, 0x73, 0x2f, 0x67,
	0x6f, 0x2f, 0x76, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x74, 0x6f, 0x72, 0x63,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_vtorcdata_proto_rawDescOnce sync.Once
	file_vtorcdata_proto_rawDescData []byte
)

func file_vtorcdata_proto_rawDescGZIP() []byte {
	file_vtorcdata_proto_rawDescOnce.Do(func() {
		file_vtorcdata_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_vtorcdata_proto_rawDesc), len(file_vtorcdata_proto_rawDesc)))
	})
	return file_vtorcdata_proto_rawDescData
}

var file_vtorcdata_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_vtorcdata_proto_goTypes = []any{
	(*KeyspaceConfig)(nil), // 0: vtorcdata.KeyspaceConfig
	(*ShardConfig)(nil),    // 1: vtorcdata.ShardConfig
}
var file_vtorcdata_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_vtorcdata_proto_init() }
func file_vtorcdata_proto_init() {
	if File_vtorcdata_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_vtorcdata_proto_rawDesc), len(file_vtorcdata_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_vtorcdata_proto_goTypes,
		DependencyIndexes: file_vtorcdata_proto_depIdxs,
		MessageInfos:      file_vtorcdata_proto_msgTypes,
	}.Build()
	File_vtorcdata_proto = out.File
	file_vtorcdata_proto_goTypes = nil
	file_vtorcdata_proto_depIdxs = nil
}
