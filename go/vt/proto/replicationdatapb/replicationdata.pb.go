// Code generated by protoc-gen-go.
// source: replicationdata.proto
// DO NOT EDIT!

/*
Package replicationdatapb is a generated protocol buffer package.

It is generated from these files:
	replicationdata.proto

It has these top-level messages:
	Status
*/
package replicationdatapb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Status is the replication status for MySQL (returned by 'show slave status'
// and parsed into a Position and fields).
type Status struct {
	Position            string `protobuf:"bytes,1,opt,name=position" json:"position,omitempty"`
	SlaveIoRunning      bool   `protobuf:"varint,2,opt,name=slave_io_running" json:"slave_io_running,omitempty"`
	SlaveSqlRunning     bool   `protobuf:"varint,3,opt,name=slave_sql_running" json:"slave_sql_running,omitempty"`
	SecondsBehindMaster uint32 `protobuf:"varint,4,opt,name=seconds_behind_master" json:"seconds_behind_master,omitempty"`
	MasterHost          string `protobuf:"bytes,5,opt,name=master_host" json:"master_host,omitempty"`
	MasterPort          int32  `protobuf:"varint,6,opt,name=master_port" json:"master_port,omitempty"`
	MasterConnectRetry  int32  `protobuf:"varint,7,opt,name=master_connect_retry" json:"master_connect_retry,omitempty"`
}

func (m *Status) Reset()                    { *m = Status{} }
func (m *Status) String() string            { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()               {}
func (*Status) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func init() {
	proto.RegisterType((*Status)(nil), "replicationdata.Status")
}

var fileDescriptor0 = []byte{
	// 202 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x5c, 0xcf, 0xd1, 0x6a, 0xc2, 0x30,
	0x14, 0xc6, 0x71, 0xba, 0xad, 0x5d, 0x77, 0xc6, 0x58, 0x9b, 0xae, 0x90, 0xc1, 0x06, 0xe2, 0x95,
	0x57, 0xde, 0xf8, 0x06, 0xbe, 0x82, 0x77, 0xde, 0x84, 0xb4, 0x0d, 0x36, 0x50, 0x93, 0x98, 0x73,
	0x2a, 0xf8, 0x62, 0x3e, 0x9f, 0x69, 0x2b, 0x0a, 0xbd, 0xcc, 0xff, 0x07, 0x27, 0x7c, 0x50, 0x7a,
	0xe5, 0x3a, 0x5d, 0x4b, 0xd2, 0xd6, 0x34, 0x92, 0xe4, 0xda, 0x79, 0x4b, 0x96, 0x7d, 0xcf, 0xf2,
	0xf2, 0x1a, 0x41, 0xb2, 0x23, 0x49, 0x3d, 0xb2, 0x0c, 0x52, 0x67, 0x51, 0x0f, 0xc4, 0xa3, 0x45,
	0xb4, 0xfa, 0x60, 0x1c, 0x32, 0xec, 0xe4, 0x59, 0x09, 0x6d, 0x85, 0xef, 0x8d, 0xd1, 0xe6, 0xc0,
	0x5f, 0x82, 0xa4, 0xec, 0x17, 0xf2, 0x49, 0xf0, 0xd4, 0x3d, 0xe8, 0x75, 0xa4, 0x7f, 0x28, 0x51,
	0xd5, 0xe1, 0x3c, 0x8a, 0x4a, 0xb5, 0xda, 0x34, 0xe2, 0x28, 0x91, 0x94, 0xe7, 0x6f, 0x81, 0xbf,
	0x58, 0x01, 0x9f, 0xd3, 0x5b, 0xb4, 0x16, 0x89, 0xc7, 0xe3, 0x47, 0xcf, 0xe8, 0xac, 0x27, 0x9e,
	0x84, 0x18, 0xb3, 0x3f, 0xf8, 0xb9, 0xc7, 0x70, 0xcd, 0xa8, 0x9a, 0x84, 0x57, 0xe4, 0x2f, 0xfc,
	0x7d, 0xd0, 0x6d, 0xb1, 0xcf, 0x67, 0x5b, 0x5c, 0x55, 0x25, 0xe3, 0xca, 0xcd, 0x2d, 0x00, 0x00,
	0xff, 0xff, 0x42, 0x2c, 0xe1, 0x28, 0xfe, 0x00, 0x00, 0x00,
}
