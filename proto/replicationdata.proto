/*
Copyright 2019 The Vitess Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file defines the replication related structures we use.

syntax = "proto3";
option go_package = "vitess.io/vitess/go/vt/proto/replicationdata";

package replicationdata;

// Status is the replication status for MySQL/MariaDB/File-based. Returned by a
// flavor-specific command and parsed into a Position and fields.
message Status {
  string position = 1;
  bool io_thread_running = 2;
  bool sql_thread_running = 3;
  uint32 seconds_behind_master = 4;
  string master_host = 5;
  int32 master_port = 6;
  int32 master_connect_retry = 7;
  // RelayLogPosition will be empty for flavors that do not support returning the full GTIDSet from the relay log, such as MariaDB.
  string relay_log_position = 8;
  string file_position = 9;
  string file_relay_log_position = 10;
  uint32 master_server_id = 11;
  string master_uuid = 12;
}

// StopReplicationStatus represents the replication status before calling StopReplication, and the replication status collected immediately after
// calling StopReplication.
message StopReplicationStatus {
  replicationdata.Status before = 1;
  replicationdata.Status after = 2;
}

// StopReplicationMode is used to provide controls over how replication is stopped.
enum StopReplicationMode {
  IOANDSQLTHREAD = 0;
  IOTHREADONLY = 1;
}

// MasterStatus is the replication status for a MySQL master (returned by 'show master status').
message MasterStatus {
  string position = 1;
  string file_position = 2;
}
