/*
Copyright 2017 Google Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreedto in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file contains the types needed to define a vschema.

syntax = "proto3";

package vschema;

// Keyspace is the vschema for a keyspace.
message Keyspace {
  // If sharded is false, vindexes and tables are ignored.
  bool sharded = 1;
  map<string, Vindex> vindexes = 2;
  map<string, Table> tables = 3;
}

// Vindex is the vindex info for a Keyspace.
message Vindex {
  // The type must match one of the predefined
  // (or plugged in) vindex names.
  string type = 1;
  // params is a map of attribute value pairs
  // that must be defined as required by the
  // vindex constructors. The values can only
  // be strings.
  map<string, string> params = 2;
  // A lookup vindex can have an owner table defined.
  // If so, rows in the lookup table are created or
  // deleted in sync with corresponding rows in the
  // owner table.
  string owner = 3;
}

// Table is the table info for a Keyspace.
message Table {
  // If the table is a sequence, type must be
  // "sequence". Otherwise, it should be empty.
  string type = 1;
  // column_vindexes associates columns to vindexes.
  repeated ColumnVindex column_vindexes = 2;
  // auto_increment is specified if a column needs
  // to be associated with a sequence.
  AutoIncrement auto_increment = 3;
}

// ColumnVindex is used to associate a column to a vindex.
message ColumnVindex {
  string column = 1;
  // The name must match a vindex defined in Keyspace.
  string name = 2;
}

// Autoincrement is used to designate a column as auto-inc.
message AutoIncrement {
  string column = 1;
  // The sequence must match a table of type SEQUENCE.
  string sequence = 2;
}

// SrvVSchema is the roll-up of all the Keyspace schema for a cell.
message SrvVSchema {
  // keyspaces is a map of keyspace name -> Keyspace object.
  map<string, Keyspace> keyspaces = 1;
}
