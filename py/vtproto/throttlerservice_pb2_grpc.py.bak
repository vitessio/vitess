# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import throttlerdata_pb2 as throttlerdata__pb2


class ThrottlerStub(object):
  """Throttler defines the throttler RPC calls.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.MaxRates = channel.unary_unary(
        '/throttlerservice.Throttler/MaxRates',
        request_serializer=throttlerdata__pb2.MaxRatesRequest.SerializeToString,
        response_deserializer=throttlerdata__pb2.MaxRatesResponse.FromString,
        )
    self.SetMaxRate = channel.unary_unary(
        '/throttlerservice.Throttler/SetMaxRate',
        request_serializer=throttlerdata__pb2.SetMaxRateRequest.SerializeToString,
        response_deserializer=throttlerdata__pb2.SetMaxRateResponse.FromString,
        )
    self.GetConfiguration = channel.unary_unary(
        '/throttlerservice.Throttler/GetConfiguration',
        request_serializer=throttlerdata__pb2.GetConfigurationRequest.SerializeToString,
        response_deserializer=throttlerdata__pb2.GetConfigurationResponse.FromString,
        )
    self.UpdateConfiguration = channel.unary_unary(
        '/throttlerservice.Throttler/UpdateConfiguration',
        request_serializer=throttlerdata__pb2.UpdateConfigurationRequest.SerializeToString,
        response_deserializer=throttlerdata__pb2.UpdateConfigurationResponse.FromString,
        )
    self.ResetConfiguration = channel.unary_unary(
        '/throttlerservice.Throttler/ResetConfiguration',
        request_serializer=throttlerdata__pb2.ResetConfigurationRequest.SerializeToString,
        response_deserializer=throttlerdata__pb2.ResetConfigurationResponse.FromString,
        )


class ThrottlerServicer(object):
  """Throttler defines the throttler RPC calls.
  """

  def MaxRates(self, request, context):
    """MaxRates returns the current max rate for each throttler of the process.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetMaxRate(self, request, context):
    """SetMaxRate allows to change the current max rate for all throttlers
    of the process.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetConfiguration(self, request, context):
    """GetConfiguration returns the configuration of the MaxReplicationlag module
    for the given throttler or all throttlers if "throttler_name" is empty.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateConfiguration(self, request, context):
    """UpdateConfiguration (partially) updates the configuration of the
    MaxReplicationlag module for the given throttler or all throttlers if
    "throttler_name" is empty.
    If "copy_zero_values" is true, fields with zero values will be copied
    as well.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ResetConfiguration(self, request, context):
    """ResetConfiguration resets the configuration of the MaxReplicationlag module
    to the initial configuration for the given throttler or all throttlers if
    "throttler_name" is empty.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ThrottlerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'MaxRates': grpc.unary_unary_rpc_method_handler(
          servicer.MaxRates,
          request_deserializer=throttlerdata__pb2.MaxRatesRequest.FromString,
          response_serializer=throttlerdata__pb2.MaxRatesResponse.SerializeToString,
      ),
      'SetMaxRate': grpc.unary_unary_rpc_method_handler(
          servicer.SetMaxRate,
          request_deserializer=throttlerdata__pb2.SetMaxRateRequest.FromString,
          response_serializer=throttlerdata__pb2.SetMaxRateResponse.SerializeToString,
      ),
      'GetConfiguration': grpc.unary_unary_rpc_method_handler(
          servicer.GetConfiguration,
          request_deserializer=throttlerdata__pb2.GetConfigurationRequest.FromString,
          response_serializer=throttlerdata__pb2.GetConfigurationResponse.SerializeToString,
      ),
      'UpdateConfiguration': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateConfiguration,
          request_deserializer=throttlerdata__pb2.UpdateConfigurationRequest.FromString,
          response_serializer=throttlerdata__pb2.UpdateConfigurationResponse.SerializeToString,
      ),
      'ResetConfiguration': grpc.unary_unary_rpc_method_handler(
          servicer.ResetConfiguration,
          request_deserializer=throttlerdata__pb2.ResetConfigurationRequest.FromString,
          response_serializer=throttlerdata__pb2.ResetConfigurationResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'throttlerservice.Throttler', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
