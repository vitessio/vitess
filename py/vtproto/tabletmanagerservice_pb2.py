# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: tabletmanagerservice.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import tabletmanagerdata_pb2 as tabletmanagerdata__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='tabletmanagerservice.proto',
  package='tabletmanagerservice',
  syntax='proto3',
  serialized_pb=_b('\n\x1atabletmanagerservice.proto\x12\x14tabletmanagerservice\x1a\x17tabletmanagerdata.proto2\x9b!\n\rTabletManager\x12I\n\x04Ping\x12\x1e.tabletmanagerdata.PingRequest\x1a\x1f.tabletmanagerdata.PingResponse\"\x00\x12L\n\x05Sleep\x12\x1f.tabletmanagerdata.SleepRequest\x1a .tabletmanagerdata.SleepResponse\"\x00\x12^\n\x0b\x45xecuteHook\x12%.tabletmanagerdata.ExecuteHookRequest\x1a&.tabletmanagerdata.ExecuteHookResponse\"\x00\x12X\n\tGetSchema\x12#.tabletmanagerdata.GetSchemaRequest\x1a$.tabletmanagerdata.GetSchemaResponse\"\x00\x12g\n\x0eGetPermissions\x12(.tabletmanagerdata.GetPermissionsRequest\x1a).tabletmanagerdata.GetPermissionsResponse\"\x00\x12^\n\x0bSetReadOnly\x12%.tabletmanagerdata.SetReadOnlyRequest\x1a&.tabletmanagerdata.SetReadOnlyResponse\"\x00\x12\x61\n\x0cSetReadWrite\x12&.tabletmanagerdata.SetReadWriteRequest\x1a\'.tabletmanagerdata.SetReadWriteResponse\"\x00\x12[\n\nChangeType\x12$.tabletmanagerdata.ChangeTypeRequest\x1a%.tabletmanagerdata.ChangeTypeResponse\"\x00\x12\x61\n\x0cRefreshState\x12&.tabletmanagerdata.RefreshStateRequest\x1a\'.tabletmanagerdata.RefreshStateResponse\"\x00\x12g\n\x0eRunHealthCheck\x12(.tabletmanagerdata.RunHealthCheckRequest\x1a).tabletmanagerdata.RunHealthCheckResponse\"\x00\x12p\n\x11IgnoreHealthError\x12+.tabletmanagerdata.IgnoreHealthErrorRequest\x1a,.tabletmanagerdata.IgnoreHealthErrorResponse\"\x00\x12\x61\n\x0cReloadSchema\x12&.tabletmanagerdata.ReloadSchemaRequest\x1a\'.tabletmanagerdata.ReloadSchemaResponse\"\x00\x12j\n\x0fPreflightSchema\x12).tabletmanagerdata.PreflightSchemaRequest\x1a*.tabletmanagerdata.PreflightSchemaResponse\"\x00\x12^\n\x0b\x41pplySchema\x12%.tabletmanagerdata.ApplySchemaRequest\x1a&.tabletmanagerdata.ApplySchemaResponse\"\x00\x12p\n\x11\x45xecuteFetchAsDba\x12+.tabletmanagerdata.ExecuteFetchAsDbaRequest\x1a,.tabletmanagerdata.ExecuteFetchAsDbaResponse\"\x00\x12p\n\x11\x45xecuteFetchAsApp\x12+.tabletmanagerdata.ExecuteFetchAsAppRequest\x1a,.tabletmanagerdata.ExecuteFetchAsAppResponse\"\x00\x12^\n\x0bSlaveStatus\x12%.tabletmanagerdata.SlaveStatusRequest\x1a&.tabletmanagerdata.SlaveStatusResponse\"\x00\x12g\n\x0eMasterPosition\x12(.tabletmanagerdata.MasterPositionRequest\x1a).tabletmanagerdata.MasterPositionResponse\"\x00\x12X\n\tStopSlave\x12#.tabletmanagerdata.StopSlaveRequest\x1a$.tabletmanagerdata.StopSlaveResponse\"\x00\x12m\n\x10StopSlaveMinimum\x12*.tabletmanagerdata.StopSlaveMinimumRequest\x1a+.tabletmanagerdata.StopSlaveMinimumResponse\"\x00\x12[\n\nStartSlave\x12$.tabletmanagerdata.StartSlaveRequest\x1a%.tabletmanagerdata.StartSlaveResponse\"\x00\x12\x8b\x01\n\x1aTabletExternallyReparented\x12\x34.tabletmanagerdata.TabletExternallyReparentedRequest\x1a\x35.tabletmanagerdata.TabletExternallyReparentedResponse\"\x00\x12\x82\x01\n\x17TabletExternallyElected\x12\x31.tabletmanagerdata.TabletExternallyElectedRequest\x1a\x32.tabletmanagerdata.TabletExternallyElectedResponse\"\x00\x12X\n\tGetSlaves\x12#.tabletmanagerdata.GetSlavesRequest\x1a$.tabletmanagerdata.GetSlavesResponse\"\x00\x12j\n\x0fWaitBlpPosition\x12).tabletmanagerdata.WaitBlpPositionRequest\x1a*.tabletmanagerdata.WaitBlpPositionResponse\"\x00\x12R\n\x07StopBlp\x12!.tabletmanagerdata.StopBlpRequest\x1a\".tabletmanagerdata.StopBlpResponse\"\x00\x12U\n\x08StartBlp\x12\".tabletmanagerdata.StartBlpRequest\x1a#.tabletmanagerdata.StartBlpResponse\"\x00\x12^\n\x0bRunBlpUntil\x12%.tabletmanagerdata.RunBlpUntilRequest\x1a&.tabletmanagerdata.RunBlpUntilResponse\"\x00\x12m\n\x10ResetReplication\x12*.tabletmanagerdata.ResetReplicationRequest\x1a+.tabletmanagerdata.ResetReplicationResponse\"\x00\x12[\n\nInitMaster\x12$.tabletmanagerdata.InitMasterRequest\x1a%.tabletmanagerdata.InitMasterResponse\"\x00\x12\x82\x01\n\x17PopulateReparentJournal\x12\x31.tabletmanagerdata.PopulateReparentJournalRequest\x1a\x32.tabletmanagerdata.PopulateReparentJournalResponse\"\x00\x12X\n\tInitSlave\x12#.tabletmanagerdata.InitSlaveRequest\x1a$.tabletmanagerdata.InitSlaveResponse\"\x00\x12\x61\n\x0c\x44\x65moteMaster\x12&.tabletmanagerdata.DemoteMasterRequest\x1a\'.tabletmanagerdata.DemoteMasterResponse\"\x00\x12\x85\x01\n\x18PromoteSlaveWhenCaughtUp\x12\x32.tabletmanagerdata.PromoteSlaveWhenCaughtUpRequest\x1a\x33.tabletmanagerdata.PromoteSlaveWhenCaughtUpResponse\"\x00\x12m\n\x10SlaveWasPromoted\x12*.tabletmanagerdata.SlaveWasPromotedRequest\x1a+.tabletmanagerdata.SlaveWasPromotedResponse\"\x00\x12X\n\tSetMaster\x12#.tabletmanagerdata.SetMasterRequest\x1a$.tabletmanagerdata.SetMasterResponse\"\x00\x12p\n\x11SlaveWasRestarted\x12+.tabletmanagerdata.SlaveWasRestartedRequest\x1a,.tabletmanagerdata.SlaveWasRestartedResponse\"\x00\x12\x8e\x01\n\x1bStopReplicationAndGetStatus\x12\x35.tabletmanagerdata.StopReplicationAndGetStatusRequest\x1a\x36.tabletmanagerdata.StopReplicationAndGetStatusResponse\"\x00\x12\x61\n\x0cPromoteSlave\x12&.tabletmanagerdata.PromoteSlaveRequest\x1a\'.tabletmanagerdata.PromoteSlaveResponse\"\x00\x12Q\n\x06\x42\x61\x63kup\x12 .tabletmanagerdata.BackupRequest\x1a!.tabletmanagerdata.BackupResponse\"\x00\x30\x01\x12r\n\x11RestoreFromBackup\x12+.tabletmanagerdata.RestoreFromBackupRequest\x1a,.tabletmanagerdata.RestoreFromBackupResponse\"\x00\x30\x01\x62\x06proto3')
  ,
  dependencies=[tabletmanagerdata__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)





import abc
from grpc.beta import implementations as beta_implementations
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities

class BetaTabletManagerServicer(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def Ping(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def Sleep(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def ExecuteHook(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def GetSchema(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def GetPermissions(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def SetReadOnly(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def SetReadWrite(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def ChangeType(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def RefreshState(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def RunHealthCheck(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def IgnoreHealthError(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def ReloadSchema(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def PreflightSchema(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def ApplySchema(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def ExecuteFetchAsDba(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def ExecuteFetchAsApp(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def SlaveStatus(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def MasterPosition(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def StopSlave(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def StopSlaveMinimum(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def StartSlave(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def TabletExternallyReparented(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def TabletExternallyElected(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def GetSlaves(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def WaitBlpPosition(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def StopBlp(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def StartBlp(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def RunBlpUntil(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def ResetReplication(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def InitMaster(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def PopulateReparentJournal(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def InitSlave(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def DemoteMaster(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def PromoteSlaveWhenCaughtUp(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def SlaveWasPromoted(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def SetMaster(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def SlaveWasRestarted(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def StopReplicationAndGetStatus(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def PromoteSlave(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def Backup(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def RestoreFromBackup(self, request, context):
    raise NotImplementedError()

class BetaTabletManagerStub(object):
  """The interface to which stubs will conform."""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def Ping(self, request, timeout):
    raise NotImplementedError()
  Ping.future = None
  @abc.abstractmethod
  def Sleep(self, request, timeout):
    raise NotImplementedError()
  Sleep.future = None
  @abc.abstractmethod
  def ExecuteHook(self, request, timeout):
    raise NotImplementedError()
  ExecuteHook.future = None
  @abc.abstractmethod
  def GetSchema(self, request, timeout):
    raise NotImplementedError()
  GetSchema.future = None
  @abc.abstractmethod
  def GetPermissions(self, request, timeout):
    raise NotImplementedError()
  GetPermissions.future = None
  @abc.abstractmethod
  def SetReadOnly(self, request, timeout):
    raise NotImplementedError()
  SetReadOnly.future = None
  @abc.abstractmethod
  def SetReadWrite(self, request, timeout):
    raise NotImplementedError()
  SetReadWrite.future = None
  @abc.abstractmethod
  def ChangeType(self, request, timeout):
    raise NotImplementedError()
  ChangeType.future = None
  @abc.abstractmethod
  def RefreshState(self, request, timeout):
    raise NotImplementedError()
  RefreshState.future = None
  @abc.abstractmethod
  def RunHealthCheck(self, request, timeout):
    raise NotImplementedError()
  RunHealthCheck.future = None
  @abc.abstractmethod
  def IgnoreHealthError(self, request, timeout):
    raise NotImplementedError()
  IgnoreHealthError.future = None
  @abc.abstractmethod
  def ReloadSchema(self, request, timeout):
    raise NotImplementedError()
  ReloadSchema.future = None
  @abc.abstractmethod
  def PreflightSchema(self, request, timeout):
    raise NotImplementedError()
  PreflightSchema.future = None
  @abc.abstractmethod
  def ApplySchema(self, request, timeout):
    raise NotImplementedError()
  ApplySchema.future = None
  @abc.abstractmethod
  def ExecuteFetchAsDba(self, request, timeout):
    raise NotImplementedError()
  ExecuteFetchAsDba.future = None
  @abc.abstractmethod
  def ExecuteFetchAsApp(self, request, timeout):
    raise NotImplementedError()
  ExecuteFetchAsApp.future = None
  @abc.abstractmethod
  def SlaveStatus(self, request, timeout):
    raise NotImplementedError()
  SlaveStatus.future = None
  @abc.abstractmethod
  def MasterPosition(self, request, timeout):
    raise NotImplementedError()
  MasterPosition.future = None
  @abc.abstractmethod
  def StopSlave(self, request, timeout):
    raise NotImplementedError()
  StopSlave.future = None
  @abc.abstractmethod
  def StopSlaveMinimum(self, request, timeout):
    raise NotImplementedError()
  StopSlaveMinimum.future = None
  @abc.abstractmethod
  def StartSlave(self, request, timeout):
    raise NotImplementedError()
  StartSlave.future = None
  @abc.abstractmethod
  def TabletExternallyReparented(self, request, timeout):
    raise NotImplementedError()
  TabletExternallyReparented.future = None
  @abc.abstractmethod
  def TabletExternallyElected(self, request, timeout):
    raise NotImplementedError()
  TabletExternallyElected.future = None
  @abc.abstractmethod
  def GetSlaves(self, request, timeout):
    raise NotImplementedError()
  GetSlaves.future = None
  @abc.abstractmethod
  def WaitBlpPosition(self, request, timeout):
    raise NotImplementedError()
  WaitBlpPosition.future = None
  @abc.abstractmethod
  def StopBlp(self, request, timeout):
    raise NotImplementedError()
  StopBlp.future = None
  @abc.abstractmethod
  def StartBlp(self, request, timeout):
    raise NotImplementedError()
  StartBlp.future = None
  @abc.abstractmethod
  def RunBlpUntil(self, request, timeout):
    raise NotImplementedError()
  RunBlpUntil.future = None
  @abc.abstractmethod
  def ResetReplication(self, request, timeout):
    raise NotImplementedError()
  ResetReplication.future = None
  @abc.abstractmethod
  def InitMaster(self, request, timeout):
    raise NotImplementedError()
  InitMaster.future = None
  @abc.abstractmethod
  def PopulateReparentJournal(self, request, timeout):
    raise NotImplementedError()
  PopulateReparentJournal.future = None
  @abc.abstractmethod
  def InitSlave(self, request, timeout):
    raise NotImplementedError()
  InitSlave.future = None
  @abc.abstractmethod
  def DemoteMaster(self, request, timeout):
    raise NotImplementedError()
  DemoteMaster.future = None
  @abc.abstractmethod
  def PromoteSlaveWhenCaughtUp(self, request, timeout):
    raise NotImplementedError()
  PromoteSlaveWhenCaughtUp.future = None
  @abc.abstractmethod
  def SlaveWasPromoted(self, request, timeout):
    raise NotImplementedError()
  SlaveWasPromoted.future = None
  @abc.abstractmethod
  def SetMaster(self, request, timeout):
    raise NotImplementedError()
  SetMaster.future = None
  @abc.abstractmethod
  def SlaveWasRestarted(self, request, timeout):
    raise NotImplementedError()
  SlaveWasRestarted.future = None
  @abc.abstractmethod
  def StopReplicationAndGetStatus(self, request, timeout):
    raise NotImplementedError()
  StopReplicationAndGetStatus.future = None
  @abc.abstractmethod
  def PromoteSlave(self, request, timeout):
    raise NotImplementedError()
  PromoteSlave.future = None
  @abc.abstractmethod
  def Backup(self, request, timeout):
    raise NotImplementedError()
  @abc.abstractmethod
  def RestoreFromBackup(self, request, timeout):
    raise NotImplementedError()

def beta_create_TabletManager_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  request_deserializers = {
    ('tabletmanagerservice.TabletManager', 'ApplySchema'): tabletmanagerdata_pb2.ApplySchemaRequest.FromString,
    ('tabletmanagerservice.TabletManager', 'Backup'): tabletmanagerdata_pb2.BackupRequest.FromString,
    ('tabletmanagerservice.TabletManager', 'ChangeType'): tabletmanagerdata_pb2.ChangeTypeRequest.FromString,
    ('tabletmanagerservice.TabletManager', 'DemoteMaster'): tabletmanagerdata_pb2.DemoteMasterRequest.FromString,
    ('tabletmanagerservice.TabletManager', 'ExecuteFetchAsApp'): tabletmanagerdata_pb2.ExecuteFetchAsAppRequest.FromString,
    ('tabletmanagerservice.TabletManager', 'ExecuteFetchAsDba'): tabletmanagerdata_pb2.ExecuteFetchAsDbaRequest.FromString,
    ('tabletmanagerservice.TabletManager', 'ExecuteHook'): tabletmanagerdata_pb2.ExecuteHookRequest.FromString,
    ('tabletmanagerservice.TabletManager', 'GetPermissions'): tabletmanagerdata_pb2.GetPermissionsRequest.FromString,
    ('tabletmanagerservice.TabletManager', 'GetSchema'): tabletmanagerdata_pb2.GetSchemaRequest.FromString,
    ('tabletmanagerservice.TabletManager', 'GetSlaves'): tabletmanagerdata_pb2.GetSlavesRequest.FromString,
    ('tabletmanagerservice.TabletManager', 'IgnoreHealthError'): tabletmanagerdata_pb2.IgnoreHealthErrorRequest.FromString,
    ('tabletmanagerservice.TabletManager', 'InitMaster'): tabletmanagerdata_pb2.InitMasterRequest.FromString,
    ('tabletmanagerservice.TabletManager', 'InitSlave'): tabletmanagerdata_pb2.InitSlaveRequest.FromString,
    ('tabletmanagerservice.TabletManager', 'MasterPosition'): tabletmanagerdata_pb2.MasterPositionRequest.FromString,
    ('tabletmanagerservice.TabletManager', 'Ping'): tabletmanagerdata_pb2.PingRequest.FromString,
    ('tabletmanagerservice.TabletManager', 'PopulateReparentJournal'): tabletmanagerdata_pb2.PopulateReparentJournalRequest.FromString,
    ('tabletmanagerservice.TabletManager', 'PreflightSchema'): tabletmanagerdata_pb2.PreflightSchemaRequest.FromString,
    ('tabletmanagerservice.TabletManager', 'PromoteSlave'): tabletmanagerdata_pb2.PromoteSlaveRequest.FromString,
    ('tabletmanagerservice.TabletManager', 'PromoteSlaveWhenCaughtUp'): tabletmanagerdata_pb2.PromoteSlaveWhenCaughtUpRequest.FromString,
    ('tabletmanagerservice.TabletManager', 'RefreshState'): tabletmanagerdata_pb2.RefreshStateRequest.FromString,
    ('tabletmanagerservice.TabletManager', 'ReloadSchema'): tabletmanagerdata_pb2.ReloadSchemaRequest.FromString,
    ('tabletmanagerservice.TabletManager', 'ResetReplication'): tabletmanagerdata_pb2.ResetReplicationRequest.FromString,
    ('tabletmanagerservice.TabletManager', 'RestoreFromBackup'): tabletmanagerdata_pb2.RestoreFromBackupRequest.FromString,
    ('tabletmanagerservice.TabletManager', 'RunBlpUntil'): tabletmanagerdata_pb2.RunBlpUntilRequest.FromString,
    ('tabletmanagerservice.TabletManager', 'RunHealthCheck'): tabletmanagerdata_pb2.RunHealthCheckRequest.FromString,
    ('tabletmanagerservice.TabletManager', 'SetMaster'): tabletmanagerdata_pb2.SetMasterRequest.FromString,
    ('tabletmanagerservice.TabletManager', 'SetReadOnly'): tabletmanagerdata_pb2.SetReadOnlyRequest.FromString,
    ('tabletmanagerservice.TabletManager', 'SetReadWrite'): tabletmanagerdata_pb2.SetReadWriteRequest.FromString,
    ('tabletmanagerservice.TabletManager', 'SlaveStatus'): tabletmanagerdata_pb2.SlaveStatusRequest.FromString,
    ('tabletmanagerservice.TabletManager', 'SlaveWasPromoted'): tabletmanagerdata_pb2.SlaveWasPromotedRequest.FromString,
    ('tabletmanagerservice.TabletManager', 'SlaveWasRestarted'): tabletmanagerdata_pb2.SlaveWasRestartedRequest.FromString,
    ('tabletmanagerservice.TabletManager', 'Sleep'): tabletmanagerdata_pb2.SleepRequest.FromString,
    ('tabletmanagerservice.TabletManager', 'StartBlp'): tabletmanagerdata_pb2.StartBlpRequest.FromString,
    ('tabletmanagerservice.TabletManager', 'StartSlave'): tabletmanagerdata_pb2.StartSlaveRequest.FromString,
    ('tabletmanagerservice.TabletManager', 'StopBlp'): tabletmanagerdata_pb2.StopBlpRequest.FromString,
    ('tabletmanagerservice.TabletManager', 'StopReplicationAndGetStatus'): tabletmanagerdata_pb2.StopReplicationAndGetStatusRequest.FromString,
    ('tabletmanagerservice.TabletManager', 'StopSlave'): tabletmanagerdata_pb2.StopSlaveRequest.FromString,
    ('tabletmanagerservice.TabletManager', 'StopSlaveMinimum'): tabletmanagerdata_pb2.StopSlaveMinimumRequest.FromString,
    ('tabletmanagerservice.TabletManager', 'TabletExternallyElected'): tabletmanagerdata_pb2.TabletExternallyElectedRequest.FromString,
    ('tabletmanagerservice.TabletManager', 'TabletExternallyReparented'): tabletmanagerdata_pb2.TabletExternallyReparentedRequest.FromString,
    ('tabletmanagerservice.TabletManager', 'WaitBlpPosition'): tabletmanagerdata_pb2.WaitBlpPositionRequest.FromString,
  }
  response_serializers = {
    ('tabletmanagerservice.TabletManager', 'ApplySchema'): tabletmanagerdata_pb2.ApplySchemaResponse.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'Backup'): tabletmanagerdata_pb2.BackupResponse.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'ChangeType'): tabletmanagerdata_pb2.ChangeTypeResponse.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'DemoteMaster'): tabletmanagerdata_pb2.DemoteMasterResponse.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'ExecuteFetchAsApp'): tabletmanagerdata_pb2.ExecuteFetchAsAppResponse.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'ExecuteFetchAsDba'): tabletmanagerdata_pb2.ExecuteFetchAsDbaResponse.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'ExecuteHook'): tabletmanagerdata_pb2.ExecuteHookResponse.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'GetPermissions'): tabletmanagerdata_pb2.GetPermissionsResponse.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'GetSchema'): tabletmanagerdata_pb2.GetSchemaResponse.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'GetSlaves'): tabletmanagerdata_pb2.GetSlavesResponse.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'IgnoreHealthError'): tabletmanagerdata_pb2.IgnoreHealthErrorResponse.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'InitMaster'): tabletmanagerdata_pb2.InitMasterResponse.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'InitSlave'): tabletmanagerdata_pb2.InitSlaveResponse.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'MasterPosition'): tabletmanagerdata_pb2.MasterPositionResponse.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'Ping'): tabletmanagerdata_pb2.PingResponse.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'PopulateReparentJournal'): tabletmanagerdata_pb2.PopulateReparentJournalResponse.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'PreflightSchema'): tabletmanagerdata_pb2.PreflightSchemaResponse.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'PromoteSlave'): tabletmanagerdata_pb2.PromoteSlaveResponse.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'PromoteSlaveWhenCaughtUp'): tabletmanagerdata_pb2.PromoteSlaveWhenCaughtUpResponse.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'RefreshState'): tabletmanagerdata_pb2.RefreshStateResponse.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'ReloadSchema'): tabletmanagerdata_pb2.ReloadSchemaResponse.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'ResetReplication'): tabletmanagerdata_pb2.ResetReplicationResponse.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'RestoreFromBackup'): tabletmanagerdata_pb2.RestoreFromBackupResponse.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'RunBlpUntil'): tabletmanagerdata_pb2.RunBlpUntilResponse.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'RunHealthCheck'): tabletmanagerdata_pb2.RunHealthCheckResponse.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'SetMaster'): tabletmanagerdata_pb2.SetMasterResponse.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'SetReadOnly'): tabletmanagerdata_pb2.SetReadOnlyResponse.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'SetReadWrite'): tabletmanagerdata_pb2.SetReadWriteResponse.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'SlaveStatus'): tabletmanagerdata_pb2.SlaveStatusResponse.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'SlaveWasPromoted'): tabletmanagerdata_pb2.SlaveWasPromotedResponse.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'SlaveWasRestarted'): tabletmanagerdata_pb2.SlaveWasRestartedResponse.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'Sleep'): tabletmanagerdata_pb2.SleepResponse.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'StartBlp'): tabletmanagerdata_pb2.StartBlpResponse.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'StartSlave'): tabletmanagerdata_pb2.StartSlaveResponse.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'StopBlp'): tabletmanagerdata_pb2.StopBlpResponse.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'StopReplicationAndGetStatus'): tabletmanagerdata_pb2.StopReplicationAndGetStatusResponse.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'StopSlave'): tabletmanagerdata_pb2.StopSlaveResponse.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'StopSlaveMinimum'): tabletmanagerdata_pb2.StopSlaveMinimumResponse.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'TabletExternallyElected'): tabletmanagerdata_pb2.TabletExternallyElectedResponse.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'TabletExternallyReparented'): tabletmanagerdata_pb2.TabletExternallyReparentedResponse.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'WaitBlpPosition'): tabletmanagerdata_pb2.WaitBlpPositionResponse.SerializeToString,
  }
  method_implementations = {
    ('tabletmanagerservice.TabletManager', 'ApplySchema'): face_utilities.unary_unary_inline(servicer.ApplySchema),
    ('tabletmanagerservice.TabletManager', 'Backup'): face_utilities.unary_stream_inline(servicer.Backup),
    ('tabletmanagerservice.TabletManager', 'ChangeType'): face_utilities.unary_unary_inline(servicer.ChangeType),
    ('tabletmanagerservice.TabletManager', 'DemoteMaster'): face_utilities.unary_unary_inline(servicer.DemoteMaster),
    ('tabletmanagerservice.TabletManager', 'ExecuteFetchAsApp'): face_utilities.unary_unary_inline(servicer.ExecuteFetchAsApp),
    ('tabletmanagerservice.TabletManager', 'ExecuteFetchAsDba'): face_utilities.unary_unary_inline(servicer.ExecuteFetchAsDba),
    ('tabletmanagerservice.TabletManager', 'ExecuteHook'): face_utilities.unary_unary_inline(servicer.ExecuteHook),
    ('tabletmanagerservice.TabletManager', 'GetPermissions'): face_utilities.unary_unary_inline(servicer.GetPermissions),
    ('tabletmanagerservice.TabletManager', 'GetSchema'): face_utilities.unary_unary_inline(servicer.GetSchema),
    ('tabletmanagerservice.TabletManager', 'GetSlaves'): face_utilities.unary_unary_inline(servicer.GetSlaves),
    ('tabletmanagerservice.TabletManager', 'IgnoreHealthError'): face_utilities.unary_unary_inline(servicer.IgnoreHealthError),
    ('tabletmanagerservice.TabletManager', 'InitMaster'): face_utilities.unary_unary_inline(servicer.InitMaster),
    ('tabletmanagerservice.TabletManager', 'InitSlave'): face_utilities.unary_unary_inline(servicer.InitSlave),
    ('tabletmanagerservice.TabletManager', 'MasterPosition'): face_utilities.unary_unary_inline(servicer.MasterPosition),
    ('tabletmanagerservice.TabletManager', 'Ping'): face_utilities.unary_unary_inline(servicer.Ping),
    ('tabletmanagerservice.TabletManager', 'PopulateReparentJournal'): face_utilities.unary_unary_inline(servicer.PopulateReparentJournal),
    ('tabletmanagerservice.TabletManager', 'PreflightSchema'): face_utilities.unary_unary_inline(servicer.PreflightSchema),
    ('tabletmanagerservice.TabletManager', 'PromoteSlave'): face_utilities.unary_unary_inline(servicer.PromoteSlave),
    ('tabletmanagerservice.TabletManager', 'PromoteSlaveWhenCaughtUp'): face_utilities.unary_unary_inline(servicer.PromoteSlaveWhenCaughtUp),
    ('tabletmanagerservice.TabletManager', 'RefreshState'): face_utilities.unary_unary_inline(servicer.RefreshState),
    ('tabletmanagerservice.TabletManager', 'ReloadSchema'): face_utilities.unary_unary_inline(servicer.ReloadSchema),
    ('tabletmanagerservice.TabletManager', 'ResetReplication'): face_utilities.unary_unary_inline(servicer.ResetReplication),
    ('tabletmanagerservice.TabletManager', 'RestoreFromBackup'): face_utilities.unary_stream_inline(servicer.RestoreFromBackup),
    ('tabletmanagerservice.TabletManager', 'RunBlpUntil'): face_utilities.unary_unary_inline(servicer.RunBlpUntil),
    ('tabletmanagerservice.TabletManager', 'RunHealthCheck'): face_utilities.unary_unary_inline(servicer.RunHealthCheck),
    ('tabletmanagerservice.TabletManager', 'SetMaster'): face_utilities.unary_unary_inline(servicer.SetMaster),
    ('tabletmanagerservice.TabletManager', 'SetReadOnly'): face_utilities.unary_unary_inline(servicer.SetReadOnly),
    ('tabletmanagerservice.TabletManager', 'SetReadWrite'): face_utilities.unary_unary_inline(servicer.SetReadWrite),
    ('tabletmanagerservice.TabletManager', 'SlaveStatus'): face_utilities.unary_unary_inline(servicer.SlaveStatus),
    ('tabletmanagerservice.TabletManager', 'SlaveWasPromoted'): face_utilities.unary_unary_inline(servicer.SlaveWasPromoted),
    ('tabletmanagerservice.TabletManager', 'SlaveWasRestarted'): face_utilities.unary_unary_inline(servicer.SlaveWasRestarted),
    ('tabletmanagerservice.TabletManager', 'Sleep'): face_utilities.unary_unary_inline(servicer.Sleep),
    ('tabletmanagerservice.TabletManager', 'StartBlp'): face_utilities.unary_unary_inline(servicer.StartBlp),
    ('tabletmanagerservice.TabletManager', 'StartSlave'): face_utilities.unary_unary_inline(servicer.StartSlave),
    ('tabletmanagerservice.TabletManager', 'StopBlp'): face_utilities.unary_unary_inline(servicer.StopBlp),
    ('tabletmanagerservice.TabletManager', 'StopReplicationAndGetStatus'): face_utilities.unary_unary_inline(servicer.StopReplicationAndGetStatus),
    ('tabletmanagerservice.TabletManager', 'StopSlave'): face_utilities.unary_unary_inline(servicer.StopSlave),
    ('tabletmanagerservice.TabletManager', 'StopSlaveMinimum'): face_utilities.unary_unary_inline(servicer.StopSlaveMinimum),
    ('tabletmanagerservice.TabletManager', 'TabletExternallyElected'): face_utilities.unary_unary_inline(servicer.TabletExternallyElected),
    ('tabletmanagerservice.TabletManager', 'TabletExternallyReparented'): face_utilities.unary_unary_inline(servicer.TabletExternallyReparented),
    ('tabletmanagerservice.TabletManager', 'WaitBlpPosition'): face_utilities.unary_unary_inline(servicer.WaitBlpPosition),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)

def beta_create_TabletManager_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  import tabletmanagerdata_pb2
  request_serializers = {
    ('tabletmanagerservice.TabletManager', 'ApplySchema'): tabletmanagerdata_pb2.ApplySchemaRequest.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'Backup'): tabletmanagerdata_pb2.BackupRequest.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'ChangeType'): tabletmanagerdata_pb2.ChangeTypeRequest.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'DemoteMaster'): tabletmanagerdata_pb2.DemoteMasterRequest.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'ExecuteFetchAsApp'): tabletmanagerdata_pb2.ExecuteFetchAsAppRequest.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'ExecuteFetchAsDba'): tabletmanagerdata_pb2.ExecuteFetchAsDbaRequest.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'ExecuteHook'): tabletmanagerdata_pb2.ExecuteHookRequest.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'GetPermissions'): tabletmanagerdata_pb2.GetPermissionsRequest.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'GetSchema'): tabletmanagerdata_pb2.GetSchemaRequest.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'GetSlaves'): tabletmanagerdata_pb2.GetSlavesRequest.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'IgnoreHealthError'): tabletmanagerdata_pb2.IgnoreHealthErrorRequest.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'InitMaster'): tabletmanagerdata_pb2.InitMasterRequest.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'InitSlave'): tabletmanagerdata_pb2.InitSlaveRequest.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'MasterPosition'): tabletmanagerdata_pb2.MasterPositionRequest.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'Ping'): tabletmanagerdata_pb2.PingRequest.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'PopulateReparentJournal'): tabletmanagerdata_pb2.PopulateReparentJournalRequest.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'PreflightSchema'): tabletmanagerdata_pb2.PreflightSchemaRequest.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'PromoteSlave'): tabletmanagerdata_pb2.PromoteSlaveRequest.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'PromoteSlaveWhenCaughtUp'): tabletmanagerdata_pb2.PromoteSlaveWhenCaughtUpRequest.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'RefreshState'): tabletmanagerdata_pb2.RefreshStateRequest.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'ReloadSchema'): tabletmanagerdata_pb2.ReloadSchemaRequest.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'ResetReplication'): tabletmanagerdata_pb2.ResetReplicationRequest.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'RestoreFromBackup'): tabletmanagerdata_pb2.RestoreFromBackupRequest.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'RunBlpUntil'): tabletmanagerdata_pb2.RunBlpUntilRequest.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'RunHealthCheck'): tabletmanagerdata_pb2.RunHealthCheckRequest.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'SetMaster'): tabletmanagerdata_pb2.SetMasterRequest.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'SetReadOnly'): tabletmanagerdata_pb2.SetReadOnlyRequest.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'SetReadWrite'): tabletmanagerdata_pb2.SetReadWriteRequest.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'SlaveStatus'): tabletmanagerdata_pb2.SlaveStatusRequest.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'SlaveWasPromoted'): tabletmanagerdata_pb2.SlaveWasPromotedRequest.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'SlaveWasRestarted'): tabletmanagerdata_pb2.SlaveWasRestartedRequest.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'Sleep'): tabletmanagerdata_pb2.SleepRequest.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'StartBlp'): tabletmanagerdata_pb2.StartBlpRequest.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'StartSlave'): tabletmanagerdata_pb2.StartSlaveRequest.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'StopBlp'): tabletmanagerdata_pb2.StopBlpRequest.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'StopReplicationAndGetStatus'): tabletmanagerdata_pb2.StopReplicationAndGetStatusRequest.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'StopSlave'): tabletmanagerdata_pb2.StopSlaveRequest.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'StopSlaveMinimum'): tabletmanagerdata_pb2.StopSlaveMinimumRequest.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'TabletExternallyElected'): tabletmanagerdata_pb2.TabletExternallyElectedRequest.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'TabletExternallyReparented'): tabletmanagerdata_pb2.TabletExternallyReparentedRequest.SerializeToString,
    ('tabletmanagerservice.TabletManager', 'WaitBlpPosition'): tabletmanagerdata_pb2.WaitBlpPositionRequest.SerializeToString,
  }
  response_deserializers = {
    ('tabletmanagerservice.TabletManager', 'ApplySchema'): tabletmanagerdata_pb2.ApplySchemaResponse.FromString,
    ('tabletmanagerservice.TabletManager', 'Backup'): tabletmanagerdata_pb2.BackupResponse.FromString,
    ('tabletmanagerservice.TabletManager', 'ChangeType'): tabletmanagerdata_pb2.ChangeTypeResponse.FromString,
    ('tabletmanagerservice.TabletManager', 'DemoteMaster'): tabletmanagerdata_pb2.DemoteMasterResponse.FromString,
    ('tabletmanagerservice.TabletManager', 'ExecuteFetchAsApp'): tabletmanagerdata_pb2.ExecuteFetchAsAppResponse.FromString,
    ('tabletmanagerservice.TabletManager', 'ExecuteFetchAsDba'): tabletmanagerdata_pb2.ExecuteFetchAsDbaResponse.FromString,
    ('tabletmanagerservice.TabletManager', 'ExecuteHook'): tabletmanagerdata_pb2.ExecuteHookResponse.FromString,
    ('tabletmanagerservice.TabletManager', 'GetPermissions'): tabletmanagerdata_pb2.GetPermissionsResponse.FromString,
    ('tabletmanagerservice.TabletManager', 'GetSchema'): tabletmanagerdata_pb2.GetSchemaResponse.FromString,
    ('tabletmanagerservice.TabletManager', 'GetSlaves'): tabletmanagerdata_pb2.GetSlavesResponse.FromString,
    ('tabletmanagerservice.TabletManager', 'IgnoreHealthError'): tabletmanagerdata_pb2.IgnoreHealthErrorResponse.FromString,
    ('tabletmanagerservice.TabletManager', 'InitMaster'): tabletmanagerdata_pb2.InitMasterResponse.FromString,
    ('tabletmanagerservice.TabletManager', 'InitSlave'): tabletmanagerdata_pb2.InitSlaveResponse.FromString,
    ('tabletmanagerservice.TabletManager', 'MasterPosition'): tabletmanagerdata_pb2.MasterPositionResponse.FromString,
    ('tabletmanagerservice.TabletManager', 'Ping'): tabletmanagerdata_pb2.PingResponse.FromString,
    ('tabletmanagerservice.TabletManager', 'PopulateReparentJournal'): tabletmanagerdata_pb2.PopulateReparentJournalResponse.FromString,
    ('tabletmanagerservice.TabletManager', 'PreflightSchema'): tabletmanagerdata_pb2.PreflightSchemaResponse.FromString,
    ('tabletmanagerservice.TabletManager', 'PromoteSlave'): tabletmanagerdata_pb2.PromoteSlaveResponse.FromString,
    ('tabletmanagerservice.TabletManager', 'PromoteSlaveWhenCaughtUp'): tabletmanagerdata_pb2.PromoteSlaveWhenCaughtUpResponse.FromString,
    ('tabletmanagerservice.TabletManager', 'RefreshState'): tabletmanagerdata_pb2.RefreshStateResponse.FromString,
    ('tabletmanagerservice.TabletManager', 'ReloadSchema'): tabletmanagerdata_pb2.ReloadSchemaResponse.FromString,
    ('tabletmanagerservice.TabletManager', 'ResetReplication'): tabletmanagerdata_pb2.ResetReplicationResponse.FromString,
    ('tabletmanagerservice.TabletManager', 'RestoreFromBackup'): tabletmanagerdata_pb2.RestoreFromBackupResponse.FromString,
    ('tabletmanagerservice.TabletManager', 'RunBlpUntil'): tabletmanagerdata_pb2.RunBlpUntilResponse.FromString,
    ('tabletmanagerservice.TabletManager', 'RunHealthCheck'): tabletmanagerdata_pb2.RunHealthCheckResponse.FromString,
    ('tabletmanagerservice.TabletManager', 'SetMaster'): tabletmanagerdata_pb2.SetMasterResponse.FromString,
    ('tabletmanagerservice.TabletManager', 'SetReadOnly'): tabletmanagerdata_pb2.SetReadOnlyResponse.FromString,
    ('tabletmanagerservice.TabletManager', 'SetReadWrite'): tabletmanagerdata_pb2.SetReadWriteResponse.FromString,
    ('tabletmanagerservice.TabletManager', 'SlaveStatus'): tabletmanagerdata_pb2.SlaveStatusResponse.FromString,
    ('tabletmanagerservice.TabletManager', 'SlaveWasPromoted'): tabletmanagerdata_pb2.SlaveWasPromotedResponse.FromString,
    ('tabletmanagerservice.TabletManager', 'SlaveWasRestarted'): tabletmanagerdata_pb2.SlaveWasRestartedResponse.FromString,
    ('tabletmanagerservice.TabletManager', 'Sleep'): tabletmanagerdata_pb2.SleepResponse.FromString,
    ('tabletmanagerservice.TabletManager', 'StartBlp'): tabletmanagerdata_pb2.StartBlpResponse.FromString,
    ('tabletmanagerservice.TabletManager', 'StartSlave'): tabletmanagerdata_pb2.StartSlaveResponse.FromString,
    ('tabletmanagerservice.TabletManager', 'StopBlp'): tabletmanagerdata_pb2.StopBlpResponse.FromString,
    ('tabletmanagerservice.TabletManager', 'StopReplicationAndGetStatus'): tabletmanagerdata_pb2.StopReplicationAndGetStatusResponse.FromString,
    ('tabletmanagerservice.TabletManager', 'StopSlave'): tabletmanagerdata_pb2.StopSlaveResponse.FromString,
    ('tabletmanagerservice.TabletManager', 'StopSlaveMinimum'): tabletmanagerdata_pb2.StopSlaveMinimumResponse.FromString,
    ('tabletmanagerservice.TabletManager', 'TabletExternallyElected'): tabletmanagerdata_pb2.TabletExternallyElectedResponse.FromString,
    ('tabletmanagerservice.TabletManager', 'TabletExternallyReparented'): tabletmanagerdata_pb2.TabletExternallyReparentedResponse.FromString,
    ('tabletmanagerservice.TabletManager', 'WaitBlpPosition'): tabletmanagerdata_pb2.WaitBlpPositionResponse.FromString,
  }
  cardinalities = {
    'ApplySchema': cardinality.Cardinality.UNARY_UNARY,
    'Backup': cardinality.Cardinality.UNARY_STREAM,
    'ChangeType': cardinality.Cardinality.UNARY_UNARY,
    'DemoteMaster': cardinality.Cardinality.UNARY_UNARY,
    'ExecuteFetchAsApp': cardinality.Cardinality.UNARY_UNARY,
    'ExecuteFetchAsDba': cardinality.Cardinality.UNARY_UNARY,
    'ExecuteHook': cardinality.Cardinality.UNARY_UNARY,
    'GetPermissions': cardinality.Cardinality.UNARY_UNARY,
    'GetSchema': cardinality.Cardinality.UNARY_UNARY,
    'GetSlaves': cardinality.Cardinality.UNARY_UNARY,
    'IgnoreHealthError': cardinality.Cardinality.UNARY_UNARY,
    'InitMaster': cardinality.Cardinality.UNARY_UNARY,
    'InitSlave': cardinality.Cardinality.UNARY_UNARY,
    'MasterPosition': cardinality.Cardinality.UNARY_UNARY,
    'Ping': cardinality.Cardinality.UNARY_UNARY,
    'PopulateReparentJournal': cardinality.Cardinality.UNARY_UNARY,
    'PreflightSchema': cardinality.Cardinality.UNARY_UNARY,
    'PromoteSlave': cardinality.Cardinality.UNARY_UNARY,
    'PromoteSlaveWhenCaughtUp': cardinality.Cardinality.UNARY_UNARY,
    'RefreshState': cardinality.Cardinality.UNARY_UNARY,
    'ReloadSchema': cardinality.Cardinality.UNARY_UNARY,
    'ResetReplication': cardinality.Cardinality.UNARY_UNARY,
    'RestoreFromBackup': cardinality.Cardinality.UNARY_STREAM,
    'RunBlpUntil': cardinality.Cardinality.UNARY_UNARY,
    'RunHealthCheck': cardinality.Cardinality.UNARY_UNARY,
    'SetMaster': cardinality.Cardinality.UNARY_UNARY,
    'SetReadOnly': cardinality.Cardinality.UNARY_UNARY,
    'SetReadWrite': cardinality.Cardinality.UNARY_UNARY,
    'SlaveStatus': cardinality.Cardinality.UNARY_UNARY,
    'SlaveWasPromoted': cardinality.Cardinality.UNARY_UNARY,
    'SlaveWasRestarted': cardinality.Cardinality.UNARY_UNARY,
    'Sleep': cardinality.Cardinality.UNARY_UNARY,
    'StartBlp': cardinality.Cardinality.UNARY_UNARY,
    'StartSlave': cardinality.Cardinality.UNARY_UNARY,
    'StopBlp': cardinality.Cardinality.UNARY_UNARY,
    'StopReplicationAndGetStatus': cardinality.Cardinality.UNARY_UNARY,
    'StopSlave': cardinality.Cardinality.UNARY_UNARY,
    'StopSlaveMinimum': cardinality.Cardinality.UNARY_UNARY,
    'TabletExternallyElected': cardinality.Cardinality.UNARY_UNARY,
    'TabletExternallyReparented': cardinality.Cardinality.UNARY_UNARY,
    'WaitBlpPosition': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'tabletmanagerservice.TabletManager', cardinalities, options=stub_options)
# @@protoc_insertion_point(module_scope)
