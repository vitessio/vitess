# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import mysqlctl_pb2 as mysqlctl__pb2


class MysqlCtlStub(object):
  """MysqlCtl is the service definition
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Start = channel.unary_unary(
        '/mysqlctl.MysqlCtl/Start',
        request_serializer=mysqlctl__pb2.StartRequest.SerializeToString,
        response_deserializer=mysqlctl__pb2.StartResponse.FromString,
        )
    self.Shutdown = channel.unary_unary(
        '/mysqlctl.MysqlCtl/Shutdown',
        request_serializer=mysqlctl__pb2.ShutdownRequest.SerializeToString,
        response_deserializer=mysqlctl__pb2.ShutdownResponse.FromString,
        )
    self.RunMysqlUpgrade = channel.unary_unary(
        '/mysqlctl.MysqlCtl/RunMysqlUpgrade',
        request_serializer=mysqlctl__pb2.RunMysqlUpgradeRequest.SerializeToString,
        response_deserializer=mysqlctl__pb2.RunMysqlUpgradeResponse.FromString,
        )
    self.ReinitConfig = channel.unary_unary(
        '/mysqlctl.MysqlCtl/ReinitConfig',
        request_serializer=mysqlctl__pb2.ReinitConfigRequest.SerializeToString,
        response_deserializer=mysqlctl__pb2.ReinitConfigResponse.FromString,
        )
    self.RefreshConfig = channel.unary_unary(
        '/mysqlctl.MysqlCtl/RefreshConfig',
        request_serializer=mysqlctl__pb2.RefreshConfigRequest.SerializeToString,
        response_deserializer=mysqlctl__pb2.RefreshConfigResponse.FromString,
        )


class MysqlCtlServicer(object):
  """MysqlCtl is the service definition
  """

  def Start(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Shutdown(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RunMysqlUpgrade(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ReinitConfig(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RefreshConfig(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MysqlCtlServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Start': grpc.unary_unary_rpc_method_handler(
          servicer.Start,
          request_deserializer=mysqlctl__pb2.StartRequest.FromString,
          response_serializer=mysqlctl__pb2.StartResponse.SerializeToString,
      ),
      'Shutdown': grpc.unary_unary_rpc_method_handler(
          servicer.Shutdown,
          request_deserializer=mysqlctl__pb2.ShutdownRequest.FromString,
          response_serializer=mysqlctl__pb2.ShutdownResponse.SerializeToString,
      ),
      'RunMysqlUpgrade': grpc.unary_unary_rpc_method_handler(
          servicer.RunMysqlUpgrade,
          request_deserializer=mysqlctl__pb2.RunMysqlUpgradeRequest.FromString,
          response_serializer=mysqlctl__pb2.RunMysqlUpgradeResponse.SerializeToString,
      ),
      'ReinitConfig': grpc.unary_unary_rpc_method_handler(
          servicer.ReinitConfig,
          request_deserializer=mysqlctl__pb2.ReinitConfigRequest.FromString,
          response_serializer=mysqlctl__pb2.ReinitConfigResponse.SerializeToString,
      ),
      'RefreshConfig': grpc.unary_unary_rpc_method_handler(
          servicer.RefreshConfig,
          request_deserializer=mysqlctl__pb2.RefreshConfigRequest.FromString,
          response_serializer=mysqlctl__pb2.RefreshConfigResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'mysqlctl.MysqlCtl', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
