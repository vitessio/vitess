# insert unsharded
"insert into main1 values(1, 2)"
{
  "ID": "InsertUnsharded",
  "Table": "main1",
  "Original": "insert into main1 values(1, 2)",
  "Rewritten": "insert into main1 values (1, 2)"
}

# insert no column list
"insert into user values(1, 2, 3)"
{
  "Reason": "no column list",
  "Table": "user",
  "Original": "insert into user values(1, 2, 3)"
}

# insert from select
"insert into user(id) select 1 from dual"
{
  "Reason": "subqueries not allowed",
  "Table": "user",
  "Original": "insert into user(id) select 1 from dual"
}

# insert with multiple rows
"insert into user(id) values (1), (2)"
{
  "Reason": "multi-row inserts not supported",
  "Table": "user",
  "Original": "insert into user(id) values (1), (2)"
}

# insert with subquery as value
"insert into user(id) values (select 1 from dual)"
{
  "Reason": "subqueries not allowed",
  "Table": "user",
  "Original": "insert into user(id) values (select 1 from dual)"
}

# insert with mimatched column list
"insert into user(id) values (1, 2)"
{
  "Reason": "column list doesn't match values",
  "Table": "user",
  "Original": "insert into user(id) values (1, 2)"
}

# insert with one vindex
"insert into user(id) values (1)"
{
  "ID": "InsertSharded",
  "Table": "user",
  "Original": "insert into user(id) values (1)",
  "Rewritten": "insert into user(id, name) values (:_id, :_name)",
  "Values": [1, null]
}

# insert with non vindex
"insert into user(nonid) values (2)"
{
  "ID": "InsertSharded",
  "Table": "user",
  "Original": "insert into user(nonid) values (2)",
  "Rewritten": "insert into user(nonid, id, name) values (2, :_id, :_name)",
  "Values": [null, null]
}

# insert with all vindexes supplied
"insert into user(nonid, name, id) values (2, 'foo', 1)"
{
  "ID": "InsertSharded",
  "Table": "user",
  "Original": "insert into user(nonid, name, id) values (2, 'foo', 1)",
  "Rewritten": "insert into user(nonid, name, id) values (2, :_name, :_id)",
  "Values": [1,"Zm9v"]
}

# insert invalid index value
"insert into music_extra(music_id, user_id) values(1, 1.1)"
{
  "Reason": "could not convert val: 1.1, pos: 1: strconv.ParseUint: parsing \"1.1\": invalid syntax",
  "Table": "music_extra",
  "Original": "insert into music_extra(music_id, user_id) values(1, 1.1)"
}

# insert invalid index value
"insert into music_extra(music_id, user_id) values(1, id)"
{
  "Reason": "could not convert val: id, pos: 1: id is not a value",
  "Table": "music_extra",
  "Original": "insert into music_extra(music_id, user_id) values(1, id)"
}

# insert invalid table
"insert into noexist(music_id, user_id) values(1, 1.1)"
{
  "Reason": "table noexist not found",
  "Original": "insert into noexist(music_id, user_id) values(1, 1.1)"
}
