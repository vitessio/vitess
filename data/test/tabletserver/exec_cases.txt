# union
"select * from a union select * from b"
{
  "PlanId": "PASS_SELECT",
  "Reason": "SELECT",
  "TableName": "",
  "FieldQuery": "select * from a where 1 != 1 union select * from b where 1 != 1",
  "FullQuery": "select * from a union select * from b",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# distinct
"select distinct * from a"
{
  "PlanId": "PASS_SELECT",
  "Reason": "SELECT",
  "TableName": "a",
  "FieldQuery": "select * from a where 1 != 1",
  "FullQuery": "select distinct * from a limit :#maxLimit",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# grouy by
"select * from a group by b"
{
  "PlanId": "PASS_SELECT",
  "Reason": "SELECT",
  "TableName": "a",
  "FieldQuery": "select * from a where 1 != 1",
  "FullQuery": "select * from a group by b limit :#maxLimit",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# having
"select * from a having b=1"
{
  "PlanId": "PASS_SELECT",
  "Reason": "SELECT",
  "TableName": "a",
  "FieldQuery": "select * from a where 1 != 1",
  "FullQuery": "select * from a having b = 1 limit :#maxLimit",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# limit
"select * from a limit 5"
{
  "PlanId": "PASS_SELECT",
  "Reason": "WHERE",
  "TableName": "a",
  "FieldQuery": "select * from a where 1 != 1",
  "FullQuery": "select * from a limit 5",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": [
    0,
    1,
    2,
    3
  ],
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# cross-db
"select * from a.b"
{
  "PlanId": "PASS_SELECT",
  "Reason": "TABLE",
  "TableName": "",
  "FieldQuery": "select * from a.b where 1 != 1",
  "FullQuery": "select * from a.b limit :#maxLimit",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# multi-table
"select * from a,b"
{
  "PlanId": "PASS_SELECT",
  "Reason": "TABLE",
  "TableName": "",
  "FieldQuery": "select * from a, b where 1 != 1",
  "FullQuery": "select * from a, b limit :#maxLimit",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# multi-table (join)
"select * from a join b"
{
  "PlanId": "PASS_SELECT",
  "Reason": "TABLE",
  "TableName": "",
  "FieldQuery": "select * from a join b where 1 != 1",
  "FullQuery": "select * from a join b limit :#maxLimit",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# multi-table (right join)
"select * from a right join b"
{
  "PlanId": "PASS_SELECT",
  "Reason": "TABLE",
  "TableName": "",
  "FieldQuery": "select * from a right join b on 1 != 1 where 1 != 1",
  "FullQuery": "select * from a right join b limit :#maxLimit",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# table not cached
"select * from b"
{
  "PlanId": "PASS_SELECT",
  "Reason": "NOCACHE",
  "TableName": "b",
  "FieldQuery": "select * from b where 1 != 1",
  "FullQuery": "select * from b limit :#maxLimit",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# Parenthesized table
"select * from (b)"
{
  "PlanId": "PASS_SELECT",
  "Reason": "TABLE",
  "TableName": "",
  "FieldQuery": "select * from (b) where 1 != 1",
  "FullQuery": "select * from (b) limit :#maxLimit",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# bind in select list
"select :bv from a"
{
  "PlanId": "PASS_SELECT",
  "Reason": "SELECT_LIST",
  "TableName": "a",
  "FieldQuery": null,
  "FullQuery": "select :bv from a limit :#maxLimit",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# complex select list
"select eid+1 from a"
{
  "PlanId": "PASS_SELECT",
  "Reason": "SELECT_LIST",
  "TableName": "a",
  "FieldQuery": "select eid + 1 from a where 1 != 1",
  "FullQuery": "select eid + 1 from a limit :#maxLimit",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# case in select list
"select case when eid = 1 then 1 end from a"
{
  "PlanId": "PASS_SELECT",
  "Reason": "SELECT_LIST",
  "TableName": "a",
  "FieldQuery": "select case when eid = 1 then 1 end from a where 1 != 1",
  "FullQuery": "select case when eid = 1 then 1 end from a limit :#maxLimit",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# simple
"select eid from a"
{
  "PlanId": "PASS_SELECT",
  "Reason": "WHERE",
  "TableName": "a",
  "FieldQuery": "select eid from a where 1 != 1",
  "FullQuery": "select eid from a limit :#maxLimit",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": [
    0
  ],
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# as
"select eid as foo from a"
{
  "PlanId": "PASS_SELECT",
  "Reason": "WHERE",
  "TableName": "a",
  "FieldQuery": "select eid as foo from a where 1 != 1",
  "FullQuery": "select eid as foo from a limit :#maxLimit",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": [
    0
  ],
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# *
"select * from a"
{
  "PlanId": "PASS_SELECT",
  "Reason": "WHERE",
  "TableName": "a",
  "FieldQuery": "select * from a where 1 != 1",
  "FullQuery": "select * from a limit :#maxLimit",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": [
    0,
    1,
    2,
    3
  ],
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# c.eid
"select c.eid from a as c"
{
  "PlanId": "PASS_SELECT",
  "Reason": "WHERE",
  "TableName": "a",
  "FieldQuery": "select c.eid from a as c where 1 != 1",
  "FullQuery": "select c.eid from a as c limit :#maxLimit",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": [
    0
  ],
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# (eid)
"select (eid) from a"
{
  "PlanId": "PASS_SELECT",
  "Reason": "SELECT_LIST",
  "TableName": "a",
  "FieldQuery": "select (eid) from a where 1 != 1",
  "FullQuery": "select (eid) from a limit :#maxLimit",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# for update
"select eid from a for update"
{
  "PlanId": "PASS_SELECT",
  "Reason": "LOCK",
  "TableName": "a",
  "FieldQuery": "select eid from a where 1 != 1",
  "FullQuery": "select eid from a limit :#maxLimit for update",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# lock in share mode
"select eid from a lock in share mode"
{
  "PlanId": "PASS_SELECT",
  "Reason": "LOCK",
  "TableName": "a",
  "FieldQuery": "select eid from a where 1 != 1",
  "FullQuery": "select eid from a limit :#maxLimit lock in share mode",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# composite pk supplied values
"select * from a where eid = 1 and id in (1, 2)"
{
  "PlanId": "PK_IN",
  "Reason": "DEFAULT",
  "TableName": "a",
  "FieldQuery": "select * from a where 1 != 1",
  "FullQuery": "select * from a where eid = 1 and id in (1, 2) limit :#maxLimit",
  "OuterQuery": "select eid, id, name, foo from a where :#pk",
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "PRIMARY",
  "ColumnNumbers": [
    0,
    1,
    2,
    3
  ],
  "PKValues": [1,[1,2]],
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# positional arguments
"select * from a where eid = ? and id in (?, ?)"
{
  "PlanId": "PK_IN",
  "Reason": "DEFAULT",
  "TableName": "a",
  "FieldQuery": "select * from a where 1 != 1",
  "FullQuery": "select * from a where eid = :v1 and id in (:v2, :v3) limit :#maxLimit",
  "OuterQuery": "select eid, id, name, foo from a where :#pk",
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "PRIMARY",
  "ColumnNumbers": [
    0,
    1,
    2,
    3
  ],
  "PKValues": [":v1",[":v2",":v3"]],
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# composite pk subquery
"select * from a where name = 'foo'"
{
  "PlanId": "SELECT_SUBQUERY",
  "Reason": "DEFAULT",
  "TableName": "a",
  "FieldQuery": "select * from a where 1 != 1",
  "FullQuery": "select * from a where name = 'foo' limit :#maxLimit",
  "OuterQuery": "select eid, id, name, foo from a where :#pk",
  "Subquery": "select eid, id from a use index (b_name) where name = 'foo' limit :#maxLimit",
  "UpsertQuery": null,
  "IndexUsed": "b_name",
  "ColumnNumbers": [
    0,
    1,
    2,
    3
  ],
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# covering index
"select eid, name, id from a where name = 'foo'"
{
  "PlanId": "PASS_SELECT",
  "Reason": "COVERING",
  "TableName": "a",
  "FieldQuery": "select eid, name, id from a where 1 != 1",
  "FullQuery": "select eid, name, id from a where name = 'foo' limit :#maxLimit",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "b_name",
  "ColumnNumbers": [
    0,
    2,
    1
  ],
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# subquery
"select * from d where id = 1"
{
  "PlanId": "SELECT_SUBQUERY",
  "Reason": "DEFAULT",
  "TableName": "d",
  "FieldQuery": "select * from d where 1 != 1",
  "FullQuery": "select * from d where id = 1 limit :#maxLimit",
  "OuterQuery": "select name, id, foo, bar from d where :#pk",
  "Subquery": "select name from d use index (d_id) where id = 1 limit :#maxLimit",
  "UpsertQuery": null,
  "IndexUsed": "d_id",
  "ColumnNumbers": [
    0,
    1,
    2,
    3
  ],
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# subquery with limit
"select * from d where id = 1 limit 1"
{
  "PlanId": "SELECT_SUBQUERY",
  "Reason": "DEFAULT",
  "TableName": "d",
  "FieldQuery": "select * from d where 1 != 1",
  "FullQuery": "select * from d where id = 1 limit 1",
  "OuterQuery": "select name, id, foo, bar from d where :#pk",
  "Subquery": "select name from d use index (d_id) where id = 1 limit 1",
  "UpsertQuery": null,
  "IndexUsed": "d_id",
  "ColumnNumbers": [
    0,
    1,
    2,
    3
  ],
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# complex where (expression)
"select * from a where eid+1 = 1"
{
  "PlanId": "PASS_SELECT",
  "Reason": "WHERE",
  "TableName": "a",
  "FieldQuery": "select * from a where 1 != 1",
  "FullQuery": "select * from a where eid + 1 = 1 limit :#maxLimit",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": [
    0,
    1,
    2,
    3
  ],
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# complex where (non-value operand)
"select * from a where eid = id"
{
  "PlanId": "PASS_SELECT",
  "Reason": "WHERE",
  "TableName": "a",
  "FieldQuery": "select * from a where 1 != 1",
  "FullQuery": "select * from a where eid = id limit :#maxLimit",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": [
    0,
    1,
    2,
    3
  ],
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# inequality on pk columns
"select * from d where name between 'foo' and 'bar'"
{
  "PlanId": "PASS_SELECT",
  "Reason": "PKINDEX",
  "TableName": "d",
  "FieldQuery": "select * from d where 1 != 1",
  "FullQuery": "select * from d where name between 'foo' and 'bar' limit :#maxLimit",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "PRIMARY",
  "ColumnNumbers": [
    0,
    1,
    2,
    3
  ],
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# (condition)
"select * from a where (eid=1) and (id=2)"
{
  "PlanId": "PK_IN",
  "Reason": "DEFAULT",
  "TableName": "a",
  "FieldQuery": "select * from a where 1 != 1",
  "FullQuery": "select * from a where (eid = 1) and (id = 2) limit :#maxLimit",
  "OuterQuery": "select eid, id, name, foo from a where :#pk",
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "PRIMARY",
  "ColumnNumbers": [
    0,
    1,
    2,
    3
  ],
  "PKValues": [
    1,
    2
  ],
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# pk match
"select * from a where eid=1 and id=1"
{
  "PlanId": "PK_IN",
  "Reason": "DEFAULT",
  "TableName": "a",
  "FieldQuery": "select * from a where 1 != 1",
  "FullQuery": "select * from a where eid = 1 and id = 1 limit :#maxLimit",
  "OuterQuery": "select eid, id, name, foo from a where :#pk",
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "PRIMARY",
  "ColumnNumbers": [
    0,
    1,
    2,
    3
  ],
  "PKValues": [
    1,
    1
  ],
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# disjoint index match
"select * from d where bar='foo' and id=1"
{
  "PlanId": "PASS_SELECT",
  "Reason": "NOINDEX_MATCH",
  "TableName": "d",
  "FieldQuery": "select * from d where 1 != 1",
  "FullQuery": "select * from d where bar = 'foo' and id = 1 limit :#maxLimit",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": [
    0,
    1,
    2,
    3
  ],
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# string pk match
"select * from d where name='foo'"
{
  "PlanId": "PK_IN",
  "Reason": "DEFAULT",
  "TableName": "d",
  "FieldQuery": "select * from d where 1 != 1",
  "FullQuery": "select * from d where name = 'foo' limit :#maxLimit",
  "OuterQuery": "select name, id, foo, bar from d where :#pk",
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "PRIMARY",
  "ColumnNumbers": [
    0,
    1,
    2,
    3
  ],
  "PKValues": [
    "foo"
  ],
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# string pk match with limit
"select * from d where name='foo' limit 1"
{
  "PlanId": "PK_IN",
  "Reason": "DEFAULT",
  "TableName": "d",
  "FieldQuery": "select * from d where 1 != 1",
  "FullQuery": "select * from d where name = 'foo' limit 1",
  "OuterQuery": "select name, id, foo, bar from d where :#pk",
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "PRIMARY",
  "ColumnNumbers": [
    0,
    1,
    2,
    3
  ],
  "PKValues": [
    "foo"
  ],
  "Limit": 1,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# string pk match with limit 0
"select * from d where name='foo' limit 0"
{
  "PlanId": "PK_IN",
  "Reason": "DEFAULT",
  "TableName": "d",
  "FieldQuery": "select * from d where 1 != 1",
  "FullQuery": "select * from d where name = 'foo' limit 0",
  "OuterQuery": "select name, id, foo, bar from d where :#pk",
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "PRIMARY",
  "ColumnNumbers": [
    0,
    1,
    2,
    3
  ],
  "PKValues":[
    "foo"
  ],
  "Limit": 0,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# string pk match with limit bindvar
"select * from d where name='foo' limit :a"
{
  "PlanId": "PK_IN",
  "Reason": "DEFAULT",
  "TableName": "d",
  "FieldQuery": "select * from d where 1 != 1",
  "FullQuery": "select * from d where name = 'foo' limit :a",
  "OuterQuery": "select name, id, foo, bar from d where :#pk",
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "PRIMARY",
  "ColumnNumbers": [
    0,
    1,
    2,
    3
  ],
  "PKValues":[
    "foo"
  ],
  "Limit": ":a",
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# string pk match with offset limit
"select * from d where name='foo' limit 1, 1"
{
  "PlanId": "PASS_SELECT",
  "Reason": "LIMIT",
  "TableName": "d",
  "FieldQuery": "select * from d where 1 != 1",
  "FullQuery": "select * from d where name = 'foo' limit 1, 1",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "PRIMARY",
  "ColumnNumbers": [
    0,
    1,
    2,
    3
  ],
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# string pk match with invalid limit
"select * from d where name='foo' limit (1)"
"unexpected node for rowcount: [[49]]"

# string pk match with negative limit
"select * from d where name='foo' limit -1"
"negative limit: -1"

# string pk match with negative offset
"select * from d where name='foo' limit -1, 1"
"negative offset: -1"

# reversed conditions with and clause
"select * from d where 'foo'=name and eid=1"
{
  "PlanId": "PASS_SELECT",
  "Reason": "WHERE",
  "TableName": "d",
  "FieldQuery": "select * from d where 1 != 1",
  "FullQuery": "select * from d where 'foo' = name and eid = 1 limit :#maxLimit",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": [
    0,
    1,
    2,
    3
  ],
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# pk IN
"select * from d where name in ('foo', 'bar')"
{
  "PlanId": "PK_IN",
  "Reason": "DEFAULT",
  "TableName": "d",
  "FieldQuery": "select * from d where 1 != 1",
  "FullQuery": "select * from d where name in ('foo', 'bar') limit :#maxLimit",
  "OuterQuery": "select name, id, foo, bar from d where :#pk",
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "PRIMARY",
  "ColumnNumbers": [
    0,
    1,
    2,
    3
  ],
  "PKValues": [[
    "foo",
    "bar"
  ]],
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# pk IN parameter list
"select * from d where name in (:a,:b)"
{
  "PlanId": "PK_IN",
  "Reason": "DEFAULT",
  "TableName": "d",
  "FieldQuery": "select * from d where 1 != 1",
  "FullQuery": "select * from d where name in (:a, :b) limit :#maxLimit",
  "OuterQuery": "select name, id, foo, bar from d where :#pk",
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "PRIMARY",
  "ColumnNumbers": [
    0,
    1,
    2,
    3
  ],
  "PKValues": [[
    ":a",
    ":b"
  ]],
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# pk IN, single value list
"select * from d where name in ('foo')"
{
  "PlanId": "PK_IN",
  "Reason": "DEFAULT",
  "TableName": "d",
  "FieldQuery": "select * from d where 1 != 1",
  "FullQuery": "select * from d where name in ('foo') limit :#maxLimit",
  "OuterQuery": "select name, id, foo, bar from d where :#pk",
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "PRIMARY",
  "ColumnNumbers": [
    0,
    1,
    2,
    3
  ],
  "PKValues": [[
    "foo"
  ]],
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# pk IN, single value parameter list
"select * from d where name in (:a)"
{
  "PlanId": "PK_IN",
  "Reason": "DEFAULT",
  "TableName": "d",
  "FieldQuery": "select * from d where 1 != 1",
  "FullQuery": "select * from d where name in (:a) limit :#maxLimit",
  "OuterQuery": "select name, id, foo, bar from d where :#pk",
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "PRIMARY",
  "ColumnNumbers": [
    0,
    1,
    2,
    3
  ],
  "PKValues": [[
    ":a"
  ]],
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# pk IN, limit clause
"select * from d where name in (:a) limit 1"
{
  "PlanId": "PK_IN",
  "Reason": "DEFAULT",
  "TableName": "d",
  "FieldQuery": "select * from d where 1 != 1",
  "FullQuery": "select * from d where name in (:a) limit 1",
  "OuterQuery": "select name, id, foo, bar from d where :#pk",
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "PRIMARY",
  "ColumnNumbers": [
    0,
    1,
    2,
    3
  ],
  "PKValues": [[":a"]],
  "Limit": 1,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# double pk IN
"select * from a where eid in (1) and id in (1, 2)"
{
  "PlanId": "PASS_SELECT",
  "Reason": "WHERE",
  "TableName": "a",
  "FieldQuery": "select * from a where 1 != 1",
  "FullQuery": "select * from a where eid in (1) and id in (1, 2) limit :#maxLimit",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": [
    0,
    1,
    2,
    3
  ],
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# double pk IN 2
"select * from a where eid in (1, 2) and id in (1, 2)"
{
  "PlanId": "PASS_SELECT",
  "Reason": "WHERE",
  "TableName": "a",
  "FieldQuery": "select * from a where 1 != 1",
  "FullQuery": "select * from a where eid in (1, 2) and id in (1, 2) limit :#maxLimit",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": [
    0,
    1,
    2,
    3
  ],
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# pk as tuple
"select * from a where (eid, id) in ((1, 1), (2, 2))"
{
  "PlanId": "PASS_SELECT",
  "Reason": "WHERE",
  "TableName": "a",
  "FieldQuery": "select * from a where 1 != 1",
  "FullQuery": "select * from a where (eid, id) in ((1, 1), (2, 2)) limit :#maxLimit",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": [
    0,
    1,
    2,
    3
  ],
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# no index match
"select * from d where foo='bar'"
{
  "PlanId":"PASS_SELECT",
  "Reason":"NOINDEX_MATCH",
  "TableName":"d",
  "FieldQuery": "select * from d where 1 != 1",
  "FullQuery":"select * from d where foo = 'bar' limit :#maxLimit",
  "OuterQuery": null,
  "Subquery":null,
  "UpsertQuery": null,
  "IndexUsed":"",
  "ColumnNumbers": [
    0,
    1,
    2,
    3
  ],
  "PKValues":null,
  "Limit": null,
  "SecondaryPKValues":null,
  "SubqueryPKColumns":null,
  "SetKey":"",
  "SetValue":null
}

# table alias
"select * from d as c where c.name='foo'"
{
  "PlanId": "PK_IN",
  "Reason": "DEFAULT",
  "TableName": "d",
  "FieldQuery": "select * from d as c where 1 != 1",
  "FullQuery": "select * from d as c where c.name = 'foo' limit :#maxLimit",
  "OuterQuery": "select name, id, foo, bar from d as c where :#pk",
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "PRIMARY",
  "ColumnNumbers": [
    0,
    1,
    2,
    3
  ],
  "PKValues": [
    "foo"
  ],
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# non-pk inequality match
"select * from d where id<0"
{
  "PlanId": "SELECT_SUBQUERY",
  "Reason": "DEFAULT",
  "TableName": "d",
  "FieldQuery": "select * from d where 1 != 1",
  "FullQuery": "select * from d where id \u003c 0 limit :#maxLimit",
  "OuterQuery": "select name, id, foo, bar from d where :#pk",
  "Subquery": "select name from d use index (d_id) where id \u003c 0 limit :#maxLimit",
  "UpsertQuery": null,
  "IndexUsed": "d_id",
  "ColumnNumbers": [
    0,
    1,
    2,
    3
  ],
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# non-pk IN non-value operand
"select * from d where name in ('foo', id)"
{
  "PlanId": "PASS_SELECT",
  "Reason": "WHERE",
  "TableName": "d",
  "FieldQuery": "select * from d where 1 != 1",
  "FullQuery": "select * from d where name in ('foo', id) limit :#maxLimit",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": [
    0,
    1,
    2,
    3
  ],
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# non-pk between
"select * from d where id between 1 and 2"
{
  "PlanId": "SELECT_SUBQUERY",
  "Reason": "DEFAULT",
  "TableName": "d",
  "FieldQuery": "select * from d where 1 != 1",
  "FullQuery": "select * from d where id between 1 and 2 limit :#maxLimit",
  "OuterQuery": "select name, id, foo, bar from d where :#pk",
  "Subquery": "select name from d use index (d_id) where id between 1 and 2 limit :#maxLimit",
  "UpsertQuery": null,
  "IndexUsed": "d_id",
  "ColumnNumbers": [
    0,
    1,
    2,
    3
  ],
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# non-pk not between
"select * from d where id not between 1 and 2"
{
  "PlanId": "PASS_SELECT",
  "Reason": "WHERE",
  "TableName": "d",
  "FieldQuery": "select * from d where 1 != 1",
  "FullQuery": "select * from d where id not between 1 and 2 limit :#maxLimit",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": [
    0,
    1,
    2,
    3
  ],
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# non-column between
"select * from d where 1 between 1 and 2"
{
  "PlanId": "PASS_SELECT",
  "Reason": "WHERE",
  "TableName": "d",
  "FieldQuery": "select * from d where 1 != 1",
  "FullQuery": "select * from d where 1 between 1 and 2 limit :#maxLimit",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": [
    0,
    1,
    2,
    3
  ],
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# complex predicate
"select * from d where name is not null"
{
  "PlanId": "PASS_SELECT",
  "Reason": "WHERE",
  "TableName": "d",
  "FieldQuery": "select * from d where 1 != 1",
  "FullQuery": "select * from d where name is not null limit :#maxLimit",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": [
    0,
    1,
    2,
    3
  ],
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# order by
"select * from a where eid=1 and id=1 order by name"
{
  "PlanId": "PASS_SELECT",
  "Reason": "ORDER",
  "TableName": "a",
  "FieldQuery": "select * from a where 1 != 1",
  "FullQuery": "select * from a where eid = 1 and id = 1 order by name asc limit :#maxLimit",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": [
    0,
    1,
    2,
    3
  ],
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# cardinality override
"select * from d where bar = 'foo'"
{ 
  "PlanId": "SELECT_SUBQUERY",
  "Reason": "DEFAULT",
  "TableName": "d",
  "FieldQuery": "select * from d where 1 != 1",
  "FullQuery": "select * from d where bar = 'foo' limit :#maxLimit",
  "OuterQuery": "select name, id, foo, bar from d where :#pk",
  "Subquery": "select name from d use index (d_bar) where bar = 'foo' limit :#maxLimit",
  "UpsertQuery": null,
  "IndexUsed": "d_bar",
  "ColumnNumbers": [
    0,
    1,
    2,
    3
  ],
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# index override (use)
"select * from d use index(d_bar_never) where bar = 'foo'"
{
  "PlanId": "PASS_SELECT",
  "Reason": "HAS_HINTS",
  "TableName": "d",
  "FieldQuery": "select * from d use index (d_bar_never) where 1 != 1",
  "FullQuery": "select * from d use index (d_bar_never) where bar = 'foo' limit :#maxLimit",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": [
    0,
    1,
    2,
    3
  ],
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# index override (force)
"select * from d force index(d_bar_never) where bar = 'foo'"
{
  "PlanId": "PASS_SELECT",
  "Reason": "HAS_HINTS",
  "TableName": "d",
  "FieldQuery": "select * from d force index (d_bar_never) where 1 != 1",
  "FullQuery": "select * from d force index (d_bar_never) where bar = 'foo' limit :#maxLimit",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": [
    0,
    1,
    2,
    3
  ],
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# column not found
"select missing from a"
"column missing not found in table a"

# insert cross-db
"insert into b.a (eid, id) values (1, :a)"
{
  "PlanId": "PASS_DML",
  "Reason": "TABLE",
  "TableName": "",
  "FieldQuery": null,
  "FullQuery": "insert into b.a(eid, id) values (1, :a)",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# insert with qualified column names
"insert into a (a.eid, id) values (1, 2)"
{
  "PlanId": "INSERT_PK",
  "Reason": "DEFAULT",
  "TableName": "a",
  "FieldQuery": null,
  "FullQuery": "insert into a(a.eid, id) values (1, 2)",
  "OuterQuery": "insert into a(a.eid, id) values (1, 2)",
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": [
    1,
    2
  ],
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# insert sub-select
"insert into a (a.eid, id) values (select * from b)"
"row subquery not supported for inserts"

# insert with bind value
"insert into a (eid, id) values (1, :a)"
{
  "PlanId": "INSERT_PK",
  "Reason": "DEFAULT",
  "TableName": "a",
  "FieldQuery": null,
  "FullQuery": "insert into a(eid, id) values (1, :a)",
  "OuterQuery": "insert into a(eid, id) values (1, :a)",
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": [
    1,
    ":a"
  ],
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# default number
"insert into a (id) values (1)"
{
  "PlanId": "INSERT_PK",
  "Reason": "DEFAULT",
  "TableName": "a",
  "FieldQuery": null,
  "FullQuery": "insert into a(id) values (1)",
  "OuterQuery": "insert into a(id) values (1)",
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": [
    0,
    1
  ],
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# default string
"insert into d(id) values(1)"
{
  "PlanId": "INSERT_PK",
  "Reason": "DEFAULT",
  "TableName": "d",
  "FieldQuery": null,
  "FullQuery": "insert into d(id) values (1)",
  "OuterQuery": "insert into d(id) values (1)",
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": [
    "0"
  ],
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# mismatch
"insert into a (eid, id) values (1)"
"column count doesn't match value count"

# negative number
"insert into a (eid, id) values (-1, 2)"
{
  "PlanId": "INSERT_PK",
  "Reason": "DEFAULT",
  "TableName": "a",
  "FieldQuery": null,
  "FullQuery": "insert into a(eid, id) values (-1, 2)",
  "OuterQuery": "insert into a(eid, id) values (-1, 2)",
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": [
    -1,
    2
  ],
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# positive number
"insert into a (eid, id) values (+1, 2)"
{
  "PlanId": "INSERT_PK",
  "Reason": "DEFAULT",
  "TableName": "a",
  "FieldQuery": null,
  "FullQuery": "insert into a(eid, id) values (1, 2)",
  "OuterQuery": "insert into a(eid, id) values (1, 2)",
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": [
    1,
    2
  ],
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# non-trivial unary
"insert into a (eid, id) values (~1, 2)"
{
  "PlanId": "PASS_DML",
  "Reason": "COMPLEX_EXPR",
  "TableName": "a",
  "FieldQuery": null,
  "FullQuery": "insert into a(eid, id) values (~1, 2)",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# complex
"insert into a (eid, id) values (1+1, 2)"
{
  "PlanId": "PASS_DML",
  "Reason": "COMPLEX_EXPR",
  "TableName": "a",
  "FieldQuery": null,
  "FullQuery": "insert into a(eid, id) values (1 + 1, 2)",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# no index
"insert into c (eid, id) values (1, 2)"
{
  "PlanId": "PASS_DML",
  "Reason": "TABLE_NOINDEX",
  "TableName": "c",
  "FieldQuery": null,
  "FullQuery": "insert into c(eid, id) values (1, 2)",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# no column list
"insert into a values (1, 2)"
{
  "PlanId": "INSERT_PK",
  "Reason": "DEFAULT",
  "TableName": "a",
  "FieldQuery": null,
  "FullQuery": "insert into a values (1, 2)",
  "OuterQuery": "insert into a values (1, 2)",
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": [
    1,
    2
  ],
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# on dup
"insert into b (eid, id) values (1, 2) on duplicate key update name = func(a)"
{
  "PlanId": "UPSERT_PK",
  "Reason": "DEFAULT",
  "TableName": "b",
  "FieldQuery": null,
  "FullQuery": "insert into b(eid, id) values (1, 2) on duplicate key update name = func(a)",
  "OuterQuery": "insert into b(eid, id) values (1, 2)",
  "Subquery": null,
  "UpsertQuery": "update b set name = func(a) where :#pk",
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": [1, 2],
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# on dup pk change
"insert into b (eid, id) values (1, 2) on duplicate key update eid = 2"
{
  "PlanId": "UPSERT_PK",
  "Reason": "DEFAULT",
  "TableName": "b",
  "FieldQuery": null,
  "FullQuery": "insert into b(eid, id) values (1, 2) on duplicate key update eid = 2",
  "OuterQuery": "insert into b(eid, id) values (1, 2)",
  "Subquery": null,
  "UpsertQuery": "update b set eid = 2 where :#pk",
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": [1, 2],
  "Limit": null,
  "SecondaryPKValues": [2, null],
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# on dup complex pk change
"insert into b (id, eid) values (1, 2) on duplicate key update eid = func(a)"
{
  "PlanId": "PASS_DML",
  "Reason": "PK_CHANGE",
  "TableName": "b",
  "FieldQuery": null,
  "FullQuery": "insert into b(id, eid) values (1, 2) on duplicate key update eid = func(a)",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": [2, 1],
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# on dup multi-row
"insert into b (id, eid) values (1, 2), (2, 3) on duplicate key update name = func(a)"
{
  "PlanId": "PASS_DML",
  "Reason": "UPSERT",
  "TableName": "b",
  "FieldQuery": null,
  "FullQuery": "insert into b(id, eid) values (1, 2), (2, 3) on duplicate key update name = func(a)",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": [[2,3],[1,2]],
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# on dup subquery
"insert into b (id, eid) select * from a on duplicate key update name = func(a)"
{
  "PlanId": "PASS_DML",
  "Reason": "UPSERT",
  "TableName": "b",
  "FieldQuery": null,
  "FullQuery": "insert into b(id, eid) select * from a on duplicate key update name = func(a)",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# subquery
"insert into b (eid, id) select * from a"
{
  "PlanId": "INSERT_SUBQUERY",
  "Reason": "DEFAULT",
  "TableName": "b",
  "FieldQuery": null,
  "FullQuery": "insert into b(eid, id) select * from a",
  "OuterQuery": "insert into b(eid, id) values :#values",
  "Subquery": "select * from a limit :#maxLimit",
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": [
    0,
    1
  ],
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": [
    0,
    1
  ],
  "SetKey": "",
  "SetValue": null
}

# subquery with no column list
"insert into b select * from a"
{
  "PlanId": "INSERT_SUBQUERY",
  "Reason": "DEFAULT",
  "TableName": "b",
  "FieldQuery": null,
  "FullQuery": "insert into b select * from a",
  "OuterQuery": "insert into b values :#values",
  "Subquery": "select * from a limit :#maxLimit",
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": [
    0,
    1
  ],
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": [
    0,
    1
  ],
  "SetKey": "",
  "SetValue": null
}

# multi-row
"insert into b (eid, id) values (1, 2), (3, 4)"
{
  "PlanId": "INSERT_PK",
  "Reason": "DEFAULT",
  "TableName": "b",
  "FieldQuery": null,
  "FullQuery": "insert into b(eid, id) values (1, 2), (3, 4)",
  "OuterQuery": "insert into b(eid, id) values (1, 2), (3, 4)",
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": [
    [
      1,
      3
    ],
    [
      2,
      4
    ]
  ],
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# update cross-db
"update b.a set name='foo' where eid=1 and id=1"
{
  "PlanId": "PASS_DML",
  "Reason": "TABLE",
  "TableName": "",
  "FieldQuery": null,
  "FullQuery": "update b.a set name = 'foo' where eid = 1 and id = 1",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# pk changed
"update b set eid=1"
{
  "PlanId": "DML_SUBQUERY",
  "Reason": "DEFAULT",
  "TableName": "b",
  "FieldQuery": null,
  "FullQuery": "update b set eid = 1",
  "OuterQuery": "update b set eid = 1 where :#pk",
  "Subquery": "select eid, id from b limit :#maxLimit for update",
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": [
    1,
    null
  ],
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# type mismatch
"update b set eid=1.2"
"type mismatch: strconv.ParseUint: parsing "1.2": invalid syntax"

# pk changed as qualified column name
"update b set a.eid=1"
{
  "PlanId": "DML_SUBQUERY",
  "Reason": "DEFAULT",
  "TableName": "b",
  "FieldQuery": null,
  "FullQuery": "update b set a.eid = 1",
  "OuterQuery": "update b set a.eid = 1 where :#pk",
  "Subquery": "select eid, id from b limit :#maxLimit for update",
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": [
    1,
    null
  ],
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# complex pk change
"update b set eid=foo()"
{
  "PlanId": "PASS_DML",
  "Reason": "PK_CHANGE",
  "TableName": "b",
  "FieldQuery": null,
  "FullQuery": "update b set eid = foo()",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# update subquery
"update a set name='foo'"
{
  "PlanId": "DML_SUBQUERY",
  "Reason": "DEFAULT",
  "TableName": "a",
  "FieldQuery": null,
  "FullQuery": "update a set name = 'foo'",
  "OuterQuery": "update a set name = 'foo' where :#pk",
  "Subquery": "select eid, id from a limit :#maxLimit for update",
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# update complex where clause
"update a set name='foo' where eid+1=1"
{
  "PlanId": "DML_SUBQUERY",
  "Reason": "DEFAULT",
  "TableName": "a",
  "FieldQuery": null,
  "FullQuery": "update a set name = 'foo' where eid + 1 = 1",
  "OuterQuery": "update a set name = 'foo' where :#pk",
  "Subquery": "select eid, id from a where eid + 1 = 1 limit :#maxLimit for update",
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# pk
"update a set name='foo' where eid=1 and id=1"
{
  "PlanId": "DML_PK",
  "Reason": "DEFAULT",
  "TableName": "a",
  "FieldQuery": null,
  "FullQuery": "update a set name = 'foo' where eid = 1 and id = 1",
  "OuterQuery": "update a set name = 'foo' where :#pk",
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": [
    1,
    1
  ],
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# update with qualified column name
"update a set a.name='foo' where eid=1 and id=1"
{
  "PlanId": "DML_PK",
  "Reason": "DEFAULT",
  "TableName": "a",
  "FieldQuery": null,
  "FullQuery": "update a set a.name = 'foo' where eid = 1 and id = 1",
  "OuterQuery": "update a set a.name = 'foo' where :#pk",
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": [
    1,
    1
  ],
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# partial pk
"update a set name='foo' where eid=1"
{
  "PlanId": "DML_SUBQUERY",
  "Reason": "DEFAULT",
  "TableName": "a",
  "FieldQuery": null,
  "FullQuery": "update a set name = 'foo' where eid = 1",
  "OuterQuery": "update a set name = 'foo' where :#pk",
  "Subquery": "select eid, id from a where eid = 1 limit :#maxLimit for update",
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# partial pk with limit
"update a set name='foo' where eid=1 limit 10"
{
  "PlanId": "DML_SUBQUERY",
  "Reason": "DEFAULT",
  "TableName": "a",
  "FieldQuery": null,
  "FullQuery": "update a set name = 'foo' where eid = 1 limit 10",
  "OuterQuery": "update a set name = 'foo' where :#pk",
  "Subquery": "select eid, id from a where eid = 1 limit 10 for update",
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# non-pk
"update a set name='foo' where eid=1 and name='foo'"
{
  "PlanId": "DML_SUBQUERY",
  "Reason": "DEFAULT",
  "TableName": "a",
  "FieldQuery": null,
  "FullQuery": "update a set name = 'foo' where eid = 1 and name = 'foo'",
  "OuterQuery": "update a set name = 'foo' where :#pk",
  "Subquery": "select eid, id from a where eid = 1 and name = 'foo' limit :#maxLimit for update",
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# no index
"update c set eid=1"
{
  "PlanId": "PASS_DML",
  "Reason": "TABLE_NOINDEX",
  "TableName": "c",
  "FieldQuery": null,
  "FullQuery": "update c set eid = 1",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# delete cross-db
"delete from b.a where eid=1 and id=1"
{
  "PlanId": "PASS_DML",
  "Reason": "TABLE",
  "TableName": "",
  "FieldQuery": null,
  "FullQuery": "delete from b.a where eid = 1 and id = 1",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# delete with no where clause
"delete from a"
{
  "PlanId": "DML_SUBQUERY",
  "Reason": "DEFAULT",
  "TableName": "a",
  "FieldQuery": null,
  "FullQuery": "delete from a",
  "OuterQuery": "delete from a where :#pk",
  "Subquery": "select eid, id from a limit :#maxLimit for update",
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# delete complex where clause
"delete from a where eid+1=1"
{
  "PlanId": "DML_SUBQUERY",
  "Reason": "DEFAULT",
  "TableName": "a",
  "FieldQuery": null,
  "FullQuery": "delete from a where eid + 1 = 1",
  "OuterQuery": "delete from a where :#pk",
  "Subquery": "select eid, id from a where eid + 1 = 1 limit :#maxLimit for update",
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# pk
"delete from a where eid=1 and id=1"
{
  "PlanId": "DML_PK",
  "Reason": "DEFAULT",
  "TableName": "a",
  "FieldQuery": null,
  "FullQuery": "delete from a where eid = 1 and id = 1",
  "OuterQuery": "delete from a where :#pk",
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": [
    1,
    1
  ],
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# partial pk
"delete from a where eid=1"
{
  "PlanId": "DML_SUBQUERY",
  "Reason": "DEFAULT",
  "TableName": "a",
  "FieldQuery": null,
  "FullQuery": "delete from a where eid = 1",
  "OuterQuery": "delete from a where :#pk",
  "Subquery": "select eid, id from a where eid = 1 limit :#maxLimit for update",
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# non-pk
"delete from a where eid=1 and name='foo'"
{
  "PlanId": "DML_SUBQUERY",
  "Reason": "DEFAULT",
  "TableName": "a",
  "FieldQuery": null,
  "FullQuery": "delete from a where eid = 1 and name = 'foo'",
  "OuterQuery": "delete from a where :#pk",
  "Subquery": "select eid, id from a where eid = 1 and name = 'foo' limit :#maxLimit for update",
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# no index
"delete from c"
{
  "PlanId": "PASS_DML",
  "Reason": "TABLE_NOINDEX",
  "TableName": "c",
  "FieldQuery": null,
  "FullQuery": "delete from c",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# int
"set  a=1"
{
  "PlanId": "SET",
  "Reason": "DEFAULT",
  "TableName": "",
  "FieldQuery": null,
  "FullQuery": "set a = 1",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "a",
  "SetValue": 1
}

# float
"set  a=1.2"
{
  "PlanId": "SET",
  "Reason": "DEFAULT",
  "TableName": "",
  "FieldQuery": null,
  "FullQuery": "set a = 1.2",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "a",
  "SetValue": 1.2
}

# string
"set a='b'"
{
  "PlanId": "SET",
  "Reason": "DEFAULT",
  "TableName": "",
  "FieldQuery": null,
  "FullQuery": "set a = 'b'",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "a",
  "SetValue": null
}

# multi
"set a=1, b=2"
{
  "PlanId": "SET",
  "Reason": "DEFAULT",
  "TableName": "",
  "FieldQuery": null,
  "FullQuery": "set a = 1, b = 2",
  "OuterQuery": null,
  "Subquery": null,
  "UpsertQuery": null,
  "IndexUsed": "",
  "ColumnNumbers": null,
  "PKValues": null,
  "Limit": null,
  "SecondaryPKValues": null,
  "SubqueryPKColumns": null,
  "SetKey": "",
  "SetValue": null
}

# create
"create table a(a int, b varchar(8))"
{
  "PlanId":"DDL",
  "Reason":"DEFAULT",
  "TableName":"",
  "FieldQuery":null,
  "FullQuery":null,
  "OuterQuery":null,
  "Subquery":null,
  "UpsertQuery": null,
  "IndexUsed":"",
  "ColumnNumbers":null,
  "PKValues":null,
  "Limit": null,
  "SecondaryPKValues":null,
  "SubqueryPKColumns":null,
  "SetKey":"",
  "SetValue":null
}

# alter
"alter table a add column(a int)"
{
  "PlanId":"DDL",
  "Reason":"DEFAULT",
  "TableName":"a",
  "FieldQuery":null,
  "FullQuery":null,
  "OuterQuery":null,
  "Subquery":null,
  "UpsertQuery": null,
  "IndexUsed":"",
  "ColumnNumbers":null,
  "PKValues":null,
  "Limit": null,
  "SecondaryPKValues":null,
  "SubqueryPKColumns":null,
  "SetKey":"",
  "SetValue":null
}

# alter rename
"alter table a rename b"
{
  "PlanId":"DDL",
  "Reason":"DEFAULT",
  "TableName":"a",
  "FieldQuery":null,
  "FullQuery":null,
  "OuterQuery":null,
  "Subquery":null,
  "UpsertQuery": null,
  "IndexUsed":"",
  "ColumnNumbers":null,
  "PKValues":null,
  "Limit": null,
  "SecondaryPKValues":null,
  "SubqueryPKColumns":null,
  "SetKey":"",
  "SetValue":null
}

# rename
"rename table a to b"
{
  "PlanId":"DDL",
  "Reason":"DEFAULT",
  "TableName":"a",
  "FieldQuery":null,
  "FullQuery":null,
  "OuterQuery":null,
  "Subquery":null,
  "UpsertQuery": null,
  "IndexUsed":"",
  "ColumnNumbers":null,
  "PKValues":null,
  "Limit": null,
  "SecondaryPKValues":null,
  "SubqueryPKColumns":null,
  "SetKey":"",
  "SetValue":null
}

# drop
"drop table a"
{
  "PlanId":"DDL",
  "Reason":"DEFAULT",
  "TableName":"a",
  "FieldQuery":null,
  "FullQuery":null,
  "OuterQuery":null,
  "Subquery":null,
  "UpsertQuery": null,
  "IndexUsed":"",
  "ColumnNumbers":null,
  "PKValues":null,
  "Limit": null,
  "SecondaryPKValues":null,
  "SubqueryPKColumns":null,
  "SetKey":"",
  "SetValue":null
}

# analyze
"analyze table a"
{
  "PlanId":"DDL",
  "Reason":"DEFAULT",
  "TableName":"a",
  "FieldQuery":null,
  "FullQuery":null,
  "OuterQuery":null,
  "Subquery":null,
  "UpsertQuery": null,
  "IndexUsed":"",
  "ColumnNumbers":null,
  "PKValues":null,
  "Limit": null,
  "SecondaryPKValues":null,
  "SubqueryPKColumns":null,
  "SetKey":"",
  "SetValue":null
}

# show
"show a"
{
  "PlanId":"OTHER",
  "Reason":"DEFAULT",
  "TableName":"",
  "FieldQuery":null,
  "FullQuery":null,
  "OuterQuery":null,
  "Subquery":null,
  "UpsertQuery": null,
  "IndexUsed":"",
  "ColumnNumbers":null,
  "PKValues":null,
  "Limit": null,
  "SecondaryPKValues":null,
  "SubqueryPKColumns":null,
  "SetKey":"",
  "SetValue":null
}

# describe
"describe a"
{
  "PlanId":"OTHER",
  "Reason":"DEFAULT",
  "TableName":"",
  "FieldQuery":null,
  "FullQuery":null,
  "OuterQuery":null,
  "Subquery":null,
  "UpsertQuery": null,
  "IndexUsed":"",
  "ColumnNumbers":null,
  "PKValues":null,
  "Limit": null,
  "SecondaryPKValues":null,
  "SubqueryPKColumns":null,
  "SetKey":"",
  "SetValue":null
}

# explain
"explain a"
{
  "PlanId":"OTHER",
  "Reason":"DEFAULT",
  "TableName":"",
  "FieldQuery":null,
  "FullQuery":null,
  "OuterQuery":null,
  "Subquery":null,
  "UpsertQuery": null,
  "IndexUsed":"",
  "ColumnNumbers":null,
  "PKValues":null,
  "Limit": null,
  "SecondaryPKValues":null,
  "SubqueryPKColumns":null,
  "SetKey":"",
  "SetValue":null
}

# table not found
"select * from aaaa"
"table aaaa not found in schema"

# syntax error
"syntax error"
"syntax error at position 7 near 'syntax'"
