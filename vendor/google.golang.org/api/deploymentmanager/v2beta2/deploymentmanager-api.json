{
 "kind": "discovery#restDescription",
 "etag": "\"bRFOOrZKfO9LweMbPqu0kcu6De8/7dvEQ2HcIuoHDDD09ppjfAikoSg\"",
 "discoveryVersion": "v1",
 "id": "deploymentmanager:v2beta2",
 "name": "deploymentmanager",
 "canonicalName": "Deployment Manager",
 "version": "v2beta2",
 "revision": "20160301",
 "title": "Google Cloud Deployment Manager API",
 "description": "The Deployment Manager API allows users to declaratively configure, deploy and run complex solutions on the Google Cloud Platform.",
 "ownerDomain": "google.com",
 "ownerName": "Google",
 "icons": {
  "x16": "http://www.google.com/images/icons/product/search-16.gif",
  "x32": "http://www.google.com/images/icons/product/search-32.gif"
 },
 "documentationLink": "https://developers.google.com/deployment-manager/",
 "protocol": "rest",
 "baseUrl": "https://www.googleapis.com/deploymentmanager/v2beta2/projects/",
 "basePath": "/deploymentmanager/v2beta2/projects/",
 "rootUrl": "https://www.googleapis.com/",
 "servicePath": "deploymentmanager/v2beta2/projects/",
 "batchPath": "batch",
 "parameters": {
  "alt": {
   "type": "string",
   "description": "Data format for the response.",
   "default": "json",
   "enum": [
    "json"
   ],
   "enumDescriptions": [
    "Responses with Content-Type of application/json"
   ],
   "location": "query"
  },
  "fields": {
   "type": "string",
   "description": "Selector specifying which fields to include in a partial response.",
   "location": "query"
  },
  "key": {
   "type": "string",
   "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
   "location": "query"
  },
  "oauth_token": {
   "type": "string",
   "description": "OAuth 2.0 token for the current user.",
   "location": "query"
  },
  "prettyPrint": {
   "type": "boolean",
   "description": "Returns response with indentations and line breaks.",
   "default": "true",
   "location": "query"
  },
  "quotaUser": {
   "type": "string",
   "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
   "location": "query"
  },
  "userIp": {
   "type": "string",
   "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
   "location": "query"
  }
 },
 "auth": {
  "oauth2": {
   "scopes": {
    "https://www.googleapis.com/auth/cloud-platform": {
     "description": "View and manage your data across Google Cloud Platform services"
    },
    "https://www.googleapis.com/auth/cloud-platform.read-only": {
     "description": "View your data across Google Cloud Platform services"
    },
    "https://www.googleapis.com/auth/ndev.cloudman": {
     "description": "View and manage your Google Cloud Platform management resources and deployment status information"
    },
    "https://www.googleapis.com/auth/ndev.cloudman.readonly": {
     "description": "View your Google Cloud Platform management resources and deployment status information"
    }
   }
  }
 },
 "schemas": {
  "Deployment": {
   "id": "Deployment",
   "type": "object",
   "description": "",
   "properties": {
    "description": {
     "type": "string",
     "description": "An optional user-provided description of the deployment."
    },
    "fingerprint": {
     "type": "string",
     "description": "Specifies a fingerprint for update() requests. A fingerprint is a randomly generated value that must be provided in update() requests to perform optimistic locking. This ensures optimistic concurrency so that only one update can be performed at a time. The fingerprint is initially generated by Deployment Manager and changes after every request to modify data. To get the latest fingerprint value, perform a get() request to a deployment.",
     "format": "byte"
    },
    "id": {
     "type": "string",
     "description": "[Output Only] Unique identifier for the resource; defined by the server.",
     "format": "uint64"
    },
    "insertTime": {
     "type": "string",
     "description": "[Output Only] Timestamp when the deployment was created, in RFC3339 text format ."
    },
    "intent": {
     "type": "string",
     "description": "[Input Only] Specifies how Deployment Manager should apply this template. Possible options are PREVIEW, UPDATE, and CANCEL.\n\nPREVIEW creates a deployment and creates \"shell\" resources but does not actually instantiate these resources. This allows you to preview what your deployment looks like. You can use this intent to preview updates to deployments or preview new deployments. You must provide a target.config with a configuration for this intent. After previewing a deployment, you can deploy your resources by making a request with the UPDATE intent or you can CANCEL the preview altogether. Note that the deployment will still exist after you cancel the preview and you must separately delete this deployment if you want to remove it.\n\nUPDATE performs an update to the underlying resources in a deployment. If you provide a populated target.config field with this request, Deployment Manager uses that configuration to perform an update. If you had previewed this update beforehand, and do not supply a target.config or provide an empty target.config, Deployment Manager uses the last previewed configuration.\n\nCANCEL cancels an update that is in PREVIEW or UPDATE but does not undo any changes already made."
    },
    "manifest": {
     "type": "string",
     "description": "[Output Only] URL of the manifest representing the last manifest that was successfully deployed."
    },
    "name": {
     "type": "string",
     "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."
    },
    "state": {
     "type": "string",
     "description": "[Output Only] The current state of the deployment. This can be DEPLOYED, DEPLOYMENT_FAILED, PREVIEWING, UPDATING, and CANCELING."
    },
    "target": {
     "$ref": "TargetConfiguration",
     "description": "[Input Only] The parameters that define your deployment, including the deployment configuration and relevant templates."
    },
    "update": {
     "$ref": "DeploymentUpdate",
     "description": "[Output Only] If Deployment Manager is currently updating or previewing an update to this deployment, the updated configuration appears here."
    },
    "updateTime": {
     "type": "string",
     "description": "[Output Only] Timestamp when the deployment was updated, in RFC3339 text format ."
    }
   }
  },
  "DeploymentUpdate": {
   "id": "DeploymentUpdate",
   "type": "object",
   "description": "",
   "properties": {
    "errors": {
     "type": "array",
     "description": "[Output Only] List of all errors encountered while trying to enact the update.",
     "items": {
      "type": "string"
     }
    },
    "manifest": {
     "type": "string",
     "description": "[Output Only] URL of the manifest representing the update configuration of this deployment."
    }
   }
  },
  "DeploymentsListResponse": {
   "id": "DeploymentsListResponse",
   "type": "object",
   "description": "A response containing a partial list of deployments and a page token used to build the next request if the request has been truncated.",
   "properties": {
    "deployments": {
     "type": "array",
     "description": "[Output Only] The deployments contained in this response.",
     "items": {
      "$ref": "Deployment"
     }
    },
    "nextPageToken": {
     "type": "string",
     "description": "[Output Only] A token used to continue a truncated list request."
    }
   }
  },
  "ImportFile": {
   "id": "ImportFile",
   "type": "object",
   "description": "",
   "properties": {
    "content": {
     "type": "string",
     "description": "The contents of the file."
    },
    "name": {
     "type": "string",
     "description": "The name of the file."
    }
   }
  },
  "Manifest": {
   "id": "Manifest",
   "type": "object",
   "description": "",
   "properties": {
    "config": {
     "type": "string",
     "description": "[Output Only] The YAML configuration for this manifest."
    },
    "evaluatedConfig": {
     "type": "string",
     "description": "[Output Only] The fully-expanded configuration file, including any templates and references."
    },
    "id": {
     "type": "string",
     "description": "[Output Only] Unique identifier for the resource; defined by the server.",
     "format": "uint64"
    },
    "imports": {
     "type": "array",
     "description": "[Output Only] The imported files for this manifest.",
     "items": {
      "$ref": "ImportFile"
     }
    },
    "insertTime": {
     "type": "string",
     "description": "[Output Only] Timestamp when the manifest was created, in RFC3339 text format."
    },
    "layout": {
     "type": "string",
     "description": "[Output Only] The YAML layout for this manifest."
    },
    "name": {
     "type": "string",
     "description": "[Output Only] The name of the manifest."
    },
    "selfLink": {
     "type": "string",
     "description": "[Output Only] Self link for the manifest."
    }
   }
  },
  "ManifestsListResponse": {
   "id": "ManifestsListResponse",
   "type": "object",
   "description": "A response containing a partial list of manifests and a page token used to build the next request if the request has been truncated.",
   "properties": {
    "manifests": {
     "type": "array",
     "description": "[Output Only] Manifests contained in this list response.",
     "items": {
      "$ref": "Manifest"
     }
    },
    "nextPageToken": {
     "type": "string",
     "description": "[Output Only] A token used to continue a truncated list request."
    }
   }
  },
  "Operation": {
   "id": "Operation",
   "type": "object",
   "description": "An Operation resource, used to manage asynchronous API requests.",
   "properties": {
    "clientOperationId": {
     "type": "string",
     "description": "[Output Only] Reserved for future use."
    },
    "creationTimestamp": {
     "type": "string",
     "description": "[Output Only] Creation timestamp in RFC3339 text format."
    },
    "description": {
     "type": "string",
     "description": "[Output Only] A textual description of the operation, which is set when the operation is created."
    },
    "endTime": {
     "type": "string",
     "description": "[Output Only] The time that this operation was completed. This value is in RFC3339 text format."
    },
    "error": {
     "type": "object",
     "description": "[Output Only] If errors are generated during processing of the operation, this field will be populated.",
     "properties": {
      "errors": {
       "type": "array",
       "description": "[Output Only] The array of errors encountered while processing this operation.",
       "items": {
        "type": "object",
        "properties": {
         "code": {
          "type": "string",
          "description": "[Output Only] The error type identifier for this error."
         },
         "location": {
          "type": "string",
          "description": "[Output Only] Indicates the field in the request that caused the error. This property is optional."
         },
         "message": {
          "type": "string",
          "description": "[Output Only] An optional, human-readable error message."
         }
        }
       }
      }
     }
    },
    "httpErrorMessage": {
     "type": "string",
     "description": "[Output Only] If the operation fails, this field contains the HTTP error message that was returned, such as NOT FOUND."
    },
    "httpErrorStatusCode": {
     "type": "integer",
     "description": "[Output Only] If the operation fails, this field contains the HTTP error status code that was returned. For example, a 404 means the resource was not found.",
     "format": "int32"
    },
    "id": {
     "type": "string",
     "description": "[Output Only] The unique identifier for the resource. This identifier is defined by the server.",
     "format": "uint64"
    },
    "insertTime": {
     "type": "string",
     "description": "[Output Only] The time that this operation was requested. This value is in RFC3339 text format."
    },
    "kind": {
     "type": "string",
     "description": "[Output Only] Type of the resource. Always compute#operation for operation resources.",
     "default": "deploymentmanager#operation"
    },
    "name": {
     "type": "string",
     "description": "[Output Only] Name of the resource."
    },
    "operationType": {
     "type": "string",
     "description": "[Output Only] The type of operation, such as insert, update, or delete, and so on."
    },
    "progress": {
     "type": "integer",
     "description": "[Output Only] An optional progress indicator that ranges from 0 to 100. There is no requirement that this be linear or support any granularity of operations. This should not be used to guess when the operation will be complete. This number should monotonically increase as the operation progresses.",
     "format": "int32"
    },
    "region": {
     "type": "string",
     "description": "[Output Only] The URL of the region where the operation resides. Only available when performing regional operations."
    },
    "selfLink": {
     "type": "string",
     "description": "[Output Only] Server-defined URL for the resource."
    },
    "startTime": {
     "type": "string",
     "description": "[Output Only] The time that this operation was started by the server. This value is in RFC3339 text format."
    },
    "status": {
     "type": "string",
     "description": "[Output Only] The status of the operation, which can be one of the following: PENDING, RUNNING, or DONE."
    },
    "statusMessage": {
     "type": "string",
     "description": "[Output Only] An optional textual description of the current status of the operation."
    },
    "targetId": {
     "type": "string",
     "description": "[Output Only] The unique target ID, which identifies a specific incarnation of the target resource.",
     "format": "uint64"
    },
    "targetLink": {
     "type": "string",
     "description": "[Output Only] The URL of the resource that the operation modifies."
    },
    "user": {
     "type": "string",
     "description": "[Output Only] User who requested the operation, for example: user@example.com."
    },
    "warnings": {
     "type": "array",
     "description": "[Output Only] If warning messages are generated during processing of the operation, this field will be populated.",
     "items": {
      "type": "object",
      "properties": {
       "code": {
        "type": "string",
        "description": "[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response."
       },
       "data": {
        "type": "array",
        "description": "[Output Only] Metadata about this warning in key: value format. For example:\n\"data\": [ { \"key\": \"scope\", \"value\": \"zones/us-east1-d\" }",
        "items": {
         "type": "object",
         "properties": {
          "key": {
           "type": "string",
           "description": "[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding)."
          },
          "value": {
           "type": "string",
           "description": "[Output Only] A warning data value corresponding to the key."
          }
         }
        }
       },
       "message": {
        "type": "string",
        "description": "[Output Only] A human-readable description of the warning code."
       }
      }
     }
    },
    "zone": {
     "type": "string",
     "description": "[Output Only] The URL of the zone where the operation resides. Only available when performing per-zone operations."
    }
   }
  },
  "OperationsListResponse": {
   "id": "OperationsListResponse",
   "type": "object",
   "description": "A response containing a partial list of operations and a page token used to build the next request if the request has been truncated.",
   "properties": {
    "nextPageToken": {
     "type": "string",
     "description": "[Output Only] A token used to continue a truncated list request."
    },
    "operations": {
     "type": "array",
     "description": "[Output Only] Operations contained in this list response.",
     "items": {
      "$ref": "Operation"
     }
    }
   }
  },
  "Resource": {
   "id": "Resource",
   "type": "object",
   "description": "",
   "properties": {
    "finalProperties": {
     "type": "string",
     "description": "[Output Only] The evaluated properties of the resource with references expanded. Returned as serialized YAML."
    },
    "id": {
     "type": "string",
     "description": "[Output Only] Unique identifier for the resource; defined by the server.",
     "format": "uint64"
    },
    "insertTime": {
     "type": "string",
     "description": "[Output Only] Timestamp when the resource was created or acquired, in RFC3339 text format ."
    },
    "manifest": {
     "type": "string",
     "description": "[Output Only] URL of the manifest representing the current configuration of this resource."
    },
    "name": {
     "type": "string",
     "description": "[Output Only] The name of the resource as it appears in the YAML config."
    },
    "properties": {
     "type": "string",
     "description": "[Output Only] The current properties of the resource before any references have been filled in. Returned as serialized YAML."
    },
    "type": {
     "type": "string",
     "description": "[Output Only] The type of the resource, for example compute.v1.instance, or replicaPools.v1beta2.instanceGroupManager."
    },
    "update": {
     "$ref": "ResourceUpdate",
     "description": "[Output Only] If Deployment Manager is currently updating or previewing an update to this resource, the updated configuration appears here."
    },
    "updateTime": {
     "type": "string",
     "description": "[Output Only] Timestamp when the resource was updated, in RFC3339 text format ."
    },
    "url": {
     "type": "string",
     "description": "[Output Only] The URL of the actual resource."
    }
   }
  },
  "ResourceUpdate": {
   "id": "ResourceUpdate",
   "type": "object",
   "description": "",
   "properties": {
    "errors": {
     "type": "array",
     "description": "[Output Only] List of all errors encountered while trying to enact update.intent.",
     "items": {
      "type": "string"
     }
    },
    "finalProperties": {
     "type": "string",
     "description": "[Output Only] The expanded properties of the resource with reference values expanded. Returned as serialized YAML."
    },
    "intent": {
     "type": "string",
     "description": "[Output Only] The intent of the resource: PREVIEW, UPDATE, or CANCEL."
    },
    "manifest": {
     "type": "string",
     "description": "[Output Only] URL of the manifest representing the update configuration of this resource."
    },
    "properties": {
     "type": "string",
     "description": "[Output Only] The set of updated properties for this resource, before references are expanded. Returned as serialized YAML."
    },
    "state": {
     "type": "string",
     "description": "[Output Only] The state of the resource."
    }
   }
  },
  "ResourcesListResponse": {
   "id": "ResourcesListResponse",
   "type": "object",
   "description": "A response containing a partial list of resources and a page token used to build the next request if the request has been truncated.",
   "properties": {
    "nextPageToken": {
     "type": "string",
     "description": "A token used to continue a truncated list request."
    },
    "resources": {
     "type": "array",
     "description": "Resources contained in this list response.",
     "items": {
      "$ref": "Resource"
     }
    }
   }
  },
  "TargetConfiguration": {
   "id": "TargetConfiguration",
   "type": "object",
   "description": "",
   "properties": {
    "config": {
     "type": "string",
     "description": "The configuration to use for this deployment."
    },
    "imports": {
     "type": "array",
     "description": "Specifies any files to import for this configuration. This can be used to import templates or other files. For example, you might import a text file in order to use the file in a template.",
     "items": {
      "$ref": "ImportFile"
     }
    }
   }
  },
  "Type": {
   "id": "Type",
   "type": "object",
   "description": "A resource type supported by Deployment Manager.",
   "properties": {
    "id": {
     "type": "string",
     "description": "[Output Only] Unique identifier for the resource; defined by the server.",
     "format": "uint64"
    },
    "insertTime": {
     "type": "string",
     "description": "[Output Only] Timestamp when the type was created, in RFC3339 text format."
    },
    "name": {
     "type": "string",
     "description": "Name of the type."
    },
    "selfLink": {
     "type": "string",
     "description": "[Output Only] Self link for the type."
    }
   }
  },
  "TypesListResponse": {
   "id": "TypesListResponse",
   "type": "object",
   "description": "A response that returns all Types supported by Deployment Manager",
   "properties": {
    "nextPageToken": {
     "type": "string",
     "description": "A token used to continue a truncated list request."
    },
    "types": {
     "type": "array",
     "description": "[Output Only] A list of resource types supported by Deployment Manager.",
     "items": {
      "$ref": "Type"
     }
    }
   }
  }
 },
 "resources": {
  "deployments": {
   "methods": {
    "delete": {
     "id": "deploymentmanager.deployments.delete",
     "path": "{project}/global/deployments/{deployment}",
     "httpMethod": "DELETE",
     "description": "Deletes a deployment and all of the resources in the deployment.",
     "parameters": {
      "deployment": {
       "type": "string",
       "description": "The name of the deployment for this request.",
       "required": true,
       "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
       "location": "path"
      },
      "project": {
       "type": "string",
       "description": "The project ID for this request.",
       "required": true,
       "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
       "location": "path"
      }
     },
     "parameterOrder": [
      "project",
      "deployment"
     ],
     "response": {
      "$ref": "Operation"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/ndev.cloudman"
     ]
    },
    "get": {
     "id": "deploymentmanager.deployments.get",
     "path": "{project}/global/deployments/{deployment}",
     "httpMethod": "GET",
     "description": "Gets information about a specific deployment.",
     "parameters": {
      "deployment": {
       "type": "string",
       "description": "The name of the deployment for this request.",
       "required": true,
       "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
       "location": "path"
      },
      "project": {
       "type": "string",
       "description": "The project ID for this request.",
       "required": true,
       "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
       "location": "path"
      }
     },
     "parameterOrder": [
      "project",
      "deployment"
     ],
     "response": {
      "$ref": "Deployment"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/cloud-platform.read-only",
      "https://www.googleapis.com/auth/ndev.cloudman",
      "https://www.googleapis.com/auth/ndev.cloudman.readonly"
     ]
    },
    "insert": {
     "id": "deploymentmanager.deployments.insert",
     "path": "{project}/global/deployments",
     "httpMethod": "POST",
     "description": "Creates a deployment and all of the resources described by the deployment manifest.",
     "parameters": {
      "project": {
       "type": "string",
       "description": "The project ID for this request.",
       "required": true,
       "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
       "location": "path"
      }
     },
     "parameterOrder": [
      "project"
     ],
     "request": {
      "$ref": "Deployment"
     },
     "response": {
      "$ref": "Operation"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/ndev.cloudman"
     ]
    },
    "list": {
     "id": "deploymentmanager.deployments.list",
     "path": "{project}/global/deployments",
     "httpMethod": "GET",
     "description": "Lists all deployments for a given project.",
     "parameters": {
      "filter": {
       "type": "string",
       "description": "Sets a filter expression for filtering listed resources, in the form filter={expression}. Your {expression} must be in the format: field_name comparison_string literal_string.\n\nThe field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.\n\nFor example, to filter for instances that do not have a name of example-instance, you would use filter=name ne example-instance.\n\nCompute Engine Beta API Only: If you use filtering in the Beta API, you can also filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. In particular, use filtering on nested fields to take advantage of instance labels to organize and filter results based on label values.\n\nThe Beta API also supports filtering on multiple expressions by providing each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.",
       "location": "query"
      },
      "maxResults": {
       "type": "integer",
       "description": "The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests.",
       "default": "500",
       "format": "uint32",
       "minimum": "0",
       "maximum": "500",
       "location": "query"
      },
      "pageToken": {
       "type": "string",
       "description": "Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.",
       "location": "query"
      },
      "project": {
       "type": "string",
       "description": "The project ID for this request.",
       "required": true,
       "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
       "location": "path"
      }
     },
     "parameterOrder": [
      "project"
     ],
     "response": {
      "$ref": "DeploymentsListResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/cloud-platform.read-only",
      "https://www.googleapis.com/auth/ndev.cloudman",
      "https://www.googleapis.com/auth/ndev.cloudman.readonly"
     ]
    },
    "patch": {
     "id": "deploymentmanager.deployments.patch",
     "path": "{project}/global/deployments/{deployment}",
     "httpMethod": "PATCH",
     "description": "Updates a deployment and all of the resources described by the deployment manifest. This method supports patch semantics.",
     "parameters": {
      "createPolicy": {
       "type": "string",
       "description": "Sets the policy to use for creating new resources.",
       "default": "CREATE_OR_ACQUIRE",
       "enum": [
        "ACQUIRE",
        "CREATE_OR_ACQUIRE"
       ],
       "enumDescriptions": [
        "",
        ""
       ],
       "location": "query"
      },
      "deletePolicy": {
       "type": "string",
       "description": "Sets the policy to use for deleting resources.",
       "default": "DELETE",
       "enum": [
        "ABANDON",
        "DELETE"
       ],
       "enumDescriptions": [
        "",
        ""
       ],
       "location": "query"
      },
      "deployment": {
       "type": "string",
       "description": "The name of the deployment for this request.",
       "required": true,
       "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
       "location": "path"
      },
      "project": {
       "type": "string",
       "description": "The project ID for this request.",
       "required": true,
       "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
       "location": "path"
      },
      "updatePolicy": {
       "type": "string",
       "description": "Sets the policy to use for updating resources.",
       "default": "PATCH",
       "enum": [
        "PATCH",
        "UPDATE"
       ],
       "enumDescriptions": [
        "",
        ""
       ],
       "location": "query"
      }
     },
     "parameterOrder": [
      "project",
      "deployment"
     ],
     "request": {
      "$ref": "Deployment"
     },
     "response": {
      "$ref": "Operation"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/ndev.cloudman"
     ]
    },
    "update": {
     "id": "deploymentmanager.deployments.update",
     "path": "{project}/global/deployments/{deployment}",
     "httpMethod": "PUT",
     "description": "Updates a deployment and all of the resources described by the deployment manifest.",
     "parameters": {
      "createPolicy": {
       "type": "string",
       "description": "Sets the policy to use for creating new resources.",
       "default": "CREATE_OR_ACQUIRE",
       "enum": [
        "ACQUIRE",
        "CREATE_OR_ACQUIRE"
       ],
       "enumDescriptions": [
        "",
        ""
       ],
       "location": "query"
      },
      "deletePolicy": {
       "type": "string",
       "description": "Sets the policy to use for deleting resources.",
       "default": "DELETE",
       "enum": [
        "ABANDON",
        "DELETE"
       ],
       "enumDescriptions": [
        "",
        ""
       ],
       "location": "query"
      },
      "deployment": {
       "type": "string",
       "description": "The name of the deployment for this request.",
       "required": true,
       "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
       "location": "path"
      },
      "project": {
       "type": "string",
       "description": "The project ID for this request.",
       "required": true,
       "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
       "location": "path"
      },
      "updatePolicy": {
       "type": "string",
       "description": "Sets the policy to use for updating resources.",
       "default": "PATCH",
       "enum": [
        "PATCH",
        "UPDATE"
       ],
       "enumDescriptions": [
        "",
        ""
       ],
       "location": "query"
      }
     },
     "parameterOrder": [
      "project",
      "deployment"
     ],
     "request": {
      "$ref": "Deployment"
     },
     "response": {
      "$ref": "Operation"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/ndev.cloudman"
     ]
    }
   }
  },
  "manifests": {
   "methods": {
    "get": {
     "id": "deploymentmanager.manifests.get",
     "path": "{project}/global/deployments/{deployment}/manifests/{manifest}",
     "httpMethod": "GET",
     "description": "Gets information about a specific manifest.",
     "parameters": {
      "deployment": {
       "type": "string",
       "description": "The name of the deployment for this request.",
       "required": true,
       "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
       "location": "path"
      },
      "manifest": {
       "type": "string",
       "description": "The name of the manifest for this request.",
       "required": true,
       "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
       "location": "path"
      },
      "project": {
       "type": "string",
       "description": "The project ID for this request.",
       "required": true,
       "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
       "location": "path"
      }
     },
     "parameterOrder": [
      "project",
      "deployment",
      "manifest"
     ],
     "response": {
      "$ref": "Manifest"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/cloud-platform.read-only",
      "https://www.googleapis.com/auth/ndev.cloudman",
      "https://www.googleapis.com/auth/ndev.cloudman.readonly"
     ]
    },
    "list": {
     "id": "deploymentmanager.manifests.list",
     "path": "{project}/global/deployments/{deployment}/manifests",
     "httpMethod": "GET",
     "description": "Lists all manifests for a given deployment.",
     "parameters": {
      "deployment": {
       "type": "string",
       "description": "The name of the deployment for this request.",
       "required": true,
       "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
       "location": "path"
      },
      "filter": {
       "type": "string",
       "description": "Sets a filter expression for filtering listed resources, in the form filter={expression}. Your {expression} must be in the format: field_name comparison_string literal_string.\n\nThe field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.\n\nFor example, to filter for instances that do not have a name of example-instance, you would use filter=name ne example-instance.\n\nCompute Engine Beta API Only: If you use filtering in the Beta API, you can also filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. In particular, use filtering on nested fields to take advantage of instance labels to organize and filter results based on label values.\n\nThe Beta API also supports filtering on multiple expressions by providing each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.",
       "location": "query"
      },
      "maxResults": {
       "type": "integer",
       "description": "The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests.",
       "default": "500",
       "format": "uint32",
       "minimum": "0",
       "maximum": "500",
       "location": "query"
      },
      "pageToken": {
       "type": "string",
       "description": "Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.",
       "location": "query"
      },
      "project": {
       "type": "string",
       "description": "The project ID for this request.",
       "required": true,
       "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
       "location": "path"
      }
     },
     "parameterOrder": [
      "project",
      "deployment"
     ],
     "response": {
      "$ref": "ManifestsListResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/cloud-platform.read-only",
      "https://www.googleapis.com/auth/ndev.cloudman",
      "https://www.googleapis.com/auth/ndev.cloudman.readonly"
     ]
    }
   }
  },
  "operations": {
   "methods": {
    "get": {
     "id": "deploymentmanager.operations.get",
     "path": "{project}/global/operations/{operation}",
     "httpMethod": "GET",
     "description": "Gets information about a specific operation.",
     "parameters": {
      "operation": {
       "type": "string",
       "description": "The name of the operation for this request.",
       "required": true,
       "location": "path"
      },
      "project": {
       "type": "string",
       "description": "The project ID for this request.",
       "required": true,
       "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
       "location": "path"
      }
     },
     "parameterOrder": [
      "project",
      "operation"
     ],
     "response": {
      "$ref": "Operation"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/cloud-platform.read-only",
      "https://www.googleapis.com/auth/ndev.cloudman",
      "https://www.googleapis.com/auth/ndev.cloudman.readonly"
     ]
    },
    "list": {
     "id": "deploymentmanager.operations.list",
     "path": "{project}/global/operations",
     "httpMethod": "GET",
     "description": "Lists all operations for a project.",
     "parameters": {
      "filter": {
       "type": "string",
       "description": "Sets a filter expression for filtering listed resources, in the form filter={expression}. Your {expression} must be in the format: field_name comparison_string literal_string.\n\nThe field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.\n\nFor example, to filter for instances that do not have a name of example-instance, you would use filter=name ne example-instance.\n\nCompute Engine Beta API Only: If you use filtering in the Beta API, you can also filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. In particular, use filtering on nested fields to take advantage of instance labels to organize and filter results based on label values.\n\nThe Beta API also supports filtering on multiple expressions by providing each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.",
       "location": "query"
      },
      "maxResults": {
       "type": "integer",
       "description": "The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests.",
       "default": "500",
       "format": "uint32",
       "minimum": "0",
       "maximum": "500",
       "location": "query"
      },
      "pageToken": {
       "type": "string",
       "description": "Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.",
       "location": "query"
      },
      "project": {
       "type": "string",
       "description": "The project ID for this request.",
       "required": true,
       "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
       "location": "path"
      }
     },
     "parameterOrder": [
      "project"
     ],
     "response": {
      "$ref": "OperationsListResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/cloud-platform.read-only",
      "https://www.googleapis.com/auth/ndev.cloudman",
      "https://www.googleapis.com/auth/ndev.cloudman.readonly"
     ]
    }
   }
  },
  "resources": {
   "methods": {
    "get": {
     "id": "deploymentmanager.resources.get",
     "path": "{project}/global/deployments/{deployment}/resources/{resource}",
     "httpMethod": "GET",
     "description": "Gets information about a single resource.",
     "parameters": {
      "deployment": {
       "type": "string",
       "description": "The name of the deployment for this request.",
       "required": true,
       "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
       "location": "path"
      },
      "project": {
       "type": "string",
       "description": "The project ID for this request.",
       "required": true,
       "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
       "location": "path"
      },
      "resource": {
       "type": "string",
       "description": "The name of the resource for this request.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "project",
      "deployment",
      "resource"
     ],
     "response": {
      "$ref": "Resource"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/cloud-platform.read-only",
      "https://www.googleapis.com/auth/ndev.cloudman",
      "https://www.googleapis.com/auth/ndev.cloudman.readonly"
     ]
    },
    "list": {
     "id": "deploymentmanager.resources.list",
     "path": "{project}/global/deployments/{deployment}/resources",
     "httpMethod": "GET",
     "description": "Lists all resources in a given deployment.",
     "parameters": {
      "deployment": {
       "type": "string",
       "description": "The name of the deployment for this request.",
       "required": true,
       "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
       "location": "path"
      },
      "filter": {
       "type": "string",
       "description": "Sets a filter expression for filtering listed resources, in the form filter={expression}. Your {expression} must be in the format: field_name comparison_string literal_string.\n\nThe field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.\n\nFor example, to filter for instances that do not have a name of example-instance, you would use filter=name ne example-instance.\n\nCompute Engine Beta API Only: If you use filtering in the Beta API, you can also filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. In particular, use filtering on nested fields to take advantage of instance labels to organize and filter results based on label values.\n\nThe Beta API also supports filtering on multiple expressions by providing each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.",
       "location": "query"
      },
      "maxResults": {
       "type": "integer",
       "description": "The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests.",
       "default": "500",
       "format": "uint32",
       "minimum": "0",
       "maximum": "500",
       "location": "query"
      },
      "pageToken": {
       "type": "string",
       "description": "Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.",
       "location": "query"
      },
      "project": {
       "type": "string",
       "description": "The project ID for this request.",
       "required": true,
       "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
       "location": "path"
      }
     },
     "parameterOrder": [
      "project",
      "deployment"
     ],
     "response": {
      "$ref": "ResourcesListResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/cloud-platform.read-only",
      "https://www.googleapis.com/auth/ndev.cloudman",
      "https://www.googleapis.com/auth/ndev.cloudman.readonly"
     ]
    }
   }
  },
  "types": {
   "methods": {
    "list": {
     "id": "deploymentmanager.types.list",
     "path": "{project}/global/types",
     "httpMethod": "GET",
     "description": "Lists all resource types for Deployment Manager.",
     "parameters": {
      "filter": {
       "type": "string",
       "description": "Sets a filter expression for filtering listed resources, in the form filter={expression}. Your {expression} must be in the format: field_name comparison_string literal_string.\n\nThe field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.\n\nFor example, to filter for instances that do not have a name of example-instance, you would use filter=name ne example-instance.\n\nCompute Engine Beta API Only: If you use filtering in the Beta API, you can also filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. In particular, use filtering on nested fields to take advantage of instance labels to organize and filter results based on label values.\n\nThe Beta API also supports filtering on multiple expressions by providing each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.",
       "location": "query"
      },
      "maxResults": {
       "type": "integer",
       "description": "The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests.",
       "default": "500",
       "format": "uint32",
       "minimum": "0",
       "maximum": "500",
       "location": "query"
      },
      "pageToken": {
       "type": "string",
       "description": "Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.",
       "location": "query"
      },
      "project": {
       "type": "string",
       "description": "The project ID for this request.",
       "required": true,
       "pattern": "(?:(?:[-a-z0-9]{1,63}\\.)*(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?(?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))",
       "location": "path"
      }
     },
     "parameterOrder": [
      "project"
     ],
     "response": {
      "$ref": "TypesListResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/cloud-platform.read-only",
      "https://www.googleapis.com/auth/ndev.cloudman",
      "https://www.googleapis.com/auth/ndev.cloudman.readonly"
     ]
    }
   }
  }
 }
}
