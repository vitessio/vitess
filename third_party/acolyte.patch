diff --git a/core/src/main/java/acolyte/jdbc/AbstractStatement.java b/core/src/main/java/acolyte/jdbc/AbstractStatement.java
index fb81f2d..aec6a2b 100644
--- a/core/src/main/java/acolyte/jdbc/AbstractStatement.java
+++ b/core/src/main/java/acolyte/jdbc/AbstractStatement.java
@@ -377,10 +377,11 @@ abstract class AbstractStatement implements java.sql.Statement {

     /**
      * {@inheritDoc}
-     * @throws java.sql.SQLException Batch is not supported
      */
     public void clearBatch() throws SQLException {
-        throw new SQLException("Batch is not supported");
+        checkClosed();
+
+        // batches are not supported, nothing to clear, operation is no op
     } // end of clearBatch

     /**
diff --git a/core/src/main/java/acolyte/jdbc/CallableStatement.java b/core/src/main/java/acolyte/jdbc/CallableStatement.java
index f2396cf..ed9948e 100644
--- a/core/src/main/java/acolyte/jdbc/CallableStatement.java
+++ b/core/src/main/java/acolyte/jdbc/CallableStatement.java
@@ -784,6 +784,7 @@ public final class CallableStatement

     /* Java 1.7
      * {@inheritDoc}
+     */
     public <T extends Object> T getObject(final int parameterIndex,
                                           final Class<T> type)
         throws SQLException {
@@ -810,7 +811,6 @@ public final class CallableStatement

         return this.result.getObject(parameterName, type);
     } // end of getObject
-    */

     /**
      * {@inheritDoc}
diff --git a/core/src/main/java/acolyte/jdbc/Connection.java b/core/src/main/java/acolyte/jdbc/Connection.java
index 6831fb1..1c65fdc 100644
--- a/core/src/main/java/acolyte/jdbc/Connection.java
+++ b/core/src/main/java/acolyte/jdbc/Connection.java
@@ -28,7 +28,7 @@ import java.sql.Clob;
  *
  * @author Cedric Chantepie
  */
-public final class Connection implements java.sql.Connection {
+public class Connection implements java.sql.Connection {
     // --- Properties ---

     /**
@@ -134,6 +134,20 @@ public final class Connection implements java.sql.Connection {
         } // end of if
     } // end of <init>

+    /**
+     * Copy constructor.
+     *
+     * Works only with freshly created connections, which should not
+     * be used afterwards.
+     *
+     * @param connection Connection to copy
+     */
+    protected Connection(Connection connection) {
+        this.url = connection.url;
+        this.props = connection.props;
+        this.handler = connection.handler;
+    }
+
     // --- Connection impl ---

     /**
