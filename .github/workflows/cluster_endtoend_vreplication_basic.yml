# DO NOT MODIFY: THIS FILE IS GENERATED USING "make generate_ci_workflows"

name: Cluster (vreplication_basic)
on: [push]
concurrency:
  group: format('{0}-{1}', ${{ github.ref }}, 'Cluster (vreplication_basic)')
  cancel-in-progress: true

jobs:
  build:
    name: Run endtoend tests on Cluster (vreplication_basic)
    runs-on: ubuntu-20.04
    timeout-minutes: 60

    steps:
    - name: Configure git private repo access
      env:
        GITHUB_TOKEN: ${{ secrets.PLANETSCALE_ACTIONS_BOT_TOKEN }}
      run: |
        git config --global --add url."https://${GITHUB_TOKEN}@github.com/".insteadOf "https://github.com/"

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.18.4

    - name: Set up python
      uses: actions/setup-python@v2

    - name: Tune the OS
      run: |
        echo '1024 65535' | sudo tee -a /proc/sys/net/ipv4/ip_local_port_range
        # Increase the asynchronous non-blocking I/O. More information at https://dev.mysql.com/doc/refman/5.7/en/innodb-parameters.html#sysvar_innodb_use_native_aio
        echo "fs.aio-max-nr = 1048576" | sudo tee -a /etc/sysctl.conf
        sudo sysctl -p /etc/sysctl.conf

    - name: Check out code
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        # Setup Percona Server for MySQL 8.0
        sudo apt-get update
        sudo apt-get install -y lsb-release gnupg2 curl
        wget https://repo.percona.com/apt/percona-release_latest.$(lsb_release -sc)_all.deb
        sudo DEBIAN_FRONTEND="noninteractive" dpkg -i percona-release_latest.$(lsb_release -sc)_all.deb
        sudo percona-release setup ps80
        sudo apt-get update

        # Install everything else we need, and configure
        sudo apt-get install -y percona-server-server percona-server-client make unzip g++ etcd git wget eatmydata xz-utils
        sudo service mysql stop
        sudo service etcd stop
        sudo ln -s /etc/apparmor.d/usr.sbin.mysqld /etc/apparmor.d/disable/
        sudo apparmor_parser -R /etc/apparmor.d/usr.sbin.mysqld
        go mod download

    - name: Run cluster endtoend test
      timeout-minutes: 45
      run: |
        # We set the VTDATAROOT to the /tmp folder to reduce the file path of mysql.sock file
        # which musn't be more than 107 characters long.
        export VTDATAROOT="/tmp/"
        source build.env

        set -x

        # Increase our local ephemeral port range as we could exhaust this
        sudo sysctl -w net.ipv4.ip_local_port_range="22768 61999"
        # Increase our open file descriptor limit as we could hit this
        ulimit -n 65536
        cat <<-EOF>>./config/mycnf/mysql80.cnf
        innodb_buffer_pool_dump_at_shutdown=OFF
        innodb_buffer_pool_in_core_file=OFF
        innodb_buffer_pool_load_at_startup=OFF
        innodb_buffer_pool_size=64M
        innodb_doublewrite=OFF
        innodb_flush_log_at_trx_commit=0
        innodb_flush_neighbors=0
        innodb_flush_method=O_DIRECT
        innodb_numa_interleave=ON
        innodb_adaptive_hash_index=OFF
        sync_binlog=0
        sync_relay_log=0
        slave_parallel_type=LOGICAL_CLOCK
        slave_parallel_workers=4
        slave_preserve_commit_order=ON
        transaction_write_set_extraction=XXHASH64
        binlog_transaction_dependency_tracking=WRITESET
        performance_schema=OFF
        slow-query-log=OFF
        EOF
        
        eatmydata -- go run test.go -docker=false -follow -shard vreplication_basic
