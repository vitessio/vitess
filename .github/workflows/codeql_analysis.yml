name: "CodeQL"

on:
  push:
    branches:
      - main
      - release-**.0
  schedule:
    - cron: '0 0 * * 1'
  workflow_dispatch:

permissions: read-all

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-24.04
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'go', 'javascript', 'python' ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: 'false'

      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: go.mod

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          # If you wish to specify cu stom queries, you can do so here or in a config file.
          # By default, queries listed here will override any specified in a config file.
          # Prefix the list here with "+" to use these queries and those in the config file.

          # Details on CodeQL's query packs refer to : https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
          # queries: security-extended,security-and-quality

      - name: Setup MySQL
        uses: ./.github/actions/setup-mysql
        with:
          flavor: mysql-8.4

      - name: Get base dependencies
        timeout-minutes: 10
        run: |
          sudo DEBIAN_FRONTEND="noninteractive" apt-get update

          # Install everything else we need, and configure
          sudo apt-get install -y make unzip g++ etcd-client etcd-server curl git wget eatmydata
          
          sudo service etcd stop
          
          # install JUnit report formatter
          go install github.com/vitessio/go-junit-report@HEAD
          
      - name: Building binaries
        timeout-minutes: 30
        run: |
          source build.env
          make build

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      - name: Slack Workflow Notification
        if: ${{ failure() }}
        uses: Gamesight/slack-workflow-status@master
        with:
          repo_token: ${{secrets.GITHUB_TOKEN}}
          slack_webhook_url: ${{secrets.SLACK_WEBHOOK_URL}}
          channel: '#codeql'
          name: 'CodeQL Workflows'

      - name: Fail if needed
        if: ${{ failure() }}
        run: |
          exit 1
