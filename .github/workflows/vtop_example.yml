name: vtop_example
on:
  push:
    branches:
      - "main"
      - "release-[0-9]+.[0-9]"
    tags: '**'
  pull_request:
    branches: '**'
concurrency:
  group: format('{0}-{1}', ${{ github.ref }}, 'vtop_example')
  cancel-in-progress: true

jobs:
  build:
    name: VTop Example
    runs-on: self-hosted

    steps:
      - name: Skip CI
        run: |
          if [[ "${{contains( github.event.pull_request.labels.*.name, 'Skip CI')}}" == "true" ]]; then
            echo "skipping CI due to the 'Skip CI' label"
            exit 1
          fi

      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: 'false'

      - name: Check for changes in relevant files
        uses: dorny/paths-filter@ebc4d7e9ebcb0b1eb21480bb8f43113e996ac77a # v3.0.1
        id: changes
        with:
          token: ''
          filters: |
            end_to_end:
              - 'go/**/*.go'
              - 'go/vt/sidecardb/**/*.sql'
              - 'test.go'
              - 'Makefile'
              - 'build.env'
              - 'go.[sumod]'
              - 'proto/*.proto'
              - 'tools/**'
              - 'config/**'
              - 'bootstrap.sh'
              - 'examples/**'
              - 'test/**'
              - '.github/workflows/vtop_example.yml'

      - name: Set up Go
        if: steps.changes.outputs.end_to_end == 'true'
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: go.mod

      - name: Tune the OS
        if: steps.changes.outputs.end_to_end == 'true'
        uses: ./.github/actions/tune-os

      - name: Get dependencies
        if: steps.changes.outputs.end_to_end == 'true'
        run: |
          # Install everything we need, and configure
          sudo apt-get install -y make
          go mod download

      # needed for vtctldclient
      - name: Build vitess
        if: steps.changes.outputs.end_to_end == 'true'
        run: |
          make build

      - name: Install kubectl & kind
        if: steps.changes.outputs.end_to_end == 'true'
        run: |
          make install_kubectl_kind

      - name: vtop_example
        if: steps.changes.outputs.end_to_end == 'true'
        timeout-minutes: 60
        run: |
          source build.env
          go run test.go -docker=false -skip-build -print-log -follow -retry=1 -timeout=60m vtop_example