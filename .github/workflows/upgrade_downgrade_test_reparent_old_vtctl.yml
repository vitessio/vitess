name: Reparent Old Vtctl - Upgrade Downgrade Testing
on:
  push:
    branches:
      - "main"
      - "release-[0-9]+.[0-9]"
    tags: '**'
  pull_request:
    branches: '**'

concurrency:
  group: format('{0}-{1}', ${{ github.ref }}, 'Upgrade Downgrade Testing Reparent Old Vtctl')
  cancel-in-progress: true

permissions: read-all

# This test ensures that our end-to-end tests work using Vitess components
# (vtctl, vttablet, etc) built on different versions.

jobs:

  upgrade_downgrade_test:
    timeout-minutes: 60
    name: Run Upgrade Downgrade Test - Reparent Old Vtctl
    runs-on: gh-hosted-runners-16cores-1-24.04

    steps:
    - name: Skip CI
      run: |
        if [[ "${{contains( github.event.pull_request.labels.*.name, 'Skip CI')}}" == "true" ]]; then
          echo "skipping CI due to the 'Skip CI' label"
          exit 1
        fi

    - name: Check out commit's code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-depth: 0
        persist-credentials: 'false'

    - name: Set output with latest release branch
      id: output-previous-release-ref
      run: |
        previous_release_ref=$(./tools/get_previous_release.sh ${{github.base_ref}} ${{github.ref}})
        echo $previous_release_ref
        echo "previous_release_ref=${previous_release_ref}" >> $GITHUB_OUTPUT

    - name: Check for changes in relevant files
      uses: dorny/paths-filter@ebc4d7e9ebcb0b1eb21480bb8f43113e996ac77a # v3.0.1
      id: changes
      with:
        token: ''
        filters: |
          end_to_end:
            - 'test/config.json'
            - 'go/**'
            - 'go/**/*.go'
            - 'test.go'
            - 'Makefile'
            - 'build.env'
            - 'go.sum'
            - 'go.mod'
            - 'proto/*.proto'
            - 'tools/**'
            - 'config/**'
            - 'bootstrap.sh'
            - '.github/workflows/upgrade_downgrade_test_reparent_old_vtctl.yml'

    - name: Set up Go
      if: steps.changes.outputs.end_to_end == 'true'
      uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
      with:
        go-version: 1.22.12

    - name: Set up python
      if: steps.changes.outputs.end_to_end == 'true'
      uses: actions/setup-python@39cd14951b08e74b54015e9e001cdefcf80e669f # v5.1.1

    - name: Tune the OS
      if: steps.changes.outputs.end_to_end == 'true'
      run: |
        sudo sysctl -w net.ipv4.ip_local_port_range="22768 65535"

        # Don't waste a bunch of time processing man-db triggers
        echo "set man-db/auto-update false" | sudo debconf-communicate
        sudo dpkg-reconfigure man-db

    - name: Get base dependencies
      timeout-minutes: 10
      if: steps.changes.outputs.end_to_end == 'true'
      run: |
        sudo DEBIAN_FRONTEND="noninteractive" apt-get update
        # Uninstall any previously installed MySQL first
        sudo systemctl stop apparmor
        sudo DEBIAN_FRONTEND="noninteractive" apt-get remove -y --purge mysql-server mysql-client mysql-common
        sudo apt-get -y autoremove
        sudo apt-get -y autoclean
        sudo deluser mysql
        sudo rm -rf /var/lib/mysql
        sudo rm -rf /etc/mysql
        # Install mysql80
        sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys A8D3785C
        wget -c https://dev.mysql.com/get/mysql-apt-config_0.8.33-1_all.deb
        echo mysql-apt-config mysql-apt-config/select-server select mysql-8.0 | sudo debconf-set-selections
        sudo DEBIAN_FRONTEND="noninteractive" dpkg -i mysql-apt-config*
        sudo apt-get update
        sudo DEBIAN_FRONTEND="noninteractive" apt-get install -y mysql-server mysql-client
        # Install everything else we need, and configure
        sudo apt-get install -y make unzip g++ etcd-client etcd-server curl git wget eatmydata
        sudo service mysql stop
        sudo service etcd stop
        sudo bash -c "echo '/usr/sbin/mysqld { }' > /etc/apparmor.d/usr.sbin.mysqld" # https://bugs.launchpad.net/ubuntu/+source/mariadb-10.1/+bug/1806263
        sudo ln -s /etc/apparmor.d/usr.sbin.mysqld /etc/apparmor.d/disable/
        sudo apparmor_parser -R /etc/apparmor.d/usr.sbin.mysqld || echo "could not remove mysqld profile"

        # install JUnit report formatter
        go install github.com/vitessio/go-junit-report@HEAD

    # Checkout to the last release of Vitess
    - name: Check out other version's code (${{ steps.output-previous-release-ref.outputs.previous_release_ref }})
      if: steps.changes.outputs.end_to_end == 'true'
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        ref: ${{ steps.output-previous-release-ref.outputs.previous_release_ref }}
        persist-credentials: 'false'

    - name: Get dependencies for the last release
      if: steps.changes.outputs.end_to_end == 'true'
      run: |
        go mod download

    - name: Building last release's binaries
      if: steps.changes.outputs.end_to_end == 'true'
      timeout-minutes: 10
      run: |
        source build.env
        NOVTADMINBUILD=1 make build
        mkdir -p /tmp/vitess-build-other/
        cp -R bin /tmp/vitess-build-other/
        rm -Rf bin/*

    # Checkout to this build's commit
    - name: Check out commit's code
      if: steps.changes.outputs.end_to_end == 'true'
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        persist-credentials: 'false'

    - name: Get dependencies for this commit
      if: steps.changes.outputs.end_to_end == 'true'
      run: |
        go mod download

    - name: Building the binaries for this commit
      if: steps.changes.outputs.end_to_end == 'true'
      timeout-minutes: 10
      run: |
        source build.env
        NOVTADMINBUILD=1 make build
        mkdir -p /tmp/vitess-build-current/
        cp -R bin /tmp/vitess-build-current/

    # Swap the binaries in the bin. Use vtctl version n-1 and keep vttablet at version n
    - name: Use last release's Vtctl
      if: steps.changes.outputs.end_to_end == 'true'
      run: |
        source build.env

        rm -f $PWD/bin/vtctl $PWD/bin/vtctld $PWD/bin/vtctlclient $PWD/bin/vtctldclient
        cp /tmp/vitess-build-other/bin/vtctl $PWD/bin/vtctl
        cp /tmp/vitess-build-other/bin/vtctld $PWD/bin/vtctld
        cp /tmp/vitess-build-other/bin/vtctlclient $PWD/bin/vtctlclient
        cp /tmp/vitess-build-other/bin/vtctldclient $PWD/bin/vtctldclient
        vtctl --version
        vttablet --version

    # Running a test with vtctl at version n-1 and vttablet at version n
    - name: Run reparent tests (vtctl=N-1, vttablet=N)
      if: steps.changes.outputs.end_to_end == 'true'
      run: |
        rm -rf /tmp/vtdataroot
        mkdir -p /tmp/vtdataroot

        source build.env
        eatmydata -- go run test.go -skip-build -keep-data=false -docker=false -print-log -follow -tag upgrade_downgrade_reparent
