name: unit
on: [push, pull_request]
jobs:

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        name: [percona56, mysql57, mysql80, mariadb101, mariadb102, mariadb103]

    steps:
    - name: Set up Go
      uses: actions/setup-go@v1
      with:
        go-version: 1.13

    - name: Check out code
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        export DEBIAN_FRONTEND="noninteractive"
        sudo apt-get update

        if [ ${{matrix.name}} = "mysql57" ]; then
          sudo apt-get install -y mysql-server mysql-client
        else
          # Uninstall likely installed MySQL first
          sudo systemctl stop apparmor
          sudo DEBIAN_FRONTEND="noninteractive" apt-get remove -y --purge mysql-server mysql-client mysql-common
          sudo apt-get -y autoremove
          sudo apt-get -y autoclean
          sudo deluser mysql
          sudo rm -rf /var/lib/mysql
          sudo rm -rf /etc/mysql
 
          if [ ${{matrix.name}} = "percona56" ]; then
            sudo rm -rf /var/lib/mysql
            sudo apt install -y gnupg2
            wget https://repo.percona.com/apt/percona-release_latest.$(lsb_release -sc)_all.deb
            sudo dpkg -i percona-release_latest.$(lsb_release -sc)_all.deb
            sudo apt update
            sudo DEBIAN_FRONTEND="noninteractive" apt-get install -y percona-server-server-5.6 percona-server-client-5.6  
          elif [ ${{matrix.name}} = "mysql80" ]; then
            wget -c https://dev.mysql.com/get/mysql-apt-config_0.8.14-1_all.deb
            echo mysql-apt-config mysql-apt-config/select-server select mysql-8.0 | sudo debconf-set-selections 
            sudo DEBIAN_FRONTEND="noninteractive" dpkg -i mysql-apt-config*
            sudo apt-get update
            sudo DEBIAN_FRONTEND="noninteractive" apt-get install -y mysql-server mysql-client
          elif [ ${{matrix.name}} = "mariadb101" ]; then
            sudo apt-get install -y software-properties-common
            sudo apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 0xF1656F24C74CD1D8
            sudo add-apt-repository 'deb [arch=amd64,arm64,ppc64el] http://nyc2.mirrors.digitalocean.com/mariadb/repo/10.1/ubuntu bionic main'
            sudo apt update
            sudo DEBIAN_FRONTEND="noninteractive" apt install -y mariadb-server
          elif [ ${{matrix.name}} = "mariadb102" ]; then
            sudo apt-get install -y software-properties-common
            sudo apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 0xF1656F24C74CD1D8
            sudo add-apt-repository 'deb [arch=amd64,arm64,ppc64el] http://nyc2.mirrors.digitalocean.com/mariadb/repo/10.2/ubuntu bionic main'
            sudo apt update
            sudo DEBIAN_FRONTEND="noninteractive" apt install -y mariadb-server
          elif [ ${{matrix.name}} = "mariadb103" ]; then
            sudo apt-get install -y software-properties-common
            sudo apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 0xF1656F24C74CD1D8
            sudo add-apt-repository 'deb [arch=amd64,arm64,ppc64el] http://nyc2.mirrors.digitalocean.com/mariadb/repo/10.3/ubuntu bionic main'
            sudo apt update
            sudo DEBIAN_FRONTEND="noninteractive" apt install -y mariadb-server
          fi
        fi

        sudo apt-get install -y make unzip g++ curl git wget ant openjdk-8-jdk eatmydata
        sudo service mysql stop
        sudo bash -c "echo '/usr/sbin/mysqld { }' > /etc/apparmor.d/usr.sbin.mysqld" # https://bugs.launchpad.net/ubuntu/+source/mariadb-10.1/+bug/1806263
        sudo ln -s /etc/apparmor.d/usr.sbin.mysqld /etc/apparmor.d/disable/
        sudo apparmor_parser -R /etc/apparmor.d/usr.sbin.mysqld || echo "could not remove mysqld profile"

        mkdir -p dist bin
        curl -L https://github.com/coreos/etcd/releases/download/v3.3.10/etcd-v3.3.10-linux-amd64.tar.gz | tar -zxC dist
        mv dist/etcd-v3.3.10-linux-amd64/{etcd,etcdctl} bin/

        go mod download

    - name: Run make tools
      run: |
        make tools

    - name: unit
      timeout-minutes: 30
      run: |
        eatmydata -- make unit_test
