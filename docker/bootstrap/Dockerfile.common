FROM golang:1.13-buster

# Install Vitess build dependencies
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    # TODO(mberlin): Group these to make it easier to understand which library actually requires them.
    ant \
    chromium \
    curl \
    default-jdk \
    etcd \
    g++ \
    git \
    make \
    maven \
    software-properties-common \
    unzip \
    zip \
    && rm -rf /var/lib/apt/lists/*

# Set up Vitess environment (equivalent to '. dev.env')
ENV VTROOT /vt/src/vitess.io/vitess
ENV VTDATAROOT /vt/vtdataroot
ENV VTPORTSTART 15000
ENV PATH $VTROOT/bin:$VTROOT/dist/maven/bin:$VTROOT/dist/chromedriver:$PATH
ENV USER vitess

# Copy files needed for bootstrap
COPY bootstrap.sh dev.env build.env go.mod go.sum /vt/src/vitess.io/vitess/
COPY config /vt/src/vitess.io/vitess/config
COPY tools /vt/src/vitess.io/vitess/tools

# Create vitess user
RUN groupadd -r vitess && useradd -r -g vitess vitess && \
    mkdir -p /vt/vtdataroot /home/vitess && \
    chown -R vitess:vitess /vt /home/vitess

# Download vendored Go dependencies
RUN cd /vt/src/vitess.io/vitess && \
 su vitess -c "/usr/local/go/bin/go mod download"

# Create mount point for actual data (e.g. MySQL data dir)
VOLUME /vt/vtdataroot

# The docker lite images copy from the builder in /vt/bin
# Add compatibility to the previous layout for now
RUN su vitess -c "mkdir -p /vt/src/vitess.io/vitess/bin && rm -rf /vt/bin && ln -s /vt/src/vitess.io/vitess/bin /vt/bin"

# If the user doesn't specify a command, load a shell.
CMD ["/bin/bash"]

