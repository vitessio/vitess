FROM golang:1.7

# Install Vitess build dependencies
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    automake \
    bison \
    bzip2 \
    chromium \
    curl \
    g++ \
    git \
    libgconf-2-4 \
    libssl-dev \
    libtool \
    make \
    mercurial \
    openjdk-7-jdk \
    php-pear \
    php5-cli \
    php5-dev \
    pkg-config \
    python-crypto \
    python-dev \
    python-mysqldb \
    ruby \
    ruby-dev \
    software-properties-common \
    virtualenv \
    unzip \
    xvfb \
    && rm -rf /var/lib/apt/lists/*

# Install newer pip
# We can't use the apt package from jessie because it depends
# on a version of python-six that's too old for gRPC.
RUN curl -sL --connect-timeout 10 --retry 3 \
    https://bootstrap.pypa.io/get-pip.py | python

# Install PHP modules for running tests
RUN export MAKEFLAGS="-j$(nproc)" && \
    mkdir -p /vt/bin && \
    curl -sL --connect-timeout 10 --retry 3 \
        https://phar.phpunit.de/phpunit-4.8.9.phar > /vt/bin/phpunit && \
    chmod +x /vt/bin/phpunit && \
    curl -sL --connect-timeout 10 --retry 3 \
        https://getcomposer.org/installer | php -- --install-dir=/vt/bin --filename=composer && \
    pecl install xdebug && \
    echo "zend_extension=$(pecl config-get ext_dir default)/xdebug.so" > /etc/php5/cli/conf.d/20-xdebug.ini

# Install Maven 3.1+
RUN mkdir -p /vt/dist && \
    cd /vt/dist && \
    curl -sL --connect-timeout 10 --retry 3 \
        http://www-us.apache.org/dist/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz | tar -xz && \
    mv apache-maven-3.3.9 maven

# Install etcd v2.0
RUN mkdir -p /go/src/github.com/coreos && \
    cd /go/src/github.com/coreos && \
    curl -sL --connect-timeout 10 --retry 3 \
        https://github.com/coreos/etcd/archive/v2.0.13.tar.gz | tar -xz && \
    mv etcd-2.0.13 etcd && \
    go install github.com/coreos/etcd && \
    rm -rf /go/src/*

# Set up Vitess environment (equivalent to '. dev.env')
ENV VTTOP /vt/src/github.com/youtube/vitess
ENV VTROOT /vt
ENV GOTOP $VTTOP/go
ENV PYTOP $VTTOP/py
ENV VTDATAROOT $VTROOT/vtdataroot
ENV VTPORTSTART 15000
ENV PYTHONPATH $VTROOT/dist/py-mock-1.0.1/lib/python2.7/site-packages:$VTROOT/py-vtdb:$VTROOT/dist/selenium/lib/python2.7/site-packages
ENV GOBIN $VTROOT/bin
ENV GOPATH $VTROOT
ENV PATH $VTROOT/bin:$VTROOT/dist/maven/bin:$VTROOT/dist/chromedriver:$PATH
ENV VT_MYSQL_ROOT /usr
ENV PKG_CONFIG_PATH $VTROOT/lib
ENV GO15VENDOREXPERIMENT 1

# Copy files needed for bootstrap
COPY bootstrap.sh dev.env /vt/src/github.com/youtube/vitess/
COPY config /vt/src/github.com/youtube/vitess/config
COPY third_party /vt/src/github.com/youtube/vitess/third_party
COPY tools /vt/src/github.com/youtube/vitess/tools
COPY travis /vt/src/github.com/youtube/vitess/travis
COPY composer.json composer.lock /vt/src/github.com/youtube/vitess/
COPY vendor/vendor.json /vt/src/github.com/youtube/vitess/vendor/

# Download vendored Go dependencies
RUN cd /vt/src/github.com/youtube/vitess && \
    go get -u github.com/kardianos/govendor && \
    govendor sync && \
    rm -rf /vt/.cache

# Install gRPC (and protobuf) as root
RUN export MAKEFLAGS="-j$(nproc)" && \
    cd /vt/dist && \
    INSTALL_GRPC_PHP=`php-config --extension-dir` $VTTOP/travis/install_grpc.sh && \
    echo 'extension=grpc.so' > /etc/php5/cli/conf.d/20-grpc.ini && \
    rm -rf /vt/dist/grpc

# Install gRPC PHP dependencies
RUN cd /vt/src/github.com/youtube/vitess && \
    composer install && \
    find php/vendor/grpc/grpc -mindepth 1 -maxdepth 1 ! -name src | xargs rm -rf && \
    find php/vendor/grpc/grpc/src -mindepth 1 -maxdepth 1 ! -name php | xargs rm -rf

# Install PHP protobuf compiler plugin
RUN cd /vt/src/github.com/youtube/vitess/php/vendor/stanley-cheung/protobuf-php && \
    gem install rake ronn && \
    rake pear:package version=1.0 && \
    pear install Protobuf-1.0.tgz

# Create vitess user
RUN groupadd -r vitess && useradd -r -g vitess vitess && \
    mkdir -p /vt/vtdataroot /home/vitess && \
    chown -R vitess:vitess /vt /home/vitess

# Create mount point for actual data (e.g. MySQL data dir)
VOLUME /vt/vtdataroot

# If the user doesn't specify a command, load a shell.
CMD ["/bin/bash"]

