<div class="container">
  <div class="panel panel-default">
    <div class="panel-heading">
      FAQ
    </div>
    <div class="panel-body">
      <p>
        <strong>Who should use orchestrator?</strong>
      </p>
      <p>
        DBAs and ops who have more than a mere primary-replica replication topology.
      </p>
      <p>
        <strong>Is this yet another monitoring tool?</strong>
      </p>
      <p>
        No. <i>Orchestrator</i> is strictly NOT a monitoring tool. There is no intention to make it so; no alerts or emails. It does provide with online visualization of your topology status though, and requires some thresholds of its own in order to
        manage the topology.
      </p>
      <p>
        <strong>What kind of replication does orchestrator support?</strong>
      </p>
      <p>
        <i>Orchestrator</i> supports "plain-old-MySQL-replication", the one that uses binary log files and positions. If you don't know what you're using, this is probably the one. It is the only type of replication up to and including MySQL 5.5.
      </p>
      <p>
        <strong>Does orchestrator support Row Based Replication?</strong>
      </p>
      <p>
        Yes. Statement Based Replication and Row Based Replication are both supported (and are in fact irrelevant)
      </p>
      <p>
        <strong>Does orchestrator support Primary-Primary (ring) Replication?</strong>
      </p>
      <p>
        Yes, for a ring of two primaries (active-active, active-passive). Do note that the tree visualization cannot present the circular replication, and will pick an arbitrary primary as the root of the tree.
      </p>
      <p>
        Primary-Primary-Primary[-Primary...] topologies, where the ring is composed of 3 or more primaries are not supported and not tested. And are discouraged. And are an abomination.
      </p>
      <p>
        <strong>Does orchestrator support Galera Replication?</strong>
      </p>
      <p>
        Yes and no. <i>Orchestrator</i> is unaware of Galera replication. If you have three Galera primaries and different replica topologies under each primary, then <i>orchestrator</i> sees these as three different topologies.
      </p>
      <p>
        <strong>Does orchestrator support GTID Replication?</strong>
      </p>
      <p>
        Not at this stage. This is mainly because the developers of <i>orchestrator</i> feel GTID is not yet complete, and are anyhow not using a MySQL which supports GTID. It is likely that GTID will be supported in the future.
      </p>
      <p>
        <strong>Does orchestrator support Parallel Replication?</strong>
      </p>
      <p>
        No. This is because <code>START SLAVE UNTIL</code> is not supported in parallel replication, and output of
        <code>SHOW SLAVE STATUS</code> is incomplete. There is no expected work on this.
      </p>
      <p>
        <strong>Does orchestrator support Multi-Primary Replication?</strong>
      </p>
      <p>
        No. Multi Primary Replication (e.g. as in MariaDB 10.0) is not supported.
      </p>
      <p>
        <strong>Does orchestrator support Tungsten Replication?</strong>
      </p>
      <p>
        No.
      </p>
      <p>
        <strong>Does orchestrator support Yet Another Type of Replication?</strong>
      </p>
      <p>
        No.
      </p>
      <p>
        <strong>Does orchestrator support...</strong>
      </p>
      <p>
        No.
      </p>
      <p>
        <strong>Is orchestrator open source?</strong>
      </p>
      <p>
        Yes.
        <i>Orchestrator</i> is released as open source under the
        <a href="http://www.apache.org/licenses/LICENSE-2.0">Apache 2.0 license</a> and is available at:
        <a href="https://github.com/openark/orchestrator">https://github.com/openark/orchestrator</a>
      </p>
      <p>
        <strong>Who develops orchestrator and why?</strong>
      </p>
      <p>
        <i>Orchestrator</i> is developed by Shlomi Noach at <a href="http://github.com">GitHub</a> (previously at [Booking.com](http://booking.com) and [Outbrain](http://outbrain.com)) to assist in managing multiple large replication topologies; time
        and human errors saved so far are almost priceless.
      </p>
    </div>
  </div>
</div>
