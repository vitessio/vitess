import * as $protobuf from "protobufjs";
/** Namespace vtadmin. */
export namespace vtadmin {

    /** Represents a VTAdmin */
    class VTAdmin extends $protobuf.rpc.Service {

        /**
         * Constructs a new VTAdmin service.
         * @param rpcImpl RPC implementation
         * @param [requestDelimited=false] Whether requests are length-delimited
         * @param [responseDelimited=false] Whether responses are length-delimited
         */
        constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

        /**
         * Creates new VTAdmin service using the specified rpc implementation.
         * @param rpcImpl RPC implementation
         * @param [requestDelimited=false] Whether requests are length-delimited
         * @param [responseDelimited=false] Whether responses are length-delimited
         * @returns RPC service. Useful where requests and/or responses are streamed.
         */
        public static create(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean): VTAdmin;

        /**
         * Calls FindSchema.
         * @param request FindSchemaRequest message or plain object
         * @param callback Node-style callback called with the error, if any, and Schema
         */
        public findSchema(request: vtadmin.IFindSchemaRequest, callback: vtadmin.VTAdmin.FindSchemaCallback): void;

        /**
         * Calls FindSchema.
         * @param request FindSchemaRequest message or plain object
         * @returns Promise
         */
        public findSchema(request: vtadmin.IFindSchemaRequest): Promise<vtadmin.Schema>;

        /**
         * Calls GetClusters.
         * @param request GetClustersRequest message or plain object
         * @param callback Node-style callback called with the error, if any, and GetClustersResponse
         */
        public getClusters(request: vtadmin.IGetClustersRequest, callback: vtadmin.VTAdmin.GetClustersCallback): void;

        /**
         * Calls GetClusters.
         * @param request GetClustersRequest message or plain object
         * @returns Promise
         */
        public getClusters(request: vtadmin.IGetClustersRequest): Promise<vtadmin.GetClustersResponse>;

        /**
         * Calls GetGates.
         * @param request GetGatesRequest message or plain object
         * @param callback Node-style callback called with the error, if any, and GetGatesResponse
         */
        public getGates(request: vtadmin.IGetGatesRequest, callback: vtadmin.VTAdmin.GetGatesCallback): void;

        /**
         * Calls GetGates.
         * @param request GetGatesRequest message or plain object
         * @returns Promise
         */
        public getGates(request: vtadmin.IGetGatesRequest): Promise<vtadmin.GetGatesResponse>;

        /**
         * Calls GetKeyspaces.
         * @param request GetKeyspacesRequest message or plain object
         * @param callback Node-style callback called with the error, if any, and GetKeyspacesResponse
         */
        public getKeyspaces(request: vtadmin.IGetKeyspacesRequest, callback: vtadmin.VTAdmin.GetKeyspacesCallback): void;

        /**
         * Calls GetKeyspaces.
         * @param request GetKeyspacesRequest message or plain object
         * @returns Promise
         */
        public getKeyspaces(request: vtadmin.IGetKeyspacesRequest): Promise<vtadmin.GetKeyspacesResponse>;

        /**
         * Calls GetSchema.
         * @param request GetSchemaRequest message or plain object
         * @param callback Node-style callback called with the error, if any, and Schema
         */
        public getSchema(request: vtadmin.IGetSchemaRequest, callback: vtadmin.VTAdmin.GetSchemaCallback): void;

        /**
         * Calls GetSchema.
         * @param request GetSchemaRequest message or plain object
         * @returns Promise
         */
        public getSchema(request: vtadmin.IGetSchemaRequest): Promise<vtadmin.Schema>;

        /**
         * Calls GetSchemas.
         * @param request GetSchemasRequest message or plain object
         * @param callback Node-style callback called with the error, if any, and GetSchemasResponse
         */
        public getSchemas(request: vtadmin.IGetSchemasRequest, callback: vtadmin.VTAdmin.GetSchemasCallback): void;

        /**
         * Calls GetSchemas.
         * @param request GetSchemasRequest message or plain object
         * @returns Promise
         */
        public getSchemas(request: vtadmin.IGetSchemasRequest): Promise<vtadmin.GetSchemasResponse>;

        /**
         * Calls GetTablet.
         * @param request GetTabletRequest message or plain object
         * @param callback Node-style callback called with the error, if any, and Tablet
         */
        public getTablet(request: vtadmin.IGetTabletRequest, callback: vtadmin.VTAdmin.GetTabletCallback): void;

        /**
         * Calls GetTablet.
         * @param request GetTabletRequest message or plain object
         * @returns Promise
         */
        public getTablet(request: vtadmin.IGetTabletRequest): Promise<vtadmin.Tablet>;

        /**
         * Calls GetTablets.
         * @param request GetTabletsRequest message or plain object
         * @param callback Node-style callback called with the error, if any, and GetTabletsResponse
         */
        public getTablets(request: vtadmin.IGetTabletsRequest, callback: vtadmin.VTAdmin.GetTabletsCallback): void;

        /**
         * Calls GetTablets.
         * @param request GetTabletsRequest message or plain object
         * @returns Promise
         */
        public getTablets(request: vtadmin.IGetTabletsRequest): Promise<vtadmin.GetTabletsResponse>;

        /**
         * Calls GetVSchema.
         * @param request GetVSchemaRequest message or plain object
         * @param callback Node-style callback called with the error, if any, and VSchema
         */
        public getVSchema(request: vtadmin.IGetVSchemaRequest, callback: vtadmin.VTAdmin.GetVSchemaCallback): void;

        /**
         * Calls GetVSchema.
         * @param request GetVSchemaRequest message or plain object
         * @returns Promise
         */
        public getVSchema(request: vtadmin.IGetVSchemaRequest): Promise<vtadmin.VSchema>;

        /**
         * Calls GetVSchemas.
         * @param request GetVSchemasRequest message or plain object
         * @param callback Node-style callback called with the error, if any, and GetVSchemasResponse
         */
        public getVSchemas(request: vtadmin.IGetVSchemasRequest, callback: vtadmin.VTAdmin.GetVSchemasCallback): void;

        /**
         * Calls GetVSchemas.
         * @param request GetVSchemasRequest message or plain object
         * @returns Promise
         */
        public getVSchemas(request: vtadmin.IGetVSchemasRequest): Promise<vtadmin.GetVSchemasResponse>;

        /**
         * Calls GetWorkflow.
         * @param request GetWorkflowRequest message or plain object
         * @param callback Node-style callback called with the error, if any, and Workflow
         */
        public getWorkflow(request: vtadmin.IGetWorkflowRequest, callback: vtadmin.VTAdmin.GetWorkflowCallback): void;

        /**
         * Calls GetWorkflow.
         * @param request GetWorkflowRequest message or plain object
         * @returns Promise
         */
        public getWorkflow(request: vtadmin.IGetWorkflowRequest): Promise<vtadmin.Workflow>;

        /**
         * Calls GetWorkflows.
         * @param request GetWorkflowsRequest message or plain object
         * @param callback Node-style callback called with the error, if any, and GetWorkflowsResponse
         */
        public getWorkflows(request: vtadmin.IGetWorkflowsRequest, callback: vtadmin.VTAdmin.GetWorkflowsCallback): void;

        /**
         * Calls GetWorkflows.
         * @param request GetWorkflowsRequest message or plain object
         * @returns Promise
         */
        public getWorkflows(request: vtadmin.IGetWorkflowsRequest): Promise<vtadmin.GetWorkflowsResponse>;

        /**
         * Calls VTExplain.
         * @param request VTExplainRequest message or plain object
         * @param callback Node-style callback called with the error, if any, and VTExplainResponse
         */
        public vTExplain(request: vtadmin.IVTExplainRequest, callback: vtadmin.VTAdmin.VTExplainCallback): void;

        /**
         * Calls VTExplain.
         * @param request VTExplainRequest message or plain object
         * @returns Promise
         */
        public vTExplain(request: vtadmin.IVTExplainRequest): Promise<vtadmin.VTExplainResponse>;
    }

    namespace VTAdmin {

        /**
         * Callback as used by {@link vtadmin.VTAdmin#findSchema}.
         * @param error Error, if any
         * @param [response] Schema
         */
        type FindSchemaCallback = (error: (Error|null), response?: vtadmin.Schema) => void;

        /**
         * Callback as used by {@link vtadmin.VTAdmin#getClusters}.
         * @param error Error, if any
         * @param [response] GetClustersResponse
         */
        type GetClustersCallback = (error: (Error|null), response?: vtadmin.GetClustersResponse) => void;

        /**
         * Callback as used by {@link vtadmin.VTAdmin#getGates}.
         * @param error Error, if any
         * @param [response] GetGatesResponse
         */
        type GetGatesCallback = (error: (Error|null), response?: vtadmin.GetGatesResponse) => void;

        /**
         * Callback as used by {@link vtadmin.VTAdmin#getKeyspaces}.
         * @param error Error, if any
         * @param [response] GetKeyspacesResponse
         */
        type GetKeyspacesCallback = (error: (Error|null), response?: vtadmin.GetKeyspacesResponse) => void;

        /**
         * Callback as used by {@link vtadmin.VTAdmin#getSchema}.
         * @param error Error, if any
         * @param [response] Schema
         */
        type GetSchemaCallback = (error: (Error|null), response?: vtadmin.Schema) => void;

        /**
         * Callback as used by {@link vtadmin.VTAdmin#getSchemas}.
         * @param error Error, if any
         * @param [response] GetSchemasResponse
         */
        type GetSchemasCallback = (error: (Error|null), response?: vtadmin.GetSchemasResponse) => void;

        /**
         * Callback as used by {@link vtadmin.VTAdmin#getTablet}.
         * @param error Error, if any
         * @param [response] Tablet
         */
        type GetTabletCallback = (error: (Error|null), response?: vtadmin.Tablet) => void;

        /**
         * Callback as used by {@link vtadmin.VTAdmin#getTablets}.
         * @param error Error, if any
         * @param [response] GetTabletsResponse
         */
        type GetTabletsCallback = (error: (Error|null), response?: vtadmin.GetTabletsResponse) => void;

        /**
         * Callback as used by {@link vtadmin.VTAdmin#getVSchema}.
         * @param error Error, if any
         * @param [response] VSchema
         */
        type GetVSchemaCallback = (error: (Error|null), response?: vtadmin.VSchema) => void;

        /**
         * Callback as used by {@link vtadmin.VTAdmin#getVSchemas}.
         * @param error Error, if any
         * @param [response] GetVSchemasResponse
         */
        type GetVSchemasCallback = (error: (Error|null), response?: vtadmin.GetVSchemasResponse) => void;

        /**
         * Callback as used by {@link vtadmin.VTAdmin#getWorkflow}.
         * @param error Error, if any
         * @param [response] Workflow
         */
        type GetWorkflowCallback = (error: (Error|null), response?: vtadmin.Workflow) => void;

        /**
         * Callback as used by {@link vtadmin.VTAdmin#getWorkflows}.
         * @param error Error, if any
         * @param [response] GetWorkflowsResponse
         */
        type GetWorkflowsCallback = (error: (Error|null), response?: vtadmin.GetWorkflowsResponse) => void;

        /**
         * Callback as used by {@link vtadmin.VTAdmin#vTExplain}.
         * @param error Error, if any
         * @param [response] VTExplainResponse
         */
        type VTExplainCallback = (error: (Error|null), response?: vtadmin.VTExplainResponse) => void;
    }

    /** Properties of a Cluster. */
    interface ICluster {

        /** Cluster id */
        id?: (string|null);

        /** Cluster name */
        name?: (string|null);
    }

    /** Represents a Cluster. */
    class Cluster implements ICluster {

        /**
         * Constructs a new Cluster.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtadmin.ICluster);

        /** Cluster id. */
        public id: string;

        /** Cluster name. */
        public name: string;

        /**
         * Creates a new Cluster instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Cluster instance
         */
        public static create(properties?: vtadmin.ICluster): vtadmin.Cluster;

        /**
         * Encodes the specified Cluster message. Does not implicitly {@link vtadmin.Cluster.verify|verify} messages.
         * @param message Cluster message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtadmin.ICluster, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Cluster message, length delimited. Does not implicitly {@link vtadmin.Cluster.verify|verify} messages.
         * @param message Cluster message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtadmin.ICluster, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Cluster message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Cluster
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtadmin.Cluster;

        /**
         * Decodes a Cluster message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Cluster
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtadmin.Cluster;

        /**
         * Verifies a Cluster message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Cluster message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Cluster
         */
        public static fromObject(object: { [k: string]: any }): vtadmin.Cluster;

        /**
         * Creates a plain object from a Cluster message. Also converts values to other types if specified.
         * @param message Cluster
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtadmin.Cluster, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Cluster to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ClusterWorkflows. */
    interface IClusterWorkflows {

        /** ClusterWorkflows workflows */
        workflows?: (vtadmin.IWorkflow[]|null);

        /** ClusterWorkflows warnings */
        warnings?: (string[]|null);
    }

    /** Represents a ClusterWorkflows. */
    class ClusterWorkflows implements IClusterWorkflows {

        /**
         * Constructs a new ClusterWorkflows.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtadmin.IClusterWorkflows);

        /** ClusterWorkflows workflows. */
        public workflows: vtadmin.IWorkflow[];

        /** ClusterWorkflows warnings. */
        public warnings: string[];

        /**
         * Creates a new ClusterWorkflows instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ClusterWorkflows instance
         */
        public static create(properties?: vtadmin.IClusterWorkflows): vtadmin.ClusterWorkflows;

        /**
         * Encodes the specified ClusterWorkflows message. Does not implicitly {@link vtadmin.ClusterWorkflows.verify|verify} messages.
         * @param message ClusterWorkflows message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtadmin.IClusterWorkflows, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ClusterWorkflows message, length delimited. Does not implicitly {@link vtadmin.ClusterWorkflows.verify|verify} messages.
         * @param message ClusterWorkflows message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtadmin.IClusterWorkflows, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ClusterWorkflows message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ClusterWorkflows
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtadmin.ClusterWorkflows;

        /**
         * Decodes a ClusterWorkflows message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ClusterWorkflows
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtadmin.ClusterWorkflows;

        /**
         * Verifies a ClusterWorkflows message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ClusterWorkflows message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ClusterWorkflows
         */
        public static fromObject(object: { [k: string]: any }): vtadmin.ClusterWorkflows;

        /**
         * Creates a plain object from a ClusterWorkflows message. Also converts values to other types if specified.
         * @param message ClusterWorkflows
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtadmin.ClusterWorkflows, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ClusterWorkflows to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Keyspace. */
    interface IKeyspace {

        /** Keyspace cluster */
        cluster?: (vtadmin.ICluster|null);

        /** Keyspace keyspace */
        keyspace?: (vtctldata.IKeyspace|null);

        /** Keyspace shards */
        shards?: ({ [k: string]: vtctldata.IShard }|null);
    }

    /** Represents a Keyspace. */
    class Keyspace implements IKeyspace {

        /**
         * Constructs a new Keyspace.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtadmin.IKeyspace);

        /** Keyspace cluster. */
        public cluster?: (vtadmin.ICluster|null);

        /** Keyspace keyspace. */
        public keyspace?: (vtctldata.IKeyspace|null);

        /** Keyspace shards. */
        public shards: { [k: string]: vtctldata.IShard };

        /**
         * Creates a new Keyspace instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Keyspace instance
         */
        public static create(properties?: vtadmin.IKeyspace): vtadmin.Keyspace;

        /**
         * Encodes the specified Keyspace message. Does not implicitly {@link vtadmin.Keyspace.verify|verify} messages.
         * @param message Keyspace message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtadmin.IKeyspace, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Keyspace message, length delimited. Does not implicitly {@link vtadmin.Keyspace.verify|verify} messages.
         * @param message Keyspace message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtadmin.IKeyspace, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Keyspace message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Keyspace
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtadmin.Keyspace;

        /**
         * Decodes a Keyspace message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Keyspace
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtadmin.Keyspace;

        /**
         * Verifies a Keyspace message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Keyspace message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Keyspace
         */
        public static fromObject(object: { [k: string]: any }): vtadmin.Keyspace;

        /**
         * Creates a plain object from a Keyspace message. Also converts values to other types if specified.
         * @param message Keyspace
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtadmin.Keyspace, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Keyspace to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Schema. */
    interface ISchema {

        /** Schema cluster */
        cluster?: (vtadmin.ICluster|null);

        /** Schema keyspace */
        keyspace?: (string|null);

        /** Schema table_definitions */
        table_definitions?: (tabletmanagerdata.ITableDefinition[]|null);

        /** Schema table_sizes */
        table_sizes?: ({ [k: string]: vtadmin.Schema.ITableSize }|null);
    }

    /** Represents a Schema. */
    class Schema implements ISchema {

        /**
         * Constructs a new Schema.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtadmin.ISchema);

        /** Schema cluster. */
        public cluster?: (vtadmin.ICluster|null);

        /** Schema keyspace. */
        public keyspace: string;

        /** Schema table_definitions. */
        public table_definitions: tabletmanagerdata.ITableDefinition[];

        /** Schema table_sizes. */
        public table_sizes: { [k: string]: vtadmin.Schema.ITableSize };

        /**
         * Creates a new Schema instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Schema instance
         */
        public static create(properties?: vtadmin.ISchema): vtadmin.Schema;

        /**
         * Encodes the specified Schema message. Does not implicitly {@link vtadmin.Schema.verify|verify} messages.
         * @param message Schema message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtadmin.ISchema, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Schema message, length delimited. Does not implicitly {@link vtadmin.Schema.verify|verify} messages.
         * @param message Schema message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtadmin.ISchema, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Schema message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Schema
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtadmin.Schema;

        /**
         * Decodes a Schema message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Schema
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtadmin.Schema;

        /**
         * Verifies a Schema message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Schema message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Schema
         */
        public static fromObject(object: { [k: string]: any }): vtadmin.Schema;

        /**
         * Creates a plain object from a Schema message. Also converts values to other types if specified.
         * @param message Schema
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtadmin.Schema, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Schema to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace Schema {

        /** Properties of a ShardTableSize. */
        interface IShardTableSize {

            /** ShardTableSize row_count */
            row_count?: (number|Long|null);

            /** ShardTableSize data_length */
            data_length?: (number|Long|null);
        }

        /** Represents a ShardTableSize. */
        class ShardTableSize implements IShardTableSize {

            /**
             * Constructs a new ShardTableSize.
             * @param [properties] Properties to set
             */
            constructor(properties?: vtadmin.Schema.IShardTableSize);

            /** ShardTableSize row_count. */
            public row_count: (number|Long);

            /** ShardTableSize data_length. */
            public data_length: (number|Long);

            /**
             * Creates a new ShardTableSize instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ShardTableSize instance
             */
            public static create(properties?: vtadmin.Schema.IShardTableSize): vtadmin.Schema.ShardTableSize;

            /**
             * Encodes the specified ShardTableSize message. Does not implicitly {@link vtadmin.Schema.ShardTableSize.verify|verify} messages.
             * @param message ShardTableSize message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: vtadmin.Schema.IShardTableSize, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ShardTableSize message, length delimited. Does not implicitly {@link vtadmin.Schema.ShardTableSize.verify|verify} messages.
             * @param message ShardTableSize message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: vtadmin.Schema.IShardTableSize, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ShardTableSize message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ShardTableSize
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtadmin.Schema.ShardTableSize;

            /**
             * Decodes a ShardTableSize message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ShardTableSize
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtadmin.Schema.ShardTableSize;

            /**
             * Verifies a ShardTableSize message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ShardTableSize message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ShardTableSize
             */
            public static fromObject(object: { [k: string]: any }): vtadmin.Schema.ShardTableSize;

            /**
             * Creates a plain object from a ShardTableSize message. Also converts values to other types if specified.
             * @param message ShardTableSize
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: vtadmin.Schema.ShardTableSize, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ShardTableSize to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a TableSize. */
        interface ITableSize {

            /** TableSize row_count */
            row_count?: (number|Long|null);

            /** TableSize data_length */
            data_length?: (number|Long|null);

            /** TableSize by_shard */
            by_shard?: ({ [k: string]: vtadmin.Schema.IShardTableSize }|null);
        }

        /** Represents a TableSize. */
        class TableSize implements ITableSize {

            /**
             * Constructs a new TableSize.
             * @param [properties] Properties to set
             */
            constructor(properties?: vtadmin.Schema.ITableSize);

            /** TableSize row_count. */
            public row_count: (number|Long);

            /** TableSize data_length. */
            public data_length: (number|Long);

            /** TableSize by_shard. */
            public by_shard: { [k: string]: vtadmin.Schema.IShardTableSize };

            /**
             * Creates a new TableSize instance using the specified properties.
             * @param [properties] Properties to set
             * @returns TableSize instance
             */
            public static create(properties?: vtadmin.Schema.ITableSize): vtadmin.Schema.TableSize;

            /**
             * Encodes the specified TableSize message. Does not implicitly {@link vtadmin.Schema.TableSize.verify|verify} messages.
             * @param message TableSize message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: vtadmin.Schema.ITableSize, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified TableSize message, length delimited. Does not implicitly {@link vtadmin.Schema.TableSize.verify|verify} messages.
             * @param message TableSize message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: vtadmin.Schema.ITableSize, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a TableSize message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TableSize
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtadmin.Schema.TableSize;

            /**
             * Decodes a TableSize message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TableSize
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtadmin.Schema.TableSize;

            /**
             * Verifies a TableSize message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a TableSize message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TableSize
             */
            public static fromObject(object: { [k: string]: any }): vtadmin.Schema.TableSize;

            /**
             * Creates a plain object from a TableSize message. Also converts values to other types if specified.
             * @param message TableSize
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: vtadmin.Schema.TableSize, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TableSize to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a Tablet. */
    interface ITablet {

        /** Tablet cluster */
        cluster?: (vtadmin.ICluster|null);

        /** Tablet tablet */
        tablet?: (topodata.ITablet|null);

        /** Tablet state */
        state?: (vtadmin.Tablet.ServingState|null);
    }

    /** Represents a Tablet. */
    class Tablet implements ITablet {

        /**
         * Constructs a new Tablet.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtadmin.ITablet);

        /** Tablet cluster. */
        public cluster?: (vtadmin.ICluster|null);

        /** Tablet tablet. */
        public tablet?: (topodata.ITablet|null);

        /** Tablet state. */
        public state: vtadmin.Tablet.ServingState;

        /**
         * Creates a new Tablet instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Tablet instance
         */
        public static create(properties?: vtadmin.ITablet): vtadmin.Tablet;

        /**
         * Encodes the specified Tablet message. Does not implicitly {@link vtadmin.Tablet.verify|verify} messages.
         * @param message Tablet message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtadmin.ITablet, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Tablet message, length delimited. Does not implicitly {@link vtadmin.Tablet.verify|verify} messages.
         * @param message Tablet message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtadmin.ITablet, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Tablet message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Tablet
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtadmin.Tablet;

        /**
         * Decodes a Tablet message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Tablet
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtadmin.Tablet;

        /**
         * Verifies a Tablet message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Tablet message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Tablet
         */
        public static fromObject(object: { [k: string]: any }): vtadmin.Tablet;

        /**
         * Creates a plain object from a Tablet message. Also converts values to other types if specified.
         * @param message Tablet
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtadmin.Tablet, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Tablet to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace Tablet {

        /** ServingState enum. */
        enum ServingState {
            UNKNOWN = 0,
            SERVING = 1,
            NOT_SERVING = 2
        }
    }

    /** Properties of a VSchema. */
    interface IVSchema {

        /** VSchema cluster */
        cluster?: (vtadmin.ICluster|null);

        /** VSchema name */
        name?: (string|null);

        /** VSchema v_schema */
        v_schema?: (vschema.IKeyspace|null);
    }

    /** Represents a VSchema. */
    class VSchema implements IVSchema {

        /**
         * Constructs a new VSchema.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtadmin.IVSchema);

        /** VSchema cluster. */
        public cluster?: (vtadmin.ICluster|null);

        /** VSchema name. */
        public name: string;

        /** VSchema v_schema. */
        public v_schema?: (vschema.IKeyspace|null);

        /**
         * Creates a new VSchema instance using the specified properties.
         * @param [properties] Properties to set
         * @returns VSchema instance
         */
        public static create(properties?: vtadmin.IVSchema): vtadmin.VSchema;

        /**
         * Encodes the specified VSchema message. Does not implicitly {@link vtadmin.VSchema.verify|verify} messages.
         * @param message VSchema message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtadmin.IVSchema, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified VSchema message, length delimited. Does not implicitly {@link vtadmin.VSchema.verify|verify} messages.
         * @param message VSchema message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtadmin.IVSchema, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a VSchema message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns VSchema
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtadmin.VSchema;

        /**
         * Decodes a VSchema message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns VSchema
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtadmin.VSchema;

        /**
         * Verifies a VSchema message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a VSchema message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns VSchema
         */
        public static fromObject(object: { [k: string]: any }): vtadmin.VSchema;

        /**
         * Creates a plain object from a VSchema message. Also converts values to other types if specified.
         * @param message VSchema
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtadmin.VSchema, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this VSchema to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Vtctld. */
    interface IVtctld {

        /** Vtctld hostname */
        hostname?: (string|null);

        /** Vtctld cluster */
        cluster?: (vtadmin.ICluster|null);
    }

    /** Represents a Vtctld. */
    class Vtctld implements IVtctld {

        /**
         * Constructs a new Vtctld.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtadmin.IVtctld);

        /** Vtctld hostname. */
        public hostname: string;

        /** Vtctld cluster. */
        public cluster?: (vtadmin.ICluster|null);

        /**
         * Creates a new Vtctld instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Vtctld instance
         */
        public static create(properties?: vtadmin.IVtctld): vtadmin.Vtctld;

        /**
         * Encodes the specified Vtctld message. Does not implicitly {@link vtadmin.Vtctld.verify|verify} messages.
         * @param message Vtctld message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtadmin.IVtctld, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Vtctld message, length delimited. Does not implicitly {@link vtadmin.Vtctld.verify|verify} messages.
         * @param message Vtctld message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtadmin.IVtctld, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Vtctld message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Vtctld
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtadmin.Vtctld;

        /**
         * Decodes a Vtctld message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Vtctld
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtadmin.Vtctld;

        /**
         * Verifies a Vtctld message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Vtctld message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Vtctld
         */
        public static fromObject(object: { [k: string]: any }): vtadmin.Vtctld;

        /**
         * Creates a plain object from a Vtctld message. Also converts values to other types if specified.
         * @param message Vtctld
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtadmin.Vtctld, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Vtctld to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a VTGate. */
    interface IVTGate {

        /** VTGate hostname */
        hostname?: (string|null);

        /** VTGate pool */
        pool?: (string|null);

        /** VTGate cell */
        cell?: (string|null);

        /** VTGate cluster */
        cluster?: (vtadmin.ICluster|null);

        /** VTGate keyspaces */
        keyspaces?: (string[]|null);
    }

    /** Represents a VTGate. */
    class VTGate implements IVTGate {

        /**
         * Constructs a new VTGate.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtadmin.IVTGate);

        /** VTGate hostname. */
        public hostname: string;

        /** VTGate pool. */
        public pool: string;

        /** VTGate cell. */
        public cell: string;

        /** VTGate cluster. */
        public cluster?: (vtadmin.ICluster|null);

        /** VTGate keyspaces. */
        public keyspaces: string[];

        /**
         * Creates a new VTGate instance using the specified properties.
         * @param [properties] Properties to set
         * @returns VTGate instance
         */
        public static create(properties?: vtadmin.IVTGate): vtadmin.VTGate;

        /**
         * Encodes the specified VTGate message. Does not implicitly {@link vtadmin.VTGate.verify|verify} messages.
         * @param message VTGate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtadmin.IVTGate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified VTGate message, length delimited. Does not implicitly {@link vtadmin.VTGate.verify|verify} messages.
         * @param message VTGate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtadmin.IVTGate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a VTGate message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns VTGate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtadmin.VTGate;

        /**
         * Decodes a VTGate message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns VTGate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtadmin.VTGate;

        /**
         * Verifies a VTGate message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a VTGate message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns VTGate
         */
        public static fromObject(object: { [k: string]: any }): vtadmin.VTGate;

        /**
         * Creates a plain object from a VTGate message. Also converts values to other types if specified.
         * @param message VTGate
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtadmin.VTGate, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this VTGate to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Workflow. */
    interface IWorkflow {

        /** Workflow cluster */
        cluster?: (vtadmin.ICluster|null);

        /** Workflow keyspace */
        keyspace?: (string|null);

        /** Workflow workflow */
        workflow?: (vtctldata.IWorkflow|null);
    }

    /** Represents a Workflow. */
    class Workflow implements IWorkflow {

        /**
         * Constructs a new Workflow.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtadmin.IWorkflow);

        /** Workflow cluster. */
        public cluster?: (vtadmin.ICluster|null);

        /** Workflow keyspace. */
        public keyspace: string;

        /** Workflow workflow. */
        public workflow?: (vtctldata.IWorkflow|null);

        /**
         * Creates a new Workflow instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Workflow instance
         */
        public static create(properties?: vtadmin.IWorkflow): vtadmin.Workflow;

        /**
         * Encodes the specified Workflow message. Does not implicitly {@link vtadmin.Workflow.verify|verify} messages.
         * @param message Workflow message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtadmin.IWorkflow, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Workflow message, length delimited. Does not implicitly {@link vtadmin.Workflow.verify|verify} messages.
         * @param message Workflow message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtadmin.IWorkflow, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Workflow message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Workflow
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtadmin.Workflow;

        /**
         * Decodes a Workflow message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Workflow
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtadmin.Workflow;

        /**
         * Verifies a Workflow message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Workflow message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Workflow
         */
        public static fromObject(object: { [k: string]: any }): vtadmin.Workflow;

        /**
         * Creates a plain object from a Workflow message. Also converts values to other types if specified.
         * @param message Workflow
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtadmin.Workflow, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Workflow to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FindSchemaRequest. */
    interface IFindSchemaRequest {

        /** FindSchemaRequest table */
        table?: (string|null);

        /** FindSchemaRequest cluster_ids */
        cluster_ids?: (string[]|null);

        /** FindSchemaRequest table_size_options */
        table_size_options?: (vtadmin.IGetSchemaTableSizeOptions|null);
    }

    /** Represents a FindSchemaRequest. */
    class FindSchemaRequest implements IFindSchemaRequest {

        /**
         * Constructs a new FindSchemaRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtadmin.IFindSchemaRequest);

        /** FindSchemaRequest table. */
        public table: string;

        /** FindSchemaRequest cluster_ids. */
        public cluster_ids: string[];

        /** FindSchemaRequest table_size_options. */
        public table_size_options?: (vtadmin.IGetSchemaTableSizeOptions|null);

        /**
         * Creates a new FindSchemaRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FindSchemaRequest instance
         */
        public static create(properties?: vtadmin.IFindSchemaRequest): vtadmin.FindSchemaRequest;

        /**
         * Encodes the specified FindSchemaRequest message. Does not implicitly {@link vtadmin.FindSchemaRequest.verify|verify} messages.
         * @param message FindSchemaRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtadmin.IFindSchemaRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FindSchemaRequest message, length delimited. Does not implicitly {@link vtadmin.FindSchemaRequest.verify|verify} messages.
         * @param message FindSchemaRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtadmin.IFindSchemaRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FindSchemaRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FindSchemaRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtadmin.FindSchemaRequest;

        /**
         * Decodes a FindSchemaRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FindSchemaRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtadmin.FindSchemaRequest;

        /**
         * Verifies a FindSchemaRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FindSchemaRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FindSchemaRequest
         */
        public static fromObject(object: { [k: string]: any }): vtadmin.FindSchemaRequest;

        /**
         * Creates a plain object from a FindSchemaRequest message. Also converts values to other types if specified.
         * @param message FindSchemaRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtadmin.FindSchemaRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FindSchemaRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetClustersRequest. */
    interface IGetClustersRequest {
    }

    /** Represents a GetClustersRequest. */
    class GetClustersRequest implements IGetClustersRequest {

        /**
         * Constructs a new GetClustersRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtadmin.IGetClustersRequest);

        /**
         * Creates a new GetClustersRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetClustersRequest instance
         */
        public static create(properties?: vtadmin.IGetClustersRequest): vtadmin.GetClustersRequest;

        /**
         * Encodes the specified GetClustersRequest message. Does not implicitly {@link vtadmin.GetClustersRequest.verify|verify} messages.
         * @param message GetClustersRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtadmin.IGetClustersRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetClustersRequest message, length delimited. Does not implicitly {@link vtadmin.GetClustersRequest.verify|verify} messages.
         * @param message GetClustersRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtadmin.IGetClustersRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetClustersRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetClustersRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtadmin.GetClustersRequest;

        /**
         * Decodes a GetClustersRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetClustersRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtadmin.GetClustersRequest;

        /**
         * Verifies a GetClustersRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetClustersRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetClustersRequest
         */
        public static fromObject(object: { [k: string]: any }): vtadmin.GetClustersRequest;

        /**
         * Creates a plain object from a GetClustersRequest message. Also converts values to other types if specified.
         * @param message GetClustersRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtadmin.GetClustersRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetClustersRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetClustersResponse. */
    interface IGetClustersResponse {

        /** GetClustersResponse clusters */
        clusters?: (vtadmin.ICluster[]|null);
    }

    /** Represents a GetClustersResponse. */
    class GetClustersResponse implements IGetClustersResponse {

        /**
         * Constructs a new GetClustersResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtadmin.IGetClustersResponse);

        /** GetClustersResponse clusters. */
        public clusters: vtadmin.ICluster[];

        /**
         * Creates a new GetClustersResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetClustersResponse instance
         */
        public static create(properties?: vtadmin.IGetClustersResponse): vtadmin.GetClustersResponse;

        /**
         * Encodes the specified GetClustersResponse message. Does not implicitly {@link vtadmin.GetClustersResponse.verify|verify} messages.
         * @param message GetClustersResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtadmin.IGetClustersResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetClustersResponse message, length delimited. Does not implicitly {@link vtadmin.GetClustersResponse.verify|verify} messages.
         * @param message GetClustersResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtadmin.IGetClustersResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetClustersResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetClustersResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtadmin.GetClustersResponse;

        /**
         * Decodes a GetClustersResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetClustersResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtadmin.GetClustersResponse;

        /**
         * Verifies a GetClustersResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetClustersResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetClustersResponse
         */
        public static fromObject(object: { [k: string]: any }): vtadmin.GetClustersResponse;

        /**
         * Creates a plain object from a GetClustersResponse message. Also converts values to other types if specified.
         * @param message GetClustersResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtadmin.GetClustersResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetClustersResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetGatesRequest. */
    interface IGetGatesRequest {

        /** GetGatesRequest cluster_ids */
        cluster_ids?: (string[]|null);
    }

    /** Represents a GetGatesRequest. */
    class GetGatesRequest implements IGetGatesRequest {

        /**
         * Constructs a new GetGatesRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtadmin.IGetGatesRequest);

        /** GetGatesRequest cluster_ids. */
        public cluster_ids: string[];

        /**
         * Creates a new GetGatesRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetGatesRequest instance
         */
        public static create(properties?: vtadmin.IGetGatesRequest): vtadmin.GetGatesRequest;

        /**
         * Encodes the specified GetGatesRequest message. Does not implicitly {@link vtadmin.GetGatesRequest.verify|verify} messages.
         * @param message GetGatesRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtadmin.IGetGatesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetGatesRequest message, length delimited. Does not implicitly {@link vtadmin.GetGatesRequest.verify|verify} messages.
         * @param message GetGatesRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtadmin.IGetGatesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetGatesRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetGatesRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtadmin.GetGatesRequest;

        /**
         * Decodes a GetGatesRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetGatesRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtadmin.GetGatesRequest;

        /**
         * Verifies a GetGatesRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetGatesRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetGatesRequest
         */
        public static fromObject(object: { [k: string]: any }): vtadmin.GetGatesRequest;

        /**
         * Creates a plain object from a GetGatesRequest message. Also converts values to other types if specified.
         * @param message GetGatesRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtadmin.GetGatesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetGatesRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetGatesResponse. */
    interface IGetGatesResponse {

        /** GetGatesResponse gates */
        gates?: (vtadmin.IVTGate[]|null);
    }

    /** Represents a GetGatesResponse. */
    class GetGatesResponse implements IGetGatesResponse {

        /**
         * Constructs a new GetGatesResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtadmin.IGetGatesResponse);

        /** GetGatesResponse gates. */
        public gates: vtadmin.IVTGate[];

        /**
         * Creates a new GetGatesResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetGatesResponse instance
         */
        public static create(properties?: vtadmin.IGetGatesResponse): vtadmin.GetGatesResponse;

        /**
         * Encodes the specified GetGatesResponse message. Does not implicitly {@link vtadmin.GetGatesResponse.verify|verify} messages.
         * @param message GetGatesResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtadmin.IGetGatesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetGatesResponse message, length delimited. Does not implicitly {@link vtadmin.GetGatesResponse.verify|verify} messages.
         * @param message GetGatesResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtadmin.IGetGatesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetGatesResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetGatesResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtadmin.GetGatesResponse;

        /**
         * Decodes a GetGatesResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetGatesResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtadmin.GetGatesResponse;

        /**
         * Verifies a GetGatesResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetGatesResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetGatesResponse
         */
        public static fromObject(object: { [k: string]: any }): vtadmin.GetGatesResponse;

        /**
         * Creates a plain object from a GetGatesResponse message. Also converts values to other types if specified.
         * @param message GetGatesResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtadmin.GetGatesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetGatesResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetKeyspacesRequest. */
    interface IGetKeyspacesRequest {

        /** GetKeyspacesRequest cluster_ids */
        cluster_ids?: (string[]|null);
    }

    /** Represents a GetKeyspacesRequest. */
    class GetKeyspacesRequest implements IGetKeyspacesRequest {

        /**
         * Constructs a new GetKeyspacesRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtadmin.IGetKeyspacesRequest);

        /** GetKeyspacesRequest cluster_ids. */
        public cluster_ids: string[];

        /**
         * Creates a new GetKeyspacesRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetKeyspacesRequest instance
         */
        public static create(properties?: vtadmin.IGetKeyspacesRequest): vtadmin.GetKeyspacesRequest;

        /**
         * Encodes the specified GetKeyspacesRequest message. Does not implicitly {@link vtadmin.GetKeyspacesRequest.verify|verify} messages.
         * @param message GetKeyspacesRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtadmin.IGetKeyspacesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetKeyspacesRequest message, length delimited. Does not implicitly {@link vtadmin.GetKeyspacesRequest.verify|verify} messages.
         * @param message GetKeyspacesRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtadmin.IGetKeyspacesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetKeyspacesRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetKeyspacesRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtadmin.GetKeyspacesRequest;

        /**
         * Decodes a GetKeyspacesRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetKeyspacesRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtadmin.GetKeyspacesRequest;

        /**
         * Verifies a GetKeyspacesRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetKeyspacesRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetKeyspacesRequest
         */
        public static fromObject(object: { [k: string]: any }): vtadmin.GetKeyspacesRequest;

        /**
         * Creates a plain object from a GetKeyspacesRequest message. Also converts values to other types if specified.
         * @param message GetKeyspacesRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtadmin.GetKeyspacesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetKeyspacesRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetKeyspacesResponse. */
    interface IGetKeyspacesResponse {

        /** GetKeyspacesResponse keyspaces */
        keyspaces?: (vtadmin.IKeyspace[]|null);
    }

    /** Represents a GetKeyspacesResponse. */
    class GetKeyspacesResponse implements IGetKeyspacesResponse {

        /**
         * Constructs a new GetKeyspacesResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtadmin.IGetKeyspacesResponse);

        /** GetKeyspacesResponse keyspaces. */
        public keyspaces: vtadmin.IKeyspace[];

        /**
         * Creates a new GetKeyspacesResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetKeyspacesResponse instance
         */
        public static create(properties?: vtadmin.IGetKeyspacesResponse): vtadmin.GetKeyspacesResponse;

        /**
         * Encodes the specified GetKeyspacesResponse message. Does not implicitly {@link vtadmin.GetKeyspacesResponse.verify|verify} messages.
         * @param message GetKeyspacesResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtadmin.IGetKeyspacesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetKeyspacesResponse message, length delimited. Does not implicitly {@link vtadmin.GetKeyspacesResponse.verify|verify} messages.
         * @param message GetKeyspacesResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtadmin.IGetKeyspacesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetKeyspacesResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetKeyspacesResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtadmin.GetKeyspacesResponse;

        /**
         * Decodes a GetKeyspacesResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetKeyspacesResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtadmin.GetKeyspacesResponse;

        /**
         * Verifies a GetKeyspacesResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetKeyspacesResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetKeyspacesResponse
         */
        public static fromObject(object: { [k: string]: any }): vtadmin.GetKeyspacesResponse;

        /**
         * Creates a plain object from a GetKeyspacesResponse message. Also converts values to other types if specified.
         * @param message GetKeyspacesResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtadmin.GetKeyspacesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetKeyspacesResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetSchemaRequest. */
    interface IGetSchemaRequest {

        /** GetSchemaRequest cluster_id */
        cluster_id?: (string|null);

        /** GetSchemaRequest keyspace */
        keyspace?: (string|null);

        /** GetSchemaRequest table */
        table?: (string|null);

        /** GetSchemaRequest table_size_options */
        table_size_options?: (vtadmin.IGetSchemaTableSizeOptions|null);
    }

    /** Represents a GetSchemaRequest. */
    class GetSchemaRequest implements IGetSchemaRequest {

        /**
         * Constructs a new GetSchemaRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtadmin.IGetSchemaRequest);

        /** GetSchemaRequest cluster_id. */
        public cluster_id: string;

        /** GetSchemaRequest keyspace. */
        public keyspace: string;

        /** GetSchemaRequest table. */
        public table: string;

        /** GetSchemaRequest table_size_options. */
        public table_size_options?: (vtadmin.IGetSchemaTableSizeOptions|null);

        /**
         * Creates a new GetSchemaRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetSchemaRequest instance
         */
        public static create(properties?: vtadmin.IGetSchemaRequest): vtadmin.GetSchemaRequest;

        /**
         * Encodes the specified GetSchemaRequest message. Does not implicitly {@link vtadmin.GetSchemaRequest.verify|verify} messages.
         * @param message GetSchemaRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtadmin.IGetSchemaRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetSchemaRequest message, length delimited. Does not implicitly {@link vtadmin.GetSchemaRequest.verify|verify} messages.
         * @param message GetSchemaRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtadmin.IGetSchemaRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetSchemaRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetSchemaRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtadmin.GetSchemaRequest;

        /**
         * Decodes a GetSchemaRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetSchemaRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtadmin.GetSchemaRequest;

        /**
         * Verifies a GetSchemaRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetSchemaRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetSchemaRequest
         */
        public static fromObject(object: { [k: string]: any }): vtadmin.GetSchemaRequest;

        /**
         * Creates a plain object from a GetSchemaRequest message. Also converts values to other types if specified.
         * @param message GetSchemaRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtadmin.GetSchemaRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetSchemaRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetSchemasRequest. */
    interface IGetSchemasRequest {

        /** GetSchemasRequest cluster_ids */
        cluster_ids?: (string[]|null);

        /** GetSchemasRequest table_size_options */
        table_size_options?: (vtadmin.IGetSchemaTableSizeOptions|null);
    }

    /** Represents a GetSchemasRequest. */
    class GetSchemasRequest implements IGetSchemasRequest {

        /**
         * Constructs a new GetSchemasRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtadmin.IGetSchemasRequest);

        /** GetSchemasRequest cluster_ids. */
        public cluster_ids: string[];

        /** GetSchemasRequest table_size_options. */
        public table_size_options?: (vtadmin.IGetSchemaTableSizeOptions|null);

        /**
         * Creates a new GetSchemasRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetSchemasRequest instance
         */
        public static create(properties?: vtadmin.IGetSchemasRequest): vtadmin.GetSchemasRequest;

        /**
         * Encodes the specified GetSchemasRequest message. Does not implicitly {@link vtadmin.GetSchemasRequest.verify|verify} messages.
         * @param message GetSchemasRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtadmin.IGetSchemasRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetSchemasRequest message, length delimited. Does not implicitly {@link vtadmin.GetSchemasRequest.verify|verify} messages.
         * @param message GetSchemasRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtadmin.IGetSchemasRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetSchemasRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetSchemasRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtadmin.GetSchemasRequest;

        /**
         * Decodes a GetSchemasRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetSchemasRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtadmin.GetSchemasRequest;

        /**
         * Verifies a GetSchemasRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetSchemasRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetSchemasRequest
         */
        public static fromObject(object: { [k: string]: any }): vtadmin.GetSchemasRequest;

        /**
         * Creates a plain object from a GetSchemasRequest message. Also converts values to other types if specified.
         * @param message GetSchemasRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtadmin.GetSchemasRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetSchemasRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetSchemasResponse. */
    interface IGetSchemasResponse {

        /** GetSchemasResponse schemas */
        schemas?: (vtadmin.ISchema[]|null);
    }

    /** Represents a GetSchemasResponse. */
    class GetSchemasResponse implements IGetSchemasResponse {

        /**
         * Constructs a new GetSchemasResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtadmin.IGetSchemasResponse);

        /** GetSchemasResponse schemas. */
        public schemas: vtadmin.ISchema[];

        /**
         * Creates a new GetSchemasResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetSchemasResponse instance
         */
        public static create(properties?: vtadmin.IGetSchemasResponse): vtadmin.GetSchemasResponse;

        /**
         * Encodes the specified GetSchemasResponse message. Does not implicitly {@link vtadmin.GetSchemasResponse.verify|verify} messages.
         * @param message GetSchemasResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtadmin.IGetSchemasResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetSchemasResponse message, length delimited. Does not implicitly {@link vtadmin.GetSchemasResponse.verify|verify} messages.
         * @param message GetSchemasResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtadmin.IGetSchemasResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetSchemasResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetSchemasResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtadmin.GetSchemasResponse;

        /**
         * Decodes a GetSchemasResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetSchemasResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtadmin.GetSchemasResponse;

        /**
         * Verifies a GetSchemasResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetSchemasResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetSchemasResponse
         */
        public static fromObject(object: { [k: string]: any }): vtadmin.GetSchemasResponse;

        /**
         * Creates a plain object from a GetSchemasResponse message. Also converts values to other types if specified.
         * @param message GetSchemasResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtadmin.GetSchemasResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetSchemasResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetSchemaTableSizeOptions. */
    interface IGetSchemaTableSizeOptions {

        /** GetSchemaTableSizeOptions aggregate_sizes */
        aggregate_sizes?: (boolean|null);
    }

    /** Represents a GetSchemaTableSizeOptions. */
    class GetSchemaTableSizeOptions implements IGetSchemaTableSizeOptions {

        /**
         * Constructs a new GetSchemaTableSizeOptions.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtadmin.IGetSchemaTableSizeOptions);

        /** GetSchemaTableSizeOptions aggregate_sizes. */
        public aggregate_sizes: boolean;

        /**
         * Creates a new GetSchemaTableSizeOptions instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetSchemaTableSizeOptions instance
         */
        public static create(properties?: vtadmin.IGetSchemaTableSizeOptions): vtadmin.GetSchemaTableSizeOptions;

        /**
         * Encodes the specified GetSchemaTableSizeOptions message. Does not implicitly {@link vtadmin.GetSchemaTableSizeOptions.verify|verify} messages.
         * @param message GetSchemaTableSizeOptions message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtadmin.IGetSchemaTableSizeOptions, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetSchemaTableSizeOptions message, length delimited. Does not implicitly {@link vtadmin.GetSchemaTableSizeOptions.verify|verify} messages.
         * @param message GetSchemaTableSizeOptions message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtadmin.IGetSchemaTableSizeOptions, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetSchemaTableSizeOptions message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetSchemaTableSizeOptions
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtadmin.GetSchemaTableSizeOptions;

        /**
         * Decodes a GetSchemaTableSizeOptions message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetSchemaTableSizeOptions
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtadmin.GetSchemaTableSizeOptions;

        /**
         * Verifies a GetSchemaTableSizeOptions message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetSchemaTableSizeOptions message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetSchemaTableSizeOptions
         */
        public static fromObject(object: { [k: string]: any }): vtadmin.GetSchemaTableSizeOptions;

        /**
         * Creates a plain object from a GetSchemaTableSizeOptions message. Also converts values to other types if specified.
         * @param message GetSchemaTableSizeOptions
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtadmin.GetSchemaTableSizeOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetSchemaTableSizeOptions to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetTabletRequest. */
    interface IGetTabletRequest {

        /** GetTabletRequest hostname */
        hostname?: (string|null);

        /** GetTabletRequest cluster_ids */
        cluster_ids?: (string[]|null);
    }

    /** Represents a GetTabletRequest. */
    class GetTabletRequest implements IGetTabletRequest {

        /**
         * Constructs a new GetTabletRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtadmin.IGetTabletRequest);

        /** GetTabletRequest hostname. */
        public hostname: string;

        /** GetTabletRequest cluster_ids. */
        public cluster_ids: string[];

        /**
         * Creates a new GetTabletRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetTabletRequest instance
         */
        public static create(properties?: vtadmin.IGetTabletRequest): vtadmin.GetTabletRequest;

        /**
         * Encodes the specified GetTabletRequest message. Does not implicitly {@link vtadmin.GetTabletRequest.verify|verify} messages.
         * @param message GetTabletRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtadmin.IGetTabletRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetTabletRequest message, length delimited. Does not implicitly {@link vtadmin.GetTabletRequest.verify|verify} messages.
         * @param message GetTabletRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtadmin.IGetTabletRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetTabletRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetTabletRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtadmin.GetTabletRequest;

        /**
         * Decodes a GetTabletRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetTabletRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtadmin.GetTabletRequest;

        /**
         * Verifies a GetTabletRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetTabletRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetTabletRequest
         */
        public static fromObject(object: { [k: string]: any }): vtadmin.GetTabletRequest;

        /**
         * Creates a plain object from a GetTabletRequest message. Also converts values to other types if specified.
         * @param message GetTabletRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtadmin.GetTabletRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetTabletRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetTabletsRequest. */
    interface IGetTabletsRequest {

        /** GetTabletsRequest cluster_ids */
        cluster_ids?: (string[]|null);
    }

    /** Represents a GetTabletsRequest. */
    class GetTabletsRequest implements IGetTabletsRequest {

        /**
         * Constructs a new GetTabletsRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtadmin.IGetTabletsRequest);

        /** GetTabletsRequest cluster_ids. */
        public cluster_ids: string[];

        /**
         * Creates a new GetTabletsRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetTabletsRequest instance
         */
        public static create(properties?: vtadmin.IGetTabletsRequest): vtadmin.GetTabletsRequest;

        /**
         * Encodes the specified GetTabletsRequest message. Does not implicitly {@link vtadmin.GetTabletsRequest.verify|verify} messages.
         * @param message GetTabletsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtadmin.IGetTabletsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetTabletsRequest message, length delimited. Does not implicitly {@link vtadmin.GetTabletsRequest.verify|verify} messages.
         * @param message GetTabletsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtadmin.IGetTabletsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetTabletsRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetTabletsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtadmin.GetTabletsRequest;

        /**
         * Decodes a GetTabletsRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetTabletsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtadmin.GetTabletsRequest;

        /**
         * Verifies a GetTabletsRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetTabletsRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetTabletsRequest
         */
        public static fromObject(object: { [k: string]: any }): vtadmin.GetTabletsRequest;

        /**
         * Creates a plain object from a GetTabletsRequest message. Also converts values to other types if specified.
         * @param message GetTabletsRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtadmin.GetTabletsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetTabletsRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetTabletsResponse. */
    interface IGetTabletsResponse {

        /** GetTabletsResponse tablets */
        tablets?: (vtadmin.ITablet[]|null);
    }

    /** Represents a GetTabletsResponse. */
    class GetTabletsResponse implements IGetTabletsResponse {

        /**
         * Constructs a new GetTabletsResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtadmin.IGetTabletsResponse);

        /** GetTabletsResponse tablets. */
        public tablets: vtadmin.ITablet[];

        /**
         * Creates a new GetTabletsResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetTabletsResponse instance
         */
        public static create(properties?: vtadmin.IGetTabletsResponse): vtadmin.GetTabletsResponse;

        /**
         * Encodes the specified GetTabletsResponse message. Does not implicitly {@link vtadmin.GetTabletsResponse.verify|verify} messages.
         * @param message GetTabletsResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtadmin.IGetTabletsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetTabletsResponse message, length delimited. Does not implicitly {@link vtadmin.GetTabletsResponse.verify|verify} messages.
         * @param message GetTabletsResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtadmin.IGetTabletsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetTabletsResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetTabletsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtadmin.GetTabletsResponse;

        /**
         * Decodes a GetTabletsResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetTabletsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtadmin.GetTabletsResponse;

        /**
         * Verifies a GetTabletsResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetTabletsResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetTabletsResponse
         */
        public static fromObject(object: { [k: string]: any }): vtadmin.GetTabletsResponse;

        /**
         * Creates a plain object from a GetTabletsResponse message. Also converts values to other types if specified.
         * @param message GetTabletsResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtadmin.GetTabletsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetTabletsResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetVSchemaRequest. */
    interface IGetVSchemaRequest {

        /** GetVSchemaRequest cluster_id */
        cluster_id?: (string|null);

        /** GetVSchemaRequest keyspace */
        keyspace?: (string|null);
    }

    /** Represents a GetVSchemaRequest. */
    class GetVSchemaRequest implements IGetVSchemaRequest {

        /**
         * Constructs a new GetVSchemaRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtadmin.IGetVSchemaRequest);

        /** GetVSchemaRequest cluster_id. */
        public cluster_id: string;

        /** GetVSchemaRequest keyspace. */
        public keyspace: string;

        /**
         * Creates a new GetVSchemaRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetVSchemaRequest instance
         */
        public static create(properties?: vtadmin.IGetVSchemaRequest): vtadmin.GetVSchemaRequest;

        /**
         * Encodes the specified GetVSchemaRequest message. Does not implicitly {@link vtadmin.GetVSchemaRequest.verify|verify} messages.
         * @param message GetVSchemaRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtadmin.IGetVSchemaRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetVSchemaRequest message, length delimited. Does not implicitly {@link vtadmin.GetVSchemaRequest.verify|verify} messages.
         * @param message GetVSchemaRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtadmin.IGetVSchemaRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetVSchemaRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetVSchemaRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtadmin.GetVSchemaRequest;

        /**
         * Decodes a GetVSchemaRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetVSchemaRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtadmin.GetVSchemaRequest;

        /**
         * Verifies a GetVSchemaRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetVSchemaRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetVSchemaRequest
         */
        public static fromObject(object: { [k: string]: any }): vtadmin.GetVSchemaRequest;

        /**
         * Creates a plain object from a GetVSchemaRequest message. Also converts values to other types if specified.
         * @param message GetVSchemaRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtadmin.GetVSchemaRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetVSchemaRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetVSchemasRequest. */
    interface IGetVSchemasRequest {

        /** GetVSchemasRequest cluster_ids */
        cluster_ids?: (string[]|null);
    }

    /** Represents a GetVSchemasRequest. */
    class GetVSchemasRequest implements IGetVSchemasRequest {

        /**
         * Constructs a new GetVSchemasRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtadmin.IGetVSchemasRequest);

        /** GetVSchemasRequest cluster_ids. */
        public cluster_ids: string[];

        /**
         * Creates a new GetVSchemasRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetVSchemasRequest instance
         */
        public static create(properties?: vtadmin.IGetVSchemasRequest): vtadmin.GetVSchemasRequest;

        /**
         * Encodes the specified GetVSchemasRequest message. Does not implicitly {@link vtadmin.GetVSchemasRequest.verify|verify} messages.
         * @param message GetVSchemasRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtadmin.IGetVSchemasRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetVSchemasRequest message, length delimited. Does not implicitly {@link vtadmin.GetVSchemasRequest.verify|verify} messages.
         * @param message GetVSchemasRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtadmin.IGetVSchemasRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetVSchemasRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetVSchemasRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtadmin.GetVSchemasRequest;

        /**
         * Decodes a GetVSchemasRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetVSchemasRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtadmin.GetVSchemasRequest;

        /**
         * Verifies a GetVSchemasRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetVSchemasRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetVSchemasRequest
         */
        public static fromObject(object: { [k: string]: any }): vtadmin.GetVSchemasRequest;

        /**
         * Creates a plain object from a GetVSchemasRequest message. Also converts values to other types if specified.
         * @param message GetVSchemasRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtadmin.GetVSchemasRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetVSchemasRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetVSchemasResponse. */
    interface IGetVSchemasResponse {

        /** GetVSchemasResponse v_schemas */
        v_schemas?: (vtadmin.IVSchema[]|null);
    }

    /** Represents a GetVSchemasResponse. */
    class GetVSchemasResponse implements IGetVSchemasResponse {

        /**
         * Constructs a new GetVSchemasResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtadmin.IGetVSchemasResponse);

        /** GetVSchemasResponse v_schemas. */
        public v_schemas: vtadmin.IVSchema[];

        /**
         * Creates a new GetVSchemasResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetVSchemasResponse instance
         */
        public static create(properties?: vtadmin.IGetVSchemasResponse): vtadmin.GetVSchemasResponse;

        /**
         * Encodes the specified GetVSchemasResponse message. Does not implicitly {@link vtadmin.GetVSchemasResponse.verify|verify} messages.
         * @param message GetVSchemasResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtadmin.IGetVSchemasResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetVSchemasResponse message, length delimited. Does not implicitly {@link vtadmin.GetVSchemasResponse.verify|verify} messages.
         * @param message GetVSchemasResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtadmin.IGetVSchemasResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetVSchemasResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetVSchemasResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtadmin.GetVSchemasResponse;

        /**
         * Decodes a GetVSchemasResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetVSchemasResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtadmin.GetVSchemasResponse;

        /**
         * Verifies a GetVSchemasResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetVSchemasResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetVSchemasResponse
         */
        public static fromObject(object: { [k: string]: any }): vtadmin.GetVSchemasResponse;

        /**
         * Creates a plain object from a GetVSchemasResponse message. Also converts values to other types if specified.
         * @param message GetVSchemasResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtadmin.GetVSchemasResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetVSchemasResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetWorkflowRequest. */
    interface IGetWorkflowRequest {

        /** GetWorkflowRequest cluster_id */
        cluster_id?: (string|null);

        /** GetWorkflowRequest keyspace */
        keyspace?: (string|null);

        /** GetWorkflowRequest name */
        name?: (string|null);

        /** GetWorkflowRequest active_only */
        active_only?: (boolean|null);
    }

    /** Represents a GetWorkflowRequest. */
    class GetWorkflowRequest implements IGetWorkflowRequest {

        /**
         * Constructs a new GetWorkflowRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtadmin.IGetWorkflowRequest);

        /** GetWorkflowRequest cluster_id. */
        public cluster_id: string;

        /** GetWorkflowRequest keyspace. */
        public keyspace: string;

        /** GetWorkflowRequest name. */
        public name: string;

        /** GetWorkflowRequest active_only. */
        public active_only: boolean;

        /**
         * Creates a new GetWorkflowRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetWorkflowRequest instance
         */
        public static create(properties?: vtadmin.IGetWorkflowRequest): vtadmin.GetWorkflowRequest;

        /**
         * Encodes the specified GetWorkflowRequest message. Does not implicitly {@link vtadmin.GetWorkflowRequest.verify|verify} messages.
         * @param message GetWorkflowRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtadmin.IGetWorkflowRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetWorkflowRequest message, length delimited. Does not implicitly {@link vtadmin.GetWorkflowRequest.verify|verify} messages.
         * @param message GetWorkflowRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtadmin.IGetWorkflowRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetWorkflowRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetWorkflowRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtadmin.GetWorkflowRequest;

        /**
         * Decodes a GetWorkflowRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetWorkflowRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtadmin.GetWorkflowRequest;

        /**
         * Verifies a GetWorkflowRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetWorkflowRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetWorkflowRequest
         */
        public static fromObject(object: { [k: string]: any }): vtadmin.GetWorkflowRequest;

        /**
         * Creates a plain object from a GetWorkflowRequest message. Also converts values to other types if specified.
         * @param message GetWorkflowRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtadmin.GetWorkflowRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetWorkflowRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetWorkflowsRequest. */
    interface IGetWorkflowsRequest {

        /** GetWorkflowsRequest cluster_ids */
        cluster_ids?: (string[]|null);

        /** GetWorkflowsRequest active_only */
        active_only?: (boolean|null);

        /** GetWorkflowsRequest keyspaces */
        keyspaces?: (string[]|null);

        /** GetWorkflowsRequest ignore_keyspaces */
        ignore_keyspaces?: (string[]|null);
    }

    /** Represents a GetWorkflowsRequest. */
    class GetWorkflowsRequest implements IGetWorkflowsRequest {

        /**
         * Constructs a new GetWorkflowsRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtadmin.IGetWorkflowsRequest);

        /** GetWorkflowsRequest cluster_ids. */
        public cluster_ids: string[];

        /** GetWorkflowsRequest active_only. */
        public active_only: boolean;

        /** GetWorkflowsRequest keyspaces. */
        public keyspaces: string[];

        /** GetWorkflowsRequest ignore_keyspaces. */
        public ignore_keyspaces: string[];

        /**
         * Creates a new GetWorkflowsRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetWorkflowsRequest instance
         */
        public static create(properties?: vtadmin.IGetWorkflowsRequest): vtadmin.GetWorkflowsRequest;

        /**
         * Encodes the specified GetWorkflowsRequest message. Does not implicitly {@link vtadmin.GetWorkflowsRequest.verify|verify} messages.
         * @param message GetWorkflowsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtadmin.IGetWorkflowsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetWorkflowsRequest message, length delimited. Does not implicitly {@link vtadmin.GetWorkflowsRequest.verify|verify} messages.
         * @param message GetWorkflowsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtadmin.IGetWorkflowsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetWorkflowsRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetWorkflowsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtadmin.GetWorkflowsRequest;

        /**
         * Decodes a GetWorkflowsRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetWorkflowsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtadmin.GetWorkflowsRequest;

        /**
         * Verifies a GetWorkflowsRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetWorkflowsRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetWorkflowsRequest
         */
        public static fromObject(object: { [k: string]: any }): vtadmin.GetWorkflowsRequest;

        /**
         * Creates a plain object from a GetWorkflowsRequest message. Also converts values to other types if specified.
         * @param message GetWorkflowsRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtadmin.GetWorkflowsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetWorkflowsRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetWorkflowsResponse. */
    interface IGetWorkflowsResponse {

        /** GetWorkflowsResponse workflows_by_cluster */
        workflows_by_cluster?: ({ [k: string]: vtadmin.IClusterWorkflows }|null);
    }

    /** Represents a GetWorkflowsResponse. */
    class GetWorkflowsResponse implements IGetWorkflowsResponse {

        /**
         * Constructs a new GetWorkflowsResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtadmin.IGetWorkflowsResponse);

        /** GetWorkflowsResponse workflows_by_cluster. */
        public workflows_by_cluster: { [k: string]: vtadmin.IClusterWorkflows };

        /**
         * Creates a new GetWorkflowsResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetWorkflowsResponse instance
         */
        public static create(properties?: vtadmin.IGetWorkflowsResponse): vtadmin.GetWorkflowsResponse;

        /**
         * Encodes the specified GetWorkflowsResponse message. Does not implicitly {@link vtadmin.GetWorkflowsResponse.verify|verify} messages.
         * @param message GetWorkflowsResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtadmin.IGetWorkflowsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetWorkflowsResponse message, length delimited. Does not implicitly {@link vtadmin.GetWorkflowsResponse.verify|verify} messages.
         * @param message GetWorkflowsResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtadmin.IGetWorkflowsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetWorkflowsResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetWorkflowsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtadmin.GetWorkflowsResponse;

        /**
         * Decodes a GetWorkflowsResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetWorkflowsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtadmin.GetWorkflowsResponse;

        /**
         * Verifies a GetWorkflowsResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetWorkflowsResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetWorkflowsResponse
         */
        public static fromObject(object: { [k: string]: any }): vtadmin.GetWorkflowsResponse;

        /**
         * Creates a plain object from a GetWorkflowsResponse message. Also converts values to other types if specified.
         * @param message GetWorkflowsResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtadmin.GetWorkflowsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetWorkflowsResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a VTExplainRequest. */
    interface IVTExplainRequest {

        /** VTExplainRequest cluster */
        cluster?: (string|null);

        /** VTExplainRequest keyspace */
        keyspace?: (string|null);

        /** VTExplainRequest sql */
        sql?: (string|null);
    }

    /** Represents a VTExplainRequest. */
    class VTExplainRequest implements IVTExplainRequest {

        /**
         * Constructs a new VTExplainRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtadmin.IVTExplainRequest);

        /** VTExplainRequest cluster. */
        public cluster: string;

        /** VTExplainRequest keyspace. */
        public keyspace: string;

        /** VTExplainRequest sql. */
        public sql: string;

        /**
         * Creates a new VTExplainRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns VTExplainRequest instance
         */
        public static create(properties?: vtadmin.IVTExplainRequest): vtadmin.VTExplainRequest;

        /**
         * Encodes the specified VTExplainRequest message. Does not implicitly {@link vtadmin.VTExplainRequest.verify|verify} messages.
         * @param message VTExplainRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtadmin.IVTExplainRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified VTExplainRequest message, length delimited. Does not implicitly {@link vtadmin.VTExplainRequest.verify|verify} messages.
         * @param message VTExplainRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtadmin.IVTExplainRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a VTExplainRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns VTExplainRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtadmin.VTExplainRequest;

        /**
         * Decodes a VTExplainRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns VTExplainRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtadmin.VTExplainRequest;

        /**
         * Verifies a VTExplainRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a VTExplainRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns VTExplainRequest
         */
        public static fromObject(object: { [k: string]: any }): vtadmin.VTExplainRequest;

        /**
         * Creates a plain object from a VTExplainRequest message. Also converts values to other types if specified.
         * @param message VTExplainRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtadmin.VTExplainRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this VTExplainRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a VTExplainResponse. */
    interface IVTExplainResponse {

        /** VTExplainResponse response */
        response?: (string|null);
    }

    /** Represents a VTExplainResponse. */
    class VTExplainResponse implements IVTExplainResponse {

        /**
         * Constructs a new VTExplainResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtadmin.IVTExplainResponse);

        /** VTExplainResponse response. */
        public response: string;

        /**
         * Creates a new VTExplainResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns VTExplainResponse instance
         */
        public static create(properties?: vtadmin.IVTExplainResponse): vtadmin.VTExplainResponse;

        /**
         * Encodes the specified VTExplainResponse message. Does not implicitly {@link vtadmin.VTExplainResponse.verify|verify} messages.
         * @param message VTExplainResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtadmin.IVTExplainResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified VTExplainResponse message, length delimited. Does not implicitly {@link vtadmin.VTExplainResponse.verify|verify} messages.
         * @param message VTExplainResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtadmin.IVTExplainResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a VTExplainResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns VTExplainResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtadmin.VTExplainResponse;

        /**
         * Decodes a VTExplainResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns VTExplainResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtadmin.VTExplainResponse;

        /**
         * Verifies a VTExplainResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a VTExplainResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns VTExplainResponse
         */
        public static fromObject(object: { [k: string]: any }): vtadmin.VTExplainResponse;

        /**
         * Creates a plain object from a VTExplainResponse message. Also converts values to other types if specified.
         * @param message VTExplainResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtadmin.VTExplainResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this VTExplainResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace tabletmanagerdata. */
export namespace tabletmanagerdata {

    /** Properties of a TableDefinition. */
    interface ITableDefinition {

        /** TableDefinition name */
        name?: (string|null);

        /** TableDefinition schema */
        schema?: (string|null);

        /** TableDefinition columns */
        columns?: (string[]|null);

        /** TableDefinition primary_key_columns */
        primary_key_columns?: (string[]|null);

        /** TableDefinition type */
        type?: (string|null);

        /** TableDefinition data_length */
        data_length?: (number|Long|null);

        /** TableDefinition row_count */
        row_count?: (number|Long|null);

        /** TableDefinition fields */
        fields?: (query.IField[]|null);
    }

    /** Represents a TableDefinition. */
    class TableDefinition implements ITableDefinition {

        /**
         * Constructs a new TableDefinition.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.ITableDefinition);

        /** TableDefinition name. */
        public name: string;

        /** TableDefinition schema. */
        public schema: string;

        /** TableDefinition columns. */
        public columns: string[];

        /** TableDefinition primary_key_columns. */
        public primary_key_columns: string[];

        /** TableDefinition type. */
        public type: string;

        /** TableDefinition data_length. */
        public data_length: (number|Long);

        /** TableDefinition row_count. */
        public row_count: (number|Long);

        /** TableDefinition fields. */
        public fields: query.IField[];

        /**
         * Creates a new TableDefinition instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TableDefinition instance
         */
        public static create(properties?: tabletmanagerdata.ITableDefinition): tabletmanagerdata.TableDefinition;

        /**
         * Encodes the specified TableDefinition message. Does not implicitly {@link tabletmanagerdata.TableDefinition.verify|verify} messages.
         * @param message TableDefinition message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.ITableDefinition, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TableDefinition message, length delimited. Does not implicitly {@link tabletmanagerdata.TableDefinition.verify|verify} messages.
         * @param message TableDefinition message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.ITableDefinition, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TableDefinition message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TableDefinition
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.TableDefinition;

        /**
         * Decodes a TableDefinition message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TableDefinition
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.TableDefinition;

        /**
         * Verifies a TableDefinition message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TableDefinition message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TableDefinition
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.TableDefinition;

        /**
         * Creates a plain object from a TableDefinition message. Also converts values to other types if specified.
         * @param message TableDefinition
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.TableDefinition, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TableDefinition to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SchemaDefinition. */
    interface ISchemaDefinition {

        /** SchemaDefinition database_schema */
        database_schema?: (string|null);

        /** SchemaDefinition table_definitions */
        table_definitions?: (tabletmanagerdata.ITableDefinition[]|null);

        /** SchemaDefinition version */
        version?: (string|null);
    }

    /** Represents a SchemaDefinition. */
    class SchemaDefinition implements ISchemaDefinition {

        /**
         * Constructs a new SchemaDefinition.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.ISchemaDefinition);

        /** SchemaDefinition database_schema. */
        public database_schema: string;

        /** SchemaDefinition table_definitions. */
        public table_definitions: tabletmanagerdata.ITableDefinition[];

        /** SchemaDefinition version. */
        public version: string;

        /**
         * Creates a new SchemaDefinition instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SchemaDefinition instance
         */
        public static create(properties?: tabletmanagerdata.ISchemaDefinition): tabletmanagerdata.SchemaDefinition;

        /**
         * Encodes the specified SchemaDefinition message. Does not implicitly {@link tabletmanagerdata.SchemaDefinition.verify|verify} messages.
         * @param message SchemaDefinition message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.ISchemaDefinition, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SchemaDefinition message, length delimited. Does not implicitly {@link tabletmanagerdata.SchemaDefinition.verify|verify} messages.
         * @param message SchemaDefinition message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.ISchemaDefinition, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SchemaDefinition message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SchemaDefinition
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.SchemaDefinition;

        /**
         * Decodes a SchemaDefinition message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SchemaDefinition
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.SchemaDefinition;

        /**
         * Verifies a SchemaDefinition message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SchemaDefinition message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SchemaDefinition
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.SchemaDefinition;

        /**
         * Creates a plain object from a SchemaDefinition message. Also converts values to other types if specified.
         * @param message SchemaDefinition
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.SchemaDefinition, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SchemaDefinition to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SchemaChangeResult. */
    interface ISchemaChangeResult {

        /** SchemaChangeResult before_schema */
        before_schema?: (tabletmanagerdata.ISchemaDefinition|null);

        /** SchemaChangeResult after_schema */
        after_schema?: (tabletmanagerdata.ISchemaDefinition|null);
    }

    /** Represents a SchemaChangeResult. */
    class SchemaChangeResult implements ISchemaChangeResult {

        /**
         * Constructs a new SchemaChangeResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.ISchemaChangeResult);

        /** SchemaChangeResult before_schema. */
        public before_schema?: (tabletmanagerdata.ISchemaDefinition|null);

        /** SchemaChangeResult after_schema. */
        public after_schema?: (tabletmanagerdata.ISchemaDefinition|null);

        /**
         * Creates a new SchemaChangeResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SchemaChangeResult instance
         */
        public static create(properties?: tabletmanagerdata.ISchemaChangeResult): tabletmanagerdata.SchemaChangeResult;

        /**
         * Encodes the specified SchemaChangeResult message. Does not implicitly {@link tabletmanagerdata.SchemaChangeResult.verify|verify} messages.
         * @param message SchemaChangeResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.ISchemaChangeResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SchemaChangeResult message, length delimited. Does not implicitly {@link tabletmanagerdata.SchemaChangeResult.verify|verify} messages.
         * @param message SchemaChangeResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.ISchemaChangeResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SchemaChangeResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SchemaChangeResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.SchemaChangeResult;

        /**
         * Decodes a SchemaChangeResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SchemaChangeResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.SchemaChangeResult;

        /**
         * Verifies a SchemaChangeResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SchemaChangeResult message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SchemaChangeResult
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.SchemaChangeResult;

        /**
         * Creates a plain object from a SchemaChangeResult message. Also converts values to other types if specified.
         * @param message SchemaChangeResult
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.SchemaChangeResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SchemaChangeResult to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserPermission. */
    interface IUserPermission {

        /** UserPermission host */
        host?: (string|null);

        /** UserPermission user */
        user?: (string|null);

        /** UserPermission password_checksum */
        password_checksum?: (number|Long|null);

        /** UserPermission privileges */
        privileges?: ({ [k: string]: string }|null);
    }

    /** Represents a UserPermission. */
    class UserPermission implements IUserPermission {

        /**
         * Constructs a new UserPermission.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IUserPermission);

        /** UserPermission host. */
        public host: string;

        /** UserPermission user. */
        public user: string;

        /** UserPermission password_checksum. */
        public password_checksum: (number|Long);

        /** UserPermission privileges. */
        public privileges: { [k: string]: string };

        /**
         * Creates a new UserPermission instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserPermission instance
         */
        public static create(properties?: tabletmanagerdata.IUserPermission): tabletmanagerdata.UserPermission;

        /**
         * Encodes the specified UserPermission message. Does not implicitly {@link tabletmanagerdata.UserPermission.verify|verify} messages.
         * @param message UserPermission message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IUserPermission, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UserPermission message, length delimited. Does not implicitly {@link tabletmanagerdata.UserPermission.verify|verify} messages.
         * @param message UserPermission message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IUserPermission, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a UserPermission message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserPermission
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.UserPermission;

        /**
         * Decodes a UserPermission message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserPermission
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.UserPermission;

        /**
         * Verifies a UserPermission message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserPermission message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserPermission
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.UserPermission;

        /**
         * Creates a plain object from a UserPermission message. Also converts values to other types if specified.
         * @param message UserPermission
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.UserPermission, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserPermission to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DbPermission. */
    interface IDbPermission {

        /** DbPermission host */
        host?: (string|null);

        /** DbPermission db */
        db?: (string|null);

        /** DbPermission user */
        user?: (string|null);

        /** DbPermission privileges */
        privileges?: ({ [k: string]: string }|null);
    }

    /** Represents a DbPermission. */
    class DbPermission implements IDbPermission {

        /**
         * Constructs a new DbPermission.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IDbPermission);

        /** DbPermission host. */
        public host: string;

        /** DbPermission db. */
        public db: string;

        /** DbPermission user. */
        public user: string;

        /** DbPermission privileges. */
        public privileges: { [k: string]: string };

        /**
         * Creates a new DbPermission instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DbPermission instance
         */
        public static create(properties?: tabletmanagerdata.IDbPermission): tabletmanagerdata.DbPermission;

        /**
         * Encodes the specified DbPermission message. Does not implicitly {@link tabletmanagerdata.DbPermission.verify|verify} messages.
         * @param message DbPermission message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IDbPermission, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DbPermission message, length delimited. Does not implicitly {@link tabletmanagerdata.DbPermission.verify|verify} messages.
         * @param message DbPermission message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IDbPermission, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DbPermission message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DbPermission
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.DbPermission;

        /**
         * Decodes a DbPermission message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DbPermission
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.DbPermission;

        /**
         * Verifies a DbPermission message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DbPermission message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DbPermission
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.DbPermission;

        /**
         * Creates a plain object from a DbPermission message. Also converts values to other types if specified.
         * @param message DbPermission
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.DbPermission, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DbPermission to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Permissions. */
    interface IPermissions {

        /** Permissions user_permissions */
        user_permissions?: (tabletmanagerdata.IUserPermission[]|null);

        /** Permissions db_permissions */
        db_permissions?: (tabletmanagerdata.IDbPermission[]|null);
    }

    /** Represents a Permissions. */
    class Permissions implements IPermissions {

        /**
         * Constructs a new Permissions.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IPermissions);

        /** Permissions user_permissions. */
        public user_permissions: tabletmanagerdata.IUserPermission[];

        /** Permissions db_permissions. */
        public db_permissions: tabletmanagerdata.IDbPermission[];

        /**
         * Creates a new Permissions instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Permissions instance
         */
        public static create(properties?: tabletmanagerdata.IPermissions): tabletmanagerdata.Permissions;

        /**
         * Encodes the specified Permissions message. Does not implicitly {@link tabletmanagerdata.Permissions.verify|verify} messages.
         * @param message Permissions message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IPermissions, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Permissions message, length delimited. Does not implicitly {@link tabletmanagerdata.Permissions.verify|verify} messages.
         * @param message Permissions message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IPermissions, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Permissions message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Permissions
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.Permissions;

        /**
         * Decodes a Permissions message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Permissions
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.Permissions;

        /**
         * Verifies a Permissions message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Permissions message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Permissions
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.Permissions;

        /**
         * Creates a plain object from a Permissions message. Also converts values to other types if specified.
         * @param message Permissions
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.Permissions, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Permissions to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PingRequest. */
    interface IPingRequest {

        /** PingRequest payload */
        payload?: (string|null);
    }

    /** Represents a PingRequest. */
    class PingRequest implements IPingRequest {

        /**
         * Constructs a new PingRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IPingRequest);

        /** PingRequest payload. */
        public payload: string;

        /**
         * Creates a new PingRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PingRequest instance
         */
        public static create(properties?: tabletmanagerdata.IPingRequest): tabletmanagerdata.PingRequest;

        /**
         * Encodes the specified PingRequest message. Does not implicitly {@link tabletmanagerdata.PingRequest.verify|verify} messages.
         * @param message PingRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IPingRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PingRequest message, length delimited. Does not implicitly {@link tabletmanagerdata.PingRequest.verify|verify} messages.
         * @param message PingRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IPingRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PingRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PingRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.PingRequest;

        /**
         * Decodes a PingRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PingRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.PingRequest;

        /**
         * Verifies a PingRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PingRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PingRequest
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.PingRequest;

        /**
         * Creates a plain object from a PingRequest message. Also converts values to other types if specified.
         * @param message PingRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.PingRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PingRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PingResponse. */
    interface IPingResponse {

        /** PingResponse payload */
        payload?: (string|null);
    }

    /** Represents a PingResponse. */
    class PingResponse implements IPingResponse {

        /**
         * Constructs a new PingResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IPingResponse);

        /** PingResponse payload. */
        public payload: string;

        /**
         * Creates a new PingResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PingResponse instance
         */
        public static create(properties?: tabletmanagerdata.IPingResponse): tabletmanagerdata.PingResponse;

        /**
         * Encodes the specified PingResponse message. Does not implicitly {@link tabletmanagerdata.PingResponse.verify|verify} messages.
         * @param message PingResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IPingResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PingResponse message, length delimited. Does not implicitly {@link tabletmanagerdata.PingResponse.verify|verify} messages.
         * @param message PingResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IPingResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PingResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PingResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.PingResponse;

        /**
         * Decodes a PingResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PingResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.PingResponse;

        /**
         * Verifies a PingResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PingResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PingResponse
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.PingResponse;

        /**
         * Creates a plain object from a PingResponse message. Also converts values to other types if specified.
         * @param message PingResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.PingResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PingResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SleepRequest. */
    interface ISleepRequest {

        /** SleepRequest duration */
        duration?: (number|Long|null);
    }

    /** Represents a SleepRequest. */
    class SleepRequest implements ISleepRequest {

        /**
         * Constructs a new SleepRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.ISleepRequest);

        /** SleepRequest duration. */
        public duration: (number|Long);

        /**
         * Creates a new SleepRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SleepRequest instance
         */
        public static create(properties?: tabletmanagerdata.ISleepRequest): tabletmanagerdata.SleepRequest;

        /**
         * Encodes the specified SleepRequest message. Does not implicitly {@link tabletmanagerdata.SleepRequest.verify|verify} messages.
         * @param message SleepRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.ISleepRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SleepRequest message, length delimited. Does not implicitly {@link tabletmanagerdata.SleepRequest.verify|verify} messages.
         * @param message SleepRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.ISleepRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SleepRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SleepRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.SleepRequest;

        /**
         * Decodes a SleepRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SleepRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.SleepRequest;

        /**
         * Verifies a SleepRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SleepRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SleepRequest
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.SleepRequest;

        /**
         * Creates a plain object from a SleepRequest message. Also converts values to other types if specified.
         * @param message SleepRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.SleepRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SleepRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SleepResponse. */
    interface ISleepResponse {
    }

    /** Represents a SleepResponse. */
    class SleepResponse implements ISleepResponse {

        /**
         * Constructs a new SleepResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.ISleepResponse);

        /**
         * Creates a new SleepResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SleepResponse instance
         */
        public static create(properties?: tabletmanagerdata.ISleepResponse): tabletmanagerdata.SleepResponse;

        /**
         * Encodes the specified SleepResponse message. Does not implicitly {@link tabletmanagerdata.SleepResponse.verify|verify} messages.
         * @param message SleepResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.ISleepResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SleepResponse message, length delimited. Does not implicitly {@link tabletmanagerdata.SleepResponse.verify|verify} messages.
         * @param message SleepResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.ISleepResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SleepResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SleepResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.SleepResponse;

        /**
         * Decodes a SleepResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SleepResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.SleepResponse;

        /**
         * Verifies a SleepResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SleepResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SleepResponse
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.SleepResponse;

        /**
         * Creates a plain object from a SleepResponse message. Also converts values to other types if specified.
         * @param message SleepResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.SleepResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SleepResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ExecuteHookRequest. */
    interface IExecuteHookRequest {

        /** ExecuteHookRequest name */
        name?: (string|null);

        /** ExecuteHookRequest parameters */
        parameters?: (string[]|null);

        /** ExecuteHookRequest extra_env */
        extra_env?: ({ [k: string]: string }|null);
    }

    /** Represents an ExecuteHookRequest. */
    class ExecuteHookRequest implements IExecuteHookRequest {

        /**
         * Constructs a new ExecuteHookRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IExecuteHookRequest);

        /** ExecuteHookRequest name. */
        public name: string;

        /** ExecuteHookRequest parameters. */
        public parameters: string[];

        /** ExecuteHookRequest extra_env. */
        public extra_env: { [k: string]: string };

        /**
         * Creates a new ExecuteHookRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ExecuteHookRequest instance
         */
        public static create(properties?: tabletmanagerdata.IExecuteHookRequest): tabletmanagerdata.ExecuteHookRequest;

        /**
         * Encodes the specified ExecuteHookRequest message. Does not implicitly {@link tabletmanagerdata.ExecuteHookRequest.verify|verify} messages.
         * @param message ExecuteHookRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IExecuteHookRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ExecuteHookRequest message, length delimited. Does not implicitly {@link tabletmanagerdata.ExecuteHookRequest.verify|verify} messages.
         * @param message ExecuteHookRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IExecuteHookRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ExecuteHookRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ExecuteHookRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.ExecuteHookRequest;

        /**
         * Decodes an ExecuteHookRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ExecuteHookRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.ExecuteHookRequest;

        /**
         * Verifies an ExecuteHookRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ExecuteHookRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ExecuteHookRequest
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.ExecuteHookRequest;

        /**
         * Creates a plain object from an ExecuteHookRequest message. Also converts values to other types if specified.
         * @param message ExecuteHookRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.ExecuteHookRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ExecuteHookRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ExecuteHookResponse. */
    interface IExecuteHookResponse {

        /** ExecuteHookResponse exit_status */
        exit_status?: (number|Long|null);

        /** ExecuteHookResponse stdout */
        stdout?: (string|null);

        /** ExecuteHookResponse stderr */
        stderr?: (string|null);
    }

    /** Represents an ExecuteHookResponse. */
    class ExecuteHookResponse implements IExecuteHookResponse {

        /**
         * Constructs a new ExecuteHookResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IExecuteHookResponse);

        /** ExecuteHookResponse exit_status. */
        public exit_status: (number|Long);

        /** ExecuteHookResponse stdout. */
        public stdout: string;

        /** ExecuteHookResponse stderr. */
        public stderr: string;

        /**
         * Creates a new ExecuteHookResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ExecuteHookResponse instance
         */
        public static create(properties?: tabletmanagerdata.IExecuteHookResponse): tabletmanagerdata.ExecuteHookResponse;

        /**
         * Encodes the specified ExecuteHookResponse message. Does not implicitly {@link tabletmanagerdata.ExecuteHookResponse.verify|verify} messages.
         * @param message ExecuteHookResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IExecuteHookResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ExecuteHookResponse message, length delimited. Does not implicitly {@link tabletmanagerdata.ExecuteHookResponse.verify|verify} messages.
         * @param message ExecuteHookResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IExecuteHookResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ExecuteHookResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ExecuteHookResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.ExecuteHookResponse;

        /**
         * Decodes an ExecuteHookResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ExecuteHookResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.ExecuteHookResponse;

        /**
         * Verifies an ExecuteHookResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ExecuteHookResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ExecuteHookResponse
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.ExecuteHookResponse;

        /**
         * Creates a plain object from an ExecuteHookResponse message. Also converts values to other types if specified.
         * @param message ExecuteHookResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.ExecuteHookResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ExecuteHookResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetSchemaRequest. */
    interface IGetSchemaRequest {

        /** GetSchemaRequest tables */
        tables?: (string[]|null);

        /** GetSchemaRequest include_views */
        include_views?: (boolean|null);

        /** GetSchemaRequest exclude_tables */
        exclude_tables?: (string[]|null);
    }

    /** Represents a GetSchemaRequest. */
    class GetSchemaRequest implements IGetSchemaRequest {

        /**
         * Constructs a new GetSchemaRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IGetSchemaRequest);

        /** GetSchemaRequest tables. */
        public tables: string[];

        /** GetSchemaRequest include_views. */
        public include_views: boolean;

        /** GetSchemaRequest exclude_tables. */
        public exclude_tables: string[];

        /**
         * Creates a new GetSchemaRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetSchemaRequest instance
         */
        public static create(properties?: tabletmanagerdata.IGetSchemaRequest): tabletmanagerdata.GetSchemaRequest;

        /**
         * Encodes the specified GetSchemaRequest message. Does not implicitly {@link tabletmanagerdata.GetSchemaRequest.verify|verify} messages.
         * @param message GetSchemaRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IGetSchemaRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetSchemaRequest message, length delimited. Does not implicitly {@link tabletmanagerdata.GetSchemaRequest.verify|verify} messages.
         * @param message GetSchemaRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IGetSchemaRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetSchemaRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetSchemaRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.GetSchemaRequest;

        /**
         * Decodes a GetSchemaRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetSchemaRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.GetSchemaRequest;

        /**
         * Verifies a GetSchemaRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetSchemaRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetSchemaRequest
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.GetSchemaRequest;

        /**
         * Creates a plain object from a GetSchemaRequest message. Also converts values to other types if specified.
         * @param message GetSchemaRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.GetSchemaRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetSchemaRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetSchemaResponse. */
    interface IGetSchemaResponse {

        /** GetSchemaResponse schema_definition */
        schema_definition?: (tabletmanagerdata.ISchemaDefinition|null);
    }

    /** Represents a GetSchemaResponse. */
    class GetSchemaResponse implements IGetSchemaResponse {

        /**
         * Constructs a new GetSchemaResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IGetSchemaResponse);

        /** GetSchemaResponse schema_definition. */
        public schema_definition?: (tabletmanagerdata.ISchemaDefinition|null);

        /**
         * Creates a new GetSchemaResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetSchemaResponse instance
         */
        public static create(properties?: tabletmanagerdata.IGetSchemaResponse): tabletmanagerdata.GetSchemaResponse;

        /**
         * Encodes the specified GetSchemaResponse message. Does not implicitly {@link tabletmanagerdata.GetSchemaResponse.verify|verify} messages.
         * @param message GetSchemaResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IGetSchemaResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetSchemaResponse message, length delimited. Does not implicitly {@link tabletmanagerdata.GetSchemaResponse.verify|verify} messages.
         * @param message GetSchemaResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IGetSchemaResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetSchemaResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetSchemaResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.GetSchemaResponse;

        /**
         * Decodes a GetSchemaResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetSchemaResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.GetSchemaResponse;

        /**
         * Verifies a GetSchemaResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetSchemaResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetSchemaResponse
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.GetSchemaResponse;

        /**
         * Creates a plain object from a GetSchemaResponse message. Also converts values to other types if specified.
         * @param message GetSchemaResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.GetSchemaResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetSchemaResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetPermissionsRequest. */
    interface IGetPermissionsRequest {
    }

    /** Represents a GetPermissionsRequest. */
    class GetPermissionsRequest implements IGetPermissionsRequest {

        /**
         * Constructs a new GetPermissionsRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IGetPermissionsRequest);

        /**
         * Creates a new GetPermissionsRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetPermissionsRequest instance
         */
        public static create(properties?: tabletmanagerdata.IGetPermissionsRequest): tabletmanagerdata.GetPermissionsRequest;

        /**
         * Encodes the specified GetPermissionsRequest message. Does not implicitly {@link tabletmanagerdata.GetPermissionsRequest.verify|verify} messages.
         * @param message GetPermissionsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IGetPermissionsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetPermissionsRequest message, length delimited. Does not implicitly {@link tabletmanagerdata.GetPermissionsRequest.verify|verify} messages.
         * @param message GetPermissionsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IGetPermissionsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetPermissionsRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetPermissionsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.GetPermissionsRequest;

        /**
         * Decodes a GetPermissionsRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetPermissionsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.GetPermissionsRequest;

        /**
         * Verifies a GetPermissionsRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetPermissionsRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetPermissionsRequest
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.GetPermissionsRequest;

        /**
         * Creates a plain object from a GetPermissionsRequest message. Also converts values to other types if specified.
         * @param message GetPermissionsRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.GetPermissionsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetPermissionsRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetPermissionsResponse. */
    interface IGetPermissionsResponse {

        /** GetPermissionsResponse permissions */
        permissions?: (tabletmanagerdata.IPermissions|null);
    }

    /** Represents a GetPermissionsResponse. */
    class GetPermissionsResponse implements IGetPermissionsResponse {

        /**
         * Constructs a new GetPermissionsResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IGetPermissionsResponse);

        /** GetPermissionsResponse permissions. */
        public permissions?: (tabletmanagerdata.IPermissions|null);

        /**
         * Creates a new GetPermissionsResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetPermissionsResponse instance
         */
        public static create(properties?: tabletmanagerdata.IGetPermissionsResponse): tabletmanagerdata.GetPermissionsResponse;

        /**
         * Encodes the specified GetPermissionsResponse message. Does not implicitly {@link tabletmanagerdata.GetPermissionsResponse.verify|verify} messages.
         * @param message GetPermissionsResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IGetPermissionsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetPermissionsResponse message, length delimited. Does not implicitly {@link tabletmanagerdata.GetPermissionsResponse.verify|verify} messages.
         * @param message GetPermissionsResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IGetPermissionsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetPermissionsResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetPermissionsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.GetPermissionsResponse;

        /**
         * Decodes a GetPermissionsResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetPermissionsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.GetPermissionsResponse;

        /**
         * Verifies a GetPermissionsResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetPermissionsResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetPermissionsResponse
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.GetPermissionsResponse;

        /**
         * Creates a plain object from a GetPermissionsResponse message. Also converts values to other types if specified.
         * @param message GetPermissionsResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.GetPermissionsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetPermissionsResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SetReadOnlyRequest. */
    interface ISetReadOnlyRequest {
    }

    /** Represents a SetReadOnlyRequest. */
    class SetReadOnlyRequest implements ISetReadOnlyRequest {

        /**
         * Constructs a new SetReadOnlyRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.ISetReadOnlyRequest);

        /**
         * Creates a new SetReadOnlyRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SetReadOnlyRequest instance
         */
        public static create(properties?: tabletmanagerdata.ISetReadOnlyRequest): tabletmanagerdata.SetReadOnlyRequest;

        /**
         * Encodes the specified SetReadOnlyRequest message. Does not implicitly {@link tabletmanagerdata.SetReadOnlyRequest.verify|verify} messages.
         * @param message SetReadOnlyRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.ISetReadOnlyRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SetReadOnlyRequest message, length delimited. Does not implicitly {@link tabletmanagerdata.SetReadOnlyRequest.verify|verify} messages.
         * @param message SetReadOnlyRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.ISetReadOnlyRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SetReadOnlyRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SetReadOnlyRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.SetReadOnlyRequest;

        /**
         * Decodes a SetReadOnlyRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SetReadOnlyRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.SetReadOnlyRequest;

        /**
         * Verifies a SetReadOnlyRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SetReadOnlyRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SetReadOnlyRequest
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.SetReadOnlyRequest;

        /**
         * Creates a plain object from a SetReadOnlyRequest message. Also converts values to other types if specified.
         * @param message SetReadOnlyRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.SetReadOnlyRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SetReadOnlyRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SetReadOnlyResponse. */
    interface ISetReadOnlyResponse {
    }

    /** Represents a SetReadOnlyResponse. */
    class SetReadOnlyResponse implements ISetReadOnlyResponse {

        /**
         * Constructs a new SetReadOnlyResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.ISetReadOnlyResponse);

        /**
         * Creates a new SetReadOnlyResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SetReadOnlyResponse instance
         */
        public static create(properties?: tabletmanagerdata.ISetReadOnlyResponse): tabletmanagerdata.SetReadOnlyResponse;

        /**
         * Encodes the specified SetReadOnlyResponse message. Does not implicitly {@link tabletmanagerdata.SetReadOnlyResponse.verify|verify} messages.
         * @param message SetReadOnlyResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.ISetReadOnlyResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SetReadOnlyResponse message, length delimited. Does not implicitly {@link tabletmanagerdata.SetReadOnlyResponse.verify|verify} messages.
         * @param message SetReadOnlyResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.ISetReadOnlyResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SetReadOnlyResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SetReadOnlyResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.SetReadOnlyResponse;

        /**
         * Decodes a SetReadOnlyResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SetReadOnlyResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.SetReadOnlyResponse;

        /**
         * Verifies a SetReadOnlyResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SetReadOnlyResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SetReadOnlyResponse
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.SetReadOnlyResponse;

        /**
         * Creates a plain object from a SetReadOnlyResponse message. Also converts values to other types if specified.
         * @param message SetReadOnlyResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.SetReadOnlyResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SetReadOnlyResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SetReadWriteRequest. */
    interface ISetReadWriteRequest {
    }

    /** Represents a SetReadWriteRequest. */
    class SetReadWriteRequest implements ISetReadWriteRequest {

        /**
         * Constructs a new SetReadWriteRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.ISetReadWriteRequest);

        /**
         * Creates a new SetReadWriteRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SetReadWriteRequest instance
         */
        public static create(properties?: tabletmanagerdata.ISetReadWriteRequest): tabletmanagerdata.SetReadWriteRequest;

        /**
         * Encodes the specified SetReadWriteRequest message. Does not implicitly {@link tabletmanagerdata.SetReadWriteRequest.verify|verify} messages.
         * @param message SetReadWriteRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.ISetReadWriteRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SetReadWriteRequest message, length delimited. Does not implicitly {@link tabletmanagerdata.SetReadWriteRequest.verify|verify} messages.
         * @param message SetReadWriteRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.ISetReadWriteRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SetReadWriteRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SetReadWriteRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.SetReadWriteRequest;

        /**
         * Decodes a SetReadWriteRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SetReadWriteRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.SetReadWriteRequest;

        /**
         * Verifies a SetReadWriteRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SetReadWriteRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SetReadWriteRequest
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.SetReadWriteRequest;

        /**
         * Creates a plain object from a SetReadWriteRequest message. Also converts values to other types if specified.
         * @param message SetReadWriteRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.SetReadWriteRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SetReadWriteRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SetReadWriteResponse. */
    interface ISetReadWriteResponse {
    }

    /** Represents a SetReadWriteResponse. */
    class SetReadWriteResponse implements ISetReadWriteResponse {

        /**
         * Constructs a new SetReadWriteResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.ISetReadWriteResponse);

        /**
         * Creates a new SetReadWriteResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SetReadWriteResponse instance
         */
        public static create(properties?: tabletmanagerdata.ISetReadWriteResponse): tabletmanagerdata.SetReadWriteResponse;

        /**
         * Encodes the specified SetReadWriteResponse message. Does not implicitly {@link tabletmanagerdata.SetReadWriteResponse.verify|verify} messages.
         * @param message SetReadWriteResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.ISetReadWriteResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SetReadWriteResponse message, length delimited. Does not implicitly {@link tabletmanagerdata.SetReadWriteResponse.verify|verify} messages.
         * @param message SetReadWriteResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.ISetReadWriteResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SetReadWriteResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SetReadWriteResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.SetReadWriteResponse;

        /**
         * Decodes a SetReadWriteResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SetReadWriteResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.SetReadWriteResponse;

        /**
         * Verifies a SetReadWriteResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SetReadWriteResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SetReadWriteResponse
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.SetReadWriteResponse;

        /**
         * Creates a plain object from a SetReadWriteResponse message. Also converts values to other types if specified.
         * @param message SetReadWriteResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.SetReadWriteResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SetReadWriteResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChangeTypeRequest. */
    interface IChangeTypeRequest {

        /** ChangeTypeRequest tablet_type */
        tablet_type?: (topodata.TabletType|null);
    }

    /** Represents a ChangeTypeRequest. */
    class ChangeTypeRequest implements IChangeTypeRequest {

        /**
         * Constructs a new ChangeTypeRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IChangeTypeRequest);

        /** ChangeTypeRequest tablet_type. */
        public tablet_type: topodata.TabletType;

        /**
         * Creates a new ChangeTypeRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChangeTypeRequest instance
         */
        public static create(properties?: tabletmanagerdata.IChangeTypeRequest): tabletmanagerdata.ChangeTypeRequest;

        /**
         * Encodes the specified ChangeTypeRequest message. Does not implicitly {@link tabletmanagerdata.ChangeTypeRequest.verify|verify} messages.
         * @param message ChangeTypeRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IChangeTypeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChangeTypeRequest message, length delimited. Does not implicitly {@link tabletmanagerdata.ChangeTypeRequest.verify|verify} messages.
         * @param message ChangeTypeRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IChangeTypeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChangeTypeRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChangeTypeRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.ChangeTypeRequest;

        /**
         * Decodes a ChangeTypeRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChangeTypeRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.ChangeTypeRequest;

        /**
         * Verifies a ChangeTypeRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChangeTypeRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChangeTypeRequest
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.ChangeTypeRequest;

        /**
         * Creates a plain object from a ChangeTypeRequest message. Also converts values to other types if specified.
         * @param message ChangeTypeRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.ChangeTypeRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChangeTypeRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChangeTypeResponse. */
    interface IChangeTypeResponse {
    }

    /** Represents a ChangeTypeResponse. */
    class ChangeTypeResponse implements IChangeTypeResponse {

        /**
         * Constructs a new ChangeTypeResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IChangeTypeResponse);

        /**
         * Creates a new ChangeTypeResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChangeTypeResponse instance
         */
        public static create(properties?: tabletmanagerdata.IChangeTypeResponse): tabletmanagerdata.ChangeTypeResponse;

        /**
         * Encodes the specified ChangeTypeResponse message. Does not implicitly {@link tabletmanagerdata.ChangeTypeResponse.verify|verify} messages.
         * @param message ChangeTypeResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IChangeTypeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChangeTypeResponse message, length delimited. Does not implicitly {@link tabletmanagerdata.ChangeTypeResponse.verify|verify} messages.
         * @param message ChangeTypeResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IChangeTypeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChangeTypeResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChangeTypeResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.ChangeTypeResponse;

        /**
         * Decodes a ChangeTypeResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChangeTypeResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.ChangeTypeResponse;

        /**
         * Verifies a ChangeTypeResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChangeTypeResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChangeTypeResponse
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.ChangeTypeResponse;

        /**
         * Creates a plain object from a ChangeTypeResponse message. Also converts values to other types if specified.
         * @param message ChangeTypeResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.ChangeTypeResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChangeTypeResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RefreshStateRequest. */
    interface IRefreshStateRequest {
    }

    /** Represents a RefreshStateRequest. */
    class RefreshStateRequest implements IRefreshStateRequest {

        /**
         * Constructs a new RefreshStateRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IRefreshStateRequest);

        /**
         * Creates a new RefreshStateRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RefreshStateRequest instance
         */
        public static create(properties?: tabletmanagerdata.IRefreshStateRequest): tabletmanagerdata.RefreshStateRequest;

        /**
         * Encodes the specified RefreshStateRequest message. Does not implicitly {@link tabletmanagerdata.RefreshStateRequest.verify|verify} messages.
         * @param message RefreshStateRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IRefreshStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RefreshStateRequest message, length delimited. Does not implicitly {@link tabletmanagerdata.RefreshStateRequest.verify|verify} messages.
         * @param message RefreshStateRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IRefreshStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RefreshStateRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RefreshStateRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.RefreshStateRequest;

        /**
         * Decodes a RefreshStateRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RefreshStateRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.RefreshStateRequest;

        /**
         * Verifies a RefreshStateRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RefreshStateRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RefreshStateRequest
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.RefreshStateRequest;

        /**
         * Creates a plain object from a RefreshStateRequest message. Also converts values to other types if specified.
         * @param message RefreshStateRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.RefreshStateRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RefreshStateRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RefreshStateResponse. */
    interface IRefreshStateResponse {
    }

    /** Represents a RefreshStateResponse. */
    class RefreshStateResponse implements IRefreshStateResponse {

        /**
         * Constructs a new RefreshStateResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IRefreshStateResponse);

        /**
         * Creates a new RefreshStateResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RefreshStateResponse instance
         */
        public static create(properties?: tabletmanagerdata.IRefreshStateResponse): tabletmanagerdata.RefreshStateResponse;

        /**
         * Encodes the specified RefreshStateResponse message. Does not implicitly {@link tabletmanagerdata.RefreshStateResponse.verify|verify} messages.
         * @param message RefreshStateResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IRefreshStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RefreshStateResponse message, length delimited. Does not implicitly {@link tabletmanagerdata.RefreshStateResponse.verify|verify} messages.
         * @param message RefreshStateResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IRefreshStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RefreshStateResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RefreshStateResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.RefreshStateResponse;

        /**
         * Decodes a RefreshStateResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RefreshStateResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.RefreshStateResponse;

        /**
         * Verifies a RefreshStateResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RefreshStateResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RefreshStateResponse
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.RefreshStateResponse;

        /**
         * Creates a plain object from a RefreshStateResponse message. Also converts values to other types if specified.
         * @param message RefreshStateResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.RefreshStateResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RefreshStateResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RunHealthCheckRequest. */
    interface IRunHealthCheckRequest {
    }

    /** Represents a RunHealthCheckRequest. */
    class RunHealthCheckRequest implements IRunHealthCheckRequest {

        /**
         * Constructs a new RunHealthCheckRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IRunHealthCheckRequest);

        /**
         * Creates a new RunHealthCheckRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RunHealthCheckRequest instance
         */
        public static create(properties?: tabletmanagerdata.IRunHealthCheckRequest): tabletmanagerdata.RunHealthCheckRequest;

        /**
         * Encodes the specified RunHealthCheckRequest message. Does not implicitly {@link tabletmanagerdata.RunHealthCheckRequest.verify|verify} messages.
         * @param message RunHealthCheckRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IRunHealthCheckRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RunHealthCheckRequest message, length delimited. Does not implicitly {@link tabletmanagerdata.RunHealthCheckRequest.verify|verify} messages.
         * @param message RunHealthCheckRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IRunHealthCheckRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RunHealthCheckRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RunHealthCheckRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.RunHealthCheckRequest;

        /**
         * Decodes a RunHealthCheckRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RunHealthCheckRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.RunHealthCheckRequest;

        /**
         * Verifies a RunHealthCheckRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RunHealthCheckRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RunHealthCheckRequest
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.RunHealthCheckRequest;

        /**
         * Creates a plain object from a RunHealthCheckRequest message. Also converts values to other types if specified.
         * @param message RunHealthCheckRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.RunHealthCheckRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RunHealthCheckRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RunHealthCheckResponse. */
    interface IRunHealthCheckResponse {
    }

    /** Represents a RunHealthCheckResponse. */
    class RunHealthCheckResponse implements IRunHealthCheckResponse {

        /**
         * Constructs a new RunHealthCheckResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IRunHealthCheckResponse);

        /**
         * Creates a new RunHealthCheckResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RunHealthCheckResponse instance
         */
        public static create(properties?: tabletmanagerdata.IRunHealthCheckResponse): tabletmanagerdata.RunHealthCheckResponse;

        /**
         * Encodes the specified RunHealthCheckResponse message. Does not implicitly {@link tabletmanagerdata.RunHealthCheckResponse.verify|verify} messages.
         * @param message RunHealthCheckResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IRunHealthCheckResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RunHealthCheckResponse message, length delimited. Does not implicitly {@link tabletmanagerdata.RunHealthCheckResponse.verify|verify} messages.
         * @param message RunHealthCheckResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IRunHealthCheckResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RunHealthCheckResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RunHealthCheckResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.RunHealthCheckResponse;

        /**
         * Decodes a RunHealthCheckResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RunHealthCheckResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.RunHealthCheckResponse;

        /**
         * Verifies a RunHealthCheckResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RunHealthCheckResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RunHealthCheckResponse
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.RunHealthCheckResponse;

        /**
         * Creates a plain object from a RunHealthCheckResponse message. Also converts values to other types if specified.
         * @param message RunHealthCheckResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.RunHealthCheckResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RunHealthCheckResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an IgnoreHealthErrorRequest. */
    interface IIgnoreHealthErrorRequest {

        /** IgnoreHealthErrorRequest pattern */
        pattern?: (string|null);
    }

    /** Represents an IgnoreHealthErrorRequest. */
    class IgnoreHealthErrorRequest implements IIgnoreHealthErrorRequest {

        /**
         * Constructs a new IgnoreHealthErrorRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IIgnoreHealthErrorRequest);

        /** IgnoreHealthErrorRequest pattern. */
        public pattern: string;

        /**
         * Creates a new IgnoreHealthErrorRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns IgnoreHealthErrorRequest instance
         */
        public static create(properties?: tabletmanagerdata.IIgnoreHealthErrorRequest): tabletmanagerdata.IgnoreHealthErrorRequest;

        /**
         * Encodes the specified IgnoreHealthErrorRequest message. Does not implicitly {@link tabletmanagerdata.IgnoreHealthErrorRequest.verify|verify} messages.
         * @param message IgnoreHealthErrorRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IIgnoreHealthErrorRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified IgnoreHealthErrorRequest message, length delimited. Does not implicitly {@link tabletmanagerdata.IgnoreHealthErrorRequest.verify|verify} messages.
         * @param message IgnoreHealthErrorRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IIgnoreHealthErrorRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an IgnoreHealthErrorRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns IgnoreHealthErrorRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.IgnoreHealthErrorRequest;

        /**
         * Decodes an IgnoreHealthErrorRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns IgnoreHealthErrorRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.IgnoreHealthErrorRequest;

        /**
         * Verifies an IgnoreHealthErrorRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an IgnoreHealthErrorRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns IgnoreHealthErrorRequest
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.IgnoreHealthErrorRequest;

        /**
         * Creates a plain object from an IgnoreHealthErrorRequest message. Also converts values to other types if specified.
         * @param message IgnoreHealthErrorRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.IgnoreHealthErrorRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this IgnoreHealthErrorRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an IgnoreHealthErrorResponse. */
    interface IIgnoreHealthErrorResponse {
    }

    /** Represents an IgnoreHealthErrorResponse. */
    class IgnoreHealthErrorResponse implements IIgnoreHealthErrorResponse {

        /**
         * Constructs a new IgnoreHealthErrorResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IIgnoreHealthErrorResponse);

        /**
         * Creates a new IgnoreHealthErrorResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns IgnoreHealthErrorResponse instance
         */
        public static create(properties?: tabletmanagerdata.IIgnoreHealthErrorResponse): tabletmanagerdata.IgnoreHealthErrorResponse;

        /**
         * Encodes the specified IgnoreHealthErrorResponse message. Does not implicitly {@link tabletmanagerdata.IgnoreHealthErrorResponse.verify|verify} messages.
         * @param message IgnoreHealthErrorResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IIgnoreHealthErrorResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified IgnoreHealthErrorResponse message, length delimited. Does not implicitly {@link tabletmanagerdata.IgnoreHealthErrorResponse.verify|verify} messages.
         * @param message IgnoreHealthErrorResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IIgnoreHealthErrorResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an IgnoreHealthErrorResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns IgnoreHealthErrorResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.IgnoreHealthErrorResponse;

        /**
         * Decodes an IgnoreHealthErrorResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns IgnoreHealthErrorResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.IgnoreHealthErrorResponse;

        /**
         * Verifies an IgnoreHealthErrorResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an IgnoreHealthErrorResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns IgnoreHealthErrorResponse
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.IgnoreHealthErrorResponse;

        /**
         * Creates a plain object from an IgnoreHealthErrorResponse message. Also converts values to other types if specified.
         * @param message IgnoreHealthErrorResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.IgnoreHealthErrorResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this IgnoreHealthErrorResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ReloadSchemaRequest. */
    interface IReloadSchemaRequest {

        /** ReloadSchemaRequest wait_position */
        wait_position?: (string|null);
    }

    /** Represents a ReloadSchemaRequest. */
    class ReloadSchemaRequest implements IReloadSchemaRequest {

        /**
         * Constructs a new ReloadSchemaRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IReloadSchemaRequest);

        /** ReloadSchemaRequest wait_position. */
        public wait_position: string;

        /**
         * Creates a new ReloadSchemaRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ReloadSchemaRequest instance
         */
        public static create(properties?: tabletmanagerdata.IReloadSchemaRequest): tabletmanagerdata.ReloadSchemaRequest;

        /**
         * Encodes the specified ReloadSchemaRequest message. Does not implicitly {@link tabletmanagerdata.ReloadSchemaRequest.verify|verify} messages.
         * @param message ReloadSchemaRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IReloadSchemaRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ReloadSchemaRequest message, length delimited. Does not implicitly {@link tabletmanagerdata.ReloadSchemaRequest.verify|verify} messages.
         * @param message ReloadSchemaRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IReloadSchemaRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ReloadSchemaRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ReloadSchemaRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.ReloadSchemaRequest;

        /**
         * Decodes a ReloadSchemaRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ReloadSchemaRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.ReloadSchemaRequest;

        /**
         * Verifies a ReloadSchemaRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ReloadSchemaRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ReloadSchemaRequest
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.ReloadSchemaRequest;

        /**
         * Creates a plain object from a ReloadSchemaRequest message. Also converts values to other types if specified.
         * @param message ReloadSchemaRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.ReloadSchemaRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ReloadSchemaRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ReloadSchemaResponse. */
    interface IReloadSchemaResponse {
    }

    /** Represents a ReloadSchemaResponse. */
    class ReloadSchemaResponse implements IReloadSchemaResponse {

        /**
         * Constructs a new ReloadSchemaResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IReloadSchemaResponse);

        /**
         * Creates a new ReloadSchemaResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ReloadSchemaResponse instance
         */
        public static create(properties?: tabletmanagerdata.IReloadSchemaResponse): tabletmanagerdata.ReloadSchemaResponse;

        /**
         * Encodes the specified ReloadSchemaResponse message. Does not implicitly {@link tabletmanagerdata.ReloadSchemaResponse.verify|verify} messages.
         * @param message ReloadSchemaResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IReloadSchemaResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ReloadSchemaResponse message, length delimited. Does not implicitly {@link tabletmanagerdata.ReloadSchemaResponse.verify|verify} messages.
         * @param message ReloadSchemaResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IReloadSchemaResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ReloadSchemaResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ReloadSchemaResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.ReloadSchemaResponse;

        /**
         * Decodes a ReloadSchemaResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ReloadSchemaResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.ReloadSchemaResponse;

        /**
         * Verifies a ReloadSchemaResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ReloadSchemaResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ReloadSchemaResponse
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.ReloadSchemaResponse;

        /**
         * Creates a plain object from a ReloadSchemaResponse message. Also converts values to other types if specified.
         * @param message ReloadSchemaResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.ReloadSchemaResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ReloadSchemaResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PreflightSchemaRequest. */
    interface IPreflightSchemaRequest {

        /** PreflightSchemaRequest changes */
        changes?: (string[]|null);
    }

    /** Represents a PreflightSchemaRequest. */
    class PreflightSchemaRequest implements IPreflightSchemaRequest {

        /**
         * Constructs a new PreflightSchemaRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IPreflightSchemaRequest);

        /** PreflightSchemaRequest changes. */
        public changes: string[];

        /**
         * Creates a new PreflightSchemaRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PreflightSchemaRequest instance
         */
        public static create(properties?: tabletmanagerdata.IPreflightSchemaRequest): tabletmanagerdata.PreflightSchemaRequest;

        /**
         * Encodes the specified PreflightSchemaRequest message. Does not implicitly {@link tabletmanagerdata.PreflightSchemaRequest.verify|verify} messages.
         * @param message PreflightSchemaRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IPreflightSchemaRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PreflightSchemaRequest message, length delimited. Does not implicitly {@link tabletmanagerdata.PreflightSchemaRequest.verify|verify} messages.
         * @param message PreflightSchemaRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IPreflightSchemaRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PreflightSchemaRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PreflightSchemaRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.PreflightSchemaRequest;

        /**
         * Decodes a PreflightSchemaRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PreflightSchemaRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.PreflightSchemaRequest;

        /**
         * Verifies a PreflightSchemaRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PreflightSchemaRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PreflightSchemaRequest
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.PreflightSchemaRequest;

        /**
         * Creates a plain object from a PreflightSchemaRequest message. Also converts values to other types if specified.
         * @param message PreflightSchemaRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.PreflightSchemaRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PreflightSchemaRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PreflightSchemaResponse. */
    interface IPreflightSchemaResponse {

        /** PreflightSchemaResponse change_results */
        change_results?: (tabletmanagerdata.ISchemaChangeResult[]|null);
    }

    /** Represents a PreflightSchemaResponse. */
    class PreflightSchemaResponse implements IPreflightSchemaResponse {

        /**
         * Constructs a new PreflightSchemaResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IPreflightSchemaResponse);

        /** PreflightSchemaResponse change_results. */
        public change_results: tabletmanagerdata.ISchemaChangeResult[];

        /**
         * Creates a new PreflightSchemaResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PreflightSchemaResponse instance
         */
        public static create(properties?: tabletmanagerdata.IPreflightSchemaResponse): tabletmanagerdata.PreflightSchemaResponse;

        /**
         * Encodes the specified PreflightSchemaResponse message. Does not implicitly {@link tabletmanagerdata.PreflightSchemaResponse.verify|verify} messages.
         * @param message PreflightSchemaResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IPreflightSchemaResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PreflightSchemaResponse message, length delimited. Does not implicitly {@link tabletmanagerdata.PreflightSchemaResponse.verify|verify} messages.
         * @param message PreflightSchemaResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IPreflightSchemaResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PreflightSchemaResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PreflightSchemaResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.PreflightSchemaResponse;

        /**
         * Decodes a PreflightSchemaResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PreflightSchemaResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.PreflightSchemaResponse;

        /**
         * Verifies a PreflightSchemaResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PreflightSchemaResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PreflightSchemaResponse
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.PreflightSchemaResponse;

        /**
         * Creates a plain object from a PreflightSchemaResponse message. Also converts values to other types if specified.
         * @param message PreflightSchemaResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.PreflightSchemaResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PreflightSchemaResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ApplySchemaRequest. */
    interface IApplySchemaRequest {

        /** ApplySchemaRequest sql */
        sql?: (string|null);

        /** ApplySchemaRequest force */
        force?: (boolean|null);

        /** ApplySchemaRequest allow_replication */
        allow_replication?: (boolean|null);

        /** ApplySchemaRequest before_schema */
        before_schema?: (tabletmanagerdata.ISchemaDefinition|null);

        /** ApplySchemaRequest after_schema */
        after_schema?: (tabletmanagerdata.ISchemaDefinition|null);
    }

    /** Represents an ApplySchemaRequest. */
    class ApplySchemaRequest implements IApplySchemaRequest {

        /**
         * Constructs a new ApplySchemaRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IApplySchemaRequest);

        /** ApplySchemaRequest sql. */
        public sql: string;

        /** ApplySchemaRequest force. */
        public force: boolean;

        /** ApplySchemaRequest allow_replication. */
        public allow_replication: boolean;

        /** ApplySchemaRequest before_schema. */
        public before_schema?: (tabletmanagerdata.ISchemaDefinition|null);

        /** ApplySchemaRequest after_schema. */
        public after_schema?: (tabletmanagerdata.ISchemaDefinition|null);

        /**
         * Creates a new ApplySchemaRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ApplySchemaRequest instance
         */
        public static create(properties?: tabletmanagerdata.IApplySchemaRequest): tabletmanagerdata.ApplySchemaRequest;

        /**
         * Encodes the specified ApplySchemaRequest message. Does not implicitly {@link tabletmanagerdata.ApplySchemaRequest.verify|verify} messages.
         * @param message ApplySchemaRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IApplySchemaRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ApplySchemaRequest message, length delimited. Does not implicitly {@link tabletmanagerdata.ApplySchemaRequest.verify|verify} messages.
         * @param message ApplySchemaRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IApplySchemaRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ApplySchemaRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ApplySchemaRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.ApplySchemaRequest;

        /**
         * Decodes an ApplySchemaRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ApplySchemaRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.ApplySchemaRequest;

        /**
         * Verifies an ApplySchemaRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ApplySchemaRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ApplySchemaRequest
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.ApplySchemaRequest;

        /**
         * Creates a plain object from an ApplySchemaRequest message. Also converts values to other types if specified.
         * @param message ApplySchemaRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.ApplySchemaRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ApplySchemaRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ApplySchemaResponse. */
    interface IApplySchemaResponse {

        /** ApplySchemaResponse before_schema */
        before_schema?: (tabletmanagerdata.ISchemaDefinition|null);

        /** ApplySchemaResponse after_schema */
        after_schema?: (tabletmanagerdata.ISchemaDefinition|null);
    }

    /** Represents an ApplySchemaResponse. */
    class ApplySchemaResponse implements IApplySchemaResponse {

        /**
         * Constructs a new ApplySchemaResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IApplySchemaResponse);

        /** ApplySchemaResponse before_schema. */
        public before_schema?: (tabletmanagerdata.ISchemaDefinition|null);

        /** ApplySchemaResponse after_schema. */
        public after_schema?: (tabletmanagerdata.ISchemaDefinition|null);

        /**
         * Creates a new ApplySchemaResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ApplySchemaResponse instance
         */
        public static create(properties?: tabletmanagerdata.IApplySchemaResponse): tabletmanagerdata.ApplySchemaResponse;

        /**
         * Encodes the specified ApplySchemaResponse message. Does not implicitly {@link tabletmanagerdata.ApplySchemaResponse.verify|verify} messages.
         * @param message ApplySchemaResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IApplySchemaResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ApplySchemaResponse message, length delimited. Does not implicitly {@link tabletmanagerdata.ApplySchemaResponse.verify|verify} messages.
         * @param message ApplySchemaResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IApplySchemaResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ApplySchemaResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ApplySchemaResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.ApplySchemaResponse;

        /**
         * Decodes an ApplySchemaResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ApplySchemaResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.ApplySchemaResponse;

        /**
         * Verifies an ApplySchemaResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ApplySchemaResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ApplySchemaResponse
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.ApplySchemaResponse;

        /**
         * Creates a plain object from an ApplySchemaResponse message. Also converts values to other types if specified.
         * @param message ApplySchemaResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.ApplySchemaResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ApplySchemaResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a LockTablesRequest. */
    interface ILockTablesRequest {
    }

    /** Represents a LockTablesRequest. */
    class LockTablesRequest implements ILockTablesRequest {

        /**
         * Constructs a new LockTablesRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.ILockTablesRequest);

        /**
         * Creates a new LockTablesRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LockTablesRequest instance
         */
        public static create(properties?: tabletmanagerdata.ILockTablesRequest): tabletmanagerdata.LockTablesRequest;

        /**
         * Encodes the specified LockTablesRequest message. Does not implicitly {@link tabletmanagerdata.LockTablesRequest.verify|verify} messages.
         * @param message LockTablesRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.ILockTablesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified LockTablesRequest message, length delimited. Does not implicitly {@link tabletmanagerdata.LockTablesRequest.verify|verify} messages.
         * @param message LockTablesRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.ILockTablesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a LockTablesRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LockTablesRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.LockTablesRequest;

        /**
         * Decodes a LockTablesRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LockTablesRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.LockTablesRequest;

        /**
         * Verifies a LockTablesRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LockTablesRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LockTablesRequest
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.LockTablesRequest;

        /**
         * Creates a plain object from a LockTablesRequest message. Also converts values to other types if specified.
         * @param message LockTablesRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.LockTablesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LockTablesRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a LockTablesResponse. */
    interface ILockTablesResponse {
    }

    /** Represents a LockTablesResponse. */
    class LockTablesResponse implements ILockTablesResponse {

        /**
         * Constructs a new LockTablesResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.ILockTablesResponse);

        /**
         * Creates a new LockTablesResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LockTablesResponse instance
         */
        public static create(properties?: tabletmanagerdata.ILockTablesResponse): tabletmanagerdata.LockTablesResponse;

        /**
         * Encodes the specified LockTablesResponse message. Does not implicitly {@link tabletmanagerdata.LockTablesResponse.verify|verify} messages.
         * @param message LockTablesResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.ILockTablesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified LockTablesResponse message, length delimited. Does not implicitly {@link tabletmanagerdata.LockTablesResponse.verify|verify} messages.
         * @param message LockTablesResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.ILockTablesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a LockTablesResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LockTablesResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.LockTablesResponse;

        /**
         * Decodes a LockTablesResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LockTablesResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.LockTablesResponse;

        /**
         * Verifies a LockTablesResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LockTablesResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LockTablesResponse
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.LockTablesResponse;

        /**
         * Creates a plain object from a LockTablesResponse message. Also converts values to other types if specified.
         * @param message LockTablesResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.LockTablesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LockTablesResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UnlockTablesRequest. */
    interface IUnlockTablesRequest {
    }

    /** Represents an UnlockTablesRequest. */
    class UnlockTablesRequest implements IUnlockTablesRequest {

        /**
         * Constructs a new UnlockTablesRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IUnlockTablesRequest);

        /**
         * Creates a new UnlockTablesRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UnlockTablesRequest instance
         */
        public static create(properties?: tabletmanagerdata.IUnlockTablesRequest): tabletmanagerdata.UnlockTablesRequest;

        /**
         * Encodes the specified UnlockTablesRequest message. Does not implicitly {@link tabletmanagerdata.UnlockTablesRequest.verify|verify} messages.
         * @param message UnlockTablesRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IUnlockTablesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UnlockTablesRequest message, length delimited. Does not implicitly {@link tabletmanagerdata.UnlockTablesRequest.verify|verify} messages.
         * @param message UnlockTablesRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IUnlockTablesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an UnlockTablesRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UnlockTablesRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.UnlockTablesRequest;

        /**
         * Decodes an UnlockTablesRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UnlockTablesRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.UnlockTablesRequest;

        /**
         * Verifies an UnlockTablesRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UnlockTablesRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UnlockTablesRequest
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.UnlockTablesRequest;

        /**
         * Creates a plain object from an UnlockTablesRequest message. Also converts values to other types if specified.
         * @param message UnlockTablesRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.UnlockTablesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UnlockTablesRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UnlockTablesResponse. */
    interface IUnlockTablesResponse {
    }

    /** Represents an UnlockTablesResponse. */
    class UnlockTablesResponse implements IUnlockTablesResponse {

        /**
         * Constructs a new UnlockTablesResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IUnlockTablesResponse);

        /**
         * Creates a new UnlockTablesResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UnlockTablesResponse instance
         */
        public static create(properties?: tabletmanagerdata.IUnlockTablesResponse): tabletmanagerdata.UnlockTablesResponse;

        /**
         * Encodes the specified UnlockTablesResponse message. Does not implicitly {@link tabletmanagerdata.UnlockTablesResponse.verify|verify} messages.
         * @param message UnlockTablesResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IUnlockTablesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UnlockTablesResponse message, length delimited. Does not implicitly {@link tabletmanagerdata.UnlockTablesResponse.verify|verify} messages.
         * @param message UnlockTablesResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IUnlockTablesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an UnlockTablesResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UnlockTablesResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.UnlockTablesResponse;

        /**
         * Decodes an UnlockTablesResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UnlockTablesResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.UnlockTablesResponse;

        /**
         * Verifies an UnlockTablesResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UnlockTablesResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UnlockTablesResponse
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.UnlockTablesResponse;

        /**
         * Creates a plain object from an UnlockTablesResponse message. Also converts values to other types if specified.
         * @param message UnlockTablesResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.UnlockTablesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UnlockTablesResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ExecuteFetchAsDbaRequest. */
    interface IExecuteFetchAsDbaRequest {

        /** ExecuteFetchAsDbaRequest query */
        query?: (Uint8Array|null);

        /** ExecuteFetchAsDbaRequest db_name */
        db_name?: (string|null);

        /** ExecuteFetchAsDbaRequest max_rows */
        max_rows?: (number|Long|null);

        /** ExecuteFetchAsDbaRequest disable_binlogs */
        disable_binlogs?: (boolean|null);

        /** ExecuteFetchAsDbaRequest reload_schema */
        reload_schema?: (boolean|null);
    }

    /** Represents an ExecuteFetchAsDbaRequest. */
    class ExecuteFetchAsDbaRequest implements IExecuteFetchAsDbaRequest {

        /**
         * Constructs a new ExecuteFetchAsDbaRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IExecuteFetchAsDbaRequest);

        /** ExecuteFetchAsDbaRequest query. */
        public query: Uint8Array;

        /** ExecuteFetchAsDbaRequest db_name. */
        public db_name: string;

        /** ExecuteFetchAsDbaRequest max_rows. */
        public max_rows: (number|Long);

        /** ExecuteFetchAsDbaRequest disable_binlogs. */
        public disable_binlogs: boolean;

        /** ExecuteFetchAsDbaRequest reload_schema. */
        public reload_schema: boolean;

        /**
         * Creates a new ExecuteFetchAsDbaRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ExecuteFetchAsDbaRequest instance
         */
        public static create(properties?: tabletmanagerdata.IExecuteFetchAsDbaRequest): tabletmanagerdata.ExecuteFetchAsDbaRequest;

        /**
         * Encodes the specified ExecuteFetchAsDbaRequest message. Does not implicitly {@link tabletmanagerdata.ExecuteFetchAsDbaRequest.verify|verify} messages.
         * @param message ExecuteFetchAsDbaRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IExecuteFetchAsDbaRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ExecuteFetchAsDbaRequest message, length delimited. Does not implicitly {@link tabletmanagerdata.ExecuteFetchAsDbaRequest.verify|verify} messages.
         * @param message ExecuteFetchAsDbaRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IExecuteFetchAsDbaRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ExecuteFetchAsDbaRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ExecuteFetchAsDbaRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.ExecuteFetchAsDbaRequest;

        /**
         * Decodes an ExecuteFetchAsDbaRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ExecuteFetchAsDbaRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.ExecuteFetchAsDbaRequest;

        /**
         * Verifies an ExecuteFetchAsDbaRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ExecuteFetchAsDbaRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ExecuteFetchAsDbaRequest
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.ExecuteFetchAsDbaRequest;

        /**
         * Creates a plain object from an ExecuteFetchAsDbaRequest message. Also converts values to other types if specified.
         * @param message ExecuteFetchAsDbaRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.ExecuteFetchAsDbaRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ExecuteFetchAsDbaRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ExecuteFetchAsDbaResponse. */
    interface IExecuteFetchAsDbaResponse {

        /** ExecuteFetchAsDbaResponse result */
        result?: (query.IQueryResult|null);
    }

    /** Represents an ExecuteFetchAsDbaResponse. */
    class ExecuteFetchAsDbaResponse implements IExecuteFetchAsDbaResponse {

        /**
         * Constructs a new ExecuteFetchAsDbaResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IExecuteFetchAsDbaResponse);

        /** ExecuteFetchAsDbaResponse result. */
        public result?: (query.IQueryResult|null);

        /**
         * Creates a new ExecuteFetchAsDbaResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ExecuteFetchAsDbaResponse instance
         */
        public static create(properties?: tabletmanagerdata.IExecuteFetchAsDbaResponse): tabletmanagerdata.ExecuteFetchAsDbaResponse;

        /**
         * Encodes the specified ExecuteFetchAsDbaResponse message. Does not implicitly {@link tabletmanagerdata.ExecuteFetchAsDbaResponse.verify|verify} messages.
         * @param message ExecuteFetchAsDbaResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IExecuteFetchAsDbaResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ExecuteFetchAsDbaResponse message, length delimited. Does not implicitly {@link tabletmanagerdata.ExecuteFetchAsDbaResponse.verify|verify} messages.
         * @param message ExecuteFetchAsDbaResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IExecuteFetchAsDbaResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ExecuteFetchAsDbaResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ExecuteFetchAsDbaResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.ExecuteFetchAsDbaResponse;

        /**
         * Decodes an ExecuteFetchAsDbaResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ExecuteFetchAsDbaResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.ExecuteFetchAsDbaResponse;

        /**
         * Verifies an ExecuteFetchAsDbaResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ExecuteFetchAsDbaResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ExecuteFetchAsDbaResponse
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.ExecuteFetchAsDbaResponse;

        /**
         * Creates a plain object from an ExecuteFetchAsDbaResponse message. Also converts values to other types if specified.
         * @param message ExecuteFetchAsDbaResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.ExecuteFetchAsDbaResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ExecuteFetchAsDbaResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ExecuteFetchAsAllPrivsRequest. */
    interface IExecuteFetchAsAllPrivsRequest {

        /** ExecuteFetchAsAllPrivsRequest query */
        query?: (Uint8Array|null);

        /** ExecuteFetchAsAllPrivsRequest db_name */
        db_name?: (string|null);

        /** ExecuteFetchAsAllPrivsRequest max_rows */
        max_rows?: (number|Long|null);

        /** ExecuteFetchAsAllPrivsRequest reload_schema */
        reload_schema?: (boolean|null);
    }

    /** Represents an ExecuteFetchAsAllPrivsRequest. */
    class ExecuteFetchAsAllPrivsRequest implements IExecuteFetchAsAllPrivsRequest {

        /**
         * Constructs a new ExecuteFetchAsAllPrivsRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IExecuteFetchAsAllPrivsRequest);

        /** ExecuteFetchAsAllPrivsRequest query. */
        public query: Uint8Array;

        /** ExecuteFetchAsAllPrivsRequest db_name. */
        public db_name: string;

        /** ExecuteFetchAsAllPrivsRequest max_rows. */
        public max_rows: (number|Long);

        /** ExecuteFetchAsAllPrivsRequest reload_schema. */
        public reload_schema: boolean;

        /**
         * Creates a new ExecuteFetchAsAllPrivsRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ExecuteFetchAsAllPrivsRequest instance
         */
        public static create(properties?: tabletmanagerdata.IExecuteFetchAsAllPrivsRequest): tabletmanagerdata.ExecuteFetchAsAllPrivsRequest;

        /**
         * Encodes the specified ExecuteFetchAsAllPrivsRequest message. Does not implicitly {@link tabletmanagerdata.ExecuteFetchAsAllPrivsRequest.verify|verify} messages.
         * @param message ExecuteFetchAsAllPrivsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IExecuteFetchAsAllPrivsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ExecuteFetchAsAllPrivsRequest message, length delimited. Does not implicitly {@link tabletmanagerdata.ExecuteFetchAsAllPrivsRequest.verify|verify} messages.
         * @param message ExecuteFetchAsAllPrivsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IExecuteFetchAsAllPrivsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ExecuteFetchAsAllPrivsRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ExecuteFetchAsAllPrivsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.ExecuteFetchAsAllPrivsRequest;

        /**
         * Decodes an ExecuteFetchAsAllPrivsRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ExecuteFetchAsAllPrivsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.ExecuteFetchAsAllPrivsRequest;

        /**
         * Verifies an ExecuteFetchAsAllPrivsRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ExecuteFetchAsAllPrivsRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ExecuteFetchAsAllPrivsRequest
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.ExecuteFetchAsAllPrivsRequest;

        /**
         * Creates a plain object from an ExecuteFetchAsAllPrivsRequest message. Also converts values to other types if specified.
         * @param message ExecuteFetchAsAllPrivsRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.ExecuteFetchAsAllPrivsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ExecuteFetchAsAllPrivsRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ExecuteFetchAsAllPrivsResponse. */
    interface IExecuteFetchAsAllPrivsResponse {

        /** ExecuteFetchAsAllPrivsResponse result */
        result?: (query.IQueryResult|null);
    }

    /** Represents an ExecuteFetchAsAllPrivsResponse. */
    class ExecuteFetchAsAllPrivsResponse implements IExecuteFetchAsAllPrivsResponse {

        /**
         * Constructs a new ExecuteFetchAsAllPrivsResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IExecuteFetchAsAllPrivsResponse);

        /** ExecuteFetchAsAllPrivsResponse result. */
        public result?: (query.IQueryResult|null);

        /**
         * Creates a new ExecuteFetchAsAllPrivsResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ExecuteFetchAsAllPrivsResponse instance
         */
        public static create(properties?: tabletmanagerdata.IExecuteFetchAsAllPrivsResponse): tabletmanagerdata.ExecuteFetchAsAllPrivsResponse;

        /**
         * Encodes the specified ExecuteFetchAsAllPrivsResponse message. Does not implicitly {@link tabletmanagerdata.ExecuteFetchAsAllPrivsResponse.verify|verify} messages.
         * @param message ExecuteFetchAsAllPrivsResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IExecuteFetchAsAllPrivsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ExecuteFetchAsAllPrivsResponse message, length delimited. Does not implicitly {@link tabletmanagerdata.ExecuteFetchAsAllPrivsResponse.verify|verify} messages.
         * @param message ExecuteFetchAsAllPrivsResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IExecuteFetchAsAllPrivsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ExecuteFetchAsAllPrivsResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ExecuteFetchAsAllPrivsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.ExecuteFetchAsAllPrivsResponse;

        /**
         * Decodes an ExecuteFetchAsAllPrivsResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ExecuteFetchAsAllPrivsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.ExecuteFetchAsAllPrivsResponse;

        /**
         * Verifies an ExecuteFetchAsAllPrivsResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ExecuteFetchAsAllPrivsResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ExecuteFetchAsAllPrivsResponse
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.ExecuteFetchAsAllPrivsResponse;

        /**
         * Creates a plain object from an ExecuteFetchAsAllPrivsResponse message. Also converts values to other types if specified.
         * @param message ExecuteFetchAsAllPrivsResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.ExecuteFetchAsAllPrivsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ExecuteFetchAsAllPrivsResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ExecuteFetchAsAppRequest. */
    interface IExecuteFetchAsAppRequest {

        /** ExecuteFetchAsAppRequest query */
        query?: (Uint8Array|null);

        /** ExecuteFetchAsAppRequest max_rows */
        max_rows?: (number|Long|null);
    }

    /** Represents an ExecuteFetchAsAppRequest. */
    class ExecuteFetchAsAppRequest implements IExecuteFetchAsAppRequest {

        /**
         * Constructs a new ExecuteFetchAsAppRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IExecuteFetchAsAppRequest);

        /** ExecuteFetchAsAppRequest query. */
        public query: Uint8Array;

        /** ExecuteFetchAsAppRequest max_rows. */
        public max_rows: (number|Long);

        /**
         * Creates a new ExecuteFetchAsAppRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ExecuteFetchAsAppRequest instance
         */
        public static create(properties?: tabletmanagerdata.IExecuteFetchAsAppRequest): tabletmanagerdata.ExecuteFetchAsAppRequest;

        /**
         * Encodes the specified ExecuteFetchAsAppRequest message. Does not implicitly {@link tabletmanagerdata.ExecuteFetchAsAppRequest.verify|verify} messages.
         * @param message ExecuteFetchAsAppRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IExecuteFetchAsAppRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ExecuteFetchAsAppRequest message, length delimited. Does not implicitly {@link tabletmanagerdata.ExecuteFetchAsAppRequest.verify|verify} messages.
         * @param message ExecuteFetchAsAppRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IExecuteFetchAsAppRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ExecuteFetchAsAppRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ExecuteFetchAsAppRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.ExecuteFetchAsAppRequest;

        /**
         * Decodes an ExecuteFetchAsAppRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ExecuteFetchAsAppRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.ExecuteFetchAsAppRequest;

        /**
         * Verifies an ExecuteFetchAsAppRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ExecuteFetchAsAppRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ExecuteFetchAsAppRequest
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.ExecuteFetchAsAppRequest;

        /**
         * Creates a plain object from an ExecuteFetchAsAppRequest message. Also converts values to other types if specified.
         * @param message ExecuteFetchAsAppRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.ExecuteFetchAsAppRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ExecuteFetchAsAppRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ExecuteFetchAsAppResponse. */
    interface IExecuteFetchAsAppResponse {

        /** ExecuteFetchAsAppResponse result */
        result?: (query.IQueryResult|null);
    }

    /** Represents an ExecuteFetchAsAppResponse. */
    class ExecuteFetchAsAppResponse implements IExecuteFetchAsAppResponse {

        /**
         * Constructs a new ExecuteFetchAsAppResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IExecuteFetchAsAppResponse);

        /** ExecuteFetchAsAppResponse result. */
        public result?: (query.IQueryResult|null);

        /**
         * Creates a new ExecuteFetchAsAppResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ExecuteFetchAsAppResponse instance
         */
        public static create(properties?: tabletmanagerdata.IExecuteFetchAsAppResponse): tabletmanagerdata.ExecuteFetchAsAppResponse;

        /**
         * Encodes the specified ExecuteFetchAsAppResponse message. Does not implicitly {@link tabletmanagerdata.ExecuteFetchAsAppResponse.verify|verify} messages.
         * @param message ExecuteFetchAsAppResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IExecuteFetchAsAppResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ExecuteFetchAsAppResponse message, length delimited. Does not implicitly {@link tabletmanagerdata.ExecuteFetchAsAppResponse.verify|verify} messages.
         * @param message ExecuteFetchAsAppResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IExecuteFetchAsAppResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ExecuteFetchAsAppResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ExecuteFetchAsAppResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.ExecuteFetchAsAppResponse;

        /**
         * Decodes an ExecuteFetchAsAppResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ExecuteFetchAsAppResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.ExecuteFetchAsAppResponse;

        /**
         * Verifies an ExecuteFetchAsAppResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ExecuteFetchAsAppResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ExecuteFetchAsAppResponse
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.ExecuteFetchAsAppResponse;

        /**
         * Creates a plain object from an ExecuteFetchAsAppResponse message. Also converts values to other types if specified.
         * @param message ExecuteFetchAsAppResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.ExecuteFetchAsAppResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ExecuteFetchAsAppResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ReplicationStatusRequest. */
    interface IReplicationStatusRequest {
    }

    /** Represents a ReplicationStatusRequest. */
    class ReplicationStatusRequest implements IReplicationStatusRequest {

        /**
         * Constructs a new ReplicationStatusRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IReplicationStatusRequest);

        /**
         * Creates a new ReplicationStatusRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ReplicationStatusRequest instance
         */
        public static create(properties?: tabletmanagerdata.IReplicationStatusRequest): tabletmanagerdata.ReplicationStatusRequest;

        /**
         * Encodes the specified ReplicationStatusRequest message. Does not implicitly {@link tabletmanagerdata.ReplicationStatusRequest.verify|verify} messages.
         * @param message ReplicationStatusRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IReplicationStatusRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ReplicationStatusRequest message, length delimited. Does not implicitly {@link tabletmanagerdata.ReplicationStatusRequest.verify|verify} messages.
         * @param message ReplicationStatusRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IReplicationStatusRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ReplicationStatusRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ReplicationStatusRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.ReplicationStatusRequest;

        /**
         * Decodes a ReplicationStatusRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ReplicationStatusRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.ReplicationStatusRequest;

        /**
         * Verifies a ReplicationStatusRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ReplicationStatusRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ReplicationStatusRequest
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.ReplicationStatusRequest;

        /**
         * Creates a plain object from a ReplicationStatusRequest message. Also converts values to other types if specified.
         * @param message ReplicationStatusRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.ReplicationStatusRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ReplicationStatusRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ReplicationStatusResponse. */
    interface IReplicationStatusResponse {

        /** ReplicationStatusResponse status */
        status?: (replicationdata.IStatus|null);
    }

    /** Represents a ReplicationStatusResponse. */
    class ReplicationStatusResponse implements IReplicationStatusResponse {

        /**
         * Constructs a new ReplicationStatusResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IReplicationStatusResponse);

        /** ReplicationStatusResponse status. */
        public status?: (replicationdata.IStatus|null);

        /**
         * Creates a new ReplicationStatusResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ReplicationStatusResponse instance
         */
        public static create(properties?: tabletmanagerdata.IReplicationStatusResponse): tabletmanagerdata.ReplicationStatusResponse;

        /**
         * Encodes the specified ReplicationStatusResponse message. Does not implicitly {@link tabletmanagerdata.ReplicationStatusResponse.verify|verify} messages.
         * @param message ReplicationStatusResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IReplicationStatusResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ReplicationStatusResponse message, length delimited. Does not implicitly {@link tabletmanagerdata.ReplicationStatusResponse.verify|verify} messages.
         * @param message ReplicationStatusResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IReplicationStatusResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ReplicationStatusResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ReplicationStatusResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.ReplicationStatusResponse;

        /**
         * Decodes a ReplicationStatusResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ReplicationStatusResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.ReplicationStatusResponse;

        /**
         * Verifies a ReplicationStatusResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ReplicationStatusResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ReplicationStatusResponse
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.ReplicationStatusResponse;

        /**
         * Creates a plain object from a ReplicationStatusResponse message. Also converts values to other types if specified.
         * @param message ReplicationStatusResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.ReplicationStatusResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ReplicationStatusResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MasterStatusRequest. */
    interface IMasterStatusRequest {
    }

    /** Represents a MasterStatusRequest. */
    class MasterStatusRequest implements IMasterStatusRequest {

        /**
         * Constructs a new MasterStatusRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IMasterStatusRequest);

        /**
         * Creates a new MasterStatusRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MasterStatusRequest instance
         */
        public static create(properties?: tabletmanagerdata.IMasterStatusRequest): tabletmanagerdata.MasterStatusRequest;

        /**
         * Encodes the specified MasterStatusRequest message. Does not implicitly {@link tabletmanagerdata.MasterStatusRequest.verify|verify} messages.
         * @param message MasterStatusRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IMasterStatusRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MasterStatusRequest message, length delimited. Does not implicitly {@link tabletmanagerdata.MasterStatusRequest.verify|verify} messages.
         * @param message MasterStatusRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IMasterStatusRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MasterStatusRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MasterStatusRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.MasterStatusRequest;

        /**
         * Decodes a MasterStatusRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MasterStatusRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.MasterStatusRequest;

        /**
         * Verifies a MasterStatusRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MasterStatusRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MasterStatusRequest
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.MasterStatusRequest;

        /**
         * Creates a plain object from a MasterStatusRequest message. Also converts values to other types if specified.
         * @param message MasterStatusRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.MasterStatusRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MasterStatusRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MasterStatusResponse. */
    interface IMasterStatusResponse {

        /** MasterStatusResponse status */
        status?: (replicationdata.IMasterStatus|null);
    }

    /** Represents a MasterStatusResponse. */
    class MasterStatusResponse implements IMasterStatusResponse {

        /**
         * Constructs a new MasterStatusResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IMasterStatusResponse);

        /** MasterStatusResponse status. */
        public status?: (replicationdata.IMasterStatus|null);

        /**
         * Creates a new MasterStatusResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MasterStatusResponse instance
         */
        public static create(properties?: tabletmanagerdata.IMasterStatusResponse): tabletmanagerdata.MasterStatusResponse;

        /**
         * Encodes the specified MasterStatusResponse message. Does not implicitly {@link tabletmanagerdata.MasterStatusResponse.verify|verify} messages.
         * @param message MasterStatusResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IMasterStatusResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MasterStatusResponse message, length delimited. Does not implicitly {@link tabletmanagerdata.MasterStatusResponse.verify|verify} messages.
         * @param message MasterStatusResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IMasterStatusResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MasterStatusResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MasterStatusResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.MasterStatusResponse;

        /**
         * Decodes a MasterStatusResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MasterStatusResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.MasterStatusResponse;

        /**
         * Verifies a MasterStatusResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MasterStatusResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MasterStatusResponse
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.MasterStatusResponse;

        /**
         * Creates a plain object from a MasterStatusResponse message. Also converts values to other types if specified.
         * @param message MasterStatusResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.MasterStatusResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MasterStatusResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MasterPositionRequest. */
    interface IMasterPositionRequest {
    }

    /** Represents a MasterPositionRequest. */
    class MasterPositionRequest implements IMasterPositionRequest {

        /**
         * Constructs a new MasterPositionRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IMasterPositionRequest);

        /**
         * Creates a new MasterPositionRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MasterPositionRequest instance
         */
        public static create(properties?: tabletmanagerdata.IMasterPositionRequest): tabletmanagerdata.MasterPositionRequest;

        /**
         * Encodes the specified MasterPositionRequest message. Does not implicitly {@link tabletmanagerdata.MasterPositionRequest.verify|verify} messages.
         * @param message MasterPositionRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IMasterPositionRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MasterPositionRequest message, length delimited. Does not implicitly {@link tabletmanagerdata.MasterPositionRequest.verify|verify} messages.
         * @param message MasterPositionRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IMasterPositionRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MasterPositionRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MasterPositionRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.MasterPositionRequest;

        /**
         * Decodes a MasterPositionRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MasterPositionRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.MasterPositionRequest;

        /**
         * Verifies a MasterPositionRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MasterPositionRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MasterPositionRequest
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.MasterPositionRequest;

        /**
         * Creates a plain object from a MasterPositionRequest message. Also converts values to other types if specified.
         * @param message MasterPositionRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.MasterPositionRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MasterPositionRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MasterPositionResponse. */
    interface IMasterPositionResponse {

        /** MasterPositionResponse position */
        position?: (string|null);
    }

    /** Represents a MasterPositionResponse. */
    class MasterPositionResponse implements IMasterPositionResponse {

        /**
         * Constructs a new MasterPositionResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IMasterPositionResponse);

        /** MasterPositionResponse position. */
        public position: string;

        /**
         * Creates a new MasterPositionResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MasterPositionResponse instance
         */
        public static create(properties?: tabletmanagerdata.IMasterPositionResponse): tabletmanagerdata.MasterPositionResponse;

        /**
         * Encodes the specified MasterPositionResponse message. Does not implicitly {@link tabletmanagerdata.MasterPositionResponse.verify|verify} messages.
         * @param message MasterPositionResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IMasterPositionResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MasterPositionResponse message, length delimited. Does not implicitly {@link tabletmanagerdata.MasterPositionResponse.verify|verify} messages.
         * @param message MasterPositionResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IMasterPositionResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MasterPositionResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MasterPositionResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.MasterPositionResponse;

        /**
         * Decodes a MasterPositionResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MasterPositionResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.MasterPositionResponse;

        /**
         * Verifies a MasterPositionResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MasterPositionResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MasterPositionResponse
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.MasterPositionResponse;

        /**
         * Creates a plain object from a MasterPositionResponse message. Also converts values to other types if specified.
         * @param message MasterPositionResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.MasterPositionResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MasterPositionResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WaitForPositionRequest. */
    interface IWaitForPositionRequest {

        /** WaitForPositionRequest position */
        position?: (string|null);
    }

    /** Represents a WaitForPositionRequest. */
    class WaitForPositionRequest implements IWaitForPositionRequest {

        /**
         * Constructs a new WaitForPositionRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IWaitForPositionRequest);

        /** WaitForPositionRequest position. */
        public position: string;

        /**
         * Creates a new WaitForPositionRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WaitForPositionRequest instance
         */
        public static create(properties?: tabletmanagerdata.IWaitForPositionRequest): tabletmanagerdata.WaitForPositionRequest;

        /**
         * Encodes the specified WaitForPositionRequest message. Does not implicitly {@link tabletmanagerdata.WaitForPositionRequest.verify|verify} messages.
         * @param message WaitForPositionRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IWaitForPositionRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified WaitForPositionRequest message, length delimited. Does not implicitly {@link tabletmanagerdata.WaitForPositionRequest.verify|verify} messages.
         * @param message WaitForPositionRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IWaitForPositionRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a WaitForPositionRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WaitForPositionRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.WaitForPositionRequest;

        /**
         * Decodes a WaitForPositionRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WaitForPositionRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.WaitForPositionRequest;

        /**
         * Verifies a WaitForPositionRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WaitForPositionRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WaitForPositionRequest
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.WaitForPositionRequest;

        /**
         * Creates a plain object from a WaitForPositionRequest message. Also converts values to other types if specified.
         * @param message WaitForPositionRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.WaitForPositionRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WaitForPositionRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WaitForPositionResponse. */
    interface IWaitForPositionResponse {
    }

    /** Represents a WaitForPositionResponse. */
    class WaitForPositionResponse implements IWaitForPositionResponse {

        /**
         * Constructs a new WaitForPositionResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IWaitForPositionResponse);

        /**
         * Creates a new WaitForPositionResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WaitForPositionResponse instance
         */
        public static create(properties?: tabletmanagerdata.IWaitForPositionResponse): tabletmanagerdata.WaitForPositionResponse;

        /**
         * Encodes the specified WaitForPositionResponse message. Does not implicitly {@link tabletmanagerdata.WaitForPositionResponse.verify|verify} messages.
         * @param message WaitForPositionResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IWaitForPositionResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified WaitForPositionResponse message, length delimited. Does not implicitly {@link tabletmanagerdata.WaitForPositionResponse.verify|verify} messages.
         * @param message WaitForPositionResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IWaitForPositionResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a WaitForPositionResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WaitForPositionResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.WaitForPositionResponse;

        /**
         * Decodes a WaitForPositionResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WaitForPositionResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.WaitForPositionResponse;

        /**
         * Verifies a WaitForPositionResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WaitForPositionResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WaitForPositionResponse
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.WaitForPositionResponse;

        /**
         * Creates a plain object from a WaitForPositionResponse message. Also converts values to other types if specified.
         * @param message WaitForPositionResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.WaitForPositionResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WaitForPositionResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a StopReplicationRequest. */
    interface IStopReplicationRequest {
    }

    /** Represents a StopReplicationRequest. */
    class StopReplicationRequest implements IStopReplicationRequest {

        /**
         * Constructs a new StopReplicationRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IStopReplicationRequest);

        /**
         * Creates a new StopReplicationRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns StopReplicationRequest instance
         */
        public static create(properties?: tabletmanagerdata.IStopReplicationRequest): tabletmanagerdata.StopReplicationRequest;

        /**
         * Encodes the specified StopReplicationRequest message. Does not implicitly {@link tabletmanagerdata.StopReplicationRequest.verify|verify} messages.
         * @param message StopReplicationRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IStopReplicationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified StopReplicationRequest message, length delimited. Does not implicitly {@link tabletmanagerdata.StopReplicationRequest.verify|verify} messages.
         * @param message StopReplicationRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IStopReplicationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a StopReplicationRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns StopReplicationRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.StopReplicationRequest;

        /**
         * Decodes a StopReplicationRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns StopReplicationRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.StopReplicationRequest;

        /**
         * Verifies a StopReplicationRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a StopReplicationRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns StopReplicationRequest
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.StopReplicationRequest;

        /**
         * Creates a plain object from a StopReplicationRequest message. Also converts values to other types if specified.
         * @param message StopReplicationRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.StopReplicationRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this StopReplicationRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a StopReplicationResponse. */
    interface IStopReplicationResponse {
    }

    /** Represents a StopReplicationResponse. */
    class StopReplicationResponse implements IStopReplicationResponse {

        /**
         * Constructs a new StopReplicationResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IStopReplicationResponse);

        /**
         * Creates a new StopReplicationResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns StopReplicationResponse instance
         */
        public static create(properties?: tabletmanagerdata.IStopReplicationResponse): tabletmanagerdata.StopReplicationResponse;

        /**
         * Encodes the specified StopReplicationResponse message. Does not implicitly {@link tabletmanagerdata.StopReplicationResponse.verify|verify} messages.
         * @param message StopReplicationResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IStopReplicationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified StopReplicationResponse message, length delimited. Does not implicitly {@link tabletmanagerdata.StopReplicationResponse.verify|verify} messages.
         * @param message StopReplicationResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IStopReplicationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a StopReplicationResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns StopReplicationResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.StopReplicationResponse;

        /**
         * Decodes a StopReplicationResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns StopReplicationResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.StopReplicationResponse;

        /**
         * Verifies a StopReplicationResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a StopReplicationResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns StopReplicationResponse
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.StopReplicationResponse;

        /**
         * Creates a plain object from a StopReplicationResponse message. Also converts values to other types if specified.
         * @param message StopReplicationResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.StopReplicationResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this StopReplicationResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a StopReplicationMinimumRequest. */
    interface IStopReplicationMinimumRequest {

        /** StopReplicationMinimumRequest position */
        position?: (string|null);

        /** StopReplicationMinimumRequest wait_timeout */
        wait_timeout?: (number|Long|null);
    }

    /** Represents a StopReplicationMinimumRequest. */
    class StopReplicationMinimumRequest implements IStopReplicationMinimumRequest {

        /**
         * Constructs a new StopReplicationMinimumRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IStopReplicationMinimumRequest);

        /** StopReplicationMinimumRequest position. */
        public position: string;

        /** StopReplicationMinimumRequest wait_timeout. */
        public wait_timeout: (number|Long);

        /**
         * Creates a new StopReplicationMinimumRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns StopReplicationMinimumRequest instance
         */
        public static create(properties?: tabletmanagerdata.IStopReplicationMinimumRequest): tabletmanagerdata.StopReplicationMinimumRequest;

        /**
         * Encodes the specified StopReplicationMinimumRequest message. Does not implicitly {@link tabletmanagerdata.StopReplicationMinimumRequest.verify|verify} messages.
         * @param message StopReplicationMinimumRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IStopReplicationMinimumRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified StopReplicationMinimumRequest message, length delimited. Does not implicitly {@link tabletmanagerdata.StopReplicationMinimumRequest.verify|verify} messages.
         * @param message StopReplicationMinimumRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IStopReplicationMinimumRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a StopReplicationMinimumRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns StopReplicationMinimumRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.StopReplicationMinimumRequest;

        /**
         * Decodes a StopReplicationMinimumRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns StopReplicationMinimumRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.StopReplicationMinimumRequest;

        /**
         * Verifies a StopReplicationMinimumRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a StopReplicationMinimumRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns StopReplicationMinimumRequest
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.StopReplicationMinimumRequest;

        /**
         * Creates a plain object from a StopReplicationMinimumRequest message. Also converts values to other types if specified.
         * @param message StopReplicationMinimumRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.StopReplicationMinimumRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this StopReplicationMinimumRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a StopReplicationMinimumResponse. */
    interface IStopReplicationMinimumResponse {

        /** StopReplicationMinimumResponse position */
        position?: (string|null);
    }

    /** Represents a StopReplicationMinimumResponse. */
    class StopReplicationMinimumResponse implements IStopReplicationMinimumResponse {

        /**
         * Constructs a new StopReplicationMinimumResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IStopReplicationMinimumResponse);

        /** StopReplicationMinimumResponse position. */
        public position: string;

        /**
         * Creates a new StopReplicationMinimumResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns StopReplicationMinimumResponse instance
         */
        public static create(properties?: tabletmanagerdata.IStopReplicationMinimumResponse): tabletmanagerdata.StopReplicationMinimumResponse;

        /**
         * Encodes the specified StopReplicationMinimumResponse message. Does not implicitly {@link tabletmanagerdata.StopReplicationMinimumResponse.verify|verify} messages.
         * @param message StopReplicationMinimumResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IStopReplicationMinimumResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified StopReplicationMinimumResponse message, length delimited. Does not implicitly {@link tabletmanagerdata.StopReplicationMinimumResponse.verify|verify} messages.
         * @param message StopReplicationMinimumResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IStopReplicationMinimumResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a StopReplicationMinimumResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns StopReplicationMinimumResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.StopReplicationMinimumResponse;

        /**
         * Decodes a StopReplicationMinimumResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns StopReplicationMinimumResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.StopReplicationMinimumResponse;

        /**
         * Verifies a StopReplicationMinimumResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a StopReplicationMinimumResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns StopReplicationMinimumResponse
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.StopReplicationMinimumResponse;

        /**
         * Creates a plain object from a StopReplicationMinimumResponse message. Also converts values to other types if specified.
         * @param message StopReplicationMinimumResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.StopReplicationMinimumResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this StopReplicationMinimumResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a StartReplicationRequest. */
    interface IStartReplicationRequest {
    }

    /** Represents a StartReplicationRequest. */
    class StartReplicationRequest implements IStartReplicationRequest {

        /**
         * Constructs a new StartReplicationRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IStartReplicationRequest);

        /**
         * Creates a new StartReplicationRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns StartReplicationRequest instance
         */
        public static create(properties?: tabletmanagerdata.IStartReplicationRequest): tabletmanagerdata.StartReplicationRequest;

        /**
         * Encodes the specified StartReplicationRequest message. Does not implicitly {@link tabletmanagerdata.StartReplicationRequest.verify|verify} messages.
         * @param message StartReplicationRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IStartReplicationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified StartReplicationRequest message, length delimited. Does not implicitly {@link tabletmanagerdata.StartReplicationRequest.verify|verify} messages.
         * @param message StartReplicationRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IStartReplicationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a StartReplicationRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns StartReplicationRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.StartReplicationRequest;

        /**
         * Decodes a StartReplicationRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns StartReplicationRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.StartReplicationRequest;

        /**
         * Verifies a StartReplicationRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a StartReplicationRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns StartReplicationRequest
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.StartReplicationRequest;

        /**
         * Creates a plain object from a StartReplicationRequest message. Also converts values to other types if specified.
         * @param message StartReplicationRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.StartReplicationRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this StartReplicationRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a StartReplicationResponse. */
    interface IStartReplicationResponse {
    }

    /** Represents a StartReplicationResponse. */
    class StartReplicationResponse implements IStartReplicationResponse {

        /**
         * Constructs a new StartReplicationResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IStartReplicationResponse);

        /**
         * Creates a new StartReplicationResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns StartReplicationResponse instance
         */
        public static create(properties?: tabletmanagerdata.IStartReplicationResponse): tabletmanagerdata.StartReplicationResponse;

        /**
         * Encodes the specified StartReplicationResponse message. Does not implicitly {@link tabletmanagerdata.StartReplicationResponse.verify|verify} messages.
         * @param message StartReplicationResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IStartReplicationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified StartReplicationResponse message, length delimited. Does not implicitly {@link tabletmanagerdata.StartReplicationResponse.verify|verify} messages.
         * @param message StartReplicationResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IStartReplicationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a StartReplicationResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns StartReplicationResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.StartReplicationResponse;

        /**
         * Decodes a StartReplicationResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns StartReplicationResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.StartReplicationResponse;

        /**
         * Verifies a StartReplicationResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a StartReplicationResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns StartReplicationResponse
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.StartReplicationResponse;

        /**
         * Creates a plain object from a StartReplicationResponse message. Also converts values to other types if specified.
         * @param message StartReplicationResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.StartReplicationResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this StartReplicationResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a StartReplicationUntilAfterRequest. */
    interface IStartReplicationUntilAfterRequest {

        /** StartReplicationUntilAfterRequest position */
        position?: (string|null);

        /** StartReplicationUntilAfterRequest wait_timeout */
        wait_timeout?: (number|Long|null);
    }

    /** Represents a StartReplicationUntilAfterRequest. */
    class StartReplicationUntilAfterRequest implements IStartReplicationUntilAfterRequest {

        /**
         * Constructs a new StartReplicationUntilAfterRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IStartReplicationUntilAfterRequest);

        /** StartReplicationUntilAfterRequest position. */
        public position: string;

        /** StartReplicationUntilAfterRequest wait_timeout. */
        public wait_timeout: (number|Long);

        /**
         * Creates a new StartReplicationUntilAfterRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns StartReplicationUntilAfterRequest instance
         */
        public static create(properties?: tabletmanagerdata.IStartReplicationUntilAfterRequest): tabletmanagerdata.StartReplicationUntilAfterRequest;

        /**
         * Encodes the specified StartReplicationUntilAfterRequest message. Does not implicitly {@link tabletmanagerdata.StartReplicationUntilAfterRequest.verify|verify} messages.
         * @param message StartReplicationUntilAfterRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IStartReplicationUntilAfterRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified StartReplicationUntilAfterRequest message, length delimited. Does not implicitly {@link tabletmanagerdata.StartReplicationUntilAfterRequest.verify|verify} messages.
         * @param message StartReplicationUntilAfterRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IStartReplicationUntilAfterRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a StartReplicationUntilAfterRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns StartReplicationUntilAfterRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.StartReplicationUntilAfterRequest;

        /**
         * Decodes a StartReplicationUntilAfterRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns StartReplicationUntilAfterRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.StartReplicationUntilAfterRequest;

        /**
         * Verifies a StartReplicationUntilAfterRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a StartReplicationUntilAfterRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns StartReplicationUntilAfterRequest
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.StartReplicationUntilAfterRequest;

        /**
         * Creates a plain object from a StartReplicationUntilAfterRequest message. Also converts values to other types if specified.
         * @param message StartReplicationUntilAfterRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.StartReplicationUntilAfterRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this StartReplicationUntilAfterRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a StartReplicationUntilAfterResponse. */
    interface IStartReplicationUntilAfterResponse {
    }

    /** Represents a StartReplicationUntilAfterResponse. */
    class StartReplicationUntilAfterResponse implements IStartReplicationUntilAfterResponse {

        /**
         * Constructs a new StartReplicationUntilAfterResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IStartReplicationUntilAfterResponse);

        /**
         * Creates a new StartReplicationUntilAfterResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns StartReplicationUntilAfterResponse instance
         */
        public static create(properties?: tabletmanagerdata.IStartReplicationUntilAfterResponse): tabletmanagerdata.StartReplicationUntilAfterResponse;

        /**
         * Encodes the specified StartReplicationUntilAfterResponse message. Does not implicitly {@link tabletmanagerdata.StartReplicationUntilAfterResponse.verify|verify} messages.
         * @param message StartReplicationUntilAfterResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IStartReplicationUntilAfterResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified StartReplicationUntilAfterResponse message, length delimited. Does not implicitly {@link tabletmanagerdata.StartReplicationUntilAfterResponse.verify|verify} messages.
         * @param message StartReplicationUntilAfterResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IStartReplicationUntilAfterResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a StartReplicationUntilAfterResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns StartReplicationUntilAfterResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.StartReplicationUntilAfterResponse;

        /**
         * Decodes a StartReplicationUntilAfterResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns StartReplicationUntilAfterResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.StartReplicationUntilAfterResponse;

        /**
         * Verifies a StartReplicationUntilAfterResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a StartReplicationUntilAfterResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns StartReplicationUntilAfterResponse
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.StartReplicationUntilAfterResponse;

        /**
         * Creates a plain object from a StartReplicationUntilAfterResponse message. Also converts values to other types if specified.
         * @param message StartReplicationUntilAfterResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.StartReplicationUntilAfterResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this StartReplicationUntilAfterResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetReplicasRequest. */
    interface IGetReplicasRequest {
    }

    /** Represents a GetReplicasRequest. */
    class GetReplicasRequest implements IGetReplicasRequest {

        /**
         * Constructs a new GetReplicasRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IGetReplicasRequest);

        /**
         * Creates a new GetReplicasRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetReplicasRequest instance
         */
        public static create(properties?: tabletmanagerdata.IGetReplicasRequest): tabletmanagerdata.GetReplicasRequest;

        /**
         * Encodes the specified GetReplicasRequest message. Does not implicitly {@link tabletmanagerdata.GetReplicasRequest.verify|verify} messages.
         * @param message GetReplicasRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IGetReplicasRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetReplicasRequest message, length delimited. Does not implicitly {@link tabletmanagerdata.GetReplicasRequest.verify|verify} messages.
         * @param message GetReplicasRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IGetReplicasRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetReplicasRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetReplicasRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.GetReplicasRequest;

        /**
         * Decodes a GetReplicasRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetReplicasRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.GetReplicasRequest;

        /**
         * Verifies a GetReplicasRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetReplicasRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetReplicasRequest
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.GetReplicasRequest;

        /**
         * Creates a plain object from a GetReplicasRequest message. Also converts values to other types if specified.
         * @param message GetReplicasRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.GetReplicasRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetReplicasRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetReplicasResponse. */
    interface IGetReplicasResponse {

        /** GetReplicasResponse addrs */
        addrs?: (string[]|null);
    }

    /** Represents a GetReplicasResponse. */
    class GetReplicasResponse implements IGetReplicasResponse {

        /**
         * Constructs a new GetReplicasResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IGetReplicasResponse);

        /** GetReplicasResponse addrs. */
        public addrs: string[];

        /**
         * Creates a new GetReplicasResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetReplicasResponse instance
         */
        public static create(properties?: tabletmanagerdata.IGetReplicasResponse): tabletmanagerdata.GetReplicasResponse;

        /**
         * Encodes the specified GetReplicasResponse message. Does not implicitly {@link tabletmanagerdata.GetReplicasResponse.verify|verify} messages.
         * @param message GetReplicasResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IGetReplicasResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetReplicasResponse message, length delimited. Does not implicitly {@link tabletmanagerdata.GetReplicasResponse.verify|verify} messages.
         * @param message GetReplicasResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IGetReplicasResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetReplicasResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetReplicasResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.GetReplicasResponse;

        /**
         * Decodes a GetReplicasResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetReplicasResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.GetReplicasResponse;

        /**
         * Verifies a GetReplicasResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetReplicasResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetReplicasResponse
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.GetReplicasResponse;

        /**
         * Creates a plain object from a GetReplicasResponse message. Also converts values to other types if specified.
         * @param message GetReplicasResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.GetReplicasResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetReplicasResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ResetReplicationRequest. */
    interface IResetReplicationRequest {
    }

    /** Represents a ResetReplicationRequest. */
    class ResetReplicationRequest implements IResetReplicationRequest {

        /**
         * Constructs a new ResetReplicationRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IResetReplicationRequest);

        /**
         * Creates a new ResetReplicationRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ResetReplicationRequest instance
         */
        public static create(properties?: tabletmanagerdata.IResetReplicationRequest): tabletmanagerdata.ResetReplicationRequest;

        /**
         * Encodes the specified ResetReplicationRequest message. Does not implicitly {@link tabletmanagerdata.ResetReplicationRequest.verify|verify} messages.
         * @param message ResetReplicationRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IResetReplicationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ResetReplicationRequest message, length delimited. Does not implicitly {@link tabletmanagerdata.ResetReplicationRequest.verify|verify} messages.
         * @param message ResetReplicationRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IResetReplicationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ResetReplicationRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ResetReplicationRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.ResetReplicationRequest;

        /**
         * Decodes a ResetReplicationRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ResetReplicationRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.ResetReplicationRequest;

        /**
         * Verifies a ResetReplicationRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ResetReplicationRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ResetReplicationRequest
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.ResetReplicationRequest;

        /**
         * Creates a plain object from a ResetReplicationRequest message. Also converts values to other types if specified.
         * @param message ResetReplicationRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.ResetReplicationRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ResetReplicationRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ResetReplicationResponse. */
    interface IResetReplicationResponse {
    }

    /** Represents a ResetReplicationResponse. */
    class ResetReplicationResponse implements IResetReplicationResponse {

        /**
         * Constructs a new ResetReplicationResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IResetReplicationResponse);

        /**
         * Creates a new ResetReplicationResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ResetReplicationResponse instance
         */
        public static create(properties?: tabletmanagerdata.IResetReplicationResponse): tabletmanagerdata.ResetReplicationResponse;

        /**
         * Encodes the specified ResetReplicationResponse message. Does not implicitly {@link tabletmanagerdata.ResetReplicationResponse.verify|verify} messages.
         * @param message ResetReplicationResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IResetReplicationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ResetReplicationResponse message, length delimited. Does not implicitly {@link tabletmanagerdata.ResetReplicationResponse.verify|verify} messages.
         * @param message ResetReplicationResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IResetReplicationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ResetReplicationResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ResetReplicationResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.ResetReplicationResponse;

        /**
         * Decodes a ResetReplicationResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ResetReplicationResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.ResetReplicationResponse;

        /**
         * Verifies a ResetReplicationResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ResetReplicationResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ResetReplicationResponse
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.ResetReplicationResponse;

        /**
         * Creates a plain object from a ResetReplicationResponse message. Also converts values to other types if specified.
         * @param message ResetReplicationResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.ResetReplicationResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ResetReplicationResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a VReplicationExecRequest. */
    interface IVReplicationExecRequest {

        /** VReplicationExecRequest query */
        query?: (string|null);
    }

    /** Represents a VReplicationExecRequest. */
    class VReplicationExecRequest implements IVReplicationExecRequest {

        /**
         * Constructs a new VReplicationExecRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IVReplicationExecRequest);

        /** VReplicationExecRequest query. */
        public query: string;

        /**
         * Creates a new VReplicationExecRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns VReplicationExecRequest instance
         */
        public static create(properties?: tabletmanagerdata.IVReplicationExecRequest): tabletmanagerdata.VReplicationExecRequest;

        /**
         * Encodes the specified VReplicationExecRequest message. Does not implicitly {@link tabletmanagerdata.VReplicationExecRequest.verify|verify} messages.
         * @param message VReplicationExecRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IVReplicationExecRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified VReplicationExecRequest message, length delimited. Does not implicitly {@link tabletmanagerdata.VReplicationExecRequest.verify|verify} messages.
         * @param message VReplicationExecRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IVReplicationExecRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a VReplicationExecRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns VReplicationExecRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.VReplicationExecRequest;

        /**
         * Decodes a VReplicationExecRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns VReplicationExecRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.VReplicationExecRequest;

        /**
         * Verifies a VReplicationExecRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a VReplicationExecRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns VReplicationExecRequest
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.VReplicationExecRequest;

        /**
         * Creates a plain object from a VReplicationExecRequest message. Also converts values to other types if specified.
         * @param message VReplicationExecRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.VReplicationExecRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this VReplicationExecRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a VReplicationExecResponse. */
    interface IVReplicationExecResponse {

        /** VReplicationExecResponse result */
        result?: (query.IQueryResult|null);
    }

    /** Represents a VReplicationExecResponse. */
    class VReplicationExecResponse implements IVReplicationExecResponse {

        /**
         * Constructs a new VReplicationExecResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IVReplicationExecResponse);

        /** VReplicationExecResponse result. */
        public result?: (query.IQueryResult|null);

        /**
         * Creates a new VReplicationExecResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns VReplicationExecResponse instance
         */
        public static create(properties?: tabletmanagerdata.IVReplicationExecResponse): tabletmanagerdata.VReplicationExecResponse;

        /**
         * Encodes the specified VReplicationExecResponse message. Does not implicitly {@link tabletmanagerdata.VReplicationExecResponse.verify|verify} messages.
         * @param message VReplicationExecResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IVReplicationExecResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified VReplicationExecResponse message, length delimited. Does not implicitly {@link tabletmanagerdata.VReplicationExecResponse.verify|verify} messages.
         * @param message VReplicationExecResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IVReplicationExecResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a VReplicationExecResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns VReplicationExecResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.VReplicationExecResponse;

        /**
         * Decodes a VReplicationExecResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns VReplicationExecResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.VReplicationExecResponse;

        /**
         * Verifies a VReplicationExecResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a VReplicationExecResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns VReplicationExecResponse
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.VReplicationExecResponse;

        /**
         * Creates a plain object from a VReplicationExecResponse message. Also converts values to other types if specified.
         * @param message VReplicationExecResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.VReplicationExecResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this VReplicationExecResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a VReplicationWaitForPosRequest. */
    interface IVReplicationWaitForPosRequest {

        /** VReplicationWaitForPosRequest id */
        id?: (number|Long|null);

        /** VReplicationWaitForPosRequest position */
        position?: (string|null);
    }

    /** Represents a VReplicationWaitForPosRequest. */
    class VReplicationWaitForPosRequest implements IVReplicationWaitForPosRequest {

        /**
         * Constructs a new VReplicationWaitForPosRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IVReplicationWaitForPosRequest);

        /** VReplicationWaitForPosRequest id. */
        public id: (number|Long);

        /** VReplicationWaitForPosRequest position. */
        public position: string;

        /**
         * Creates a new VReplicationWaitForPosRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns VReplicationWaitForPosRequest instance
         */
        public static create(properties?: tabletmanagerdata.IVReplicationWaitForPosRequest): tabletmanagerdata.VReplicationWaitForPosRequest;

        /**
         * Encodes the specified VReplicationWaitForPosRequest message. Does not implicitly {@link tabletmanagerdata.VReplicationWaitForPosRequest.verify|verify} messages.
         * @param message VReplicationWaitForPosRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IVReplicationWaitForPosRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified VReplicationWaitForPosRequest message, length delimited. Does not implicitly {@link tabletmanagerdata.VReplicationWaitForPosRequest.verify|verify} messages.
         * @param message VReplicationWaitForPosRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IVReplicationWaitForPosRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a VReplicationWaitForPosRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns VReplicationWaitForPosRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.VReplicationWaitForPosRequest;

        /**
         * Decodes a VReplicationWaitForPosRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns VReplicationWaitForPosRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.VReplicationWaitForPosRequest;

        /**
         * Verifies a VReplicationWaitForPosRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a VReplicationWaitForPosRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns VReplicationWaitForPosRequest
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.VReplicationWaitForPosRequest;

        /**
         * Creates a plain object from a VReplicationWaitForPosRequest message. Also converts values to other types if specified.
         * @param message VReplicationWaitForPosRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.VReplicationWaitForPosRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this VReplicationWaitForPosRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a VReplicationWaitForPosResponse. */
    interface IVReplicationWaitForPosResponse {
    }

    /** Represents a VReplicationWaitForPosResponse. */
    class VReplicationWaitForPosResponse implements IVReplicationWaitForPosResponse {

        /**
         * Constructs a new VReplicationWaitForPosResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IVReplicationWaitForPosResponse);

        /**
         * Creates a new VReplicationWaitForPosResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns VReplicationWaitForPosResponse instance
         */
        public static create(properties?: tabletmanagerdata.IVReplicationWaitForPosResponse): tabletmanagerdata.VReplicationWaitForPosResponse;

        /**
         * Encodes the specified VReplicationWaitForPosResponse message. Does not implicitly {@link tabletmanagerdata.VReplicationWaitForPosResponse.verify|verify} messages.
         * @param message VReplicationWaitForPosResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IVReplicationWaitForPosResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified VReplicationWaitForPosResponse message, length delimited. Does not implicitly {@link tabletmanagerdata.VReplicationWaitForPosResponse.verify|verify} messages.
         * @param message VReplicationWaitForPosResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IVReplicationWaitForPosResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a VReplicationWaitForPosResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns VReplicationWaitForPosResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.VReplicationWaitForPosResponse;

        /**
         * Decodes a VReplicationWaitForPosResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns VReplicationWaitForPosResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.VReplicationWaitForPosResponse;

        /**
         * Verifies a VReplicationWaitForPosResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a VReplicationWaitForPosResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns VReplicationWaitForPosResponse
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.VReplicationWaitForPosResponse;

        /**
         * Creates a plain object from a VReplicationWaitForPosResponse message. Also converts values to other types if specified.
         * @param message VReplicationWaitForPosResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.VReplicationWaitForPosResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this VReplicationWaitForPosResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an InitMasterRequest. */
    interface IInitMasterRequest {
    }

    /** Represents an InitMasterRequest. */
    class InitMasterRequest implements IInitMasterRequest {

        /**
         * Constructs a new InitMasterRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IInitMasterRequest);

        /**
         * Creates a new InitMasterRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns InitMasterRequest instance
         */
        public static create(properties?: tabletmanagerdata.IInitMasterRequest): tabletmanagerdata.InitMasterRequest;

        /**
         * Encodes the specified InitMasterRequest message. Does not implicitly {@link tabletmanagerdata.InitMasterRequest.verify|verify} messages.
         * @param message InitMasterRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IInitMasterRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified InitMasterRequest message, length delimited. Does not implicitly {@link tabletmanagerdata.InitMasterRequest.verify|verify} messages.
         * @param message InitMasterRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IInitMasterRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an InitMasterRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns InitMasterRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.InitMasterRequest;

        /**
         * Decodes an InitMasterRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns InitMasterRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.InitMasterRequest;

        /**
         * Verifies an InitMasterRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an InitMasterRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns InitMasterRequest
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.InitMasterRequest;

        /**
         * Creates a plain object from an InitMasterRequest message. Also converts values to other types if specified.
         * @param message InitMasterRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.InitMasterRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this InitMasterRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an InitMasterResponse. */
    interface IInitMasterResponse {

        /** InitMasterResponse position */
        position?: (string|null);
    }

    /** Represents an InitMasterResponse. */
    class InitMasterResponse implements IInitMasterResponse {

        /**
         * Constructs a new InitMasterResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IInitMasterResponse);

        /** InitMasterResponse position. */
        public position: string;

        /**
         * Creates a new InitMasterResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns InitMasterResponse instance
         */
        public static create(properties?: tabletmanagerdata.IInitMasterResponse): tabletmanagerdata.InitMasterResponse;

        /**
         * Encodes the specified InitMasterResponse message. Does not implicitly {@link tabletmanagerdata.InitMasterResponse.verify|verify} messages.
         * @param message InitMasterResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IInitMasterResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified InitMasterResponse message, length delimited. Does not implicitly {@link tabletmanagerdata.InitMasterResponse.verify|verify} messages.
         * @param message InitMasterResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IInitMasterResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an InitMasterResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns InitMasterResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.InitMasterResponse;

        /**
         * Decodes an InitMasterResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns InitMasterResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.InitMasterResponse;

        /**
         * Verifies an InitMasterResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an InitMasterResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns InitMasterResponse
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.InitMasterResponse;

        /**
         * Creates a plain object from an InitMasterResponse message. Also converts values to other types if specified.
         * @param message InitMasterResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.InitMasterResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this InitMasterResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PopulateReparentJournalRequest. */
    interface IPopulateReparentJournalRequest {

        /** PopulateReparentJournalRequest time_created_ns */
        time_created_ns?: (number|Long|null);

        /** PopulateReparentJournalRequest action_name */
        action_name?: (string|null);

        /** PopulateReparentJournalRequest master_alias */
        master_alias?: (topodata.ITabletAlias|null);

        /** PopulateReparentJournalRequest replication_position */
        replication_position?: (string|null);
    }

    /** Represents a PopulateReparentJournalRequest. */
    class PopulateReparentJournalRequest implements IPopulateReparentJournalRequest {

        /**
         * Constructs a new PopulateReparentJournalRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IPopulateReparentJournalRequest);

        /** PopulateReparentJournalRequest time_created_ns. */
        public time_created_ns: (number|Long);

        /** PopulateReparentJournalRequest action_name. */
        public action_name: string;

        /** PopulateReparentJournalRequest master_alias. */
        public master_alias?: (topodata.ITabletAlias|null);

        /** PopulateReparentJournalRequest replication_position. */
        public replication_position: string;

        /**
         * Creates a new PopulateReparentJournalRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PopulateReparentJournalRequest instance
         */
        public static create(properties?: tabletmanagerdata.IPopulateReparentJournalRequest): tabletmanagerdata.PopulateReparentJournalRequest;

        /**
         * Encodes the specified PopulateReparentJournalRequest message. Does not implicitly {@link tabletmanagerdata.PopulateReparentJournalRequest.verify|verify} messages.
         * @param message PopulateReparentJournalRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IPopulateReparentJournalRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PopulateReparentJournalRequest message, length delimited. Does not implicitly {@link tabletmanagerdata.PopulateReparentJournalRequest.verify|verify} messages.
         * @param message PopulateReparentJournalRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IPopulateReparentJournalRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PopulateReparentJournalRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PopulateReparentJournalRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.PopulateReparentJournalRequest;

        /**
         * Decodes a PopulateReparentJournalRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PopulateReparentJournalRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.PopulateReparentJournalRequest;

        /**
         * Verifies a PopulateReparentJournalRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PopulateReparentJournalRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PopulateReparentJournalRequest
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.PopulateReparentJournalRequest;

        /**
         * Creates a plain object from a PopulateReparentJournalRequest message. Also converts values to other types if specified.
         * @param message PopulateReparentJournalRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.PopulateReparentJournalRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PopulateReparentJournalRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PopulateReparentJournalResponse. */
    interface IPopulateReparentJournalResponse {
    }

    /** Represents a PopulateReparentJournalResponse. */
    class PopulateReparentJournalResponse implements IPopulateReparentJournalResponse {

        /**
         * Constructs a new PopulateReparentJournalResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IPopulateReparentJournalResponse);

        /**
         * Creates a new PopulateReparentJournalResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PopulateReparentJournalResponse instance
         */
        public static create(properties?: tabletmanagerdata.IPopulateReparentJournalResponse): tabletmanagerdata.PopulateReparentJournalResponse;

        /**
         * Encodes the specified PopulateReparentJournalResponse message. Does not implicitly {@link tabletmanagerdata.PopulateReparentJournalResponse.verify|verify} messages.
         * @param message PopulateReparentJournalResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IPopulateReparentJournalResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PopulateReparentJournalResponse message, length delimited. Does not implicitly {@link tabletmanagerdata.PopulateReparentJournalResponse.verify|verify} messages.
         * @param message PopulateReparentJournalResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IPopulateReparentJournalResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PopulateReparentJournalResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PopulateReparentJournalResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.PopulateReparentJournalResponse;

        /**
         * Decodes a PopulateReparentJournalResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PopulateReparentJournalResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.PopulateReparentJournalResponse;

        /**
         * Verifies a PopulateReparentJournalResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PopulateReparentJournalResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PopulateReparentJournalResponse
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.PopulateReparentJournalResponse;

        /**
         * Creates a plain object from a PopulateReparentJournalResponse message. Also converts values to other types if specified.
         * @param message PopulateReparentJournalResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.PopulateReparentJournalResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PopulateReparentJournalResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an InitReplicaRequest. */
    interface IInitReplicaRequest {

        /** InitReplicaRequest parent */
        parent?: (topodata.ITabletAlias|null);

        /** InitReplicaRequest replication_position */
        replication_position?: (string|null);

        /** InitReplicaRequest time_created_ns */
        time_created_ns?: (number|Long|null);
    }

    /** Represents an InitReplicaRequest. */
    class InitReplicaRequest implements IInitReplicaRequest {

        /**
         * Constructs a new InitReplicaRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IInitReplicaRequest);

        /** InitReplicaRequest parent. */
        public parent?: (topodata.ITabletAlias|null);

        /** InitReplicaRequest replication_position. */
        public replication_position: string;

        /** InitReplicaRequest time_created_ns. */
        public time_created_ns: (number|Long);

        /**
         * Creates a new InitReplicaRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns InitReplicaRequest instance
         */
        public static create(properties?: tabletmanagerdata.IInitReplicaRequest): tabletmanagerdata.InitReplicaRequest;

        /**
         * Encodes the specified InitReplicaRequest message. Does not implicitly {@link tabletmanagerdata.InitReplicaRequest.verify|verify} messages.
         * @param message InitReplicaRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IInitReplicaRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified InitReplicaRequest message, length delimited. Does not implicitly {@link tabletmanagerdata.InitReplicaRequest.verify|verify} messages.
         * @param message InitReplicaRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IInitReplicaRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an InitReplicaRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns InitReplicaRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.InitReplicaRequest;

        /**
         * Decodes an InitReplicaRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns InitReplicaRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.InitReplicaRequest;

        /**
         * Verifies an InitReplicaRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an InitReplicaRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns InitReplicaRequest
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.InitReplicaRequest;

        /**
         * Creates a plain object from an InitReplicaRequest message. Also converts values to other types if specified.
         * @param message InitReplicaRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.InitReplicaRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this InitReplicaRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an InitReplicaResponse. */
    interface IInitReplicaResponse {
    }

    /** Represents an InitReplicaResponse. */
    class InitReplicaResponse implements IInitReplicaResponse {

        /**
         * Constructs a new InitReplicaResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IInitReplicaResponse);

        /**
         * Creates a new InitReplicaResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns InitReplicaResponse instance
         */
        public static create(properties?: tabletmanagerdata.IInitReplicaResponse): tabletmanagerdata.InitReplicaResponse;

        /**
         * Encodes the specified InitReplicaResponse message. Does not implicitly {@link tabletmanagerdata.InitReplicaResponse.verify|verify} messages.
         * @param message InitReplicaResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IInitReplicaResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified InitReplicaResponse message, length delimited. Does not implicitly {@link tabletmanagerdata.InitReplicaResponse.verify|verify} messages.
         * @param message InitReplicaResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IInitReplicaResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an InitReplicaResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns InitReplicaResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.InitReplicaResponse;

        /**
         * Decodes an InitReplicaResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns InitReplicaResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.InitReplicaResponse;

        /**
         * Verifies an InitReplicaResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an InitReplicaResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns InitReplicaResponse
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.InitReplicaResponse;

        /**
         * Creates a plain object from an InitReplicaResponse message. Also converts values to other types if specified.
         * @param message InitReplicaResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.InitReplicaResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this InitReplicaResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DemoteMasterRequest. */
    interface IDemoteMasterRequest {
    }

    /** Represents a DemoteMasterRequest. */
    class DemoteMasterRequest implements IDemoteMasterRequest {

        /**
         * Constructs a new DemoteMasterRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IDemoteMasterRequest);

        /**
         * Creates a new DemoteMasterRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DemoteMasterRequest instance
         */
        public static create(properties?: tabletmanagerdata.IDemoteMasterRequest): tabletmanagerdata.DemoteMasterRequest;

        /**
         * Encodes the specified DemoteMasterRequest message. Does not implicitly {@link tabletmanagerdata.DemoteMasterRequest.verify|verify} messages.
         * @param message DemoteMasterRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IDemoteMasterRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DemoteMasterRequest message, length delimited. Does not implicitly {@link tabletmanagerdata.DemoteMasterRequest.verify|verify} messages.
         * @param message DemoteMasterRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IDemoteMasterRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DemoteMasterRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DemoteMasterRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.DemoteMasterRequest;

        /**
         * Decodes a DemoteMasterRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DemoteMasterRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.DemoteMasterRequest;

        /**
         * Verifies a DemoteMasterRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DemoteMasterRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DemoteMasterRequest
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.DemoteMasterRequest;

        /**
         * Creates a plain object from a DemoteMasterRequest message. Also converts values to other types if specified.
         * @param message DemoteMasterRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.DemoteMasterRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DemoteMasterRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DemoteMasterResponse. */
    interface IDemoteMasterResponse {

        /** DemoteMasterResponse deprecated_position */
        deprecated_position?: (string|null);

        /** DemoteMasterResponse master_status */
        master_status?: (replicationdata.IMasterStatus|null);
    }

    /** Represents a DemoteMasterResponse. */
    class DemoteMasterResponse implements IDemoteMasterResponse {

        /**
         * Constructs a new DemoteMasterResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IDemoteMasterResponse);

        /** DemoteMasterResponse deprecated_position. */
        public deprecated_position: string;

        /** DemoteMasterResponse master_status. */
        public master_status?: (replicationdata.IMasterStatus|null);

        /**
         * Creates a new DemoteMasterResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DemoteMasterResponse instance
         */
        public static create(properties?: tabletmanagerdata.IDemoteMasterResponse): tabletmanagerdata.DemoteMasterResponse;

        /**
         * Encodes the specified DemoteMasterResponse message. Does not implicitly {@link tabletmanagerdata.DemoteMasterResponse.verify|verify} messages.
         * @param message DemoteMasterResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IDemoteMasterResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DemoteMasterResponse message, length delimited. Does not implicitly {@link tabletmanagerdata.DemoteMasterResponse.verify|verify} messages.
         * @param message DemoteMasterResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IDemoteMasterResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DemoteMasterResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DemoteMasterResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.DemoteMasterResponse;

        /**
         * Decodes a DemoteMasterResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DemoteMasterResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.DemoteMasterResponse;

        /**
         * Verifies a DemoteMasterResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DemoteMasterResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DemoteMasterResponse
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.DemoteMasterResponse;

        /**
         * Creates a plain object from a DemoteMasterResponse message. Also converts values to other types if specified.
         * @param message DemoteMasterResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.DemoteMasterResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DemoteMasterResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UndoDemoteMasterRequest. */
    interface IUndoDemoteMasterRequest {
    }

    /** Represents an UndoDemoteMasterRequest. */
    class UndoDemoteMasterRequest implements IUndoDemoteMasterRequest {

        /**
         * Constructs a new UndoDemoteMasterRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IUndoDemoteMasterRequest);

        /**
         * Creates a new UndoDemoteMasterRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UndoDemoteMasterRequest instance
         */
        public static create(properties?: tabletmanagerdata.IUndoDemoteMasterRequest): tabletmanagerdata.UndoDemoteMasterRequest;

        /**
         * Encodes the specified UndoDemoteMasterRequest message. Does not implicitly {@link tabletmanagerdata.UndoDemoteMasterRequest.verify|verify} messages.
         * @param message UndoDemoteMasterRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IUndoDemoteMasterRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UndoDemoteMasterRequest message, length delimited. Does not implicitly {@link tabletmanagerdata.UndoDemoteMasterRequest.verify|verify} messages.
         * @param message UndoDemoteMasterRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IUndoDemoteMasterRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an UndoDemoteMasterRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UndoDemoteMasterRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.UndoDemoteMasterRequest;

        /**
         * Decodes an UndoDemoteMasterRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UndoDemoteMasterRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.UndoDemoteMasterRequest;

        /**
         * Verifies an UndoDemoteMasterRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UndoDemoteMasterRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UndoDemoteMasterRequest
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.UndoDemoteMasterRequest;

        /**
         * Creates a plain object from an UndoDemoteMasterRequest message. Also converts values to other types if specified.
         * @param message UndoDemoteMasterRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.UndoDemoteMasterRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UndoDemoteMasterRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UndoDemoteMasterResponse. */
    interface IUndoDemoteMasterResponse {
    }

    /** Represents an UndoDemoteMasterResponse. */
    class UndoDemoteMasterResponse implements IUndoDemoteMasterResponse {

        /**
         * Constructs a new UndoDemoteMasterResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IUndoDemoteMasterResponse);

        /**
         * Creates a new UndoDemoteMasterResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UndoDemoteMasterResponse instance
         */
        public static create(properties?: tabletmanagerdata.IUndoDemoteMasterResponse): tabletmanagerdata.UndoDemoteMasterResponse;

        /**
         * Encodes the specified UndoDemoteMasterResponse message. Does not implicitly {@link tabletmanagerdata.UndoDemoteMasterResponse.verify|verify} messages.
         * @param message UndoDemoteMasterResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IUndoDemoteMasterResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UndoDemoteMasterResponse message, length delimited. Does not implicitly {@link tabletmanagerdata.UndoDemoteMasterResponse.verify|verify} messages.
         * @param message UndoDemoteMasterResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IUndoDemoteMasterResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an UndoDemoteMasterResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UndoDemoteMasterResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.UndoDemoteMasterResponse;

        /**
         * Decodes an UndoDemoteMasterResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UndoDemoteMasterResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.UndoDemoteMasterResponse;

        /**
         * Verifies an UndoDemoteMasterResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UndoDemoteMasterResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UndoDemoteMasterResponse
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.UndoDemoteMasterResponse;

        /**
         * Creates a plain object from an UndoDemoteMasterResponse message. Also converts values to other types if specified.
         * @param message UndoDemoteMasterResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.UndoDemoteMasterResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UndoDemoteMasterResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ReplicaWasPromotedRequest. */
    interface IReplicaWasPromotedRequest {
    }

    /** Represents a ReplicaWasPromotedRequest. */
    class ReplicaWasPromotedRequest implements IReplicaWasPromotedRequest {

        /**
         * Constructs a new ReplicaWasPromotedRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IReplicaWasPromotedRequest);

        /**
         * Creates a new ReplicaWasPromotedRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ReplicaWasPromotedRequest instance
         */
        public static create(properties?: tabletmanagerdata.IReplicaWasPromotedRequest): tabletmanagerdata.ReplicaWasPromotedRequest;

        /**
         * Encodes the specified ReplicaWasPromotedRequest message. Does not implicitly {@link tabletmanagerdata.ReplicaWasPromotedRequest.verify|verify} messages.
         * @param message ReplicaWasPromotedRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IReplicaWasPromotedRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ReplicaWasPromotedRequest message, length delimited. Does not implicitly {@link tabletmanagerdata.ReplicaWasPromotedRequest.verify|verify} messages.
         * @param message ReplicaWasPromotedRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IReplicaWasPromotedRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ReplicaWasPromotedRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ReplicaWasPromotedRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.ReplicaWasPromotedRequest;

        /**
         * Decodes a ReplicaWasPromotedRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ReplicaWasPromotedRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.ReplicaWasPromotedRequest;

        /**
         * Verifies a ReplicaWasPromotedRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ReplicaWasPromotedRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ReplicaWasPromotedRequest
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.ReplicaWasPromotedRequest;

        /**
         * Creates a plain object from a ReplicaWasPromotedRequest message. Also converts values to other types if specified.
         * @param message ReplicaWasPromotedRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.ReplicaWasPromotedRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ReplicaWasPromotedRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ReplicaWasPromotedResponse. */
    interface IReplicaWasPromotedResponse {
    }

    /** Represents a ReplicaWasPromotedResponse. */
    class ReplicaWasPromotedResponse implements IReplicaWasPromotedResponse {

        /**
         * Constructs a new ReplicaWasPromotedResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IReplicaWasPromotedResponse);

        /**
         * Creates a new ReplicaWasPromotedResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ReplicaWasPromotedResponse instance
         */
        public static create(properties?: tabletmanagerdata.IReplicaWasPromotedResponse): tabletmanagerdata.ReplicaWasPromotedResponse;

        /**
         * Encodes the specified ReplicaWasPromotedResponse message. Does not implicitly {@link tabletmanagerdata.ReplicaWasPromotedResponse.verify|verify} messages.
         * @param message ReplicaWasPromotedResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IReplicaWasPromotedResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ReplicaWasPromotedResponse message, length delimited. Does not implicitly {@link tabletmanagerdata.ReplicaWasPromotedResponse.verify|verify} messages.
         * @param message ReplicaWasPromotedResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IReplicaWasPromotedResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ReplicaWasPromotedResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ReplicaWasPromotedResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.ReplicaWasPromotedResponse;

        /**
         * Decodes a ReplicaWasPromotedResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ReplicaWasPromotedResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.ReplicaWasPromotedResponse;

        /**
         * Verifies a ReplicaWasPromotedResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ReplicaWasPromotedResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ReplicaWasPromotedResponse
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.ReplicaWasPromotedResponse;

        /**
         * Creates a plain object from a ReplicaWasPromotedResponse message. Also converts values to other types if specified.
         * @param message ReplicaWasPromotedResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.ReplicaWasPromotedResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ReplicaWasPromotedResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SetMasterRequest. */
    interface ISetMasterRequest {

        /** SetMasterRequest parent */
        parent?: (topodata.ITabletAlias|null);

        /** SetMasterRequest time_created_ns */
        time_created_ns?: (number|Long|null);

        /** SetMasterRequest force_start_replication */
        force_start_replication?: (boolean|null);

        /** SetMasterRequest wait_position */
        wait_position?: (string|null);
    }

    /** Represents a SetMasterRequest. */
    class SetMasterRequest implements ISetMasterRequest {

        /**
         * Constructs a new SetMasterRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.ISetMasterRequest);

        /** SetMasterRequest parent. */
        public parent?: (topodata.ITabletAlias|null);

        /** SetMasterRequest time_created_ns. */
        public time_created_ns: (number|Long);

        /** SetMasterRequest force_start_replication. */
        public force_start_replication: boolean;

        /** SetMasterRequest wait_position. */
        public wait_position: string;

        /**
         * Creates a new SetMasterRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SetMasterRequest instance
         */
        public static create(properties?: tabletmanagerdata.ISetMasterRequest): tabletmanagerdata.SetMasterRequest;

        /**
         * Encodes the specified SetMasterRequest message. Does not implicitly {@link tabletmanagerdata.SetMasterRequest.verify|verify} messages.
         * @param message SetMasterRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.ISetMasterRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SetMasterRequest message, length delimited. Does not implicitly {@link tabletmanagerdata.SetMasterRequest.verify|verify} messages.
         * @param message SetMasterRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.ISetMasterRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SetMasterRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SetMasterRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.SetMasterRequest;

        /**
         * Decodes a SetMasterRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SetMasterRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.SetMasterRequest;

        /**
         * Verifies a SetMasterRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SetMasterRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SetMasterRequest
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.SetMasterRequest;

        /**
         * Creates a plain object from a SetMasterRequest message. Also converts values to other types if specified.
         * @param message SetMasterRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.SetMasterRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SetMasterRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SetMasterResponse. */
    interface ISetMasterResponse {
    }

    /** Represents a SetMasterResponse. */
    class SetMasterResponse implements ISetMasterResponse {

        /**
         * Constructs a new SetMasterResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.ISetMasterResponse);

        /**
         * Creates a new SetMasterResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SetMasterResponse instance
         */
        public static create(properties?: tabletmanagerdata.ISetMasterResponse): tabletmanagerdata.SetMasterResponse;

        /**
         * Encodes the specified SetMasterResponse message. Does not implicitly {@link tabletmanagerdata.SetMasterResponse.verify|verify} messages.
         * @param message SetMasterResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.ISetMasterResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SetMasterResponse message, length delimited. Does not implicitly {@link tabletmanagerdata.SetMasterResponse.verify|verify} messages.
         * @param message SetMasterResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.ISetMasterResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SetMasterResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SetMasterResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.SetMasterResponse;

        /**
         * Decodes a SetMasterResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SetMasterResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.SetMasterResponse;

        /**
         * Verifies a SetMasterResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SetMasterResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SetMasterResponse
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.SetMasterResponse;

        /**
         * Creates a plain object from a SetMasterResponse message. Also converts values to other types if specified.
         * @param message SetMasterResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.SetMasterResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SetMasterResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ReplicaWasRestartedRequest. */
    interface IReplicaWasRestartedRequest {

        /** ReplicaWasRestartedRequest parent */
        parent?: (topodata.ITabletAlias|null);
    }

    /** Represents a ReplicaWasRestartedRequest. */
    class ReplicaWasRestartedRequest implements IReplicaWasRestartedRequest {

        /**
         * Constructs a new ReplicaWasRestartedRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IReplicaWasRestartedRequest);

        /** ReplicaWasRestartedRequest parent. */
        public parent?: (topodata.ITabletAlias|null);

        /**
         * Creates a new ReplicaWasRestartedRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ReplicaWasRestartedRequest instance
         */
        public static create(properties?: tabletmanagerdata.IReplicaWasRestartedRequest): tabletmanagerdata.ReplicaWasRestartedRequest;

        /**
         * Encodes the specified ReplicaWasRestartedRequest message. Does not implicitly {@link tabletmanagerdata.ReplicaWasRestartedRequest.verify|verify} messages.
         * @param message ReplicaWasRestartedRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IReplicaWasRestartedRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ReplicaWasRestartedRequest message, length delimited. Does not implicitly {@link tabletmanagerdata.ReplicaWasRestartedRequest.verify|verify} messages.
         * @param message ReplicaWasRestartedRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IReplicaWasRestartedRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ReplicaWasRestartedRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ReplicaWasRestartedRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.ReplicaWasRestartedRequest;

        /**
         * Decodes a ReplicaWasRestartedRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ReplicaWasRestartedRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.ReplicaWasRestartedRequest;

        /**
         * Verifies a ReplicaWasRestartedRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ReplicaWasRestartedRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ReplicaWasRestartedRequest
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.ReplicaWasRestartedRequest;

        /**
         * Creates a plain object from a ReplicaWasRestartedRequest message. Also converts values to other types if specified.
         * @param message ReplicaWasRestartedRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.ReplicaWasRestartedRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ReplicaWasRestartedRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ReplicaWasRestartedResponse. */
    interface IReplicaWasRestartedResponse {
    }

    /** Represents a ReplicaWasRestartedResponse. */
    class ReplicaWasRestartedResponse implements IReplicaWasRestartedResponse {

        /**
         * Constructs a new ReplicaWasRestartedResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IReplicaWasRestartedResponse);

        /**
         * Creates a new ReplicaWasRestartedResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ReplicaWasRestartedResponse instance
         */
        public static create(properties?: tabletmanagerdata.IReplicaWasRestartedResponse): tabletmanagerdata.ReplicaWasRestartedResponse;

        /**
         * Encodes the specified ReplicaWasRestartedResponse message. Does not implicitly {@link tabletmanagerdata.ReplicaWasRestartedResponse.verify|verify} messages.
         * @param message ReplicaWasRestartedResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IReplicaWasRestartedResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ReplicaWasRestartedResponse message, length delimited. Does not implicitly {@link tabletmanagerdata.ReplicaWasRestartedResponse.verify|verify} messages.
         * @param message ReplicaWasRestartedResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IReplicaWasRestartedResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ReplicaWasRestartedResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ReplicaWasRestartedResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.ReplicaWasRestartedResponse;

        /**
         * Decodes a ReplicaWasRestartedResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ReplicaWasRestartedResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.ReplicaWasRestartedResponse;

        /**
         * Verifies a ReplicaWasRestartedResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ReplicaWasRestartedResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ReplicaWasRestartedResponse
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.ReplicaWasRestartedResponse;

        /**
         * Creates a plain object from a ReplicaWasRestartedResponse message. Also converts values to other types if specified.
         * @param message ReplicaWasRestartedResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.ReplicaWasRestartedResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ReplicaWasRestartedResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a StopReplicationAndGetStatusRequest. */
    interface IStopReplicationAndGetStatusRequest {

        /** StopReplicationAndGetStatusRequest stop_replication_mode */
        stop_replication_mode?: (replicationdata.StopReplicationMode|null);
    }

    /** Represents a StopReplicationAndGetStatusRequest. */
    class StopReplicationAndGetStatusRequest implements IStopReplicationAndGetStatusRequest {

        /**
         * Constructs a new StopReplicationAndGetStatusRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IStopReplicationAndGetStatusRequest);

        /** StopReplicationAndGetStatusRequest stop_replication_mode. */
        public stop_replication_mode: replicationdata.StopReplicationMode;

        /**
         * Creates a new StopReplicationAndGetStatusRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns StopReplicationAndGetStatusRequest instance
         */
        public static create(properties?: tabletmanagerdata.IStopReplicationAndGetStatusRequest): tabletmanagerdata.StopReplicationAndGetStatusRequest;

        /**
         * Encodes the specified StopReplicationAndGetStatusRequest message. Does not implicitly {@link tabletmanagerdata.StopReplicationAndGetStatusRequest.verify|verify} messages.
         * @param message StopReplicationAndGetStatusRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IStopReplicationAndGetStatusRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified StopReplicationAndGetStatusRequest message, length delimited. Does not implicitly {@link tabletmanagerdata.StopReplicationAndGetStatusRequest.verify|verify} messages.
         * @param message StopReplicationAndGetStatusRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IStopReplicationAndGetStatusRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a StopReplicationAndGetStatusRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns StopReplicationAndGetStatusRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.StopReplicationAndGetStatusRequest;

        /**
         * Decodes a StopReplicationAndGetStatusRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns StopReplicationAndGetStatusRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.StopReplicationAndGetStatusRequest;

        /**
         * Verifies a StopReplicationAndGetStatusRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a StopReplicationAndGetStatusRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns StopReplicationAndGetStatusRequest
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.StopReplicationAndGetStatusRequest;

        /**
         * Creates a plain object from a StopReplicationAndGetStatusRequest message. Also converts values to other types if specified.
         * @param message StopReplicationAndGetStatusRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.StopReplicationAndGetStatusRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this StopReplicationAndGetStatusRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a StopReplicationAndGetStatusResponse. */
    interface IStopReplicationAndGetStatusResponse {

        /** StopReplicationAndGetStatusResponse hybrid_status */
        hybrid_status?: (replicationdata.IStatus|null);

        /** StopReplicationAndGetStatusResponse status */
        status?: (replicationdata.IStopReplicationStatus|null);
    }

    /** Represents a StopReplicationAndGetStatusResponse. */
    class StopReplicationAndGetStatusResponse implements IStopReplicationAndGetStatusResponse {

        /**
         * Constructs a new StopReplicationAndGetStatusResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IStopReplicationAndGetStatusResponse);

        /** StopReplicationAndGetStatusResponse hybrid_status. */
        public hybrid_status?: (replicationdata.IStatus|null);

        /** StopReplicationAndGetStatusResponse status. */
        public status?: (replicationdata.IStopReplicationStatus|null);

        /**
         * Creates a new StopReplicationAndGetStatusResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns StopReplicationAndGetStatusResponse instance
         */
        public static create(properties?: tabletmanagerdata.IStopReplicationAndGetStatusResponse): tabletmanagerdata.StopReplicationAndGetStatusResponse;

        /**
         * Encodes the specified StopReplicationAndGetStatusResponse message. Does not implicitly {@link tabletmanagerdata.StopReplicationAndGetStatusResponse.verify|verify} messages.
         * @param message StopReplicationAndGetStatusResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IStopReplicationAndGetStatusResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified StopReplicationAndGetStatusResponse message, length delimited. Does not implicitly {@link tabletmanagerdata.StopReplicationAndGetStatusResponse.verify|verify} messages.
         * @param message StopReplicationAndGetStatusResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IStopReplicationAndGetStatusResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a StopReplicationAndGetStatusResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns StopReplicationAndGetStatusResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.StopReplicationAndGetStatusResponse;

        /**
         * Decodes a StopReplicationAndGetStatusResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns StopReplicationAndGetStatusResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.StopReplicationAndGetStatusResponse;

        /**
         * Verifies a StopReplicationAndGetStatusResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a StopReplicationAndGetStatusResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns StopReplicationAndGetStatusResponse
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.StopReplicationAndGetStatusResponse;

        /**
         * Creates a plain object from a StopReplicationAndGetStatusResponse message. Also converts values to other types if specified.
         * @param message StopReplicationAndGetStatusResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.StopReplicationAndGetStatusResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this StopReplicationAndGetStatusResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PromoteReplicaRequest. */
    interface IPromoteReplicaRequest {
    }

    /** Represents a PromoteReplicaRequest. */
    class PromoteReplicaRequest implements IPromoteReplicaRequest {

        /**
         * Constructs a new PromoteReplicaRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IPromoteReplicaRequest);

        /**
         * Creates a new PromoteReplicaRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PromoteReplicaRequest instance
         */
        public static create(properties?: tabletmanagerdata.IPromoteReplicaRequest): tabletmanagerdata.PromoteReplicaRequest;

        /**
         * Encodes the specified PromoteReplicaRequest message. Does not implicitly {@link tabletmanagerdata.PromoteReplicaRequest.verify|verify} messages.
         * @param message PromoteReplicaRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IPromoteReplicaRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PromoteReplicaRequest message, length delimited. Does not implicitly {@link tabletmanagerdata.PromoteReplicaRequest.verify|verify} messages.
         * @param message PromoteReplicaRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IPromoteReplicaRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PromoteReplicaRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PromoteReplicaRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.PromoteReplicaRequest;

        /**
         * Decodes a PromoteReplicaRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PromoteReplicaRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.PromoteReplicaRequest;

        /**
         * Verifies a PromoteReplicaRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PromoteReplicaRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PromoteReplicaRequest
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.PromoteReplicaRequest;

        /**
         * Creates a plain object from a PromoteReplicaRequest message. Also converts values to other types if specified.
         * @param message PromoteReplicaRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.PromoteReplicaRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PromoteReplicaRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PromoteReplicaResponse. */
    interface IPromoteReplicaResponse {

        /** PromoteReplicaResponse position */
        position?: (string|null);
    }

    /** Represents a PromoteReplicaResponse. */
    class PromoteReplicaResponse implements IPromoteReplicaResponse {

        /**
         * Constructs a new PromoteReplicaResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IPromoteReplicaResponse);

        /** PromoteReplicaResponse position. */
        public position: string;

        /**
         * Creates a new PromoteReplicaResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PromoteReplicaResponse instance
         */
        public static create(properties?: tabletmanagerdata.IPromoteReplicaResponse): tabletmanagerdata.PromoteReplicaResponse;

        /**
         * Encodes the specified PromoteReplicaResponse message. Does not implicitly {@link tabletmanagerdata.PromoteReplicaResponse.verify|verify} messages.
         * @param message PromoteReplicaResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IPromoteReplicaResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PromoteReplicaResponse message, length delimited. Does not implicitly {@link tabletmanagerdata.PromoteReplicaResponse.verify|verify} messages.
         * @param message PromoteReplicaResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IPromoteReplicaResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PromoteReplicaResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PromoteReplicaResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.PromoteReplicaResponse;

        /**
         * Decodes a PromoteReplicaResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PromoteReplicaResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.PromoteReplicaResponse;

        /**
         * Verifies a PromoteReplicaResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PromoteReplicaResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PromoteReplicaResponse
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.PromoteReplicaResponse;

        /**
         * Creates a plain object from a PromoteReplicaResponse message. Also converts values to other types if specified.
         * @param message PromoteReplicaResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.PromoteReplicaResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PromoteReplicaResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BackupRequest. */
    interface IBackupRequest {

        /** BackupRequest concurrency */
        concurrency?: (number|Long|null);

        /** BackupRequest allowMaster */
        allowMaster?: (boolean|null);
    }

    /** Represents a BackupRequest. */
    class BackupRequest implements IBackupRequest {

        /**
         * Constructs a new BackupRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IBackupRequest);

        /** BackupRequest concurrency. */
        public concurrency: (number|Long);

        /** BackupRequest allowMaster. */
        public allowMaster: boolean;

        /**
         * Creates a new BackupRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BackupRequest instance
         */
        public static create(properties?: tabletmanagerdata.IBackupRequest): tabletmanagerdata.BackupRequest;

        /**
         * Encodes the specified BackupRequest message. Does not implicitly {@link tabletmanagerdata.BackupRequest.verify|verify} messages.
         * @param message BackupRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IBackupRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BackupRequest message, length delimited. Does not implicitly {@link tabletmanagerdata.BackupRequest.verify|verify} messages.
         * @param message BackupRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IBackupRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BackupRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BackupRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.BackupRequest;

        /**
         * Decodes a BackupRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BackupRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.BackupRequest;

        /**
         * Verifies a BackupRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BackupRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BackupRequest
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.BackupRequest;

        /**
         * Creates a plain object from a BackupRequest message. Also converts values to other types if specified.
         * @param message BackupRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.BackupRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BackupRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BackupResponse. */
    interface IBackupResponse {

        /** BackupResponse event */
        event?: (logutil.IEvent|null);
    }

    /** Represents a BackupResponse. */
    class BackupResponse implements IBackupResponse {

        /**
         * Constructs a new BackupResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IBackupResponse);

        /** BackupResponse event. */
        public event?: (logutil.IEvent|null);

        /**
         * Creates a new BackupResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BackupResponse instance
         */
        public static create(properties?: tabletmanagerdata.IBackupResponse): tabletmanagerdata.BackupResponse;

        /**
         * Encodes the specified BackupResponse message. Does not implicitly {@link tabletmanagerdata.BackupResponse.verify|verify} messages.
         * @param message BackupResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IBackupResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BackupResponse message, length delimited. Does not implicitly {@link tabletmanagerdata.BackupResponse.verify|verify} messages.
         * @param message BackupResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IBackupResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BackupResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BackupResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.BackupResponse;

        /**
         * Decodes a BackupResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BackupResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.BackupResponse;

        /**
         * Verifies a BackupResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BackupResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BackupResponse
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.BackupResponse;

        /**
         * Creates a plain object from a BackupResponse message. Also converts values to other types if specified.
         * @param message BackupResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.BackupResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BackupResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RestoreFromBackupRequest. */
    interface IRestoreFromBackupRequest {
    }

    /** Represents a RestoreFromBackupRequest. */
    class RestoreFromBackupRequest implements IRestoreFromBackupRequest {

        /**
         * Constructs a new RestoreFromBackupRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IRestoreFromBackupRequest);

        /**
         * Creates a new RestoreFromBackupRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RestoreFromBackupRequest instance
         */
        public static create(properties?: tabletmanagerdata.IRestoreFromBackupRequest): tabletmanagerdata.RestoreFromBackupRequest;

        /**
         * Encodes the specified RestoreFromBackupRequest message. Does not implicitly {@link tabletmanagerdata.RestoreFromBackupRequest.verify|verify} messages.
         * @param message RestoreFromBackupRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IRestoreFromBackupRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RestoreFromBackupRequest message, length delimited. Does not implicitly {@link tabletmanagerdata.RestoreFromBackupRequest.verify|verify} messages.
         * @param message RestoreFromBackupRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IRestoreFromBackupRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RestoreFromBackupRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RestoreFromBackupRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.RestoreFromBackupRequest;

        /**
         * Decodes a RestoreFromBackupRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RestoreFromBackupRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.RestoreFromBackupRequest;

        /**
         * Verifies a RestoreFromBackupRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RestoreFromBackupRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RestoreFromBackupRequest
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.RestoreFromBackupRequest;

        /**
         * Creates a plain object from a RestoreFromBackupRequest message. Also converts values to other types if specified.
         * @param message RestoreFromBackupRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.RestoreFromBackupRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RestoreFromBackupRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RestoreFromBackupResponse. */
    interface IRestoreFromBackupResponse {

        /** RestoreFromBackupResponse event */
        event?: (logutil.IEvent|null);
    }

    /** Represents a RestoreFromBackupResponse. */
    class RestoreFromBackupResponse implements IRestoreFromBackupResponse {

        /**
         * Constructs a new RestoreFromBackupResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IRestoreFromBackupResponse);

        /** RestoreFromBackupResponse event. */
        public event?: (logutil.IEvent|null);

        /**
         * Creates a new RestoreFromBackupResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RestoreFromBackupResponse instance
         */
        public static create(properties?: tabletmanagerdata.IRestoreFromBackupResponse): tabletmanagerdata.RestoreFromBackupResponse;

        /**
         * Encodes the specified RestoreFromBackupResponse message. Does not implicitly {@link tabletmanagerdata.RestoreFromBackupResponse.verify|verify} messages.
         * @param message RestoreFromBackupResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IRestoreFromBackupResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RestoreFromBackupResponse message, length delimited. Does not implicitly {@link tabletmanagerdata.RestoreFromBackupResponse.verify|verify} messages.
         * @param message RestoreFromBackupResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IRestoreFromBackupResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RestoreFromBackupResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RestoreFromBackupResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.RestoreFromBackupResponse;

        /**
         * Decodes a RestoreFromBackupResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RestoreFromBackupResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.RestoreFromBackupResponse;

        /**
         * Verifies a RestoreFromBackupResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RestoreFromBackupResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RestoreFromBackupResponse
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.RestoreFromBackupResponse;

        /**
         * Creates a plain object from a RestoreFromBackupResponse message. Also converts values to other types if specified.
         * @param message RestoreFromBackupResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.RestoreFromBackupResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RestoreFromBackupResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a VExecRequest. */
    interface IVExecRequest {

        /** VExecRequest query */
        query?: (string|null);

        /** VExecRequest workflow */
        workflow?: (string|null);

        /** VExecRequest keyspace */
        keyspace?: (string|null);
    }

    /** Represents a VExecRequest. */
    class VExecRequest implements IVExecRequest {

        /**
         * Constructs a new VExecRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IVExecRequest);

        /** VExecRequest query. */
        public query: string;

        /** VExecRequest workflow. */
        public workflow: string;

        /** VExecRequest keyspace. */
        public keyspace: string;

        /**
         * Creates a new VExecRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns VExecRequest instance
         */
        public static create(properties?: tabletmanagerdata.IVExecRequest): tabletmanagerdata.VExecRequest;

        /**
         * Encodes the specified VExecRequest message. Does not implicitly {@link tabletmanagerdata.VExecRequest.verify|verify} messages.
         * @param message VExecRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IVExecRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified VExecRequest message, length delimited. Does not implicitly {@link tabletmanagerdata.VExecRequest.verify|verify} messages.
         * @param message VExecRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IVExecRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a VExecRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns VExecRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.VExecRequest;

        /**
         * Decodes a VExecRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns VExecRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.VExecRequest;

        /**
         * Verifies a VExecRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a VExecRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns VExecRequest
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.VExecRequest;

        /**
         * Creates a plain object from a VExecRequest message. Also converts values to other types if specified.
         * @param message VExecRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.VExecRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this VExecRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a VExecResponse. */
    interface IVExecResponse {

        /** VExecResponse result */
        result?: (query.IQueryResult|null);
    }

    /** Represents a VExecResponse. */
    class VExecResponse implements IVExecResponse {

        /**
         * Constructs a new VExecResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tabletmanagerdata.IVExecResponse);

        /** VExecResponse result. */
        public result?: (query.IQueryResult|null);

        /**
         * Creates a new VExecResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns VExecResponse instance
         */
        public static create(properties?: tabletmanagerdata.IVExecResponse): tabletmanagerdata.VExecResponse;

        /**
         * Encodes the specified VExecResponse message. Does not implicitly {@link tabletmanagerdata.VExecResponse.verify|verify} messages.
         * @param message VExecResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tabletmanagerdata.IVExecResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified VExecResponse message, length delimited. Does not implicitly {@link tabletmanagerdata.VExecResponse.verify|verify} messages.
         * @param message VExecResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tabletmanagerdata.IVExecResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a VExecResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns VExecResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tabletmanagerdata.VExecResponse;

        /**
         * Decodes a VExecResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns VExecResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tabletmanagerdata.VExecResponse;

        /**
         * Verifies a VExecResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a VExecResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns VExecResponse
         */
        public static fromObject(object: { [k: string]: any }): tabletmanagerdata.VExecResponse;

        /**
         * Creates a plain object from a VExecResponse message. Also converts values to other types if specified.
         * @param message VExecResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tabletmanagerdata.VExecResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this VExecResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace query. */
export namespace query {

    /** Properties of a Target. */
    interface ITarget {

        /** Target keyspace */
        keyspace?: (string|null);

        /** Target shard */
        shard?: (string|null);

        /** Target tablet_type */
        tablet_type?: (topodata.TabletType|null);

        /** Target cell */
        cell?: (string|null);
    }

    /** Represents a Target. */
    class Target implements ITarget {

        /**
         * Constructs a new Target.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.ITarget);

        /** Target keyspace. */
        public keyspace: string;

        /** Target shard. */
        public shard: string;

        /** Target tablet_type. */
        public tablet_type: topodata.TabletType;

        /** Target cell. */
        public cell: string;

        /**
         * Creates a new Target instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Target instance
         */
        public static create(properties?: query.ITarget): query.Target;

        /**
         * Encodes the specified Target message. Does not implicitly {@link query.Target.verify|verify} messages.
         * @param message Target message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.ITarget, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Target message, length delimited. Does not implicitly {@link query.Target.verify|verify} messages.
         * @param message Target message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.ITarget, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Target message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Target
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.Target;

        /**
         * Decodes a Target message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Target
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.Target;

        /**
         * Verifies a Target message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Target message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Target
         */
        public static fromObject(object: { [k: string]: any }): query.Target;

        /**
         * Creates a plain object from a Target message. Also converts values to other types if specified.
         * @param message Target
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.Target, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Target to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a VTGateCallerID. */
    interface IVTGateCallerID {

        /** VTGateCallerID username */
        username?: (string|null);

        /** VTGateCallerID groups */
        groups?: (string[]|null);
    }

    /** Represents a VTGateCallerID. */
    class VTGateCallerID implements IVTGateCallerID {

        /**
         * Constructs a new VTGateCallerID.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IVTGateCallerID);

        /** VTGateCallerID username. */
        public username: string;

        /** VTGateCallerID groups. */
        public groups: string[];

        /**
         * Creates a new VTGateCallerID instance using the specified properties.
         * @param [properties] Properties to set
         * @returns VTGateCallerID instance
         */
        public static create(properties?: query.IVTGateCallerID): query.VTGateCallerID;

        /**
         * Encodes the specified VTGateCallerID message. Does not implicitly {@link query.VTGateCallerID.verify|verify} messages.
         * @param message VTGateCallerID message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IVTGateCallerID, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified VTGateCallerID message, length delimited. Does not implicitly {@link query.VTGateCallerID.verify|verify} messages.
         * @param message VTGateCallerID message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IVTGateCallerID, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a VTGateCallerID message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns VTGateCallerID
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.VTGateCallerID;

        /**
         * Decodes a VTGateCallerID message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns VTGateCallerID
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.VTGateCallerID;

        /**
         * Verifies a VTGateCallerID message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a VTGateCallerID message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns VTGateCallerID
         */
        public static fromObject(object: { [k: string]: any }): query.VTGateCallerID;

        /**
         * Creates a plain object from a VTGateCallerID message. Also converts values to other types if specified.
         * @param message VTGateCallerID
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.VTGateCallerID, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this VTGateCallerID to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EventToken. */
    interface IEventToken {

        /** EventToken timestamp */
        timestamp?: (number|Long|null);

        /** EventToken shard */
        shard?: (string|null);

        /** EventToken position */
        position?: (string|null);
    }

    /** Represents an EventToken. */
    class EventToken implements IEventToken {

        /**
         * Constructs a new EventToken.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IEventToken);

        /** EventToken timestamp. */
        public timestamp: (number|Long);

        /** EventToken shard. */
        public shard: string;

        /** EventToken position. */
        public position: string;

        /**
         * Creates a new EventToken instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EventToken instance
         */
        public static create(properties?: query.IEventToken): query.EventToken;

        /**
         * Encodes the specified EventToken message. Does not implicitly {@link query.EventToken.verify|verify} messages.
         * @param message EventToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IEventToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EventToken message, length delimited. Does not implicitly {@link query.EventToken.verify|verify} messages.
         * @param message EventToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IEventToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EventToken message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EventToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.EventToken;

        /**
         * Decodes an EventToken message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EventToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.EventToken;

        /**
         * Verifies an EventToken message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EventToken message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EventToken
         */
        public static fromObject(object: { [k: string]: any }): query.EventToken;

        /**
         * Creates a plain object from an EventToken message. Also converts values to other types if specified.
         * @param message EventToken
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.EventToken, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EventToken to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** MySqlFlag enum. */
    enum MySqlFlag {
        EMPTY = 0,
        NOT_NULL_FLAG = 1,
        PRI_KEY_FLAG = 2,
        UNIQUE_KEY_FLAG = 4,
        MULTIPLE_KEY_FLAG = 8,
        BLOB_FLAG = 16,
        UNSIGNED_FLAG = 32,
        ZEROFILL_FLAG = 64,
        BINARY_FLAG = 128,
        ENUM_FLAG = 256,
        AUTO_INCREMENT_FLAG = 512,
        TIMESTAMP_FLAG = 1024,
        SET_FLAG = 2048,
        NO_DEFAULT_VALUE_FLAG = 4096,
        ON_UPDATE_NOW_FLAG = 8192,
        NUM_FLAG = 32768,
        PART_KEY_FLAG = 16384,
        GROUP_FLAG = 32768,
        UNIQUE_FLAG = 65536,
        BINCMP_FLAG = 131072
    }

    /** Flag enum. */
    enum Flag {
        NONE = 0,
        ISINTEGRAL = 256,
        ISUNSIGNED = 512,
        ISFLOAT = 1024,
        ISQUOTED = 2048,
        ISTEXT = 4096,
        ISBINARY = 8192
    }

    /** Type enum. */
    enum Type {
        NULL_TYPE = 0,
        INT8 = 257,
        UINT8 = 770,
        INT16 = 259,
        UINT16 = 772,
        INT24 = 261,
        UINT24 = 774,
        INT32 = 263,
        UINT32 = 776,
        INT64 = 265,
        UINT64 = 778,
        FLOAT32 = 1035,
        FLOAT64 = 1036,
        TIMESTAMP = 2061,
        DATE = 2062,
        TIME = 2063,
        DATETIME = 2064,
        YEAR = 785,
        DECIMAL = 18,
        TEXT = 6163,
        BLOB = 10260,
        VARCHAR = 6165,
        VARBINARY = 10262,
        CHAR = 6167,
        BINARY = 10264,
        BIT = 2073,
        ENUM = 2074,
        SET = 2075,
        TUPLE = 28,
        GEOMETRY = 2077,
        JSON = 2078,
        EXPRESSION = 31
    }

    /** Properties of a Value. */
    interface IValue {

        /** Value type */
        type?: (query.Type|null);

        /** Value value */
        value?: (Uint8Array|null);
    }

    /** Represents a Value. */
    class Value implements IValue {

        /**
         * Constructs a new Value.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IValue);

        /** Value type. */
        public type: query.Type;

        /** Value value. */
        public value: Uint8Array;

        /**
         * Creates a new Value instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Value instance
         */
        public static create(properties?: query.IValue): query.Value;

        /**
         * Encodes the specified Value message. Does not implicitly {@link query.Value.verify|verify} messages.
         * @param message Value message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IValue, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Value message, length delimited. Does not implicitly {@link query.Value.verify|verify} messages.
         * @param message Value message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IValue, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Value message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Value
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.Value;

        /**
         * Decodes a Value message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Value
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.Value;

        /**
         * Verifies a Value message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Value message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Value
         */
        public static fromObject(object: { [k: string]: any }): query.Value;

        /**
         * Creates a plain object from a Value message. Also converts values to other types if specified.
         * @param message Value
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.Value, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Value to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BindVariable. */
    interface IBindVariable {

        /** BindVariable type */
        type?: (query.Type|null);

        /** BindVariable value */
        value?: (Uint8Array|null);

        /** BindVariable values */
        values?: (query.IValue[]|null);
    }

    /** Represents a BindVariable. */
    class BindVariable implements IBindVariable {

        /**
         * Constructs a new BindVariable.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IBindVariable);

        /** BindVariable type. */
        public type: query.Type;

        /** BindVariable value. */
        public value: Uint8Array;

        /** BindVariable values. */
        public values: query.IValue[];

        /**
         * Creates a new BindVariable instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BindVariable instance
         */
        public static create(properties?: query.IBindVariable): query.BindVariable;

        /**
         * Encodes the specified BindVariable message. Does not implicitly {@link query.BindVariable.verify|verify} messages.
         * @param message BindVariable message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IBindVariable, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BindVariable message, length delimited. Does not implicitly {@link query.BindVariable.verify|verify} messages.
         * @param message BindVariable message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IBindVariable, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BindVariable message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BindVariable
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.BindVariable;

        /**
         * Decodes a BindVariable message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BindVariable
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.BindVariable;

        /**
         * Verifies a BindVariable message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BindVariable message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BindVariable
         */
        public static fromObject(object: { [k: string]: any }): query.BindVariable;

        /**
         * Creates a plain object from a BindVariable message. Also converts values to other types if specified.
         * @param message BindVariable
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.BindVariable, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BindVariable to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BoundQuery. */
    interface IBoundQuery {

        /** BoundQuery sql */
        sql?: (string|null);

        /** BoundQuery bind_variables */
        bind_variables?: ({ [k: string]: query.IBindVariable }|null);
    }

    /** Represents a BoundQuery. */
    class BoundQuery implements IBoundQuery {

        /**
         * Constructs a new BoundQuery.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IBoundQuery);

        /** BoundQuery sql. */
        public sql: string;

        /** BoundQuery bind_variables. */
        public bind_variables: { [k: string]: query.IBindVariable };

        /**
         * Creates a new BoundQuery instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BoundQuery instance
         */
        public static create(properties?: query.IBoundQuery): query.BoundQuery;

        /**
         * Encodes the specified BoundQuery message. Does not implicitly {@link query.BoundQuery.verify|verify} messages.
         * @param message BoundQuery message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IBoundQuery, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BoundQuery message, length delimited. Does not implicitly {@link query.BoundQuery.verify|verify} messages.
         * @param message BoundQuery message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IBoundQuery, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BoundQuery message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BoundQuery
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.BoundQuery;

        /**
         * Decodes a BoundQuery message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BoundQuery
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.BoundQuery;

        /**
         * Verifies a BoundQuery message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BoundQuery message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BoundQuery
         */
        public static fromObject(object: { [k: string]: any }): query.BoundQuery;

        /**
         * Creates a plain object from a BoundQuery message. Also converts values to other types if specified.
         * @param message BoundQuery
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.BoundQuery, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BoundQuery to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ExecuteOptions. */
    interface IExecuteOptions {

        /** ExecuteOptions included_fields */
        included_fields?: (query.ExecuteOptions.IncludedFields|null);

        /** ExecuteOptions client_found_rows */
        client_found_rows?: (boolean|null);

        /** ExecuteOptions workload */
        workload?: (query.ExecuteOptions.Workload|null);

        /** ExecuteOptions sql_select_limit */
        sql_select_limit?: (number|Long|null);

        /** ExecuteOptions transaction_isolation */
        transaction_isolation?: (query.ExecuteOptions.TransactionIsolation|null);

        /** ExecuteOptions skip_query_plan_cache */
        skip_query_plan_cache?: (boolean|null);

        /** ExecuteOptions planner_version */
        planner_version?: (query.ExecuteOptions.PlannerVersion|null);

        /** ExecuteOptions has_created_temp_tables */
        has_created_temp_tables?: (boolean|null);
    }

    /** Represents an ExecuteOptions. */
    class ExecuteOptions implements IExecuteOptions {

        /**
         * Constructs a new ExecuteOptions.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IExecuteOptions);

        /** ExecuteOptions included_fields. */
        public included_fields: query.ExecuteOptions.IncludedFields;

        /** ExecuteOptions client_found_rows. */
        public client_found_rows: boolean;

        /** ExecuteOptions workload. */
        public workload: query.ExecuteOptions.Workload;

        /** ExecuteOptions sql_select_limit. */
        public sql_select_limit: (number|Long);

        /** ExecuteOptions transaction_isolation. */
        public transaction_isolation: query.ExecuteOptions.TransactionIsolation;

        /** ExecuteOptions skip_query_plan_cache. */
        public skip_query_plan_cache: boolean;

        /** ExecuteOptions planner_version. */
        public planner_version: query.ExecuteOptions.PlannerVersion;

        /** ExecuteOptions has_created_temp_tables. */
        public has_created_temp_tables: boolean;

        /**
         * Creates a new ExecuteOptions instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ExecuteOptions instance
         */
        public static create(properties?: query.IExecuteOptions): query.ExecuteOptions;

        /**
         * Encodes the specified ExecuteOptions message. Does not implicitly {@link query.ExecuteOptions.verify|verify} messages.
         * @param message ExecuteOptions message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IExecuteOptions, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ExecuteOptions message, length delimited. Does not implicitly {@link query.ExecuteOptions.verify|verify} messages.
         * @param message ExecuteOptions message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IExecuteOptions, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ExecuteOptions message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ExecuteOptions
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.ExecuteOptions;

        /**
         * Decodes an ExecuteOptions message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ExecuteOptions
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.ExecuteOptions;

        /**
         * Verifies an ExecuteOptions message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ExecuteOptions message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ExecuteOptions
         */
        public static fromObject(object: { [k: string]: any }): query.ExecuteOptions;

        /**
         * Creates a plain object from an ExecuteOptions message. Also converts values to other types if specified.
         * @param message ExecuteOptions
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.ExecuteOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ExecuteOptions to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace ExecuteOptions {

        /** IncludedFields enum. */
        enum IncludedFields {
            TYPE_AND_NAME = 0,
            TYPE_ONLY = 1,
            ALL = 2
        }

        /** Workload enum. */
        enum Workload {
            UNSPECIFIED = 0,
            OLTP = 1,
            OLAP = 2,
            DBA = 3
        }

        /** TransactionIsolation enum. */
        enum TransactionIsolation {
            DEFAULT = 0,
            REPEATABLE_READ = 1,
            READ_COMMITTED = 2,
            READ_UNCOMMITTED = 3,
            SERIALIZABLE = 4,
            CONSISTENT_SNAPSHOT_READ_ONLY = 5,
            AUTOCOMMIT = 6
        }

        /** PlannerVersion enum. */
        enum PlannerVersion {
            DEFAULT_PLANNER = 0,
            V3 = 1,
            Gen4 = 2,
            Gen4Greedy = 3,
            Gen4Left2Right = 4,
            Gen4WithFallback = 5
        }
    }

    /** Properties of a Field. */
    interface IField {

        /** Field name */
        name?: (string|null);

        /** Field type */
        type?: (query.Type|null);

        /** Field table */
        table?: (string|null);

        /** Field org_table */
        org_table?: (string|null);

        /** Field database */
        database?: (string|null);

        /** Field org_name */
        org_name?: (string|null);

        /** Field column_length */
        column_length?: (number|null);

        /** Field charset */
        charset?: (number|null);

        /** Field decimals */
        decimals?: (number|null);

        /** Field flags */
        flags?: (number|null);

        /** Field column_type */
        column_type?: (string|null);
    }

    /** Represents a Field. */
    class Field implements IField {

        /**
         * Constructs a new Field.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IField);

        /** Field name. */
        public name: string;

        /** Field type. */
        public type: query.Type;

        /** Field table. */
        public table: string;

        /** Field org_table. */
        public org_table: string;

        /** Field database. */
        public database: string;

        /** Field org_name. */
        public org_name: string;

        /** Field column_length. */
        public column_length: number;

        /** Field charset. */
        public charset: number;

        /** Field decimals. */
        public decimals: number;

        /** Field flags. */
        public flags: number;

        /** Field column_type. */
        public column_type: string;

        /**
         * Creates a new Field instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Field instance
         */
        public static create(properties?: query.IField): query.Field;

        /**
         * Encodes the specified Field message. Does not implicitly {@link query.Field.verify|verify} messages.
         * @param message Field message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IField, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Field message, length delimited. Does not implicitly {@link query.Field.verify|verify} messages.
         * @param message Field message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IField, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Field message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Field
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.Field;

        /**
         * Decodes a Field message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Field
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.Field;

        /**
         * Verifies a Field message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Field message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Field
         */
        public static fromObject(object: { [k: string]: any }): query.Field;

        /**
         * Creates a plain object from a Field message. Also converts values to other types if specified.
         * @param message Field
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.Field, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Field to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Row. */
    interface IRow {

        /** Row lengths */
        lengths?: ((number|Long)[]|null);

        /** Row values */
        values?: (Uint8Array|null);
    }

    /** Represents a Row. */
    class Row implements IRow {

        /**
         * Constructs a new Row.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IRow);

        /** Row lengths. */
        public lengths: (number|Long)[];

        /** Row values. */
        public values: Uint8Array;

        /**
         * Creates a new Row instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Row instance
         */
        public static create(properties?: query.IRow): query.Row;

        /**
         * Encodes the specified Row message. Does not implicitly {@link query.Row.verify|verify} messages.
         * @param message Row message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IRow, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Row message, length delimited. Does not implicitly {@link query.Row.verify|verify} messages.
         * @param message Row message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IRow, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Row message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Row
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.Row;

        /**
         * Decodes a Row message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Row
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.Row;

        /**
         * Verifies a Row message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Row message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Row
         */
        public static fromObject(object: { [k: string]: any }): query.Row;

        /**
         * Creates a plain object from a Row message. Also converts values to other types if specified.
         * @param message Row
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.Row, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Row to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a QueryResult. */
    interface IQueryResult {

        /** QueryResult fields */
        fields?: (query.IField[]|null);

        /** QueryResult rows_affected */
        rows_affected?: (number|Long|null);

        /** QueryResult insert_id */
        insert_id?: (number|Long|null);

        /** QueryResult rows */
        rows?: (query.IRow[]|null);
    }

    /** Represents a QueryResult. */
    class QueryResult implements IQueryResult {

        /**
         * Constructs a new QueryResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IQueryResult);

        /** QueryResult fields. */
        public fields: query.IField[];

        /** QueryResult rows_affected. */
        public rows_affected: (number|Long);

        /** QueryResult insert_id. */
        public insert_id: (number|Long);

        /** QueryResult rows. */
        public rows: query.IRow[];

        /**
         * Creates a new QueryResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns QueryResult instance
         */
        public static create(properties?: query.IQueryResult): query.QueryResult;

        /**
         * Encodes the specified QueryResult message. Does not implicitly {@link query.QueryResult.verify|verify} messages.
         * @param message QueryResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IQueryResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified QueryResult message, length delimited. Does not implicitly {@link query.QueryResult.verify|verify} messages.
         * @param message QueryResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IQueryResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a QueryResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns QueryResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.QueryResult;

        /**
         * Decodes a QueryResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns QueryResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.QueryResult;

        /**
         * Verifies a QueryResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a QueryResult message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns QueryResult
         */
        public static fromObject(object: { [k: string]: any }): query.QueryResult;

        /**
         * Creates a plain object from a QueryResult message. Also converts values to other types if specified.
         * @param message QueryResult
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.QueryResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this QueryResult to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a QueryWarning. */
    interface IQueryWarning {

        /** QueryWarning code */
        code?: (number|null);

        /** QueryWarning message */
        message?: (string|null);
    }

    /** Represents a QueryWarning. */
    class QueryWarning implements IQueryWarning {

        /**
         * Constructs a new QueryWarning.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IQueryWarning);

        /** QueryWarning code. */
        public code: number;

        /** QueryWarning message. */
        public message: string;

        /**
         * Creates a new QueryWarning instance using the specified properties.
         * @param [properties] Properties to set
         * @returns QueryWarning instance
         */
        public static create(properties?: query.IQueryWarning): query.QueryWarning;

        /**
         * Encodes the specified QueryWarning message. Does not implicitly {@link query.QueryWarning.verify|verify} messages.
         * @param message QueryWarning message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IQueryWarning, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified QueryWarning message, length delimited. Does not implicitly {@link query.QueryWarning.verify|verify} messages.
         * @param message QueryWarning message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IQueryWarning, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a QueryWarning message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns QueryWarning
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.QueryWarning;

        /**
         * Decodes a QueryWarning message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns QueryWarning
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.QueryWarning;

        /**
         * Verifies a QueryWarning message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a QueryWarning message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns QueryWarning
         */
        public static fromObject(object: { [k: string]: any }): query.QueryWarning;

        /**
         * Creates a plain object from a QueryWarning message. Also converts values to other types if specified.
         * @param message QueryWarning
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.QueryWarning, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this QueryWarning to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a StreamEvent. */
    interface IStreamEvent {

        /** StreamEvent statements */
        statements?: (query.StreamEvent.IStatement[]|null);

        /** StreamEvent event_token */
        event_token?: (query.IEventToken|null);
    }

    /** Represents a StreamEvent. */
    class StreamEvent implements IStreamEvent {

        /**
         * Constructs a new StreamEvent.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IStreamEvent);

        /** StreamEvent statements. */
        public statements: query.StreamEvent.IStatement[];

        /** StreamEvent event_token. */
        public event_token?: (query.IEventToken|null);

        /**
         * Creates a new StreamEvent instance using the specified properties.
         * @param [properties] Properties to set
         * @returns StreamEvent instance
         */
        public static create(properties?: query.IStreamEvent): query.StreamEvent;

        /**
         * Encodes the specified StreamEvent message. Does not implicitly {@link query.StreamEvent.verify|verify} messages.
         * @param message StreamEvent message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IStreamEvent, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified StreamEvent message, length delimited. Does not implicitly {@link query.StreamEvent.verify|verify} messages.
         * @param message StreamEvent message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IStreamEvent, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a StreamEvent message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns StreamEvent
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.StreamEvent;

        /**
         * Decodes a StreamEvent message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns StreamEvent
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.StreamEvent;

        /**
         * Verifies a StreamEvent message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a StreamEvent message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns StreamEvent
         */
        public static fromObject(object: { [k: string]: any }): query.StreamEvent;

        /**
         * Creates a plain object from a StreamEvent message. Also converts values to other types if specified.
         * @param message StreamEvent
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.StreamEvent, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this StreamEvent to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace StreamEvent {

        /** Properties of a Statement. */
        interface IStatement {

            /** Statement category */
            category?: (query.StreamEvent.Statement.Category|null);

            /** Statement table_name */
            table_name?: (string|null);

            /** Statement primary_key_fields */
            primary_key_fields?: (query.IField[]|null);

            /** Statement primary_key_values */
            primary_key_values?: (query.IRow[]|null);

            /** Statement sql */
            sql?: (Uint8Array|null);
        }

        /** Represents a Statement. */
        class Statement implements IStatement {

            /**
             * Constructs a new Statement.
             * @param [properties] Properties to set
             */
            constructor(properties?: query.StreamEvent.IStatement);

            /** Statement category. */
            public category: query.StreamEvent.Statement.Category;

            /** Statement table_name. */
            public table_name: string;

            /** Statement primary_key_fields. */
            public primary_key_fields: query.IField[];

            /** Statement primary_key_values. */
            public primary_key_values: query.IRow[];

            /** Statement sql. */
            public sql: Uint8Array;

            /**
             * Creates a new Statement instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Statement instance
             */
            public static create(properties?: query.StreamEvent.IStatement): query.StreamEvent.Statement;

            /**
             * Encodes the specified Statement message. Does not implicitly {@link query.StreamEvent.Statement.verify|verify} messages.
             * @param message Statement message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: query.StreamEvent.IStatement, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Statement message, length delimited. Does not implicitly {@link query.StreamEvent.Statement.verify|verify} messages.
             * @param message Statement message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: query.StreamEvent.IStatement, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Statement message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Statement
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.StreamEvent.Statement;

            /**
             * Decodes a Statement message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Statement
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.StreamEvent.Statement;

            /**
             * Verifies a Statement message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Statement message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Statement
             */
            public static fromObject(object: { [k: string]: any }): query.StreamEvent.Statement;

            /**
             * Creates a plain object from a Statement message. Also converts values to other types if specified.
             * @param message Statement
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: query.StreamEvent.Statement, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Statement to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace Statement {

            /** Category enum. */
            enum Category {
                Error = 0,
                DML = 1,
                DDL = 2
            }
        }
    }

    /** Properties of an ExecuteRequest. */
    interface IExecuteRequest {

        /** ExecuteRequest effective_caller_id */
        effective_caller_id?: (vtrpc.ICallerID|null);

        /** ExecuteRequest immediate_caller_id */
        immediate_caller_id?: (query.IVTGateCallerID|null);

        /** ExecuteRequest target */
        target?: (query.ITarget|null);

        /** ExecuteRequest query */
        query?: (query.IBoundQuery|null);

        /** ExecuteRequest transaction_id */
        transaction_id?: (number|Long|null);

        /** ExecuteRequest options */
        options?: (query.IExecuteOptions|null);

        /** ExecuteRequest reserved_id */
        reserved_id?: (number|Long|null);
    }

    /** Represents an ExecuteRequest. */
    class ExecuteRequest implements IExecuteRequest {

        /**
         * Constructs a new ExecuteRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IExecuteRequest);

        /** ExecuteRequest effective_caller_id. */
        public effective_caller_id?: (vtrpc.ICallerID|null);

        /** ExecuteRequest immediate_caller_id. */
        public immediate_caller_id?: (query.IVTGateCallerID|null);

        /** ExecuteRequest target. */
        public target?: (query.ITarget|null);

        /** ExecuteRequest query. */
        public query?: (query.IBoundQuery|null);

        /** ExecuteRequest transaction_id. */
        public transaction_id: (number|Long);

        /** ExecuteRequest options. */
        public options?: (query.IExecuteOptions|null);

        /** ExecuteRequest reserved_id. */
        public reserved_id: (number|Long);

        /**
         * Creates a new ExecuteRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ExecuteRequest instance
         */
        public static create(properties?: query.IExecuteRequest): query.ExecuteRequest;

        /**
         * Encodes the specified ExecuteRequest message. Does not implicitly {@link query.ExecuteRequest.verify|verify} messages.
         * @param message ExecuteRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IExecuteRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ExecuteRequest message, length delimited. Does not implicitly {@link query.ExecuteRequest.verify|verify} messages.
         * @param message ExecuteRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IExecuteRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ExecuteRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ExecuteRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.ExecuteRequest;

        /**
         * Decodes an ExecuteRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ExecuteRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.ExecuteRequest;

        /**
         * Verifies an ExecuteRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ExecuteRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ExecuteRequest
         */
        public static fromObject(object: { [k: string]: any }): query.ExecuteRequest;

        /**
         * Creates a plain object from an ExecuteRequest message. Also converts values to other types if specified.
         * @param message ExecuteRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.ExecuteRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ExecuteRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ExecuteResponse. */
    interface IExecuteResponse {

        /** ExecuteResponse result */
        result?: (query.IQueryResult|null);
    }

    /** Represents an ExecuteResponse. */
    class ExecuteResponse implements IExecuteResponse {

        /**
         * Constructs a new ExecuteResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IExecuteResponse);

        /** ExecuteResponse result. */
        public result?: (query.IQueryResult|null);

        /**
         * Creates a new ExecuteResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ExecuteResponse instance
         */
        public static create(properties?: query.IExecuteResponse): query.ExecuteResponse;

        /**
         * Encodes the specified ExecuteResponse message. Does not implicitly {@link query.ExecuteResponse.verify|verify} messages.
         * @param message ExecuteResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IExecuteResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ExecuteResponse message, length delimited. Does not implicitly {@link query.ExecuteResponse.verify|verify} messages.
         * @param message ExecuteResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IExecuteResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ExecuteResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ExecuteResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.ExecuteResponse;

        /**
         * Decodes an ExecuteResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ExecuteResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.ExecuteResponse;

        /**
         * Verifies an ExecuteResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ExecuteResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ExecuteResponse
         */
        public static fromObject(object: { [k: string]: any }): query.ExecuteResponse;

        /**
         * Creates a plain object from an ExecuteResponse message. Also converts values to other types if specified.
         * @param message ExecuteResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.ExecuteResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ExecuteResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ResultWithError. */
    interface IResultWithError {

        /** ResultWithError error */
        error?: (vtrpc.IRPCError|null);

        /** ResultWithError result */
        result?: (query.IQueryResult|null);
    }

    /** Represents a ResultWithError. */
    class ResultWithError implements IResultWithError {

        /**
         * Constructs a new ResultWithError.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IResultWithError);

        /** ResultWithError error. */
        public error?: (vtrpc.IRPCError|null);

        /** ResultWithError result. */
        public result?: (query.IQueryResult|null);

        /**
         * Creates a new ResultWithError instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ResultWithError instance
         */
        public static create(properties?: query.IResultWithError): query.ResultWithError;

        /**
         * Encodes the specified ResultWithError message. Does not implicitly {@link query.ResultWithError.verify|verify} messages.
         * @param message ResultWithError message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IResultWithError, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ResultWithError message, length delimited. Does not implicitly {@link query.ResultWithError.verify|verify} messages.
         * @param message ResultWithError message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IResultWithError, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ResultWithError message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ResultWithError
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.ResultWithError;

        /**
         * Decodes a ResultWithError message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ResultWithError
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.ResultWithError;

        /**
         * Verifies a ResultWithError message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ResultWithError message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ResultWithError
         */
        public static fromObject(object: { [k: string]: any }): query.ResultWithError;

        /**
         * Creates a plain object from a ResultWithError message. Also converts values to other types if specified.
         * @param message ResultWithError
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.ResultWithError, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ResultWithError to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ExecuteBatchRequest. */
    interface IExecuteBatchRequest {

        /** ExecuteBatchRequest effective_caller_id */
        effective_caller_id?: (vtrpc.ICallerID|null);

        /** ExecuteBatchRequest immediate_caller_id */
        immediate_caller_id?: (query.IVTGateCallerID|null);

        /** ExecuteBatchRequest target */
        target?: (query.ITarget|null);

        /** ExecuteBatchRequest queries */
        queries?: (query.IBoundQuery[]|null);

        /** ExecuteBatchRequest as_transaction */
        as_transaction?: (boolean|null);

        /** ExecuteBatchRequest transaction_id */
        transaction_id?: (number|Long|null);

        /** ExecuteBatchRequest options */
        options?: (query.IExecuteOptions|null);
    }

    /** Represents an ExecuteBatchRequest. */
    class ExecuteBatchRequest implements IExecuteBatchRequest {

        /**
         * Constructs a new ExecuteBatchRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IExecuteBatchRequest);

        /** ExecuteBatchRequest effective_caller_id. */
        public effective_caller_id?: (vtrpc.ICallerID|null);

        /** ExecuteBatchRequest immediate_caller_id. */
        public immediate_caller_id?: (query.IVTGateCallerID|null);

        /** ExecuteBatchRequest target. */
        public target?: (query.ITarget|null);

        /** ExecuteBatchRequest queries. */
        public queries: query.IBoundQuery[];

        /** ExecuteBatchRequest as_transaction. */
        public as_transaction: boolean;

        /** ExecuteBatchRequest transaction_id. */
        public transaction_id: (number|Long);

        /** ExecuteBatchRequest options. */
        public options?: (query.IExecuteOptions|null);

        /**
         * Creates a new ExecuteBatchRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ExecuteBatchRequest instance
         */
        public static create(properties?: query.IExecuteBatchRequest): query.ExecuteBatchRequest;

        /**
         * Encodes the specified ExecuteBatchRequest message. Does not implicitly {@link query.ExecuteBatchRequest.verify|verify} messages.
         * @param message ExecuteBatchRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IExecuteBatchRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ExecuteBatchRequest message, length delimited. Does not implicitly {@link query.ExecuteBatchRequest.verify|verify} messages.
         * @param message ExecuteBatchRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IExecuteBatchRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ExecuteBatchRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ExecuteBatchRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.ExecuteBatchRequest;

        /**
         * Decodes an ExecuteBatchRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ExecuteBatchRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.ExecuteBatchRequest;

        /**
         * Verifies an ExecuteBatchRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ExecuteBatchRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ExecuteBatchRequest
         */
        public static fromObject(object: { [k: string]: any }): query.ExecuteBatchRequest;

        /**
         * Creates a plain object from an ExecuteBatchRequest message. Also converts values to other types if specified.
         * @param message ExecuteBatchRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.ExecuteBatchRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ExecuteBatchRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ExecuteBatchResponse. */
    interface IExecuteBatchResponse {

        /** ExecuteBatchResponse results */
        results?: (query.IQueryResult[]|null);
    }

    /** Represents an ExecuteBatchResponse. */
    class ExecuteBatchResponse implements IExecuteBatchResponse {

        /**
         * Constructs a new ExecuteBatchResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IExecuteBatchResponse);

        /** ExecuteBatchResponse results. */
        public results: query.IQueryResult[];

        /**
         * Creates a new ExecuteBatchResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ExecuteBatchResponse instance
         */
        public static create(properties?: query.IExecuteBatchResponse): query.ExecuteBatchResponse;

        /**
         * Encodes the specified ExecuteBatchResponse message. Does not implicitly {@link query.ExecuteBatchResponse.verify|verify} messages.
         * @param message ExecuteBatchResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IExecuteBatchResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ExecuteBatchResponse message, length delimited. Does not implicitly {@link query.ExecuteBatchResponse.verify|verify} messages.
         * @param message ExecuteBatchResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IExecuteBatchResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ExecuteBatchResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ExecuteBatchResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.ExecuteBatchResponse;

        /**
         * Decodes an ExecuteBatchResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ExecuteBatchResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.ExecuteBatchResponse;

        /**
         * Verifies an ExecuteBatchResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ExecuteBatchResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ExecuteBatchResponse
         */
        public static fromObject(object: { [k: string]: any }): query.ExecuteBatchResponse;

        /**
         * Creates a plain object from an ExecuteBatchResponse message. Also converts values to other types if specified.
         * @param message ExecuteBatchResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.ExecuteBatchResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ExecuteBatchResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a StreamExecuteRequest. */
    interface IStreamExecuteRequest {

        /** StreamExecuteRequest effective_caller_id */
        effective_caller_id?: (vtrpc.ICallerID|null);

        /** StreamExecuteRequest immediate_caller_id */
        immediate_caller_id?: (query.IVTGateCallerID|null);

        /** StreamExecuteRequest target */
        target?: (query.ITarget|null);

        /** StreamExecuteRequest query */
        query?: (query.IBoundQuery|null);

        /** StreamExecuteRequest options */
        options?: (query.IExecuteOptions|null);

        /** StreamExecuteRequest transaction_id */
        transaction_id?: (number|Long|null);
    }

    /** Represents a StreamExecuteRequest. */
    class StreamExecuteRequest implements IStreamExecuteRequest {

        /**
         * Constructs a new StreamExecuteRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IStreamExecuteRequest);

        /** StreamExecuteRequest effective_caller_id. */
        public effective_caller_id?: (vtrpc.ICallerID|null);

        /** StreamExecuteRequest immediate_caller_id. */
        public immediate_caller_id?: (query.IVTGateCallerID|null);

        /** StreamExecuteRequest target. */
        public target?: (query.ITarget|null);

        /** StreamExecuteRequest query. */
        public query?: (query.IBoundQuery|null);

        /** StreamExecuteRequest options. */
        public options?: (query.IExecuteOptions|null);

        /** StreamExecuteRequest transaction_id. */
        public transaction_id: (number|Long);

        /**
         * Creates a new StreamExecuteRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns StreamExecuteRequest instance
         */
        public static create(properties?: query.IStreamExecuteRequest): query.StreamExecuteRequest;

        /**
         * Encodes the specified StreamExecuteRequest message. Does not implicitly {@link query.StreamExecuteRequest.verify|verify} messages.
         * @param message StreamExecuteRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IStreamExecuteRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified StreamExecuteRequest message, length delimited. Does not implicitly {@link query.StreamExecuteRequest.verify|verify} messages.
         * @param message StreamExecuteRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IStreamExecuteRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a StreamExecuteRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns StreamExecuteRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.StreamExecuteRequest;

        /**
         * Decodes a StreamExecuteRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns StreamExecuteRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.StreamExecuteRequest;

        /**
         * Verifies a StreamExecuteRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a StreamExecuteRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns StreamExecuteRequest
         */
        public static fromObject(object: { [k: string]: any }): query.StreamExecuteRequest;

        /**
         * Creates a plain object from a StreamExecuteRequest message. Also converts values to other types if specified.
         * @param message StreamExecuteRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.StreamExecuteRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this StreamExecuteRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a StreamExecuteResponse. */
    interface IStreamExecuteResponse {

        /** StreamExecuteResponse result */
        result?: (query.IQueryResult|null);
    }

    /** Represents a StreamExecuteResponse. */
    class StreamExecuteResponse implements IStreamExecuteResponse {

        /**
         * Constructs a new StreamExecuteResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IStreamExecuteResponse);

        /** StreamExecuteResponse result. */
        public result?: (query.IQueryResult|null);

        /**
         * Creates a new StreamExecuteResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns StreamExecuteResponse instance
         */
        public static create(properties?: query.IStreamExecuteResponse): query.StreamExecuteResponse;

        /**
         * Encodes the specified StreamExecuteResponse message. Does not implicitly {@link query.StreamExecuteResponse.verify|verify} messages.
         * @param message StreamExecuteResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IStreamExecuteResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified StreamExecuteResponse message, length delimited. Does not implicitly {@link query.StreamExecuteResponse.verify|verify} messages.
         * @param message StreamExecuteResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IStreamExecuteResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a StreamExecuteResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns StreamExecuteResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.StreamExecuteResponse;

        /**
         * Decodes a StreamExecuteResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns StreamExecuteResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.StreamExecuteResponse;

        /**
         * Verifies a StreamExecuteResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a StreamExecuteResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns StreamExecuteResponse
         */
        public static fromObject(object: { [k: string]: any }): query.StreamExecuteResponse;

        /**
         * Creates a plain object from a StreamExecuteResponse message. Also converts values to other types if specified.
         * @param message StreamExecuteResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.StreamExecuteResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this StreamExecuteResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BeginRequest. */
    interface IBeginRequest {

        /** BeginRequest effective_caller_id */
        effective_caller_id?: (vtrpc.ICallerID|null);

        /** BeginRequest immediate_caller_id */
        immediate_caller_id?: (query.IVTGateCallerID|null);

        /** BeginRequest target */
        target?: (query.ITarget|null);

        /** BeginRequest options */
        options?: (query.IExecuteOptions|null);
    }

    /** Represents a BeginRequest. */
    class BeginRequest implements IBeginRequest {

        /**
         * Constructs a new BeginRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IBeginRequest);

        /** BeginRequest effective_caller_id. */
        public effective_caller_id?: (vtrpc.ICallerID|null);

        /** BeginRequest immediate_caller_id. */
        public immediate_caller_id?: (query.IVTGateCallerID|null);

        /** BeginRequest target. */
        public target?: (query.ITarget|null);

        /** BeginRequest options. */
        public options?: (query.IExecuteOptions|null);

        /**
         * Creates a new BeginRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BeginRequest instance
         */
        public static create(properties?: query.IBeginRequest): query.BeginRequest;

        /**
         * Encodes the specified BeginRequest message. Does not implicitly {@link query.BeginRequest.verify|verify} messages.
         * @param message BeginRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IBeginRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BeginRequest message, length delimited. Does not implicitly {@link query.BeginRequest.verify|verify} messages.
         * @param message BeginRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IBeginRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BeginRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BeginRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.BeginRequest;

        /**
         * Decodes a BeginRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BeginRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.BeginRequest;

        /**
         * Verifies a BeginRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BeginRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BeginRequest
         */
        public static fromObject(object: { [k: string]: any }): query.BeginRequest;

        /**
         * Creates a plain object from a BeginRequest message. Also converts values to other types if specified.
         * @param message BeginRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.BeginRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BeginRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BeginResponse. */
    interface IBeginResponse {

        /** BeginResponse transaction_id */
        transaction_id?: (number|Long|null);

        /** BeginResponse tablet_alias */
        tablet_alias?: (topodata.ITabletAlias|null);
    }

    /** Represents a BeginResponse. */
    class BeginResponse implements IBeginResponse {

        /**
         * Constructs a new BeginResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IBeginResponse);

        /** BeginResponse transaction_id. */
        public transaction_id: (number|Long);

        /** BeginResponse tablet_alias. */
        public tablet_alias?: (topodata.ITabletAlias|null);

        /**
         * Creates a new BeginResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BeginResponse instance
         */
        public static create(properties?: query.IBeginResponse): query.BeginResponse;

        /**
         * Encodes the specified BeginResponse message. Does not implicitly {@link query.BeginResponse.verify|verify} messages.
         * @param message BeginResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IBeginResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BeginResponse message, length delimited. Does not implicitly {@link query.BeginResponse.verify|verify} messages.
         * @param message BeginResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IBeginResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BeginResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BeginResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.BeginResponse;

        /**
         * Decodes a BeginResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BeginResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.BeginResponse;

        /**
         * Verifies a BeginResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BeginResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BeginResponse
         */
        public static fromObject(object: { [k: string]: any }): query.BeginResponse;

        /**
         * Creates a plain object from a BeginResponse message. Also converts values to other types if specified.
         * @param message BeginResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.BeginResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BeginResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CommitRequest. */
    interface ICommitRequest {

        /** CommitRequest effective_caller_id */
        effective_caller_id?: (vtrpc.ICallerID|null);

        /** CommitRequest immediate_caller_id */
        immediate_caller_id?: (query.IVTGateCallerID|null);

        /** CommitRequest target */
        target?: (query.ITarget|null);

        /** CommitRequest transaction_id */
        transaction_id?: (number|Long|null);
    }

    /** Represents a CommitRequest. */
    class CommitRequest implements ICommitRequest {

        /**
         * Constructs a new CommitRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.ICommitRequest);

        /** CommitRequest effective_caller_id. */
        public effective_caller_id?: (vtrpc.ICallerID|null);

        /** CommitRequest immediate_caller_id. */
        public immediate_caller_id?: (query.IVTGateCallerID|null);

        /** CommitRequest target. */
        public target?: (query.ITarget|null);

        /** CommitRequest transaction_id. */
        public transaction_id: (number|Long);

        /**
         * Creates a new CommitRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CommitRequest instance
         */
        public static create(properties?: query.ICommitRequest): query.CommitRequest;

        /**
         * Encodes the specified CommitRequest message. Does not implicitly {@link query.CommitRequest.verify|verify} messages.
         * @param message CommitRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.ICommitRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CommitRequest message, length delimited. Does not implicitly {@link query.CommitRequest.verify|verify} messages.
         * @param message CommitRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.ICommitRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CommitRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CommitRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.CommitRequest;

        /**
         * Decodes a CommitRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CommitRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.CommitRequest;

        /**
         * Verifies a CommitRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CommitRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CommitRequest
         */
        public static fromObject(object: { [k: string]: any }): query.CommitRequest;

        /**
         * Creates a plain object from a CommitRequest message. Also converts values to other types if specified.
         * @param message CommitRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.CommitRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CommitRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CommitResponse. */
    interface ICommitResponse {

        /** CommitResponse reserved_id */
        reserved_id?: (number|Long|null);
    }

    /** Represents a CommitResponse. */
    class CommitResponse implements ICommitResponse {

        /**
         * Constructs a new CommitResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.ICommitResponse);

        /** CommitResponse reserved_id. */
        public reserved_id: (number|Long);

        /**
         * Creates a new CommitResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CommitResponse instance
         */
        public static create(properties?: query.ICommitResponse): query.CommitResponse;

        /**
         * Encodes the specified CommitResponse message. Does not implicitly {@link query.CommitResponse.verify|verify} messages.
         * @param message CommitResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.ICommitResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CommitResponse message, length delimited. Does not implicitly {@link query.CommitResponse.verify|verify} messages.
         * @param message CommitResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.ICommitResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CommitResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CommitResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.CommitResponse;

        /**
         * Decodes a CommitResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CommitResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.CommitResponse;

        /**
         * Verifies a CommitResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CommitResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CommitResponse
         */
        public static fromObject(object: { [k: string]: any }): query.CommitResponse;

        /**
         * Creates a plain object from a CommitResponse message. Also converts values to other types if specified.
         * @param message CommitResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.CommitResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CommitResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RollbackRequest. */
    interface IRollbackRequest {

        /** RollbackRequest effective_caller_id */
        effective_caller_id?: (vtrpc.ICallerID|null);

        /** RollbackRequest immediate_caller_id */
        immediate_caller_id?: (query.IVTGateCallerID|null);

        /** RollbackRequest target */
        target?: (query.ITarget|null);

        /** RollbackRequest transaction_id */
        transaction_id?: (number|Long|null);
    }

    /** Represents a RollbackRequest. */
    class RollbackRequest implements IRollbackRequest {

        /**
         * Constructs a new RollbackRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IRollbackRequest);

        /** RollbackRequest effective_caller_id. */
        public effective_caller_id?: (vtrpc.ICallerID|null);

        /** RollbackRequest immediate_caller_id. */
        public immediate_caller_id?: (query.IVTGateCallerID|null);

        /** RollbackRequest target. */
        public target?: (query.ITarget|null);

        /** RollbackRequest transaction_id. */
        public transaction_id: (number|Long);

        /**
         * Creates a new RollbackRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RollbackRequest instance
         */
        public static create(properties?: query.IRollbackRequest): query.RollbackRequest;

        /**
         * Encodes the specified RollbackRequest message. Does not implicitly {@link query.RollbackRequest.verify|verify} messages.
         * @param message RollbackRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IRollbackRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RollbackRequest message, length delimited. Does not implicitly {@link query.RollbackRequest.verify|verify} messages.
         * @param message RollbackRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IRollbackRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RollbackRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RollbackRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.RollbackRequest;

        /**
         * Decodes a RollbackRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RollbackRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.RollbackRequest;

        /**
         * Verifies a RollbackRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RollbackRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RollbackRequest
         */
        public static fromObject(object: { [k: string]: any }): query.RollbackRequest;

        /**
         * Creates a plain object from a RollbackRequest message. Also converts values to other types if specified.
         * @param message RollbackRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.RollbackRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RollbackRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RollbackResponse. */
    interface IRollbackResponse {

        /** RollbackResponse reserved_id */
        reserved_id?: (number|Long|null);
    }

    /** Represents a RollbackResponse. */
    class RollbackResponse implements IRollbackResponse {

        /**
         * Constructs a new RollbackResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IRollbackResponse);

        /** RollbackResponse reserved_id. */
        public reserved_id: (number|Long);

        /**
         * Creates a new RollbackResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RollbackResponse instance
         */
        public static create(properties?: query.IRollbackResponse): query.RollbackResponse;

        /**
         * Encodes the specified RollbackResponse message. Does not implicitly {@link query.RollbackResponse.verify|verify} messages.
         * @param message RollbackResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IRollbackResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RollbackResponse message, length delimited. Does not implicitly {@link query.RollbackResponse.verify|verify} messages.
         * @param message RollbackResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IRollbackResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RollbackResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RollbackResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.RollbackResponse;

        /**
         * Decodes a RollbackResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RollbackResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.RollbackResponse;

        /**
         * Verifies a RollbackResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RollbackResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RollbackResponse
         */
        public static fromObject(object: { [k: string]: any }): query.RollbackResponse;

        /**
         * Creates a plain object from a RollbackResponse message. Also converts values to other types if specified.
         * @param message RollbackResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.RollbackResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RollbackResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PrepareRequest. */
    interface IPrepareRequest {

        /** PrepareRequest effective_caller_id */
        effective_caller_id?: (vtrpc.ICallerID|null);

        /** PrepareRequest immediate_caller_id */
        immediate_caller_id?: (query.IVTGateCallerID|null);

        /** PrepareRequest target */
        target?: (query.ITarget|null);

        /** PrepareRequest transaction_id */
        transaction_id?: (number|Long|null);

        /** PrepareRequest dtid */
        dtid?: (string|null);
    }

    /** Represents a PrepareRequest. */
    class PrepareRequest implements IPrepareRequest {

        /**
         * Constructs a new PrepareRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IPrepareRequest);

        /** PrepareRequest effective_caller_id. */
        public effective_caller_id?: (vtrpc.ICallerID|null);

        /** PrepareRequest immediate_caller_id. */
        public immediate_caller_id?: (query.IVTGateCallerID|null);

        /** PrepareRequest target. */
        public target?: (query.ITarget|null);

        /** PrepareRequest transaction_id. */
        public transaction_id: (number|Long);

        /** PrepareRequest dtid. */
        public dtid: string;

        /**
         * Creates a new PrepareRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PrepareRequest instance
         */
        public static create(properties?: query.IPrepareRequest): query.PrepareRequest;

        /**
         * Encodes the specified PrepareRequest message. Does not implicitly {@link query.PrepareRequest.verify|verify} messages.
         * @param message PrepareRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IPrepareRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PrepareRequest message, length delimited. Does not implicitly {@link query.PrepareRequest.verify|verify} messages.
         * @param message PrepareRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IPrepareRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PrepareRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PrepareRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.PrepareRequest;

        /**
         * Decodes a PrepareRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PrepareRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.PrepareRequest;

        /**
         * Verifies a PrepareRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PrepareRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PrepareRequest
         */
        public static fromObject(object: { [k: string]: any }): query.PrepareRequest;

        /**
         * Creates a plain object from a PrepareRequest message. Also converts values to other types if specified.
         * @param message PrepareRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.PrepareRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PrepareRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PrepareResponse. */
    interface IPrepareResponse {
    }

    /** Represents a PrepareResponse. */
    class PrepareResponse implements IPrepareResponse {

        /**
         * Constructs a new PrepareResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IPrepareResponse);

        /**
         * Creates a new PrepareResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PrepareResponse instance
         */
        public static create(properties?: query.IPrepareResponse): query.PrepareResponse;

        /**
         * Encodes the specified PrepareResponse message. Does not implicitly {@link query.PrepareResponse.verify|verify} messages.
         * @param message PrepareResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IPrepareResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PrepareResponse message, length delimited. Does not implicitly {@link query.PrepareResponse.verify|verify} messages.
         * @param message PrepareResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IPrepareResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PrepareResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PrepareResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.PrepareResponse;

        /**
         * Decodes a PrepareResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PrepareResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.PrepareResponse;

        /**
         * Verifies a PrepareResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PrepareResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PrepareResponse
         */
        public static fromObject(object: { [k: string]: any }): query.PrepareResponse;

        /**
         * Creates a plain object from a PrepareResponse message. Also converts values to other types if specified.
         * @param message PrepareResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.PrepareResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PrepareResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CommitPreparedRequest. */
    interface ICommitPreparedRequest {

        /** CommitPreparedRequest effective_caller_id */
        effective_caller_id?: (vtrpc.ICallerID|null);

        /** CommitPreparedRequest immediate_caller_id */
        immediate_caller_id?: (query.IVTGateCallerID|null);

        /** CommitPreparedRequest target */
        target?: (query.ITarget|null);

        /** CommitPreparedRequest dtid */
        dtid?: (string|null);
    }

    /** Represents a CommitPreparedRequest. */
    class CommitPreparedRequest implements ICommitPreparedRequest {

        /**
         * Constructs a new CommitPreparedRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.ICommitPreparedRequest);

        /** CommitPreparedRequest effective_caller_id. */
        public effective_caller_id?: (vtrpc.ICallerID|null);

        /** CommitPreparedRequest immediate_caller_id. */
        public immediate_caller_id?: (query.IVTGateCallerID|null);

        /** CommitPreparedRequest target. */
        public target?: (query.ITarget|null);

        /** CommitPreparedRequest dtid. */
        public dtid: string;

        /**
         * Creates a new CommitPreparedRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CommitPreparedRequest instance
         */
        public static create(properties?: query.ICommitPreparedRequest): query.CommitPreparedRequest;

        /**
         * Encodes the specified CommitPreparedRequest message. Does not implicitly {@link query.CommitPreparedRequest.verify|verify} messages.
         * @param message CommitPreparedRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.ICommitPreparedRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CommitPreparedRequest message, length delimited. Does not implicitly {@link query.CommitPreparedRequest.verify|verify} messages.
         * @param message CommitPreparedRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.ICommitPreparedRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CommitPreparedRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CommitPreparedRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.CommitPreparedRequest;

        /**
         * Decodes a CommitPreparedRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CommitPreparedRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.CommitPreparedRequest;

        /**
         * Verifies a CommitPreparedRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CommitPreparedRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CommitPreparedRequest
         */
        public static fromObject(object: { [k: string]: any }): query.CommitPreparedRequest;

        /**
         * Creates a plain object from a CommitPreparedRequest message. Also converts values to other types if specified.
         * @param message CommitPreparedRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.CommitPreparedRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CommitPreparedRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CommitPreparedResponse. */
    interface ICommitPreparedResponse {
    }

    /** Represents a CommitPreparedResponse. */
    class CommitPreparedResponse implements ICommitPreparedResponse {

        /**
         * Constructs a new CommitPreparedResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.ICommitPreparedResponse);

        /**
         * Creates a new CommitPreparedResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CommitPreparedResponse instance
         */
        public static create(properties?: query.ICommitPreparedResponse): query.CommitPreparedResponse;

        /**
         * Encodes the specified CommitPreparedResponse message. Does not implicitly {@link query.CommitPreparedResponse.verify|verify} messages.
         * @param message CommitPreparedResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.ICommitPreparedResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CommitPreparedResponse message, length delimited. Does not implicitly {@link query.CommitPreparedResponse.verify|verify} messages.
         * @param message CommitPreparedResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.ICommitPreparedResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CommitPreparedResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CommitPreparedResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.CommitPreparedResponse;

        /**
         * Decodes a CommitPreparedResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CommitPreparedResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.CommitPreparedResponse;

        /**
         * Verifies a CommitPreparedResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CommitPreparedResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CommitPreparedResponse
         */
        public static fromObject(object: { [k: string]: any }): query.CommitPreparedResponse;

        /**
         * Creates a plain object from a CommitPreparedResponse message. Also converts values to other types if specified.
         * @param message CommitPreparedResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.CommitPreparedResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CommitPreparedResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RollbackPreparedRequest. */
    interface IRollbackPreparedRequest {

        /** RollbackPreparedRequest effective_caller_id */
        effective_caller_id?: (vtrpc.ICallerID|null);

        /** RollbackPreparedRequest immediate_caller_id */
        immediate_caller_id?: (query.IVTGateCallerID|null);

        /** RollbackPreparedRequest target */
        target?: (query.ITarget|null);

        /** RollbackPreparedRequest transaction_id */
        transaction_id?: (number|Long|null);

        /** RollbackPreparedRequest dtid */
        dtid?: (string|null);
    }

    /** Represents a RollbackPreparedRequest. */
    class RollbackPreparedRequest implements IRollbackPreparedRequest {

        /**
         * Constructs a new RollbackPreparedRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IRollbackPreparedRequest);

        /** RollbackPreparedRequest effective_caller_id. */
        public effective_caller_id?: (vtrpc.ICallerID|null);

        /** RollbackPreparedRequest immediate_caller_id. */
        public immediate_caller_id?: (query.IVTGateCallerID|null);

        /** RollbackPreparedRequest target. */
        public target?: (query.ITarget|null);

        /** RollbackPreparedRequest transaction_id. */
        public transaction_id: (number|Long);

        /** RollbackPreparedRequest dtid. */
        public dtid: string;

        /**
         * Creates a new RollbackPreparedRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RollbackPreparedRequest instance
         */
        public static create(properties?: query.IRollbackPreparedRequest): query.RollbackPreparedRequest;

        /**
         * Encodes the specified RollbackPreparedRequest message. Does not implicitly {@link query.RollbackPreparedRequest.verify|verify} messages.
         * @param message RollbackPreparedRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IRollbackPreparedRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RollbackPreparedRequest message, length delimited. Does not implicitly {@link query.RollbackPreparedRequest.verify|verify} messages.
         * @param message RollbackPreparedRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IRollbackPreparedRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RollbackPreparedRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RollbackPreparedRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.RollbackPreparedRequest;

        /**
         * Decodes a RollbackPreparedRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RollbackPreparedRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.RollbackPreparedRequest;

        /**
         * Verifies a RollbackPreparedRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RollbackPreparedRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RollbackPreparedRequest
         */
        public static fromObject(object: { [k: string]: any }): query.RollbackPreparedRequest;

        /**
         * Creates a plain object from a RollbackPreparedRequest message. Also converts values to other types if specified.
         * @param message RollbackPreparedRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.RollbackPreparedRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RollbackPreparedRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RollbackPreparedResponse. */
    interface IRollbackPreparedResponse {
    }

    /** Represents a RollbackPreparedResponse. */
    class RollbackPreparedResponse implements IRollbackPreparedResponse {

        /**
         * Constructs a new RollbackPreparedResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IRollbackPreparedResponse);

        /**
         * Creates a new RollbackPreparedResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RollbackPreparedResponse instance
         */
        public static create(properties?: query.IRollbackPreparedResponse): query.RollbackPreparedResponse;

        /**
         * Encodes the specified RollbackPreparedResponse message. Does not implicitly {@link query.RollbackPreparedResponse.verify|verify} messages.
         * @param message RollbackPreparedResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IRollbackPreparedResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RollbackPreparedResponse message, length delimited. Does not implicitly {@link query.RollbackPreparedResponse.verify|verify} messages.
         * @param message RollbackPreparedResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IRollbackPreparedResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RollbackPreparedResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RollbackPreparedResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.RollbackPreparedResponse;

        /**
         * Decodes a RollbackPreparedResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RollbackPreparedResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.RollbackPreparedResponse;

        /**
         * Verifies a RollbackPreparedResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RollbackPreparedResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RollbackPreparedResponse
         */
        public static fromObject(object: { [k: string]: any }): query.RollbackPreparedResponse;

        /**
         * Creates a plain object from a RollbackPreparedResponse message. Also converts values to other types if specified.
         * @param message RollbackPreparedResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.RollbackPreparedResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RollbackPreparedResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CreateTransactionRequest. */
    interface ICreateTransactionRequest {

        /** CreateTransactionRequest effective_caller_id */
        effective_caller_id?: (vtrpc.ICallerID|null);

        /** CreateTransactionRequest immediate_caller_id */
        immediate_caller_id?: (query.IVTGateCallerID|null);

        /** CreateTransactionRequest target */
        target?: (query.ITarget|null);

        /** CreateTransactionRequest dtid */
        dtid?: (string|null);

        /** CreateTransactionRequest participants */
        participants?: (query.ITarget[]|null);
    }

    /** Represents a CreateTransactionRequest. */
    class CreateTransactionRequest implements ICreateTransactionRequest {

        /**
         * Constructs a new CreateTransactionRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.ICreateTransactionRequest);

        /** CreateTransactionRequest effective_caller_id. */
        public effective_caller_id?: (vtrpc.ICallerID|null);

        /** CreateTransactionRequest immediate_caller_id. */
        public immediate_caller_id?: (query.IVTGateCallerID|null);

        /** CreateTransactionRequest target. */
        public target?: (query.ITarget|null);

        /** CreateTransactionRequest dtid. */
        public dtid: string;

        /** CreateTransactionRequest participants. */
        public participants: query.ITarget[];

        /**
         * Creates a new CreateTransactionRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CreateTransactionRequest instance
         */
        public static create(properties?: query.ICreateTransactionRequest): query.CreateTransactionRequest;

        /**
         * Encodes the specified CreateTransactionRequest message. Does not implicitly {@link query.CreateTransactionRequest.verify|verify} messages.
         * @param message CreateTransactionRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.ICreateTransactionRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CreateTransactionRequest message, length delimited. Does not implicitly {@link query.CreateTransactionRequest.verify|verify} messages.
         * @param message CreateTransactionRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.ICreateTransactionRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CreateTransactionRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CreateTransactionRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.CreateTransactionRequest;

        /**
         * Decodes a CreateTransactionRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CreateTransactionRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.CreateTransactionRequest;

        /**
         * Verifies a CreateTransactionRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CreateTransactionRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CreateTransactionRequest
         */
        public static fromObject(object: { [k: string]: any }): query.CreateTransactionRequest;

        /**
         * Creates a plain object from a CreateTransactionRequest message. Also converts values to other types if specified.
         * @param message CreateTransactionRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.CreateTransactionRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CreateTransactionRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CreateTransactionResponse. */
    interface ICreateTransactionResponse {
    }

    /** Represents a CreateTransactionResponse. */
    class CreateTransactionResponse implements ICreateTransactionResponse {

        /**
         * Constructs a new CreateTransactionResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.ICreateTransactionResponse);

        /**
         * Creates a new CreateTransactionResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CreateTransactionResponse instance
         */
        public static create(properties?: query.ICreateTransactionResponse): query.CreateTransactionResponse;

        /**
         * Encodes the specified CreateTransactionResponse message. Does not implicitly {@link query.CreateTransactionResponse.verify|verify} messages.
         * @param message CreateTransactionResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.ICreateTransactionResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CreateTransactionResponse message, length delimited. Does not implicitly {@link query.CreateTransactionResponse.verify|verify} messages.
         * @param message CreateTransactionResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.ICreateTransactionResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CreateTransactionResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CreateTransactionResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.CreateTransactionResponse;

        /**
         * Decodes a CreateTransactionResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CreateTransactionResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.CreateTransactionResponse;

        /**
         * Verifies a CreateTransactionResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CreateTransactionResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CreateTransactionResponse
         */
        public static fromObject(object: { [k: string]: any }): query.CreateTransactionResponse;

        /**
         * Creates a plain object from a CreateTransactionResponse message. Also converts values to other types if specified.
         * @param message CreateTransactionResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.CreateTransactionResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CreateTransactionResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a StartCommitRequest. */
    interface IStartCommitRequest {

        /** StartCommitRequest effective_caller_id */
        effective_caller_id?: (vtrpc.ICallerID|null);

        /** StartCommitRequest immediate_caller_id */
        immediate_caller_id?: (query.IVTGateCallerID|null);

        /** StartCommitRequest target */
        target?: (query.ITarget|null);

        /** StartCommitRequest transaction_id */
        transaction_id?: (number|Long|null);

        /** StartCommitRequest dtid */
        dtid?: (string|null);
    }

    /** Represents a StartCommitRequest. */
    class StartCommitRequest implements IStartCommitRequest {

        /**
         * Constructs a new StartCommitRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IStartCommitRequest);

        /** StartCommitRequest effective_caller_id. */
        public effective_caller_id?: (vtrpc.ICallerID|null);

        /** StartCommitRequest immediate_caller_id. */
        public immediate_caller_id?: (query.IVTGateCallerID|null);

        /** StartCommitRequest target. */
        public target?: (query.ITarget|null);

        /** StartCommitRequest transaction_id. */
        public transaction_id: (number|Long);

        /** StartCommitRequest dtid. */
        public dtid: string;

        /**
         * Creates a new StartCommitRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns StartCommitRequest instance
         */
        public static create(properties?: query.IStartCommitRequest): query.StartCommitRequest;

        /**
         * Encodes the specified StartCommitRequest message. Does not implicitly {@link query.StartCommitRequest.verify|verify} messages.
         * @param message StartCommitRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IStartCommitRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified StartCommitRequest message, length delimited. Does not implicitly {@link query.StartCommitRequest.verify|verify} messages.
         * @param message StartCommitRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IStartCommitRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a StartCommitRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns StartCommitRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.StartCommitRequest;

        /**
         * Decodes a StartCommitRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns StartCommitRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.StartCommitRequest;

        /**
         * Verifies a StartCommitRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a StartCommitRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns StartCommitRequest
         */
        public static fromObject(object: { [k: string]: any }): query.StartCommitRequest;

        /**
         * Creates a plain object from a StartCommitRequest message. Also converts values to other types if specified.
         * @param message StartCommitRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.StartCommitRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this StartCommitRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a StartCommitResponse. */
    interface IStartCommitResponse {
    }

    /** Represents a StartCommitResponse. */
    class StartCommitResponse implements IStartCommitResponse {

        /**
         * Constructs a new StartCommitResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IStartCommitResponse);

        /**
         * Creates a new StartCommitResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns StartCommitResponse instance
         */
        public static create(properties?: query.IStartCommitResponse): query.StartCommitResponse;

        /**
         * Encodes the specified StartCommitResponse message. Does not implicitly {@link query.StartCommitResponse.verify|verify} messages.
         * @param message StartCommitResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IStartCommitResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified StartCommitResponse message, length delimited. Does not implicitly {@link query.StartCommitResponse.verify|verify} messages.
         * @param message StartCommitResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IStartCommitResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a StartCommitResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns StartCommitResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.StartCommitResponse;

        /**
         * Decodes a StartCommitResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns StartCommitResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.StartCommitResponse;

        /**
         * Verifies a StartCommitResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a StartCommitResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns StartCommitResponse
         */
        public static fromObject(object: { [k: string]: any }): query.StartCommitResponse;

        /**
         * Creates a plain object from a StartCommitResponse message. Also converts values to other types if specified.
         * @param message StartCommitResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.StartCommitResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this StartCommitResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SetRollbackRequest. */
    interface ISetRollbackRequest {

        /** SetRollbackRequest effective_caller_id */
        effective_caller_id?: (vtrpc.ICallerID|null);

        /** SetRollbackRequest immediate_caller_id */
        immediate_caller_id?: (query.IVTGateCallerID|null);

        /** SetRollbackRequest target */
        target?: (query.ITarget|null);

        /** SetRollbackRequest transaction_id */
        transaction_id?: (number|Long|null);

        /** SetRollbackRequest dtid */
        dtid?: (string|null);
    }

    /** Represents a SetRollbackRequest. */
    class SetRollbackRequest implements ISetRollbackRequest {

        /**
         * Constructs a new SetRollbackRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.ISetRollbackRequest);

        /** SetRollbackRequest effective_caller_id. */
        public effective_caller_id?: (vtrpc.ICallerID|null);

        /** SetRollbackRequest immediate_caller_id. */
        public immediate_caller_id?: (query.IVTGateCallerID|null);

        /** SetRollbackRequest target. */
        public target?: (query.ITarget|null);

        /** SetRollbackRequest transaction_id. */
        public transaction_id: (number|Long);

        /** SetRollbackRequest dtid. */
        public dtid: string;

        /**
         * Creates a new SetRollbackRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SetRollbackRequest instance
         */
        public static create(properties?: query.ISetRollbackRequest): query.SetRollbackRequest;

        /**
         * Encodes the specified SetRollbackRequest message. Does not implicitly {@link query.SetRollbackRequest.verify|verify} messages.
         * @param message SetRollbackRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.ISetRollbackRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SetRollbackRequest message, length delimited. Does not implicitly {@link query.SetRollbackRequest.verify|verify} messages.
         * @param message SetRollbackRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.ISetRollbackRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SetRollbackRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SetRollbackRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.SetRollbackRequest;

        /**
         * Decodes a SetRollbackRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SetRollbackRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.SetRollbackRequest;

        /**
         * Verifies a SetRollbackRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SetRollbackRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SetRollbackRequest
         */
        public static fromObject(object: { [k: string]: any }): query.SetRollbackRequest;

        /**
         * Creates a plain object from a SetRollbackRequest message. Also converts values to other types if specified.
         * @param message SetRollbackRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.SetRollbackRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SetRollbackRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SetRollbackResponse. */
    interface ISetRollbackResponse {
    }

    /** Represents a SetRollbackResponse. */
    class SetRollbackResponse implements ISetRollbackResponse {

        /**
         * Constructs a new SetRollbackResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.ISetRollbackResponse);

        /**
         * Creates a new SetRollbackResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SetRollbackResponse instance
         */
        public static create(properties?: query.ISetRollbackResponse): query.SetRollbackResponse;

        /**
         * Encodes the specified SetRollbackResponse message. Does not implicitly {@link query.SetRollbackResponse.verify|verify} messages.
         * @param message SetRollbackResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.ISetRollbackResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SetRollbackResponse message, length delimited. Does not implicitly {@link query.SetRollbackResponse.verify|verify} messages.
         * @param message SetRollbackResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.ISetRollbackResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SetRollbackResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SetRollbackResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.SetRollbackResponse;

        /**
         * Decodes a SetRollbackResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SetRollbackResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.SetRollbackResponse;

        /**
         * Verifies a SetRollbackResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SetRollbackResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SetRollbackResponse
         */
        public static fromObject(object: { [k: string]: any }): query.SetRollbackResponse;

        /**
         * Creates a plain object from a SetRollbackResponse message. Also converts values to other types if specified.
         * @param message SetRollbackResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.SetRollbackResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SetRollbackResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ConcludeTransactionRequest. */
    interface IConcludeTransactionRequest {

        /** ConcludeTransactionRequest effective_caller_id */
        effective_caller_id?: (vtrpc.ICallerID|null);

        /** ConcludeTransactionRequest immediate_caller_id */
        immediate_caller_id?: (query.IVTGateCallerID|null);

        /** ConcludeTransactionRequest target */
        target?: (query.ITarget|null);

        /** ConcludeTransactionRequest dtid */
        dtid?: (string|null);
    }

    /** Represents a ConcludeTransactionRequest. */
    class ConcludeTransactionRequest implements IConcludeTransactionRequest {

        /**
         * Constructs a new ConcludeTransactionRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IConcludeTransactionRequest);

        /** ConcludeTransactionRequest effective_caller_id. */
        public effective_caller_id?: (vtrpc.ICallerID|null);

        /** ConcludeTransactionRequest immediate_caller_id. */
        public immediate_caller_id?: (query.IVTGateCallerID|null);

        /** ConcludeTransactionRequest target. */
        public target?: (query.ITarget|null);

        /** ConcludeTransactionRequest dtid. */
        public dtid: string;

        /**
         * Creates a new ConcludeTransactionRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ConcludeTransactionRequest instance
         */
        public static create(properties?: query.IConcludeTransactionRequest): query.ConcludeTransactionRequest;

        /**
         * Encodes the specified ConcludeTransactionRequest message. Does not implicitly {@link query.ConcludeTransactionRequest.verify|verify} messages.
         * @param message ConcludeTransactionRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IConcludeTransactionRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ConcludeTransactionRequest message, length delimited. Does not implicitly {@link query.ConcludeTransactionRequest.verify|verify} messages.
         * @param message ConcludeTransactionRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IConcludeTransactionRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ConcludeTransactionRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ConcludeTransactionRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.ConcludeTransactionRequest;

        /**
         * Decodes a ConcludeTransactionRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ConcludeTransactionRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.ConcludeTransactionRequest;

        /**
         * Verifies a ConcludeTransactionRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ConcludeTransactionRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ConcludeTransactionRequest
         */
        public static fromObject(object: { [k: string]: any }): query.ConcludeTransactionRequest;

        /**
         * Creates a plain object from a ConcludeTransactionRequest message. Also converts values to other types if specified.
         * @param message ConcludeTransactionRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.ConcludeTransactionRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ConcludeTransactionRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ConcludeTransactionResponse. */
    interface IConcludeTransactionResponse {
    }

    /** Represents a ConcludeTransactionResponse. */
    class ConcludeTransactionResponse implements IConcludeTransactionResponse {

        /**
         * Constructs a new ConcludeTransactionResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IConcludeTransactionResponse);

        /**
         * Creates a new ConcludeTransactionResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ConcludeTransactionResponse instance
         */
        public static create(properties?: query.IConcludeTransactionResponse): query.ConcludeTransactionResponse;

        /**
         * Encodes the specified ConcludeTransactionResponse message. Does not implicitly {@link query.ConcludeTransactionResponse.verify|verify} messages.
         * @param message ConcludeTransactionResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IConcludeTransactionResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ConcludeTransactionResponse message, length delimited. Does not implicitly {@link query.ConcludeTransactionResponse.verify|verify} messages.
         * @param message ConcludeTransactionResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IConcludeTransactionResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ConcludeTransactionResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ConcludeTransactionResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.ConcludeTransactionResponse;

        /**
         * Decodes a ConcludeTransactionResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ConcludeTransactionResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.ConcludeTransactionResponse;

        /**
         * Verifies a ConcludeTransactionResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ConcludeTransactionResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ConcludeTransactionResponse
         */
        public static fromObject(object: { [k: string]: any }): query.ConcludeTransactionResponse;

        /**
         * Creates a plain object from a ConcludeTransactionResponse message. Also converts values to other types if specified.
         * @param message ConcludeTransactionResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.ConcludeTransactionResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ConcludeTransactionResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ReadTransactionRequest. */
    interface IReadTransactionRequest {

        /** ReadTransactionRequest effective_caller_id */
        effective_caller_id?: (vtrpc.ICallerID|null);

        /** ReadTransactionRequest immediate_caller_id */
        immediate_caller_id?: (query.IVTGateCallerID|null);

        /** ReadTransactionRequest target */
        target?: (query.ITarget|null);

        /** ReadTransactionRequest dtid */
        dtid?: (string|null);
    }

    /** Represents a ReadTransactionRequest. */
    class ReadTransactionRequest implements IReadTransactionRequest {

        /**
         * Constructs a new ReadTransactionRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IReadTransactionRequest);

        /** ReadTransactionRequest effective_caller_id. */
        public effective_caller_id?: (vtrpc.ICallerID|null);

        /** ReadTransactionRequest immediate_caller_id. */
        public immediate_caller_id?: (query.IVTGateCallerID|null);

        /** ReadTransactionRequest target. */
        public target?: (query.ITarget|null);

        /** ReadTransactionRequest dtid. */
        public dtid: string;

        /**
         * Creates a new ReadTransactionRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ReadTransactionRequest instance
         */
        public static create(properties?: query.IReadTransactionRequest): query.ReadTransactionRequest;

        /**
         * Encodes the specified ReadTransactionRequest message. Does not implicitly {@link query.ReadTransactionRequest.verify|verify} messages.
         * @param message ReadTransactionRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IReadTransactionRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ReadTransactionRequest message, length delimited. Does not implicitly {@link query.ReadTransactionRequest.verify|verify} messages.
         * @param message ReadTransactionRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IReadTransactionRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ReadTransactionRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ReadTransactionRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.ReadTransactionRequest;

        /**
         * Decodes a ReadTransactionRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ReadTransactionRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.ReadTransactionRequest;

        /**
         * Verifies a ReadTransactionRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ReadTransactionRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ReadTransactionRequest
         */
        public static fromObject(object: { [k: string]: any }): query.ReadTransactionRequest;

        /**
         * Creates a plain object from a ReadTransactionRequest message. Also converts values to other types if specified.
         * @param message ReadTransactionRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.ReadTransactionRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ReadTransactionRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ReadTransactionResponse. */
    interface IReadTransactionResponse {

        /** ReadTransactionResponse metadata */
        metadata?: (query.ITransactionMetadata|null);
    }

    /** Represents a ReadTransactionResponse. */
    class ReadTransactionResponse implements IReadTransactionResponse {

        /**
         * Constructs a new ReadTransactionResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IReadTransactionResponse);

        /** ReadTransactionResponse metadata. */
        public metadata?: (query.ITransactionMetadata|null);

        /**
         * Creates a new ReadTransactionResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ReadTransactionResponse instance
         */
        public static create(properties?: query.IReadTransactionResponse): query.ReadTransactionResponse;

        /**
         * Encodes the specified ReadTransactionResponse message. Does not implicitly {@link query.ReadTransactionResponse.verify|verify} messages.
         * @param message ReadTransactionResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IReadTransactionResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ReadTransactionResponse message, length delimited. Does not implicitly {@link query.ReadTransactionResponse.verify|verify} messages.
         * @param message ReadTransactionResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IReadTransactionResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ReadTransactionResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ReadTransactionResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.ReadTransactionResponse;

        /**
         * Decodes a ReadTransactionResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ReadTransactionResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.ReadTransactionResponse;

        /**
         * Verifies a ReadTransactionResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ReadTransactionResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ReadTransactionResponse
         */
        public static fromObject(object: { [k: string]: any }): query.ReadTransactionResponse;

        /**
         * Creates a plain object from a ReadTransactionResponse message. Also converts values to other types if specified.
         * @param message ReadTransactionResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.ReadTransactionResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ReadTransactionResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BeginExecuteRequest. */
    interface IBeginExecuteRequest {

        /** BeginExecuteRequest effective_caller_id */
        effective_caller_id?: (vtrpc.ICallerID|null);

        /** BeginExecuteRequest immediate_caller_id */
        immediate_caller_id?: (query.IVTGateCallerID|null);

        /** BeginExecuteRequest target */
        target?: (query.ITarget|null);

        /** BeginExecuteRequest query */
        query?: (query.IBoundQuery|null);

        /** BeginExecuteRequest options */
        options?: (query.IExecuteOptions|null);

        /** BeginExecuteRequest reserved_id */
        reserved_id?: (number|Long|null);

        /** BeginExecuteRequest pre_queries */
        pre_queries?: (string[]|null);
    }

    /** Represents a BeginExecuteRequest. */
    class BeginExecuteRequest implements IBeginExecuteRequest {

        /**
         * Constructs a new BeginExecuteRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IBeginExecuteRequest);

        /** BeginExecuteRequest effective_caller_id. */
        public effective_caller_id?: (vtrpc.ICallerID|null);

        /** BeginExecuteRequest immediate_caller_id. */
        public immediate_caller_id?: (query.IVTGateCallerID|null);

        /** BeginExecuteRequest target. */
        public target?: (query.ITarget|null);

        /** BeginExecuteRequest query. */
        public query?: (query.IBoundQuery|null);

        /** BeginExecuteRequest options. */
        public options?: (query.IExecuteOptions|null);

        /** BeginExecuteRequest reserved_id. */
        public reserved_id: (number|Long);

        /** BeginExecuteRequest pre_queries. */
        public pre_queries: string[];

        /**
         * Creates a new BeginExecuteRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BeginExecuteRequest instance
         */
        public static create(properties?: query.IBeginExecuteRequest): query.BeginExecuteRequest;

        /**
         * Encodes the specified BeginExecuteRequest message. Does not implicitly {@link query.BeginExecuteRequest.verify|verify} messages.
         * @param message BeginExecuteRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IBeginExecuteRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BeginExecuteRequest message, length delimited. Does not implicitly {@link query.BeginExecuteRequest.verify|verify} messages.
         * @param message BeginExecuteRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IBeginExecuteRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BeginExecuteRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BeginExecuteRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.BeginExecuteRequest;

        /**
         * Decodes a BeginExecuteRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BeginExecuteRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.BeginExecuteRequest;

        /**
         * Verifies a BeginExecuteRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BeginExecuteRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BeginExecuteRequest
         */
        public static fromObject(object: { [k: string]: any }): query.BeginExecuteRequest;

        /**
         * Creates a plain object from a BeginExecuteRequest message. Also converts values to other types if specified.
         * @param message BeginExecuteRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.BeginExecuteRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BeginExecuteRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BeginExecuteResponse. */
    interface IBeginExecuteResponse {

        /** BeginExecuteResponse error */
        error?: (vtrpc.IRPCError|null);

        /** BeginExecuteResponse result */
        result?: (query.IQueryResult|null);

        /** BeginExecuteResponse transaction_id */
        transaction_id?: (number|Long|null);

        /** BeginExecuteResponse tablet_alias */
        tablet_alias?: (topodata.ITabletAlias|null);
    }

    /** Represents a BeginExecuteResponse. */
    class BeginExecuteResponse implements IBeginExecuteResponse {

        /**
         * Constructs a new BeginExecuteResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IBeginExecuteResponse);

        /** BeginExecuteResponse error. */
        public error?: (vtrpc.IRPCError|null);

        /** BeginExecuteResponse result. */
        public result?: (query.IQueryResult|null);

        /** BeginExecuteResponse transaction_id. */
        public transaction_id: (number|Long);

        /** BeginExecuteResponse tablet_alias. */
        public tablet_alias?: (topodata.ITabletAlias|null);

        /**
         * Creates a new BeginExecuteResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BeginExecuteResponse instance
         */
        public static create(properties?: query.IBeginExecuteResponse): query.BeginExecuteResponse;

        /**
         * Encodes the specified BeginExecuteResponse message. Does not implicitly {@link query.BeginExecuteResponse.verify|verify} messages.
         * @param message BeginExecuteResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IBeginExecuteResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BeginExecuteResponse message, length delimited. Does not implicitly {@link query.BeginExecuteResponse.verify|verify} messages.
         * @param message BeginExecuteResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IBeginExecuteResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BeginExecuteResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BeginExecuteResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.BeginExecuteResponse;

        /**
         * Decodes a BeginExecuteResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BeginExecuteResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.BeginExecuteResponse;

        /**
         * Verifies a BeginExecuteResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BeginExecuteResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BeginExecuteResponse
         */
        public static fromObject(object: { [k: string]: any }): query.BeginExecuteResponse;

        /**
         * Creates a plain object from a BeginExecuteResponse message. Also converts values to other types if specified.
         * @param message BeginExecuteResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.BeginExecuteResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BeginExecuteResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BeginExecuteBatchRequest. */
    interface IBeginExecuteBatchRequest {

        /** BeginExecuteBatchRequest effective_caller_id */
        effective_caller_id?: (vtrpc.ICallerID|null);

        /** BeginExecuteBatchRequest immediate_caller_id */
        immediate_caller_id?: (query.IVTGateCallerID|null);

        /** BeginExecuteBatchRequest target */
        target?: (query.ITarget|null);

        /** BeginExecuteBatchRequest queries */
        queries?: (query.IBoundQuery[]|null);

        /** BeginExecuteBatchRequest as_transaction */
        as_transaction?: (boolean|null);

        /** BeginExecuteBatchRequest options */
        options?: (query.IExecuteOptions|null);
    }

    /** Represents a BeginExecuteBatchRequest. */
    class BeginExecuteBatchRequest implements IBeginExecuteBatchRequest {

        /**
         * Constructs a new BeginExecuteBatchRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IBeginExecuteBatchRequest);

        /** BeginExecuteBatchRequest effective_caller_id. */
        public effective_caller_id?: (vtrpc.ICallerID|null);

        /** BeginExecuteBatchRequest immediate_caller_id. */
        public immediate_caller_id?: (query.IVTGateCallerID|null);

        /** BeginExecuteBatchRequest target. */
        public target?: (query.ITarget|null);

        /** BeginExecuteBatchRequest queries. */
        public queries: query.IBoundQuery[];

        /** BeginExecuteBatchRequest as_transaction. */
        public as_transaction: boolean;

        /** BeginExecuteBatchRequest options. */
        public options?: (query.IExecuteOptions|null);

        /**
         * Creates a new BeginExecuteBatchRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BeginExecuteBatchRequest instance
         */
        public static create(properties?: query.IBeginExecuteBatchRequest): query.BeginExecuteBatchRequest;

        /**
         * Encodes the specified BeginExecuteBatchRequest message. Does not implicitly {@link query.BeginExecuteBatchRequest.verify|verify} messages.
         * @param message BeginExecuteBatchRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IBeginExecuteBatchRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BeginExecuteBatchRequest message, length delimited. Does not implicitly {@link query.BeginExecuteBatchRequest.verify|verify} messages.
         * @param message BeginExecuteBatchRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IBeginExecuteBatchRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BeginExecuteBatchRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BeginExecuteBatchRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.BeginExecuteBatchRequest;

        /**
         * Decodes a BeginExecuteBatchRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BeginExecuteBatchRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.BeginExecuteBatchRequest;

        /**
         * Verifies a BeginExecuteBatchRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BeginExecuteBatchRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BeginExecuteBatchRequest
         */
        public static fromObject(object: { [k: string]: any }): query.BeginExecuteBatchRequest;

        /**
         * Creates a plain object from a BeginExecuteBatchRequest message. Also converts values to other types if specified.
         * @param message BeginExecuteBatchRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.BeginExecuteBatchRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BeginExecuteBatchRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BeginExecuteBatchResponse. */
    interface IBeginExecuteBatchResponse {

        /** BeginExecuteBatchResponse error */
        error?: (vtrpc.IRPCError|null);

        /** BeginExecuteBatchResponse results */
        results?: (query.IQueryResult[]|null);

        /** BeginExecuteBatchResponse transaction_id */
        transaction_id?: (number|Long|null);

        /** BeginExecuteBatchResponse tablet_alias */
        tablet_alias?: (topodata.ITabletAlias|null);
    }

    /** Represents a BeginExecuteBatchResponse. */
    class BeginExecuteBatchResponse implements IBeginExecuteBatchResponse {

        /**
         * Constructs a new BeginExecuteBatchResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IBeginExecuteBatchResponse);

        /** BeginExecuteBatchResponse error. */
        public error?: (vtrpc.IRPCError|null);

        /** BeginExecuteBatchResponse results. */
        public results: query.IQueryResult[];

        /** BeginExecuteBatchResponse transaction_id. */
        public transaction_id: (number|Long);

        /** BeginExecuteBatchResponse tablet_alias. */
        public tablet_alias?: (topodata.ITabletAlias|null);

        /**
         * Creates a new BeginExecuteBatchResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BeginExecuteBatchResponse instance
         */
        public static create(properties?: query.IBeginExecuteBatchResponse): query.BeginExecuteBatchResponse;

        /**
         * Encodes the specified BeginExecuteBatchResponse message. Does not implicitly {@link query.BeginExecuteBatchResponse.verify|verify} messages.
         * @param message BeginExecuteBatchResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IBeginExecuteBatchResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BeginExecuteBatchResponse message, length delimited. Does not implicitly {@link query.BeginExecuteBatchResponse.verify|verify} messages.
         * @param message BeginExecuteBatchResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IBeginExecuteBatchResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BeginExecuteBatchResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BeginExecuteBatchResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.BeginExecuteBatchResponse;

        /**
         * Decodes a BeginExecuteBatchResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BeginExecuteBatchResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.BeginExecuteBatchResponse;

        /**
         * Verifies a BeginExecuteBatchResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BeginExecuteBatchResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BeginExecuteBatchResponse
         */
        public static fromObject(object: { [k: string]: any }): query.BeginExecuteBatchResponse;

        /**
         * Creates a plain object from a BeginExecuteBatchResponse message. Also converts values to other types if specified.
         * @param message BeginExecuteBatchResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.BeginExecuteBatchResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BeginExecuteBatchResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MessageStreamRequest. */
    interface IMessageStreamRequest {

        /** MessageStreamRequest effective_caller_id */
        effective_caller_id?: (vtrpc.ICallerID|null);

        /** MessageStreamRequest immediate_caller_id */
        immediate_caller_id?: (query.IVTGateCallerID|null);

        /** MessageStreamRequest target */
        target?: (query.ITarget|null);

        /** MessageStreamRequest name */
        name?: (string|null);
    }

    /** Represents a MessageStreamRequest. */
    class MessageStreamRequest implements IMessageStreamRequest {

        /**
         * Constructs a new MessageStreamRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IMessageStreamRequest);

        /** MessageStreamRequest effective_caller_id. */
        public effective_caller_id?: (vtrpc.ICallerID|null);

        /** MessageStreamRequest immediate_caller_id. */
        public immediate_caller_id?: (query.IVTGateCallerID|null);

        /** MessageStreamRequest target. */
        public target?: (query.ITarget|null);

        /** MessageStreamRequest name. */
        public name: string;

        /**
         * Creates a new MessageStreamRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MessageStreamRequest instance
         */
        public static create(properties?: query.IMessageStreamRequest): query.MessageStreamRequest;

        /**
         * Encodes the specified MessageStreamRequest message. Does not implicitly {@link query.MessageStreamRequest.verify|verify} messages.
         * @param message MessageStreamRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IMessageStreamRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MessageStreamRequest message, length delimited. Does not implicitly {@link query.MessageStreamRequest.verify|verify} messages.
         * @param message MessageStreamRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IMessageStreamRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MessageStreamRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MessageStreamRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.MessageStreamRequest;

        /**
         * Decodes a MessageStreamRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MessageStreamRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.MessageStreamRequest;

        /**
         * Verifies a MessageStreamRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MessageStreamRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MessageStreamRequest
         */
        public static fromObject(object: { [k: string]: any }): query.MessageStreamRequest;

        /**
         * Creates a plain object from a MessageStreamRequest message. Also converts values to other types if specified.
         * @param message MessageStreamRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.MessageStreamRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MessageStreamRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MessageStreamResponse. */
    interface IMessageStreamResponse {

        /** MessageStreamResponse result */
        result?: (query.IQueryResult|null);
    }

    /** Represents a MessageStreamResponse. */
    class MessageStreamResponse implements IMessageStreamResponse {

        /**
         * Constructs a new MessageStreamResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IMessageStreamResponse);

        /** MessageStreamResponse result. */
        public result?: (query.IQueryResult|null);

        /**
         * Creates a new MessageStreamResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MessageStreamResponse instance
         */
        public static create(properties?: query.IMessageStreamResponse): query.MessageStreamResponse;

        /**
         * Encodes the specified MessageStreamResponse message. Does not implicitly {@link query.MessageStreamResponse.verify|verify} messages.
         * @param message MessageStreamResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IMessageStreamResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MessageStreamResponse message, length delimited. Does not implicitly {@link query.MessageStreamResponse.verify|verify} messages.
         * @param message MessageStreamResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IMessageStreamResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MessageStreamResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MessageStreamResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.MessageStreamResponse;

        /**
         * Decodes a MessageStreamResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MessageStreamResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.MessageStreamResponse;

        /**
         * Verifies a MessageStreamResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MessageStreamResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MessageStreamResponse
         */
        public static fromObject(object: { [k: string]: any }): query.MessageStreamResponse;

        /**
         * Creates a plain object from a MessageStreamResponse message. Also converts values to other types if specified.
         * @param message MessageStreamResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.MessageStreamResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MessageStreamResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MessageAckRequest. */
    interface IMessageAckRequest {

        /** MessageAckRequest effective_caller_id */
        effective_caller_id?: (vtrpc.ICallerID|null);

        /** MessageAckRequest immediate_caller_id */
        immediate_caller_id?: (query.IVTGateCallerID|null);

        /** MessageAckRequest target */
        target?: (query.ITarget|null);

        /** MessageAckRequest name */
        name?: (string|null);

        /** MessageAckRequest ids */
        ids?: (query.IValue[]|null);
    }

    /** Represents a MessageAckRequest. */
    class MessageAckRequest implements IMessageAckRequest {

        /**
         * Constructs a new MessageAckRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IMessageAckRequest);

        /** MessageAckRequest effective_caller_id. */
        public effective_caller_id?: (vtrpc.ICallerID|null);

        /** MessageAckRequest immediate_caller_id. */
        public immediate_caller_id?: (query.IVTGateCallerID|null);

        /** MessageAckRequest target. */
        public target?: (query.ITarget|null);

        /** MessageAckRequest name. */
        public name: string;

        /** MessageAckRequest ids. */
        public ids: query.IValue[];

        /**
         * Creates a new MessageAckRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MessageAckRequest instance
         */
        public static create(properties?: query.IMessageAckRequest): query.MessageAckRequest;

        /**
         * Encodes the specified MessageAckRequest message. Does not implicitly {@link query.MessageAckRequest.verify|verify} messages.
         * @param message MessageAckRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IMessageAckRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MessageAckRequest message, length delimited. Does not implicitly {@link query.MessageAckRequest.verify|verify} messages.
         * @param message MessageAckRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IMessageAckRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MessageAckRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MessageAckRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.MessageAckRequest;

        /**
         * Decodes a MessageAckRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MessageAckRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.MessageAckRequest;

        /**
         * Verifies a MessageAckRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MessageAckRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MessageAckRequest
         */
        public static fromObject(object: { [k: string]: any }): query.MessageAckRequest;

        /**
         * Creates a plain object from a MessageAckRequest message. Also converts values to other types if specified.
         * @param message MessageAckRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.MessageAckRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MessageAckRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MessageAckResponse. */
    interface IMessageAckResponse {

        /** MessageAckResponse result */
        result?: (query.IQueryResult|null);
    }

    /** Represents a MessageAckResponse. */
    class MessageAckResponse implements IMessageAckResponse {

        /**
         * Constructs a new MessageAckResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IMessageAckResponse);

        /** MessageAckResponse result. */
        public result?: (query.IQueryResult|null);

        /**
         * Creates a new MessageAckResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MessageAckResponse instance
         */
        public static create(properties?: query.IMessageAckResponse): query.MessageAckResponse;

        /**
         * Encodes the specified MessageAckResponse message. Does not implicitly {@link query.MessageAckResponse.verify|verify} messages.
         * @param message MessageAckResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IMessageAckResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MessageAckResponse message, length delimited. Does not implicitly {@link query.MessageAckResponse.verify|verify} messages.
         * @param message MessageAckResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IMessageAckResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MessageAckResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MessageAckResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.MessageAckResponse;

        /**
         * Decodes a MessageAckResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MessageAckResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.MessageAckResponse;

        /**
         * Verifies a MessageAckResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MessageAckResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MessageAckResponse
         */
        public static fromObject(object: { [k: string]: any }): query.MessageAckResponse;

        /**
         * Creates a plain object from a MessageAckResponse message. Also converts values to other types if specified.
         * @param message MessageAckResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.MessageAckResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MessageAckResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ReserveExecuteRequest. */
    interface IReserveExecuteRequest {

        /** ReserveExecuteRequest effective_caller_id */
        effective_caller_id?: (vtrpc.ICallerID|null);

        /** ReserveExecuteRequest immediate_caller_id */
        immediate_caller_id?: (query.IVTGateCallerID|null);

        /** ReserveExecuteRequest target */
        target?: (query.ITarget|null);

        /** ReserveExecuteRequest query */
        query?: (query.IBoundQuery|null);

        /** ReserveExecuteRequest transaction_id */
        transaction_id?: (number|Long|null);

        /** ReserveExecuteRequest options */
        options?: (query.IExecuteOptions|null);

        /** ReserveExecuteRequest pre_queries */
        pre_queries?: (string[]|null);
    }

    /** Represents a ReserveExecuteRequest. */
    class ReserveExecuteRequest implements IReserveExecuteRequest {

        /**
         * Constructs a new ReserveExecuteRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IReserveExecuteRequest);

        /** ReserveExecuteRequest effective_caller_id. */
        public effective_caller_id?: (vtrpc.ICallerID|null);

        /** ReserveExecuteRequest immediate_caller_id. */
        public immediate_caller_id?: (query.IVTGateCallerID|null);

        /** ReserveExecuteRequest target. */
        public target?: (query.ITarget|null);

        /** ReserveExecuteRequest query. */
        public query?: (query.IBoundQuery|null);

        /** ReserveExecuteRequest transaction_id. */
        public transaction_id: (number|Long);

        /** ReserveExecuteRequest options. */
        public options?: (query.IExecuteOptions|null);

        /** ReserveExecuteRequest pre_queries. */
        public pre_queries: string[];

        /**
         * Creates a new ReserveExecuteRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ReserveExecuteRequest instance
         */
        public static create(properties?: query.IReserveExecuteRequest): query.ReserveExecuteRequest;

        /**
         * Encodes the specified ReserveExecuteRequest message. Does not implicitly {@link query.ReserveExecuteRequest.verify|verify} messages.
         * @param message ReserveExecuteRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IReserveExecuteRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ReserveExecuteRequest message, length delimited. Does not implicitly {@link query.ReserveExecuteRequest.verify|verify} messages.
         * @param message ReserveExecuteRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IReserveExecuteRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ReserveExecuteRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ReserveExecuteRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.ReserveExecuteRequest;

        /**
         * Decodes a ReserveExecuteRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ReserveExecuteRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.ReserveExecuteRequest;

        /**
         * Verifies a ReserveExecuteRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ReserveExecuteRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ReserveExecuteRequest
         */
        public static fromObject(object: { [k: string]: any }): query.ReserveExecuteRequest;

        /**
         * Creates a plain object from a ReserveExecuteRequest message. Also converts values to other types if specified.
         * @param message ReserveExecuteRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.ReserveExecuteRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ReserveExecuteRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ReserveExecuteResponse. */
    interface IReserveExecuteResponse {

        /** ReserveExecuteResponse error */
        error?: (vtrpc.IRPCError|null);

        /** ReserveExecuteResponse result */
        result?: (query.IQueryResult|null);

        /** ReserveExecuteResponse reserved_id */
        reserved_id?: (number|Long|null);

        /** ReserveExecuteResponse tablet_alias */
        tablet_alias?: (topodata.ITabletAlias|null);
    }

    /** Represents a ReserveExecuteResponse. */
    class ReserveExecuteResponse implements IReserveExecuteResponse {

        /**
         * Constructs a new ReserveExecuteResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IReserveExecuteResponse);

        /** ReserveExecuteResponse error. */
        public error?: (vtrpc.IRPCError|null);

        /** ReserveExecuteResponse result. */
        public result?: (query.IQueryResult|null);

        /** ReserveExecuteResponse reserved_id. */
        public reserved_id: (number|Long);

        /** ReserveExecuteResponse tablet_alias. */
        public tablet_alias?: (topodata.ITabletAlias|null);

        /**
         * Creates a new ReserveExecuteResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ReserveExecuteResponse instance
         */
        public static create(properties?: query.IReserveExecuteResponse): query.ReserveExecuteResponse;

        /**
         * Encodes the specified ReserveExecuteResponse message. Does not implicitly {@link query.ReserveExecuteResponse.verify|verify} messages.
         * @param message ReserveExecuteResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IReserveExecuteResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ReserveExecuteResponse message, length delimited. Does not implicitly {@link query.ReserveExecuteResponse.verify|verify} messages.
         * @param message ReserveExecuteResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IReserveExecuteResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ReserveExecuteResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ReserveExecuteResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.ReserveExecuteResponse;

        /**
         * Decodes a ReserveExecuteResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ReserveExecuteResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.ReserveExecuteResponse;

        /**
         * Verifies a ReserveExecuteResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ReserveExecuteResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ReserveExecuteResponse
         */
        public static fromObject(object: { [k: string]: any }): query.ReserveExecuteResponse;

        /**
         * Creates a plain object from a ReserveExecuteResponse message. Also converts values to other types if specified.
         * @param message ReserveExecuteResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.ReserveExecuteResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ReserveExecuteResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ReserveBeginExecuteRequest. */
    interface IReserveBeginExecuteRequest {

        /** ReserveBeginExecuteRequest effective_caller_id */
        effective_caller_id?: (vtrpc.ICallerID|null);

        /** ReserveBeginExecuteRequest immediate_caller_id */
        immediate_caller_id?: (query.IVTGateCallerID|null);

        /** ReserveBeginExecuteRequest target */
        target?: (query.ITarget|null);

        /** ReserveBeginExecuteRequest query */
        query?: (query.IBoundQuery|null);

        /** ReserveBeginExecuteRequest options */
        options?: (query.IExecuteOptions|null);

        /** ReserveBeginExecuteRequest pre_queries */
        pre_queries?: (string[]|null);
    }

    /** Represents a ReserveBeginExecuteRequest. */
    class ReserveBeginExecuteRequest implements IReserveBeginExecuteRequest {

        /**
         * Constructs a new ReserveBeginExecuteRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IReserveBeginExecuteRequest);

        /** ReserveBeginExecuteRequest effective_caller_id. */
        public effective_caller_id?: (vtrpc.ICallerID|null);

        /** ReserveBeginExecuteRequest immediate_caller_id. */
        public immediate_caller_id?: (query.IVTGateCallerID|null);

        /** ReserveBeginExecuteRequest target. */
        public target?: (query.ITarget|null);

        /** ReserveBeginExecuteRequest query. */
        public query?: (query.IBoundQuery|null);

        /** ReserveBeginExecuteRequest options. */
        public options?: (query.IExecuteOptions|null);

        /** ReserveBeginExecuteRequest pre_queries. */
        public pre_queries: string[];

        /**
         * Creates a new ReserveBeginExecuteRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ReserveBeginExecuteRequest instance
         */
        public static create(properties?: query.IReserveBeginExecuteRequest): query.ReserveBeginExecuteRequest;

        /**
         * Encodes the specified ReserveBeginExecuteRequest message. Does not implicitly {@link query.ReserveBeginExecuteRequest.verify|verify} messages.
         * @param message ReserveBeginExecuteRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IReserveBeginExecuteRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ReserveBeginExecuteRequest message, length delimited. Does not implicitly {@link query.ReserveBeginExecuteRequest.verify|verify} messages.
         * @param message ReserveBeginExecuteRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IReserveBeginExecuteRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ReserveBeginExecuteRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ReserveBeginExecuteRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.ReserveBeginExecuteRequest;

        /**
         * Decodes a ReserveBeginExecuteRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ReserveBeginExecuteRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.ReserveBeginExecuteRequest;

        /**
         * Verifies a ReserveBeginExecuteRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ReserveBeginExecuteRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ReserveBeginExecuteRequest
         */
        public static fromObject(object: { [k: string]: any }): query.ReserveBeginExecuteRequest;

        /**
         * Creates a plain object from a ReserveBeginExecuteRequest message. Also converts values to other types if specified.
         * @param message ReserveBeginExecuteRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.ReserveBeginExecuteRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ReserveBeginExecuteRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ReserveBeginExecuteResponse. */
    interface IReserveBeginExecuteResponse {

        /** ReserveBeginExecuteResponse error */
        error?: (vtrpc.IRPCError|null);

        /** ReserveBeginExecuteResponse result */
        result?: (query.IQueryResult|null);

        /** ReserveBeginExecuteResponse transaction_id */
        transaction_id?: (number|Long|null);

        /** ReserveBeginExecuteResponse reserved_id */
        reserved_id?: (number|Long|null);

        /** ReserveBeginExecuteResponse tablet_alias */
        tablet_alias?: (topodata.ITabletAlias|null);
    }

    /** Represents a ReserveBeginExecuteResponse. */
    class ReserveBeginExecuteResponse implements IReserveBeginExecuteResponse {

        /**
         * Constructs a new ReserveBeginExecuteResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IReserveBeginExecuteResponse);

        /** ReserveBeginExecuteResponse error. */
        public error?: (vtrpc.IRPCError|null);

        /** ReserveBeginExecuteResponse result. */
        public result?: (query.IQueryResult|null);

        /** ReserveBeginExecuteResponse transaction_id. */
        public transaction_id: (number|Long);

        /** ReserveBeginExecuteResponse reserved_id. */
        public reserved_id: (number|Long);

        /** ReserveBeginExecuteResponse tablet_alias. */
        public tablet_alias?: (topodata.ITabletAlias|null);

        /**
         * Creates a new ReserveBeginExecuteResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ReserveBeginExecuteResponse instance
         */
        public static create(properties?: query.IReserveBeginExecuteResponse): query.ReserveBeginExecuteResponse;

        /**
         * Encodes the specified ReserveBeginExecuteResponse message. Does not implicitly {@link query.ReserveBeginExecuteResponse.verify|verify} messages.
         * @param message ReserveBeginExecuteResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IReserveBeginExecuteResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ReserveBeginExecuteResponse message, length delimited. Does not implicitly {@link query.ReserveBeginExecuteResponse.verify|verify} messages.
         * @param message ReserveBeginExecuteResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IReserveBeginExecuteResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ReserveBeginExecuteResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ReserveBeginExecuteResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.ReserveBeginExecuteResponse;

        /**
         * Decodes a ReserveBeginExecuteResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ReserveBeginExecuteResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.ReserveBeginExecuteResponse;

        /**
         * Verifies a ReserveBeginExecuteResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ReserveBeginExecuteResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ReserveBeginExecuteResponse
         */
        public static fromObject(object: { [k: string]: any }): query.ReserveBeginExecuteResponse;

        /**
         * Creates a plain object from a ReserveBeginExecuteResponse message. Also converts values to other types if specified.
         * @param message ReserveBeginExecuteResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.ReserveBeginExecuteResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ReserveBeginExecuteResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ReleaseRequest. */
    interface IReleaseRequest {

        /** ReleaseRequest effective_caller_id */
        effective_caller_id?: (vtrpc.ICallerID|null);

        /** ReleaseRequest immediate_caller_id */
        immediate_caller_id?: (query.IVTGateCallerID|null);

        /** ReleaseRequest target */
        target?: (query.ITarget|null);

        /** ReleaseRequest transaction_id */
        transaction_id?: (number|Long|null);

        /** ReleaseRequest reserved_id */
        reserved_id?: (number|Long|null);
    }

    /** Represents a ReleaseRequest. */
    class ReleaseRequest implements IReleaseRequest {

        /**
         * Constructs a new ReleaseRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IReleaseRequest);

        /** ReleaseRequest effective_caller_id. */
        public effective_caller_id?: (vtrpc.ICallerID|null);

        /** ReleaseRequest immediate_caller_id. */
        public immediate_caller_id?: (query.IVTGateCallerID|null);

        /** ReleaseRequest target. */
        public target?: (query.ITarget|null);

        /** ReleaseRequest transaction_id. */
        public transaction_id: (number|Long);

        /** ReleaseRequest reserved_id. */
        public reserved_id: (number|Long);

        /**
         * Creates a new ReleaseRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ReleaseRequest instance
         */
        public static create(properties?: query.IReleaseRequest): query.ReleaseRequest;

        /**
         * Encodes the specified ReleaseRequest message. Does not implicitly {@link query.ReleaseRequest.verify|verify} messages.
         * @param message ReleaseRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IReleaseRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ReleaseRequest message, length delimited. Does not implicitly {@link query.ReleaseRequest.verify|verify} messages.
         * @param message ReleaseRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IReleaseRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ReleaseRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ReleaseRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.ReleaseRequest;

        /**
         * Decodes a ReleaseRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ReleaseRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.ReleaseRequest;

        /**
         * Verifies a ReleaseRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ReleaseRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ReleaseRequest
         */
        public static fromObject(object: { [k: string]: any }): query.ReleaseRequest;

        /**
         * Creates a plain object from a ReleaseRequest message. Also converts values to other types if specified.
         * @param message ReleaseRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.ReleaseRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ReleaseRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ReleaseResponse. */
    interface IReleaseResponse {
    }

    /** Represents a ReleaseResponse. */
    class ReleaseResponse implements IReleaseResponse {

        /**
         * Constructs a new ReleaseResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IReleaseResponse);

        /**
         * Creates a new ReleaseResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ReleaseResponse instance
         */
        public static create(properties?: query.IReleaseResponse): query.ReleaseResponse;

        /**
         * Encodes the specified ReleaseResponse message. Does not implicitly {@link query.ReleaseResponse.verify|verify} messages.
         * @param message ReleaseResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IReleaseResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ReleaseResponse message, length delimited. Does not implicitly {@link query.ReleaseResponse.verify|verify} messages.
         * @param message ReleaseResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IReleaseResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ReleaseResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ReleaseResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.ReleaseResponse;

        /**
         * Decodes a ReleaseResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ReleaseResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.ReleaseResponse;

        /**
         * Verifies a ReleaseResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ReleaseResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ReleaseResponse
         */
        public static fromObject(object: { [k: string]: any }): query.ReleaseResponse;

        /**
         * Creates a plain object from a ReleaseResponse message. Also converts values to other types if specified.
         * @param message ReleaseResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.ReleaseResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ReleaseResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a StreamHealthRequest. */
    interface IStreamHealthRequest {
    }

    /** Represents a StreamHealthRequest. */
    class StreamHealthRequest implements IStreamHealthRequest {

        /**
         * Constructs a new StreamHealthRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IStreamHealthRequest);

        /**
         * Creates a new StreamHealthRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns StreamHealthRequest instance
         */
        public static create(properties?: query.IStreamHealthRequest): query.StreamHealthRequest;

        /**
         * Encodes the specified StreamHealthRequest message. Does not implicitly {@link query.StreamHealthRequest.verify|verify} messages.
         * @param message StreamHealthRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IStreamHealthRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified StreamHealthRequest message, length delimited. Does not implicitly {@link query.StreamHealthRequest.verify|verify} messages.
         * @param message StreamHealthRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IStreamHealthRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a StreamHealthRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns StreamHealthRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.StreamHealthRequest;

        /**
         * Decodes a StreamHealthRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns StreamHealthRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.StreamHealthRequest;

        /**
         * Verifies a StreamHealthRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a StreamHealthRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns StreamHealthRequest
         */
        public static fromObject(object: { [k: string]: any }): query.StreamHealthRequest;

        /**
         * Creates a plain object from a StreamHealthRequest message. Also converts values to other types if specified.
         * @param message StreamHealthRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.StreamHealthRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this StreamHealthRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RealtimeStats. */
    interface IRealtimeStats {

        /** RealtimeStats health_error */
        health_error?: (string|null);

        /** RealtimeStats seconds_behind_master */
        seconds_behind_master?: (number|null);

        /** RealtimeStats binlog_players_count */
        binlog_players_count?: (number|null);

        /** RealtimeStats seconds_behind_master_filtered_replication */
        seconds_behind_master_filtered_replication?: (number|Long|null);

        /** RealtimeStats cpu_usage */
        cpu_usage?: (number|null);

        /** RealtimeStats qps */
        qps?: (number|null);
    }

    /** Represents a RealtimeStats. */
    class RealtimeStats implements IRealtimeStats {

        /**
         * Constructs a new RealtimeStats.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IRealtimeStats);

        /** RealtimeStats health_error. */
        public health_error: string;

        /** RealtimeStats seconds_behind_master. */
        public seconds_behind_master: number;

        /** RealtimeStats binlog_players_count. */
        public binlog_players_count: number;

        /** RealtimeStats seconds_behind_master_filtered_replication. */
        public seconds_behind_master_filtered_replication: (number|Long);

        /** RealtimeStats cpu_usage. */
        public cpu_usage: number;

        /** RealtimeStats qps. */
        public qps: number;

        /**
         * Creates a new RealtimeStats instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RealtimeStats instance
         */
        public static create(properties?: query.IRealtimeStats): query.RealtimeStats;

        /**
         * Encodes the specified RealtimeStats message. Does not implicitly {@link query.RealtimeStats.verify|verify} messages.
         * @param message RealtimeStats message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IRealtimeStats, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RealtimeStats message, length delimited. Does not implicitly {@link query.RealtimeStats.verify|verify} messages.
         * @param message RealtimeStats message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IRealtimeStats, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RealtimeStats message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RealtimeStats
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.RealtimeStats;

        /**
         * Decodes a RealtimeStats message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RealtimeStats
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.RealtimeStats;

        /**
         * Verifies a RealtimeStats message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RealtimeStats message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RealtimeStats
         */
        public static fromObject(object: { [k: string]: any }): query.RealtimeStats;

        /**
         * Creates a plain object from a RealtimeStats message. Also converts values to other types if specified.
         * @param message RealtimeStats
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.RealtimeStats, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RealtimeStats to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AggregateStats. */
    interface IAggregateStats {

        /** AggregateStats healthy_tablet_count */
        healthy_tablet_count?: (number|null);

        /** AggregateStats unhealthy_tablet_count */
        unhealthy_tablet_count?: (number|null);

        /** AggregateStats seconds_behind_master_min */
        seconds_behind_master_min?: (number|null);

        /** AggregateStats seconds_behind_master_max */
        seconds_behind_master_max?: (number|null);
    }

    /** Represents an AggregateStats. */
    class AggregateStats implements IAggregateStats {

        /**
         * Constructs a new AggregateStats.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IAggregateStats);

        /** AggregateStats healthy_tablet_count. */
        public healthy_tablet_count: number;

        /** AggregateStats unhealthy_tablet_count. */
        public unhealthy_tablet_count: number;

        /** AggregateStats seconds_behind_master_min. */
        public seconds_behind_master_min: number;

        /** AggregateStats seconds_behind_master_max. */
        public seconds_behind_master_max: number;

        /**
         * Creates a new AggregateStats instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AggregateStats instance
         */
        public static create(properties?: query.IAggregateStats): query.AggregateStats;

        /**
         * Encodes the specified AggregateStats message. Does not implicitly {@link query.AggregateStats.verify|verify} messages.
         * @param message AggregateStats message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IAggregateStats, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AggregateStats message, length delimited. Does not implicitly {@link query.AggregateStats.verify|verify} messages.
         * @param message AggregateStats message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IAggregateStats, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AggregateStats message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AggregateStats
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.AggregateStats;

        /**
         * Decodes an AggregateStats message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AggregateStats
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.AggregateStats;

        /**
         * Verifies an AggregateStats message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AggregateStats message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AggregateStats
         */
        public static fromObject(object: { [k: string]: any }): query.AggregateStats;

        /**
         * Creates a plain object from an AggregateStats message. Also converts values to other types if specified.
         * @param message AggregateStats
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.AggregateStats, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AggregateStats to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a StreamHealthResponse. */
    interface IStreamHealthResponse {

        /** StreamHealthResponse target */
        target?: (query.ITarget|null);

        /** StreamHealthResponse serving */
        serving?: (boolean|null);

        /** StreamHealthResponse tablet_externally_reparented_timestamp */
        tablet_externally_reparented_timestamp?: (number|Long|null);

        /** StreamHealthResponse realtime_stats */
        realtime_stats?: (query.IRealtimeStats|null);

        /** StreamHealthResponse tablet_alias */
        tablet_alias?: (topodata.ITabletAlias|null);
    }

    /** Represents a StreamHealthResponse. */
    class StreamHealthResponse implements IStreamHealthResponse {

        /**
         * Constructs a new StreamHealthResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.IStreamHealthResponse);

        /** StreamHealthResponse target. */
        public target?: (query.ITarget|null);

        /** StreamHealthResponse serving. */
        public serving: boolean;

        /** StreamHealthResponse tablet_externally_reparented_timestamp. */
        public tablet_externally_reparented_timestamp: (number|Long);

        /** StreamHealthResponse realtime_stats. */
        public realtime_stats?: (query.IRealtimeStats|null);

        /** StreamHealthResponse tablet_alias. */
        public tablet_alias?: (topodata.ITabletAlias|null);

        /**
         * Creates a new StreamHealthResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns StreamHealthResponse instance
         */
        public static create(properties?: query.IStreamHealthResponse): query.StreamHealthResponse;

        /**
         * Encodes the specified StreamHealthResponse message. Does not implicitly {@link query.StreamHealthResponse.verify|verify} messages.
         * @param message StreamHealthResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.IStreamHealthResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified StreamHealthResponse message, length delimited. Does not implicitly {@link query.StreamHealthResponse.verify|verify} messages.
         * @param message StreamHealthResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.IStreamHealthResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a StreamHealthResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns StreamHealthResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.StreamHealthResponse;

        /**
         * Decodes a StreamHealthResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns StreamHealthResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.StreamHealthResponse;

        /**
         * Verifies a StreamHealthResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a StreamHealthResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns StreamHealthResponse
         */
        public static fromObject(object: { [k: string]: any }): query.StreamHealthResponse;

        /**
         * Creates a plain object from a StreamHealthResponse message. Also converts values to other types if specified.
         * @param message StreamHealthResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.StreamHealthResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this StreamHealthResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** TransactionState enum. */
    enum TransactionState {
        UNKNOWN = 0,
        PREPARE = 1,
        COMMIT = 2,
        ROLLBACK = 3
    }

    /** Properties of a TransactionMetadata. */
    interface ITransactionMetadata {

        /** TransactionMetadata dtid */
        dtid?: (string|null);

        /** TransactionMetadata state */
        state?: (query.TransactionState|null);

        /** TransactionMetadata time_created */
        time_created?: (number|Long|null);

        /** TransactionMetadata participants */
        participants?: (query.ITarget[]|null);
    }

    /** Represents a TransactionMetadata. */
    class TransactionMetadata implements ITransactionMetadata {

        /**
         * Constructs a new TransactionMetadata.
         * @param [properties] Properties to set
         */
        constructor(properties?: query.ITransactionMetadata);

        /** TransactionMetadata dtid. */
        public dtid: string;

        /** TransactionMetadata state. */
        public state: query.TransactionState;

        /** TransactionMetadata time_created. */
        public time_created: (number|Long);

        /** TransactionMetadata participants. */
        public participants: query.ITarget[];

        /**
         * Creates a new TransactionMetadata instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TransactionMetadata instance
         */
        public static create(properties?: query.ITransactionMetadata): query.TransactionMetadata;

        /**
         * Encodes the specified TransactionMetadata message. Does not implicitly {@link query.TransactionMetadata.verify|verify} messages.
         * @param message TransactionMetadata message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: query.ITransactionMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TransactionMetadata message, length delimited. Does not implicitly {@link query.TransactionMetadata.verify|verify} messages.
         * @param message TransactionMetadata message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: query.ITransactionMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TransactionMetadata message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TransactionMetadata
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): query.TransactionMetadata;

        /**
         * Decodes a TransactionMetadata message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TransactionMetadata
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): query.TransactionMetadata;

        /**
         * Verifies a TransactionMetadata message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TransactionMetadata message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TransactionMetadata
         */
        public static fromObject(object: { [k: string]: any }): query.TransactionMetadata;

        /**
         * Creates a plain object from a TransactionMetadata message. Also converts values to other types if specified.
         * @param message TransactionMetadata
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: query.TransactionMetadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TransactionMetadata to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace topodata. */
export namespace topodata {

    /** Properties of a KeyRange. */
    interface IKeyRange {

        /** KeyRange start */
        start?: (Uint8Array|null);

        /** KeyRange end */
        end?: (Uint8Array|null);
    }

    /** Represents a KeyRange. */
    class KeyRange implements IKeyRange {

        /**
         * Constructs a new KeyRange.
         * @param [properties] Properties to set
         */
        constructor(properties?: topodata.IKeyRange);

        /** KeyRange start. */
        public start: Uint8Array;

        /** KeyRange end. */
        public end: Uint8Array;

        /**
         * Creates a new KeyRange instance using the specified properties.
         * @param [properties] Properties to set
         * @returns KeyRange instance
         */
        public static create(properties?: topodata.IKeyRange): topodata.KeyRange;

        /**
         * Encodes the specified KeyRange message. Does not implicitly {@link topodata.KeyRange.verify|verify} messages.
         * @param message KeyRange message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: topodata.IKeyRange, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified KeyRange message, length delimited. Does not implicitly {@link topodata.KeyRange.verify|verify} messages.
         * @param message KeyRange message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: topodata.IKeyRange, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a KeyRange message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns KeyRange
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): topodata.KeyRange;

        /**
         * Decodes a KeyRange message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns KeyRange
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): topodata.KeyRange;

        /**
         * Verifies a KeyRange message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a KeyRange message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns KeyRange
         */
        public static fromObject(object: { [k: string]: any }): topodata.KeyRange;

        /**
         * Creates a plain object from a KeyRange message. Also converts values to other types if specified.
         * @param message KeyRange
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: topodata.KeyRange, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this KeyRange to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** KeyspaceType enum. */
    enum KeyspaceType {
        NORMAL = 0,
        SNAPSHOT = 1
    }

    /** KeyspaceIdType enum. */
    enum KeyspaceIdType {
        UNSET = 0,
        UINT64 = 1,
        BYTES = 2
    }

    /** Properties of a TabletAlias. */
    interface ITabletAlias {

        /** TabletAlias cell */
        cell?: (string|null);

        /** TabletAlias uid */
        uid?: (number|null);
    }

    /** Represents a TabletAlias. */
    class TabletAlias implements ITabletAlias {

        /**
         * Constructs a new TabletAlias.
         * @param [properties] Properties to set
         */
        constructor(properties?: topodata.ITabletAlias);

        /** TabletAlias cell. */
        public cell: string;

        /** TabletAlias uid. */
        public uid: number;

        /**
         * Creates a new TabletAlias instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TabletAlias instance
         */
        public static create(properties?: topodata.ITabletAlias): topodata.TabletAlias;

        /**
         * Encodes the specified TabletAlias message. Does not implicitly {@link topodata.TabletAlias.verify|verify} messages.
         * @param message TabletAlias message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: topodata.ITabletAlias, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TabletAlias message, length delimited. Does not implicitly {@link topodata.TabletAlias.verify|verify} messages.
         * @param message TabletAlias message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: topodata.ITabletAlias, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TabletAlias message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TabletAlias
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): topodata.TabletAlias;

        /**
         * Decodes a TabletAlias message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TabletAlias
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): topodata.TabletAlias;

        /**
         * Verifies a TabletAlias message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TabletAlias message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TabletAlias
         */
        public static fromObject(object: { [k: string]: any }): topodata.TabletAlias;

        /**
         * Creates a plain object from a TabletAlias message. Also converts values to other types if specified.
         * @param message TabletAlias
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: topodata.TabletAlias, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TabletAlias to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** TabletType enum. */
    enum TabletType {
        UNKNOWN = 0,
        MASTER = 1,
        REPLICA = 2,
        RDONLY = 3,
        BATCH = 3,
        SPARE = 4,
        EXPERIMENTAL = 5,
        BACKUP = 6,
        RESTORE = 7,
        DRAINED = 8
    }

    /** Properties of a Tablet. */
    interface ITablet {

        /** Tablet alias */
        alias?: (topodata.ITabletAlias|null);

        /** Tablet hostname */
        hostname?: (string|null);

        /** Tablet port_map */
        port_map?: ({ [k: string]: number }|null);

        /** Tablet keyspace */
        keyspace?: (string|null);

        /** Tablet shard */
        shard?: (string|null);

        /** Tablet key_range */
        key_range?: (topodata.IKeyRange|null);

        /** Tablet type */
        type?: (topodata.TabletType|null);

        /** Tablet db_name_override */
        db_name_override?: (string|null);

        /** Tablet tags */
        tags?: ({ [k: string]: string }|null);

        /** Tablet mysql_hostname */
        mysql_hostname?: (string|null);

        /** Tablet mysql_port */
        mysql_port?: (number|null);

        /** Tablet master_term_start_time */
        master_term_start_time?: (vttime.ITime|null);
    }

    /** Represents a Tablet. */
    class Tablet implements ITablet {

        /**
         * Constructs a new Tablet.
         * @param [properties] Properties to set
         */
        constructor(properties?: topodata.ITablet);

        /** Tablet alias. */
        public alias?: (topodata.ITabletAlias|null);

        /** Tablet hostname. */
        public hostname: string;

        /** Tablet port_map. */
        public port_map: { [k: string]: number };

        /** Tablet keyspace. */
        public keyspace: string;

        /** Tablet shard. */
        public shard: string;

        /** Tablet key_range. */
        public key_range?: (topodata.IKeyRange|null);

        /** Tablet type. */
        public type: topodata.TabletType;

        /** Tablet db_name_override. */
        public db_name_override: string;

        /** Tablet tags. */
        public tags: { [k: string]: string };

        /** Tablet mysql_hostname. */
        public mysql_hostname: string;

        /** Tablet mysql_port. */
        public mysql_port: number;

        /** Tablet master_term_start_time. */
        public master_term_start_time?: (vttime.ITime|null);

        /**
         * Creates a new Tablet instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Tablet instance
         */
        public static create(properties?: topodata.ITablet): topodata.Tablet;

        /**
         * Encodes the specified Tablet message. Does not implicitly {@link topodata.Tablet.verify|verify} messages.
         * @param message Tablet message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: topodata.ITablet, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Tablet message, length delimited. Does not implicitly {@link topodata.Tablet.verify|verify} messages.
         * @param message Tablet message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: topodata.ITablet, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Tablet message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Tablet
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): topodata.Tablet;

        /**
         * Decodes a Tablet message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Tablet
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): topodata.Tablet;

        /**
         * Verifies a Tablet message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Tablet message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Tablet
         */
        public static fromObject(object: { [k: string]: any }): topodata.Tablet;

        /**
         * Creates a plain object from a Tablet message. Also converts values to other types if specified.
         * @param message Tablet
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: topodata.Tablet, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Tablet to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Shard. */
    interface IShard {

        /** Shard master_alias */
        master_alias?: (topodata.ITabletAlias|null);

        /** Shard master_term_start_time */
        master_term_start_time?: (vttime.ITime|null);

        /** Shard key_range */
        key_range?: (topodata.IKeyRange|null);

        /** Shard served_types */
        served_types?: (topodata.Shard.IServedType[]|null);

        /** Shard source_shards */
        source_shards?: (topodata.Shard.ISourceShard[]|null);

        /** Shard tablet_controls */
        tablet_controls?: (topodata.Shard.ITabletControl[]|null);

        /** Shard is_master_serving */
        is_master_serving?: (boolean|null);
    }

    /** Represents a Shard. */
    class Shard implements IShard {

        /**
         * Constructs a new Shard.
         * @param [properties] Properties to set
         */
        constructor(properties?: topodata.IShard);

        /** Shard master_alias. */
        public master_alias?: (topodata.ITabletAlias|null);

        /** Shard master_term_start_time. */
        public master_term_start_time?: (vttime.ITime|null);

        /** Shard key_range. */
        public key_range?: (topodata.IKeyRange|null);

        /** Shard served_types. */
        public served_types: topodata.Shard.IServedType[];

        /** Shard source_shards. */
        public source_shards: topodata.Shard.ISourceShard[];

        /** Shard tablet_controls. */
        public tablet_controls: topodata.Shard.ITabletControl[];

        /** Shard is_master_serving. */
        public is_master_serving: boolean;

        /**
         * Creates a new Shard instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Shard instance
         */
        public static create(properties?: topodata.IShard): topodata.Shard;

        /**
         * Encodes the specified Shard message. Does not implicitly {@link topodata.Shard.verify|verify} messages.
         * @param message Shard message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: topodata.IShard, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Shard message, length delimited. Does not implicitly {@link topodata.Shard.verify|verify} messages.
         * @param message Shard message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: topodata.IShard, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Shard message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Shard
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): topodata.Shard;

        /**
         * Decodes a Shard message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Shard
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): topodata.Shard;

        /**
         * Verifies a Shard message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Shard message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Shard
         */
        public static fromObject(object: { [k: string]: any }): topodata.Shard;

        /**
         * Creates a plain object from a Shard message. Also converts values to other types if specified.
         * @param message Shard
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: topodata.Shard, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Shard to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace Shard {

        /** Properties of a ServedType. */
        interface IServedType {

            /** ServedType tablet_type */
            tablet_type?: (topodata.TabletType|null);

            /** ServedType cells */
            cells?: (string[]|null);
        }

        /** Represents a ServedType. */
        class ServedType implements IServedType {

            /**
             * Constructs a new ServedType.
             * @param [properties] Properties to set
             */
            constructor(properties?: topodata.Shard.IServedType);

            /** ServedType tablet_type. */
            public tablet_type: topodata.TabletType;

            /** ServedType cells. */
            public cells: string[];

            /**
             * Creates a new ServedType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ServedType instance
             */
            public static create(properties?: topodata.Shard.IServedType): topodata.Shard.ServedType;

            /**
             * Encodes the specified ServedType message. Does not implicitly {@link topodata.Shard.ServedType.verify|verify} messages.
             * @param message ServedType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: topodata.Shard.IServedType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ServedType message, length delimited. Does not implicitly {@link topodata.Shard.ServedType.verify|verify} messages.
             * @param message ServedType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: topodata.Shard.IServedType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ServedType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ServedType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): topodata.Shard.ServedType;

            /**
             * Decodes a ServedType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ServedType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): topodata.Shard.ServedType;

            /**
             * Verifies a ServedType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ServedType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ServedType
             */
            public static fromObject(object: { [k: string]: any }): topodata.Shard.ServedType;

            /**
             * Creates a plain object from a ServedType message. Also converts values to other types if specified.
             * @param message ServedType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: topodata.Shard.ServedType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ServedType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SourceShard. */
        interface ISourceShard {

            /** SourceShard uid */
            uid?: (number|null);

            /** SourceShard keyspace */
            keyspace?: (string|null);

            /** SourceShard shard */
            shard?: (string|null);

            /** SourceShard key_range */
            key_range?: (topodata.IKeyRange|null);

            /** SourceShard tables */
            tables?: (string[]|null);
        }

        /** Represents a SourceShard. */
        class SourceShard implements ISourceShard {

            /**
             * Constructs a new SourceShard.
             * @param [properties] Properties to set
             */
            constructor(properties?: topodata.Shard.ISourceShard);

            /** SourceShard uid. */
            public uid: number;

            /** SourceShard keyspace. */
            public keyspace: string;

            /** SourceShard shard. */
            public shard: string;

            /** SourceShard key_range. */
            public key_range?: (topodata.IKeyRange|null);

            /** SourceShard tables. */
            public tables: string[];

            /**
             * Creates a new SourceShard instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SourceShard instance
             */
            public static create(properties?: topodata.Shard.ISourceShard): topodata.Shard.SourceShard;

            /**
             * Encodes the specified SourceShard message. Does not implicitly {@link topodata.Shard.SourceShard.verify|verify} messages.
             * @param message SourceShard message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: topodata.Shard.ISourceShard, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SourceShard message, length delimited. Does not implicitly {@link topodata.Shard.SourceShard.verify|verify} messages.
             * @param message SourceShard message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: topodata.Shard.ISourceShard, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SourceShard message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SourceShard
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): topodata.Shard.SourceShard;

            /**
             * Decodes a SourceShard message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SourceShard
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): topodata.Shard.SourceShard;

            /**
             * Verifies a SourceShard message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SourceShard message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SourceShard
             */
            public static fromObject(object: { [k: string]: any }): topodata.Shard.SourceShard;

            /**
             * Creates a plain object from a SourceShard message. Also converts values to other types if specified.
             * @param message SourceShard
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: topodata.Shard.SourceShard, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SourceShard to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a TabletControl. */
        interface ITabletControl {

            /** TabletControl tablet_type */
            tablet_type?: (topodata.TabletType|null);

            /** TabletControl cells */
            cells?: (string[]|null);

            /** TabletControl blacklisted_tables */
            blacklisted_tables?: (string[]|null);

            /** TabletControl frozen */
            frozen?: (boolean|null);
        }

        /** Represents a TabletControl. */
        class TabletControl implements ITabletControl {

            /**
             * Constructs a new TabletControl.
             * @param [properties] Properties to set
             */
            constructor(properties?: topodata.Shard.ITabletControl);

            /** TabletControl tablet_type. */
            public tablet_type: topodata.TabletType;

            /** TabletControl cells. */
            public cells: string[];

            /** TabletControl blacklisted_tables. */
            public blacklisted_tables: string[];

            /** TabletControl frozen. */
            public frozen: boolean;

            /**
             * Creates a new TabletControl instance using the specified properties.
             * @param [properties] Properties to set
             * @returns TabletControl instance
             */
            public static create(properties?: topodata.Shard.ITabletControl): topodata.Shard.TabletControl;

            /**
             * Encodes the specified TabletControl message. Does not implicitly {@link topodata.Shard.TabletControl.verify|verify} messages.
             * @param message TabletControl message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: topodata.Shard.ITabletControl, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified TabletControl message, length delimited. Does not implicitly {@link topodata.Shard.TabletControl.verify|verify} messages.
             * @param message TabletControl message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: topodata.Shard.ITabletControl, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a TabletControl message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TabletControl
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): topodata.Shard.TabletControl;

            /**
             * Decodes a TabletControl message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TabletControl
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): topodata.Shard.TabletControl;

            /**
             * Verifies a TabletControl message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a TabletControl message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TabletControl
             */
            public static fromObject(object: { [k: string]: any }): topodata.Shard.TabletControl;

            /**
             * Creates a plain object from a TabletControl message. Also converts values to other types if specified.
             * @param message TabletControl
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: topodata.Shard.TabletControl, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TabletControl to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a Keyspace. */
    interface IKeyspace {

        /** Keyspace sharding_column_name */
        sharding_column_name?: (string|null);

        /** Keyspace sharding_column_type */
        sharding_column_type?: (topodata.KeyspaceIdType|null);

        /** Keyspace served_froms */
        served_froms?: (topodata.Keyspace.IServedFrom[]|null);

        /** Keyspace keyspace_type */
        keyspace_type?: (topodata.KeyspaceType|null);

        /** Keyspace base_keyspace */
        base_keyspace?: (string|null);

        /** Keyspace snapshot_time */
        snapshot_time?: (vttime.ITime|null);
    }

    /** Represents a Keyspace. */
    class Keyspace implements IKeyspace {

        /**
         * Constructs a new Keyspace.
         * @param [properties] Properties to set
         */
        constructor(properties?: topodata.IKeyspace);

        /** Keyspace sharding_column_name. */
        public sharding_column_name: string;

        /** Keyspace sharding_column_type. */
        public sharding_column_type: topodata.KeyspaceIdType;

        /** Keyspace served_froms. */
        public served_froms: topodata.Keyspace.IServedFrom[];

        /** Keyspace keyspace_type. */
        public keyspace_type: topodata.KeyspaceType;

        /** Keyspace base_keyspace. */
        public base_keyspace: string;

        /** Keyspace snapshot_time. */
        public snapshot_time?: (vttime.ITime|null);

        /**
         * Creates a new Keyspace instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Keyspace instance
         */
        public static create(properties?: topodata.IKeyspace): topodata.Keyspace;

        /**
         * Encodes the specified Keyspace message. Does not implicitly {@link topodata.Keyspace.verify|verify} messages.
         * @param message Keyspace message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: topodata.IKeyspace, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Keyspace message, length delimited. Does not implicitly {@link topodata.Keyspace.verify|verify} messages.
         * @param message Keyspace message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: topodata.IKeyspace, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Keyspace message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Keyspace
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): topodata.Keyspace;

        /**
         * Decodes a Keyspace message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Keyspace
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): topodata.Keyspace;

        /**
         * Verifies a Keyspace message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Keyspace message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Keyspace
         */
        public static fromObject(object: { [k: string]: any }): topodata.Keyspace;

        /**
         * Creates a plain object from a Keyspace message. Also converts values to other types if specified.
         * @param message Keyspace
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: topodata.Keyspace, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Keyspace to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace Keyspace {

        /** Properties of a ServedFrom. */
        interface IServedFrom {

            /** ServedFrom tablet_type */
            tablet_type?: (topodata.TabletType|null);

            /** ServedFrom cells */
            cells?: (string[]|null);

            /** ServedFrom keyspace */
            keyspace?: (string|null);
        }

        /** Represents a ServedFrom. */
        class ServedFrom implements IServedFrom {

            /**
             * Constructs a new ServedFrom.
             * @param [properties] Properties to set
             */
            constructor(properties?: topodata.Keyspace.IServedFrom);

            /** ServedFrom tablet_type. */
            public tablet_type: topodata.TabletType;

            /** ServedFrom cells. */
            public cells: string[];

            /** ServedFrom keyspace. */
            public keyspace: string;

            /**
             * Creates a new ServedFrom instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ServedFrom instance
             */
            public static create(properties?: topodata.Keyspace.IServedFrom): topodata.Keyspace.ServedFrom;

            /**
             * Encodes the specified ServedFrom message. Does not implicitly {@link topodata.Keyspace.ServedFrom.verify|verify} messages.
             * @param message ServedFrom message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: topodata.Keyspace.IServedFrom, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ServedFrom message, length delimited. Does not implicitly {@link topodata.Keyspace.ServedFrom.verify|verify} messages.
             * @param message ServedFrom message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: topodata.Keyspace.IServedFrom, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ServedFrom message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ServedFrom
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): topodata.Keyspace.ServedFrom;

            /**
             * Decodes a ServedFrom message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ServedFrom
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): topodata.Keyspace.ServedFrom;

            /**
             * Verifies a ServedFrom message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ServedFrom message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ServedFrom
             */
            public static fromObject(object: { [k: string]: any }): topodata.Keyspace.ServedFrom;

            /**
             * Creates a plain object from a ServedFrom message. Also converts values to other types if specified.
             * @param message ServedFrom
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: topodata.Keyspace.ServedFrom, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ServedFrom to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a ShardReplication. */
    interface IShardReplication {

        /** ShardReplication nodes */
        nodes?: (topodata.ShardReplication.INode[]|null);
    }

    /** Represents a ShardReplication. */
    class ShardReplication implements IShardReplication {

        /**
         * Constructs a new ShardReplication.
         * @param [properties] Properties to set
         */
        constructor(properties?: topodata.IShardReplication);

        /** ShardReplication nodes. */
        public nodes: topodata.ShardReplication.INode[];

        /**
         * Creates a new ShardReplication instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ShardReplication instance
         */
        public static create(properties?: topodata.IShardReplication): topodata.ShardReplication;

        /**
         * Encodes the specified ShardReplication message. Does not implicitly {@link topodata.ShardReplication.verify|verify} messages.
         * @param message ShardReplication message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: topodata.IShardReplication, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ShardReplication message, length delimited. Does not implicitly {@link topodata.ShardReplication.verify|verify} messages.
         * @param message ShardReplication message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: topodata.IShardReplication, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ShardReplication message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ShardReplication
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): topodata.ShardReplication;

        /**
         * Decodes a ShardReplication message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ShardReplication
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): topodata.ShardReplication;

        /**
         * Verifies a ShardReplication message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ShardReplication message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ShardReplication
         */
        public static fromObject(object: { [k: string]: any }): topodata.ShardReplication;

        /**
         * Creates a plain object from a ShardReplication message. Also converts values to other types if specified.
         * @param message ShardReplication
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: topodata.ShardReplication, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ShardReplication to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace ShardReplication {

        /** Properties of a Node. */
        interface INode {

            /** Node tablet_alias */
            tablet_alias?: (topodata.ITabletAlias|null);
        }

        /** Represents a Node. */
        class Node implements INode {

            /**
             * Constructs a new Node.
             * @param [properties] Properties to set
             */
            constructor(properties?: topodata.ShardReplication.INode);

            /** Node tablet_alias. */
            public tablet_alias?: (topodata.ITabletAlias|null);

            /**
             * Creates a new Node instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Node instance
             */
            public static create(properties?: topodata.ShardReplication.INode): topodata.ShardReplication.Node;

            /**
             * Encodes the specified Node message. Does not implicitly {@link topodata.ShardReplication.Node.verify|verify} messages.
             * @param message Node message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: topodata.ShardReplication.INode, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Node message, length delimited. Does not implicitly {@link topodata.ShardReplication.Node.verify|verify} messages.
             * @param message Node message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: topodata.ShardReplication.INode, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Node message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Node
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): topodata.ShardReplication.Node;

            /**
             * Decodes a Node message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Node
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): topodata.ShardReplication.Node;

            /**
             * Verifies a Node message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Node message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Node
             */
            public static fromObject(object: { [k: string]: any }): topodata.ShardReplication.Node;

            /**
             * Creates a plain object from a Node message. Also converts values to other types if specified.
             * @param message Node
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: topodata.ShardReplication.Node, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Node to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a ShardReference. */
    interface IShardReference {

        /** ShardReference name */
        name?: (string|null);

        /** ShardReference key_range */
        key_range?: (topodata.IKeyRange|null);
    }

    /** Represents a ShardReference. */
    class ShardReference implements IShardReference {

        /**
         * Constructs a new ShardReference.
         * @param [properties] Properties to set
         */
        constructor(properties?: topodata.IShardReference);

        /** ShardReference name. */
        public name: string;

        /** ShardReference key_range. */
        public key_range?: (topodata.IKeyRange|null);

        /**
         * Creates a new ShardReference instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ShardReference instance
         */
        public static create(properties?: topodata.IShardReference): topodata.ShardReference;

        /**
         * Encodes the specified ShardReference message. Does not implicitly {@link topodata.ShardReference.verify|verify} messages.
         * @param message ShardReference message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: topodata.IShardReference, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ShardReference message, length delimited. Does not implicitly {@link topodata.ShardReference.verify|verify} messages.
         * @param message ShardReference message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: topodata.IShardReference, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ShardReference message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ShardReference
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): topodata.ShardReference;

        /**
         * Decodes a ShardReference message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ShardReference
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): topodata.ShardReference;

        /**
         * Verifies a ShardReference message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ShardReference message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ShardReference
         */
        public static fromObject(object: { [k: string]: any }): topodata.ShardReference;

        /**
         * Creates a plain object from a ShardReference message. Also converts values to other types if specified.
         * @param message ShardReference
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: topodata.ShardReference, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ShardReference to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ShardTabletControl. */
    interface IShardTabletControl {

        /** ShardTabletControl name */
        name?: (string|null);

        /** ShardTabletControl key_range */
        key_range?: (topodata.IKeyRange|null);

        /** ShardTabletControl query_service_disabled */
        query_service_disabled?: (boolean|null);
    }

    /** Represents a ShardTabletControl. */
    class ShardTabletControl implements IShardTabletControl {

        /**
         * Constructs a new ShardTabletControl.
         * @param [properties] Properties to set
         */
        constructor(properties?: topodata.IShardTabletControl);

        /** ShardTabletControl name. */
        public name: string;

        /** ShardTabletControl key_range. */
        public key_range?: (topodata.IKeyRange|null);

        /** ShardTabletControl query_service_disabled. */
        public query_service_disabled: boolean;

        /**
         * Creates a new ShardTabletControl instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ShardTabletControl instance
         */
        public static create(properties?: topodata.IShardTabletControl): topodata.ShardTabletControl;

        /**
         * Encodes the specified ShardTabletControl message. Does not implicitly {@link topodata.ShardTabletControl.verify|verify} messages.
         * @param message ShardTabletControl message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: topodata.IShardTabletControl, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ShardTabletControl message, length delimited. Does not implicitly {@link topodata.ShardTabletControl.verify|verify} messages.
         * @param message ShardTabletControl message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: topodata.IShardTabletControl, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ShardTabletControl message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ShardTabletControl
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): topodata.ShardTabletControl;

        /**
         * Decodes a ShardTabletControl message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ShardTabletControl
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): topodata.ShardTabletControl;

        /**
         * Verifies a ShardTabletControl message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ShardTabletControl message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ShardTabletControl
         */
        public static fromObject(object: { [k: string]: any }): topodata.ShardTabletControl;

        /**
         * Creates a plain object from a ShardTabletControl message. Also converts values to other types if specified.
         * @param message ShardTabletControl
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: topodata.ShardTabletControl, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ShardTabletControl to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SrvKeyspace. */
    interface ISrvKeyspace {

        /** SrvKeyspace partitions */
        partitions?: (topodata.SrvKeyspace.IKeyspacePartition[]|null);

        /** SrvKeyspace sharding_column_name */
        sharding_column_name?: (string|null);

        /** SrvKeyspace sharding_column_type */
        sharding_column_type?: (topodata.KeyspaceIdType|null);

        /** SrvKeyspace served_from */
        served_from?: (topodata.SrvKeyspace.IServedFrom[]|null);
    }

    /** Represents a SrvKeyspace. */
    class SrvKeyspace implements ISrvKeyspace {

        /**
         * Constructs a new SrvKeyspace.
         * @param [properties] Properties to set
         */
        constructor(properties?: topodata.ISrvKeyspace);

        /** SrvKeyspace partitions. */
        public partitions: topodata.SrvKeyspace.IKeyspacePartition[];

        /** SrvKeyspace sharding_column_name. */
        public sharding_column_name: string;

        /** SrvKeyspace sharding_column_type. */
        public sharding_column_type: topodata.KeyspaceIdType;

        /** SrvKeyspace served_from. */
        public served_from: topodata.SrvKeyspace.IServedFrom[];

        /**
         * Creates a new SrvKeyspace instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SrvKeyspace instance
         */
        public static create(properties?: topodata.ISrvKeyspace): topodata.SrvKeyspace;

        /**
         * Encodes the specified SrvKeyspace message. Does not implicitly {@link topodata.SrvKeyspace.verify|verify} messages.
         * @param message SrvKeyspace message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: topodata.ISrvKeyspace, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SrvKeyspace message, length delimited. Does not implicitly {@link topodata.SrvKeyspace.verify|verify} messages.
         * @param message SrvKeyspace message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: topodata.ISrvKeyspace, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SrvKeyspace message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SrvKeyspace
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): topodata.SrvKeyspace;

        /**
         * Decodes a SrvKeyspace message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SrvKeyspace
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): topodata.SrvKeyspace;

        /**
         * Verifies a SrvKeyspace message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SrvKeyspace message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SrvKeyspace
         */
        public static fromObject(object: { [k: string]: any }): topodata.SrvKeyspace;

        /**
         * Creates a plain object from a SrvKeyspace message. Also converts values to other types if specified.
         * @param message SrvKeyspace
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: topodata.SrvKeyspace, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SrvKeyspace to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace SrvKeyspace {

        /** Properties of a KeyspacePartition. */
        interface IKeyspacePartition {

            /** KeyspacePartition served_type */
            served_type?: (topodata.TabletType|null);

            /** KeyspacePartition shard_references */
            shard_references?: (topodata.IShardReference[]|null);

            /** KeyspacePartition shard_tablet_controls */
            shard_tablet_controls?: (topodata.IShardTabletControl[]|null);
        }

        /** Represents a KeyspacePartition. */
        class KeyspacePartition implements IKeyspacePartition {

            /**
             * Constructs a new KeyspacePartition.
             * @param [properties] Properties to set
             */
            constructor(properties?: topodata.SrvKeyspace.IKeyspacePartition);

            /** KeyspacePartition served_type. */
            public served_type: topodata.TabletType;

            /** KeyspacePartition shard_references. */
            public shard_references: topodata.IShardReference[];

            /** KeyspacePartition shard_tablet_controls. */
            public shard_tablet_controls: topodata.IShardTabletControl[];

            /**
             * Creates a new KeyspacePartition instance using the specified properties.
             * @param [properties] Properties to set
             * @returns KeyspacePartition instance
             */
            public static create(properties?: topodata.SrvKeyspace.IKeyspacePartition): topodata.SrvKeyspace.KeyspacePartition;

            /**
             * Encodes the specified KeyspacePartition message. Does not implicitly {@link topodata.SrvKeyspace.KeyspacePartition.verify|verify} messages.
             * @param message KeyspacePartition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: topodata.SrvKeyspace.IKeyspacePartition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified KeyspacePartition message, length delimited. Does not implicitly {@link topodata.SrvKeyspace.KeyspacePartition.verify|verify} messages.
             * @param message KeyspacePartition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: topodata.SrvKeyspace.IKeyspacePartition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a KeyspacePartition message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns KeyspacePartition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): topodata.SrvKeyspace.KeyspacePartition;

            /**
             * Decodes a KeyspacePartition message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns KeyspacePartition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): topodata.SrvKeyspace.KeyspacePartition;

            /**
             * Verifies a KeyspacePartition message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a KeyspacePartition message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns KeyspacePartition
             */
            public static fromObject(object: { [k: string]: any }): topodata.SrvKeyspace.KeyspacePartition;

            /**
             * Creates a plain object from a KeyspacePartition message. Also converts values to other types if specified.
             * @param message KeyspacePartition
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: topodata.SrvKeyspace.KeyspacePartition, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this KeyspacePartition to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ServedFrom. */
        interface IServedFrom {

            /** ServedFrom tablet_type */
            tablet_type?: (topodata.TabletType|null);

            /** ServedFrom keyspace */
            keyspace?: (string|null);
        }

        /** Represents a ServedFrom. */
        class ServedFrom implements IServedFrom {

            /**
             * Constructs a new ServedFrom.
             * @param [properties] Properties to set
             */
            constructor(properties?: topodata.SrvKeyspace.IServedFrom);

            /** ServedFrom tablet_type. */
            public tablet_type: topodata.TabletType;

            /** ServedFrom keyspace. */
            public keyspace: string;

            /**
             * Creates a new ServedFrom instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ServedFrom instance
             */
            public static create(properties?: topodata.SrvKeyspace.IServedFrom): topodata.SrvKeyspace.ServedFrom;

            /**
             * Encodes the specified ServedFrom message. Does not implicitly {@link topodata.SrvKeyspace.ServedFrom.verify|verify} messages.
             * @param message ServedFrom message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: topodata.SrvKeyspace.IServedFrom, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ServedFrom message, length delimited. Does not implicitly {@link topodata.SrvKeyspace.ServedFrom.verify|verify} messages.
             * @param message ServedFrom message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: topodata.SrvKeyspace.IServedFrom, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ServedFrom message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ServedFrom
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): topodata.SrvKeyspace.ServedFrom;

            /**
             * Decodes a ServedFrom message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ServedFrom
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): topodata.SrvKeyspace.ServedFrom;

            /**
             * Verifies a ServedFrom message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ServedFrom message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ServedFrom
             */
            public static fromObject(object: { [k: string]: any }): topodata.SrvKeyspace.ServedFrom;

            /**
             * Creates a plain object from a ServedFrom message. Also converts values to other types if specified.
             * @param message ServedFrom
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: topodata.SrvKeyspace.ServedFrom, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ServedFrom to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a CellInfo. */
    interface ICellInfo {

        /** CellInfo server_address */
        server_address?: (string|null);

        /** CellInfo root */
        root?: (string|null);
    }

    /** Represents a CellInfo. */
    class CellInfo implements ICellInfo {

        /**
         * Constructs a new CellInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: topodata.ICellInfo);

        /** CellInfo server_address. */
        public server_address: string;

        /** CellInfo root. */
        public root: string;

        /**
         * Creates a new CellInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CellInfo instance
         */
        public static create(properties?: topodata.ICellInfo): topodata.CellInfo;

        /**
         * Encodes the specified CellInfo message. Does not implicitly {@link topodata.CellInfo.verify|verify} messages.
         * @param message CellInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: topodata.ICellInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CellInfo message, length delimited. Does not implicitly {@link topodata.CellInfo.verify|verify} messages.
         * @param message CellInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: topodata.ICellInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CellInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CellInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): topodata.CellInfo;

        /**
         * Decodes a CellInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CellInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): topodata.CellInfo;

        /**
         * Verifies a CellInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CellInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CellInfo
         */
        public static fromObject(object: { [k: string]: any }): topodata.CellInfo;

        /**
         * Creates a plain object from a CellInfo message. Also converts values to other types if specified.
         * @param message CellInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: topodata.CellInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CellInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CellsAlias. */
    interface ICellsAlias {

        /** CellsAlias cells */
        cells?: (string[]|null);
    }

    /** Represents a CellsAlias. */
    class CellsAlias implements ICellsAlias {

        /**
         * Constructs a new CellsAlias.
         * @param [properties] Properties to set
         */
        constructor(properties?: topodata.ICellsAlias);

        /** CellsAlias cells. */
        public cells: string[];

        /**
         * Creates a new CellsAlias instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CellsAlias instance
         */
        public static create(properties?: topodata.ICellsAlias): topodata.CellsAlias;

        /**
         * Encodes the specified CellsAlias message. Does not implicitly {@link topodata.CellsAlias.verify|verify} messages.
         * @param message CellsAlias message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: topodata.ICellsAlias, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CellsAlias message, length delimited. Does not implicitly {@link topodata.CellsAlias.verify|verify} messages.
         * @param message CellsAlias message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: topodata.ICellsAlias, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CellsAlias message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CellsAlias
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): topodata.CellsAlias;

        /**
         * Decodes a CellsAlias message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CellsAlias
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): topodata.CellsAlias;

        /**
         * Verifies a CellsAlias message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CellsAlias message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CellsAlias
         */
        public static fromObject(object: { [k: string]: any }): topodata.CellsAlias;

        /**
         * Creates a plain object from a CellsAlias message. Also converts values to other types if specified.
         * @param message CellsAlias
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: topodata.CellsAlias, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CellsAlias to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TopoConfig. */
    interface ITopoConfig {

        /** TopoConfig topo_type */
        topo_type?: (string|null);

        /** TopoConfig server */
        server?: (string|null);

        /** TopoConfig root */
        root?: (string|null);
    }

    /** Represents a TopoConfig. */
    class TopoConfig implements ITopoConfig {

        /**
         * Constructs a new TopoConfig.
         * @param [properties] Properties to set
         */
        constructor(properties?: topodata.ITopoConfig);

        /** TopoConfig topo_type. */
        public topo_type: string;

        /** TopoConfig server. */
        public server: string;

        /** TopoConfig root. */
        public root: string;

        /**
         * Creates a new TopoConfig instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TopoConfig instance
         */
        public static create(properties?: topodata.ITopoConfig): topodata.TopoConfig;

        /**
         * Encodes the specified TopoConfig message. Does not implicitly {@link topodata.TopoConfig.verify|verify} messages.
         * @param message TopoConfig message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: topodata.ITopoConfig, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TopoConfig message, length delimited. Does not implicitly {@link topodata.TopoConfig.verify|verify} messages.
         * @param message TopoConfig message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: topodata.ITopoConfig, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TopoConfig message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TopoConfig
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): topodata.TopoConfig;

        /**
         * Decodes a TopoConfig message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TopoConfig
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): topodata.TopoConfig;

        /**
         * Verifies a TopoConfig message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TopoConfig message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TopoConfig
         */
        public static fromObject(object: { [k: string]: any }): topodata.TopoConfig;

        /**
         * Creates a plain object from a TopoConfig message. Also converts values to other types if specified.
         * @param message TopoConfig
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: topodata.TopoConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TopoConfig to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ExternalVitessCluster. */
    interface IExternalVitessCluster {

        /** ExternalVitessCluster topo_config */
        topo_config?: (topodata.ITopoConfig|null);
    }

    /** Represents an ExternalVitessCluster. */
    class ExternalVitessCluster implements IExternalVitessCluster {

        /**
         * Constructs a new ExternalVitessCluster.
         * @param [properties] Properties to set
         */
        constructor(properties?: topodata.IExternalVitessCluster);

        /** ExternalVitessCluster topo_config. */
        public topo_config?: (topodata.ITopoConfig|null);

        /**
         * Creates a new ExternalVitessCluster instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ExternalVitessCluster instance
         */
        public static create(properties?: topodata.IExternalVitessCluster): topodata.ExternalVitessCluster;

        /**
         * Encodes the specified ExternalVitessCluster message. Does not implicitly {@link topodata.ExternalVitessCluster.verify|verify} messages.
         * @param message ExternalVitessCluster message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: topodata.IExternalVitessCluster, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ExternalVitessCluster message, length delimited. Does not implicitly {@link topodata.ExternalVitessCluster.verify|verify} messages.
         * @param message ExternalVitessCluster message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: topodata.IExternalVitessCluster, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ExternalVitessCluster message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ExternalVitessCluster
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): topodata.ExternalVitessCluster;

        /**
         * Decodes an ExternalVitessCluster message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ExternalVitessCluster
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): topodata.ExternalVitessCluster;

        /**
         * Verifies an ExternalVitessCluster message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ExternalVitessCluster message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ExternalVitessCluster
         */
        public static fromObject(object: { [k: string]: any }): topodata.ExternalVitessCluster;

        /**
         * Creates a plain object from an ExternalVitessCluster message. Also converts values to other types if specified.
         * @param message ExternalVitessCluster
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: topodata.ExternalVitessCluster, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ExternalVitessCluster to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ExternalClusters. */
    interface IExternalClusters {

        /** ExternalClusters vitess_cluster */
        vitess_cluster?: (topodata.IExternalVitessCluster[]|null);
    }

    /** Represents an ExternalClusters. */
    class ExternalClusters implements IExternalClusters {

        /**
         * Constructs a new ExternalClusters.
         * @param [properties] Properties to set
         */
        constructor(properties?: topodata.IExternalClusters);

        /** ExternalClusters vitess_cluster. */
        public vitess_cluster: topodata.IExternalVitessCluster[];

        /**
         * Creates a new ExternalClusters instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ExternalClusters instance
         */
        public static create(properties?: topodata.IExternalClusters): topodata.ExternalClusters;

        /**
         * Encodes the specified ExternalClusters message. Does not implicitly {@link topodata.ExternalClusters.verify|verify} messages.
         * @param message ExternalClusters message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: topodata.IExternalClusters, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ExternalClusters message, length delimited. Does not implicitly {@link topodata.ExternalClusters.verify|verify} messages.
         * @param message ExternalClusters message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: topodata.IExternalClusters, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ExternalClusters message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ExternalClusters
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): topodata.ExternalClusters;

        /**
         * Decodes an ExternalClusters message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ExternalClusters
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): topodata.ExternalClusters;

        /**
         * Verifies an ExternalClusters message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ExternalClusters message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ExternalClusters
         */
        public static fromObject(object: { [k: string]: any }): topodata.ExternalClusters;

        /**
         * Creates a plain object from an ExternalClusters message. Also converts values to other types if specified.
         * @param message ExternalClusters
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: topodata.ExternalClusters, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ExternalClusters to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace vttime. */
export namespace vttime {

    /** Properties of a Time. */
    interface ITime {

        /** Time seconds */
        seconds?: (number|Long|null);

        /** Time nanoseconds */
        nanoseconds?: (number|null);
    }

    /** Represents a Time. */
    class Time implements ITime {

        /**
         * Constructs a new Time.
         * @param [properties] Properties to set
         */
        constructor(properties?: vttime.ITime);

        /** Time seconds. */
        public seconds: (number|Long);

        /** Time nanoseconds. */
        public nanoseconds: number;

        /**
         * Creates a new Time instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Time instance
         */
        public static create(properties?: vttime.ITime): vttime.Time;

        /**
         * Encodes the specified Time message. Does not implicitly {@link vttime.Time.verify|verify} messages.
         * @param message Time message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vttime.ITime, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Time message, length delimited. Does not implicitly {@link vttime.Time.verify|verify} messages.
         * @param message Time message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vttime.ITime, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Time message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Time
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vttime.Time;

        /**
         * Decodes a Time message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Time
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vttime.Time;

        /**
         * Verifies a Time message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Time message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Time
         */
        public static fromObject(object: { [k: string]: any }): vttime.Time;

        /**
         * Creates a plain object from a Time message. Also converts values to other types if specified.
         * @param message Time
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vttime.Time, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Time to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Duration. */
    interface IDuration {

        /** Duration seconds */
        seconds?: (number|Long|null);

        /** Duration nanos */
        nanos?: (number|null);
    }

    /** Represents a Duration. */
    class Duration implements IDuration {

        /**
         * Constructs a new Duration.
         * @param [properties] Properties to set
         */
        constructor(properties?: vttime.IDuration);

        /** Duration seconds. */
        public seconds: (number|Long);

        /** Duration nanos. */
        public nanos: number;

        /**
         * Creates a new Duration instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Duration instance
         */
        public static create(properties?: vttime.IDuration): vttime.Duration;

        /**
         * Encodes the specified Duration message. Does not implicitly {@link vttime.Duration.verify|verify} messages.
         * @param message Duration message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vttime.IDuration, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Duration message, length delimited. Does not implicitly {@link vttime.Duration.verify|verify} messages.
         * @param message Duration message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vttime.IDuration, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Duration message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Duration
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vttime.Duration;

        /**
         * Decodes a Duration message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Duration
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vttime.Duration;

        /**
         * Verifies a Duration message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Duration message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Duration
         */
        public static fromObject(object: { [k: string]: any }): vttime.Duration;

        /**
         * Creates a plain object from a Duration message. Also converts values to other types if specified.
         * @param message Duration
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vttime.Duration, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Duration to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace vtrpc. */
export namespace vtrpc {

    /** Properties of a CallerID. */
    interface ICallerID {

        /** CallerID principal */
        principal?: (string|null);

        /** CallerID component */
        component?: (string|null);

        /** CallerID subcomponent */
        subcomponent?: (string|null);
    }

    /** Represents a CallerID. */
    class CallerID implements ICallerID {

        /**
         * Constructs a new CallerID.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtrpc.ICallerID);

        /** CallerID principal. */
        public principal: string;

        /** CallerID component. */
        public component: string;

        /** CallerID subcomponent. */
        public subcomponent: string;

        /**
         * Creates a new CallerID instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CallerID instance
         */
        public static create(properties?: vtrpc.ICallerID): vtrpc.CallerID;

        /**
         * Encodes the specified CallerID message. Does not implicitly {@link vtrpc.CallerID.verify|verify} messages.
         * @param message CallerID message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtrpc.ICallerID, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CallerID message, length delimited. Does not implicitly {@link vtrpc.CallerID.verify|verify} messages.
         * @param message CallerID message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtrpc.ICallerID, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CallerID message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CallerID
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtrpc.CallerID;

        /**
         * Decodes a CallerID message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CallerID
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtrpc.CallerID;

        /**
         * Verifies a CallerID message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CallerID message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CallerID
         */
        public static fromObject(object: { [k: string]: any }): vtrpc.CallerID;

        /**
         * Creates a plain object from a CallerID message. Also converts values to other types if specified.
         * @param message CallerID
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtrpc.CallerID, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CallerID to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Code enum. */
    enum Code {
        OK = 0,
        CANCELED = 1,
        UNKNOWN = 2,
        INVALID_ARGUMENT = 3,
        DEADLINE_EXCEEDED = 4,
        NOT_FOUND = 5,
        ALREADY_EXISTS = 6,
        PERMISSION_DENIED = 7,
        UNAUTHENTICATED = 16,
        RESOURCE_EXHAUSTED = 8,
        FAILED_PRECONDITION = 9,
        ABORTED = 10,
        OUT_OF_RANGE = 11,
        UNIMPLEMENTED = 12,
        INTERNAL = 13,
        UNAVAILABLE = 14,
        DATA_LOSS = 15
    }

    /** LegacyErrorCode enum. */
    enum LegacyErrorCode {
        SUCCESS_LEGACY = 0,
        CANCELLED_LEGACY = 1,
        UNKNOWN_ERROR_LEGACY = 2,
        BAD_INPUT_LEGACY = 3,
        DEADLINE_EXCEEDED_LEGACY = 4,
        INTEGRITY_ERROR_LEGACY = 5,
        PERMISSION_DENIED_LEGACY = 6,
        RESOURCE_EXHAUSTED_LEGACY = 7,
        QUERY_NOT_SERVED_LEGACY = 8,
        NOT_IN_TX_LEGACY = 9,
        INTERNAL_ERROR_LEGACY = 10,
        TRANSIENT_ERROR_LEGACY = 11,
        UNAUTHENTICATED_LEGACY = 12
    }

    /** Properties of a RPCError. */
    interface IRPCError {

        /** RPCError legacy_code */
        legacy_code?: (vtrpc.LegacyErrorCode|null);

        /** RPCError message */
        message?: (string|null);

        /** RPCError code */
        code?: (vtrpc.Code|null);
    }

    /** Represents a RPCError. */
    class RPCError implements IRPCError {

        /**
         * Constructs a new RPCError.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtrpc.IRPCError);

        /** RPCError legacy_code. */
        public legacy_code: vtrpc.LegacyErrorCode;

        /** RPCError message. */
        public message: string;

        /** RPCError code. */
        public code: vtrpc.Code;

        /**
         * Creates a new RPCError instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RPCError instance
         */
        public static create(properties?: vtrpc.IRPCError): vtrpc.RPCError;

        /**
         * Encodes the specified RPCError message. Does not implicitly {@link vtrpc.RPCError.verify|verify} messages.
         * @param message RPCError message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtrpc.IRPCError, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RPCError message, length delimited. Does not implicitly {@link vtrpc.RPCError.verify|verify} messages.
         * @param message RPCError message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtrpc.IRPCError, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RPCError message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RPCError
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtrpc.RPCError;

        /**
         * Decodes a RPCError message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RPCError
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtrpc.RPCError;

        /**
         * Verifies a RPCError message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RPCError message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RPCError
         */
        public static fromObject(object: { [k: string]: any }): vtrpc.RPCError;

        /**
         * Creates a plain object from a RPCError message. Also converts values to other types if specified.
         * @param message RPCError
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtrpc.RPCError, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RPCError to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace replicationdata. */
export namespace replicationdata {

    /** Properties of a Status. */
    interface IStatus {

        /** Status position */
        position?: (string|null);

        /** Status io_thread_running */
        io_thread_running?: (boolean|null);

        /** Status sql_thread_running */
        sql_thread_running?: (boolean|null);

        /** Status seconds_behind_master */
        seconds_behind_master?: (number|null);

        /** Status master_host */
        master_host?: (string|null);

        /** Status master_port */
        master_port?: (number|null);

        /** Status master_connect_retry */
        master_connect_retry?: (number|null);

        /** Status relay_log_position */
        relay_log_position?: (string|null);

        /** Status file_position */
        file_position?: (string|null);

        /** Status file_relay_log_position */
        file_relay_log_position?: (string|null);

        /** Status master_server_id */
        master_server_id?: (number|null);

        /** Status master_uuid */
        master_uuid?: (string|null);
    }

    /** Represents a Status. */
    class Status implements IStatus {

        /**
         * Constructs a new Status.
         * @param [properties] Properties to set
         */
        constructor(properties?: replicationdata.IStatus);

        /** Status position. */
        public position: string;

        /** Status io_thread_running. */
        public io_thread_running: boolean;

        /** Status sql_thread_running. */
        public sql_thread_running: boolean;

        /** Status seconds_behind_master. */
        public seconds_behind_master: number;

        /** Status master_host. */
        public master_host: string;

        /** Status master_port. */
        public master_port: number;

        /** Status master_connect_retry. */
        public master_connect_retry: number;

        /** Status relay_log_position. */
        public relay_log_position: string;

        /** Status file_position. */
        public file_position: string;

        /** Status file_relay_log_position. */
        public file_relay_log_position: string;

        /** Status master_server_id. */
        public master_server_id: number;

        /** Status master_uuid. */
        public master_uuid: string;

        /**
         * Creates a new Status instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Status instance
         */
        public static create(properties?: replicationdata.IStatus): replicationdata.Status;

        /**
         * Encodes the specified Status message. Does not implicitly {@link replicationdata.Status.verify|verify} messages.
         * @param message Status message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: replicationdata.IStatus, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Status message, length delimited. Does not implicitly {@link replicationdata.Status.verify|verify} messages.
         * @param message Status message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: replicationdata.IStatus, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Status message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Status
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replicationdata.Status;

        /**
         * Decodes a Status message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Status
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replicationdata.Status;

        /**
         * Verifies a Status message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Status message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Status
         */
        public static fromObject(object: { [k: string]: any }): replicationdata.Status;

        /**
         * Creates a plain object from a Status message. Also converts values to other types if specified.
         * @param message Status
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: replicationdata.Status, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Status to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a StopReplicationStatus. */
    interface IStopReplicationStatus {

        /** StopReplicationStatus before */
        before?: (replicationdata.IStatus|null);

        /** StopReplicationStatus after */
        after?: (replicationdata.IStatus|null);
    }

    /** Represents a StopReplicationStatus. */
    class StopReplicationStatus implements IStopReplicationStatus {

        /**
         * Constructs a new StopReplicationStatus.
         * @param [properties] Properties to set
         */
        constructor(properties?: replicationdata.IStopReplicationStatus);

        /** StopReplicationStatus before. */
        public before?: (replicationdata.IStatus|null);

        /** StopReplicationStatus after. */
        public after?: (replicationdata.IStatus|null);

        /**
         * Creates a new StopReplicationStatus instance using the specified properties.
         * @param [properties] Properties to set
         * @returns StopReplicationStatus instance
         */
        public static create(properties?: replicationdata.IStopReplicationStatus): replicationdata.StopReplicationStatus;

        /**
         * Encodes the specified StopReplicationStatus message. Does not implicitly {@link replicationdata.StopReplicationStatus.verify|verify} messages.
         * @param message StopReplicationStatus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: replicationdata.IStopReplicationStatus, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified StopReplicationStatus message, length delimited. Does not implicitly {@link replicationdata.StopReplicationStatus.verify|verify} messages.
         * @param message StopReplicationStatus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: replicationdata.IStopReplicationStatus, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a StopReplicationStatus message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns StopReplicationStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replicationdata.StopReplicationStatus;

        /**
         * Decodes a StopReplicationStatus message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns StopReplicationStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replicationdata.StopReplicationStatus;

        /**
         * Verifies a StopReplicationStatus message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a StopReplicationStatus message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns StopReplicationStatus
         */
        public static fromObject(object: { [k: string]: any }): replicationdata.StopReplicationStatus;

        /**
         * Creates a plain object from a StopReplicationStatus message. Also converts values to other types if specified.
         * @param message StopReplicationStatus
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: replicationdata.StopReplicationStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this StopReplicationStatus to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** StopReplicationMode enum. */
    enum StopReplicationMode {
        IOANDSQLTHREAD = 0,
        IOTHREADONLY = 1
    }

    /** Properties of a MasterStatus. */
    interface IMasterStatus {

        /** MasterStatus position */
        position?: (string|null);

        /** MasterStatus file_position */
        file_position?: (string|null);
    }

    /** Represents a MasterStatus. */
    class MasterStatus implements IMasterStatus {

        /**
         * Constructs a new MasterStatus.
         * @param [properties] Properties to set
         */
        constructor(properties?: replicationdata.IMasterStatus);

        /** MasterStatus position. */
        public position: string;

        /** MasterStatus file_position. */
        public file_position: string;

        /**
         * Creates a new MasterStatus instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MasterStatus instance
         */
        public static create(properties?: replicationdata.IMasterStatus): replicationdata.MasterStatus;

        /**
         * Encodes the specified MasterStatus message. Does not implicitly {@link replicationdata.MasterStatus.verify|verify} messages.
         * @param message MasterStatus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: replicationdata.IMasterStatus, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MasterStatus message, length delimited. Does not implicitly {@link replicationdata.MasterStatus.verify|verify} messages.
         * @param message MasterStatus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: replicationdata.IMasterStatus, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MasterStatus message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MasterStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): replicationdata.MasterStatus;

        /**
         * Decodes a MasterStatus message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MasterStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): replicationdata.MasterStatus;

        /**
         * Verifies a MasterStatus message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MasterStatus message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MasterStatus
         */
        public static fromObject(object: { [k: string]: any }): replicationdata.MasterStatus;

        /**
         * Creates a plain object from a MasterStatus message. Also converts values to other types if specified.
         * @param message MasterStatus
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: replicationdata.MasterStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MasterStatus to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace logutil. */
export namespace logutil {

    /** Level enum. */
    enum Level {
        INFO = 0,
        WARNING = 1,
        ERROR = 2,
        CONSOLE = 3
    }

    /** Properties of an Event. */
    interface IEvent {

        /** Event time */
        time?: (vttime.ITime|null);

        /** Event level */
        level?: (logutil.Level|null);

        /** Event file */
        file?: (string|null);

        /** Event line */
        line?: (number|Long|null);

        /** Event value */
        value?: (string|null);
    }

    /** Represents an Event. */
    class Event implements IEvent {

        /**
         * Constructs a new Event.
         * @param [properties] Properties to set
         */
        constructor(properties?: logutil.IEvent);

        /** Event time. */
        public time?: (vttime.ITime|null);

        /** Event level. */
        public level: logutil.Level;

        /** Event file. */
        public file: string;

        /** Event line. */
        public line: (number|Long);

        /** Event value. */
        public value: string;

        /**
         * Creates a new Event instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Event instance
         */
        public static create(properties?: logutil.IEvent): logutil.Event;

        /**
         * Encodes the specified Event message. Does not implicitly {@link logutil.Event.verify|verify} messages.
         * @param message Event message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: logutil.IEvent, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Event message, length delimited. Does not implicitly {@link logutil.Event.verify|verify} messages.
         * @param message Event message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: logutil.IEvent, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an Event message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Event
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): logutil.Event;

        /**
         * Decodes an Event message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Event
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): logutil.Event;

        /**
         * Verifies an Event message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an Event message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Event
         */
        public static fromObject(object: { [k: string]: any }): logutil.Event;

        /**
         * Creates a plain object from an Event message. Also converts values to other types if specified.
         * @param message Event
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: logutil.Event, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Event to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace vschema. */
export namespace vschema {

    /** Properties of a RoutingRules. */
    interface IRoutingRules {

        /** RoutingRules rules */
        rules?: (vschema.IRoutingRule[]|null);
    }

    /** Represents a RoutingRules. */
    class RoutingRules implements IRoutingRules {

        /**
         * Constructs a new RoutingRules.
         * @param [properties] Properties to set
         */
        constructor(properties?: vschema.IRoutingRules);

        /** RoutingRules rules. */
        public rules: vschema.IRoutingRule[];

        /**
         * Creates a new RoutingRules instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RoutingRules instance
         */
        public static create(properties?: vschema.IRoutingRules): vschema.RoutingRules;

        /**
         * Encodes the specified RoutingRules message. Does not implicitly {@link vschema.RoutingRules.verify|verify} messages.
         * @param message RoutingRules message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vschema.IRoutingRules, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RoutingRules message, length delimited. Does not implicitly {@link vschema.RoutingRules.verify|verify} messages.
         * @param message RoutingRules message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vschema.IRoutingRules, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RoutingRules message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RoutingRules
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vschema.RoutingRules;

        /**
         * Decodes a RoutingRules message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RoutingRules
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vschema.RoutingRules;

        /**
         * Verifies a RoutingRules message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RoutingRules message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RoutingRules
         */
        public static fromObject(object: { [k: string]: any }): vschema.RoutingRules;

        /**
         * Creates a plain object from a RoutingRules message. Also converts values to other types if specified.
         * @param message RoutingRules
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vschema.RoutingRules, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RoutingRules to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RoutingRule. */
    interface IRoutingRule {

        /** RoutingRule from_table */
        from_table?: (string|null);

        /** RoutingRule to_tables */
        to_tables?: (string[]|null);
    }

    /** Represents a RoutingRule. */
    class RoutingRule implements IRoutingRule {

        /**
         * Constructs a new RoutingRule.
         * @param [properties] Properties to set
         */
        constructor(properties?: vschema.IRoutingRule);

        /** RoutingRule from_table. */
        public from_table: string;

        /** RoutingRule to_tables. */
        public to_tables: string[];

        /**
         * Creates a new RoutingRule instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RoutingRule instance
         */
        public static create(properties?: vschema.IRoutingRule): vschema.RoutingRule;

        /**
         * Encodes the specified RoutingRule message. Does not implicitly {@link vschema.RoutingRule.verify|verify} messages.
         * @param message RoutingRule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vschema.IRoutingRule, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RoutingRule message, length delimited. Does not implicitly {@link vschema.RoutingRule.verify|verify} messages.
         * @param message RoutingRule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vschema.IRoutingRule, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RoutingRule message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RoutingRule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vschema.RoutingRule;

        /**
         * Decodes a RoutingRule message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RoutingRule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vschema.RoutingRule;

        /**
         * Verifies a RoutingRule message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RoutingRule message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RoutingRule
         */
        public static fromObject(object: { [k: string]: any }): vschema.RoutingRule;

        /**
         * Creates a plain object from a RoutingRule message. Also converts values to other types if specified.
         * @param message RoutingRule
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vschema.RoutingRule, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RoutingRule to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Keyspace. */
    interface IKeyspace {

        /** Keyspace sharded */
        sharded?: (boolean|null);

        /** Keyspace vindexes */
        vindexes?: ({ [k: string]: vschema.IVindex }|null);

        /** Keyspace tables */
        tables?: ({ [k: string]: vschema.ITable }|null);

        /** Keyspace require_explicit_routing */
        require_explicit_routing?: (boolean|null);
    }

    /** Represents a Keyspace. */
    class Keyspace implements IKeyspace {

        /**
         * Constructs a new Keyspace.
         * @param [properties] Properties to set
         */
        constructor(properties?: vschema.IKeyspace);

        /** Keyspace sharded. */
        public sharded: boolean;

        /** Keyspace vindexes. */
        public vindexes: { [k: string]: vschema.IVindex };

        /** Keyspace tables. */
        public tables: { [k: string]: vschema.ITable };

        /** Keyspace require_explicit_routing. */
        public require_explicit_routing: boolean;

        /**
         * Creates a new Keyspace instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Keyspace instance
         */
        public static create(properties?: vschema.IKeyspace): vschema.Keyspace;

        /**
         * Encodes the specified Keyspace message. Does not implicitly {@link vschema.Keyspace.verify|verify} messages.
         * @param message Keyspace message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vschema.IKeyspace, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Keyspace message, length delimited. Does not implicitly {@link vschema.Keyspace.verify|verify} messages.
         * @param message Keyspace message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vschema.IKeyspace, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Keyspace message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Keyspace
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vschema.Keyspace;

        /**
         * Decodes a Keyspace message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Keyspace
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vschema.Keyspace;

        /**
         * Verifies a Keyspace message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Keyspace message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Keyspace
         */
        public static fromObject(object: { [k: string]: any }): vschema.Keyspace;

        /**
         * Creates a plain object from a Keyspace message. Also converts values to other types if specified.
         * @param message Keyspace
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vschema.Keyspace, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Keyspace to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Vindex. */
    interface IVindex {

        /** Vindex type */
        type?: (string|null);

        /** Vindex params */
        params?: ({ [k: string]: string }|null);

        /** Vindex owner */
        owner?: (string|null);
    }

    /** Represents a Vindex. */
    class Vindex implements IVindex {

        /**
         * Constructs a new Vindex.
         * @param [properties] Properties to set
         */
        constructor(properties?: vschema.IVindex);

        /** Vindex type. */
        public type: string;

        /** Vindex params. */
        public params: { [k: string]: string };

        /** Vindex owner. */
        public owner: string;

        /**
         * Creates a new Vindex instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Vindex instance
         */
        public static create(properties?: vschema.IVindex): vschema.Vindex;

        /**
         * Encodes the specified Vindex message. Does not implicitly {@link vschema.Vindex.verify|verify} messages.
         * @param message Vindex message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vschema.IVindex, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Vindex message, length delimited. Does not implicitly {@link vschema.Vindex.verify|verify} messages.
         * @param message Vindex message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vschema.IVindex, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Vindex message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Vindex
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vschema.Vindex;

        /**
         * Decodes a Vindex message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Vindex
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vschema.Vindex;

        /**
         * Verifies a Vindex message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Vindex message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Vindex
         */
        public static fromObject(object: { [k: string]: any }): vschema.Vindex;

        /**
         * Creates a plain object from a Vindex message. Also converts values to other types if specified.
         * @param message Vindex
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vschema.Vindex, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Vindex to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Table. */
    interface ITable {

        /** Table type */
        type?: (string|null);

        /** Table column_vindexes */
        column_vindexes?: (vschema.IColumnVindex[]|null);

        /** Table auto_increment */
        auto_increment?: (vschema.IAutoIncrement|null);

        /** Table columns */
        columns?: (vschema.IColumn[]|null);

        /** Table pinned */
        pinned?: (string|null);

        /** Table column_list_authoritative */
        column_list_authoritative?: (boolean|null);
    }

    /** Represents a Table. */
    class Table implements ITable {

        /**
         * Constructs a new Table.
         * @param [properties] Properties to set
         */
        constructor(properties?: vschema.ITable);

        /** Table type. */
        public type: string;

        /** Table column_vindexes. */
        public column_vindexes: vschema.IColumnVindex[];

        /** Table auto_increment. */
        public auto_increment?: (vschema.IAutoIncrement|null);

        /** Table columns. */
        public columns: vschema.IColumn[];

        /** Table pinned. */
        public pinned: string;

        /** Table column_list_authoritative. */
        public column_list_authoritative: boolean;

        /**
         * Creates a new Table instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Table instance
         */
        public static create(properties?: vschema.ITable): vschema.Table;

        /**
         * Encodes the specified Table message. Does not implicitly {@link vschema.Table.verify|verify} messages.
         * @param message Table message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vschema.ITable, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Table message, length delimited. Does not implicitly {@link vschema.Table.verify|verify} messages.
         * @param message Table message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vschema.ITable, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Table message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Table
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vschema.Table;

        /**
         * Decodes a Table message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Table
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vschema.Table;

        /**
         * Verifies a Table message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Table message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Table
         */
        public static fromObject(object: { [k: string]: any }): vschema.Table;

        /**
         * Creates a plain object from a Table message. Also converts values to other types if specified.
         * @param message Table
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vschema.Table, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Table to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ColumnVindex. */
    interface IColumnVindex {

        /** ColumnVindex column */
        column?: (string|null);

        /** ColumnVindex name */
        name?: (string|null);

        /** ColumnVindex columns */
        columns?: (string[]|null);
    }

    /** Represents a ColumnVindex. */
    class ColumnVindex implements IColumnVindex {

        /**
         * Constructs a new ColumnVindex.
         * @param [properties] Properties to set
         */
        constructor(properties?: vschema.IColumnVindex);

        /** ColumnVindex column. */
        public column: string;

        /** ColumnVindex name. */
        public name: string;

        /** ColumnVindex columns. */
        public columns: string[];

        /**
         * Creates a new ColumnVindex instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ColumnVindex instance
         */
        public static create(properties?: vschema.IColumnVindex): vschema.ColumnVindex;

        /**
         * Encodes the specified ColumnVindex message. Does not implicitly {@link vschema.ColumnVindex.verify|verify} messages.
         * @param message ColumnVindex message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vschema.IColumnVindex, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ColumnVindex message, length delimited. Does not implicitly {@link vschema.ColumnVindex.verify|verify} messages.
         * @param message ColumnVindex message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vschema.IColumnVindex, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ColumnVindex message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ColumnVindex
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vschema.ColumnVindex;

        /**
         * Decodes a ColumnVindex message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ColumnVindex
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vschema.ColumnVindex;

        /**
         * Verifies a ColumnVindex message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ColumnVindex message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ColumnVindex
         */
        public static fromObject(object: { [k: string]: any }): vschema.ColumnVindex;

        /**
         * Creates a plain object from a ColumnVindex message. Also converts values to other types if specified.
         * @param message ColumnVindex
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vschema.ColumnVindex, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ColumnVindex to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AutoIncrement. */
    interface IAutoIncrement {

        /** AutoIncrement column */
        column?: (string|null);

        /** AutoIncrement sequence */
        sequence?: (string|null);
    }

    /** Represents an AutoIncrement. */
    class AutoIncrement implements IAutoIncrement {

        /**
         * Constructs a new AutoIncrement.
         * @param [properties] Properties to set
         */
        constructor(properties?: vschema.IAutoIncrement);

        /** AutoIncrement column. */
        public column: string;

        /** AutoIncrement sequence. */
        public sequence: string;

        /**
         * Creates a new AutoIncrement instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AutoIncrement instance
         */
        public static create(properties?: vschema.IAutoIncrement): vschema.AutoIncrement;

        /**
         * Encodes the specified AutoIncrement message. Does not implicitly {@link vschema.AutoIncrement.verify|verify} messages.
         * @param message AutoIncrement message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vschema.IAutoIncrement, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AutoIncrement message, length delimited. Does not implicitly {@link vschema.AutoIncrement.verify|verify} messages.
         * @param message AutoIncrement message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vschema.IAutoIncrement, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AutoIncrement message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AutoIncrement
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vschema.AutoIncrement;

        /**
         * Decodes an AutoIncrement message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AutoIncrement
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vschema.AutoIncrement;

        /**
         * Verifies an AutoIncrement message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AutoIncrement message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AutoIncrement
         */
        public static fromObject(object: { [k: string]: any }): vschema.AutoIncrement;

        /**
         * Creates a plain object from an AutoIncrement message. Also converts values to other types if specified.
         * @param message AutoIncrement
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vschema.AutoIncrement, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AutoIncrement to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Column. */
    interface IColumn {

        /** Column name */
        name?: (string|null);

        /** Column type */
        type?: (query.Type|null);
    }

    /** Represents a Column. */
    class Column implements IColumn {

        /**
         * Constructs a new Column.
         * @param [properties] Properties to set
         */
        constructor(properties?: vschema.IColumn);

        /** Column name. */
        public name: string;

        /** Column type. */
        public type: query.Type;

        /**
         * Creates a new Column instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Column instance
         */
        public static create(properties?: vschema.IColumn): vschema.Column;

        /**
         * Encodes the specified Column message. Does not implicitly {@link vschema.Column.verify|verify} messages.
         * @param message Column message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vschema.IColumn, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Column message, length delimited. Does not implicitly {@link vschema.Column.verify|verify} messages.
         * @param message Column message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vschema.IColumn, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Column message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Column
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vschema.Column;

        /**
         * Decodes a Column message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Column
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vschema.Column;

        /**
         * Verifies a Column message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Column message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Column
         */
        public static fromObject(object: { [k: string]: any }): vschema.Column;

        /**
         * Creates a plain object from a Column message. Also converts values to other types if specified.
         * @param message Column
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vschema.Column, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Column to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SrvVSchema. */
    interface ISrvVSchema {

        /** SrvVSchema keyspaces */
        keyspaces?: ({ [k: string]: vschema.IKeyspace }|null);

        /** SrvVSchema routing_rules */
        routing_rules?: (vschema.IRoutingRules|null);
    }

    /** Represents a SrvVSchema. */
    class SrvVSchema implements ISrvVSchema {

        /**
         * Constructs a new SrvVSchema.
         * @param [properties] Properties to set
         */
        constructor(properties?: vschema.ISrvVSchema);

        /** SrvVSchema keyspaces. */
        public keyspaces: { [k: string]: vschema.IKeyspace };

        /** SrvVSchema routing_rules. */
        public routing_rules?: (vschema.IRoutingRules|null);

        /**
         * Creates a new SrvVSchema instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SrvVSchema instance
         */
        public static create(properties?: vschema.ISrvVSchema): vschema.SrvVSchema;

        /**
         * Encodes the specified SrvVSchema message. Does not implicitly {@link vschema.SrvVSchema.verify|verify} messages.
         * @param message SrvVSchema message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vschema.ISrvVSchema, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SrvVSchema message, length delimited. Does not implicitly {@link vschema.SrvVSchema.verify|verify} messages.
         * @param message SrvVSchema message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vschema.ISrvVSchema, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SrvVSchema message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SrvVSchema
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vschema.SrvVSchema;

        /**
         * Decodes a SrvVSchema message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SrvVSchema
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vschema.SrvVSchema;

        /**
         * Verifies a SrvVSchema message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SrvVSchema message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SrvVSchema
         */
        public static fromObject(object: { [k: string]: any }): vschema.SrvVSchema;

        /**
         * Creates a plain object from a SrvVSchema message. Also converts values to other types if specified.
         * @param message SrvVSchema
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vschema.SrvVSchema, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SrvVSchema to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace vtctldata. */
export namespace vtctldata {

    /** Properties of an ExecuteVtctlCommandRequest. */
    interface IExecuteVtctlCommandRequest {

        /** ExecuteVtctlCommandRequest args */
        args?: (string[]|null);

        /** ExecuteVtctlCommandRequest action_timeout */
        action_timeout?: (number|Long|null);
    }

    /** Represents an ExecuteVtctlCommandRequest. */
    class ExecuteVtctlCommandRequest implements IExecuteVtctlCommandRequest {

        /**
         * Constructs a new ExecuteVtctlCommandRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IExecuteVtctlCommandRequest);

        /** ExecuteVtctlCommandRequest args. */
        public args: string[];

        /** ExecuteVtctlCommandRequest action_timeout. */
        public action_timeout: (number|Long);

        /**
         * Creates a new ExecuteVtctlCommandRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ExecuteVtctlCommandRequest instance
         */
        public static create(properties?: vtctldata.IExecuteVtctlCommandRequest): vtctldata.ExecuteVtctlCommandRequest;

        /**
         * Encodes the specified ExecuteVtctlCommandRequest message. Does not implicitly {@link vtctldata.ExecuteVtctlCommandRequest.verify|verify} messages.
         * @param message ExecuteVtctlCommandRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IExecuteVtctlCommandRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ExecuteVtctlCommandRequest message, length delimited. Does not implicitly {@link vtctldata.ExecuteVtctlCommandRequest.verify|verify} messages.
         * @param message ExecuteVtctlCommandRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IExecuteVtctlCommandRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ExecuteVtctlCommandRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ExecuteVtctlCommandRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.ExecuteVtctlCommandRequest;

        /**
         * Decodes an ExecuteVtctlCommandRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ExecuteVtctlCommandRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.ExecuteVtctlCommandRequest;

        /**
         * Verifies an ExecuteVtctlCommandRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ExecuteVtctlCommandRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ExecuteVtctlCommandRequest
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.ExecuteVtctlCommandRequest;

        /**
         * Creates a plain object from an ExecuteVtctlCommandRequest message. Also converts values to other types if specified.
         * @param message ExecuteVtctlCommandRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.ExecuteVtctlCommandRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ExecuteVtctlCommandRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ExecuteVtctlCommandResponse. */
    interface IExecuteVtctlCommandResponse {

        /** ExecuteVtctlCommandResponse event */
        event?: (logutil.IEvent|null);
    }

    /** Represents an ExecuteVtctlCommandResponse. */
    class ExecuteVtctlCommandResponse implements IExecuteVtctlCommandResponse {

        /**
         * Constructs a new ExecuteVtctlCommandResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IExecuteVtctlCommandResponse);

        /** ExecuteVtctlCommandResponse event. */
        public event?: (logutil.IEvent|null);

        /**
         * Creates a new ExecuteVtctlCommandResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ExecuteVtctlCommandResponse instance
         */
        public static create(properties?: vtctldata.IExecuteVtctlCommandResponse): vtctldata.ExecuteVtctlCommandResponse;

        /**
         * Encodes the specified ExecuteVtctlCommandResponse message. Does not implicitly {@link vtctldata.ExecuteVtctlCommandResponse.verify|verify} messages.
         * @param message ExecuteVtctlCommandResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IExecuteVtctlCommandResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ExecuteVtctlCommandResponse message, length delimited. Does not implicitly {@link vtctldata.ExecuteVtctlCommandResponse.verify|verify} messages.
         * @param message ExecuteVtctlCommandResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IExecuteVtctlCommandResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ExecuteVtctlCommandResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ExecuteVtctlCommandResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.ExecuteVtctlCommandResponse;

        /**
         * Decodes an ExecuteVtctlCommandResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ExecuteVtctlCommandResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.ExecuteVtctlCommandResponse;

        /**
         * Verifies an ExecuteVtctlCommandResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ExecuteVtctlCommandResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ExecuteVtctlCommandResponse
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.ExecuteVtctlCommandResponse;

        /**
         * Creates a plain object from an ExecuteVtctlCommandResponse message. Also converts values to other types if specified.
         * @param message ExecuteVtctlCommandResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.ExecuteVtctlCommandResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ExecuteVtctlCommandResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TableMaterializeSettings. */
    interface ITableMaterializeSettings {

        /** TableMaterializeSettings target_table */
        target_table?: (string|null);

        /** TableMaterializeSettings source_expression */
        source_expression?: (string|null);

        /** TableMaterializeSettings create_ddl */
        create_ddl?: (string|null);
    }

    /** Represents a TableMaterializeSettings. */
    class TableMaterializeSettings implements ITableMaterializeSettings {

        /**
         * Constructs a new TableMaterializeSettings.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.ITableMaterializeSettings);

        /** TableMaterializeSettings target_table. */
        public target_table: string;

        /** TableMaterializeSettings source_expression. */
        public source_expression: string;

        /** TableMaterializeSettings create_ddl. */
        public create_ddl: string;

        /**
         * Creates a new TableMaterializeSettings instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TableMaterializeSettings instance
         */
        public static create(properties?: vtctldata.ITableMaterializeSettings): vtctldata.TableMaterializeSettings;

        /**
         * Encodes the specified TableMaterializeSettings message. Does not implicitly {@link vtctldata.TableMaterializeSettings.verify|verify} messages.
         * @param message TableMaterializeSettings message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.ITableMaterializeSettings, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TableMaterializeSettings message, length delimited. Does not implicitly {@link vtctldata.TableMaterializeSettings.verify|verify} messages.
         * @param message TableMaterializeSettings message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.ITableMaterializeSettings, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TableMaterializeSettings message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TableMaterializeSettings
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.TableMaterializeSettings;

        /**
         * Decodes a TableMaterializeSettings message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TableMaterializeSettings
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.TableMaterializeSettings;

        /**
         * Verifies a TableMaterializeSettings message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TableMaterializeSettings message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TableMaterializeSettings
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.TableMaterializeSettings;

        /**
         * Creates a plain object from a TableMaterializeSettings message. Also converts values to other types if specified.
         * @param message TableMaterializeSettings
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.TableMaterializeSettings, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TableMaterializeSettings to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MaterializeSettings. */
    interface IMaterializeSettings {

        /** MaterializeSettings workflow */
        workflow?: (string|null);

        /** MaterializeSettings source_keyspace */
        source_keyspace?: (string|null);

        /** MaterializeSettings target_keyspace */
        target_keyspace?: (string|null);

        /** MaterializeSettings stop_after_copy */
        stop_after_copy?: (boolean|null);

        /** MaterializeSettings table_settings */
        table_settings?: (vtctldata.ITableMaterializeSettings[]|null);

        /** MaterializeSettings cell */
        cell?: (string|null);

        /** MaterializeSettings tablet_types */
        tablet_types?: (string|null);

        /** MaterializeSettings external_cluster */
        external_cluster?: (string|null);
    }

    /** Represents a MaterializeSettings. */
    class MaterializeSettings implements IMaterializeSettings {

        /**
         * Constructs a new MaterializeSettings.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IMaterializeSettings);

        /** MaterializeSettings workflow. */
        public workflow: string;

        /** MaterializeSettings source_keyspace. */
        public source_keyspace: string;

        /** MaterializeSettings target_keyspace. */
        public target_keyspace: string;

        /** MaterializeSettings stop_after_copy. */
        public stop_after_copy: boolean;

        /** MaterializeSettings table_settings. */
        public table_settings: vtctldata.ITableMaterializeSettings[];

        /** MaterializeSettings cell. */
        public cell: string;

        /** MaterializeSettings tablet_types. */
        public tablet_types: string;

        /** MaterializeSettings external_cluster. */
        public external_cluster: string;

        /**
         * Creates a new MaterializeSettings instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MaterializeSettings instance
         */
        public static create(properties?: vtctldata.IMaterializeSettings): vtctldata.MaterializeSettings;

        /**
         * Encodes the specified MaterializeSettings message. Does not implicitly {@link vtctldata.MaterializeSettings.verify|verify} messages.
         * @param message MaterializeSettings message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IMaterializeSettings, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MaterializeSettings message, length delimited. Does not implicitly {@link vtctldata.MaterializeSettings.verify|verify} messages.
         * @param message MaterializeSettings message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IMaterializeSettings, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MaterializeSettings message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MaterializeSettings
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.MaterializeSettings;

        /**
         * Decodes a MaterializeSettings message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MaterializeSettings
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.MaterializeSettings;

        /**
         * Verifies a MaterializeSettings message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MaterializeSettings message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MaterializeSettings
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.MaterializeSettings;

        /**
         * Creates a plain object from a MaterializeSettings message. Also converts values to other types if specified.
         * @param message MaterializeSettings
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.MaterializeSettings, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MaterializeSettings to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Keyspace. */
    interface IKeyspace {

        /** Keyspace name */
        name?: (string|null);

        /** Keyspace keyspace */
        keyspace?: (topodata.IKeyspace|null);
    }

    /** Represents a Keyspace. */
    class Keyspace implements IKeyspace {

        /**
         * Constructs a new Keyspace.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IKeyspace);

        /** Keyspace name. */
        public name: string;

        /** Keyspace keyspace. */
        public keyspace?: (topodata.IKeyspace|null);

        /**
         * Creates a new Keyspace instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Keyspace instance
         */
        public static create(properties?: vtctldata.IKeyspace): vtctldata.Keyspace;

        /**
         * Encodes the specified Keyspace message. Does not implicitly {@link vtctldata.Keyspace.verify|verify} messages.
         * @param message Keyspace message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IKeyspace, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Keyspace message, length delimited. Does not implicitly {@link vtctldata.Keyspace.verify|verify} messages.
         * @param message Keyspace message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IKeyspace, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Keyspace message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Keyspace
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.Keyspace;

        /**
         * Decodes a Keyspace message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Keyspace
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.Keyspace;

        /**
         * Verifies a Keyspace message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Keyspace message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Keyspace
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.Keyspace;

        /**
         * Creates a plain object from a Keyspace message. Also converts values to other types if specified.
         * @param message Keyspace
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.Keyspace, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Keyspace to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Shard. */
    interface IShard {

        /** Shard keyspace */
        keyspace?: (string|null);

        /** Shard name */
        name?: (string|null);

        /** Shard shard */
        shard?: (topodata.IShard|null);
    }

    /** Represents a Shard. */
    class Shard implements IShard {

        /**
         * Constructs a new Shard.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IShard);

        /** Shard keyspace. */
        public keyspace: string;

        /** Shard name. */
        public name: string;

        /** Shard shard. */
        public shard?: (topodata.IShard|null);

        /**
         * Creates a new Shard instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Shard instance
         */
        public static create(properties?: vtctldata.IShard): vtctldata.Shard;

        /**
         * Encodes the specified Shard message. Does not implicitly {@link vtctldata.Shard.verify|verify} messages.
         * @param message Shard message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IShard, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Shard message, length delimited. Does not implicitly {@link vtctldata.Shard.verify|verify} messages.
         * @param message Shard message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IShard, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Shard message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Shard
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.Shard;

        /**
         * Decodes a Shard message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Shard
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.Shard;

        /**
         * Verifies a Shard message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Shard message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Shard
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.Shard;

        /**
         * Creates a plain object from a Shard message. Also converts values to other types if specified.
         * @param message Shard
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.Shard, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Shard to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Workflow. */
    interface IWorkflow {

        /** Workflow name */
        name?: (string|null);

        /** Workflow source */
        source?: (vtctldata.Workflow.IReplicationLocation|null);

        /** Workflow target */
        target?: (vtctldata.Workflow.IReplicationLocation|null);

        /** Workflow max_v_replication_lag */
        max_v_replication_lag?: (number|Long|null);

        /** Workflow shard_streams */
        shard_streams?: ({ [k: string]: vtctldata.Workflow.IShardStream }|null);
    }

    /** Represents a Workflow. */
    class Workflow implements IWorkflow {

        /**
         * Constructs a new Workflow.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IWorkflow);

        /** Workflow name. */
        public name: string;

        /** Workflow source. */
        public source?: (vtctldata.Workflow.IReplicationLocation|null);

        /** Workflow target. */
        public target?: (vtctldata.Workflow.IReplicationLocation|null);

        /** Workflow max_v_replication_lag. */
        public max_v_replication_lag: (number|Long);

        /** Workflow shard_streams. */
        public shard_streams: { [k: string]: vtctldata.Workflow.IShardStream };

        /**
         * Creates a new Workflow instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Workflow instance
         */
        public static create(properties?: vtctldata.IWorkflow): vtctldata.Workflow;

        /**
         * Encodes the specified Workflow message. Does not implicitly {@link vtctldata.Workflow.verify|verify} messages.
         * @param message Workflow message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IWorkflow, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Workflow message, length delimited. Does not implicitly {@link vtctldata.Workflow.verify|verify} messages.
         * @param message Workflow message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IWorkflow, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Workflow message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Workflow
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.Workflow;

        /**
         * Decodes a Workflow message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Workflow
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.Workflow;

        /**
         * Verifies a Workflow message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Workflow message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Workflow
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.Workflow;

        /**
         * Creates a plain object from a Workflow message. Also converts values to other types if specified.
         * @param message Workflow
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.Workflow, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Workflow to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace Workflow {

        /** Properties of a ReplicationLocation. */
        interface IReplicationLocation {

            /** ReplicationLocation keyspace */
            keyspace?: (string|null);

            /** ReplicationLocation shards */
            shards?: (string[]|null);
        }

        /** Represents a ReplicationLocation. */
        class ReplicationLocation implements IReplicationLocation {

            /**
             * Constructs a new ReplicationLocation.
             * @param [properties] Properties to set
             */
            constructor(properties?: vtctldata.Workflow.IReplicationLocation);

            /** ReplicationLocation keyspace. */
            public keyspace: string;

            /** ReplicationLocation shards. */
            public shards: string[];

            /**
             * Creates a new ReplicationLocation instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ReplicationLocation instance
             */
            public static create(properties?: vtctldata.Workflow.IReplicationLocation): vtctldata.Workflow.ReplicationLocation;

            /**
             * Encodes the specified ReplicationLocation message. Does not implicitly {@link vtctldata.Workflow.ReplicationLocation.verify|verify} messages.
             * @param message ReplicationLocation message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: vtctldata.Workflow.IReplicationLocation, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ReplicationLocation message, length delimited. Does not implicitly {@link vtctldata.Workflow.ReplicationLocation.verify|verify} messages.
             * @param message ReplicationLocation message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: vtctldata.Workflow.IReplicationLocation, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ReplicationLocation message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ReplicationLocation
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.Workflow.ReplicationLocation;

            /**
             * Decodes a ReplicationLocation message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ReplicationLocation
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.Workflow.ReplicationLocation;

            /**
             * Verifies a ReplicationLocation message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ReplicationLocation message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ReplicationLocation
             */
            public static fromObject(object: { [k: string]: any }): vtctldata.Workflow.ReplicationLocation;

            /**
             * Creates a plain object from a ReplicationLocation message. Also converts values to other types if specified.
             * @param message ReplicationLocation
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: vtctldata.Workflow.ReplicationLocation, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ReplicationLocation to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ShardStream. */
        interface IShardStream {

            /** ShardStream streams */
            streams?: (vtctldata.Workflow.IStream[]|null);

            /** ShardStream tablet_controls */
            tablet_controls?: (topodata.Shard.ITabletControl[]|null);

            /** ShardStream is_primary_serving */
            is_primary_serving?: (boolean|null);
        }

        /** Represents a ShardStream. */
        class ShardStream implements IShardStream {

            /**
             * Constructs a new ShardStream.
             * @param [properties] Properties to set
             */
            constructor(properties?: vtctldata.Workflow.IShardStream);

            /** ShardStream streams. */
            public streams: vtctldata.Workflow.IStream[];

            /** ShardStream tablet_controls. */
            public tablet_controls: topodata.Shard.ITabletControl[];

            /** ShardStream is_primary_serving. */
            public is_primary_serving: boolean;

            /**
             * Creates a new ShardStream instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ShardStream instance
             */
            public static create(properties?: vtctldata.Workflow.IShardStream): vtctldata.Workflow.ShardStream;

            /**
             * Encodes the specified ShardStream message. Does not implicitly {@link vtctldata.Workflow.ShardStream.verify|verify} messages.
             * @param message ShardStream message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: vtctldata.Workflow.IShardStream, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ShardStream message, length delimited. Does not implicitly {@link vtctldata.Workflow.ShardStream.verify|verify} messages.
             * @param message ShardStream message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: vtctldata.Workflow.IShardStream, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ShardStream message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ShardStream
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.Workflow.ShardStream;

            /**
             * Decodes a ShardStream message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ShardStream
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.Workflow.ShardStream;

            /**
             * Verifies a ShardStream message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ShardStream message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ShardStream
             */
            public static fromObject(object: { [k: string]: any }): vtctldata.Workflow.ShardStream;

            /**
             * Creates a plain object from a ShardStream message. Also converts values to other types if specified.
             * @param message ShardStream
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: vtctldata.Workflow.ShardStream, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ShardStream to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Stream. */
        interface IStream {

            /** Stream id */
            id?: (number|Long|null);

            /** Stream shard */
            shard?: (string|null);

            /** Stream tablet */
            tablet?: (topodata.ITabletAlias|null);

            /** Stream binlog_source */
            binlog_source?: (binlogdata.IBinlogSource|null);

            /** Stream position */
            position?: (string|null);

            /** Stream stop_position */
            stop_position?: (string|null);

            /** Stream state */
            state?: (string|null);

            /** Stream db_name */
            db_name?: (string|null);

            /** Stream transaction_timestamp */
            transaction_timestamp?: (vttime.ITime|null);

            /** Stream time_updated */
            time_updated?: (vttime.ITime|null);

            /** Stream message */
            message?: (string|null);

            /** Stream copy_states */
            copy_states?: (vtctldata.Workflow.Stream.ICopyState[]|null);
        }

        /** Represents a Stream. */
        class Stream implements IStream {

            /**
             * Constructs a new Stream.
             * @param [properties] Properties to set
             */
            constructor(properties?: vtctldata.Workflow.IStream);

            /** Stream id. */
            public id: (number|Long);

            /** Stream shard. */
            public shard: string;

            /** Stream tablet. */
            public tablet?: (topodata.ITabletAlias|null);

            /** Stream binlog_source. */
            public binlog_source?: (binlogdata.IBinlogSource|null);

            /** Stream position. */
            public position: string;

            /** Stream stop_position. */
            public stop_position: string;

            /** Stream state. */
            public state: string;

            /** Stream db_name. */
            public db_name: string;

            /** Stream transaction_timestamp. */
            public transaction_timestamp?: (vttime.ITime|null);

            /** Stream time_updated. */
            public time_updated?: (vttime.ITime|null);

            /** Stream message. */
            public message: string;

            /** Stream copy_states. */
            public copy_states: vtctldata.Workflow.Stream.ICopyState[];

            /**
             * Creates a new Stream instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Stream instance
             */
            public static create(properties?: vtctldata.Workflow.IStream): vtctldata.Workflow.Stream;

            /**
             * Encodes the specified Stream message. Does not implicitly {@link vtctldata.Workflow.Stream.verify|verify} messages.
             * @param message Stream message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: vtctldata.Workflow.IStream, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Stream message, length delimited. Does not implicitly {@link vtctldata.Workflow.Stream.verify|verify} messages.
             * @param message Stream message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: vtctldata.Workflow.IStream, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Stream message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Stream
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.Workflow.Stream;

            /**
             * Decodes a Stream message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Stream
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.Workflow.Stream;

            /**
             * Verifies a Stream message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Stream message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Stream
             */
            public static fromObject(object: { [k: string]: any }): vtctldata.Workflow.Stream;

            /**
             * Creates a plain object from a Stream message. Also converts values to other types if specified.
             * @param message Stream
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: vtctldata.Workflow.Stream, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Stream to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace Stream {

            /** Properties of a CopyState. */
            interface ICopyState {

                /** CopyState table */
                table?: (string|null);

                /** CopyState last_pk */
                last_pk?: (string|null);
            }

            /** Represents a CopyState. */
            class CopyState implements ICopyState {

                /**
                 * Constructs a new CopyState.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: vtctldata.Workflow.Stream.ICopyState);

                /** CopyState table. */
                public table: string;

                /** CopyState last_pk. */
                public last_pk: string;

                /**
                 * Creates a new CopyState instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns CopyState instance
                 */
                public static create(properties?: vtctldata.Workflow.Stream.ICopyState): vtctldata.Workflow.Stream.CopyState;

                /**
                 * Encodes the specified CopyState message. Does not implicitly {@link vtctldata.Workflow.Stream.CopyState.verify|verify} messages.
                 * @param message CopyState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: vtctldata.Workflow.Stream.ICopyState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CopyState message, length delimited. Does not implicitly {@link vtctldata.Workflow.Stream.CopyState.verify|verify} messages.
                 * @param message CopyState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: vtctldata.Workflow.Stream.ICopyState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CopyState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CopyState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.Workflow.Stream.CopyState;

                /**
                 * Decodes a CopyState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CopyState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.Workflow.Stream.CopyState;

                /**
                 * Verifies a CopyState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CopyState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CopyState
                 */
                public static fromObject(object: { [k: string]: any }): vtctldata.Workflow.Stream.CopyState;

                /**
                 * Creates a plain object from a CopyState message. Also converts values to other types if specified.
                 * @param message CopyState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: vtctldata.Workflow.Stream.CopyState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CopyState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Properties of a ChangeTabletTypeRequest. */
    interface IChangeTabletTypeRequest {

        /** ChangeTabletTypeRequest tablet_alias */
        tablet_alias?: (topodata.ITabletAlias|null);

        /** ChangeTabletTypeRequest db_type */
        db_type?: (topodata.TabletType|null);

        /** ChangeTabletTypeRequest dry_run */
        dry_run?: (boolean|null);
    }

    /** Represents a ChangeTabletTypeRequest. */
    class ChangeTabletTypeRequest implements IChangeTabletTypeRequest {

        /**
         * Constructs a new ChangeTabletTypeRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IChangeTabletTypeRequest);

        /** ChangeTabletTypeRequest tablet_alias. */
        public tablet_alias?: (topodata.ITabletAlias|null);

        /** ChangeTabletTypeRequest db_type. */
        public db_type: topodata.TabletType;

        /** ChangeTabletTypeRequest dry_run. */
        public dry_run: boolean;

        /**
         * Creates a new ChangeTabletTypeRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChangeTabletTypeRequest instance
         */
        public static create(properties?: vtctldata.IChangeTabletTypeRequest): vtctldata.ChangeTabletTypeRequest;

        /**
         * Encodes the specified ChangeTabletTypeRequest message. Does not implicitly {@link vtctldata.ChangeTabletTypeRequest.verify|verify} messages.
         * @param message ChangeTabletTypeRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IChangeTabletTypeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChangeTabletTypeRequest message, length delimited. Does not implicitly {@link vtctldata.ChangeTabletTypeRequest.verify|verify} messages.
         * @param message ChangeTabletTypeRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IChangeTabletTypeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChangeTabletTypeRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChangeTabletTypeRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.ChangeTabletTypeRequest;

        /**
         * Decodes a ChangeTabletTypeRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChangeTabletTypeRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.ChangeTabletTypeRequest;

        /**
         * Verifies a ChangeTabletTypeRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChangeTabletTypeRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChangeTabletTypeRequest
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.ChangeTabletTypeRequest;

        /**
         * Creates a plain object from a ChangeTabletTypeRequest message. Also converts values to other types if specified.
         * @param message ChangeTabletTypeRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.ChangeTabletTypeRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChangeTabletTypeRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChangeTabletTypeResponse. */
    interface IChangeTabletTypeResponse {

        /** ChangeTabletTypeResponse before_tablet */
        before_tablet?: (topodata.ITablet|null);

        /** ChangeTabletTypeResponse after_tablet */
        after_tablet?: (topodata.ITablet|null);

        /** ChangeTabletTypeResponse was_dry_run */
        was_dry_run?: (boolean|null);
    }

    /** Represents a ChangeTabletTypeResponse. */
    class ChangeTabletTypeResponse implements IChangeTabletTypeResponse {

        /**
         * Constructs a new ChangeTabletTypeResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IChangeTabletTypeResponse);

        /** ChangeTabletTypeResponse before_tablet. */
        public before_tablet?: (topodata.ITablet|null);

        /** ChangeTabletTypeResponse after_tablet. */
        public after_tablet?: (topodata.ITablet|null);

        /** ChangeTabletTypeResponse was_dry_run. */
        public was_dry_run: boolean;

        /**
         * Creates a new ChangeTabletTypeResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChangeTabletTypeResponse instance
         */
        public static create(properties?: vtctldata.IChangeTabletTypeResponse): vtctldata.ChangeTabletTypeResponse;

        /**
         * Encodes the specified ChangeTabletTypeResponse message. Does not implicitly {@link vtctldata.ChangeTabletTypeResponse.verify|verify} messages.
         * @param message ChangeTabletTypeResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IChangeTabletTypeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChangeTabletTypeResponse message, length delimited. Does not implicitly {@link vtctldata.ChangeTabletTypeResponse.verify|verify} messages.
         * @param message ChangeTabletTypeResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IChangeTabletTypeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChangeTabletTypeResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChangeTabletTypeResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.ChangeTabletTypeResponse;

        /**
         * Decodes a ChangeTabletTypeResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChangeTabletTypeResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.ChangeTabletTypeResponse;

        /**
         * Verifies a ChangeTabletTypeResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChangeTabletTypeResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChangeTabletTypeResponse
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.ChangeTabletTypeResponse;

        /**
         * Creates a plain object from a ChangeTabletTypeResponse message. Also converts values to other types if specified.
         * @param message ChangeTabletTypeResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.ChangeTabletTypeResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChangeTabletTypeResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CreateKeyspaceRequest. */
    interface ICreateKeyspaceRequest {

        /** CreateKeyspaceRequest name */
        name?: (string|null);

        /** CreateKeyspaceRequest force */
        force?: (boolean|null);

        /** CreateKeyspaceRequest allow_empty_v_schema */
        allow_empty_v_schema?: (boolean|null);

        /** CreateKeyspaceRequest sharding_column_name */
        sharding_column_name?: (string|null);

        /** CreateKeyspaceRequest sharding_column_type */
        sharding_column_type?: (topodata.KeyspaceIdType|null);

        /** CreateKeyspaceRequest served_froms */
        served_froms?: (topodata.Keyspace.IServedFrom[]|null);

        /** CreateKeyspaceRequest type */
        type?: (topodata.KeyspaceType|null);

        /** CreateKeyspaceRequest base_keyspace */
        base_keyspace?: (string|null);

        /** CreateKeyspaceRequest snapshot_time */
        snapshot_time?: (vttime.ITime|null);
    }

    /** Represents a CreateKeyspaceRequest. */
    class CreateKeyspaceRequest implements ICreateKeyspaceRequest {

        /**
         * Constructs a new CreateKeyspaceRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.ICreateKeyspaceRequest);

        /** CreateKeyspaceRequest name. */
        public name: string;

        /** CreateKeyspaceRequest force. */
        public force: boolean;

        /** CreateKeyspaceRequest allow_empty_v_schema. */
        public allow_empty_v_schema: boolean;

        /** CreateKeyspaceRequest sharding_column_name. */
        public sharding_column_name: string;

        /** CreateKeyspaceRequest sharding_column_type. */
        public sharding_column_type: topodata.KeyspaceIdType;

        /** CreateKeyspaceRequest served_froms. */
        public served_froms: topodata.Keyspace.IServedFrom[];

        /** CreateKeyspaceRequest type. */
        public type: topodata.KeyspaceType;

        /** CreateKeyspaceRequest base_keyspace. */
        public base_keyspace: string;

        /** CreateKeyspaceRequest snapshot_time. */
        public snapshot_time?: (vttime.ITime|null);

        /**
         * Creates a new CreateKeyspaceRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CreateKeyspaceRequest instance
         */
        public static create(properties?: vtctldata.ICreateKeyspaceRequest): vtctldata.CreateKeyspaceRequest;

        /**
         * Encodes the specified CreateKeyspaceRequest message. Does not implicitly {@link vtctldata.CreateKeyspaceRequest.verify|verify} messages.
         * @param message CreateKeyspaceRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.ICreateKeyspaceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CreateKeyspaceRequest message, length delimited. Does not implicitly {@link vtctldata.CreateKeyspaceRequest.verify|verify} messages.
         * @param message CreateKeyspaceRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.ICreateKeyspaceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CreateKeyspaceRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CreateKeyspaceRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.CreateKeyspaceRequest;

        /**
         * Decodes a CreateKeyspaceRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CreateKeyspaceRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.CreateKeyspaceRequest;

        /**
         * Verifies a CreateKeyspaceRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CreateKeyspaceRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CreateKeyspaceRequest
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.CreateKeyspaceRequest;

        /**
         * Creates a plain object from a CreateKeyspaceRequest message. Also converts values to other types if specified.
         * @param message CreateKeyspaceRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.CreateKeyspaceRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CreateKeyspaceRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CreateKeyspaceResponse. */
    interface ICreateKeyspaceResponse {

        /** CreateKeyspaceResponse keyspace */
        keyspace?: (vtctldata.IKeyspace|null);
    }

    /** Represents a CreateKeyspaceResponse. */
    class CreateKeyspaceResponse implements ICreateKeyspaceResponse {

        /**
         * Constructs a new CreateKeyspaceResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.ICreateKeyspaceResponse);

        /** CreateKeyspaceResponse keyspace. */
        public keyspace?: (vtctldata.IKeyspace|null);

        /**
         * Creates a new CreateKeyspaceResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CreateKeyspaceResponse instance
         */
        public static create(properties?: vtctldata.ICreateKeyspaceResponse): vtctldata.CreateKeyspaceResponse;

        /**
         * Encodes the specified CreateKeyspaceResponse message. Does not implicitly {@link vtctldata.CreateKeyspaceResponse.verify|verify} messages.
         * @param message CreateKeyspaceResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.ICreateKeyspaceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CreateKeyspaceResponse message, length delimited. Does not implicitly {@link vtctldata.CreateKeyspaceResponse.verify|verify} messages.
         * @param message CreateKeyspaceResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.ICreateKeyspaceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CreateKeyspaceResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CreateKeyspaceResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.CreateKeyspaceResponse;

        /**
         * Decodes a CreateKeyspaceResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CreateKeyspaceResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.CreateKeyspaceResponse;

        /**
         * Verifies a CreateKeyspaceResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CreateKeyspaceResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CreateKeyspaceResponse
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.CreateKeyspaceResponse;

        /**
         * Creates a plain object from a CreateKeyspaceResponse message. Also converts values to other types if specified.
         * @param message CreateKeyspaceResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.CreateKeyspaceResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CreateKeyspaceResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CreateShardRequest. */
    interface ICreateShardRequest {

        /** CreateShardRequest keyspace */
        keyspace?: (string|null);

        /** CreateShardRequest shard_name */
        shard_name?: (string|null);

        /** CreateShardRequest force */
        force?: (boolean|null);

        /** CreateShardRequest include_parent */
        include_parent?: (boolean|null);
    }

    /** Represents a CreateShardRequest. */
    class CreateShardRequest implements ICreateShardRequest {

        /**
         * Constructs a new CreateShardRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.ICreateShardRequest);

        /** CreateShardRequest keyspace. */
        public keyspace: string;

        /** CreateShardRequest shard_name. */
        public shard_name: string;

        /** CreateShardRequest force. */
        public force: boolean;

        /** CreateShardRequest include_parent. */
        public include_parent: boolean;

        /**
         * Creates a new CreateShardRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CreateShardRequest instance
         */
        public static create(properties?: vtctldata.ICreateShardRequest): vtctldata.CreateShardRequest;

        /**
         * Encodes the specified CreateShardRequest message. Does not implicitly {@link vtctldata.CreateShardRequest.verify|verify} messages.
         * @param message CreateShardRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.ICreateShardRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CreateShardRequest message, length delimited. Does not implicitly {@link vtctldata.CreateShardRequest.verify|verify} messages.
         * @param message CreateShardRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.ICreateShardRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CreateShardRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CreateShardRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.CreateShardRequest;

        /**
         * Decodes a CreateShardRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CreateShardRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.CreateShardRequest;

        /**
         * Verifies a CreateShardRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CreateShardRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CreateShardRequest
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.CreateShardRequest;

        /**
         * Creates a plain object from a CreateShardRequest message. Also converts values to other types if specified.
         * @param message CreateShardRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.CreateShardRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CreateShardRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CreateShardResponse. */
    interface ICreateShardResponse {

        /** CreateShardResponse keyspace */
        keyspace?: (vtctldata.IKeyspace|null);

        /** CreateShardResponse shard */
        shard?: (vtctldata.IShard|null);

        /** CreateShardResponse shard_already_exists */
        shard_already_exists?: (boolean|null);
    }

    /** Represents a CreateShardResponse. */
    class CreateShardResponse implements ICreateShardResponse {

        /**
         * Constructs a new CreateShardResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.ICreateShardResponse);

        /** CreateShardResponse keyspace. */
        public keyspace?: (vtctldata.IKeyspace|null);

        /** CreateShardResponse shard. */
        public shard?: (vtctldata.IShard|null);

        /** CreateShardResponse shard_already_exists. */
        public shard_already_exists: boolean;

        /**
         * Creates a new CreateShardResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CreateShardResponse instance
         */
        public static create(properties?: vtctldata.ICreateShardResponse): vtctldata.CreateShardResponse;

        /**
         * Encodes the specified CreateShardResponse message. Does not implicitly {@link vtctldata.CreateShardResponse.verify|verify} messages.
         * @param message CreateShardResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.ICreateShardResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CreateShardResponse message, length delimited. Does not implicitly {@link vtctldata.CreateShardResponse.verify|verify} messages.
         * @param message CreateShardResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.ICreateShardResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CreateShardResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CreateShardResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.CreateShardResponse;

        /**
         * Decodes a CreateShardResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CreateShardResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.CreateShardResponse;

        /**
         * Verifies a CreateShardResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CreateShardResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CreateShardResponse
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.CreateShardResponse;

        /**
         * Creates a plain object from a CreateShardResponse message. Also converts values to other types if specified.
         * @param message CreateShardResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.CreateShardResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CreateShardResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DeleteKeyspaceRequest. */
    interface IDeleteKeyspaceRequest {

        /** DeleteKeyspaceRequest keyspace */
        keyspace?: (string|null);

        /** DeleteKeyspaceRequest recursive */
        recursive?: (boolean|null);
    }

    /** Represents a DeleteKeyspaceRequest. */
    class DeleteKeyspaceRequest implements IDeleteKeyspaceRequest {

        /**
         * Constructs a new DeleteKeyspaceRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IDeleteKeyspaceRequest);

        /** DeleteKeyspaceRequest keyspace. */
        public keyspace: string;

        /** DeleteKeyspaceRequest recursive. */
        public recursive: boolean;

        /**
         * Creates a new DeleteKeyspaceRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DeleteKeyspaceRequest instance
         */
        public static create(properties?: vtctldata.IDeleteKeyspaceRequest): vtctldata.DeleteKeyspaceRequest;

        /**
         * Encodes the specified DeleteKeyspaceRequest message. Does not implicitly {@link vtctldata.DeleteKeyspaceRequest.verify|verify} messages.
         * @param message DeleteKeyspaceRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IDeleteKeyspaceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DeleteKeyspaceRequest message, length delimited. Does not implicitly {@link vtctldata.DeleteKeyspaceRequest.verify|verify} messages.
         * @param message DeleteKeyspaceRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IDeleteKeyspaceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DeleteKeyspaceRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DeleteKeyspaceRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.DeleteKeyspaceRequest;

        /**
         * Decodes a DeleteKeyspaceRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DeleteKeyspaceRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.DeleteKeyspaceRequest;

        /**
         * Verifies a DeleteKeyspaceRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DeleteKeyspaceRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DeleteKeyspaceRequest
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.DeleteKeyspaceRequest;

        /**
         * Creates a plain object from a DeleteKeyspaceRequest message. Also converts values to other types if specified.
         * @param message DeleteKeyspaceRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.DeleteKeyspaceRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DeleteKeyspaceRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DeleteKeyspaceResponse. */
    interface IDeleteKeyspaceResponse {
    }

    /** Represents a DeleteKeyspaceResponse. */
    class DeleteKeyspaceResponse implements IDeleteKeyspaceResponse {

        /**
         * Constructs a new DeleteKeyspaceResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IDeleteKeyspaceResponse);

        /**
         * Creates a new DeleteKeyspaceResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DeleteKeyspaceResponse instance
         */
        public static create(properties?: vtctldata.IDeleteKeyspaceResponse): vtctldata.DeleteKeyspaceResponse;

        /**
         * Encodes the specified DeleteKeyspaceResponse message. Does not implicitly {@link vtctldata.DeleteKeyspaceResponse.verify|verify} messages.
         * @param message DeleteKeyspaceResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IDeleteKeyspaceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DeleteKeyspaceResponse message, length delimited. Does not implicitly {@link vtctldata.DeleteKeyspaceResponse.verify|verify} messages.
         * @param message DeleteKeyspaceResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IDeleteKeyspaceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DeleteKeyspaceResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DeleteKeyspaceResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.DeleteKeyspaceResponse;

        /**
         * Decodes a DeleteKeyspaceResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DeleteKeyspaceResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.DeleteKeyspaceResponse;

        /**
         * Verifies a DeleteKeyspaceResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DeleteKeyspaceResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DeleteKeyspaceResponse
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.DeleteKeyspaceResponse;

        /**
         * Creates a plain object from a DeleteKeyspaceResponse message. Also converts values to other types if specified.
         * @param message DeleteKeyspaceResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.DeleteKeyspaceResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DeleteKeyspaceResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DeleteShardsRequest. */
    interface IDeleteShardsRequest {

        /** DeleteShardsRequest shards */
        shards?: (vtctldata.IShard[]|null);

        /** DeleteShardsRequest recursive */
        recursive?: (boolean|null);

        /** DeleteShardsRequest even_if_serving */
        even_if_serving?: (boolean|null);
    }

    /** Represents a DeleteShardsRequest. */
    class DeleteShardsRequest implements IDeleteShardsRequest {

        /**
         * Constructs a new DeleteShardsRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IDeleteShardsRequest);

        /** DeleteShardsRequest shards. */
        public shards: vtctldata.IShard[];

        /** DeleteShardsRequest recursive. */
        public recursive: boolean;

        /** DeleteShardsRequest even_if_serving. */
        public even_if_serving: boolean;

        /**
         * Creates a new DeleteShardsRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DeleteShardsRequest instance
         */
        public static create(properties?: vtctldata.IDeleteShardsRequest): vtctldata.DeleteShardsRequest;

        /**
         * Encodes the specified DeleteShardsRequest message. Does not implicitly {@link vtctldata.DeleteShardsRequest.verify|verify} messages.
         * @param message DeleteShardsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IDeleteShardsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DeleteShardsRequest message, length delimited. Does not implicitly {@link vtctldata.DeleteShardsRequest.verify|verify} messages.
         * @param message DeleteShardsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IDeleteShardsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DeleteShardsRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DeleteShardsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.DeleteShardsRequest;

        /**
         * Decodes a DeleteShardsRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DeleteShardsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.DeleteShardsRequest;

        /**
         * Verifies a DeleteShardsRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DeleteShardsRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DeleteShardsRequest
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.DeleteShardsRequest;

        /**
         * Creates a plain object from a DeleteShardsRequest message. Also converts values to other types if specified.
         * @param message DeleteShardsRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.DeleteShardsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DeleteShardsRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DeleteShardsResponse. */
    interface IDeleteShardsResponse {
    }

    /** Represents a DeleteShardsResponse. */
    class DeleteShardsResponse implements IDeleteShardsResponse {

        /**
         * Constructs a new DeleteShardsResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IDeleteShardsResponse);

        /**
         * Creates a new DeleteShardsResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DeleteShardsResponse instance
         */
        public static create(properties?: vtctldata.IDeleteShardsResponse): vtctldata.DeleteShardsResponse;

        /**
         * Encodes the specified DeleteShardsResponse message. Does not implicitly {@link vtctldata.DeleteShardsResponse.verify|verify} messages.
         * @param message DeleteShardsResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IDeleteShardsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DeleteShardsResponse message, length delimited. Does not implicitly {@link vtctldata.DeleteShardsResponse.verify|verify} messages.
         * @param message DeleteShardsResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IDeleteShardsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DeleteShardsResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DeleteShardsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.DeleteShardsResponse;

        /**
         * Decodes a DeleteShardsResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DeleteShardsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.DeleteShardsResponse;

        /**
         * Verifies a DeleteShardsResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DeleteShardsResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DeleteShardsResponse
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.DeleteShardsResponse;

        /**
         * Creates a plain object from a DeleteShardsResponse message. Also converts values to other types if specified.
         * @param message DeleteShardsResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.DeleteShardsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DeleteShardsResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DeleteTabletsRequest. */
    interface IDeleteTabletsRequest {

        /** DeleteTabletsRequest tablet_aliases */
        tablet_aliases?: (topodata.ITabletAlias[]|null);

        /** DeleteTabletsRequest allow_primary */
        allow_primary?: (boolean|null);
    }

    /** Represents a DeleteTabletsRequest. */
    class DeleteTabletsRequest implements IDeleteTabletsRequest {

        /**
         * Constructs a new DeleteTabletsRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IDeleteTabletsRequest);

        /** DeleteTabletsRequest tablet_aliases. */
        public tablet_aliases: topodata.ITabletAlias[];

        /** DeleteTabletsRequest allow_primary. */
        public allow_primary: boolean;

        /**
         * Creates a new DeleteTabletsRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DeleteTabletsRequest instance
         */
        public static create(properties?: vtctldata.IDeleteTabletsRequest): vtctldata.DeleteTabletsRequest;

        /**
         * Encodes the specified DeleteTabletsRequest message. Does not implicitly {@link vtctldata.DeleteTabletsRequest.verify|verify} messages.
         * @param message DeleteTabletsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IDeleteTabletsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DeleteTabletsRequest message, length delimited. Does not implicitly {@link vtctldata.DeleteTabletsRequest.verify|verify} messages.
         * @param message DeleteTabletsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IDeleteTabletsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DeleteTabletsRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DeleteTabletsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.DeleteTabletsRequest;

        /**
         * Decodes a DeleteTabletsRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DeleteTabletsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.DeleteTabletsRequest;

        /**
         * Verifies a DeleteTabletsRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DeleteTabletsRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DeleteTabletsRequest
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.DeleteTabletsRequest;

        /**
         * Creates a plain object from a DeleteTabletsRequest message. Also converts values to other types if specified.
         * @param message DeleteTabletsRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.DeleteTabletsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DeleteTabletsRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DeleteTabletsResponse. */
    interface IDeleteTabletsResponse {
    }

    /** Represents a DeleteTabletsResponse. */
    class DeleteTabletsResponse implements IDeleteTabletsResponse {

        /**
         * Constructs a new DeleteTabletsResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IDeleteTabletsResponse);

        /**
         * Creates a new DeleteTabletsResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DeleteTabletsResponse instance
         */
        public static create(properties?: vtctldata.IDeleteTabletsResponse): vtctldata.DeleteTabletsResponse;

        /**
         * Encodes the specified DeleteTabletsResponse message. Does not implicitly {@link vtctldata.DeleteTabletsResponse.verify|verify} messages.
         * @param message DeleteTabletsResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IDeleteTabletsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DeleteTabletsResponse message, length delimited. Does not implicitly {@link vtctldata.DeleteTabletsResponse.verify|verify} messages.
         * @param message DeleteTabletsResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IDeleteTabletsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DeleteTabletsResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DeleteTabletsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.DeleteTabletsResponse;

        /**
         * Decodes a DeleteTabletsResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DeleteTabletsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.DeleteTabletsResponse;

        /**
         * Verifies a DeleteTabletsResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DeleteTabletsResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DeleteTabletsResponse
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.DeleteTabletsResponse;

        /**
         * Creates a plain object from a DeleteTabletsResponse message. Also converts values to other types if specified.
         * @param message DeleteTabletsResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.DeleteTabletsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DeleteTabletsResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EmergencyReparentShardRequest. */
    interface IEmergencyReparentShardRequest {

        /** EmergencyReparentShardRequest keyspace */
        keyspace?: (string|null);

        /** EmergencyReparentShardRequest shard */
        shard?: (string|null);

        /** EmergencyReparentShardRequest new_primary */
        new_primary?: (topodata.ITabletAlias|null);

        /** EmergencyReparentShardRequest ignore_replicas */
        ignore_replicas?: (topodata.ITabletAlias[]|null);

        /** EmergencyReparentShardRequest wait_replicas_timeout */
        wait_replicas_timeout?: (vttime.IDuration|null);
    }

    /** Represents an EmergencyReparentShardRequest. */
    class EmergencyReparentShardRequest implements IEmergencyReparentShardRequest {

        /**
         * Constructs a new EmergencyReparentShardRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IEmergencyReparentShardRequest);

        /** EmergencyReparentShardRequest keyspace. */
        public keyspace: string;

        /** EmergencyReparentShardRequest shard. */
        public shard: string;

        /** EmergencyReparentShardRequest new_primary. */
        public new_primary?: (topodata.ITabletAlias|null);

        /** EmergencyReparentShardRequest ignore_replicas. */
        public ignore_replicas: topodata.ITabletAlias[];

        /** EmergencyReparentShardRequest wait_replicas_timeout. */
        public wait_replicas_timeout?: (vttime.IDuration|null);

        /**
         * Creates a new EmergencyReparentShardRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EmergencyReparentShardRequest instance
         */
        public static create(properties?: vtctldata.IEmergencyReparentShardRequest): vtctldata.EmergencyReparentShardRequest;

        /**
         * Encodes the specified EmergencyReparentShardRequest message. Does not implicitly {@link vtctldata.EmergencyReparentShardRequest.verify|verify} messages.
         * @param message EmergencyReparentShardRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IEmergencyReparentShardRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EmergencyReparentShardRequest message, length delimited. Does not implicitly {@link vtctldata.EmergencyReparentShardRequest.verify|verify} messages.
         * @param message EmergencyReparentShardRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IEmergencyReparentShardRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EmergencyReparentShardRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EmergencyReparentShardRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.EmergencyReparentShardRequest;

        /**
         * Decodes an EmergencyReparentShardRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EmergencyReparentShardRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.EmergencyReparentShardRequest;

        /**
         * Verifies an EmergencyReparentShardRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EmergencyReparentShardRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EmergencyReparentShardRequest
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.EmergencyReparentShardRequest;

        /**
         * Creates a plain object from an EmergencyReparentShardRequest message. Also converts values to other types if specified.
         * @param message EmergencyReparentShardRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.EmergencyReparentShardRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EmergencyReparentShardRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EmergencyReparentShardResponse. */
    interface IEmergencyReparentShardResponse {

        /** EmergencyReparentShardResponse keyspace */
        keyspace?: (string|null);

        /** EmergencyReparentShardResponse shard */
        shard?: (string|null);

        /** EmergencyReparentShardResponse promoted_primary */
        promoted_primary?: (topodata.ITabletAlias|null);

        /** EmergencyReparentShardResponse events */
        events?: (logutil.IEvent[]|null);
    }

    /** Represents an EmergencyReparentShardResponse. */
    class EmergencyReparentShardResponse implements IEmergencyReparentShardResponse {

        /**
         * Constructs a new EmergencyReparentShardResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IEmergencyReparentShardResponse);

        /** EmergencyReparentShardResponse keyspace. */
        public keyspace: string;

        /** EmergencyReparentShardResponse shard. */
        public shard: string;

        /** EmergencyReparentShardResponse promoted_primary. */
        public promoted_primary?: (topodata.ITabletAlias|null);

        /** EmergencyReparentShardResponse events. */
        public events: logutil.IEvent[];

        /**
         * Creates a new EmergencyReparentShardResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EmergencyReparentShardResponse instance
         */
        public static create(properties?: vtctldata.IEmergencyReparentShardResponse): vtctldata.EmergencyReparentShardResponse;

        /**
         * Encodes the specified EmergencyReparentShardResponse message. Does not implicitly {@link vtctldata.EmergencyReparentShardResponse.verify|verify} messages.
         * @param message EmergencyReparentShardResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IEmergencyReparentShardResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EmergencyReparentShardResponse message, length delimited. Does not implicitly {@link vtctldata.EmergencyReparentShardResponse.verify|verify} messages.
         * @param message EmergencyReparentShardResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IEmergencyReparentShardResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EmergencyReparentShardResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EmergencyReparentShardResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.EmergencyReparentShardResponse;

        /**
         * Decodes an EmergencyReparentShardResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EmergencyReparentShardResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.EmergencyReparentShardResponse;

        /**
         * Verifies an EmergencyReparentShardResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EmergencyReparentShardResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EmergencyReparentShardResponse
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.EmergencyReparentShardResponse;

        /**
         * Creates a plain object from an EmergencyReparentShardResponse message. Also converts values to other types if specified.
         * @param message EmergencyReparentShardResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.EmergencyReparentShardResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EmergencyReparentShardResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FindAllShardsInKeyspaceRequest. */
    interface IFindAllShardsInKeyspaceRequest {

        /** FindAllShardsInKeyspaceRequest keyspace */
        keyspace?: (string|null);
    }

    /** Represents a FindAllShardsInKeyspaceRequest. */
    class FindAllShardsInKeyspaceRequest implements IFindAllShardsInKeyspaceRequest {

        /**
         * Constructs a new FindAllShardsInKeyspaceRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IFindAllShardsInKeyspaceRequest);

        /** FindAllShardsInKeyspaceRequest keyspace. */
        public keyspace: string;

        /**
         * Creates a new FindAllShardsInKeyspaceRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FindAllShardsInKeyspaceRequest instance
         */
        public static create(properties?: vtctldata.IFindAllShardsInKeyspaceRequest): vtctldata.FindAllShardsInKeyspaceRequest;

        /**
         * Encodes the specified FindAllShardsInKeyspaceRequest message. Does not implicitly {@link vtctldata.FindAllShardsInKeyspaceRequest.verify|verify} messages.
         * @param message FindAllShardsInKeyspaceRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IFindAllShardsInKeyspaceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FindAllShardsInKeyspaceRequest message, length delimited. Does not implicitly {@link vtctldata.FindAllShardsInKeyspaceRequest.verify|verify} messages.
         * @param message FindAllShardsInKeyspaceRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IFindAllShardsInKeyspaceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FindAllShardsInKeyspaceRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FindAllShardsInKeyspaceRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.FindAllShardsInKeyspaceRequest;

        /**
         * Decodes a FindAllShardsInKeyspaceRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FindAllShardsInKeyspaceRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.FindAllShardsInKeyspaceRequest;

        /**
         * Verifies a FindAllShardsInKeyspaceRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FindAllShardsInKeyspaceRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FindAllShardsInKeyspaceRequest
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.FindAllShardsInKeyspaceRequest;

        /**
         * Creates a plain object from a FindAllShardsInKeyspaceRequest message. Also converts values to other types if specified.
         * @param message FindAllShardsInKeyspaceRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.FindAllShardsInKeyspaceRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FindAllShardsInKeyspaceRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FindAllShardsInKeyspaceResponse. */
    interface IFindAllShardsInKeyspaceResponse {

        /** FindAllShardsInKeyspaceResponse shards */
        shards?: ({ [k: string]: vtctldata.IShard }|null);
    }

    /** Represents a FindAllShardsInKeyspaceResponse. */
    class FindAllShardsInKeyspaceResponse implements IFindAllShardsInKeyspaceResponse {

        /**
         * Constructs a new FindAllShardsInKeyspaceResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IFindAllShardsInKeyspaceResponse);

        /** FindAllShardsInKeyspaceResponse shards. */
        public shards: { [k: string]: vtctldata.IShard };

        /**
         * Creates a new FindAllShardsInKeyspaceResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FindAllShardsInKeyspaceResponse instance
         */
        public static create(properties?: vtctldata.IFindAllShardsInKeyspaceResponse): vtctldata.FindAllShardsInKeyspaceResponse;

        /**
         * Encodes the specified FindAllShardsInKeyspaceResponse message. Does not implicitly {@link vtctldata.FindAllShardsInKeyspaceResponse.verify|verify} messages.
         * @param message FindAllShardsInKeyspaceResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IFindAllShardsInKeyspaceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FindAllShardsInKeyspaceResponse message, length delimited. Does not implicitly {@link vtctldata.FindAllShardsInKeyspaceResponse.verify|verify} messages.
         * @param message FindAllShardsInKeyspaceResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IFindAllShardsInKeyspaceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FindAllShardsInKeyspaceResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FindAllShardsInKeyspaceResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.FindAllShardsInKeyspaceResponse;

        /**
         * Decodes a FindAllShardsInKeyspaceResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FindAllShardsInKeyspaceResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.FindAllShardsInKeyspaceResponse;

        /**
         * Verifies a FindAllShardsInKeyspaceResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FindAllShardsInKeyspaceResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FindAllShardsInKeyspaceResponse
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.FindAllShardsInKeyspaceResponse;

        /**
         * Creates a plain object from a FindAllShardsInKeyspaceResponse message. Also converts values to other types if specified.
         * @param message FindAllShardsInKeyspaceResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.FindAllShardsInKeyspaceResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FindAllShardsInKeyspaceResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetBackupsRequest. */
    interface IGetBackupsRequest {

        /** GetBackupsRequest keyspace */
        keyspace?: (string|null);

        /** GetBackupsRequest shard */
        shard?: (string|null);
    }

    /** Represents a GetBackupsRequest. */
    class GetBackupsRequest implements IGetBackupsRequest {

        /**
         * Constructs a new GetBackupsRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IGetBackupsRequest);

        /** GetBackupsRequest keyspace. */
        public keyspace: string;

        /** GetBackupsRequest shard. */
        public shard: string;

        /**
         * Creates a new GetBackupsRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetBackupsRequest instance
         */
        public static create(properties?: vtctldata.IGetBackupsRequest): vtctldata.GetBackupsRequest;

        /**
         * Encodes the specified GetBackupsRequest message. Does not implicitly {@link vtctldata.GetBackupsRequest.verify|verify} messages.
         * @param message GetBackupsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IGetBackupsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetBackupsRequest message, length delimited. Does not implicitly {@link vtctldata.GetBackupsRequest.verify|verify} messages.
         * @param message GetBackupsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IGetBackupsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetBackupsRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetBackupsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.GetBackupsRequest;

        /**
         * Decodes a GetBackupsRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetBackupsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.GetBackupsRequest;

        /**
         * Verifies a GetBackupsRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetBackupsRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetBackupsRequest
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.GetBackupsRequest;

        /**
         * Creates a plain object from a GetBackupsRequest message. Also converts values to other types if specified.
         * @param message GetBackupsRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.GetBackupsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetBackupsRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetBackupsResponse. */
    interface IGetBackupsResponse {

        /** GetBackupsResponse backups */
        backups?: (mysqlctl.IBackupInfo[]|null);
    }

    /** Represents a GetBackupsResponse. */
    class GetBackupsResponse implements IGetBackupsResponse {

        /**
         * Constructs a new GetBackupsResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IGetBackupsResponse);

        /** GetBackupsResponse backups. */
        public backups: mysqlctl.IBackupInfo[];

        /**
         * Creates a new GetBackupsResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetBackupsResponse instance
         */
        public static create(properties?: vtctldata.IGetBackupsResponse): vtctldata.GetBackupsResponse;

        /**
         * Encodes the specified GetBackupsResponse message. Does not implicitly {@link vtctldata.GetBackupsResponse.verify|verify} messages.
         * @param message GetBackupsResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IGetBackupsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetBackupsResponse message, length delimited. Does not implicitly {@link vtctldata.GetBackupsResponse.verify|verify} messages.
         * @param message GetBackupsResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IGetBackupsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetBackupsResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetBackupsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.GetBackupsResponse;

        /**
         * Decodes a GetBackupsResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetBackupsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.GetBackupsResponse;

        /**
         * Verifies a GetBackupsResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetBackupsResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetBackupsResponse
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.GetBackupsResponse;

        /**
         * Creates a plain object from a GetBackupsResponse message. Also converts values to other types if specified.
         * @param message GetBackupsResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.GetBackupsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetBackupsResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetCellInfoNamesRequest. */
    interface IGetCellInfoNamesRequest {
    }

    /** Represents a GetCellInfoNamesRequest. */
    class GetCellInfoNamesRequest implements IGetCellInfoNamesRequest {

        /**
         * Constructs a new GetCellInfoNamesRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IGetCellInfoNamesRequest);

        /**
         * Creates a new GetCellInfoNamesRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetCellInfoNamesRequest instance
         */
        public static create(properties?: vtctldata.IGetCellInfoNamesRequest): vtctldata.GetCellInfoNamesRequest;

        /**
         * Encodes the specified GetCellInfoNamesRequest message. Does not implicitly {@link vtctldata.GetCellInfoNamesRequest.verify|verify} messages.
         * @param message GetCellInfoNamesRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IGetCellInfoNamesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetCellInfoNamesRequest message, length delimited. Does not implicitly {@link vtctldata.GetCellInfoNamesRequest.verify|verify} messages.
         * @param message GetCellInfoNamesRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IGetCellInfoNamesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetCellInfoNamesRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetCellInfoNamesRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.GetCellInfoNamesRequest;

        /**
         * Decodes a GetCellInfoNamesRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetCellInfoNamesRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.GetCellInfoNamesRequest;

        /**
         * Verifies a GetCellInfoNamesRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetCellInfoNamesRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetCellInfoNamesRequest
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.GetCellInfoNamesRequest;

        /**
         * Creates a plain object from a GetCellInfoNamesRequest message. Also converts values to other types if specified.
         * @param message GetCellInfoNamesRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.GetCellInfoNamesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetCellInfoNamesRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetCellInfoNamesResponse. */
    interface IGetCellInfoNamesResponse {

        /** GetCellInfoNamesResponse names */
        names?: (string[]|null);
    }

    /** Represents a GetCellInfoNamesResponse. */
    class GetCellInfoNamesResponse implements IGetCellInfoNamesResponse {

        /**
         * Constructs a new GetCellInfoNamesResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IGetCellInfoNamesResponse);

        /** GetCellInfoNamesResponse names. */
        public names: string[];

        /**
         * Creates a new GetCellInfoNamesResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetCellInfoNamesResponse instance
         */
        public static create(properties?: vtctldata.IGetCellInfoNamesResponse): vtctldata.GetCellInfoNamesResponse;

        /**
         * Encodes the specified GetCellInfoNamesResponse message. Does not implicitly {@link vtctldata.GetCellInfoNamesResponse.verify|verify} messages.
         * @param message GetCellInfoNamesResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IGetCellInfoNamesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetCellInfoNamesResponse message, length delimited. Does not implicitly {@link vtctldata.GetCellInfoNamesResponse.verify|verify} messages.
         * @param message GetCellInfoNamesResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IGetCellInfoNamesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetCellInfoNamesResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetCellInfoNamesResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.GetCellInfoNamesResponse;

        /**
         * Decodes a GetCellInfoNamesResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetCellInfoNamesResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.GetCellInfoNamesResponse;

        /**
         * Verifies a GetCellInfoNamesResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetCellInfoNamesResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetCellInfoNamesResponse
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.GetCellInfoNamesResponse;

        /**
         * Creates a plain object from a GetCellInfoNamesResponse message. Also converts values to other types if specified.
         * @param message GetCellInfoNamesResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.GetCellInfoNamesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetCellInfoNamesResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetCellInfoRequest. */
    interface IGetCellInfoRequest {

        /** GetCellInfoRequest cell */
        cell?: (string|null);
    }

    /** Represents a GetCellInfoRequest. */
    class GetCellInfoRequest implements IGetCellInfoRequest {

        /**
         * Constructs a new GetCellInfoRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IGetCellInfoRequest);

        /** GetCellInfoRequest cell. */
        public cell: string;

        /**
         * Creates a new GetCellInfoRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetCellInfoRequest instance
         */
        public static create(properties?: vtctldata.IGetCellInfoRequest): vtctldata.GetCellInfoRequest;

        /**
         * Encodes the specified GetCellInfoRequest message. Does not implicitly {@link vtctldata.GetCellInfoRequest.verify|verify} messages.
         * @param message GetCellInfoRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IGetCellInfoRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetCellInfoRequest message, length delimited. Does not implicitly {@link vtctldata.GetCellInfoRequest.verify|verify} messages.
         * @param message GetCellInfoRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IGetCellInfoRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetCellInfoRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetCellInfoRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.GetCellInfoRequest;

        /**
         * Decodes a GetCellInfoRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetCellInfoRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.GetCellInfoRequest;

        /**
         * Verifies a GetCellInfoRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetCellInfoRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetCellInfoRequest
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.GetCellInfoRequest;

        /**
         * Creates a plain object from a GetCellInfoRequest message. Also converts values to other types if specified.
         * @param message GetCellInfoRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.GetCellInfoRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetCellInfoRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetCellInfoResponse. */
    interface IGetCellInfoResponse {

        /** GetCellInfoResponse cell_info */
        cell_info?: (topodata.ICellInfo|null);
    }

    /** Represents a GetCellInfoResponse. */
    class GetCellInfoResponse implements IGetCellInfoResponse {

        /**
         * Constructs a new GetCellInfoResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IGetCellInfoResponse);

        /** GetCellInfoResponse cell_info. */
        public cell_info?: (topodata.ICellInfo|null);

        /**
         * Creates a new GetCellInfoResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetCellInfoResponse instance
         */
        public static create(properties?: vtctldata.IGetCellInfoResponse): vtctldata.GetCellInfoResponse;

        /**
         * Encodes the specified GetCellInfoResponse message. Does not implicitly {@link vtctldata.GetCellInfoResponse.verify|verify} messages.
         * @param message GetCellInfoResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IGetCellInfoResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetCellInfoResponse message, length delimited. Does not implicitly {@link vtctldata.GetCellInfoResponse.verify|verify} messages.
         * @param message GetCellInfoResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IGetCellInfoResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetCellInfoResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetCellInfoResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.GetCellInfoResponse;

        /**
         * Decodes a GetCellInfoResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetCellInfoResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.GetCellInfoResponse;

        /**
         * Verifies a GetCellInfoResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetCellInfoResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetCellInfoResponse
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.GetCellInfoResponse;

        /**
         * Creates a plain object from a GetCellInfoResponse message. Also converts values to other types if specified.
         * @param message GetCellInfoResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.GetCellInfoResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetCellInfoResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetCellsAliasesRequest. */
    interface IGetCellsAliasesRequest {
    }

    /** Represents a GetCellsAliasesRequest. */
    class GetCellsAliasesRequest implements IGetCellsAliasesRequest {

        /**
         * Constructs a new GetCellsAliasesRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IGetCellsAliasesRequest);

        /**
         * Creates a new GetCellsAliasesRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetCellsAliasesRequest instance
         */
        public static create(properties?: vtctldata.IGetCellsAliasesRequest): vtctldata.GetCellsAliasesRequest;

        /**
         * Encodes the specified GetCellsAliasesRequest message. Does not implicitly {@link vtctldata.GetCellsAliasesRequest.verify|verify} messages.
         * @param message GetCellsAliasesRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IGetCellsAliasesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetCellsAliasesRequest message, length delimited. Does not implicitly {@link vtctldata.GetCellsAliasesRequest.verify|verify} messages.
         * @param message GetCellsAliasesRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IGetCellsAliasesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetCellsAliasesRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetCellsAliasesRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.GetCellsAliasesRequest;

        /**
         * Decodes a GetCellsAliasesRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetCellsAliasesRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.GetCellsAliasesRequest;

        /**
         * Verifies a GetCellsAliasesRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetCellsAliasesRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetCellsAliasesRequest
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.GetCellsAliasesRequest;

        /**
         * Creates a plain object from a GetCellsAliasesRequest message. Also converts values to other types if specified.
         * @param message GetCellsAliasesRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.GetCellsAliasesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetCellsAliasesRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetCellsAliasesResponse. */
    interface IGetCellsAliasesResponse {

        /** GetCellsAliasesResponse aliases */
        aliases?: ({ [k: string]: topodata.ICellsAlias }|null);
    }

    /** Represents a GetCellsAliasesResponse. */
    class GetCellsAliasesResponse implements IGetCellsAliasesResponse {

        /**
         * Constructs a new GetCellsAliasesResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IGetCellsAliasesResponse);

        /** GetCellsAliasesResponse aliases. */
        public aliases: { [k: string]: topodata.ICellsAlias };

        /**
         * Creates a new GetCellsAliasesResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetCellsAliasesResponse instance
         */
        public static create(properties?: vtctldata.IGetCellsAliasesResponse): vtctldata.GetCellsAliasesResponse;

        /**
         * Encodes the specified GetCellsAliasesResponse message. Does not implicitly {@link vtctldata.GetCellsAliasesResponse.verify|verify} messages.
         * @param message GetCellsAliasesResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IGetCellsAliasesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetCellsAliasesResponse message, length delimited. Does not implicitly {@link vtctldata.GetCellsAliasesResponse.verify|verify} messages.
         * @param message GetCellsAliasesResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IGetCellsAliasesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetCellsAliasesResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetCellsAliasesResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.GetCellsAliasesResponse;

        /**
         * Decodes a GetCellsAliasesResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetCellsAliasesResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.GetCellsAliasesResponse;

        /**
         * Verifies a GetCellsAliasesResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetCellsAliasesResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetCellsAliasesResponse
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.GetCellsAliasesResponse;

        /**
         * Creates a plain object from a GetCellsAliasesResponse message. Also converts values to other types if specified.
         * @param message GetCellsAliasesResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.GetCellsAliasesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetCellsAliasesResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetKeyspacesRequest. */
    interface IGetKeyspacesRequest {
    }

    /** Represents a GetKeyspacesRequest. */
    class GetKeyspacesRequest implements IGetKeyspacesRequest {

        /**
         * Constructs a new GetKeyspacesRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IGetKeyspacesRequest);

        /**
         * Creates a new GetKeyspacesRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetKeyspacesRequest instance
         */
        public static create(properties?: vtctldata.IGetKeyspacesRequest): vtctldata.GetKeyspacesRequest;

        /**
         * Encodes the specified GetKeyspacesRequest message. Does not implicitly {@link vtctldata.GetKeyspacesRequest.verify|verify} messages.
         * @param message GetKeyspacesRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IGetKeyspacesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetKeyspacesRequest message, length delimited. Does not implicitly {@link vtctldata.GetKeyspacesRequest.verify|verify} messages.
         * @param message GetKeyspacesRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IGetKeyspacesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetKeyspacesRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetKeyspacesRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.GetKeyspacesRequest;

        /**
         * Decodes a GetKeyspacesRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetKeyspacesRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.GetKeyspacesRequest;

        /**
         * Verifies a GetKeyspacesRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetKeyspacesRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetKeyspacesRequest
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.GetKeyspacesRequest;

        /**
         * Creates a plain object from a GetKeyspacesRequest message. Also converts values to other types if specified.
         * @param message GetKeyspacesRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.GetKeyspacesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetKeyspacesRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetKeyspacesResponse. */
    interface IGetKeyspacesResponse {

        /** GetKeyspacesResponse keyspaces */
        keyspaces?: (vtctldata.IKeyspace[]|null);
    }

    /** Represents a GetKeyspacesResponse. */
    class GetKeyspacesResponse implements IGetKeyspacesResponse {

        /**
         * Constructs a new GetKeyspacesResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IGetKeyspacesResponse);

        /** GetKeyspacesResponse keyspaces. */
        public keyspaces: vtctldata.IKeyspace[];

        /**
         * Creates a new GetKeyspacesResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetKeyspacesResponse instance
         */
        public static create(properties?: vtctldata.IGetKeyspacesResponse): vtctldata.GetKeyspacesResponse;

        /**
         * Encodes the specified GetKeyspacesResponse message. Does not implicitly {@link vtctldata.GetKeyspacesResponse.verify|verify} messages.
         * @param message GetKeyspacesResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IGetKeyspacesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetKeyspacesResponse message, length delimited. Does not implicitly {@link vtctldata.GetKeyspacesResponse.verify|verify} messages.
         * @param message GetKeyspacesResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IGetKeyspacesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetKeyspacesResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetKeyspacesResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.GetKeyspacesResponse;

        /**
         * Decodes a GetKeyspacesResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetKeyspacesResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.GetKeyspacesResponse;

        /**
         * Verifies a GetKeyspacesResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetKeyspacesResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetKeyspacesResponse
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.GetKeyspacesResponse;

        /**
         * Creates a plain object from a GetKeyspacesResponse message. Also converts values to other types if specified.
         * @param message GetKeyspacesResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.GetKeyspacesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetKeyspacesResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetKeyspaceRequest. */
    interface IGetKeyspaceRequest {

        /** GetKeyspaceRequest keyspace */
        keyspace?: (string|null);
    }

    /** Represents a GetKeyspaceRequest. */
    class GetKeyspaceRequest implements IGetKeyspaceRequest {

        /**
         * Constructs a new GetKeyspaceRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IGetKeyspaceRequest);

        /** GetKeyspaceRequest keyspace. */
        public keyspace: string;

        /**
         * Creates a new GetKeyspaceRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetKeyspaceRequest instance
         */
        public static create(properties?: vtctldata.IGetKeyspaceRequest): vtctldata.GetKeyspaceRequest;

        /**
         * Encodes the specified GetKeyspaceRequest message. Does not implicitly {@link vtctldata.GetKeyspaceRequest.verify|verify} messages.
         * @param message GetKeyspaceRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IGetKeyspaceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetKeyspaceRequest message, length delimited. Does not implicitly {@link vtctldata.GetKeyspaceRequest.verify|verify} messages.
         * @param message GetKeyspaceRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IGetKeyspaceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetKeyspaceRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetKeyspaceRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.GetKeyspaceRequest;

        /**
         * Decodes a GetKeyspaceRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetKeyspaceRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.GetKeyspaceRequest;

        /**
         * Verifies a GetKeyspaceRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetKeyspaceRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetKeyspaceRequest
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.GetKeyspaceRequest;

        /**
         * Creates a plain object from a GetKeyspaceRequest message. Also converts values to other types if specified.
         * @param message GetKeyspaceRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.GetKeyspaceRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetKeyspaceRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetKeyspaceResponse. */
    interface IGetKeyspaceResponse {

        /** GetKeyspaceResponse keyspace */
        keyspace?: (vtctldata.IKeyspace|null);
    }

    /** Represents a GetKeyspaceResponse. */
    class GetKeyspaceResponse implements IGetKeyspaceResponse {

        /**
         * Constructs a new GetKeyspaceResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IGetKeyspaceResponse);

        /** GetKeyspaceResponse keyspace. */
        public keyspace?: (vtctldata.IKeyspace|null);

        /**
         * Creates a new GetKeyspaceResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetKeyspaceResponse instance
         */
        public static create(properties?: vtctldata.IGetKeyspaceResponse): vtctldata.GetKeyspaceResponse;

        /**
         * Encodes the specified GetKeyspaceResponse message. Does not implicitly {@link vtctldata.GetKeyspaceResponse.verify|verify} messages.
         * @param message GetKeyspaceResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IGetKeyspaceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetKeyspaceResponse message, length delimited. Does not implicitly {@link vtctldata.GetKeyspaceResponse.verify|verify} messages.
         * @param message GetKeyspaceResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IGetKeyspaceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetKeyspaceResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetKeyspaceResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.GetKeyspaceResponse;

        /**
         * Decodes a GetKeyspaceResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetKeyspaceResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.GetKeyspaceResponse;

        /**
         * Verifies a GetKeyspaceResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetKeyspaceResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetKeyspaceResponse
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.GetKeyspaceResponse;

        /**
         * Creates a plain object from a GetKeyspaceResponse message. Also converts values to other types if specified.
         * @param message GetKeyspaceResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.GetKeyspaceResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetKeyspaceResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetSchemaRequest. */
    interface IGetSchemaRequest {

        /** GetSchemaRequest tablet_alias */
        tablet_alias?: (topodata.ITabletAlias|null);

        /** GetSchemaRequest tables */
        tables?: (string[]|null);

        /** GetSchemaRequest exclude_tables */
        exclude_tables?: (string[]|null);

        /** GetSchemaRequest include_views */
        include_views?: (boolean|null);

        /** GetSchemaRequest table_names_only */
        table_names_only?: (boolean|null);

        /** GetSchemaRequest table_sizes_only */
        table_sizes_only?: (boolean|null);
    }

    /** Represents a GetSchemaRequest. */
    class GetSchemaRequest implements IGetSchemaRequest {

        /**
         * Constructs a new GetSchemaRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IGetSchemaRequest);

        /** GetSchemaRequest tablet_alias. */
        public tablet_alias?: (topodata.ITabletAlias|null);

        /** GetSchemaRequest tables. */
        public tables: string[];

        /** GetSchemaRequest exclude_tables. */
        public exclude_tables: string[];

        /** GetSchemaRequest include_views. */
        public include_views: boolean;

        /** GetSchemaRequest table_names_only. */
        public table_names_only: boolean;

        /** GetSchemaRequest table_sizes_only. */
        public table_sizes_only: boolean;

        /**
         * Creates a new GetSchemaRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetSchemaRequest instance
         */
        public static create(properties?: vtctldata.IGetSchemaRequest): vtctldata.GetSchemaRequest;

        /**
         * Encodes the specified GetSchemaRequest message. Does not implicitly {@link vtctldata.GetSchemaRequest.verify|verify} messages.
         * @param message GetSchemaRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IGetSchemaRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetSchemaRequest message, length delimited. Does not implicitly {@link vtctldata.GetSchemaRequest.verify|verify} messages.
         * @param message GetSchemaRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IGetSchemaRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetSchemaRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetSchemaRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.GetSchemaRequest;

        /**
         * Decodes a GetSchemaRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetSchemaRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.GetSchemaRequest;

        /**
         * Verifies a GetSchemaRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetSchemaRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetSchemaRequest
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.GetSchemaRequest;

        /**
         * Creates a plain object from a GetSchemaRequest message. Also converts values to other types if specified.
         * @param message GetSchemaRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.GetSchemaRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetSchemaRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetSchemaResponse. */
    interface IGetSchemaResponse {

        /** GetSchemaResponse schema */
        schema?: (tabletmanagerdata.ISchemaDefinition|null);
    }

    /** Represents a GetSchemaResponse. */
    class GetSchemaResponse implements IGetSchemaResponse {

        /**
         * Constructs a new GetSchemaResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IGetSchemaResponse);

        /** GetSchemaResponse schema. */
        public schema?: (tabletmanagerdata.ISchemaDefinition|null);

        /**
         * Creates a new GetSchemaResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetSchemaResponse instance
         */
        public static create(properties?: vtctldata.IGetSchemaResponse): vtctldata.GetSchemaResponse;

        /**
         * Encodes the specified GetSchemaResponse message. Does not implicitly {@link vtctldata.GetSchemaResponse.verify|verify} messages.
         * @param message GetSchemaResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IGetSchemaResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetSchemaResponse message, length delimited. Does not implicitly {@link vtctldata.GetSchemaResponse.verify|verify} messages.
         * @param message GetSchemaResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IGetSchemaResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetSchemaResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetSchemaResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.GetSchemaResponse;

        /**
         * Decodes a GetSchemaResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetSchemaResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.GetSchemaResponse;

        /**
         * Verifies a GetSchemaResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetSchemaResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetSchemaResponse
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.GetSchemaResponse;

        /**
         * Creates a plain object from a GetSchemaResponse message. Also converts values to other types if specified.
         * @param message GetSchemaResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.GetSchemaResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetSchemaResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetShardRequest. */
    interface IGetShardRequest {

        /** GetShardRequest keyspace */
        keyspace?: (string|null);

        /** GetShardRequest shard_name */
        shard_name?: (string|null);
    }

    /** Represents a GetShardRequest. */
    class GetShardRequest implements IGetShardRequest {

        /**
         * Constructs a new GetShardRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IGetShardRequest);

        /** GetShardRequest keyspace. */
        public keyspace: string;

        /** GetShardRequest shard_name. */
        public shard_name: string;

        /**
         * Creates a new GetShardRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetShardRequest instance
         */
        public static create(properties?: vtctldata.IGetShardRequest): vtctldata.GetShardRequest;

        /**
         * Encodes the specified GetShardRequest message. Does not implicitly {@link vtctldata.GetShardRequest.verify|verify} messages.
         * @param message GetShardRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IGetShardRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetShardRequest message, length delimited. Does not implicitly {@link vtctldata.GetShardRequest.verify|verify} messages.
         * @param message GetShardRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IGetShardRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetShardRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetShardRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.GetShardRequest;

        /**
         * Decodes a GetShardRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetShardRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.GetShardRequest;

        /**
         * Verifies a GetShardRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetShardRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetShardRequest
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.GetShardRequest;

        /**
         * Creates a plain object from a GetShardRequest message. Also converts values to other types if specified.
         * @param message GetShardRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.GetShardRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetShardRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetShardResponse. */
    interface IGetShardResponse {

        /** GetShardResponse shard */
        shard?: (vtctldata.IShard|null);
    }

    /** Represents a GetShardResponse. */
    class GetShardResponse implements IGetShardResponse {

        /**
         * Constructs a new GetShardResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IGetShardResponse);

        /** GetShardResponse shard. */
        public shard?: (vtctldata.IShard|null);

        /**
         * Creates a new GetShardResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetShardResponse instance
         */
        public static create(properties?: vtctldata.IGetShardResponse): vtctldata.GetShardResponse;

        /**
         * Encodes the specified GetShardResponse message. Does not implicitly {@link vtctldata.GetShardResponse.verify|verify} messages.
         * @param message GetShardResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IGetShardResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetShardResponse message, length delimited. Does not implicitly {@link vtctldata.GetShardResponse.verify|verify} messages.
         * @param message GetShardResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IGetShardResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetShardResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetShardResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.GetShardResponse;

        /**
         * Decodes a GetShardResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetShardResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.GetShardResponse;

        /**
         * Verifies a GetShardResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetShardResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetShardResponse
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.GetShardResponse;

        /**
         * Creates a plain object from a GetShardResponse message. Also converts values to other types if specified.
         * @param message GetShardResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.GetShardResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetShardResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetSrvKeyspacesRequest. */
    interface IGetSrvKeyspacesRequest {

        /** GetSrvKeyspacesRequest keyspace */
        keyspace?: (string|null);

        /** GetSrvKeyspacesRequest cells */
        cells?: (string[]|null);
    }

    /** Represents a GetSrvKeyspacesRequest. */
    class GetSrvKeyspacesRequest implements IGetSrvKeyspacesRequest {

        /**
         * Constructs a new GetSrvKeyspacesRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IGetSrvKeyspacesRequest);

        /** GetSrvKeyspacesRequest keyspace. */
        public keyspace: string;

        /** GetSrvKeyspacesRequest cells. */
        public cells: string[];

        /**
         * Creates a new GetSrvKeyspacesRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetSrvKeyspacesRequest instance
         */
        public static create(properties?: vtctldata.IGetSrvKeyspacesRequest): vtctldata.GetSrvKeyspacesRequest;

        /**
         * Encodes the specified GetSrvKeyspacesRequest message. Does not implicitly {@link vtctldata.GetSrvKeyspacesRequest.verify|verify} messages.
         * @param message GetSrvKeyspacesRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IGetSrvKeyspacesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetSrvKeyspacesRequest message, length delimited. Does not implicitly {@link vtctldata.GetSrvKeyspacesRequest.verify|verify} messages.
         * @param message GetSrvKeyspacesRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IGetSrvKeyspacesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetSrvKeyspacesRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetSrvKeyspacesRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.GetSrvKeyspacesRequest;

        /**
         * Decodes a GetSrvKeyspacesRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetSrvKeyspacesRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.GetSrvKeyspacesRequest;

        /**
         * Verifies a GetSrvKeyspacesRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetSrvKeyspacesRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetSrvKeyspacesRequest
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.GetSrvKeyspacesRequest;

        /**
         * Creates a plain object from a GetSrvKeyspacesRequest message. Also converts values to other types if specified.
         * @param message GetSrvKeyspacesRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.GetSrvKeyspacesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetSrvKeyspacesRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetSrvKeyspacesResponse. */
    interface IGetSrvKeyspacesResponse {

        /** GetSrvKeyspacesResponse srv_keyspaces */
        srv_keyspaces?: ({ [k: string]: topodata.ISrvKeyspace }|null);
    }

    /** Represents a GetSrvKeyspacesResponse. */
    class GetSrvKeyspacesResponse implements IGetSrvKeyspacesResponse {

        /**
         * Constructs a new GetSrvKeyspacesResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IGetSrvKeyspacesResponse);

        /** GetSrvKeyspacesResponse srv_keyspaces. */
        public srv_keyspaces: { [k: string]: topodata.ISrvKeyspace };

        /**
         * Creates a new GetSrvKeyspacesResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetSrvKeyspacesResponse instance
         */
        public static create(properties?: vtctldata.IGetSrvKeyspacesResponse): vtctldata.GetSrvKeyspacesResponse;

        /**
         * Encodes the specified GetSrvKeyspacesResponse message. Does not implicitly {@link vtctldata.GetSrvKeyspacesResponse.verify|verify} messages.
         * @param message GetSrvKeyspacesResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IGetSrvKeyspacesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetSrvKeyspacesResponse message, length delimited. Does not implicitly {@link vtctldata.GetSrvKeyspacesResponse.verify|verify} messages.
         * @param message GetSrvKeyspacesResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IGetSrvKeyspacesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetSrvKeyspacesResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetSrvKeyspacesResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.GetSrvKeyspacesResponse;

        /**
         * Decodes a GetSrvKeyspacesResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetSrvKeyspacesResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.GetSrvKeyspacesResponse;

        /**
         * Verifies a GetSrvKeyspacesResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetSrvKeyspacesResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetSrvKeyspacesResponse
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.GetSrvKeyspacesResponse;

        /**
         * Creates a plain object from a GetSrvKeyspacesResponse message. Also converts values to other types if specified.
         * @param message GetSrvKeyspacesResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.GetSrvKeyspacesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetSrvKeyspacesResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetSrvVSchemaRequest. */
    interface IGetSrvVSchemaRequest {

        /** GetSrvVSchemaRequest cell */
        cell?: (string|null);
    }

    /** Represents a GetSrvVSchemaRequest. */
    class GetSrvVSchemaRequest implements IGetSrvVSchemaRequest {

        /**
         * Constructs a new GetSrvVSchemaRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IGetSrvVSchemaRequest);

        /** GetSrvVSchemaRequest cell. */
        public cell: string;

        /**
         * Creates a new GetSrvVSchemaRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetSrvVSchemaRequest instance
         */
        public static create(properties?: vtctldata.IGetSrvVSchemaRequest): vtctldata.GetSrvVSchemaRequest;

        /**
         * Encodes the specified GetSrvVSchemaRequest message. Does not implicitly {@link vtctldata.GetSrvVSchemaRequest.verify|verify} messages.
         * @param message GetSrvVSchemaRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IGetSrvVSchemaRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetSrvVSchemaRequest message, length delimited. Does not implicitly {@link vtctldata.GetSrvVSchemaRequest.verify|verify} messages.
         * @param message GetSrvVSchemaRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IGetSrvVSchemaRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetSrvVSchemaRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetSrvVSchemaRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.GetSrvVSchemaRequest;

        /**
         * Decodes a GetSrvVSchemaRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetSrvVSchemaRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.GetSrvVSchemaRequest;

        /**
         * Verifies a GetSrvVSchemaRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetSrvVSchemaRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetSrvVSchemaRequest
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.GetSrvVSchemaRequest;

        /**
         * Creates a plain object from a GetSrvVSchemaRequest message. Also converts values to other types if specified.
         * @param message GetSrvVSchemaRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.GetSrvVSchemaRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetSrvVSchemaRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetSrvVSchemaResponse. */
    interface IGetSrvVSchemaResponse {

        /** GetSrvVSchemaResponse srv_v_schema */
        srv_v_schema?: (vschema.ISrvVSchema|null);
    }

    /** Represents a GetSrvVSchemaResponse. */
    class GetSrvVSchemaResponse implements IGetSrvVSchemaResponse {

        /**
         * Constructs a new GetSrvVSchemaResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IGetSrvVSchemaResponse);

        /** GetSrvVSchemaResponse srv_v_schema. */
        public srv_v_schema?: (vschema.ISrvVSchema|null);

        /**
         * Creates a new GetSrvVSchemaResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetSrvVSchemaResponse instance
         */
        public static create(properties?: vtctldata.IGetSrvVSchemaResponse): vtctldata.GetSrvVSchemaResponse;

        /**
         * Encodes the specified GetSrvVSchemaResponse message. Does not implicitly {@link vtctldata.GetSrvVSchemaResponse.verify|verify} messages.
         * @param message GetSrvVSchemaResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IGetSrvVSchemaResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetSrvVSchemaResponse message, length delimited. Does not implicitly {@link vtctldata.GetSrvVSchemaResponse.verify|verify} messages.
         * @param message GetSrvVSchemaResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IGetSrvVSchemaResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetSrvVSchemaResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetSrvVSchemaResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.GetSrvVSchemaResponse;

        /**
         * Decodes a GetSrvVSchemaResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetSrvVSchemaResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.GetSrvVSchemaResponse;

        /**
         * Verifies a GetSrvVSchemaResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetSrvVSchemaResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetSrvVSchemaResponse
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.GetSrvVSchemaResponse;

        /**
         * Creates a plain object from a GetSrvVSchemaResponse message. Also converts values to other types if specified.
         * @param message GetSrvVSchemaResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.GetSrvVSchemaResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetSrvVSchemaResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetTabletRequest. */
    interface IGetTabletRequest {

        /** GetTabletRequest tablet_alias */
        tablet_alias?: (topodata.ITabletAlias|null);
    }

    /** Represents a GetTabletRequest. */
    class GetTabletRequest implements IGetTabletRequest {

        /**
         * Constructs a new GetTabletRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IGetTabletRequest);

        /** GetTabletRequest tablet_alias. */
        public tablet_alias?: (topodata.ITabletAlias|null);

        /**
         * Creates a new GetTabletRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetTabletRequest instance
         */
        public static create(properties?: vtctldata.IGetTabletRequest): vtctldata.GetTabletRequest;

        /**
         * Encodes the specified GetTabletRequest message. Does not implicitly {@link vtctldata.GetTabletRequest.verify|verify} messages.
         * @param message GetTabletRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IGetTabletRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetTabletRequest message, length delimited. Does not implicitly {@link vtctldata.GetTabletRequest.verify|verify} messages.
         * @param message GetTabletRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IGetTabletRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetTabletRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetTabletRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.GetTabletRequest;

        /**
         * Decodes a GetTabletRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetTabletRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.GetTabletRequest;

        /**
         * Verifies a GetTabletRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetTabletRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetTabletRequest
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.GetTabletRequest;

        /**
         * Creates a plain object from a GetTabletRequest message. Also converts values to other types if specified.
         * @param message GetTabletRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.GetTabletRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetTabletRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetTabletResponse. */
    interface IGetTabletResponse {

        /** GetTabletResponse tablet */
        tablet?: (topodata.ITablet|null);
    }

    /** Represents a GetTabletResponse. */
    class GetTabletResponse implements IGetTabletResponse {

        /**
         * Constructs a new GetTabletResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IGetTabletResponse);

        /** GetTabletResponse tablet. */
        public tablet?: (topodata.ITablet|null);

        /**
         * Creates a new GetTabletResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetTabletResponse instance
         */
        public static create(properties?: vtctldata.IGetTabletResponse): vtctldata.GetTabletResponse;

        /**
         * Encodes the specified GetTabletResponse message. Does not implicitly {@link vtctldata.GetTabletResponse.verify|verify} messages.
         * @param message GetTabletResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IGetTabletResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetTabletResponse message, length delimited. Does not implicitly {@link vtctldata.GetTabletResponse.verify|verify} messages.
         * @param message GetTabletResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IGetTabletResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetTabletResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetTabletResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.GetTabletResponse;

        /**
         * Decodes a GetTabletResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetTabletResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.GetTabletResponse;

        /**
         * Verifies a GetTabletResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetTabletResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetTabletResponse
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.GetTabletResponse;

        /**
         * Creates a plain object from a GetTabletResponse message. Also converts values to other types if specified.
         * @param message GetTabletResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.GetTabletResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetTabletResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetTabletsRequest. */
    interface IGetTabletsRequest {

        /** GetTabletsRequest keyspace */
        keyspace?: (string|null);

        /** GetTabletsRequest shard */
        shard?: (string|null);

        /** GetTabletsRequest cells */
        cells?: (string[]|null);

        /** GetTabletsRequest strict */
        strict?: (boolean|null);

        /** GetTabletsRequest tablet_aliases */
        tablet_aliases?: (topodata.ITabletAlias[]|null);
    }

    /** Represents a GetTabletsRequest. */
    class GetTabletsRequest implements IGetTabletsRequest {

        /**
         * Constructs a new GetTabletsRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IGetTabletsRequest);

        /** GetTabletsRequest keyspace. */
        public keyspace: string;

        /** GetTabletsRequest shard. */
        public shard: string;

        /** GetTabletsRequest cells. */
        public cells: string[];

        /** GetTabletsRequest strict. */
        public strict: boolean;

        /** GetTabletsRequest tablet_aliases. */
        public tablet_aliases: topodata.ITabletAlias[];

        /**
         * Creates a new GetTabletsRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetTabletsRequest instance
         */
        public static create(properties?: vtctldata.IGetTabletsRequest): vtctldata.GetTabletsRequest;

        /**
         * Encodes the specified GetTabletsRequest message. Does not implicitly {@link vtctldata.GetTabletsRequest.verify|verify} messages.
         * @param message GetTabletsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IGetTabletsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetTabletsRequest message, length delimited. Does not implicitly {@link vtctldata.GetTabletsRequest.verify|verify} messages.
         * @param message GetTabletsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IGetTabletsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetTabletsRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetTabletsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.GetTabletsRequest;

        /**
         * Decodes a GetTabletsRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetTabletsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.GetTabletsRequest;

        /**
         * Verifies a GetTabletsRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetTabletsRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetTabletsRequest
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.GetTabletsRequest;

        /**
         * Creates a plain object from a GetTabletsRequest message. Also converts values to other types if specified.
         * @param message GetTabletsRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.GetTabletsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetTabletsRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetTabletsResponse. */
    interface IGetTabletsResponse {

        /** GetTabletsResponse tablets */
        tablets?: (topodata.ITablet[]|null);
    }

    /** Represents a GetTabletsResponse. */
    class GetTabletsResponse implements IGetTabletsResponse {

        /**
         * Constructs a new GetTabletsResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IGetTabletsResponse);

        /** GetTabletsResponse tablets. */
        public tablets: topodata.ITablet[];

        /**
         * Creates a new GetTabletsResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetTabletsResponse instance
         */
        public static create(properties?: vtctldata.IGetTabletsResponse): vtctldata.GetTabletsResponse;

        /**
         * Encodes the specified GetTabletsResponse message. Does not implicitly {@link vtctldata.GetTabletsResponse.verify|verify} messages.
         * @param message GetTabletsResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IGetTabletsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetTabletsResponse message, length delimited. Does not implicitly {@link vtctldata.GetTabletsResponse.verify|verify} messages.
         * @param message GetTabletsResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IGetTabletsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetTabletsResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetTabletsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.GetTabletsResponse;

        /**
         * Decodes a GetTabletsResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetTabletsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.GetTabletsResponse;

        /**
         * Verifies a GetTabletsResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetTabletsResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetTabletsResponse
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.GetTabletsResponse;

        /**
         * Creates a plain object from a GetTabletsResponse message. Also converts values to other types if specified.
         * @param message GetTabletsResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.GetTabletsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetTabletsResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetVSchemaRequest. */
    interface IGetVSchemaRequest {

        /** GetVSchemaRequest keyspace */
        keyspace?: (string|null);
    }

    /** Represents a GetVSchemaRequest. */
    class GetVSchemaRequest implements IGetVSchemaRequest {

        /**
         * Constructs a new GetVSchemaRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IGetVSchemaRequest);

        /** GetVSchemaRequest keyspace. */
        public keyspace: string;

        /**
         * Creates a new GetVSchemaRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetVSchemaRequest instance
         */
        public static create(properties?: vtctldata.IGetVSchemaRequest): vtctldata.GetVSchemaRequest;

        /**
         * Encodes the specified GetVSchemaRequest message. Does not implicitly {@link vtctldata.GetVSchemaRequest.verify|verify} messages.
         * @param message GetVSchemaRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IGetVSchemaRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetVSchemaRequest message, length delimited. Does not implicitly {@link vtctldata.GetVSchemaRequest.verify|verify} messages.
         * @param message GetVSchemaRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IGetVSchemaRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetVSchemaRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetVSchemaRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.GetVSchemaRequest;

        /**
         * Decodes a GetVSchemaRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetVSchemaRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.GetVSchemaRequest;

        /**
         * Verifies a GetVSchemaRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetVSchemaRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetVSchemaRequest
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.GetVSchemaRequest;

        /**
         * Creates a plain object from a GetVSchemaRequest message. Also converts values to other types if specified.
         * @param message GetVSchemaRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.GetVSchemaRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetVSchemaRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetVSchemaResponse. */
    interface IGetVSchemaResponse {

        /** GetVSchemaResponse v_schema */
        v_schema?: (vschema.IKeyspace|null);
    }

    /** Represents a GetVSchemaResponse. */
    class GetVSchemaResponse implements IGetVSchemaResponse {

        /**
         * Constructs a new GetVSchemaResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IGetVSchemaResponse);

        /** GetVSchemaResponse v_schema. */
        public v_schema?: (vschema.IKeyspace|null);

        /**
         * Creates a new GetVSchemaResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetVSchemaResponse instance
         */
        public static create(properties?: vtctldata.IGetVSchemaResponse): vtctldata.GetVSchemaResponse;

        /**
         * Encodes the specified GetVSchemaResponse message. Does not implicitly {@link vtctldata.GetVSchemaResponse.verify|verify} messages.
         * @param message GetVSchemaResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IGetVSchemaResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetVSchemaResponse message, length delimited. Does not implicitly {@link vtctldata.GetVSchemaResponse.verify|verify} messages.
         * @param message GetVSchemaResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IGetVSchemaResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetVSchemaResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetVSchemaResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.GetVSchemaResponse;

        /**
         * Decodes a GetVSchemaResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetVSchemaResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.GetVSchemaResponse;

        /**
         * Verifies a GetVSchemaResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetVSchemaResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetVSchemaResponse
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.GetVSchemaResponse;

        /**
         * Creates a plain object from a GetVSchemaResponse message. Also converts values to other types if specified.
         * @param message GetVSchemaResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.GetVSchemaResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetVSchemaResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetWorkflowsRequest. */
    interface IGetWorkflowsRequest {

        /** GetWorkflowsRequest keyspace */
        keyspace?: (string|null);

        /** GetWorkflowsRequest active_only */
        active_only?: (boolean|null);
    }

    /** Represents a GetWorkflowsRequest. */
    class GetWorkflowsRequest implements IGetWorkflowsRequest {

        /**
         * Constructs a new GetWorkflowsRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IGetWorkflowsRequest);

        /** GetWorkflowsRequest keyspace. */
        public keyspace: string;

        /** GetWorkflowsRequest active_only. */
        public active_only: boolean;

        /**
         * Creates a new GetWorkflowsRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetWorkflowsRequest instance
         */
        public static create(properties?: vtctldata.IGetWorkflowsRequest): vtctldata.GetWorkflowsRequest;

        /**
         * Encodes the specified GetWorkflowsRequest message. Does not implicitly {@link vtctldata.GetWorkflowsRequest.verify|verify} messages.
         * @param message GetWorkflowsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IGetWorkflowsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetWorkflowsRequest message, length delimited. Does not implicitly {@link vtctldata.GetWorkflowsRequest.verify|verify} messages.
         * @param message GetWorkflowsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IGetWorkflowsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetWorkflowsRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetWorkflowsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.GetWorkflowsRequest;

        /**
         * Decodes a GetWorkflowsRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetWorkflowsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.GetWorkflowsRequest;

        /**
         * Verifies a GetWorkflowsRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetWorkflowsRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetWorkflowsRequest
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.GetWorkflowsRequest;

        /**
         * Creates a plain object from a GetWorkflowsRequest message. Also converts values to other types if specified.
         * @param message GetWorkflowsRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.GetWorkflowsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetWorkflowsRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetWorkflowsResponse. */
    interface IGetWorkflowsResponse {

        /** GetWorkflowsResponse workflows */
        workflows?: (vtctldata.IWorkflow[]|null);
    }

    /** Represents a GetWorkflowsResponse. */
    class GetWorkflowsResponse implements IGetWorkflowsResponse {

        /**
         * Constructs a new GetWorkflowsResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IGetWorkflowsResponse);

        /** GetWorkflowsResponse workflows. */
        public workflows: vtctldata.IWorkflow[];

        /**
         * Creates a new GetWorkflowsResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetWorkflowsResponse instance
         */
        public static create(properties?: vtctldata.IGetWorkflowsResponse): vtctldata.GetWorkflowsResponse;

        /**
         * Encodes the specified GetWorkflowsResponse message. Does not implicitly {@link vtctldata.GetWorkflowsResponse.verify|verify} messages.
         * @param message GetWorkflowsResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IGetWorkflowsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetWorkflowsResponse message, length delimited. Does not implicitly {@link vtctldata.GetWorkflowsResponse.verify|verify} messages.
         * @param message GetWorkflowsResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IGetWorkflowsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetWorkflowsResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetWorkflowsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.GetWorkflowsResponse;

        /**
         * Decodes a GetWorkflowsResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetWorkflowsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.GetWorkflowsResponse;

        /**
         * Verifies a GetWorkflowsResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetWorkflowsResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetWorkflowsResponse
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.GetWorkflowsResponse;

        /**
         * Creates a plain object from a GetWorkflowsResponse message. Also converts values to other types if specified.
         * @param message GetWorkflowsResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.GetWorkflowsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetWorkflowsResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an InitShardPrimaryRequest. */
    interface IInitShardPrimaryRequest {

        /** InitShardPrimaryRequest keyspace */
        keyspace?: (string|null);

        /** InitShardPrimaryRequest shard */
        shard?: (string|null);

        /** InitShardPrimaryRequest primary_elect_tablet_alias */
        primary_elect_tablet_alias?: (topodata.ITabletAlias|null);

        /** InitShardPrimaryRequest force */
        force?: (boolean|null);

        /** InitShardPrimaryRequest wait_replicas_timeout */
        wait_replicas_timeout?: (vttime.IDuration|null);
    }

    /** Represents an InitShardPrimaryRequest. */
    class InitShardPrimaryRequest implements IInitShardPrimaryRequest {

        /**
         * Constructs a new InitShardPrimaryRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IInitShardPrimaryRequest);

        /** InitShardPrimaryRequest keyspace. */
        public keyspace: string;

        /** InitShardPrimaryRequest shard. */
        public shard: string;

        /** InitShardPrimaryRequest primary_elect_tablet_alias. */
        public primary_elect_tablet_alias?: (topodata.ITabletAlias|null);

        /** InitShardPrimaryRequest force. */
        public force: boolean;

        /** InitShardPrimaryRequest wait_replicas_timeout. */
        public wait_replicas_timeout?: (vttime.IDuration|null);

        /**
         * Creates a new InitShardPrimaryRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns InitShardPrimaryRequest instance
         */
        public static create(properties?: vtctldata.IInitShardPrimaryRequest): vtctldata.InitShardPrimaryRequest;

        /**
         * Encodes the specified InitShardPrimaryRequest message. Does not implicitly {@link vtctldata.InitShardPrimaryRequest.verify|verify} messages.
         * @param message InitShardPrimaryRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IInitShardPrimaryRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified InitShardPrimaryRequest message, length delimited. Does not implicitly {@link vtctldata.InitShardPrimaryRequest.verify|verify} messages.
         * @param message InitShardPrimaryRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IInitShardPrimaryRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an InitShardPrimaryRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns InitShardPrimaryRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.InitShardPrimaryRequest;

        /**
         * Decodes an InitShardPrimaryRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns InitShardPrimaryRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.InitShardPrimaryRequest;

        /**
         * Verifies an InitShardPrimaryRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an InitShardPrimaryRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns InitShardPrimaryRequest
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.InitShardPrimaryRequest;

        /**
         * Creates a plain object from an InitShardPrimaryRequest message. Also converts values to other types if specified.
         * @param message InitShardPrimaryRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.InitShardPrimaryRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this InitShardPrimaryRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an InitShardPrimaryResponse. */
    interface IInitShardPrimaryResponse {

        /** InitShardPrimaryResponse events */
        events?: (logutil.IEvent[]|null);
    }

    /** Represents an InitShardPrimaryResponse. */
    class InitShardPrimaryResponse implements IInitShardPrimaryResponse {

        /**
         * Constructs a new InitShardPrimaryResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IInitShardPrimaryResponse);

        /** InitShardPrimaryResponse events. */
        public events: logutil.IEvent[];

        /**
         * Creates a new InitShardPrimaryResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns InitShardPrimaryResponse instance
         */
        public static create(properties?: vtctldata.IInitShardPrimaryResponse): vtctldata.InitShardPrimaryResponse;

        /**
         * Encodes the specified InitShardPrimaryResponse message. Does not implicitly {@link vtctldata.InitShardPrimaryResponse.verify|verify} messages.
         * @param message InitShardPrimaryResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IInitShardPrimaryResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified InitShardPrimaryResponse message, length delimited. Does not implicitly {@link vtctldata.InitShardPrimaryResponse.verify|verify} messages.
         * @param message InitShardPrimaryResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IInitShardPrimaryResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an InitShardPrimaryResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns InitShardPrimaryResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.InitShardPrimaryResponse;

        /**
         * Decodes an InitShardPrimaryResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns InitShardPrimaryResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.InitShardPrimaryResponse;

        /**
         * Verifies an InitShardPrimaryResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an InitShardPrimaryResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns InitShardPrimaryResponse
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.InitShardPrimaryResponse;

        /**
         * Creates a plain object from an InitShardPrimaryResponse message. Also converts values to other types if specified.
         * @param message InitShardPrimaryResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.InitShardPrimaryResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this InitShardPrimaryResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PlannedReparentShardRequest. */
    interface IPlannedReparentShardRequest {

        /** PlannedReparentShardRequest keyspace */
        keyspace?: (string|null);

        /** PlannedReparentShardRequest shard */
        shard?: (string|null);

        /** PlannedReparentShardRequest new_primary */
        new_primary?: (topodata.ITabletAlias|null);

        /** PlannedReparentShardRequest avoid_primary */
        avoid_primary?: (topodata.ITabletAlias|null);

        /** PlannedReparentShardRequest wait_replicas_timeout */
        wait_replicas_timeout?: (vttime.IDuration|null);
    }

    /** Represents a PlannedReparentShardRequest. */
    class PlannedReparentShardRequest implements IPlannedReparentShardRequest {

        /**
         * Constructs a new PlannedReparentShardRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IPlannedReparentShardRequest);

        /** PlannedReparentShardRequest keyspace. */
        public keyspace: string;

        /** PlannedReparentShardRequest shard. */
        public shard: string;

        /** PlannedReparentShardRequest new_primary. */
        public new_primary?: (topodata.ITabletAlias|null);

        /** PlannedReparentShardRequest avoid_primary. */
        public avoid_primary?: (topodata.ITabletAlias|null);

        /** PlannedReparentShardRequest wait_replicas_timeout. */
        public wait_replicas_timeout?: (vttime.IDuration|null);

        /**
         * Creates a new PlannedReparentShardRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PlannedReparentShardRequest instance
         */
        public static create(properties?: vtctldata.IPlannedReparentShardRequest): vtctldata.PlannedReparentShardRequest;

        /**
         * Encodes the specified PlannedReparentShardRequest message. Does not implicitly {@link vtctldata.PlannedReparentShardRequest.verify|verify} messages.
         * @param message PlannedReparentShardRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IPlannedReparentShardRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PlannedReparentShardRequest message, length delimited. Does not implicitly {@link vtctldata.PlannedReparentShardRequest.verify|verify} messages.
         * @param message PlannedReparentShardRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IPlannedReparentShardRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PlannedReparentShardRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PlannedReparentShardRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.PlannedReparentShardRequest;

        /**
         * Decodes a PlannedReparentShardRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PlannedReparentShardRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.PlannedReparentShardRequest;

        /**
         * Verifies a PlannedReparentShardRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PlannedReparentShardRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PlannedReparentShardRequest
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.PlannedReparentShardRequest;

        /**
         * Creates a plain object from a PlannedReparentShardRequest message. Also converts values to other types if specified.
         * @param message PlannedReparentShardRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.PlannedReparentShardRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PlannedReparentShardRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PlannedReparentShardResponse. */
    interface IPlannedReparentShardResponse {

        /** PlannedReparentShardResponse keyspace */
        keyspace?: (string|null);

        /** PlannedReparentShardResponse shard */
        shard?: (string|null);

        /** PlannedReparentShardResponse promoted_primary */
        promoted_primary?: (topodata.ITabletAlias|null);

        /** PlannedReparentShardResponse events */
        events?: (logutil.IEvent[]|null);
    }

    /** Represents a PlannedReparentShardResponse. */
    class PlannedReparentShardResponse implements IPlannedReparentShardResponse {

        /**
         * Constructs a new PlannedReparentShardResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IPlannedReparentShardResponse);

        /** PlannedReparentShardResponse keyspace. */
        public keyspace: string;

        /** PlannedReparentShardResponse shard. */
        public shard: string;

        /** PlannedReparentShardResponse promoted_primary. */
        public promoted_primary?: (topodata.ITabletAlias|null);

        /** PlannedReparentShardResponse events. */
        public events: logutil.IEvent[];

        /**
         * Creates a new PlannedReparentShardResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PlannedReparentShardResponse instance
         */
        public static create(properties?: vtctldata.IPlannedReparentShardResponse): vtctldata.PlannedReparentShardResponse;

        /**
         * Encodes the specified PlannedReparentShardResponse message. Does not implicitly {@link vtctldata.PlannedReparentShardResponse.verify|verify} messages.
         * @param message PlannedReparentShardResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IPlannedReparentShardResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PlannedReparentShardResponse message, length delimited. Does not implicitly {@link vtctldata.PlannedReparentShardResponse.verify|verify} messages.
         * @param message PlannedReparentShardResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IPlannedReparentShardResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PlannedReparentShardResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PlannedReparentShardResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.PlannedReparentShardResponse;

        /**
         * Decodes a PlannedReparentShardResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PlannedReparentShardResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.PlannedReparentShardResponse;

        /**
         * Verifies a PlannedReparentShardResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PlannedReparentShardResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PlannedReparentShardResponse
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.PlannedReparentShardResponse;

        /**
         * Creates a plain object from a PlannedReparentShardResponse message. Also converts values to other types if specified.
         * @param message PlannedReparentShardResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.PlannedReparentShardResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PlannedReparentShardResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RemoveKeyspaceCellRequest. */
    interface IRemoveKeyspaceCellRequest {

        /** RemoveKeyspaceCellRequest keyspace */
        keyspace?: (string|null);

        /** RemoveKeyspaceCellRequest cell */
        cell?: (string|null);

        /** RemoveKeyspaceCellRequest force */
        force?: (boolean|null);

        /** RemoveKeyspaceCellRequest recursive */
        recursive?: (boolean|null);
    }

    /** Represents a RemoveKeyspaceCellRequest. */
    class RemoveKeyspaceCellRequest implements IRemoveKeyspaceCellRequest {

        /**
         * Constructs a new RemoveKeyspaceCellRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IRemoveKeyspaceCellRequest);

        /** RemoveKeyspaceCellRequest keyspace. */
        public keyspace: string;

        /** RemoveKeyspaceCellRequest cell. */
        public cell: string;

        /** RemoveKeyspaceCellRequest force. */
        public force: boolean;

        /** RemoveKeyspaceCellRequest recursive. */
        public recursive: boolean;

        /**
         * Creates a new RemoveKeyspaceCellRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RemoveKeyspaceCellRequest instance
         */
        public static create(properties?: vtctldata.IRemoveKeyspaceCellRequest): vtctldata.RemoveKeyspaceCellRequest;

        /**
         * Encodes the specified RemoveKeyspaceCellRequest message. Does not implicitly {@link vtctldata.RemoveKeyspaceCellRequest.verify|verify} messages.
         * @param message RemoveKeyspaceCellRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IRemoveKeyspaceCellRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RemoveKeyspaceCellRequest message, length delimited. Does not implicitly {@link vtctldata.RemoveKeyspaceCellRequest.verify|verify} messages.
         * @param message RemoveKeyspaceCellRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IRemoveKeyspaceCellRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RemoveKeyspaceCellRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RemoveKeyspaceCellRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.RemoveKeyspaceCellRequest;

        /**
         * Decodes a RemoveKeyspaceCellRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RemoveKeyspaceCellRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.RemoveKeyspaceCellRequest;

        /**
         * Verifies a RemoveKeyspaceCellRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RemoveKeyspaceCellRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RemoveKeyspaceCellRequest
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.RemoveKeyspaceCellRequest;

        /**
         * Creates a plain object from a RemoveKeyspaceCellRequest message. Also converts values to other types if specified.
         * @param message RemoveKeyspaceCellRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.RemoveKeyspaceCellRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RemoveKeyspaceCellRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RemoveKeyspaceCellResponse. */
    interface IRemoveKeyspaceCellResponse {
    }

    /** Represents a RemoveKeyspaceCellResponse. */
    class RemoveKeyspaceCellResponse implements IRemoveKeyspaceCellResponse {

        /**
         * Constructs a new RemoveKeyspaceCellResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IRemoveKeyspaceCellResponse);

        /**
         * Creates a new RemoveKeyspaceCellResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RemoveKeyspaceCellResponse instance
         */
        public static create(properties?: vtctldata.IRemoveKeyspaceCellResponse): vtctldata.RemoveKeyspaceCellResponse;

        /**
         * Encodes the specified RemoveKeyspaceCellResponse message. Does not implicitly {@link vtctldata.RemoveKeyspaceCellResponse.verify|verify} messages.
         * @param message RemoveKeyspaceCellResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IRemoveKeyspaceCellResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RemoveKeyspaceCellResponse message, length delimited. Does not implicitly {@link vtctldata.RemoveKeyspaceCellResponse.verify|verify} messages.
         * @param message RemoveKeyspaceCellResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IRemoveKeyspaceCellResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RemoveKeyspaceCellResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RemoveKeyspaceCellResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.RemoveKeyspaceCellResponse;

        /**
         * Decodes a RemoveKeyspaceCellResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RemoveKeyspaceCellResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.RemoveKeyspaceCellResponse;

        /**
         * Verifies a RemoveKeyspaceCellResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RemoveKeyspaceCellResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RemoveKeyspaceCellResponse
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.RemoveKeyspaceCellResponse;

        /**
         * Creates a plain object from a RemoveKeyspaceCellResponse message. Also converts values to other types if specified.
         * @param message RemoveKeyspaceCellResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.RemoveKeyspaceCellResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RemoveKeyspaceCellResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RemoveShardCellRequest. */
    interface IRemoveShardCellRequest {

        /** RemoveShardCellRequest keyspace */
        keyspace?: (string|null);

        /** RemoveShardCellRequest shard_name */
        shard_name?: (string|null);

        /** RemoveShardCellRequest cell */
        cell?: (string|null);

        /** RemoveShardCellRequest force */
        force?: (boolean|null);

        /** RemoveShardCellRequest recursive */
        recursive?: (boolean|null);
    }

    /** Represents a RemoveShardCellRequest. */
    class RemoveShardCellRequest implements IRemoveShardCellRequest {

        /**
         * Constructs a new RemoveShardCellRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IRemoveShardCellRequest);

        /** RemoveShardCellRequest keyspace. */
        public keyspace: string;

        /** RemoveShardCellRequest shard_name. */
        public shard_name: string;

        /** RemoveShardCellRequest cell. */
        public cell: string;

        /** RemoveShardCellRequest force. */
        public force: boolean;

        /** RemoveShardCellRequest recursive. */
        public recursive: boolean;

        /**
         * Creates a new RemoveShardCellRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RemoveShardCellRequest instance
         */
        public static create(properties?: vtctldata.IRemoveShardCellRequest): vtctldata.RemoveShardCellRequest;

        /**
         * Encodes the specified RemoveShardCellRequest message. Does not implicitly {@link vtctldata.RemoveShardCellRequest.verify|verify} messages.
         * @param message RemoveShardCellRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IRemoveShardCellRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RemoveShardCellRequest message, length delimited. Does not implicitly {@link vtctldata.RemoveShardCellRequest.verify|verify} messages.
         * @param message RemoveShardCellRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IRemoveShardCellRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RemoveShardCellRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RemoveShardCellRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.RemoveShardCellRequest;

        /**
         * Decodes a RemoveShardCellRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RemoveShardCellRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.RemoveShardCellRequest;

        /**
         * Verifies a RemoveShardCellRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RemoveShardCellRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RemoveShardCellRequest
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.RemoveShardCellRequest;

        /**
         * Creates a plain object from a RemoveShardCellRequest message. Also converts values to other types if specified.
         * @param message RemoveShardCellRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.RemoveShardCellRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RemoveShardCellRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RemoveShardCellResponse. */
    interface IRemoveShardCellResponse {
    }

    /** Represents a RemoveShardCellResponse. */
    class RemoveShardCellResponse implements IRemoveShardCellResponse {

        /**
         * Constructs a new RemoveShardCellResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IRemoveShardCellResponse);

        /**
         * Creates a new RemoveShardCellResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RemoveShardCellResponse instance
         */
        public static create(properties?: vtctldata.IRemoveShardCellResponse): vtctldata.RemoveShardCellResponse;

        /**
         * Encodes the specified RemoveShardCellResponse message. Does not implicitly {@link vtctldata.RemoveShardCellResponse.verify|verify} messages.
         * @param message RemoveShardCellResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IRemoveShardCellResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RemoveShardCellResponse message, length delimited. Does not implicitly {@link vtctldata.RemoveShardCellResponse.verify|verify} messages.
         * @param message RemoveShardCellResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IRemoveShardCellResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RemoveShardCellResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RemoveShardCellResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.RemoveShardCellResponse;

        /**
         * Decodes a RemoveShardCellResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RemoveShardCellResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.RemoveShardCellResponse;

        /**
         * Verifies a RemoveShardCellResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RemoveShardCellResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RemoveShardCellResponse
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.RemoveShardCellResponse;

        /**
         * Creates a plain object from a RemoveShardCellResponse message. Also converts values to other types if specified.
         * @param message RemoveShardCellResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.RemoveShardCellResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RemoveShardCellResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ReparentTabletRequest. */
    interface IReparentTabletRequest {

        /** ReparentTabletRequest tablet */
        tablet?: (topodata.ITabletAlias|null);
    }

    /** Represents a ReparentTabletRequest. */
    class ReparentTabletRequest implements IReparentTabletRequest {

        /**
         * Constructs a new ReparentTabletRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IReparentTabletRequest);

        /** ReparentTabletRequest tablet. */
        public tablet?: (topodata.ITabletAlias|null);

        /**
         * Creates a new ReparentTabletRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ReparentTabletRequest instance
         */
        public static create(properties?: vtctldata.IReparentTabletRequest): vtctldata.ReparentTabletRequest;

        /**
         * Encodes the specified ReparentTabletRequest message. Does not implicitly {@link vtctldata.ReparentTabletRequest.verify|verify} messages.
         * @param message ReparentTabletRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IReparentTabletRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ReparentTabletRequest message, length delimited. Does not implicitly {@link vtctldata.ReparentTabletRequest.verify|verify} messages.
         * @param message ReparentTabletRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IReparentTabletRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ReparentTabletRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ReparentTabletRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.ReparentTabletRequest;

        /**
         * Decodes a ReparentTabletRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ReparentTabletRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.ReparentTabletRequest;

        /**
         * Verifies a ReparentTabletRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ReparentTabletRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ReparentTabletRequest
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.ReparentTabletRequest;

        /**
         * Creates a plain object from a ReparentTabletRequest message. Also converts values to other types if specified.
         * @param message ReparentTabletRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.ReparentTabletRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ReparentTabletRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ReparentTabletResponse. */
    interface IReparentTabletResponse {

        /** ReparentTabletResponse keyspace */
        keyspace?: (string|null);

        /** ReparentTabletResponse shard */
        shard?: (string|null);

        /** ReparentTabletResponse primary */
        primary?: (topodata.ITabletAlias|null);
    }

    /** Represents a ReparentTabletResponse. */
    class ReparentTabletResponse implements IReparentTabletResponse {

        /**
         * Constructs a new ReparentTabletResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IReparentTabletResponse);

        /** ReparentTabletResponse keyspace. */
        public keyspace: string;

        /** ReparentTabletResponse shard. */
        public shard: string;

        /** ReparentTabletResponse primary. */
        public primary?: (topodata.ITabletAlias|null);

        /**
         * Creates a new ReparentTabletResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ReparentTabletResponse instance
         */
        public static create(properties?: vtctldata.IReparentTabletResponse): vtctldata.ReparentTabletResponse;

        /**
         * Encodes the specified ReparentTabletResponse message. Does not implicitly {@link vtctldata.ReparentTabletResponse.verify|verify} messages.
         * @param message ReparentTabletResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IReparentTabletResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ReparentTabletResponse message, length delimited. Does not implicitly {@link vtctldata.ReparentTabletResponse.verify|verify} messages.
         * @param message ReparentTabletResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IReparentTabletResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ReparentTabletResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ReparentTabletResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.ReparentTabletResponse;

        /**
         * Decodes a ReparentTabletResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ReparentTabletResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.ReparentTabletResponse;

        /**
         * Verifies a ReparentTabletResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ReparentTabletResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ReparentTabletResponse
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.ReparentTabletResponse;

        /**
         * Creates a plain object from a ReparentTabletResponse message. Also converts values to other types if specified.
         * @param message ReparentTabletResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.ReparentTabletResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ReparentTabletResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ShardReplicationPositionsRequest. */
    interface IShardReplicationPositionsRequest {

        /** ShardReplicationPositionsRequest keyspace */
        keyspace?: (string|null);

        /** ShardReplicationPositionsRequest shard */
        shard?: (string|null);
    }

    /** Represents a ShardReplicationPositionsRequest. */
    class ShardReplicationPositionsRequest implements IShardReplicationPositionsRequest {

        /**
         * Constructs a new ShardReplicationPositionsRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IShardReplicationPositionsRequest);

        /** ShardReplicationPositionsRequest keyspace. */
        public keyspace: string;

        /** ShardReplicationPositionsRequest shard. */
        public shard: string;

        /**
         * Creates a new ShardReplicationPositionsRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ShardReplicationPositionsRequest instance
         */
        public static create(properties?: vtctldata.IShardReplicationPositionsRequest): vtctldata.ShardReplicationPositionsRequest;

        /**
         * Encodes the specified ShardReplicationPositionsRequest message. Does not implicitly {@link vtctldata.ShardReplicationPositionsRequest.verify|verify} messages.
         * @param message ShardReplicationPositionsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IShardReplicationPositionsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ShardReplicationPositionsRequest message, length delimited. Does not implicitly {@link vtctldata.ShardReplicationPositionsRequest.verify|verify} messages.
         * @param message ShardReplicationPositionsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IShardReplicationPositionsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ShardReplicationPositionsRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ShardReplicationPositionsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.ShardReplicationPositionsRequest;

        /**
         * Decodes a ShardReplicationPositionsRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ShardReplicationPositionsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.ShardReplicationPositionsRequest;

        /**
         * Verifies a ShardReplicationPositionsRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ShardReplicationPositionsRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ShardReplicationPositionsRequest
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.ShardReplicationPositionsRequest;

        /**
         * Creates a plain object from a ShardReplicationPositionsRequest message. Also converts values to other types if specified.
         * @param message ShardReplicationPositionsRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.ShardReplicationPositionsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ShardReplicationPositionsRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ShardReplicationPositionsResponse. */
    interface IShardReplicationPositionsResponse {

        /** ShardReplicationPositionsResponse replication_statuses */
        replication_statuses?: ({ [k: string]: replicationdata.IStatus }|null);

        /** ShardReplicationPositionsResponse tablet_map */
        tablet_map?: ({ [k: string]: topodata.ITablet }|null);
    }

    /** Represents a ShardReplicationPositionsResponse. */
    class ShardReplicationPositionsResponse implements IShardReplicationPositionsResponse {

        /**
         * Constructs a new ShardReplicationPositionsResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.IShardReplicationPositionsResponse);

        /** ShardReplicationPositionsResponse replication_statuses. */
        public replication_statuses: { [k: string]: replicationdata.IStatus };

        /** ShardReplicationPositionsResponse tablet_map. */
        public tablet_map: { [k: string]: topodata.ITablet };

        /**
         * Creates a new ShardReplicationPositionsResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ShardReplicationPositionsResponse instance
         */
        public static create(properties?: vtctldata.IShardReplicationPositionsResponse): vtctldata.ShardReplicationPositionsResponse;

        /**
         * Encodes the specified ShardReplicationPositionsResponse message. Does not implicitly {@link vtctldata.ShardReplicationPositionsResponse.verify|verify} messages.
         * @param message ShardReplicationPositionsResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.IShardReplicationPositionsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ShardReplicationPositionsResponse message, length delimited. Does not implicitly {@link vtctldata.ShardReplicationPositionsResponse.verify|verify} messages.
         * @param message ShardReplicationPositionsResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.IShardReplicationPositionsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ShardReplicationPositionsResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ShardReplicationPositionsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.ShardReplicationPositionsResponse;

        /**
         * Decodes a ShardReplicationPositionsResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ShardReplicationPositionsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.ShardReplicationPositionsResponse;

        /**
         * Verifies a ShardReplicationPositionsResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ShardReplicationPositionsResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ShardReplicationPositionsResponse
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.ShardReplicationPositionsResponse;

        /**
         * Creates a plain object from a ShardReplicationPositionsResponse message. Also converts values to other types if specified.
         * @param message ShardReplicationPositionsResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.ShardReplicationPositionsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ShardReplicationPositionsResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TabletExternallyReparentedRequest. */
    interface ITabletExternallyReparentedRequest {

        /** TabletExternallyReparentedRequest tablet */
        tablet?: (topodata.ITabletAlias|null);
    }

    /** Represents a TabletExternallyReparentedRequest. */
    class TabletExternallyReparentedRequest implements ITabletExternallyReparentedRequest {

        /**
         * Constructs a new TabletExternallyReparentedRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.ITabletExternallyReparentedRequest);

        /** TabletExternallyReparentedRequest tablet. */
        public tablet?: (topodata.ITabletAlias|null);

        /**
         * Creates a new TabletExternallyReparentedRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TabletExternallyReparentedRequest instance
         */
        public static create(properties?: vtctldata.ITabletExternallyReparentedRequest): vtctldata.TabletExternallyReparentedRequest;

        /**
         * Encodes the specified TabletExternallyReparentedRequest message. Does not implicitly {@link vtctldata.TabletExternallyReparentedRequest.verify|verify} messages.
         * @param message TabletExternallyReparentedRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.ITabletExternallyReparentedRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TabletExternallyReparentedRequest message, length delimited. Does not implicitly {@link vtctldata.TabletExternallyReparentedRequest.verify|verify} messages.
         * @param message TabletExternallyReparentedRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.ITabletExternallyReparentedRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TabletExternallyReparentedRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TabletExternallyReparentedRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.TabletExternallyReparentedRequest;

        /**
         * Decodes a TabletExternallyReparentedRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TabletExternallyReparentedRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.TabletExternallyReparentedRequest;

        /**
         * Verifies a TabletExternallyReparentedRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TabletExternallyReparentedRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TabletExternallyReparentedRequest
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.TabletExternallyReparentedRequest;

        /**
         * Creates a plain object from a TabletExternallyReparentedRequest message. Also converts values to other types if specified.
         * @param message TabletExternallyReparentedRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.TabletExternallyReparentedRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TabletExternallyReparentedRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TabletExternallyReparentedResponse. */
    interface ITabletExternallyReparentedResponse {

        /** TabletExternallyReparentedResponse keyspace */
        keyspace?: (string|null);

        /** TabletExternallyReparentedResponse shard */
        shard?: (string|null);

        /** TabletExternallyReparentedResponse new_primary */
        new_primary?: (topodata.ITabletAlias|null);

        /** TabletExternallyReparentedResponse old_primary */
        old_primary?: (topodata.ITabletAlias|null);
    }

    /** Represents a TabletExternallyReparentedResponse. */
    class TabletExternallyReparentedResponse implements ITabletExternallyReparentedResponse {

        /**
         * Constructs a new TabletExternallyReparentedResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: vtctldata.ITabletExternallyReparentedResponse);

        /** TabletExternallyReparentedResponse keyspace. */
        public keyspace: string;

        /** TabletExternallyReparentedResponse shard. */
        public shard: string;

        /** TabletExternallyReparentedResponse new_primary. */
        public new_primary?: (topodata.ITabletAlias|null);

        /** TabletExternallyReparentedResponse old_primary. */
        public old_primary?: (topodata.ITabletAlias|null);

        /**
         * Creates a new TabletExternallyReparentedResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TabletExternallyReparentedResponse instance
         */
        public static create(properties?: vtctldata.ITabletExternallyReparentedResponse): vtctldata.TabletExternallyReparentedResponse;

        /**
         * Encodes the specified TabletExternallyReparentedResponse message. Does not implicitly {@link vtctldata.TabletExternallyReparentedResponse.verify|verify} messages.
         * @param message TabletExternallyReparentedResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: vtctldata.ITabletExternallyReparentedResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TabletExternallyReparentedResponse message, length delimited. Does not implicitly {@link vtctldata.TabletExternallyReparentedResponse.verify|verify} messages.
         * @param message TabletExternallyReparentedResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: vtctldata.ITabletExternallyReparentedResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TabletExternallyReparentedResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TabletExternallyReparentedResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): vtctldata.TabletExternallyReparentedResponse;

        /**
         * Decodes a TabletExternallyReparentedResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TabletExternallyReparentedResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): vtctldata.TabletExternallyReparentedResponse;

        /**
         * Verifies a TabletExternallyReparentedResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TabletExternallyReparentedResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TabletExternallyReparentedResponse
         */
        public static fromObject(object: { [k: string]: any }): vtctldata.TabletExternallyReparentedResponse;

        /**
         * Creates a plain object from a TabletExternallyReparentedResponse message. Also converts values to other types if specified.
         * @param message TabletExternallyReparentedResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: vtctldata.TabletExternallyReparentedResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TabletExternallyReparentedResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace binlogdata. */
export namespace binlogdata {

    /** Properties of a Charset. */
    interface ICharset {

        /** Charset client */
        client?: (number|null);

        /** Charset conn */
        conn?: (number|null);

        /** Charset server */
        server?: (number|null);
    }

    /** Represents a Charset. */
    class Charset implements ICharset {

        /**
         * Constructs a new Charset.
         * @param [properties] Properties to set
         */
        constructor(properties?: binlogdata.ICharset);

        /** Charset client. */
        public client: number;

        /** Charset conn. */
        public conn: number;

        /** Charset server. */
        public server: number;

        /**
         * Creates a new Charset instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Charset instance
         */
        public static create(properties?: binlogdata.ICharset): binlogdata.Charset;

        /**
         * Encodes the specified Charset message. Does not implicitly {@link binlogdata.Charset.verify|verify} messages.
         * @param message Charset message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: binlogdata.ICharset, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Charset message, length delimited. Does not implicitly {@link binlogdata.Charset.verify|verify} messages.
         * @param message Charset message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: binlogdata.ICharset, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Charset message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Charset
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): binlogdata.Charset;

        /**
         * Decodes a Charset message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Charset
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): binlogdata.Charset;

        /**
         * Verifies a Charset message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Charset message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Charset
         */
        public static fromObject(object: { [k: string]: any }): binlogdata.Charset;

        /**
         * Creates a plain object from a Charset message. Also converts values to other types if specified.
         * @param message Charset
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: binlogdata.Charset, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Charset to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BinlogTransaction. */
    interface IBinlogTransaction {

        /** BinlogTransaction statements */
        statements?: (binlogdata.BinlogTransaction.IStatement[]|null);

        /** BinlogTransaction event_token */
        event_token?: (query.IEventToken|null);
    }

    /** Represents a BinlogTransaction. */
    class BinlogTransaction implements IBinlogTransaction {

        /**
         * Constructs a new BinlogTransaction.
         * @param [properties] Properties to set
         */
        constructor(properties?: binlogdata.IBinlogTransaction);

        /** BinlogTransaction statements. */
        public statements: binlogdata.BinlogTransaction.IStatement[];

        /** BinlogTransaction event_token. */
        public event_token?: (query.IEventToken|null);

        /**
         * Creates a new BinlogTransaction instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BinlogTransaction instance
         */
        public static create(properties?: binlogdata.IBinlogTransaction): binlogdata.BinlogTransaction;

        /**
         * Encodes the specified BinlogTransaction message. Does not implicitly {@link binlogdata.BinlogTransaction.verify|verify} messages.
         * @param message BinlogTransaction message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: binlogdata.IBinlogTransaction, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BinlogTransaction message, length delimited. Does not implicitly {@link binlogdata.BinlogTransaction.verify|verify} messages.
         * @param message BinlogTransaction message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: binlogdata.IBinlogTransaction, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BinlogTransaction message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BinlogTransaction
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): binlogdata.BinlogTransaction;

        /**
         * Decodes a BinlogTransaction message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BinlogTransaction
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): binlogdata.BinlogTransaction;

        /**
         * Verifies a BinlogTransaction message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BinlogTransaction message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BinlogTransaction
         */
        public static fromObject(object: { [k: string]: any }): binlogdata.BinlogTransaction;

        /**
         * Creates a plain object from a BinlogTransaction message. Also converts values to other types if specified.
         * @param message BinlogTransaction
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: binlogdata.BinlogTransaction, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BinlogTransaction to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace BinlogTransaction {

        /** Properties of a Statement. */
        interface IStatement {

            /** Statement category */
            category?: (binlogdata.BinlogTransaction.Statement.Category|null);

            /** Statement charset */
            charset?: (binlogdata.ICharset|null);

            /** Statement sql */
            sql?: (Uint8Array|null);
        }

        /** Represents a Statement. */
        class Statement implements IStatement {

            /**
             * Constructs a new Statement.
             * @param [properties] Properties to set
             */
            constructor(properties?: binlogdata.BinlogTransaction.IStatement);

            /** Statement category. */
            public category: binlogdata.BinlogTransaction.Statement.Category;

            /** Statement charset. */
            public charset?: (binlogdata.ICharset|null);

            /** Statement sql. */
            public sql: Uint8Array;

            /**
             * Creates a new Statement instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Statement instance
             */
            public static create(properties?: binlogdata.BinlogTransaction.IStatement): binlogdata.BinlogTransaction.Statement;

            /**
             * Encodes the specified Statement message. Does not implicitly {@link binlogdata.BinlogTransaction.Statement.verify|verify} messages.
             * @param message Statement message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: binlogdata.BinlogTransaction.IStatement, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Statement message, length delimited. Does not implicitly {@link binlogdata.BinlogTransaction.Statement.verify|verify} messages.
             * @param message Statement message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: binlogdata.BinlogTransaction.IStatement, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Statement message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Statement
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): binlogdata.BinlogTransaction.Statement;

            /**
             * Decodes a Statement message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Statement
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): binlogdata.BinlogTransaction.Statement;

            /**
             * Verifies a Statement message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Statement message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Statement
             */
            public static fromObject(object: { [k: string]: any }): binlogdata.BinlogTransaction.Statement;

            /**
             * Creates a plain object from a Statement message. Also converts values to other types if specified.
             * @param message Statement
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: binlogdata.BinlogTransaction.Statement, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Statement to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace Statement {

            /** Category enum. */
            enum Category {
                BL_UNRECOGNIZED = 0,
                BL_BEGIN = 1,
                BL_COMMIT = 2,
                BL_ROLLBACK = 3,
                BL_DML_DEPRECATED = 4,
                BL_DDL = 5,
                BL_SET = 6,
                BL_INSERT = 7,
                BL_UPDATE = 8,
                BL_DELETE = 9
            }
        }
    }

    /** Properties of a StreamKeyRangeRequest. */
    interface IStreamKeyRangeRequest {

        /** StreamKeyRangeRequest position */
        position?: (string|null);

        /** StreamKeyRangeRequest key_range */
        key_range?: (topodata.IKeyRange|null);

        /** StreamKeyRangeRequest charset */
        charset?: (binlogdata.ICharset|null);
    }

    /** Represents a StreamKeyRangeRequest. */
    class StreamKeyRangeRequest implements IStreamKeyRangeRequest {

        /**
         * Constructs a new StreamKeyRangeRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: binlogdata.IStreamKeyRangeRequest);

        /** StreamKeyRangeRequest position. */
        public position: string;

        /** StreamKeyRangeRequest key_range. */
        public key_range?: (topodata.IKeyRange|null);

        /** StreamKeyRangeRequest charset. */
        public charset?: (binlogdata.ICharset|null);

        /**
         * Creates a new StreamKeyRangeRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns StreamKeyRangeRequest instance
         */
        public static create(properties?: binlogdata.IStreamKeyRangeRequest): binlogdata.StreamKeyRangeRequest;

        /**
         * Encodes the specified StreamKeyRangeRequest message. Does not implicitly {@link binlogdata.StreamKeyRangeRequest.verify|verify} messages.
         * @param message StreamKeyRangeRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: binlogdata.IStreamKeyRangeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified StreamKeyRangeRequest message, length delimited. Does not implicitly {@link binlogdata.StreamKeyRangeRequest.verify|verify} messages.
         * @param message StreamKeyRangeRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: binlogdata.IStreamKeyRangeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a StreamKeyRangeRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns StreamKeyRangeRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): binlogdata.StreamKeyRangeRequest;

        /**
         * Decodes a StreamKeyRangeRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns StreamKeyRangeRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): binlogdata.StreamKeyRangeRequest;

        /**
         * Verifies a StreamKeyRangeRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a StreamKeyRangeRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns StreamKeyRangeRequest
         */
        public static fromObject(object: { [k: string]: any }): binlogdata.StreamKeyRangeRequest;

        /**
         * Creates a plain object from a StreamKeyRangeRequest message. Also converts values to other types if specified.
         * @param message StreamKeyRangeRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: binlogdata.StreamKeyRangeRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this StreamKeyRangeRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a StreamKeyRangeResponse. */
    interface IStreamKeyRangeResponse {

        /** StreamKeyRangeResponse binlog_transaction */
        binlog_transaction?: (binlogdata.IBinlogTransaction|null);
    }

    /** Represents a StreamKeyRangeResponse. */
    class StreamKeyRangeResponse implements IStreamKeyRangeResponse {

        /**
         * Constructs a new StreamKeyRangeResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: binlogdata.IStreamKeyRangeResponse);

        /** StreamKeyRangeResponse binlog_transaction. */
        public binlog_transaction?: (binlogdata.IBinlogTransaction|null);

        /**
         * Creates a new StreamKeyRangeResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns StreamKeyRangeResponse instance
         */
        public static create(properties?: binlogdata.IStreamKeyRangeResponse): binlogdata.StreamKeyRangeResponse;

        /**
         * Encodes the specified StreamKeyRangeResponse message. Does not implicitly {@link binlogdata.StreamKeyRangeResponse.verify|verify} messages.
         * @param message StreamKeyRangeResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: binlogdata.IStreamKeyRangeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified StreamKeyRangeResponse message, length delimited. Does not implicitly {@link binlogdata.StreamKeyRangeResponse.verify|verify} messages.
         * @param message StreamKeyRangeResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: binlogdata.IStreamKeyRangeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a StreamKeyRangeResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns StreamKeyRangeResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): binlogdata.StreamKeyRangeResponse;

        /**
         * Decodes a StreamKeyRangeResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns StreamKeyRangeResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): binlogdata.StreamKeyRangeResponse;

        /**
         * Verifies a StreamKeyRangeResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a StreamKeyRangeResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns StreamKeyRangeResponse
         */
        public static fromObject(object: { [k: string]: any }): binlogdata.StreamKeyRangeResponse;

        /**
         * Creates a plain object from a StreamKeyRangeResponse message. Also converts values to other types if specified.
         * @param message StreamKeyRangeResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: binlogdata.StreamKeyRangeResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this StreamKeyRangeResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a StreamTablesRequest. */
    interface IStreamTablesRequest {

        /** StreamTablesRequest position */
        position?: (string|null);

        /** StreamTablesRequest tables */
        tables?: (string[]|null);

        /** StreamTablesRequest charset */
        charset?: (binlogdata.ICharset|null);
    }

    /** Represents a StreamTablesRequest. */
    class StreamTablesRequest implements IStreamTablesRequest {

        /**
         * Constructs a new StreamTablesRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: binlogdata.IStreamTablesRequest);

        /** StreamTablesRequest position. */
        public position: string;

        /** StreamTablesRequest tables. */
        public tables: string[];

        /** StreamTablesRequest charset. */
        public charset?: (binlogdata.ICharset|null);

        /**
         * Creates a new StreamTablesRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns StreamTablesRequest instance
         */
        public static create(properties?: binlogdata.IStreamTablesRequest): binlogdata.StreamTablesRequest;

        /**
         * Encodes the specified StreamTablesRequest message. Does not implicitly {@link binlogdata.StreamTablesRequest.verify|verify} messages.
         * @param message StreamTablesRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: binlogdata.IStreamTablesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified StreamTablesRequest message, length delimited. Does not implicitly {@link binlogdata.StreamTablesRequest.verify|verify} messages.
         * @param message StreamTablesRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: binlogdata.IStreamTablesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a StreamTablesRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns StreamTablesRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): binlogdata.StreamTablesRequest;

        /**
         * Decodes a StreamTablesRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns StreamTablesRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): binlogdata.StreamTablesRequest;

        /**
         * Verifies a StreamTablesRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a StreamTablesRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns StreamTablesRequest
         */
        public static fromObject(object: { [k: string]: any }): binlogdata.StreamTablesRequest;

        /**
         * Creates a plain object from a StreamTablesRequest message. Also converts values to other types if specified.
         * @param message StreamTablesRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: binlogdata.StreamTablesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this StreamTablesRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a StreamTablesResponse. */
    interface IStreamTablesResponse {

        /** StreamTablesResponse binlog_transaction */
        binlog_transaction?: (binlogdata.IBinlogTransaction|null);
    }

    /** Represents a StreamTablesResponse. */
    class StreamTablesResponse implements IStreamTablesResponse {

        /**
         * Constructs a new StreamTablesResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: binlogdata.IStreamTablesResponse);

        /** StreamTablesResponse binlog_transaction. */
        public binlog_transaction?: (binlogdata.IBinlogTransaction|null);

        /**
         * Creates a new StreamTablesResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns StreamTablesResponse instance
         */
        public static create(properties?: binlogdata.IStreamTablesResponse): binlogdata.StreamTablesResponse;

        /**
         * Encodes the specified StreamTablesResponse message. Does not implicitly {@link binlogdata.StreamTablesResponse.verify|verify} messages.
         * @param message StreamTablesResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: binlogdata.IStreamTablesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified StreamTablesResponse message, length delimited. Does not implicitly {@link binlogdata.StreamTablesResponse.verify|verify} messages.
         * @param message StreamTablesResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: binlogdata.IStreamTablesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a StreamTablesResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns StreamTablesResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): binlogdata.StreamTablesResponse;

        /**
         * Decodes a StreamTablesResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns StreamTablesResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): binlogdata.StreamTablesResponse;

        /**
         * Verifies a StreamTablesResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a StreamTablesResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns StreamTablesResponse
         */
        public static fromObject(object: { [k: string]: any }): binlogdata.StreamTablesResponse;

        /**
         * Creates a plain object from a StreamTablesResponse message. Also converts values to other types if specified.
         * @param message StreamTablesResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: binlogdata.StreamTablesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this StreamTablesResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Rule. */
    interface IRule {

        /** Rule match */
        match?: (string|null);

        /** Rule filter */
        filter?: (string|null);
    }

    /** Represents a Rule. */
    class Rule implements IRule {

        /**
         * Constructs a new Rule.
         * @param [properties] Properties to set
         */
        constructor(properties?: binlogdata.IRule);

        /** Rule match. */
        public match: string;

        /** Rule filter. */
        public filter: string;

        /**
         * Creates a new Rule instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Rule instance
         */
        public static create(properties?: binlogdata.IRule): binlogdata.Rule;

        /**
         * Encodes the specified Rule message. Does not implicitly {@link binlogdata.Rule.verify|verify} messages.
         * @param message Rule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: binlogdata.IRule, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Rule message, length delimited. Does not implicitly {@link binlogdata.Rule.verify|verify} messages.
         * @param message Rule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: binlogdata.IRule, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Rule message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Rule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): binlogdata.Rule;

        /**
         * Decodes a Rule message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Rule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): binlogdata.Rule;

        /**
         * Verifies a Rule message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Rule message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Rule
         */
        public static fromObject(object: { [k: string]: any }): binlogdata.Rule;

        /**
         * Creates a plain object from a Rule message. Also converts values to other types if specified.
         * @param message Rule
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: binlogdata.Rule, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Rule to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Filter. */
    interface IFilter {

        /** Filter rules */
        rules?: (binlogdata.IRule[]|null);

        /** Filter fieldEventMode */
        fieldEventMode?: (binlogdata.Filter.FieldEventMode|null);
    }

    /** Represents a Filter. */
    class Filter implements IFilter {

        /**
         * Constructs a new Filter.
         * @param [properties] Properties to set
         */
        constructor(properties?: binlogdata.IFilter);

        /** Filter rules. */
        public rules: binlogdata.IRule[];

        /** Filter fieldEventMode. */
        public fieldEventMode: binlogdata.Filter.FieldEventMode;

        /**
         * Creates a new Filter instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Filter instance
         */
        public static create(properties?: binlogdata.IFilter): binlogdata.Filter;

        /**
         * Encodes the specified Filter message. Does not implicitly {@link binlogdata.Filter.verify|verify} messages.
         * @param message Filter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: binlogdata.IFilter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Filter message, length delimited. Does not implicitly {@link binlogdata.Filter.verify|verify} messages.
         * @param message Filter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: binlogdata.IFilter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Filter message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Filter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): binlogdata.Filter;

        /**
         * Decodes a Filter message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Filter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): binlogdata.Filter;

        /**
         * Verifies a Filter message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Filter message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Filter
         */
        public static fromObject(object: { [k: string]: any }): binlogdata.Filter;

        /**
         * Creates a plain object from a Filter message. Also converts values to other types if specified.
         * @param message Filter
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: binlogdata.Filter, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Filter to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace Filter {

        /** FieldEventMode enum. */
        enum FieldEventMode {
            ERR_ON_MISMATCH = 0,
            BEST_EFFORT = 1
        }
    }

    /** OnDDLAction enum. */
    enum OnDDLAction {
        IGNORE = 0,
        STOP = 1,
        EXEC = 2,
        EXEC_IGNORE = 3
    }

    /** Properties of a BinlogSource. */
    interface IBinlogSource {

        /** BinlogSource keyspace */
        keyspace?: (string|null);

        /** BinlogSource shard */
        shard?: (string|null);

        /** BinlogSource tablet_type */
        tablet_type?: (topodata.TabletType|null);

        /** BinlogSource key_range */
        key_range?: (topodata.IKeyRange|null);

        /** BinlogSource tables */
        tables?: (string[]|null);

        /** BinlogSource filter */
        filter?: (binlogdata.IFilter|null);

        /** BinlogSource on_ddl */
        on_ddl?: (binlogdata.OnDDLAction|null);

        /** BinlogSource external_mysql */
        external_mysql?: (string|null);

        /** BinlogSource stop_after_copy */
        stop_after_copy?: (boolean|null);

        /** BinlogSource external_cluster */
        external_cluster?: (string|null);
    }

    /** Represents a BinlogSource. */
    class BinlogSource implements IBinlogSource {

        /**
         * Constructs a new BinlogSource.
         * @param [properties] Properties to set
         */
        constructor(properties?: binlogdata.IBinlogSource);

        /** BinlogSource keyspace. */
        public keyspace: string;

        /** BinlogSource shard. */
        public shard: string;

        /** BinlogSource tablet_type. */
        public tablet_type: topodata.TabletType;

        /** BinlogSource key_range. */
        public key_range?: (topodata.IKeyRange|null);

        /** BinlogSource tables. */
        public tables: string[];

        /** BinlogSource filter. */
        public filter?: (binlogdata.IFilter|null);

        /** BinlogSource on_ddl. */
        public on_ddl: binlogdata.OnDDLAction;

        /** BinlogSource external_mysql. */
        public external_mysql: string;

        /** BinlogSource stop_after_copy. */
        public stop_after_copy: boolean;

        /** BinlogSource external_cluster. */
        public external_cluster: string;

        /**
         * Creates a new BinlogSource instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BinlogSource instance
         */
        public static create(properties?: binlogdata.IBinlogSource): binlogdata.BinlogSource;

        /**
         * Encodes the specified BinlogSource message. Does not implicitly {@link binlogdata.BinlogSource.verify|verify} messages.
         * @param message BinlogSource message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: binlogdata.IBinlogSource, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BinlogSource message, length delimited. Does not implicitly {@link binlogdata.BinlogSource.verify|verify} messages.
         * @param message BinlogSource message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: binlogdata.IBinlogSource, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BinlogSource message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BinlogSource
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): binlogdata.BinlogSource;

        /**
         * Decodes a BinlogSource message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BinlogSource
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): binlogdata.BinlogSource;

        /**
         * Verifies a BinlogSource message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BinlogSource message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BinlogSource
         */
        public static fromObject(object: { [k: string]: any }): binlogdata.BinlogSource;

        /**
         * Creates a plain object from a BinlogSource message. Also converts values to other types if specified.
         * @param message BinlogSource
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: binlogdata.BinlogSource, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BinlogSource to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** VEventType enum. */
    enum VEventType {
        UNKNOWN = 0,
        GTID = 1,
        BEGIN = 2,
        COMMIT = 3,
        ROLLBACK = 4,
        DDL = 5,
        INSERT = 6,
        REPLACE = 7,
        UPDATE = 8,
        DELETE = 9,
        SET = 10,
        OTHER = 11,
        ROW = 12,
        FIELD = 13,
        HEARTBEAT = 14,
        VGTID = 15,
        JOURNAL = 16,
        VERSION = 17,
        LASTPK = 18,
        SAVEPOINT = 19
    }

    /** Properties of a RowChange. */
    interface IRowChange {

        /** RowChange before */
        before?: (query.IRow|null);

        /** RowChange after */
        after?: (query.IRow|null);
    }

    /** Represents a RowChange. */
    class RowChange implements IRowChange {

        /**
         * Constructs a new RowChange.
         * @param [properties] Properties to set
         */
        constructor(properties?: binlogdata.IRowChange);

        /** RowChange before. */
        public before?: (query.IRow|null);

        /** RowChange after. */
        public after?: (query.IRow|null);

        /**
         * Creates a new RowChange instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RowChange instance
         */
        public static create(properties?: binlogdata.IRowChange): binlogdata.RowChange;

        /**
         * Encodes the specified RowChange message. Does not implicitly {@link binlogdata.RowChange.verify|verify} messages.
         * @param message RowChange message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: binlogdata.IRowChange, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RowChange message, length delimited. Does not implicitly {@link binlogdata.RowChange.verify|verify} messages.
         * @param message RowChange message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: binlogdata.IRowChange, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RowChange message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RowChange
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): binlogdata.RowChange;

        /**
         * Decodes a RowChange message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RowChange
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): binlogdata.RowChange;

        /**
         * Verifies a RowChange message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RowChange message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RowChange
         */
        public static fromObject(object: { [k: string]: any }): binlogdata.RowChange;

        /**
         * Creates a plain object from a RowChange message. Also converts values to other types if specified.
         * @param message RowChange
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: binlogdata.RowChange, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RowChange to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RowEvent. */
    interface IRowEvent {

        /** RowEvent table_name */
        table_name?: (string|null);

        /** RowEvent row_changes */
        row_changes?: (binlogdata.IRowChange[]|null);
    }

    /** Represents a RowEvent. */
    class RowEvent implements IRowEvent {

        /**
         * Constructs a new RowEvent.
         * @param [properties] Properties to set
         */
        constructor(properties?: binlogdata.IRowEvent);

        /** RowEvent table_name. */
        public table_name: string;

        /** RowEvent row_changes. */
        public row_changes: binlogdata.IRowChange[];

        /**
         * Creates a new RowEvent instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RowEvent instance
         */
        public static create(properties?: binlogdata.IRowEvent): binlogdata.RowEvent;

        /**
         * Encodes the specified RowEvent message. Does not implicitly {@link binlogdata.RowEvent.verify|verify} messages.
         * @param message RowEvent message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: binlogdata.IRowEvent, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RowEvent message, length delimited. Does not implicitly {@link binlogdata.RowEvent.verify|verify} messages.
         * @param message RowEvent message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: binlogdata.IRowEvent, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RowEvent message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RowEvent
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): binlogdata.RowEvent;

        /**
         * Decodes a RowEvent message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RowEvent
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): binlogdata.RowEvent;

        /**
         * Verifies a RowEvent message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RowEvent message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RowEvent
         */
        public static fromObject(object: { [k: string]: any }): binlogdata.RowEvent;

        /**
         * Creates a plain object from a RowEvent message. Also converts values to other types if specified.
         * @param message RowEvent
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: binlogdata.RowEvent, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RowEvent to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FieldEvent. */
    interface IFieldEvent {

        /** FieldEvent table_name */
        table_name?: (string|null);

        /** FieldEvent fields */
        fields?: (query.IField[]|null);
    }

    /** Represents a FieldEvent. */
    class FieldEvent implements IFieldEvent {

        /**
         * Constructs a new FieldEvent.
         * @param [properties] Properties to set
         */
        constructor(properties?: binlogdata.IFieldEvent);

        /** FieldEvent table_name. */
        public table_name: string;

        /** FieldEvent fields. */
        public fields: query.IField[];

        /**
         * Creates a new FieldEvent instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FieldEvent instance
         */
        public static create(properties?: binlogdata.IFieldEvent): binlogdata.FieldEvent;

        /**
         * Encodes the specified FieldEvent message. Does not implicitly {@link binlogdata.FieldEvent.verify|verify} messages.
         * @param message FieldEvent message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: binlogdata.IFieldEvent, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FieldEvent message, length delimited. Does not implicitly {@link binlogdata.FieldEvent.verify|verify} messages.
         * @param message FieldEvent message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: binlogdata.IFieldEvent, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FieldEvent message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FieldEvent
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): binlogdata.FieldEvent;

        /**
         * Decodes a FieldEvent message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FieldEvent
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): binlogdata.FieldEvent;

        /**
         * Verifies a FieldEvent message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FieldEvent message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FieldEvent
         */
        public static fromObject(object: { [k: string]: any }): binlogdata.FieldEvent;

        /**
         * Creates a plain object from a FieldEvent message. Also converts values to other types if specified.
         * @param message FieldEvent
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: binlogdata.FieldEvent, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FieldEvent to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ShardGtid. */
    interface IShardGtid {

        /** ShardGtid keyspace */
        keyspace?: (string|null);

        /** ShardGtid shard */
        shard?: (string|null);

        /** ShardGtid gtid */
        gtid?: (string|null);

        /** ShardGtid table_p_ks */
        table_p_ks?: (binlogdata.ITableLastPK[]|null);
    }

    /** Represents a ShardGtid. */
    class ShardGtid implements IShardGtid {

        /**
         * Constructs a new ShardGtid.
         * @param [properties] Properties to set
         */
        constructor(properties?: binlogdata.IShardGtid);

        /** ShardGtid keyspace. */
        public keyspace: string;

        /** ShardGtid shard. */
        public shard: string;

        /** ShardGtid gtid. */
        public gtid: string;

        /** ShardGtid table_p_ks. */
        public table_p_ks: binlogdata.ITableLastPK[];

        /**
         * Creates a new ShardGtid instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ShardGtid instance
         */
        public static create(properties?: binlogdata.IShardGtid): binlogdata.ShardGtid;

        /**
         * Encodes the specified ShardGtid message. Does not implicitly {@link binlogdata.ShardGtid.verify|verify} messages.
         * @param message ShardGtid message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: binlogdata.IShardGtid, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ShardGtid message, length delimited. Does not implicitly {@link binlogdata.ShardGtid.verify|verify} messages.
         * @param message ShardGtid message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: binlogdata.IShardGtid, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ShardGtid message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ShardGtid
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): binlogdata.ShardGtid;

        /**
         * Decodes a ShardGtid message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ShardGtid
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): binlogdata.ShardGtid;

        /**
         * Verifies a ShardGtid message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ShardGtid message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ShardGtid
         */
        public static fromObject(object: { [k: string]: any }): binlogdata.ShardGtid;

        /**
         * Creates a plain object from a ShardGtid message. Also converts values to other types if specified.
         * @param message ShardGtid
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: binlogdata.ShardGtid, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ShardGtid to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a VGtid. */
    interface IVGtid {

        /** VGtid shard_gtids */
        shard_gtids?: (binlogdata.IShardGtid[]|null);
    }

    /** Represents a VGtid. */
    class VGtid implements IVGtid {

        /**
         * Constructs a new VGtid.
         * @param [properties] Properties to set
         */
        constructor(properties?: binlogdata.IVGtid);

        /** VGtid shard_gtids. */
        public shard_gtids: binlogdata.IShardGtid[];

        /**
         * Creates a new VGtid instance using the specified properties.
         * @param [properties] Properties to set
         * @returns VGtid instance
         */
        public static create(properties?: binlogdata.IVGtid): binlogdata.VGtid;

        /**
         * Encodes the specified VGtid message. Does not implicitly {@link binlogdata.VGtid.verify|verify} messages.
         * @param message VGtid message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: binlogdata.IVGtid, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified VGtid message, length delimited. Does not implicitly {@link binlogdata.VGtid.verify|verify} messages.
         * @param message VGtid message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: binlogdata.IVGtid, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a VGtid message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns VGtid
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): binlogdata.VGtid;

        /**
         * Decodes a VGtid message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns VGtid
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): binlogdata.VGtid;

        /**
         * Verifies a VGtid message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a VGtid message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns VGtid
         */
        public static fromObject(object: { [k: string]: any }): binlogdata.VGtid;

        /**
         * Creates a plain object from a VGtid message. Also converts values to other types if specified.
         * @param message VGtid
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: binlogdata.VGtid, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this VGtid to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a KeyspaceShard. */
    interface IKeyspaceShard {

        /** KeyspaceShard keyspace */
        keyspace?: (string|null);

        /** KeyspaceShard shard */
        shard?: (string|null);
    }

    /** Represents a KeyspaceShard. */
    class KeyspaceShard implements IKeyspaceShard {

        /**
         * Constructs a new KeyspaceShard.
         * @param [properties] Properties to set
         */
        constructor(properties?: binlogdata.IKeyspaceShard);

        /** KeyspaceShard keyspace. */
        public keyspace: string;

        /** KeyspaceShard shard. */
        public shard: string;

        /**
         * Creates a new KeyspaceShard instance using the specified properties.
         * @param [properties] Properties to set
         * @returns KeyspaceShard instance
         */
        public static create(properties?: binlogdata.IKeyspaceShard): binlogdata.KeyspaceShard;

        /**
         * Encodes the specified KeyspaceShard message. Does not implicitly {@link binlogdata.KeyspaceShard.verify|verify} messages.
         * @param message KeyspaceShard message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: binlogdata.IKeyspaceShard, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified KeyspaceShard message, length delimited. Does not implicitly {@link binlogdata.KeyspaceShard.verify|verify} messages.
         * @param message KeyspaceShard message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: binlogdata.IKeyspaceShard, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a KeyspaceShard message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns KeyspaceShard
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): binlogdata.KeyspaceShard;

        /**
         * Decodes a KeyspaceShard message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns KeyspaceShard
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): binlogdata.KeyspaceShard;

        /**
         * Verifies a KeyspaceShard message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a KeyspaceShard message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns KeyspaceShard
         */
        public static fromObject(object: { [k: string]: any }): binlogdata.KeyspaceShard;

        /**
         * Creates a plain object from a KeyspaceShard message. Also converts values to other types if specified.
         * @param message KeyspaceShard
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: binlogdata.KeyspaceShard, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this KeyspaceShard to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** MigrationType enum. */
    enum MigrationType {
        TABLES = 0,
        SHARDS = 1
    }

    /** Properties of a Journal. */
    interface IJournal {

        /** Journal id */
        id?: (number|Long|null);

        /** Journal migration_type */
        migration_type?: (binlogdata.MigrationType|null);

        /** Journal tables */
        tables?: (string[]|null);

        /** Journal local_position */
        local_position?: (string|null);

        /** Journal shard_gtids */
        shard_gtids?: (binlogdata.IShardGtid[]|null);

        /** Journal participants */
        participants?: (binlogdata.IKeyspaceShard[]|null);

        /** Journal source_workflows */
        source_workflows?: (string[]|null);
    }

    /** Represents a Journal. */
    class Journal implements IJournal {

        /**
         * Constructs a new Journal.
         * @param [properties] Properties to set
         */
        constructor(properties?: binlogdata.IJournal);

        /** Journal id. */
        public id: (number|Long);

        /** Journal migration_type. */
        public migration_type: binlogdata.MigrationType;

        /** Journal tables. */
        public tables: string[];

        /** Journal local_position. */
        public local_position: string;

        /** Journal shard_gtids. */
        public shard_gtids: binlogdata.IShardGtid[];

        /** Journal participants. */
        public participants: binlogdata.IKeyspaceShard[];

        /** Journal source_workflows. */
        public source_workflows: string[];

        /**
         * Creates a new Journal instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Journal instance
         */
        public static create(properties?: binlogdata.IJournal): binlogdata.Journal;

        /**
         * Encodes the specified Journal message. Does not implicitly {@link binlogdata.Journal.verify|verify} messages.
         * @param message Journal message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: binlogdata.IJournal, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Journal message, length delimited. Does not implicitly {@link binlogdata.Journal.verify|verify} messages.
         * @param message Journal message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: binlogdata.IJournal, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Journal message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Journal
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): binlogdata.Journal;

        /**
         * Decodes a Journal message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Journal
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): binlogdata.Journal;

        /**
         * Verifies a Journal message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Journal message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Journal
         */
        public static fromObject(object: { [k: string]: any }): binlogdata.Journal;

        /**
         * Creates a plain object from a Journal message. Also converts values to other types if specified.
         * @param message Journal
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: binlogdata.Journal, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Journal to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a VEvent. */
    interface IVEvent {

        /** VEvent type */
        type?: (binlogdata.VEventType|null);

        /** VEvent timestamp */
        timestamp?: (number|Long|null);

        /** VEvent gtid */
        gtid?: (string|null);

        /** VEvent statement */
        statement?: (string|null);

        /** VEvent row_event */
        row_event?: (binlogdata.IRowEvent|null);

        /** VEvent field_event */
        field_event?: (binlogdata.IFieldEvent|null);

        /** VEvent vgtid */
        vgtid?: (binlogdata.IVGtid|null);

        /** VEvent journal */
        journal?: (binlogdata.IJournal|null);

        /** VEvent dml */
        dml?: (string|null);

        /** VEvent current_time */
        current_time?: (number|Long|null);

        /** VEvent last_p_k_event */
        last_p_k_event?: (binlogdata.ILastPKEvent|null);
    }

    /** Represents a VEvent. */
    class VEvent implements IVEvent {

        /**
         * Constructs a new VEvent.
         * @param [properties] Properties to set
         */
        constructor(properties?: binlogdata.IVEvent);

        /** VEvent type. */
        public type: binlogdata.VEventType;

        /** VEvent timestamp. */
        public timestamp: (number|Long);

        /** VEvent gtid. */
        public gtid: string;

        /** VEvent statement. */
        public statement: string;

        /** VEvent row_event. */
        public row_event?: (binlogdata.IRowEvent|null);

        /** VEvent field_event. */
        public field_event?: (binlogdata.IFieldEvent|null);

        /** VEvent vgtid. */
        public vgtid?: (binlogdata.IVGtid|null);

        /** VEvent journal. */
        public journal?: (binlogdata.IJournal|null);

        /** VEvent dml. */
        public dml: string;

        /** VEvent current_time. */
        public current_time: (number|Long);

        /** VEvent last_p_k_event. */
        public last_p_k_event?: (binlogdata.ILastPKEvent|null);

        /**
         * Creates a new VEvent instance using the specified properties.
         * @param [properties] Properties to set
         * @returns VEvent instance
         */
        public static create(properties?: binlogdata.IVEvent): binlogdata.VEvent;

        /**
         * Encodes the specified VEvent message. Does not implicitly {@link binlogdata.VEvent.verify|verify} messages.
         * @param message VEvent message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: binlogdata.IVEvent, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified VEvent message, length delimited. Does not implicitly {@link binlogdata.VEvent.verify|verify} messages.
         * @param message VEvent message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: binlogdata.IVEvent, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a VEvent message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns VEvent
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): binlogdata.VEvent;

        /**
         * Decodes a VEvent message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns VEvent
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): binlogdata.VEvent;

        /**
         * Verifies a VEvent message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a VEvent message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns VEvent
         */
        public static fromObject(object: { [k: string]: any }): binlogdata.VEvent;

        /**
         * Creates a plain object from a VEvent message. Also converts values to other types if specified.
         * @param message VEvent
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: binlogdata.VEvent, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this VEvent to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MinimalTable. */
    interface IMinimalTable {

        /** MinimalTable name */
        name?: (string|null);

        /** MinimalTable fields */
        fields?: (query.IField[]|null);

        /** MinimalTable p_k_columns */
        p_k_columns?: ((number|Long)[]|null);
    }

    /** Represents a MinimalTable. */
    class MinimalTable implements IMinimalTable {

        /**
         * Constructs a new MinimalTable.
         * @param [properties] Properties to set
         */
        constructor(properties?: binlogdata.IMinimalTable);

        /** MinimalTable name. */
        public name: string;

        /** MinimalTable fields. */
        public fields: query.IField[];

        /** MinimalTable p_k_columns. */
        public p_k_columns: (number|Long)[];

        /**
         * Creates a new MinimalTable instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MinimalTable instance
         */
        public static create(properties?: binlogdata.IMinimalTable): binlogdata.MinimalTable;

        /**
         * Encodes the specified MinimalTable message. Does not implicitly {@link binlogdata.MinimalTable.verify|verify} messages.
         * @param message MinimalTable message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: binlogdata.IMinimalTable, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MinimalTable message, length delimited. Does not implicitly {@link binlogdata.MinimalTable.verify|verify} messages.
         * @param message MinimalTable message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: binlogdata.IMinimalTable, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MinimalTable message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MinimalTable
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): binlogdata.MinimalTable;

        /**
         * Decodes a MinimalTable message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MinimalTable
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): binlogdata.MinimalTable;

        /**
         * Verifies a MinimalTable message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MinimalTable message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MinimalTable
         */
        public static fromObject(object: { [k: string]: any }): binlogdata.MinimalTable;

        /**
         * Creates a plain object from a MinimalTable message. Also converts values to other types if specified.
         * @param message MinimalTable
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: binlogdata.MinimalTable, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MinimalTable to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MinimalSchema. */
    interface IMinimalSchema {

        /** MinimalSchema tables */
        tables?: (binlogdata.IMinimalTable[]|null);
    }

    /** Represents a MinimalSchema. */
    class MinimalSchema implements IMinimalSchema {

        /**
         * Constructs a new MinimalSchema.
         * @param [properties] Properties to set
         */
        constructor(properties?: binlogdata.IMinimalSchema);

        /** MinimalSchema tables. */
        public tables: binlogdata.IMinimalTable[];

        /**
         * Creates a new MinimalSchema instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MinimalSchema instance
         */
        public static create(properties?: binlogdata.IMinimalSchema): binlogdata.MinimalSchema;

        /**
         * Encodes the specified MinimalSchema message. Does not implicitly {@link binlogdata.MinimalSchema.verify|verify} messages.
         * @param message MinimalSchema message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: binlogdata.IMinimalSchema, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MinimalSchema message, length delimited. Does not implicitly {@link binlogdata.MinimalSchema.verify|verify} messages.
         * @param message MinimalSchema message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: binlogdata.IMinimalSchema, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MinimalSchema message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MinimalSchema
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): binlogdata.MinimalSchema;

        /**
         * Decodes a MinimalSchema message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MinimalSchema
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): binlogdata.MinimalSchema;

        /**
         * Verifies a MinimalSchema message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MinimalSchema message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MinimalSchema
         */
        public static fromObject(object: { [k: string]: any }): binlogdata.MinimalSchema;

        /**
         * Creates a plain object from a MinimalSchema message. Also converts values to other types if specified.
         * @param message MinimalSchema
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: binlogdata.MinimalSchema, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MinimalSchema to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a VStreamRequest. */
    interface IVStreamRequest {

        /** VStreamRequest effective_caller_id */
        effective_caller_id?: (vtrpc.ICallerID|null);

        /** VStreamRequest immediate_caller_id */
        immediate_caller_id?: (query.IVTGateCallerID|null);

        /** VStreamRequest target */
        target?: (query.ITarget|null);

        /** VStreamRequest position */
        position?: (string|null);

        /** VStreamRequest filter */
        filter?: (binlogdata.IFilter|null);

        /** VStreamRequest table_last_p_ks */
        table_last_p_ks?: (binlogdata.ITableLastPK[]|null);
    }

    /** Represents a VStreamRequest. */
    class VStreamRequest implements IVStreamRequest {

        /**
         * Constructs a new VStreamRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: binlogdata.IVStreamRequest);

        /** VStreamRequest effective_caller_id. */
        public effective_caller_id?: (vtrpc.ICallerID|null);

        /** VStreamRequest immediate_caller_id. */
        public immediate_caller_id?: (query.IVTGateCallerID|null);

        /** VStreamRequest target. */
        public target?: (query.ITarget|null);

        /** VStreamRequest position. */
        public position: string;

        /** VStreamRequest filter. */
        public filter?: (binlogdata.IFilter|null);

        /** VStreamRequest table_last_p_ks. */
        public table_last_p_ks: binlogdata.ITableLastPK[];

        /**
         * Creates a new VStreamRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns VStreamRequest instance
         */
        public static create(properties?: binlogdata.IVStreamRequest): binlogdata.VStreamRequest;

        /**
         * Encodes the specified VStreamRequest message. Does not implicitly {@link binlogdata.VStreamRequest.verify|verify} messages.
         * @param message VStreamRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: binlogdata.IVStreamRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified VStreamRequest message, length delimited. Does not implicitly {@link binlogdata.VStreamRequest.verify|verify} messages.
         * @param message VStreamRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: binlogdata.IVStreamRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a VStreamRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns VStreamRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): binlogdata.VStreamRequest;

        /**
         * Decodes a VStreamRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns VStreamRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): binlogdata.VStreamRequest;

        /**
         * Verifies a VStreamRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a VStreamRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns VStreamRequest
         */
        public static fromObject(object: { [k: string]: any }): binlogdata.VStreamRequest;

        /**
         * Creates a plain object from a VStreamRequest message. Also converts values to other types if specified.
         * @param message VStreamRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: binlogdata.VStreamRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this VStreamRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a VStreamResponse. */
    interface IVStreamResponse {

        /** VStreamResponse events */
        events?: (binlogdata.IVEvent[]|null);
    }

    /** Represents a VStreamResponse. */
    class VStreamResponse implements IVStreamResponse {

        /**
         * Constructs a new VStreamResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: binlogdata.IVStreamResponse);

        /** VStreamResponse events. */
        public events: binlogdata.IVEvent[];

        /**
         * Creates a new VStreamResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns VStreamResponse instance
         */
        public static create(properties?: binlogdata.IVStreamResponse): binlogdata.VStreamResponse;

        /**
         * Encodes the specified VStreamResponse message. Does not implicitly {@link binlogdata.VStreamResponse.verify|verify} messages.
         * @param message VStreamResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: binlogdata.IVStreamResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified VStreamResponse message, length delimited. Does not implicitly {@link binlogdata.VStreamResponse.verify|verify} messages.
         * @param message VStreamResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: binlogdata.IVStreamResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a VStreamResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns VStreamResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): binlogdata.VStreamResponse;

        /**
         * Decodes a VStreamResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns VStreamResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): binlogdata.VStreamResponse;

        /**
         * Verifies a VStreamResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a VStreamResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns VStreamResponse
         */
        public static fromObject(object: { [k: string]: any }): binlogdata.VStreamResponse;

        /**
         * Creates a plain object from a VStreamResponse message. Also converts values to other types if specified.
         * @param message VStreamResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: binlogdata.VStreamResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this VStreamResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a VStreamRowsRequest. */
    interface IVStreamRowsRequest {

        /** VStreamRowsRequest effective_caller_id */
        effective_caller_id?: (vtrpc.ICallerID|null);

        /** VStreamRowsRequest immediate_caller_id */
        immediate_caller_id?: (query.IVTGateCallerID|null);

        /** VStreamRowsRequest target */
        target?: (query.ITarget|null);

        /** VStreamRowsRequest query */
        query?: (string|null);

        /** VStreamRowsRequest lastpk */
        lastpk?: (query.IQueryResult|null);
    }

    /** Represents a VStreamRowsRequest. */
    class VStreamRowsRequest implements IVStreamRowsRequest {

        /**
         * Constructs a new VStreamRowsRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: binlogdata.IVStreamRowsRequest);

        /** VStreamRowsRequest effective_caller_id. */
        public effective_caller_id?: (vtrpc.ICallerID|null);

        /** VStreamRowsRequest immediate_caller_id. */
        public immediate_caller_id?: (query.IVTGateCallerID|null);

        /** VStreamRowsRequest target. */
        public target?: (query.ITarget|null);

        /** VStreamRowsRequest query. */
        public query: string;

        /** VStreamRowsRequest lastpk. */
        public lastpk?: (query.IQueryResult|null);

        /**
         * Creates a new VStreamRowsRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns VStreamRowsRequest instance
         */
        public static create(properties?: binlogdata.IVStreamRowsRequest): binlogdata.VStreamRowsRequest;

        /**
         * Encodes the specified VStreamRowsRequest message. Does not implicitly {@link binlogdata.VStreamRowsRequest.verify|verify} messages.
         * @param message VStreamRowsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: binlogdata.IVStreamRowsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified VStreamRowsRequest message, length delimited. Does not implicitly {@link binlogdata.VStreamRowsRequest.verify|verify} messages.
         * @param message VStreamRowsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: binlogdata.IVStreamRowsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a VStreamRowsRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns VStreamRowsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): binlogdata.VStreamRowsRequest;

        /**
         * Decodes a VStreamRowsRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns VStreamRowsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): binlogdata.VStreamRowsRequest;

        /**
         * Verifies a VStreamRowsRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a VStreamRowsRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns VStreamRowsRequest
         */
        public static fromObject(object: { [k: string]: any }): binlogdata.VStreamRowsRequest;

        /**
         * Creates a plain object from a VStreamRowsRequest message. Also converts values to other types if specified.
         * @param message VStreamRowsRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: binlogdata.VStreamRowsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this VStreamRowsRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a VStreamRowsResponse. */
    interface IVStreamRowsResponse {

        /** VStreamRowsResponse fields */
        fields?: (query.IField[]|null);

        /** VStreamRowsResponse pkfields */
        pkfields?: (query.IField[]|null);

        /** VStreamRowsResponse gtid */
        gtid?: (string|null);

        /** VStreamRowsResponse rows */
        rows?: (query.IRow[]|null);

        /** VStreamRowsResponse lastpk */
        lastpk?: (query.IRow|null);
    }

    /** Represents a VStreamRowsResponse. */
    class VStreamRowsResponse implements IVStreamRowsResponse {

        /**
         * Constructs a new VStreamRowsResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: binlogdata.IVStreamRowsResponse);

        /** VStreamRowsResponse fields. */
        public fields: query.IField[];

        /** VStreamRowsResponse pkfields. */
        public pkfields: query.IField[];

        /** VStreamRowsResponse gtid. */
        public gtid: string;

        /** VStreamRowsResponse rows. */
        public rows: query.IRow[];

        /** VStreamRowsResponse lastpk. */
        public lastpk?: (query.IRow|null);

        /**
         * Creates a new VStreamRowsResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns VStreamRowsResponse instance
         */
        public static create(properties?: binlogdata.IVStreamRowsResponse): binlogdata.VStreamRowsResponse;

        /**
         * Encodes the specified VStreamRowsResponse message. Does not implicitly {@link binlogdata.VStreamRowsResponse.verify|verify} messages.
         * @param message VStreamRowsResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: binlogdata.IVStreamRowsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified VStreamRowsResponse message, length delimited. Does not implicitly {@link binlogdata.VStreamRowsResponse.verify|verify} messages.
         * @param message VStreamRowsResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: binlogdata.IVStreamRowsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a VStreamRowsResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns VStreamRowsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): binlogdata.VStreamRowsResponse;

        /**
         * Decodes a VStreamRowsResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns VStreamRowsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): binlogdata.VStreamRowsResponse;

        /**
         * Verifies a VStreamRowsResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a VStreamRowsResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns VStreamRowsResponse
         */
        public static fromObject(object: { [k: string]: any }): binlogdata.VStreamRowsResponse;

        /**
         * Creates a plain object from a VStreamRowsResponse message. Also converts values to other types if specified.
         * @param message VStreamRowsResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: binlogdata.VStreamRowsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this VStreamRowsResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a LastPKEvent. */
    interface ILastPKEvent {

        /** LastPKEvent table_last_p_k */
        table_last_p_k?: (binlogdata.ITableLastPK|null);

        /** LastPKEvent completed */
        completed?: (boolean|null);
    }

    /** Represents a LastPKEvent. */
    class LastPKEvent implements ILastPKEvent {

        /**
         * Constructs a new LastPKEvent.
         * @param [properties] Properties to set
         */
        constructor(properties?: binlogdata.ILastPKEvent);

        /** LastPKEvent table_last_p_k. */
        public table_last_p_k?: (binlogdata.ITableLastPK|null);

        /** LastPKEvent completed. */
        public completed: boolean;

        /**
         * Creates a new LastPKEvent instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LastPKEvent instance
         */
        public static create(properties?: binlogdata.ILastPKEvent): binlogdata.LastPKEvent;

        /**
         * Encodes the specified LastPKEvent message. Does not implicitly {@link binlogdata.LastPKEvent.verify|verify} messages.
         * @param message LastPKEvent message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: binlogdata.ILastPKEvent, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified LastPKEvent message, length delimited. Does not implicitly {@link binlogdata.LastPKEvent.verify|verify} messages.
         * @param message LastPKEvent message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: binlogdata.ILastPKEvent, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a LastPKEvent message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LastPKEvent
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): binlogdata.LastPKEvent;

        /**
         * Decodes a LastPKEvent message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LastPKEvent
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): binlogdata.LastPKEvent;

        /**
         * Verifies a LastPKEvent message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LastPKEvent message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LastPKEvent
         */
        public static fromObject(object: { [k: string]: any }): binlogdata.LastPKEvent;

        /**
         * Creates a plain object from a LastPKEvent message. Also converts values to other types if specified.
         * @param message LastPKEvent
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: binlogdata.LastPKEvent, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LastPKEvent to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TableLastPK. */
    interface ITableLastPK {

        /** TableLastPK table_name */
        table_name?: (string|null);

        /** TableLastPK lastpk */
        lastpk?: (query.IQueryResult|null);
    }

    /** Represents a TableLastPK. */
    class TableLastPK implements ITableLastPK {

        /**
         * Constructs a new TableLastPK.
         * @param [properties] Properties to set
         */
        constructor(properties?: binlogdata.ITableLastPK);

        /** TableLastPK table_name. */
        public table_name: string;

        /** TableLastPK lastpk. */
        public lastpk?: (query.IQueryResult|null);

        /**
         * Creates a new TableLastPK instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TableLastPK instance
         */
        public static create(properties?: binlogdata.ITableLastPK): binlogdata.TableLastPK;

        /**
         * Encodes the specified TableLastPK message. Does not implicitly {@link binlogdata.TableLastPK.verify|verify} messages.
         * @param message TableLastPK message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: binlogdata.ITableLastPK, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TableLastPK message, length delimited. Does not implicitly {@link binlogdata.TableLastPK.verify|verify} messages.
         * @param message TableLastPK message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: binlogdata.ITableLastPK, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TableLastPK message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TableLastPK
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): binlogdata.TableLastPK;

        /**
         * Decodes a TableLastPK message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TableLastPK
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): binlogdata.TableLastPK;

        /**
         * Verifies a TableLastPK message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TableLastPK message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TableLastPK
         */
        public static fromObject(object: { [k: string]: any }): binlogdata.TableLastPK;

        /**
         * Creates a plain object from a TableLastPK message. Also converts values to other types if specified.
         * @param message TableLastPK
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: binlogdata.TableLastPK, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TableLastPK to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a VStreamResultsRequest. */
    interface IVStreamResultsRequest {

        /** VStreamResultsRequest effective_caller_id */
        effective_caller_id?: (vtrpc.ICallerID|null);

        /** VStreamResultsRequest immediate_caller_id */
        immediate_caller_id?: (query.IVTGateCallerID|null);

        /** VStreamResultsRequest target */
        target?: (query.ITarget|null);

        /** VStreamResultsRequest query */
        query?: (string|null);
    }

    /** Represents a VStreamResultsRequest. */
    class VStreamResultsRequest implements IVStreamResultsRequest {

        /**
         * Constructs a new VStreamResultsRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: binlogdata.IVStreamResultsRequest);

        /** VStreamResultsRequest effective_caller_id. */
        public effective_caller_id?: (vtrpc.ICallerID|null);

        /** VStreamResultsRequest immediate_caller_id. */
        public immediate_caller_id?: (query.IVTGateCallerID|null);

        /** VStreamResultsRequest target. */
        public target?: (query.ITarget|null);

        /** VStreamResultsRequest query. */
        public query: string;

        /**
         * Creates a new VStreamResultsRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns VStreamResultsRequest instance
         */
        public static create(properties?: binlogdata.IVStreamResultsRequest): binlogdata.VStreamResultsRequest;

        /**
         * Encodes the specified VStreamResultsRequest message. Does not implicitly {@link binlogdata.VStreamResultsRequest.verify|verify} messages.
         * @param message VStreamResultsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: binlogdata.IVStreamResultsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified VStreamResultsRequest message, length delimited. Does not implicitly {@link binlogdata.VStreamResultsRequest.verify|verify} messages.
         * @param message VStreamResultsRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: binlogdata.IVStreamResultsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a VStreamResultsRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns VStreamResultsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): binlogdata.VStreamResultsRequest;

        /**
         * Decodes a VStreamResultsRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns VStreamResultsRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): binlogdata.VStreamResultsRequest;

        /**
         * Verifies a VStreamResultsRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a VStreamResultsRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns VStreamResultsRequest
         */
        public static fromObject(object: { [k: string]: any }): binlogdata.VStreamResultsRequest;

        /**
         * Creates a plain object from a VStreamResultsRequest message. Also converts values to other types if specified.
         * @param message VStreamResultsRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: binlogdata.VStreamResultsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this VStreamResultsRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a VStreamResultsResponse. */
    interface IVStreamResultsResponse {

        /** VStreamResultsResponse fields */
        fields?: (query.IField[]|null);

        /** VStreamResultsResponse gtid */
        gtid?: (string|null);

        /** VStreamResultsResponse rows */
        rows?: (query.IRow[]|null);
    }

    /** Represents a VStreamResultsResponse. */
    class VStreamResultsResponse implements IVStreamResultsResponse {

        /**
         * Constructs a new VStreamResultsResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: binlogdata.IVStreamResultsResponse);

        /** VStreamResultsResponse fields. */
        public fields: query.IField[];

        /** VStreamResultsResponse gtid. */
        public gtid: string;

        /** VStreamResultsResponse rows. */
        public rows: query.IRow[];

        /**
         * Creates a new VStreamResultsResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns VStreamResultsResponse instance
         */
        public static create(properties?: binlogdata.IVStreamResultsResponse): binlogdata.VStreamResultsResponse;

        /**
         * Encodes the specified VStreamResultsResponse message. Does not implicitly {@link binlogdata.VStreamResultsResponse.verify|verify} messages.
         * @param message VStreamResultsResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: binlogdata.IVStreamResultsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified VStreamResultsResponse message, length delimited. Does not implicitly {@link binlogdata.VStreamResultsResponse.verify|verify} messages.
         * @param message VStreamResultsResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: binlogdata.IVStreamResultsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a VStreamResultsResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns VStreamResultsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): binlogdata.VStreamResultsResponse;

        /**
         * Decodes a VStreamResultsResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns VStreamResultsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): binlogdata.VStreamResultsResponse;

        /**
         * Verifies a VStreamResultsResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a VStreamResultsResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns VStreamResultsResponse
         */
        public static fromObject(object: { [k: string]: any }): binlogdata.VStreamResultsResponse;

        /**
         * Creates a plain object from a VStreamResultsResponse message. Also converts values to other types if specified.
         * @param message VStreamResultsResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: binlogdata.VStreamResultsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this VStreamResultsResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace mysqlctl. */
export namespace mysqlctl {

    /** Properties of a StartRequest. */
    interface IStartRequest {

        /** StartRequest mysqld_args */
        mysqld_args?: (string[]|null);
    }

    /** Represents a StartRequest. */
    class StartRequest implements IStartRequest {

        /**
         * Constructs a new StartRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: mysqlctl.IStartRequest);

        /** StartRequest mysqld_args. */
        public mysqld_args: string[];

        /**
         * Creates a new StartRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns StartRequest instance
         */
        public static create(properties?: mysqlctl.IStartRequest): mysqlctl.StartRequest;

        /**
         * Encodes the specified StartRequest message. Does not implicitly {@link mysqlctl.StartRequest.verify|verify} messages.
         * @param message StartRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: mysqlctl.IStartRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified StartRequest message, length delimited. Does not implicitly {@link mysqlctl.StartRequest.verify|verify} messages.
         * @param message StartRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: mysqlctl.IStartRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a StartRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns StartRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mysqlctl.StartRequest;

        /**
         * Decodes a StartRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns StartRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mysqlctl.StartRequest;

        /**
         * Verifies a StartRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a StartRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns StartRequest
         */
        public static fromObject(object: { [k: string]: any }): mysqlctl.StartRequest;

        /**
         * Creates a plain object from a StartRequest message. Also converts values to other types if specified.
         * @param message StartRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: mysqlctl.StartRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this StartRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a StartResponse. */
    interface IStartResponse {
    }

    /** Represents a StartResponse. */
    class StartResponse implements IStartResponse {

        /**
         * Constructs a new StartResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: mysqlctl.IStartResponse);

        /**
         * Creates a new StartResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns StartResponse instance
         */
        public static create(properties?: mysqlctl.IStartResponse): mysqlctl.StartResponse;

        /**
         * Encodes the specified StartResponse message. Does not implicitly {@link mysqlctl.StartResponse.verify|verify} messages.
         * @param message StartResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: mysqlctl.IStartResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified StartResponse message, length delimited. Does not implicitly {@link mysqlctl.StartResponse.verify|verify} messages.
         * @param message StartResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: mysqlctl.IStartResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a StartResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns StartResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mysqlctl.StartResponse;

        /**
         * Decodes a StartResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns StartResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mysqlctl.StartResponse;

        /**
         * Verifies a StartResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a StartResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns StartResponse
         */
        public static fromObject(object: { [k: string]: any }): mysqlctl.StartResponse;

        /**
         * Creates a plain object from a StartResponse message. Also converts values to other types if specified.
         * @param message StartResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: mysqlctl.StartResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this StartResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ShutdownRequest. */
    interface IShutdownRequest {

        /** ShutdownRequest wait_for_mysqld */
        wait_for_mysqld?: (boolean|null);
    }

    /** Represents a ShutdownRequest. */
    class ShutdownRequest implements IShutdownRequest {

        /**
         * Constructs a new ShutdownRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: mysqlctl.IShutdownRequest);

        /** ShutdownRequest wait_for_mysqld. */
        public wait_for_mysqld: boolean;

        /**
         * Creates a new ShutdownRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ShutdownRequest instance
         */
        public static create(properties?: mysqlctl.IShutdownRequest): mysqlctl.ShutdownRequest;

        /**
         * Encodes the specified ShutdownRequest message. Does not implicitly {@link mysqlctl.ShutdownRequest.verify|verify} messages.
         * @param message ShutdownRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: mysqlctl.IShutdownRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ShutdownRequest message, length delimited. Does not implicitly {@link mysqlctl.ShutdownRequest.verify|verify} messages.
         * @param message ShutdownRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: mysqlctl.IShutdownRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ShutdownRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ShutdownRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mysqlctl.ShutdownRequest;

        /**
         * Decodes a ShutdownRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ShutdownRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mysqlctl.ShutdownRequest;

        /**
         * Verifies a ShutdownRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ShutdownRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ShutdownRequest
         */
        public static fromObject(object: { [k: string]: any }): mysqlctl.ShutdownRequest;

        /**
         * Creates a plain object from a ShutdownRequest message. Also converts values to other types if specified.
         * @param message ShutdownRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: mysqlctl.ShutdownRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ShutdownRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ShutdownResponse. */
    interface IShutdownResponse {
    }

    /** Represents a ShutdownResponse. */
    class ShutdownResponse implements IShutdownResponse {

        /**
         * Constructs a new ShutdownResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: mysqlctl.IShutdownResponse);

        /**
         * Creates a new ShutdownResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ShutdownResponse instance
         */
        public static create(properties?: mysqlctl.IShutdownResponse): mysqlctl.ShutdownResponse;

        /**
         * Encodes the specified ShutdownResponse message. Does not implicitly {@link mysqlctl.ShutdownResponse.verify|verify} messages.
         * @param message ShutdownResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: mysqlctl.IShutdownResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ShutdownResponse message, length delimited. Does not implicitly {@link mysqlctl.ShutdownResponse.verify|verify} messages.
         * @param message ShutdownResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: mysqlctl.IShutdownResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ShutdownResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ShutdownResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mysqlctl.ShutdownResponse;

        /**
         * Decodes a ShutdownResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ShutdownResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mysqlctl.ShutdownResponse;

        /**
         * Verifies a ShutdownResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ShutdownResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ShutdownResponse
         */
        public static fromObject(object: { [k: string]: any }): mysqlctl.ShutdownResponse;

        /**
         * Creates a plain object from a ShutdownResponse message. Also converts values to other types if specified.
         * @param message ShutdownResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: mysqlctl.ShutdownResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ShutdownResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RunMysqlUpgradeRequest. */
    interface IRunMysqlUpgradeRequest {
    }

    /** Represents a RunMysqlUpgradeRequest. */
    class RunMysqlUpgradeRequest implements IRunMysqlUpgradeRequest {

        /**
         * Constructs a new RunMysqlUpgradeRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: mysqlctl.IRunMysqlUpgradeRequest);

        /**
         * Creates a new RunMysqlUpgradeRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RunMysqlUpgradeRequest instance
         */
        public static create(properties?: mysqlctl.IRunMysqlUpgradeRequest): mysqlctl.RunMysqlUpgradeRequest;

        /**
         * Encodes the specified RunMysqlUpgradeRequest message. Does not implicitly {@link mysqlctl.RunMysqlUpgradeRequest.verify|verify} messages.
         * @param message RunMysqlUpgradeRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: mysqlctl.IRunMysqlUpgradeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RunMysqlUpgradeRequest message, length delimited. Does not implicitly {@link mysqlctl.RunMysqlUpgradeRequest.verify|verify} messages.
         * @param message RunMysqlUpgradeRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: mysqlctl.IRunMysqlUpgradeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RunMysqlUpgradeRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RunMysqlUpgradeRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mysqlctl.RunMysqlUpgradeRequest;

        /**
         * Decodes a RunMysqlUpgradeRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RunMysqlUpgradeRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mysqlctl.RunMysqlUpgradeRequest;

        /**
         * Verifies a RunMysqlUpgradeRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RunMysqlUpgradeRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RunMysqlUpgradeRequest
         */
        public static fromObject(object: { [k: string]: any }): mysqlctl.RunMysqlUpgradeRequest;

        /**
         * Creates a plain object from a RunMysqlUpgradeRequest message. Also converts values to other types if specified.
         * @param message RunMysqlUpgradeRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: mysqlctl.RunMysqlUpgradeRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RunMysqlUpgradeRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RunMysqlUpgradeResponse. */
    interface IRunMysqlUpgradeResponse {
    }

    /** Represents a RunMysqlUpgradeResponse. */
    class RunMysqlUpgradeResponse implements IRunMysqlUpgradeResponse {

        /**
         * Constructs a new RunMysqlUpgradeResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: mysqlctl.IRunMysqlUpgradeResponse);

        /**
         * Creates a new RunMysqlUpgradeResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RunMysqlUpgradeResponse instance
         */
        public static create(properties?: mysqlctl.IRunMysqlUpgradeResponse): mysqlctl.RunMysqlUpgradeResponse;

        /**
         * Encodes the specified RunMysqlUpgradeResponse message. Does not implicitly {@link mysqlctl.RunMysqlUpgradeResponse.verify|verify} messages.
         * @param message RunMysqlUpgradeResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: mysqlctl.IRunMysqlUpgradeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RunMysqlUpgradeResponse message, length delimited. Does not implicitly {@link mysqlctl.RunMysqlUpgradeResponse.verify|verify} messages.
         * @param message RunMysqlUpgradeResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: mysqlctl.IRunMysqlUpgradeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RunMysqlUpgradeResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RunMysqlUpgradeResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mysqlctl.RunMysqlUpgradeResponse;

        /**
         * Decodes a RunMysqlUpgradeResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RunMysqlUpgradeResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mysqlctl.RunMysqlUpgradeResponse;

        /**
         * Verifies a RunMysqlUpgradeResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RunMysqlUpgradeResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RunMysqlUpgradeResponse
         */
        public static fromObject(object: { [k: string]: any }): mysqlctl.RunMysqlUpgradeResponse;

        /**
         * Creates a plain object from a RunMysqlUpgradeResponse message. Also converts values to other types if specified.
         * @param message RunMysqlUpgradeResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: mysqlctl.RunMysqlUpgradeResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RunMysqlUpgradeResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ReinitConfigRequest. */
    interface IReinitConfigRequest {
    }

    /** Represents a ReinitConfigRequest. */
    class ReinitConfigRequest implements IReinitConfigRequest {

        /**
         * Constructs a new ReinitConfigRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: mysqlctl.IReinitConfigRequest);

        /**
         * Creates a new ReinitConfigRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ReinitConfigRequest instance
         */
        public static create(properties?: mysqlctl.IReinitConfigRequest): mysqlctl.ReinitConfigRequest;

        /**
         * Encodes the specified ReinitConfigRequest message. Does not implicitly {@link mysqlctl.ReinitConfigRequest.verify|verify} messages.
         * @param message ReinitConfigRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: mysqlctl.IReinitConfigRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ReinitConfigRequest message, length delimited. Does not implicitly {@link mysqlctl.ReinitConfigRequest.verify|verify} messages.
         * @param message ReinitConfigRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: mysqlctl.IReinitConfigRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ReinitConfigRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ReinitConfigRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mysqlctl.ReinitConfigRequest;

        /**
         * Decodes a ReinitConfigRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ReinitConfigRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mysqlctl.ReinitConfigRequest;

        /**
         * Verifies a ReinitConfigRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ReinitConfigRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ReinitConfigRequest
         */
        public static fromObject(object: { [k: string]: any }): mysqlctl.ReinitConfigRequest;

        /**
         * Creates a plain object from a ReinitConfigRequest message. Also converts values to other types if specified.
         * @param message ReinitConfigRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: mysqlctl.ReinitConfigRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ReinitConfigRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ReinitConfigResponse. */
    interface IReinitConfigResponse {
    }

    /** Represents a ReinitConfigResponse. */
    class ReinitConfigResponse implements IReinitConfigResponse {

        /**
         * Constructs a new ReinitConfigResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: mysqlctl.IReinitConfigResponse);

        /**
         * Creates a new ReinitConfigResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ReinitConfigResponse instance
         */
        public static create(properties?: mysqlctl.IReinitConfigResponse): mysqlctl.ReinitConfigResponse;

        /**
         * Encodes the specified ReinitConfigResponse message. Does not implicitly {@link mysqlctl.ReinitConfigResponse.verify|verify} messages.
         * @param message ReinitConfigResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: mysqlctl.IReinitConfigResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ReinitConfigResponse message, length delimited. Does not implicitly {@link mysqlctl.ReinitConfigResponse.verify|verify} messages.
         * @param message ReinitConfigResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: mysqlctl.IReinitConfigResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ReinitConfigResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ReinitConfigResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mysqlctl.ReinitConfigResponse;

        /**
         * Decodes a ReinitConfigResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ReinitConfigResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mysqlctl.ReinitConfigResponse;

        /**
         * Verifies a ReinitConfigResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ReinitConfigResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ReinitConfigResponse
         */
        public static fromObject(object: { [k: string]: any }): mysqlctl.ReinitConfigResponse;

        /**
         * Creates a plain object from a ReinitConfigResponse message. Also converts values to other types if specified.
         * @param message ReinitConfigResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: mysqlctl.ReinitConfigResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ReinitConfigResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RefreshConfigRequest. */
    interface IRefreshConfigRequest {
    }

    /** Represents a RefreshConfigRequest. */
    class RefreshConfigRequest implements IRefreshConfigRequest {

        /**
         * Constructs a new RefreshConfigRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: mysqlctl.IRefreshConfigRequest);

        /**
         * Creates a new RefreshConfigRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RefreshConfigRequest instance
         */
        public static create(properties?: mysqlctl.IRefreshConfigRequest): mysqlctl.RefreshConfigRequest;

        /**
         * Encodes the specified RefreshConfigRequest message. Does not implicitly {@link mysqlctl.RefreshConfigRequest.verify|verify} messages.
         * @param message RefreshConfigRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: mysqlctl.IRefreshConfigRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RefreshConfigRequest message, length delimited. Does not implicitly {@link mysqlctl.RefreshConfigRequest.verify|verify} messages.
         * @param message RefreshConfigRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: mysqlctl.IRefreshConfigRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RefreshConfigRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RefreshConfigRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mysqlctl.RefreshConfigRequest;

        /**
         * Decodes a RefreshConfigRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RefreshConfigRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mysqlctl.RefreshConfigRequest;

        /**
         * Verifies a RefreshConfigRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RefreshConfigRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RefreshConfigRequest
         */
        public static fromObject(object: { [k: string]: any }): mysqlctl.RefreshConfigRequest;

        /**
         * Creates a plain object from a RefreshConfigRequest message. Also converts values to other types if specified.
         * @param message RefreshConfigRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: mysqlctl.RefreshConfigRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RefreshConfigRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RefreshConfigResponse. */
    interface IRefreshConfigResponse {
    }

    /** Represents a RefreshConfigResponse. */
    class RefreshConfigResponse implements IRefreshConfigResponse {

        /**
         * Constructs a new RefreshConfigResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: mysqlctl.IRefreshConfigResponse);

        /**
         * Creates a new RefreshConfigResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RefreshConfigResponse instance
         */
        public static create(properties?: mysqlctl.IRefreshConfigResponse): mysqlctl.RefreshConfigResponse;

        /**
         * Encodes the specified RefreshConfigResponse message. Does not implicitly {@link mysqlctl.RefreshConfigResponse.verify|verify} messages.
         * @param message RefreshConfigResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: mysqlctl.IRefreshConfigResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RefreshConfigResponse message, length delimited. Does not implicitly {@link mysqlctl.RefreshConfigResponse.verify|verify} messages.
         * @param message RefreshConfigResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: mysqlctl.IRefreshConfigResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RefreshConfigResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RefreshConfigResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mysqlctl.RefreshConfigResponse;

        /**
         * Decodes a RefreshConfigResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RefreshConfigResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mysqlctl.RefreshConfigResponse;

        /**
         * Verifies a RefreshConfigResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RefreshConfigResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RefreshConfigResponse
         */
        public static fromObject(object: { [k: string]: any }): mysqlctl.RefreshConfigResponse;

        /**
         * Creates a plain object from a RefreshConfigResponse message. Also converts values to other types if specified.
         * @param message RefreshConfigResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: mysqlctl.RefreshConfigResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RefreshConfigResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Represents a MysqlCtl */
    class MysqlCtl extends $protobuf.rpc.Service {

        /**
         * Constructs a new MysqlCtl service.
         * @param rpcImpl RPC implementation
         * @param [requestDelimited=false] Whether requests are length-delimited
         * @param [responseDelimited=false] Whether responses are length-delimited
         */
        constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

        /**
         * Creates new MysqlCtl service using the specified rpc implementation.
         * @param rpcImpl RPC implementation
         * @param [requestDelimited=false] Whether requests are length-delimited
         * @param [responseDelimited=false] Whether responses are length-delimited
         * @returns RPC service. Useful where requests and/or responses are streamed.
         */
        public static create(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean): MysqlCtl;

        /**
         * Calls Start.
         * @param request StartRequest message or plain object
         * @param callback Node-style callback called with the error, if any, and StartResponse
         */
        public start(request: mysqlctl.IStartRequest, callback: mysqlctl.MysqlCtl.StartCallback): void;

        /**
         * Calls Start.
         * @param request StartRequest message or plain object
         * @returns Promise
         */
        public start(request: mysqlctl.IStartRequest): Promise<mysqlctl.StartResponse>;

        /**
         * Calls Shutdown.
         * @param request ShutdownRequest message or plain object
         * @param callback Node-style callback called with the error, if any, and ShutdownResponse
         */
        public shutdown(request: mysqlctl.IShutdownRequest, callback: mysqlctl.MysqlCtl.ShutdownCallback): void;

        /**
         * Calls Shutdown.
         * @param request ShutdownRequest message or plain object
         * @returns Promise
         */
        public shutdown(request: mysqlctl.IShutdownRequest): Promise<mysqlctl.ShutdownResponse>;

        /**
         * Calls RunMysqlUpgrade.
         * @param request RunMysqlUpgradeRequest message or plain object
         * @param callback Node-style callback called with the error, if any, and RunMysqlUpgradeResponse
         */
        public runMysqlUpgrade(request: mysqlctl.IRunMysqlUpgradeRequest, callback: mysqlctl.MysqlCtl.RunMysqlUpgradeCallback): void;

        /**
         * Calls RunMysqlUpgrade.
         * @param request RunMysqlUpgradeRequest message or plain object
         * @returns Promise
         */
        public runMysqlUpgrade(request: mysqlctl.IRunMysqlUpgradeRequest): Promise<mysqlctl.RunMysqlUpgradeResponse>;

        /**
         * Calls ReinitConfig.
         * @param request ReinitConfigRequest message or plain object
         * @param callback Node-style callback called with the error, if any, and ReinitConfigResponse
         */
        public reinitConfig(request: mysqlctl.IReinitConfigRequest, callback: mysqlctl.MysqlCtl.ReinitConfigCallback): void;

        /**
         * Calls ReinitConfig.
         * @param request ReinitConfigRequest message or plain object
         * @returns Promise
         */
        public reinitConfig(request: mysqlctl.IReinitConfigRequest): Promise<mysqlctl.ReinitConfigResponse>;

        /**
         * Calls RefreshConfig.
         * @param request RefreshConfigRequest message or plain object
         * @param callback Node-style callback called with the error, if any, and RefreshConfigResponse
         */
        public refreshConfig(request: mysqlctl.IRefreshConfigRequest, callback: mysqlctl.MysqlCtl.RefreshConfigCallback): void;

        /**
         * Calls RefreshConfig.
         * @param request RefreshConfigRequest message or plain object
         * @returns Promise
         */
        public refreshConfig(request: mysqlctl.IRefreshConfigRequest): Promise<mysqlctl.RefreshConfigResponse>;
    }

    namespace MysqlCtl {

        /**
         * Callback as used by {@link mysqlctl.MysqlCtl#start}.
         * @param error Error, if any
         * @param [response] StartResponse
         */
        type StartCallback = (error: (Error|null), response?: mysqlctl.StartResponse) => void;

        /**
         * Callback as used by {@link mysqlctl.MysqlCtl#shutdown}.
         * @param error Error, if any
         * @param [response] ShutdownResponse
         */
        type ShutdownCallback = (error: (Error|null), response?: mysqlctl.ShutdownResponse) => void;

        /**
         * Callback as used by {@link mysqlctl.MysqlCtl#runMysqlUpgrade}.
         * @param error Error, if any
         * @param [response] RunMysqlUpgradeResponse
         */
        type RunMysqlUpgradeCallback = (error: (Error|null), response?: mysqlctl.RunMysqlUpgradeResponse) => void;

        /**
         * Callback as used by {@link mysqlctl.MysqlCtl#reinitConfig}.
         * @param error Error, if any
         * @param [response] ReinitConfigResponse
         */
        type ReinitConfigCallback = (error: (Error|null), response?: mysqlctl.ReinitConfigResponse) => void;

        /**
         * Callback as used by {@link mysqlctl.MysqlCtl#refreshConfig}.
         * @param error Error, if any
         * @param [response] RefreshConfigResponse
         */
        type RefreshConfigCallback = (error: (Error|null), response?: mysqlctl.RefreshConfigResponse) => void;
    }

    /** Properties of a BackupInfo. */
    interface IBackupInfo {

        /** BackupInfo name */
        name?: (string|null);

        /** BackupInfo directory */
        directory?: (string|null);
    }

    /** Represents a BackupInfo. */
    class BackupInfo implements IBackupInfo {

        /**
         * Constructs a new BackupInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: mysqlctl.IBackupInfo);

        /** BackupInfo name. */
        public name: string;

        /** BackupInfo directory. */
        public directory: string;

        /**
         * Creates a new BackupInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BackupInfo instance
         */
        public static create(properties?: mysqlctl.IBackupInfo): mysqlctl.BackupInfo;

        /**
         * Encodes the specified BackupInfo message. Does not implicitly {@link mysqlctl.BackupInfo.verify|verify} messages.
         * @param message BackupInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: mysqlctl.IBackupInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BackupInfo message, length delimited. Does not implicitly {@link mysqlctl.BackupInfo.verify|verify} messages.
         * @param message BackupInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: mysqlctl.IBackupInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BackupInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BackupInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mysqlctl.BackupInfo;

        /**
         * Decodes a BackupInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BackupInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mysqlctl.BackupInfo;

        /**
         * Verifies a BackupInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BackupInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BackupInfo
         */
        public static fromObject(object: { [k: string]: any }): mysqlctl.BackupInfo;

        /**
         * Creates a plain object from a BackupInfo message. Also converts values to other types if specified.
         * @param message BackupInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: mysqlctl.BackupInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BackupInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}
